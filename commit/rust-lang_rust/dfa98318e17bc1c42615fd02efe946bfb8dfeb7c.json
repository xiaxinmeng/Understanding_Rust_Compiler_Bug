{"sha": "dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmYTk4MzE4ZTE3YmMxYzQyNjE1ZmQwMmVmZTk0NmJmYjhkZmViN2M=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2018-05-12T09:33:33Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2018-05-16T11:58:41Z"}, "message": "Add feature gate label_break_value", "tree": {"sha": "c4e25fb0294442bd8d531e037b7673e16daa6f0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4e25fb0294442bd8d531e037b7673e16daa6f0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "html_url": "https://github.com/rust-lang/rust/commit/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "128f2b5870cb5e6a01ec06bbee4f150b4ca6c19d", "url": "https://api.github.com/repos/rust-lang/rust/commits/128f2b5870cb5e6a01ec06bbee4f150b4ca6c19d", "html_url": "https://github.com/rust-lang/rust/commit/128f2b5870cb5e6a01ec06bbee4f150b4ca6c19d"}], "stats": {"total": 64, "additions": 54, "deletions": 10}, "files": [{"sha": "d031694d85308a1d1cbc97f9aaec3f21a2540acf", "filename": "src/librustc_passes/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Flibrustc_passes%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Flibrustc_passes%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdiagnostics.rs?ref=dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "patch": "@@ -278,6 +278,7 @@ loop {\n Make sure to always label the `break`:\n \n ```\n+# #![feature(label_break_value)]\n 'l: loop {\n     'a: {\n         break 'l;"}, {"sha": "f1229520c77434e7d428e5a36407fdddf4003b1d", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "patch": "@@ -466,6 +466,9 @@ declare_features! (\n \n     // inconsistent bounds in where clauses\n     (active, trivial_bounds, \"1.28.0\", Some(48214), None),\n+\n+    // 'a: { break 'a; }\n+    (active, label_break_value, \"1.28.0\", Some(48594), None),\n );\n \n declare_features! (\n@@ -1696,6 +1699,12 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                                     \"multiple patterns in `if let` and `while let` are unstable\");\n                 }\n             }\n+            ast::ExprKind::Block(_, opt_label) => {\n+                if let Some(label) = opt_label {\n+                    gate_feature_post!(&self, label_break_value, label.ident.span,\n+                                    \"labels on blocks are unstable\");\n+                }\n+            }\n             _ => {}\n         }\n         visit::walk_expr(self, e);"}, {"sha": "444845e24dc7d34f1987d09ad331ba17eccb08ea", "filename": "src/test/run-pass/label_break_value.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Frun-pass%2Flabel_break_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Frun-pass%2Flabel_break_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flabel_break_value.rs?ref=dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(label_break_value)]\n+\n // Test control flow to follow label_break_value semantics\n fn label_break(a: bool, b: bool) -> u32 {\n     let mut v = 0;"}, {"sha": "dcda7580bda410fc316e0be925d35727409f8e72", "filename": "src/test/ui/feature-gate-label_break_value.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Ffeature-gate-label_break_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Ffeature-gate-label_break_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-label_break_value.rs?ref=dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn main() {\n+    'a: { //~ ERROR labels on blocks are unstable\n+        break 'a;\n+    }\n+}"}, {"sha": "8e8f31e78713306b4a046c9656cd824920826a69", "filename": "src/test/ui/feature-gate-label_break_value.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Ffeature-gate-label_break_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Ffeature-gate-label_break_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-label_break_value.stderr?ref=dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "patch": "@@ -0,0 +1,11 @@\n+error[E0658]: labels on blocks are unstable (see issue #48594)\n+  --> $DIR/feature-gate-label_break_value.rs:12:5\n+   |\n+LL |     'a: { //~ ERROR labels on blocks are unstable\n+   |     ^^\n+   |\n+   = help: add #![feature(label_break_value)] to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "52e24b759d1d21bca8f549e05b2ee4871ac1ea83", "filename": "src/test/ui/label_break_value_continue.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Flabel_break_value_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Flabel_break_value_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel_break_value_continue.rs?ref=dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(label_break_value)]\n+\n // Simple continue pointing to an unlabeled break should yield in an error\n fn continue_simple() {\n     'b: {"}, {"sha": "24c2d1a22d01cc751b169658433075570681d70f", "filename": "src/test/ui/label_break_value_continue.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Flabel_break_value_continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Flabel_break_value_continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel_break_value_continue.stderr?ref=dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "patch": "@@ -1,25 +1,25 @@\n error[E0695]: unlabeled `continue` inside of a labeled block\n-  --> $DIR/label_break_value_continue.rs:14:9\n+  --> $DIR/label_break_value_continue.rs:16:9\n    |\n LL |         continue; //~ ERROR unlabeled `continue` inside of a labeled block\n    |         ^^^^^^^^ `continue` statements that would diverge to or through a labeled block need to bear a label\n \n error[E0696]: `continue` pointing to a labeled block\n-  --> $DIR/label_break_value_continue.rs:21:9\n+  --> $DIR/label_break_value_continue.rs:23:9\n    |\n LL |         continue 'b; //~ ERROR `continue` pointing to a labeled block\n    |         ^^^^^^^^^^^ labeled blocks cannot be `continue`'d\n    |\n note: labeled block the continue points to\n-  --> $DIR/label_break_value_continue.rs:20:5\n+  --> $DIR/label_break_value_continue.rs:22:5\n    |\n LL | /     'b: {\n LL | |         continue 'b; //~ ERROR `continue` pointing to a labeled block\n LL | |     }\n    | |_____^\n \n error[E0695]: unlabeled `continue` inside of a labeled block\n-  --> $DIR/label_break_value_continue.rs:29:13\n+  --> $DIR/label_break_value_continue.rs:31:13\n    |\n LL |             continue; //~ ERROR unlabeled `continue` inside of a labeled block\n    |             ^^^^^^^^ `continue` statements that would diverge to or through a labeled block need to bear a label"}, {"sha": "18644033e4ff885b26d04ad9bfa3c70477696114", "filename": "src/test/ui/label_break_value_illegal_uses.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Flabel_break_value_illegal_uses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Flabel_break_value_illegal_uses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel_break_value_illegal_uses.rs?ref=dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(label_break_value)]\n+\n // These are forbidden occurences of label-break-value\n \n fn labeled_unsafe() {"}, {"sha": "0ab1ad2c24200360595147b43f83da6a71ffeb79", "filename": "src/test/ui/label_break_value_illegal_uses.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Flabel_break_value_illegal_uses.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Flabel_break_value_illegal_uses.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel_break_value_illegal_uses.stderr?ref=dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "patch": "@@ -1,11 +1,11 @@\n error: expected one of `extern`, `fn`, or `{`, found `'b`\n-  --> $DIR/label_break_value_illegal_uses.rs:14:12\n+  --> $DIR/label_break_value_illegal_uses.rs:16:12\n    |\n LL |     unsafe 'b: {} //~ ERROR expected one of `extern`, `fn`, or `{`\n    |            ^^ expected one of `extern`, `fn`, or `{` here\n \n error: expected `{`, found `'b`\n-  --> $DIR/label_break_value_illegal_uses.rs:18:13\n+  --> $DIR/label_break_value_illegal_uses.rs:20:13\n    |\n LL |     if true 'b: {} //~ ERROR expected `{`, found `'b`\n    |     --      ^^----\n@@ -14,15 +14,15 @@ LL |     if true 'b: {} //~ ERROR expected `{`, found `'b`\n    |     this `if` statement has a condition, but no block\n \n error: expected `{`, found `'b`\n-  --> $DIR/label_break_value_illegal_uses.rs:22:21\n+  --> $DIR/label_break_value_illegal_uses.rs:24:21\n    |\n LL |     if true {} else 'b: {} //~ ERROR expected `{`, found `'b`\n    |                     ^^----\n    |                     |\n    |                     help: try placing this code inside a block: `{ 'b: { } }`\n \n error: expected one of `.`, `?`, `{`, or an operator, found `'b`\n-  --> $DIR/label_break_value_illegal_uses.rs:26:17\n+  --> $DIR/label_break_value_illegal_uses.rs:28:17\n    |\n LL |     match false 'b: {} //~ ERROR expected one of `.`, `?`, `{`, or an operator\n    |                 ^^ expected one of `.`, `?`, `{`, or an operator here"}, {"sha": "38918da291c8662d7e3d0663baa08f325c808338", "filename": "src/test/ui/label_break_value_unlabeled_break.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.rs?ref=dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(label_break_value)]\n+\n // Simple unlabeled break should yield in an error\n fn unlabeled_break_simple() {\n     'b: {"}, {"sha": "8a25975a7bda2bb6eae4ba276e86c9b32df608ba", "filename": "src/test/ui/label_break_value_unlabeled_break.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfa98318e17bc1c42615fd02efe946bfb8dfeb7c/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.stderr?ref=dfa98318e17bc1c42615fd02efe946bfb8dfeb7c", "patch": "@@ -1,11 +1,11 @@\n error[E0695]: unlabeled `break` inside of a labeled block\n-  --> $DIR/label_break_value_unlabeled_break.rs:14:9\n+  --> $DIR/label_break_value_unlabeled_break.rs:16:9\n    |\n LL |         break; //~ ERROR unlabeled `break` inside of a labeled block\n    |         ^^^^^ `break` statements that would diverge to or through a labeled block need to bear a label\n \n error[E0695]: unlabeled `break` inside of a labeled block\n-  --> $DIR/label_break_value_unlabeled_break.rs:22:13\n+  --> $DIR/label_break_value_unlabeled_break.rs:24:13\n    |\n LL |             break; //~ ERROR unlabeled `break` inside of a labeled block\n    |             ^^^^^ `break` statements that would diverge to or through a labeled block need to bear a label"}]}