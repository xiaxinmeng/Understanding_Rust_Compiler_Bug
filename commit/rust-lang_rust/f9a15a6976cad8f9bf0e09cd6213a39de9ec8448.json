{"sha": "f9a15a6976cad8f9bf0e09cd6213a39de9ec8448", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5YTE1YTY5NzZjYWQ4ZjliZjBlMDljZDYyMTNhMzlkZTllYzg0NDg=", "commit": {"author": {"name": "kud1ing", "email": "github@kudling.de", "date": "2013-05-16T10:22:43Z"}, "committer": {"name": "kud1ing", "email": "github@kudling.de", "date": "2013-05-16T10:22:43Z"}, "message": "main() is in ./rustc.rc. use \"./../\" pattern some more", "tree": {"sha": "7a130ff4adc36f3d177cbe1147a20894491e8d5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a130ff4adc36f3d177cbe1147a20894491e8d5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9a15a6976cad8f9bf0e09cd6213a39de9ec8448", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9a15a6976cad8f9bf0e09cd6213a39de9ec8448", "html_url": "https://github.com/rust-lang/rust/commit/f9a15a6976cad8f9bf0e09cd6213a39de9ec8448", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9a15a6976cad8f9bf0e09cd6213a39de9ec8448/comments", "author": null, "committer": null, "parents": [{"sha": "c081ffbd1e845687202a975ea2e698b623e5722f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c081ffbd1e845687202a975ea2e698b623e5722f", "html_url": "https://github.com/rust-lang/rust/commit/c081ffbd1e845687202a975ea2e698b623e5722f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6d4a8157f117987fd6523dda83b9fcb49d7cb3ce", "filename": "src/librustc/README.txt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f9a15a6976cad8f9bf0e09cd6213a39de9ec8448/src%2Flibrustc%2FREADME.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f9a15a6976cad8f9bf0e09cd6213a39de9ec8448/src%2Flibrustc%2FREADME.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FREADME.txt?ref=f9a15a6976cad8f9bf0e09cd6213a39de9ec8448", "patch": "@@ -35,19 +35,19 @@ ASTs -- are in a separate crate called \"syntax\", whose files are in\n ./../libsyntax, where . is the current directory (that is, the parent\n directory of front/, middle/, back/, and so on).\n \n-The entry-point for the compiler is main() in driver/rustc.rs, and\n+The entry-point for the compiler is main() in rustc.rc, and\n this file sequences the various parts together.\n \n \n The 3 central data structures:\n ------------------------------\n \n-#1: ../libsyntax/ast.rs defines the AST. The AST is treated as immutable\n+#1: ./../libsyntax/ast.rs defines the AST. The AST is treated as immutable\n     after parsing, but it depends on mutable context data structures\n     (mainly hash maps) to give it meaning.\n \n       - Many -- though not all -- nodes within this data structure are\n-        wrapped in the type spanned<T>, meaning that the front-end has\n+        wrapped in the type `spanned<T>`, meaning that the front-end has\n         marked the input coordinates of that node. The member .node is\n         the data itself, the member .span is the input location (file,\n         line, column; both low and high).\n@@ -78,7 +78,7 @@ Control and information flow within the compiler:\n - main() in rustc.rc assumes control on startup. Options are\n   parsed, platform is detected, etc.\n \n-- libsyntax/parse/parser.rs parses the input files and produces an AST\n+- ./../libsyntax/parse/parser.rs parses the input files and produces an AST\n   that represents the input crate.\n \n - Multiple middle-end passes (middle/resolve.rs, middle/typeck.rs)"}]}