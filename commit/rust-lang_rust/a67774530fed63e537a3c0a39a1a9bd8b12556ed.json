{"sha": "a67774530fed63e537a3c0a39a1a9bd8b12556ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2Nzc3NDUzMGZlZDYzZTUzN2EzYzBhMzlhMWE5YmQ4YjEyNTU2ZWQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-05-09T15:15:13Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-05-09T15:15:13Z"}, "message": "Don't trigger some lints inside macros", "tree": {"sha": "5cf585e1e7b3eaf7c83160475c7313b12bb8d710", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cf585e1e7b3eaf7c83160475c7313b12bb8d710"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a67774530fed63e537a3c0a39a1a9bd8b12556ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a67774530fed63e537a3c0a39a1a9bd8b12556ed", "html_url": "https://github.com/rust-lang/rust/commit/a67774530fed63e537a3c0a39a1a9bd8b12556ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a67774530fed63e537a3c0a39a1a9bd8b12556ed/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2dab198fa85a3f42f33ba4786a66cd8774d55cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2dab198fa85a3f42f33ba4786a66cd8774d55cd", "html_url": "https://github.com/rust-lang/rust/commit/d2dab198fa85a3f42f33ba4786a66cd8774d55cd"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "c1cbcfb6ddde57f94f1ae906f328af72322dcde1", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a67774530fed63e537a3c0a39a1a9bd8b12556ed/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a67774530fed63e537a3c0a39a1a9bd8b12556ed/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=a67774530fed63e537a3c0a39a1a9bd8b12556ed", "patch": "@@ -267,6 +267,9 @@ impl EarlyLintPass for MiscEarly {\n     }\n \n     fn check_expr(&mut self, cx: &EarlyContext, expr: &Expr) {\n+        if in_external_macro(cx, expr.span) {\n+            return;\n+        }\n         match expr.node {\n             ExprKind::Call(ref paren, _) => {\n                 if let ExprKind::Paren(ref closure) = paren.node {"}]}