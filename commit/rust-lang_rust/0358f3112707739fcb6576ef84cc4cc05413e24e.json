{"sha": "0358f3112707739fcb6576ef84cc4cc05413e24e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNThmMzExMjcwNzczOWZjYjY1NzZlZjg0Y2M0Y2MwNTQxM2UyNGU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-29T15:14:27Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-29T15:14:27Z"}, "message": "rollup merge of #17598 : bkoropoff/issue-17441", "tree": {"sha": "0350e725d029177b1ceaf5787038f45254ab53e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0350e725d029177b1ceaf5787038f45254ab53e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0358f3112707739fcb6576ef84cc4cc05413e24e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0358f3112707739fcb6576ef84cc4cc05413e24e", "html_url": "https://github.com/rust-lang/rust/commit/0358f3112707739fcb6576ef84cc4cc05413e24e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0358f3112707739fcb6576ef84cc4cc05413e24e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7784a8d39773517da476a19562cea0ef0cd36eab", "url": "https://api.github.com/repos/rust-lang/rust/commits/7784a8d39773517da476a19562cea0ef0cd36eab", "html_url": "https://github.com/rust-lang/rust/commit/7784a8d39773517da476a19562cea0ef0cd36eab"}, {"sha": "69d570fbec565a565e0e79b5ce3bfc638d4b83c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/69d570fbec565a565e0e79b5ce3bfc638d4b83c1", "html_url": "https://github.com/rust-lang/rust/commit/69d570fbec565a565e0e79b5ce3bfc638d4b83c1"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "d4c38d48a8c561584c9acfae9250d2e6f7cb80de", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/0358f3112707739fcb6576ef84cc4cc05413e24e/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0358f3112707739fcb6576ef84cc4cc05413e24e/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=0358f3112707739fcb6576ef84cc4cc05413e24e", "patch": "@@ -1405,6 +1405,37 @@ fn check_cast(fcx: &FnCtxt,\n         return\n     }\n \n+    if !ty::type_is_sized(fcx.tcx(), t_1) {\n+        let tstr = fcx.infcx().ty_to_string(t_1);\n+        fcx.type_error_message(span, |actual| {\n+            format!(\"cast to unsized type: `{}` as `{}`\", actual, tstr)\n+        }, t_e, None);\n+        match ty::get(t_e).sty {\n+            ty::ty_rptr(_, ty::mt { mutbl: mt, .. }) => {\n+                let mtstr = match mt {\n+                    ast::MutMutable => \"mut \",\n+                    ast::MutImmutable => \"\"\n+                };\n+                if ty::type_is_trait(t_1) {\n+                    span_note!(fcx.tcx().sess, t.span, \"did you mean `&{}{}`?\", mtstr, tstr);\n+                } else {\n+                    span_note!(fcx.tcx().sess, span,\n+                               \"consider using an implicit coercion to `&{}{}` instead\",\n+                               mtstr, tstr);\n+                }\n+            }\n+            ty::ty_uniq(..) => {\n+                span_note!(fcx.tcx().sess, t.span, \"did you mean `Box<{}>`?\", tstr);\n+            }\n+            _ => {\n+                span_note!(fcx.tcx().sess, e.span,\n+                           \"consider using a box or reference as appropriate\");\n+            }\n+        }\n+        fcx.write_error(id);\n+        return\n+    }\n+\n     if ty::type_is_trait(t_1) {\n         // This will be looked up later on.\n         vtable2::check_object_cast(fcx, cast_expr, e, t_1);"}, {"sha": "da548ca5ffe3e67dd61135b01aae97e87a8aab85", "filename": "src/test/compile-fail/issue-17441.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0358f3112707739fcb6576ef84cc4cc05413e24e/src%2Ftest%2Fcompile-fail%2Fissue-17441.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0358f3112707739fcb6576ef84cc4cc05413e24e/src%2Ftest%2Fcompile-fail%2Fissue-17441.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17441.rs?ref=0358f3112707739fcb6576ef84cc4cc05413e24e", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let _foo = &[1u, 2] as [uint];\n+    //~^ ERROR cast to unsized type: `&[uint, .. 2]` as `[uint]`\n+    //~^^ NOTE consider using an implicit coercion to `&[uint]` instead\n+    let _bar = box 1u as std::fmt::Show;\n+    //~^ ERROR cast to unsized type: `Box<uint>` as `core::fmt::Show`\n+    //~^^ NOTE did you mean `Box<core::fmt::Show>`?\n+    let _baz = 1u as std::fmt::Show;\n+    //~^ ERROR cast to unsized type: `uint` as `core::fmt::Show`\n+    //~^^ NOTE consider using a box or reference as appropriate\n+    let _quux = [1u, 2] as [uint];\n+    //~^ ERROR cast to unsized type: `[uint, .. 2]` as `[uint]`\n+    //~^^ NOTE consider using a box or reference as appropriate\n+}"}]}