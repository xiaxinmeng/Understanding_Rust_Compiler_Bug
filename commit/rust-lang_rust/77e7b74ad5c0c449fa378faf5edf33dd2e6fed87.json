{"sha": "77e7b74ad5c0c449fa378faf5edf33dd2e6fed87", "node_id": "C_kwDOAAsO6NoAKDc3ZTdiNzRhZDVjMGM0NDlmYTM3OGZhZjVlZGYzM2RkMmU2ZmVkODc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-28T16:27:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-28T16:27:56Z"}, "message": "Auto merge of #103071 - wesleywiser:fix_inlined_line_numbers, r=davidtwco\n\nFix line numbers for MIR inlined code\n\n`should_collapse_debuginfo` detects if the specified span is part of a\nmacro expansion however it does this by checking if the span is anything\nother than a normal (non-expanded) kind, then the span sequence is\nwalked backwards to the root span.\n\nThis doesn't work when the MIR inliner inlines code as it creates spans\nwith expansion information set to `ExprKind::Inlined` and results in the\nline number being attributed to the inline callsite rather than the\nnormal line number of the inlined code.\n\nFixes #103068", "tree": {"sha": "b87d8338fb7271b80cab290bb918e7d5e4413907", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b87d8338fb7271b80cab290bb918e7d5e4413907"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77e7b74ad5c0c449fa378faf5edf33dd2e6fed87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77e7b74ad5c0c449fa378faf5edf33dd2e6fed87", "html_url": "https://github.com/rust-lang/rust/commit/77e7b74ad5c0c449fa378faf5edf33dd2e6fed87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77e7b74ad5c0c449fa378faf5edf33dd2e6fed87/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5237c4d83db0a04a0119918b174ee642acd82d9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5237c4d83db0a04a0119918b174ee642acd82d9c", "html_url": "https://github.com/rust-lang/rust/commit/5237c4d83db0a04a0119918b174ee642acd82d9c"}, {"sha": "34d90a46dac95d6f09cd8851b71b43350eecda4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/34d90a46dac95d6f09cd8851b71b43350eecda4d", "html_url": "https://github.com/rust-lang/rust/commit/34d90a46dac95d6f09cd8851b71b43350eecda4d"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "d90db6dbb7d94e53c0f80c31f2cd38006816dbc0", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77e7b74ad5c0c449fa378faf5edf33dd2e6fed87/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e7b74ad5c0c449fa378faf5edf33dd2e6fed87/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=77e7b74ad5c0c449fa378faf5edf33dd2e6fed87", "patch": "@@ -2604,7 +2604,9 @@ impl<'tcx> TyCtxt<'tcx> {\n             && if self.features().collapse_debuginfo {\n                 span.in_macro_expansion_with_collapse_debuginfo()\n             } else {\n-                span.from_expansion()\n+                // Inlined spans should not be collapsed as that leads to all of the\n+                // inlined code being attributed to the inline callsite.\n+                span.from_expansion() && !span.is_inlined()\n             }\n     }\n "}, {"sha": "322c7104be425966930a74ff37dfb7d0219b14b5", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/77e7b74ad5c0c449fa378faf5edf33dd2e6fed87/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e7b74ad5c0c449fa378faf5edf33dd2e6fed87/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=77e7b74ad5c0c449fa378faf5edf33dd2e6fed87", "patch": "@@ -558,7 +558,7 @@ impl Span {\n         self.data_untracked().is_dummy()\n     }\n \n-    /// Returns `true` if this span comes from a macro or desugaring.\n+    /// Returns `true` if this span comes from any kind of macro, desugaring or inlining.\n     #[inline]\n     pub fn from_expansion(self) -> bool {\n         self.ctxt() != SyntaxContext::root()\n@@ -571,6 +571,12 @@ impl Span {\n         matches!(outer_expn.kind, ExpnKind::Macro(..)) && outer_expn.collapse_debuginfo\n     }\n \n+    /// Returns `true` if this span comes from MIR inlining.\n+    pub fn is_inlined(self) -> bool {\n+        let outer_expn = self.ctxt().outer_expn_data();\n+        matches!(outer_expn.kind, ExpnKind::Inlined)\n+    }\n+\n     /// Returns `true` if `span` originates in a derive-macro's expansion.\n     pub fn in_derive_expansion(self) -> bool {\n         matches!(self.ctxt().outer_expn_data().kind, ExpnKind::Macro(MacroKind::Derive, _))"}, {"sha": "19d83f0eee7c472b8b2339560cd029dfc2c4dbe4", "filename": "src/test/codegen/mir-inlined-line-numbers.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/77e7b74ad5c0c449fa378faf5edf33dd2e6fed87/src%2Ftest%2Fcodegen%2Fmir-inlined-line-numbers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e7b74ad5c0c449fa378faf5edf33dd2e6fed87/src%2Ftest%2Fcodegen%2Fmir-inlined-line-numbers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fmir-inlined-line-numbers.rs?ref=77e7b74ad5c0c449fa378faf5edf33dd2e6fed87", "patch": "@@ -0,0 +1,25 @@\n+// compile-flags: -O -g\n+\n+#![crate_type = \"lib\"]\n+\n+#[inline(always)]\n+fn foo() {\n+    bar();\n+}\n+\n+#[inline(never)]\n+#[no_mangle]\n+fn bar() {\n+    panic!();\n+}\n+\n+#[no_mangle]\n+pub fn example() {\n+    foo();\n+}\n+\n+// CHECK-LABEL: @example\n+// CHECK:   tail call void @bar(), !dbg [[DBG_ID:![0-9]+]]\n+// CHECK: [[DBG_ID]] = !DILocation(line: 7,\n+// CHECK-SAME:                     inlinedAt: [[INLINE_ID:![0-9]+]])\n+// CHECK: [[INLINE_ID]] = !DILocation(line: 18,"}]}