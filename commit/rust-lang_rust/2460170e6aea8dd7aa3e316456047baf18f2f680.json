{"sha": "2460170e6aea8dd7aa3e316456047baf18f2f680", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NjAxNzBlNmFlYThkZDdhYTNlMzE2NDU2MDQ3YmFmMThmMmY2ODA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-02T10:52:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-02T10:52:51Z"}, "message": "auto merge of #8188 : huonw/rust/cfg-macro, r=pcwalton\n\nExample:\r\n\r\n    if cfg!(test) {\r\n       calculation_to_run_only_when_testing();\r\n    }\r\n\r\nCloses #8130.", "tree": {"sha": "6a90b461f7328987caa9bbf3c4b9caa49e092adc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a90b461f7328987caa9bbf3c4b9caa49e092adc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2460170e6aea8dd7aa3e316456047baf18f2f680", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2460170e6aea8dd7aa3e316456047baf18f2f680", "html_url": "https://github.com/rust-lang/rust/commit/2460170e6aea8dd7aa3e316456047baf18f2f680", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2460170e6aea8dd7aa3e316456047baf18f2f680/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbde42e59e6854979085f3b8a949f307b4da8ffa", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbde42e59e6854979085f3b8a949f307b4da8ffa", "html_url": "https://github.com/rust-lang/rust/commit/dbde42e59e6854979085f3b8a949f307b4da8ffa"}, {"sha": "e995d9935b5bccb484db85b75a344258e74f21a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e995d9935b5bccb484db85b75a344258e74f21a5", "html_url": "https://github.com/rust-lang/rust/commit/e995d9935b5bccb484db85b75a344258e74f21a5"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "1dda2493da20a86c57417fa3857fa34fefa24ff0", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2460170e6aea8dd7aa3e316456047baf18f2f680/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2460170e6aea8dd7aa3e316456047baf18f2f680/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=2460170e6aea8dd7aa3e316456047baf18f2f680", "patch": "@@ -199,6 +199,8 @@ pub fn syntax_expander_table() -> SyntaxEnv {\n                                 ext::source_util::expand_mod));\n     syntax_expanders.insert(intern(&\"asm\"),\n                             builtin_normal_tt(ext::asm::expand_asm));\n+    syntax_expanders.insert(intern(&\"cfg\"),\n+                            builtin_normal_tt(ext::cfg::expand_cfg));\n     syntax_expanders.insert(\n         intern(&\"trace_macros\"),\n         builtin_normal_tt(ext::trace_macros::expand_trace_macros));"}, {"sha": "069cac0103677f1b9bb3ce0d32763d77cdd18aae", "filename": "src/libsyntax/ext/cfg.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/2460170e6aea8dd7aa3e316456047baf18f2f680/src%2Flibsyntax%2Fext%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2460170e6aea8dd7aa3e316456047baf18f2f680/src%2Flibsyntax%2Fext%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fcfg.rs?ref=2460170e6aea8dd7aa3e316456047baf18f2f680", "patch": "@@ -0,0 +1,45 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+/**\n+The compiler code necessary to support the cfg! extension, which\n+expands to a literal `true` or `false` based on whether the given cfgs\n+match the current compilation environment.\n+*/\n+\n+use ast;\n+use codemap::span;\n+use ext::base::*;\n+use ext::base;\n+use ext::build::AstBuilder;\n+use attr;\n+use attr::*;\n+use parse;\n+use parse::token;\n+use parse::attr::parser_attr;\n+\n+pub fn expand_cfg(cx: @ExtCtxt, sp: span, tts: &[ast::token_tree]) -> base::MacResult {\n+    let p = parse::new_parser_from_tts(cx.parse_sess(), cx.cfg(), tts.to_owned());\n+\n+    let mut cfgs = ~[];\n+    // parse `cfg!(meta_item, meta_item(x,y), meta_item=\"foo\", ...)`\n+    while *p.token != token::EOF {\n+        cfgs.push(p.parse_meta_item());\n+        if p.eat(&token::EOF) { break } // trailing comma is optional,.\n+        p.expect(&token::COMMA);\n+    }\n+\n+    // test_cfg searches for meta items looking like `cfg(foo, ...)`\n+    let in_cfg = &[cx.meta_list(sp, @\"cfg\", cfgs)];\n+\n+    let matches_cfg = attr::test_cfg(cx.cfg(), in_cfg.iter().transform(|&x| x));\n+    let e = cx.expr_bool(sp, matches_cfg);\n+    MRExpr(e)\n+}"}, {"sha": "4d604faa6e1c4dc0dc95f8eff80f852e1f3b52ab", "filename": "src/libsyntax/syntax.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2460170e6aea8dd7aa3e316456047baf18f2f680/src%2Flibsyntax%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2460170e6aea8dd7aa3e316456047baf18f2f680/src%2Flibsyntax%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsyntax.rs?ref=2460170e6aea8dd7aa3e316456047baf18f2f680", "patch": "@@ -70,6 +70,7 @@ pub mod ext {\n     }\n \n \n+    pub mod cfg;\n     pub mod fmt;\n     pub mod env;\n     pub mod bytes;"}, {"sha": "321929207f7a6ccd4fc11128034ef6b1653383cd", "filename": "src/test/run-pass/syntax-extension-cfg.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/2460170e6aea8dd7aa3e316456047baf18f2f680/src%2Ftest%2Frun-pass%2Fsyntax-extension-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2460170e6aea8dd7aa3e316456047baf18f2f680/src%2Ftest%2Frun-pass%2Fsyntax-extension-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-cfg.rs?ref=2460170e6aea8dd7aa3e316456047baf18f2f680", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-fast compile-flags doesn't work with fast-check\n+// compile-flags: --cfg foo --cfg bar(baz) --cfg qux=\"foo\"\n+\n+fn main() {\n+    // check\n+    if ! cfg!(foo) { fail!() }\n+    if   cfg!(not(foo)) { fail!() }\n+\n+    if ! cfg!(bar(baz)) { fail!() }\n+    if   cfg!(not(bar(baz))) { fail!() }\n+\n+    if ! cfg!(qux=\"foo\") { fail!() }\n+    if   cfg!(not(qux=\"foo\")) { fail!() }\n+\n+    if ! cfg!(foo, bar(baz), qux=\"foo\") { fail!() }\n+    if   cfg!(not(foo, bar(baz), qux=\"foo\")) { fail!() }\n+\n+    if cfg!(not_a_cfg) { fail!() }\n+    if cfg!(not_a_cfg, foo, bar(baz), qux=\"foo\") { fail!() }\n+\n+    if ! cfg!(not(not_a_cfg)) { fail!() }\n+    if ! cfg!(not(not_a_cfg), foo, bar(baz), qux=\"foo\") { fail!() }\n+\n+    if cfg!(trailing_comma, ) { fail!() }\n+}"}]}