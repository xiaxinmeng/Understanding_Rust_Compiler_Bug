{"sha": "a0d66b54fb3acc2125972b88ff543a2c04d14af5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwZDY2YjU0ZmIzYWNjMjEyNTk3MmI4OGZmNTQzYTJjMDRkMTRhZjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-05T05:28:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-05T05:28:07Z"}, "message": "Auto merge of #71481 - estebank:inherit-stability, r=nikomatsakis\n\nInherit `#[stable(..)]` annotations in enum variants and fields from its item\n\nLint changes for #65515. The stdlib will have to be updated once this lands in beta and that version is promoted in master.", "tree": {"sha": "6568cffed3d2ae4f49c498bdbd59f8b92162f5f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6568cffed3d2ae4f49c498bdbd59f8b92162f5f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0d66b54fb3acc2125972b88ff543a2c04d14af5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0d66b54fb3acc2125972b88ff543a2c04d14af5", "html_url": "https://github.com/rust-lang/rust/commit/a0d66b54fb3acc2125972b88ff543a2c04d14af5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0d66b54fb3acc2125972b88ff543a2c04d14af5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45b3c28518e4c45dfd12bc2c4400c0d0e9639927", "url": "https://api.github.com/repos/rust-lang/rust/commits/45b3c28518e4c45dfd12bc2c4400c0d0e9639927", "html_url": "https://github.com/rust-lang/rust/commit/45b3c28518e4c45dfd12bc2c4400c0d0e9639927"}, {"sha": "49310cee30510170946561814c0a87b4dc8e667d", "url": "https://api.github.com/repos/rust-lang/rust/commits/49310cee30510170946561814c0a87b4dc8e667d", "html_url": "https://github.com/rust-lang/rust/commit/49310cee30510170946561814c0a87b4dc8e667d"}], "stats": {"total": 478, "additions": 290, "deletions": 188}, "files": [{"sha": "e58b266fdb9e19d970bd694b998ce8ae96526892", "filename": "compiler/rustc_attr/src/builtin.rs", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -176,23 +176,24 @@ pub fn find_stability(\n     sess: &Session,\n     attrs: &[Attribute],\n     item_sp: Span,\n-) -> (Option<Stability>, Option<ConstStability>) {\n+) -> (Option<(Stability, Span)>, Option<(ConstStability, Span)>) {\n     find_stability_generic(sess, attrs.iter(), item_sp)\n }\n \n fn find_stability_generic<'a, I>(\n     sess: &Session,\n     attrs_iter: I,\n     item_sp: Span,\n-) -> (Option<Stability>, Option<ConstStability>)\n+) -> (Option<(Stability, Span)>, Option<(ConstStability, Span)>)\n where\n     I: Iterator<Item = &'a Attribute>,\n {\n     use StabilityLevel::*;\n \n-    let mut stab: Option<Stability> = None;\n-    let mut const_stab: Option<ConstStability> = None;\n+    let mut stab: Option<(Stability, Span)> = None;\n+    let mut const_stab: Option<(ConstStability, Span)> = None;\n     let mut promotable = false;\n+\n     let diagnostic = &sess.parse_sess.span_diagnostic;\n \n     'outer: for attr in attrs_iter {\n@@ -356,10 +357,12 @@ where\n                             }\n                             let level = Unstable { reason, issue: issue_num, is_soft };\n                             if sym::unstable == meta_name {\n-                                stab = Some(Stability { level, feature });\n+                                stab = Some((Stability { level, feature }, attr.span));\n                             } else {\n-                                const_stab =\n-                                    Some(ConstStability { level, feature, promotable: false });\n+                                const_stab = Some((\n+                                    ConstStability { level, feature, promotable: false },\n+                                    attr.span,\n+                                ));\n                             }\n                         }\n                         (None, _, _) => {\n@@ -432,10 +435,12 @@ where\n                         (Some(feature), Some(since)) => {\n                             let level = Stable { since };\n                             if sym::stable == meta_name {\n-                                stab = Some(Stability { level, feature });\n+                                stab = Some((Stability { level, feature }, attr.span));\n                             } else {\n-                                const_stab =\n-                                    Some(ConstStability { level, feature, promotable: false });\n+                                const_stab = Some((\n+                                    ConstStability { level, feature, promotable: false },\n+                                    attr.span,\n+                                ));\n                             }\n                         }\n                         (None, _) => {\n@@ -455,7 +460,7 @@ where\n \n     // Merge the const-unstable info into the stability info\n     if promotable {\n-        if let Some(ref mut stab) = const_stab {\n+        if let Some((ref mut stab, _)) = const_stab {\n             stab.promotable = promotable;\n         } else {\n             struct_span_err!("}, {"sha": "929cc56294d3df74e49fb4d974c2b55d450b06eb", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -774,10 +774,16 @@ impl SyntaxExtension {\n             .find_by_name(attrs, sym::rustc_builtin_macro)\n             .map(|a| a.value_str().unwrap_or(name));\n         let (stability, const_stability) = attr::find_stability(&sess, attrs, span);\n-        if const_stability.is_some() {\n+        if let Some((_, sp)) = const_stability {\n             sess.parse_sess\n                 .span_diagnostic\n-                .span_err(span, \"macros cannot have const stability attributes\");\n+                .struct_span_err(sp, \"macros cannot have const stability attributes\")\n+                .span_label(sp, \"invalid const stability attribute\")\n+                .span_label(\n+                    sess.source_map().guess_head_span(span),\n+                    \"const stability attribute affects this macro\",\n+                )\n+                .emit();\n         }\n \n         SyntaxExtension {\n@@ -786,7 +792,7 @@ impl SyntaxExtension {\n             allow_internal_unstable,\n             allow_internal_unsafe: sess.contains_name(attrs, sym::allow_internal_unsafe),\n             local_inner_macros,\n-            stability,\n+            stability: stability.map(|(s, _)| s),\n             deprecation: attr::find_deprecation(&sess, attrs).map(|(d, _)| d),\n             helper_attrs,\n             edition,"}, {"sha": "02b20e45d000c43c340eee99a6aacaac1c054c84", "filename": "compiler/rustc_passes/src/lib_features.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -109,7 +109,7 @@ impl LibFeatureCollector<'tcx> {\n     }\n \n     fn span_feature_error(&self, span: Span, msg: &str) {\n-        struct_span_err!(self.tcx.sess, span, E0711, \"{}\", &msg,).emit();\n+        struct_span_err!(self.tcx.sess, span, E0711, \"{}\", &msg).emit();\n     }\n }\n "}, {"sha": "c4c103437436028f2662979812ec8facaf6ec0d7", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 52, "deletions": 24, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -70,6 +70,17 @@ impl InheritConstStability {\n     }\n }\n \n+enum InheritStability {\n+    Yes,\n+    No,\n+}\n+\n+impl InheritStability {\n+    fn yes(&self) -> bool {\n+        matches!(self, InheritStability::Yes)\n+    }\n+}\n+\n // A private tree-walker for producing an Index.\n struct Annotator<'a, 'tcx> {\n     tcx: TyCtxt<'tcx>,\n@@ -91,6 +102,7 @@ impl<'a, 'tcx> Annotator<'a, 'tcx> {\n         kind: AnnotationKind,\n         inherit_deprecation: InheritDeprecation,\n         inherit_const_stability: InheritConstStability,\n+        inherit_from_parent: InheritStability,\n         visit_children: F,\n     ) where\n         F: FnOnce(&mut Self),\n@@ -131,12 +143,13 @@ impl<'a, 'tcx> Annotator<'a, 'tcx> {\n         }\n \n         if self.tcx.features().staged_api {\n-            if let Some(..) = attrs.iter().find(|a| self.tcx.sess.check_name(a, sym::deprecated)) {\n-                self.tcx.sess.span_err(\n-                    item_sp,\n-                    \"`#[deprecated]` cannot be used in staged API; \\\n-                                                use `#[rustc_deprecated]` instead\",\n-                );\n+            if let Some(a) = attrs.iter().find(|a| self.tcx.sess.check_name(a, sym::deprecated)) {\n+                self.tcx\n+                    .sess\n+                    .struct_span_err(a.span, \"`#[deprecated]` cannot be used in staged API\")\n+                    .span_label(a.span, \"use `#[rustc_deprecated]` instead\")\n+                    .span_label(item_sp, \"\")\n+                    .emit();\n             }\n         } else {\n             self.recurse_with_stability_attrs(\n@@ -150,7 +163,7 @@ impl<'a, 'tcx> Annotator<'a, 'tcx> {\n \n         let (stab, const_stab) = attr::find_stability(&self.tcx.sess, attrs, item_sp);\n \n-        let const_stab = const_stab.map(|const_stab| {\n+        let const_stab = const_stab.map(|(const_stab, _)| {\n             let const_stab = self.tcx.intern_const_stability(const_stab);\n             self.index.const_stab_map.insert(hir_id, const_stab);\n             const_stab\n@@ -180,12 +193,15 @@ impl<'a, 'tcx> Annotator<'a, 'tcx> {\n             }\n         }\n \n-        let stab = stab.map(|stab| {\n+        let stab = stab.map(|(stab, span)| {\n             // Error if prohibited, or can't inherit anything from a container.\n             if kind == AnnotationKind::Prohibited\n                 || (kind == AnnotationKind::Container && stab.level.is_stable() && is_deprecated)\n             {\n-                self.tcx.sess.span_err(item_sp, \"This stability annotation is useless\");\n+                self.tcx.sess.struct_span_err(span,\"this stability annotation is useless\")\n+                    .span_label(span, \"useless stability annotation\")\n+                    .span_label(item_sp, \"the stability attribute annotates this item\")\n+                    .emit();\n             }\n \n             debug!(\"annotate: found {:?}\", stab);\n@@ -202,26 +218,30 @@ impl<'a, 'tcx> Annotator<'a, 'tcx> {\n                 {\n                     match stab_v.parse::<u64>() {\n                         Err(_) => {\n-                            self.tcx.sess.span_err(item_sp, \"Invalid stability version found\");\n+                            self.tcx.sess.struct_span_err(span, \"invalid stability version found\")\n+                                .span_label(span, \"invalid stability version\")\n+                                .span_label(item_sp, \"the stability attribute annotates this item\")\n+                                .emit();\n                             break;\n                         }\n                         Ok(stab_vp) => match dep_v.parse::<u64>() {\n                             Ok(dep_vp) => match dep_vp.cmp(&stab_vp) {\n                                 Ordering::Less => {\n-                                    self.tcx.sess.span_err(\n-                                        item_sp,\n-                                        \"An API can't be stabilized after it is deprecated\",\n-                                    );\n+                                    self.tcx.sess.struct_span_err(span, \"an API can't be stabilized after it is deprecated\")\n+                                        .span_label(span, \"invalid version\")\n+                                        .span_label(item_sp, \"the stability attribute annotates this item\")\n+                                        .emit();\n                                     break;\n                                 }\n                                 Ordering::Equal => continue,\n                                 Ordering::Greater => break,\n                             },\n                             Err(_) => {\n                                 if dep_v != \"TBD\" {\n-                                    self.tcx\n-                                        .sess\n-                                        .span_err(item_sp, \"Invalid deprecation version found\");\n+                                    self.tcx.sess.struct_span_err(span, \"invalid deprecation version found\")\n+                                        .span_label(span, \"invalid deprecation version\")\n+                                        .span_label(item_sp, \"the stability attribute annotates this item\")\n+                                        .emit();\n                                 }\n                                 break;\n                             }\n@@ -237,7 +257,9 @@ impl<'a, 'tcx> Annotator<'a, 'tcx> {\n         if stab.is_none() {\n             debug!(\"annotate: stab not found, parent = {:?}\", self.parent_stab);\n             if let Some(stab) = self.parent_stab {\n-                if inherit_deprecation.yes() && stab.level.is_unstable() {\n+                if inherit_deprecation.yes() && stab.level.is_unstable()\n+                    || inherit_from_parent.yes()\n+                {\n                     self.index.stab_map.insert(hir_id, stab);\n                 }\n             }\n@@ -368,6 +390,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Annotator<'a, 'tcx> {\n                         AnnotationKind::Required,\n                         InheritDeprecation::Yes,\n                         InheritConstStability::No,\n+                        InheritStability::Yes,\n                         |_| {},\n                     )\n                 }\n@@ -382,6 +405,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Annotator<'a, 'tcx> {\n             kind,\n             InheritDeprecation::Yes,\n             const_stab_inherit,\n+            InheritStability::No,\n             |v| intravisit::walk_item(v, i),\n         );\n         self.in_trait_impl = orig_in_trait_impl;\n@@ -395,6 +419,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Annotator<'a, 'tcx> {\n             AnnotationKind::Required,\n             InheritDeprecation::Yes,\n             InheritConstStability::No,\n+            InheritStability::No,\n             |v| {\n                 intravisit::walk_trait_item(v, ti);\n             },\n@@ -411,6 +436,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Annotator<'a, 'tcx> {\n             kind,\n             InheritDeprecation::Yes,\n             InheritConstStability::No,\n+            InheritStability::No,\n             |v| {\n                 intravisit::walk_impl_item(v, ii);\n             },\n@@ -425,6 +451,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Annotator<'a, 'tcx> {\n             AnnotationKind::Required,\n             InheritDeprecation::Yes,\n             InheritConstStability::No,\n+            InheritStability::Yes,\n             |v| {\n                 if let Some(ctor_hir_id) = var.data.ctor_hir_id() {\n                     v.annotate(\n@@ -434,6 +461,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Annotator<'a, 'tcx> {\n                         AnnotationKind::Required,\n                         InheritDeprecation::Yes,\n                         InheritConstStability::No,\n+                        InheritStability::No,\n                         |_| {},\n                     );\n                 }\n@@ -451,6 +479,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Annotator<'a, 'tcx> {\n             AnnotationKind::Required,\n             InheritDeprecation::Yes,\n             InheritConstStability::No,\n+            InheritStability::Yes,\n             |v| {\n                 intravisit::walk_struct_field(v, s);\n             },\n@@ -465,6 +494,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Annotator<'a, 'tcx> {\n             AnnotationKind::Required,\n             InheritDeprecation::Yes,\n             InheritConstStability::No,\n+            InheritStability::No,\n             |v| {\n                 intravisit::walk_foreign_item(v, i);\n             },\n@@ -479,6 +509,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Annotator<'a, 'tcx> {\n             AnnotationKind::Required,\n             InheritDeprecation::Yes,\n             InheritConstStability::No,\n+            InheritStability::No,\n             |_| {},\n         );\n     }\n@@ -499,6 +530,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Annotator<'a, 'tcx> {\n             kind,\n             InheritDeprecation::No,\n             InheritConstStability::No,\n+            InheritStability::No,\n             |v| {\n                 intravisit::walk_generic_param(v, p);\n             },\n@@ -669,6 +701,7 @@ fn new_index(tcx: TyCtxt<'tcx>) -> Index<'tcx> {\n             AnnotationKind::Required,\n             InheritDeprecation::Yes,\n             InheritConstStability::No,\n+            InheritStability::No,\n             |v| intravisit::walk_crate(v, krate),\n         );\n     }\n@@ -729,18 +762,13 @@ impl Visitor<'tcx> for Checker<'tcx> {\n                     // error if all involved types and traits are stable, because\n                     // it will have no effect.\n                     // See: https://github.com/rust-lang/rust/issues/55436\n-                    if let (Some(Stability { level: attr::Unstable { .. }, .. }), _) =\n+                    if let (Some((Stability { level: attr::Unstable { .. }, .. }, span)), _) =\n                         attr::find_stability(&self.tcx.sess, &item.attrs, item.span)\n                     {\n                         let mut c = CheckTraitImplStable { tcx: self.tcx, fully_stable: true };\n                         c.visit_ty(self_ty);\n                         c.visit_trait_ref(t);\n                         if c.fully_stable {\n-                            let span = item\n-                                .attrs\n-                                .iter()\n-                                .find(|a| a.has_name(sym::unstable))\n-                                .map_or(item.span, |a| a.span);\n                             self.tcx.struct_span_lint_hir(\n                                 INEFFECTIVE_UNSTABLE_TRAIT_IMPL,\n                                 item.hir_id(),"}, {"sha": "3fc60f7ce48c2154c686a218e960411ffded2267", "filename": "src/test/ui/attributes/const-stability-on-macro.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Fattributes%2Fconst-stability-on-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Fattributes%2Fconst-stability-on-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fconst-stability-on-macro.rs?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -0,0 +1,13 @@\n+#[rustc_const_stable(feature = \"foo\", since = \"0\")]\n+//~^ ERROR macros cannot have const stability attributes\n+macro_rules! foo {\n+    () => {};\n+}\n+\n+#[rustc_const_unstable(feature = \"bar\", issue=\"none\")]\n+//~^ ERROR macros cannot have const stability attributes\n+macro_rules! bar {\n+    () => {};\n+}\n+\n+fn main() {}"}, {"sha": "ef24e44d1908bd19e48cb88e0e84daf67791e948", "filename": "src/test/ui/attributes/const-stability-on-macro.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Fattributes%2Fconst-stability-on-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Fattributes%2Fconst-stability-on-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fconst-stability-on-macro.stderr?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -0,0 +1,20 @@\n+error: macros cannot have const stability attributes\n+  --> $DIR/const-stability-on-macro.rs:1:1\n+   |\n+LL | #[rustc_const_stable(feature = \"foo\", since = \"0\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid const stability attribute\n+LL |\n+LL | macro_rules! foo {\n+   | ---------------- const stability attribute affects this macro\n+\n+error: macros cannot have const stability attributes\n+  --> $DIR/const-stability-on-macro.rs:7:1\n+   |\n+LL | #[rustc_const_unstable(feature = \"bar\", issue=\"none\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid const stability attribute\n+LL |\n+LL | macro_rules! bar {\n+   | ---------------- const stability attribute affects this macro\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "910bfd1b5e48a4afa42423439de70ecd486ee234", "filename": "src/test/ui/deprecation/deprecation-in-staged-api.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-in-staged-api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-in-staged-api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-in-staged-api.rs?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -1,8 +1,4 @@\n-// #[deprecated] cannot be used in staged API\n-\n #![feature(staged_api)]\n-\n #![stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n-\n-#[deprecated]\n-fn main() { } //~ ERROR `#[deprecated]` cannot be used in staged API\n+#[deprecated] //~ ERROR `#[deprecated]` cannot be used in staged API\n+fn main() {}"}, {"sha": "cf977fa4b7b44d1293a4506f9050a4bdd756e531", "filename": "src/test/ui/deprecation/deprecation-in-staged-api.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-in-staged-api.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-in-staged-api.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-in-staged-api.stderr?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -1,8 +1,10 @@\n-error: `#[deprecated]` cannot be used in staged API; use `#[rustc_deprecated]` instead\n-  --> $DIR/deprecation-in-staged-api.rs:8:1\n+error: `#[deprecated]` cannot be used in staged API\n+  --> $DIR/deprecation-in-staged-api.rs:3:1\n    |\n-LL | fn main() { }\n-   | ^^^^^^^^^^^^^\n+LL | #[deprecated]\n+   | ^^^^^^^^^^^^^ use `#[rustc_deprecated]` instead\n+LL | fn main() {}\n+   | ------------\n \n error: aborting due to previous error\n "}, {"sha": "3cbb48c4a6be0567dff147330b0f7301e0705743", "filename": "src/test/ui/lint/auxiliary/lint_stability_fields.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Flint%2Fauxiliary%2Flint_stability_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Flint%2Fauxiliary%2Flint_stability_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fauxiliary%2Flint_stability_fields.rs?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -3,20 +3,35 @@\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Stable {\n-    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub inherit: u8, // it's a lie (stable doesn't inherit)\n+    pub inherit: u8,\n     #[unstable(feature = \"unstable_test_feature\", issue = \"none\")]\n     pub override1: u8,\n     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n     #[unstable(feature = \"unstable_test_feature\", issue = \"none\")]\n     pub override2: u8,\n+    #[stable(feature = \"rust2\", since = \"2.0.0\")]\n+    pub override3: u8,\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub struct Stable2(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub u8,\n+pub struct Stable2(#[stable(feature = \"rust2\", since = \"2.0.0\")] pub u8,\n                    #[unstable(feature = \"unstable_test_feature\", issue = \"none\")] pub u8,\n                    #[unstable(feature = \"unstable_test_feature\", issue = \"none\")]\n-                   #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")] pub u8);\n+                   #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")] pub u8,\n+                   pub u8);\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub enum Stable3 {\n+    Inherit(u8),\n+    InheritOverride(#[stable(feature = \"rust2\", since = \"2.0.0\")] u8),\n+    #[stable(feature = \"rust2\", since = \"2.0.0\")]\n+    Override1,\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"none\")]\n+    Override2,\n+    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+    #[unstable(feature = \"unstable_test_feature\", issue = \"none\")]\n+    Override3,\n+}\n \n #[unstable(feature = \"unstable_test_feature\", issue = \"none\")]\n pub struct Unstable {"}, {"sha": "2024cf15ab0a1339cca9b0f0974a19ff90aacfa8", "filename": "src/test/ui/lint/lint-stability-fields-deprecated.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Flint%2Flint-stability-fields-deprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Flint%2Flint-stability-fields-deprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-fields-deprecated.rs?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -17,33 +17,38 @@ mod cross_crate {\n             override1: 2,\n             override2: 3,\n             //~^ ERROR use of deprecated field\n+            override3: 4,\n         };\n \n         let _ = x.inherit;\n         let _ = x.override1;\n         let _ = x.override2;\n         //~^ ERROR use of deprecated field\n+        let _ = x.override3;\n \n         let Stable {\n             inherit: _,\n             override1: _,\n-            override2: _\n+            override2: _,\n             //~^ ERROR use of deprecated field\n+            override3: _,\n         } = x;\n         // all fine\n         let Stable { .. } = x;\n \n-        let x = Stable2(1, 2, 3);\n+        let x = Stable2(1, 2, 3, 4);\n \n         let _ = x.0;\n         let _ = x.1;\n         let _ = x.2;\n         //~^ ERROR use of deprecated field\n+        let _ = x.3;\n \n         let Stable2(_,\n                    _,\n+                   _,\n+                   //~^ ERROR use of deprecated field\n                    _)\n-            //~^ ERROR use of deprecated field\n             = x;\n         // all fine\n         let Stable2(..) = x;"}, {"sha": "151b3e59b9130115e89cf23e00629a73aa8dee8a", "filename": "src/test/ui/lint/lint-stability-fields-deprecated.stderr", "status": "modified", "additions": 63, "deletions": 63, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Flint%2Flint-stability-fields-deprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Flint%2Flint-stability-fields-deprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-fields-deprecated.stderr?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -1,5 +1,5 @@\n error: use of deprecated struct `cross_crate::lint_stability_fields::Deprecated`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:94:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:99:17\n    |\n LL |         let x = Deprecated {\n    |                 ^^^^^^^^^^\n@@ -11,67 +11,67 @@ LL | #![deny(deprecated)]\n    |         ^^^^^^^^^^\n \n error: use of deprecated struct `cross_crate::lint_stability_fields::Deprecated`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:111:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:116:13\n    |\n LL |         let Deprecated {\n    |             ^^^^^^^^^^\n \n error: use of deprecated struct `cross_crate::lint_stability_fields::Deprecated`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:121:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:126:13\n    |\n LL |         let Deprecated\n    |             ^^^^^^^^^^\n \n error: use of deprecated struct `cross_crate::lint_stability_fields::Deprecated2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:126:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:131:17\n    |\n LL |         let x = Deprecated2(1, 2, 3);\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated struct `cross_crate::lint_stability_fields::Deprecated2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:136:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:141:13\n    |\n LL |         let Deprecated2\n    |             ^^^^^^^^^^^\n \n error: use of deprecated struct `cross_crate::lint_stability_fields::Deprecated2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:145:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:150:13\n    |\n LL |         let Deprecated2\n    |             ^^^^^^^^^^^\n \n error: use of deprecated struct `this_crate::Deprecated`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:281:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:286:17\n    |\n LL |         let x = Deprecated {\n    |                 ^^^^^^^^^^\n \n error: use of deprecated struct `this_crate::Deprecated`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:298:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:303:13\n    |\n LL |         let Deprecated {\n    |             ^^^^^^^^^^\n \n error: use of deprecated struct `this_crate::Deprecated`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:308:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:313:13\n    |\n LL |         let Deprecated\n    |             ^^^^^^^^^^\n \n error: use of deprecated tuple struct `this_crate::Deprecated2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:313:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:318:17\n    |\n LL |         let x = Deprecated2(1, 2, 3);\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated tuple struct `this_crate::Deprecated2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:323:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:328:13\n    |\n LL |         let Deprecated2\n    |             ^^^^^^^^^^^\n \n error: use of deprecated tuple struct `this_crate::Deprecated2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:332:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:337:13\n    |\n LL |         let Deprecated2\n    |             ^^^^^^^^^^^\n@@ -83,295 +83,295 @@ LL |             override2: 3,\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Stable::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:24:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:25:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Stable::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:30:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:32:13\n    |\n-LL |             override2: _\n+LL |             override2: _,\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Stable2::2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:40:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:43:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Stable2::2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:45:20\n+  --> $DIR/lint-stability-fields-deprecated.rs:49:20\n    |\n-LL |                    _)\n+LL |                    _,\n    |                    ^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Unstable::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:55:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:60:13\n    |\n LL |             override2: 3,\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Unstable::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:61:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:66:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Unstable::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:67:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:72:13\n    |\n LL |             override2: _\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Unstable2::2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:80:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:85:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Unstable2::2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:86:14\n+  --> $DIR/lint-stability-fields-deprecated.rs:91:14\n    |\n LL |              _)\n    |              ^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated::inherit`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:96:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:101:13\n    |\n LL |             inherit: 1,\n    |             ^^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated::override1`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:98:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:103:13\n    |\n LL |             override1: 2,\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:100:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:105:13\n    |\n LL |             override2: 3,\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated::inherit`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:104:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:109:17\n    |\n LL |         let _ = x.inherit;\n    |                 ^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated::override1`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:106:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:111:17\n    |\n LL |         let _ = x.override1;\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:108:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:113:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated::inherit`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:113:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:118:13\n    |\n LL |             inherit: _,\n    |             ^^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated::override1`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:115:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:120:13\n    |\n LL |             override1: _,\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:117:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:122:13\n    |\n LL |             override2: _\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated2::0`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:129:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:134:17\n    |\n LL |         let _ = x.0;\n    |                 ^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated2::1`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:131:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:136:17\n    |\n LL |         let _ = x.1;\n    |                 ^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated2::2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:133:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:138:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated2::0`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:138:14\n+  --> $DIR/lint-stability-fields-deprecated.rs:143:14\n    |\n LL |             (_,\n    |              ^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated2::1`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:140:14\n+  --> $DIR/lint-stability-fields-deprecated.rs:145:14\n    |\n LL |              _,\n    |              ^\n \n error: use of deprecated field `cross_crate::lint_stability_fields::Deprecated2::2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:142:14\n+  --> $DIR/lint-stability-fields-deprecated.rs:147:14\n    |\n LL |              _)\n    |              ^\n \n error: use of deprecated field `this_crate::Stable::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:205:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:210:13\n    |\n LL |             override2: 3,\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::Stable::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:211:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:216:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::Stable::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:217:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:222:13\n    |\n LL |             override2: _\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::Stable2::2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:227:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:232:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n \n error: use of deprecated field `this_crate::Stable2::2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:232:20\n+  --> $DIR/lint-stability-fields-deprecated.rs:237:20\n    |\n LL |                    _)\n    |                    ^\n \n error: use of deprecated field `this_crate::Unstable::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:242:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:247:13\n    |\n LL |             override2: 3,\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::Unstable::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:248:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:253:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::Unstable::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:254:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:259:13\n    |\n LL |             override2: _\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::Unstable2::2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:267:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:272:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n \n error: use of deprecated field `this_crate::Unstable2::2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:273:14\n+  --> $DIR/lint-stability-fields-deprecated.rs:278:14\n    |\n LL |              _)\n    |              ^\n \n error: use of deprecated field `this_crate::Deprecated::inherit`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:283:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:288:13\n    |\n LL |             inherit: 1,\n    |             ^^^^^^^^^^\n \n error: use of deprecated field `this_crate::Deprecated::override1`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:285:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:290:13\n    |\n LL |             override1: 2,\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::Deprecated::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:287:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:292:13\n    |\n LL |             override2: 3,\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::Deprecated::inherit`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:291:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:296:17\n    |\n LL |         let _ = x.inherit;\n    |                 ^^^^^^^^^\n \n error: use of deprecated field `this_crate::Deprecated::override1`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:293:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:298:17\n    |\n LL |         let _ = x.override1;\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::Deprecated::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:295:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:300:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::Deprecated::inherit`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:300:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:305:13\n    |\n LL |             inherit: _,\n    |             ^^^^^^^^^^\n \n error: use of deprecated field `this_crate::Deprecated::override1`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:302:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:307:13\n    |\n LL |             override1: _,\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::Deprecated::override2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:304:13\n+  --> $DIR/lint-stability-fields-deprecated.rs:309:13\n    |\n LL |             override2: _\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::Deprecated2::0`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:316:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:321:17\n    |\n LL |         let _ = x.0;\n    |                 ^^^\n \n error: use of deprecated field `this_crate::Deprecated2::1`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:318:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:323:17\n    |\n LL |         let _ = x.1;\n    |                 ^^^\n \n error: use of deprecated field `this_crate::Deprecated2::2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:320:17\n+  --> $DIR/lint-stability-fields-deprecated.rs:325:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n \n error: use of deprecated field `this_crate::Deprecated2::0`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:325:14\n+  --> $DIR/lint-stability-fields-deprecated.rs:330:14\n    |\n LL |             (_,\n    |              ^\n \n error: use of deprecated field `this_crate::Deprecated2::1`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:327:14\n+  --> $DIR/lint-stability-fields-deprecated.rs:332:14\n    |\n LL |              _,\n    |              ^\n \n error: use of deprecated field `this_crate::Deprecated2::2`: text\n-  --> $DIR/lint-stability-fields-deprecated.rs:329:14\n+  --> $DIR/lint-stability-fields-deprecated.rs:334:14\n    |\n LL |              _)\n    |              ^"}, {"sha": "4083648984867b475aa73ccafd79b71dc51f1a82", "filename": "src/test/ui/lint/lint-stability-fields.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Flint%2Flint-stability-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Flint%2Flint-stability-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-fields.rs?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -20,29 +20,34 @@ mod cross_crate {\n             inherit: 1,\n             override1: 2, //~ ERROR use of unstable\n             override2: 3, //~ ERROR use of unstable\n+            override3: 4,\n         };\n \n         let _ = x.inherit;\n         let _ = x.override1; //~ ERROR use of unstable\n         let _ = x.override2; //~ ERROR use of unstable\n+        let _ = x.override3;\n \n         let Stable {\n             inherit: _,\n             override1: _, //~ ERROR use of unstable\n-            override2: _ //~ ERROR use of unstable\n+            override2: _, //~ ERROR use of unstable\n+            override3: _\n         } = x;\n         // all fine\n         let Stable { .. } = x;\n \n-        let x = Stable2(1, 2, 3);\n+        let x = Stable2(1, 2, 3, 4);\n \n         let _ = x.0;\n         let _ = x.1; //~ ERROR use of unstable\n         let _ = x.2; //~ ERROR use of unstable\n+        let _ = x.3;\n \n         let Stable2(_,\n                    _, //~ ERROR use of unstable\n-                   _) //~ ERROR use of unstable\n+                   _, //~ ERROR use of unstable\n+                   _)\n             = x;\n         // all fine\n         let Stable2(..) = x;\n@@ -133,11 +138,13 @@ mod this_crate {\n         #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n         #[unstable(feature = \"unstable_test_feature\", issue = \"none\")]\n         override2: u8,\n+        #[stable(feature = \"rust2\", since = \"2.0.0\")]\n+        override3: u8,\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     struct Stable2(u8,\n-                   #[stable(feature = \"rust1\", since = \"1.0.0\")] u8,\n+                   #[stable(feature = \"rust2\", since = \"2.0.0\")] u8,\n                    #[unstable(feature = \"unstable_test_feature\", issue = \"none\")]\n                    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")] u8);\n \n@@ -178,16 +185,19 @@ mod this_crate {\n             inherit: 1,\n             override1: 2,\n             override2: 3,\n+            override3: 4,\n         };\n \n         let _ = x.inherit;\n         let _ = x.override1;\n         let _ = x.override2;\n+        let _ = x.override3;\n \n         let Stable {\n             inherit: _,\n             override1: _,\n-            override2: _\n+            override2: _,\n+            override3: _\n         } = x;\n         // all fine\n         let Stable { .. } = x;"}, {"sha": "3d2e73c1e8e9232a99b76b3040694dc1abf4a6e3", "filename": "src/test/ui/lint/lint-stability-fields.stderr", "status": "modified", "additions": 43, "deletions": 43, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Flint%2Flint-stability-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Flint%2Flint-stability-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-fields.stderr?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -1,101 +1,101 @@\n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:51:17\n+  --> $DIR/lint-stability-fields.rs:56:17\n    |\n LL |         let x = Unstable {\n    |                 ^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:61:13\n+  --> $DIR/lint-stability-fields.rs:66:13\n    |\n LL |         let Unstable {\n    |             ^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:67:13\n+  --> $DIR/lint-stability-fields.rs:72:13\n    |\n LL |         let Unstable\n    |             ^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:72:17\n+  --> $DIR/lint-stability-fields.rs:77:17\n    |\n LL |         let x = reexport::Unstable2(1, 2, 3);\n    |                 ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:74:17\n+  --> $DIR/lint-stability-fields.rs:79:17\n    |\n LL |         let x = Unstable2(1, 2, 3);\n    |                 ^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:80:13\n+  --> $DIR/lint-stability-fields.rs:85:13\n    |\n LL |         let Unstable2\n    |             ^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:85:13\n+  --> $DIR/lint-stability-fields.rs:90:13\n    |\n LL |         let Unstable2\n    |             ^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:90:17\n+  --> $DIR/lint-stability-fields.rs:95:17\n    |\n LL |         let x = Deprecated {\n    |                 ^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:100:13\n+  --> $DIR/lint-stability-fields.rs:105:13\n    |\n LL |         let Deprecated {\n    |             ^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:106:13\n+  --> $DIR/lint-stability-fields.rs:111:13\n    |\n LL |         let Deprecated\n    |             ^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:110:17\n+  --> $DIR/lint-stability-fields.rs:115:17\n    |\n LL |         let x = Deprecated2(1, 2, 3);\n    |                 ^^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:116:13\n+  --> $DIR/lint-stability-fields.rs:121:13\n    |\n LL |         let Deprecated2\n    |             ^^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:121:13\n+  --> $DIR/lint-stability-fields.rs:126:13\n    |\n LL |         let Deprecated2\n    |             ^^^^^^^^^^^\n@@ -119,223 +119,223 @@ LL |             override2: 3,\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:26:17\n+  --> $DIR/lint-stability-fields.rs:27:17\n    |\n LL |         let _ = x.override1;\n    |                 ^^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:27:17\n+  --> $DIR/lint-stability-fields.rs:28:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:31:13\n+  --> $DIR/lint-stability-fields.rs:33:13\n    |\n LL |             override1: _,\n    |             ^^^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:32:13\n+  --> $DIR/lint-stability-fields.rs:34:13\n    |\n-LL |             override2: _\n+LL |             override2: _,\n    |             ^^^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:40:17\n+  --> $DIR/lint-stability-fields.rs:43:17\n    |\n LL |         let _ = x.1;\n    |                 ^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:41:17\n+  --> $DIR/lint-stability-fields.rs:44:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:44:20\n+  --> $DIR/lint-stability-fields.rs:48:20\n    |\n LL |                    _,\n    |                    ^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:45:20\n+  --> $DIR/lint-stability-fields.rs:49:20\n    |\n-LL |                    _)\n+LL |                    _,\n    |                    ^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:52:13\n+  --> $DIR/lint-stability-fields.rs:57:13\n    |\n LL |             inherit: 1,\n    |             ^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:54:13\n+  --> $DIR/lint-stability-fields.rs:59:13\n    |\n LL |             override2: 3,\n    |             ^^^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:57:17\n+  --> $DIR/lint-stability-fields.rs:62:17\n    |\n LL |         let _ = x.inherit;\n    |                 ^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:59:17\n+  --> $DIR/lint-stability-fields.rs:64:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:62:13\n+  --> $DIR/lint-stability-fields.rs:67:13\n    |\n LL |             inherit: _,\n    |             ^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:64:13\n+  --> $DIR/lint-stability-fields.rs:69:13\n    |\n LL |             override2: _\n    |             ^^^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:76:17\n+  --> $DIR/lint-stability-fields.rs:81:17\n    |\n LL |         let _ = x.0;\n    |                 ^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:78:17\n+  --> $DIR/lint-stability-fields.rs:83:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:81:14\n+  --> $DIR/lint-stability-fields.rs:86:14\n    |\n LL |             (_,\n    |              ^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:83:14\n+  --> $DIR/lint-stability-fields.rs:88:14\n    |\n LL |              _)\n    |              ^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:91:13\n+  --> $DIR/lint-stability-fields.rs:96:13\n    |\n LL |             inherit: 1,\n    |             ^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:93:13\n+  --> $DIR/lint-stability-fields.rs:98:13\n    |\n LL |             override2: 3,\n    |             ^^^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:96:17\n+  --> $DIR/lint-stability-fields.rs:101:17\n    |\n LL |         let _ = x.inherit;\n    |                 ^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:98:17\n+  --> $DIR/lint-stability-fields.rs:103:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:101:13\n+  --> $DIR/lint-stability-fields.rs:106:13\n    |\n LL |             inherit: _,\n    |             ^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:103:13\n+  --> $DIR/lint-stability-fields.rs:108:13\n    |\n LL |             override2: _\n    |             ^^^^^^^^^^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:112:17\n+  --> $DIR/lint-stability-fields.rs:117:17\n    |\n LL |         let _ = x.0;\n    |                 ^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:114:17\n+  --> $DIR/lint-stability-fields.rs:119:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:117:14\n+  --> $DIR/lint-stability-fields.rs:122:14\n    |\n LL |             (_,\n    |              ^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-stability-fields.rs:119:14\n+  --> $DIR/lint-stability-fields.rs:124:14\n    |\n LL |              _)\n    |              ^"}, {"sha": "3f4fdfd0180ed2587cf5c6cf685a891affcb69ce", "filename": "src/test/ui/stability-attribute/stability-attribute-issue-43027.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-issue-43027.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-issue-43027.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-issue-43027.rs?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -1,10 +1,15 @@\n+// check-pass\n #![feature(staged_api)]\n #![stable(feature = \"test\", since = \"0\")]\n \n #[stable(feature = \"test\", since = \"0\")]\n-pub struct Reverse<T>(pub T); //~ ERROR field has missing stability attribute\n+pub struct A<T>(pub T);\n+\n+#[stable(feature = \"test\", since = \"0\")]\n+pub struct B<T>(#[stable(feature = \"test\", since = \"0\")] pub T);\n \n fn main() {\n     // Make sure the field is used to fill the stability cache\n-    Reverse(0).0;\n+    A(0).0;\n+    B(0).0;\n }"}, {"sha": "280c72acccb1863d613586ba707db5d745b36841", "filename": "src/test/ui/stability-attribute/stability-attribute-issue-43027.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/45b3c28518e4c45dfd12bc2c4400c0d0e9639927/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-issue-43027.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45b3c28518e4c45dfd12bc2c4400c0d0e9639927/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-issue-43027.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-issue-43027.stderr?ref=45b3c28518e4c45dfd12bc2c4400c0d0e9639927", "patch": "@@ -1,8 +0,0 @@\n-error: field has missing stability attribute\n-  --> $DIR/stability-attribute-issue-43027.rs:5:23\n-   |\n-LL | pub struct Reverse<T>(pub T);\n-   |                       ^^^^^\n-\n-error: aborting due to previous error\n-"}, {"sha": "9f8ecc262812624d7e593f9b564db7e9e03ad1fa", "filename": "src/test/ui/stability-attribute/stability-attribute-sanity.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.rs?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -57,17 +57,16 @@ fn multiple2() { }\n #[stable(feature = \"a\", since = \"b\")] //~ ERROR multiple stability levels [E0544]\n fn multiple3() { }\n \n-#[stable(feature = \"a\", since = \"b\")]\n+#[stable(feature = \"a\", since = \"b\")] //~ ERROR invalid stability version found\n #[rustc_deprecated(since = \"b\", reason = \"text\")]\n #[rustc_deprecated(since = \"b\", reason = \"text\")] //~ ERROR multiple deprecated attributes\n #[rustc_const_unstable(feature = \"c\", issue = \"none\")]\n #[rustc_const_unstable(feature = \"d\", issue = \"none\")] //~ ERROR multiple stability levels\n pub const fn multiple4() { }\n-//~^ ERROR Invalid stability version found\n \n-#[stable(feature = \"a\", since = \"1.0.0\")]\n+#[stable(feature = \"a\", since = \"1.0.0\")] //~ ERROR invalid deprecation version found\n #[rustc_deprecated(since = \"invalid\", reason = \"text\")]\n-fn invalid_deprecation_version() {} //~ ERROR Invalid deprecation version found\n+fn invalid_deprecation_version() {}\n \n #[rustc_deprecated(since = \"a\", reason = \"text\")]\n fn deprecated_without_unstable_or_stable() { }"}, {"sha": "ddf65f3a7eefd62a71bc81dc0c2dde28705df467", "filename": "src/test/ui/stability-attribute/stability-attribute-sanity.stderr", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0d66b54fb3acc2125972b88ff543a2c04d14af5/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.stderr?ref=a0d66b54fb3acc2125972b88ff543a2c04d14af5", "patch": "@@ -96,20 +96,26 @@ error[E0544]: multiple stability levels\n LL | #[rustc_const_unstable(feature = \"d\", issue = \"none\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: Invalid stability version found\n-  --> $DIR/stability-attribute-sanity.rs:65:1\n+error: invalid stability version found\n+  --> $DIR/stability-attribute-sanity.rs:60:1\n    |\n+LL | #[stable(feature = \"a\", since = \"b\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid stability version\n+...\n LL | pub const fn multiple4() { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ---------------------------- the stability attribute annotates this item\n \n-error: Invalid deprecation version found\n-  --> $DIR/stability-attribute-sanity.rs:70:1\n+error: invalid deprecation version found\n+  --> $DIR/stability-attribute-sanity.rs:67:1\n    |\n+LL | #[stable(feature = \"a\", since = \"1.0.0\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid deprecation version\n+LL | #[rustc_deprecated(since = \"invalid\", reason = \"text\")]\n LL | fn invalid_deprecation_version() {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ----------------------------------- the stability attribute annotates this item\n \n error[E0549]: rustc_deprecated attribute must be paired with either stable or unstable attribute\n-  --> $DIR/stability-attribute-sanity.rs:72:1\n+  --> $DIR/stability-attribute-sanity.rs:71:1\n    |\n LL | #[rustc_deprecated(since = \"a\", reason = \"text\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}