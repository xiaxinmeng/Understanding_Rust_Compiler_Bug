{"sha": "48a0f3a5cae175854df7389bd33209d2adca1f94", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YTBmM2E1Y2FlMTc1ODU0ZGY3Mzg5YmQzMzIwOWQyYWRjYTFmOTQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-06T18:36:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-06T18:36:03Z"}, "message": "Rollup merge of #47190 - EdSchouten:cloudabi-libpanic, r=alexcrichton\n\nPort libpanic_abort and libpanic_unwind to CloudABI\n\nThis change ports both the libpanic* libraries to CloudABI.\n\nThe most interesting part of this pull request, however, is that it imports the CloudABI system call API into the Rust tree through a Git submodule. These will also be used by my port of libstd to CloudABI extensively, as that library obviously needs to invoke system calls to implement its primitives.\n\nI have taken the same approach as libc: `src/libcloudabi` + `src/rustc/cloudabi_shim`. If some other naming scheme is preferred, feel free to let me know! As `libcloudabi` is pretty small, maybe it makes sense to copy, instead of using a submodule?", "tree": {"sha": "ae64dfc9fab9e1c54ad879fc881f6ccddf58e3f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae64dfc9fab9e1c54ad879fc881f6ccddf58e3f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48a0f3a5cae175854df7389bd33209d2adca1f94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48a0f3a5cae175854df7389bd33209d2adca1f94", "html_url": "https://github.com/rust-lang/rust/commit/48a0f3a5cae175854df7389bd33209d2adca1f94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48a0f3a5cae175854df7389bd33209d2adca1f94/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b63f89783d2e91950e9fe46580f1cc6b06109739", "url": "https://api.github.com/repos/rust-lang/rust/commits/b63f89783d2e91950e9fe46580f1cc6b06109739", "html_url": "https://github.com/rust-lang/rust/commit/b63f89783d2e91950e9fe46580f1cc6b06109739"}, {"sha": "91611fc3d0ee8a7a0a7accff4377e3a21fd7b6c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/91611fc3d0ee8a7a0a7accff4377e3a21fd7b6c4", "html_url": "https://github.com/rust-lang/rust/commit/91611fc3d0ee8a7a0a7accff4377e3a21fd7b6c4"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "c3bd6a2bc187d38cdd176fa19c4df2f369f9c2be", "filename": "src/libpanic_abort/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48a0f3a5cae175854df7389bd33209d2adca1f94/src%2Flibpanic_abort%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48a0f3a5cae175854df7389bd33209d2adca1f94/src%2Flibpanic_abort%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_abort%2Flib.rs?ref=48a0f3a5cae175854df7389bd33209d2adca1f94", "patch": "@@ -53,7 +53,7 @@ pub unsafe extern fn __rust_maybe_catch_panic(f: fn(*mut u8),\n pub unsafe extern fn __rust_start_panic(_data: usize, _vtable: usize) -> u32 {\n     abort();\n \n-    #[cfg(unix)]\n+    #[cfg(any(unix, target_os = \"cloudabi\"))]\n     unsafe fn abort() -> ! {\n         extern crate libc;\n         libc::abort();"}, {"sha": "92e40e8f26d40d646221b720edc1af9035ac35f2", "filename": "src/libpanic_unwind/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48a0f3a5cae175854df7389bd33209d2adca1f94/src%2Flibpanic_unwind%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48a0f3a5cae175854df7389bd33209d2adca1f94/src%2Flibpanic_unwind%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Flib.rs?ref=48a0f3a5cae175854df7389bd33209d2adca1f94", "patch": "@@ -68,6 +68,7 @@ mod imp;\n \n // i686-pc-windows-gnu and all others\n #[cfg(any(all(unix, not(target_os = \"emscripten\")),\n+          target_os = \"cloudabi\",\n           target_os = \"redox\",\n           all(windows, target_arch = \"x86\", target_env = \"gnu\")))]\n #[path = \"gcc.rs\"]"}]}