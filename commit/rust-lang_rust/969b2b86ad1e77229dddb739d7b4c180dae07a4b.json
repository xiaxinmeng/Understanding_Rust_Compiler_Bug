{"sha": "969b2b86ad1e77229dddb739d7b4c180dae07a4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2OWIyYjg2YWQxZTc3MjI5ZGRkYjczOWQ3YjRjMTgwZGFlMDdhNGI=", "commit": {"author": {"name": "Scott A Carr", "email": "s.carr1024@gmail.com", "date": "2016-08-09T15:17:50Z"}, "committer": {"name": "Scott A Carr", "email": "s.carr1024@gmail.com", "date": "2016-08-09T15:17:50Z"}, "message": "make tidy", "tree": {"sha": "bbf55d1298e0ebbf7d539cdf21baf07df36ce402", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbf55d1298e0ebbf7d539cdf21baf07df36ce402"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/969b2b86ad1e77229dddb739d7b4c180dae07a4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/969b2b86ad1e77229dddb739d7b4c180dae07a4b", "html_url": "https://github.com/rust-lang/rust/commit/969b2b86ad1e77229dddb739d7b4c180dae07a4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/969b2b86ad1e77229dddb739d7b4c180dae07a4b/comments", "author": {"login": "scottcarr", "id": 472477, "node_id": "MDQ6VXNlcjQ3MjQ3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/472477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottcarr", "html_url": "https://github.com/scottcarr", "followers_url": "https://api.github.com/users/scottcarr/followers", "following_url": "https://api.github.com/users/scottcarr/following{/other_user}", "gists_url": "https://api.github.com/users/scottcarr/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottcarr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottcarr/subscriptions", "organizations_url": "https://api.github.com/users/scottcarr/orgs", "repos_url": "https://api.github.com/users/scottcarr/repos", "events_url": "https://api.github.com/users/scottcarr/events{/privacy}", "received_events_url": "https://api.github.com/users/scottcarr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottcarr", "id": 472477, "node_id": "MDQ6VXNlcjQ3MjQ3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/472477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottcarr", "html_url": "https://github.com/scottcarr", "followers_url": "https://api.github.com/users/scottcarr/followers", "following_url": "https://api.github.com/users/scottcarr/following{/other_user}", "gists_url": "https://api.github.com/users/scottcarr/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottcarr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottcarr/subscriptions", "organizations_url": "https://api.github.com/users/scottcarr/orgs", "repos_url": "https://api.github.com/users/scottcarr/repos", "events_url": "https://api.github.com/users/scottcarr/events{/privacy}", "received_events_url": "https://api.github.com/users/scottcarr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f8093856dceb3e6bd740ab1238e132eddb203ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f8093856dceb3e6bd740ab1238e132eddb203ca", "html_url": "https://github.com/rust-lang/rust/commit/9f8093856dceb3e6bd740ab1238e132eddb203ca"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "5ca60a70a7c8c9699c51f285738b78ae0bf6992b", "filename": "src/librustc/mir/tcx.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/969b2b86ad1e77229dddb739d7b4c180dae07a4b/src%2Flibrustc%2Fmir%2Ftcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/969b2b86ad1e77229dddb739d7b4c180dae07a4b/src%2Flibrustc%2Fmir%2Ftcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Ftcx.rs?ref=969b2b86ad1e77229dddb739d7b4c180dae07a4b", "patch": "@@ -133,7 +133,7 @@ impl<'tcx> Lvalue<'tcx> {\n }\n \n impl<'tcx> Rvalue<'tcx> {\n-    pub fn ty<'a, 'gcx>(&self, mir: &Mir<'tcx>, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> Option<Ty<'tcx>> \n+    pub fn ty<'a, 'gcx>(&self, mir: &Mir<'tcx>, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> Option<Ty<'tcx>>\n     {\n         match self {\n             &Rvalue::Use(ref operand) => Some(operand.ty(mir, tcx)),\n@@ -207,7 +207,7 @@ impl<'tcx> Operand<'tcx> {\n             &Operand::Consume(ref l) => l.ty(mir, tcx).to_ty(tcx),\n             &Operand::Constant(ref c) => c.ty,\n         }\n-    }    \n+    }\n }\n \n impl<'tcx> BinOp {\n@@ -232,7 +232,7 @@ impl<'tcx> BinOp {\n                 tcx.types.bool\n             }\n         }\n-    }  \n+    }\n }\n \n impl BorrowKind {"}]}