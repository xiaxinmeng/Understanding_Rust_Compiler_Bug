{"sha": "b31bb097f519f03a5925da376d4ef2fbc8f30c62", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMWJiMDk3ZjUxOWYwM2E1OTI1ZGEzNzZkNGVmMmZiYzhmMzBjNjI=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-01-08T17:10:50Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-01-22T09:54:30Z"}, "message": "resolve module docs based on inner/outer attributes", "tree": {"sha": "4b55903785680119cb8d5951e342bddc2bd6498c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b55903785680119cb8d5951e342bddc2bd6498c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b31bb097f519f03a5925da376d4ef2fbc8f30c62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b31bb097f519f03a5925da376d4ef2fbc8f30c62", "html_url": "https://github.com/rust-lang/rust/commit/b31bb097f519f03a5925da376d4ef2fbc8f30c62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b31bb097f519f03a5925da376d4ef2fbc8f30c62/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a62b17f7d68dfa1ec2f25e02e5cd3dc0095ea94", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a62b17f7d68dfa1ec2f25e02e5cd3dc0095ea94", "html_url": "https://github.com/rust-lang/rust/commit/1a62b17f7d68dfa1ec2f25e02e5cd3dc0095ea94"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "e1dbcb27864d87cd940f39dd1da1faf01ab35abe", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b31bb097f519f03a5925da376d4ef2fbc8f30c62/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b31bb097f519f03a5925da376d4ef2fbc8f30c62/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=b31bb097f519f03a5925da376d4ef2fbc8f30c62", "patch": "@@ -20,7 +20,7 @@ pub use self::FunctionRetTy::*;\n pub use self::Visibility::*;\n \n use syntax::abi::Abi;\n-use syntax::ast;\n+use syntax::ast::{self, AttrStyle};\n use syntax::attr;\n use syntax::codemap::Spanned;\n use syntax::feature_gate::UnstableFeatures;\n@@ -472,11 +472,22 @@ impl Clean<Item> for doctree::Module {\n             \"\".to_string()\n         };\n \n-        // maintain a stack of mod ids\n-        // we could also pass this down through clean()\n-        // but that might complicate things.\n-        cx.mod_ids.borrow_mut().push(self.id);\n-        let attrs = self.attrs.clean(cx);\n+        // maintain a stack of mod ids, for doc comment path resolution\n+        // but we also need to resolve the module's own docs based on whether its docs were written\n+        // inside or outside the module, so check for that\n+        let attrs = if self.attrs.iter()\n+                                 .filter(|a| a.check_name(\"doc\"))\n+                                 .next()\n+                                 .map_or(true, |a| a.style == AttrStyle::Inner) {\n+            // inner doc comment, use the module's own scope for resolution\n+            cx.mod_ids.borrow_mut().push(self.id);\n+            self.attrs.clean(cx)\n+        } else {\n+            // outer doc comment, use its parent's scope\n+            let attrs = self.attrs.clean(cx);\n+            cx.mod_ids.borrow_mut().push(self.id);\n+            attrs\n+        };\n \n         let mut items: Vec<Item> = vec![];\n         items.extend(self.extern_crates.iter().map(|x| x.clean(cx)));"}]}