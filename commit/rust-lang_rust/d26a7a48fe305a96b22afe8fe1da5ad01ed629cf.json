{"sha": "d26a7a48fe305a96b22afe8fe1da5ad01ed629cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNmE3YTQ4ZmUzMDVhOTZiMjJhZmU4ZmUxZGE1YWQwMWVkNjI5Y2Y=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-04-18T14:55:19Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-04-28T08:15:03Z"}, "message": "do not access `typeck_tables` map directly", "tree": {"sha": "d39db339f5e4a3092e9f09a9f671756c4c3d8b93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d39db339f5e4a3092e9f09a9f671756c4c3d8b93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d26a7a48fe305a96b22afe8fe1da5ad01ed629cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d26a7a48fe305a96b22afe8fe1da5ad01ed629cf", "html_url": "https://github.com/rust-lang/rust/commit/d26a7a48fe305a96b22afe8fe1da5ad01ed629cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d26a7a48fe305a96b22afe8fe1da5ad01ed629cf/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b11da34afbcd1f476c73e307158c41bd18a41bd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b11da34afbcd1f476c73e307158c41bd18a41bd8", "html_url": "https://github.com/rust-lang/rust/commit/b11da34afbcd1f476c73e307158c41bd18a41bd8"}], "stats": {"total": 26, "additions": 9, "deletions": 17}, "files": [{"sha": "34aae78ec5a875811975e4d64f517ca2bf4f8727", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d26a7a48fe305a96b22afe8fe1da5ad01ed629cf/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a7a48fe305a96b22afe8fe1da5ad01ed629cf/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=d26a7a48fe305a96b22afe8fe1da5ad01ed629cf", "patch": "@@ -114,15 +114,11 @@ impl<'l, 'tcx: 'l, 'll, D: Dump + 'll> DumpVisitor<'l, 'tcx, 'll, D> {\n         where F: FnOnce(&mut DumpVisitor<'l, 'tcx, 'll, D>)\n     {\n         let item_def_id = self.tcx.hir.local_def_id(item_id);\n-        match self.tcx.maps.typeck_tables_of.borrow().get(&item_def_id) {\n-            Some(tables) => {\n-                let old_tables = self.save_ctxt.tables;\n-                self.save_ctxt.tables = tables;\n-                f(self);\n-                self.save_ctxt.tables = old_tables;\n-            }\n-            None => f(self),\n-        }\n+        let tables = self.tcx.typeck_tables_of(item_def_id);\n+        let old_tables = self.save_ctxt.tables;\n+        self.save_ctxt.tables = tables;\n+        f(self);\n+        self.save_ctxt.tables = old_tables;\n     }\n \n     pub fn dump_crate_info(&mut self, name: &str, krate: &ast::Crate) {"}, {"sha": "e4f7f01735e7344ad62d1e930f47e2249930529b", "filename": "src/librustc_typeck/check_unused.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d26a7a48fe305a96b22afe8fe1da5ad01ed629cf/src%2Flibrustc_typeck%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a7a48fe305a96b22afe8fe1da5ad01ed629cf/src%2Flibrustc_typeck%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck_unused.rs?ref=d26a7a48fe305a96b22afe8fe1da5ad01ed629cf", "patch": "@@ -66,14 +66,10 @@ pub fn check_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n         let item_id = tcx.hir.body_owner(body_id);\n         let item_def_id = tcx.hir.local_def_id(item_id);\n \n-        // this will have been written by the main typeck pass\n-        if let Some(tables) = tcx.maps.typeck_tables_of.borrow().get(&item_def_id) {\n-            let imports = &tables.used_trait_imports;\n-            debug!(\"GatherVisitor: item_def_id={:?} with imports {:#?}\", item_def_id, imports);\n-            used_trait_imports.extend(imports);\n-        } else {\n-            debug!(\"GatherVisitor: item_def_id={:?} with no imports\", item_def_id);\n-        }\n+        let tables = tcx.typeck_tables_of(item_def_id);\n+        let imports = &tables.used_trait_imports;\n+        debug!(\"GatherVisitor: item_def_id={:?} with imports {:#?}\", item_def_id, imports);\n+        used_trait_imports.extend(imports);\n     }\n \n     let mut visitor = CheckVisitor { tcx, used_trait_imports };"}]}