{"sha": "24f1f69d5a73a4ff7347772cdd414d14cbd2d486", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0ZjFmNjlkNWE3M2E0ZmY3MzQ3NzcyY2RkNDE0ZDE0Y2JkMmQ0ODY=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-12-04T04:33:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-04T04:33:42Z"}, "message": "Merge pull request #2236 from topecongiro/simple-array\n\nCompress an array whose items are all 'simple'", "tree": {"sha": "100e1026fd58be67d4cc0a577735b56230a334f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/100e1026fd58be67d4cc0a577735b56230a334f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24f1f69d5a73a4ff7347772cdd414d14cbd2d486", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaJNAmCRBK7hj4Ov3rIwAAdHIIACfjp/bXsD5vHig7RGzEdyMf\nVbxJCb5Ny/e6gFVlQiFDlf/RQQ/H4nTUtLYF2w2VwhiPCpoh/hZEYCO4q1nbXJhy\nQJ26LmkEGn7op97hqCTE9bj4J1zQlQpIpah0IkvIbeBXWAOd0fAEvFe2s4hB2XEe\nmPeriv15m9Y2qr0OERSI2UAwtbzpBFHUKaHiVKBsnlWquavPPmv4F9LJ5GJ2k+d4\nRRPadx/UKg3uXVr7YpCVhs12JZgi87/ve4BLS3/zS9c5oUy56j9IZaHZYU+1viyY\nTayuTfy3q8e1CIc1SOU0+2zomeqsa7SoeJ/ndMijjLbe/AU61AXRog71UyR4t/Y=\n=mFnT\n-----END PGP SIGNATURE-----\n", "payload": "tree 100e1026fd58be67d4cc0a577735b56230a334f7\nparent 77524632f3f2cd8c6af3a195908795ecd2e8d56a\nparent 1684df6a0ac5b97a122a8223a8412e6c442bbbfe\nauthor Nick Cameron <nrc@ncameron.org> 1512362022 +1300\ncommitter GitHub <noreply@github.com> 1512362022 +1300\n\nMerge pull request #2236 from topecongiro/simple-array\n\nCompress an array whose items are all 'simple'"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24f1f69d5a73a4ff7347772cdd414d14cbd2d486", "html_url": "https://github.com/rust-lang/rust/commit/24f1f69d5a73a4ff7347772cdd414d14cbd2d486", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24f1f69d5a73a4ff7347772cdd414d14cbd2d486/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77524632f3f2cd8c6af3a195908795ecd2e8d56a", "url": "https://api.github.com/repos/rust-lang/rust/commits/77524632f3f2cd8c6af3a195908795ecd2e8d56a", "html_url": "https://github.com/rust-lang/rust/commit/77524632f3f2cd8c6af3a195908795ecd2e8d56a"}, {"sha": "1684df6a0ac5b97a122a8223a8412e6c442bbbfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/1684df6a0ac5b97a122a8223a8412e6c442bbbfe", "html_url": "https://github.com/rust-lang/rust/commit/1684df6a0ac5b97a122a8223a8412e6c442bbbfe"}], "stats": {"total": 203, "additions": 57, "deletions": 146}, "files": [{"sha": "db256c3ba7de2f4dd6d046a1bc9868ac5793f3dc", "filename": "src/expr.rs", "status": "modified", "additions": 49, "deletions": 32, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/24f1f69d5a73a4ff7347772cdd414d14cbd2d486/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24f1f69d5a73a4ff7347772cdd414d14cbd2d486/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=24f1f69d5a73a4ff7347772cdd414d14cbd2d486", "patch": "@@ -436,38 +436,7 @@ pub fn rewrite_array<T: Rewrite + Spanned + ToExpr>(\n         }\n     }\n \n-    let has_long_item = items\n-        .iter()\n-        .any(|li| li.item.as_ref().map(|s| s.len() > 10).unwrap_or(false));\n-\n-    let tactic = match context.config.indent_style() {\n-        IndentStyle::Block => {\n-            // FIXME wrong shape in one-line case\n-            match shape.width.checked_sub(2 * bracket_size) {\n-                Some(width) => {\n-                    let tactic = ListTactic::LimitedHorizontalVertical(\n-                        context.config.width_heuristics().array_width,\n-                    );\n-                    definitive_tactic(&items, tactic, Separator::Comma, width)\n-                }\n-                None => DefinitiveListTactic::Vertical,\n-            }\n-        }\n-        IndentStyle::Visual => {\n-            if has_long_item || items.iter().any(ListItem::is_multiline) {\n-                definitive_tactic(\n-                    &items,\n-                    ListTactic::LimitedHorizontalVertical(\n-                        context.config.width_heuristics().array_width,\n-                    ),\n-                    Separator::Comma,\n-                    nested_shape.width,\n-                )\n-            } else {\n-                DefinitiveListTactic::Mixed\n-            }\n-        }\n-    };\n+    let tactic = array_tactic(context, shape, nested_shape, exprs, &items, bracket_size);\n     let ends_with_newline = tactic.ends_with_newline(context.config.indent_style());\n \n     let fmt = ListFormatting {\n@@ -518,6 +487,54 @@ pub fn rewrite_array<T: Rewrite + Spanned + ToExpr>(\n     Some(result)\n }\n \n+fn array_tactic<T: Rewrite + Spanned + ToExpr>(\n+    context: &RewriteContext,\n+    shape: Shape,\n+    nested_shape: Shape,\n+    exprs: &[&T],\n+    items: &[ListItem],\n+    bracket_size: usize,\n+) -> DefinitiveListTactic {\n+    let has_long_item = items\n+        .iter()\n+        .any(|li| li.item.as_ref().map(|s| s.len() > 10).unwrap_or(false));\n+\n+    match context.config.indent_style() {\n+        IndentStyle::Block => {\n+            let tactic = match shape.width.checked_sub(2 * bracket_size) {\n+                Some(width) => {\n+                    let tactic = ListTactic::LimitedHorizontalVertical(\n+                        context.config.width_heuristics().array_width,\n+                    );\n+                    definitive_tactic(items, tactic, Separator::Comma, width)\n+                }\n+                None => DefinitiveListTactic::Vertical,\n+            };\n+            if tactic == DefinitiveListTactic::Vertical && !has_long_item\n+                && is_every_args_simple(exprs)\n+            {\n+                DefinitiveListTactic::Mixed\n+            } else {\n+                tactic\n+            }\n+        }\n+        IndentStyle::Visual => {\n+            if has_long_item || items.iter().any(ListItem::is_multiline) {\n+                definitive_tactic(\n+                    items,\n+                    ListTactic::LimitedHorizontalVertical(\n+                        context.config.width_heuristics().array_width,\n+                    ),\n+                    Separator::Comma,\n+                    nested_shape.width,\n+                )\n+            } else {\n+                DefinitiveListTactic::Mixed\n+            }\n+        }\n+    }\n+}\n+\n fn nop_block_collapse(block_str: Option<String>, budget: usize) -> Option<String> {\n     debug!(\"nop_block_collapse {:?} {}\", block_str, budget);\n     block_str.map(|block_str| {"}, {"sha": "277990c5a60e0e2c7a02739d231ee30d54c781e5", "filename": "tests/target/expr-block.rs", "status": "modified", "additions": 2, "deletions": 35, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/24f1f69d5a73a4ff7347772cdd414d14cbd2d486/tests%2Ftarget%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24f1f69d5a73a4ff7347772cdd414d14cbd2d486/tests%2Ftarget%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr-block.rs?ref=24f1f69d5a73a4ff7347772cdd414d14cbd2d486", "patch": "@@ -41,41 +41,8 @@ fn arrays() {\n \n fn arrays() {\n     let x = [\n-        0,\n-        1,\n-        2,\n-        3,\n-        4,\n-        5,\n-        6,\n-        7,\n-        8,\n-        9,\n-        0,\n-        1,\n-        2,\n-        3,\n-        4,\n-        5,\n-        6,\n-        7,\n-        8,\n-        9,\n-        0,\n-        7,\n-        8,\n-        9,\n-        0,\n-        1,\n-        2,\n-        3,\n-        4,\n-        5,\n-        6,\n-        7,\n-        8,\n-        9,\n-        0,\n+        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 7, 8, 9, 0, 1, 2, 3, 4, 5,\n+        6, 7, 8, 9, 0,\n     ];\n \n     let y = [/* comment */ 1, 2 /* post comment */, 3];"}, {"sha": "fff0650f4599f18fc5cac905da6c7d8620eb7477", "filename": "tests/target/expr.rs", "status": "modified", "additions": 2, "deletions": 35, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/24f1f69d5a73a4ff7347772cdd414d14cbd2d486/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24f1f69d5a73a4ff7347772cdd414d14cbd2d486/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=24f1f69d5a73a4ff7347772cdd414d14cbd2d486", "patch": "@@ -171,41 +171,8 @@ fn issue184(source: &str) {\n \n fn arrays() {\n     let x = [\n-        0,\n-        1,\n-        2,\n-        3,\n-        4,\n-        5,\n-        6,\n-        7,\n-        8,\n-        9,\n-        0,\n-        1,\n-        2,\n-        3,\n-        4,\n-        5,\n-        6,\n-        7,\n-        8,\n-        9,\n-        0,\n-        7,\n-        8,\n-        9,\n-        0,\n-        1,\n-        2,\n-        3,\n-        4,\n-        5,\n-        6,\n-        7,\n-        8,\n-        9,\n-        0,\n+        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 7, 8, 9, 0, 1, 2, 3, 4, 5,\n+        6, 7, 8, 9, 0,\n     ];\n \n     let y = [/* comment */ 1, 2 /* post comment */, 3];"}, {"sha": "dc1a5c78c5da584e7b25ce14f96f74354661895e", "filename": "tests/target/static.rs", "status": "modified", "additions": 4, "deletions": 44, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/24f1f69d5a73a4ff7347772cdd414d14cbd2d486/tests%2Ftarget%2Fstatic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24f1f69d5a73a4ff7347772cdd414d14cbd2d486/tests%2Ftarget%2Fstatic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstatic.rs?ref=24f1f69d5a73a4ff7347772cdd414d14cbd2d486", "patch": "@@ -2,50 +2,10 @@ const FILE_GENERIC_READ: DWORD =\n     STANDARD_RIGHTS_READ | FILE_READ_DATA | FILE_READ_ATTRIBUTES | FILE_READ_EA | SYNCHRONIZE;\n \n static boolnames: &'static [&'static str] = &[\n-    \"bw\",\n-    \"am\",\n-    \"xsb\",\n-    \"xhp\",\n-    \"xenl\",\n-    \"eo\",\n-    \"gn\",\n-    \"hc\",\n-    \"km\",\n-    \"hs\",\n-    \"in\",\n-    \"db\",\n-    \"da\",\n-    \"mir\",\n-    \"msgr\",\n-    \"os\",\n-    \"eslok\",\n-    \"xt\",\n-    \"hz\",\n-    \"ul\",\n-    \"xon\",\n-    \"nxon\",\n-    \"mc5i\",\n-    \"chts\",\n-    \"nrrmc\",\n-    \"npc\",\n-    \"ndscr\",\n-    \"ccc\",\n-    \"bce\",\n-    \"hls\",\n-    \"xhpa\",\n-    \"crxm\",\n-    \"daisy\",\n-    \"xvpa\",\n-    \"sam\",\n-    \"cpix\",\n-    \"lpix\",\n-    \"OTbs\",\n-    \"OTns\",\n-    \"OTnc\",\n-    \"OTMT\",\n-    \"OTNL\",\n-    \"OTpt\",\n-    \"OTxr\",\n+    \"bw\", \"am\", \"xsb\", \"xhp\", \"xenl\", \"eo\", \"gn\", \"hc\", \"km\", \"hs\", \"in\", \"db\", \"da\", \"mir\",\n+    \"msgr\", \"os\", \"eslok\", \"xt\", \"hz\", \"ul\", \"xon\", \"nxon\", \"mc5i\", \"chts\", \"nrrmc\", \"npc\",\n+    \"ndscr\", \"ccc\", \"bce\", \"hls\", \"xhpa\", \"crxm\", \"daisy\", \"xvpa\", \"sam\", \"cpix\", \"lpix\", \"OTbs\",\n+    \"OTns\", \"OTnc\", \"OTMT\", \"OTNL\", \"OTpt\", \"OTxr\",\n ];\n \n static mut name: SomeType ="}]}