{"sha": "897745bf6744e781828907ba46268a9349bb3c38", "node_id": "C_kwDOAAsO6NoAKDg5Nzc0NWJmNjc0NGU3ODE4Mjg5MDdiYTQ2MjY4YTkzNDliYjNjMzg", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-06-22T06:16:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-22T06:16:09Z"}, "message": "Rollup merge of #96768 - m-ou-se:futex-fuchsia, r=tmandry\n\nUse futex based thread parker on Fuchsia.", "tree": {"sha": "436eb4879b04318c6bec65cb29f7a1d24c42df45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/436eb4879b04318c6bec65cb29f7a1d24c42df45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/897745bf6744e781828907ba46268a9349bb3c38", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJisrOpCRBK7hj4Ov3rIwAAz04IACswjSgzM9YNv/5jAxWG36x2\nsEaN+6CYWeC8JxArN4sayYA/95D84+95Mn4/buJl80gXjP4E48abRPFVI1nvi9xJ\nMLBPIdr0eShm1/WwptrMKQiNihSAEBm/XVKZj3KM5D86VMEPKuImPZ6oCzXWQkgL\neZD2u3txlUFxVOulBOWKqK+HkRr+QiYZ0wSFz5Qb2+fDhZKKrIUEpZDXmhJDee7g\nclNg0VkjFhpXhrgUQDR3zF7mMgN5zxczlCmkdF80uM1LW2/zS1djqDVAdAOPhHsS\njIuBU1oKScL34b0mUfxJPh6IgdU1bGWG9FRMewMG1DlXNQZuLeCxjpc23MC8smY=\n=nBiR\n-----END PGP SIGNATURE-----\n", "payload": "tree 436eb4879b04318c6bec65cb29f7a1d24c42df45\nparent 7b442f717ea9cd747e02abdbad7868366e0061b9\nparent ac38258dcc4938af8a6eedca687512f1b3b486fe\nauthor Yuki Okushi <jtitor@2k36.org> 1655878569 +0900\ncommitter GitHub <noreply@github.com> 1655878569 +0900\n\nRollup merge of #96768 - m-ou-se:futex-fuchsia, r=tmandry\n\nUse futex based thread parker on Fuchsia.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/897745bf6744e781828907ba46268a9349bb3c38", "html_url": "https://github.com/rust-lang/rust/commit/897745bf6744e781828907ba46268a9349bb3c38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/897745bf6744e781828907ba46268a9349bb3c38/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b442f717ea9cd747e02abdbad7868366e0061b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b442f717ea9cd747e02abdbad7868366e0061b9", "html_url": "https://github.com/rust-lang/rust/commit/7b442f717ea9cd747e02abdbad7868366e0061b9"}, {"sha": "ac38258dcc4938af8a6eedca687512f1b3b486fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac38258dcc4938af8a6eedca687512f1b3b486fe", "html_url": "https://github.com/rust-lang/rust/commit/ac38258dcc4938af8a6eedca687512f1b3b486fe"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "ab516a7f76dd027824be9068ec1edbcae9b935a0", "filename": "library/std/src/sys/unix/futex.rs", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/897745bf6744e781828907ba46268a9349bb3c38/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/897745bf6744e781828907ba46268a9349bb3c38/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs?ref=897745bf6744e781828907ba46268a9349bb3c38", "patch": "@@ -5,6 +5,7 @@\n     target_os = \"freebsd\",\n     target_os = \"openbsd\",\n     target_os = \"dragonfly\",\n+    target_os = \"fuchsia\",\n ))]\n \n use crate::sync::atomic::AtomicU32;\n@@ -237,3 +238,52 @@ pub fn futex_wake(futex: &AtomicU32) -> bool {\n pub fn futex_wake_all(futex: &AtomicU32) {\n     unsafe { emscripten_futex_wake(futex, i32::MAX) };\n }\n+\n+#[cfg(target_os = \"fuchsia\")]\n+mod zircon {\n+    type zx_time_t = i64;\n+    type zx_futex_t = crate::sync::atomic::AtomicU32;\n+    type zx_handle_t = u32;\n+    type zx_status_t = i32;\n+\n+    pub const ZX_HANDLE_INVALID: zx_handle_t = 0;\n+    pub const ZX_ERR_TIMED_OUT: zx_status_t = -21;\n+    pub const ZX_TIME_INFINITE: zx_time_t = zx_time_t::MAX;\n+\n+    extern \"C\" {\n+        pub fn zx_futex_wait(\n+            value_ptr: *const zx_futex_t,\n+            current_value: zx_futex_t,\n+            new_futex_owner: zx_handle_t,\n+            deadline: zx_time_t,\n+        ) -> zx_status_t;\n+        pub fn zx_futex_wake(value_ptr: *const zx_futex_t, wake_count: u32) -> zx_status_t;\n+        pub fn zx_clock_get_monotonic() -> zx_time_t;\n+    }\n+}\n+\n+#[cfg(target_os = \"fuchsia\")]\n+pub fn futex_wait(futex: &AtomicU32, expected: u32, timeout: Option<Duration>) -> bool {\n+    use crate::convert::TryFrom;\n+\n+    // Sleep forever if the timeout is longer than fits in a i64.\n+    let deadline = timeout\n+        .and_then(|d| {\n+            i64::try_from(d.as_nanos())\n+                .ok()?\n+                .checked_add(unsafe { zircon::zx_clock_get_monotonic() })\n+        })\n+        .unwrap_or(zircon::ZX_TIME_INFINITE);\n+\n+    unsafe {\n+        zircon::zx_futex_wait(futex, AtomicU32::new(expected), zircon::ZX_HANDLE_INVALID, deadline)\n+            != zircon::ZX_ERR_TIMED_OUT\n+    }\n+}\n+\n+// Fuchsia doesn't tell us how many threads are woken up, so this always returns false.\n+#[cfg(target_os = \"fuchsia\")]\n+pub fn futex_wake(futex: &AtomicU32) -> bool {\n+    unsafe { zircon::zx_futex_wake(futex, 1) };\n+    false\n+}"}, {"sha": "9f4d4f7e736e8af5712a689035c2fdeae427edbf", "filename": "library/std/src/sys/unix/thread_parker.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/897745bf6744e781828907ba46268a9349bb3c38/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread_parker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/897745bf6744e781828907ba46268a9349bb3c38/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread_parker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread_parker.rs?ref=897745bf6744e781828907ba46268a9349bb3c38", "patch": "@@ -7,6 +7,7 @@\n     target_os = \"freebsd\",\n     target_os = \"openbsd\",\n     target_os = \"dragonfly\",\n+    target_os = \"fuchsia\",\n )))]\n \n use crate::cell::UnsafeCell;"}, {"sha": "7e8bfb2565e454ca27b748e069ad51f3381e6f5d", "filename": "library/std/src/sys_common/thread_parker/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/897745bf6744e781828907ba46268a9349bb3c38/library%2Fstd%2Fsrc%2Fsys_common%2Fthread_parker%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/897745bf6744e781828907ba46268a9349bb3c38/library%2Fstd%2Fsrc%2Fsys_common%2Fthread_parker%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fthread_parker%2Fmod.rs?ref=897745bf6744e781828907ba46268a9349bb3c38", "patch": "@@ -6,6 +6,7 @@ cfg_if::cfg_if! {\n         target_os = \"freebsd\",\n         target_os = \"openbsd\",\n         target_os = \"dragonfly\",\n+        target_os = \"fuchsia\",\n     ))] {\n         mod futex;\n         pub use futex::Parker;"}]}