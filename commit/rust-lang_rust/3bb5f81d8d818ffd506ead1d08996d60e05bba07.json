{"sha": "3bb5f81d8d818ffd506ead1d08996d60e05bba07", "node_id": "C_kwDOAAsO6NoAKDNiYjVmODFkOGQ4MThmZmQ1MDZlYWQxZDA4OTk2ZDYwZTA1YmJhMDc", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2021-12-15T03:39:23Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2021-12-15T06:32:14Z"}, "message": "Remove unnecessary sigils around `Symbol::as_str()` calls.", "tree": {"sha": "c37bda802ed9c572239221e46c0dafa52004e6a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c37bda802ed9c572239221e46c0dafa52004e6a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bb5f81d8d818ffd506ead1d08996d60e05bba07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bb5f81d8d818ffd506ead1d08996d60e05bba07", "html_url": "https://github.com/rust-lang/rust/commit/3bb5f81d8d818ffd506ead1d08996d60e05bba07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bb5f81d8d818ffd506ead1d08996d60e05bba07/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4afb38f2f506e9f4d558449e2e303340d4fdb35", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4afb38f2f506e9f4d558449e2e303340d4fdb35", "html_url": "https://github.com/rust-lang/rust/commit/b4afb38f2f506e9f4d558449e2e303340d4fdb35"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "3887a8051f20995efc83e20c88b789e8d162ef84", "filename": "src/attr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3bb5f81d8d818ffd506ead1d08996d60e05bba07/src%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bb5f81d8d818ffd506ead1d08996d60e05bba07/src%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattr.rs?ref=3bb5f81d8d818ffd506ead1d08996d60e05bba07", "patch": "@@ -337,7 +337,7 @@ impl Rewrite for ast::Attribute {\n         } else {\n             let should_skip = self\n                 .ident()\n-                .map(|s| context.skip_context.skip_attribute(&s.name.as_str()))\n+                .map(|s| context.skip_context.skip_attribute(s.name.as_str()))\n                 .unwrap_or(false);\n             let prefix = attr_prefix(self);\n \n@@ -356,7 +356,7 @@ impl Rewrite for ast::Attribute {\n \n                         let literal_str = literal.as_str();\n                         let doc_comment_formatter =\n-                            DocCommentFormatter::new(&*literal_str, comment_style);\n+                            DocCommentFormatter::new(literal_str, comment_style);\n                         let doc_comment = format!(\"{}\", doc_comment_formatter);\n                         return rewrite_doc_comment(\n                             &doc_comment,"}, {"sha": "6cfe91c597ac890addf5ba718753fca4f9917dc1", "filename": "src/modules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bb5f81d8d818ffd506ead1d08996d60e05bba07/src%2Fmodules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bb5f81d8d818ffd506ead1d08996d60e05bba07/src%2Fmodules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmodules.rs?ref=3bb5f81d8d818ffd506ead1d08996d60e05bba07", "patch": "@@ -455,7 +455,7 @@ impl<'ast, 'sess, 'c> ModResolver<'ast, 'sess> {\n \n     fn push_inline_mod_directory(&mut self, id: symbol::Ident, attrs: &[ast::Attribute]) {\n         if let Some(path) = find_path_value(attrs) {\n-            self.directory.path.push(&*path.as_str());\n+            self.directory.path.push(path.as_str());\n             self.directory.ownership = DirectoryOwnership::Owned { relative: None };\n         } else {\n             // We have to push on the current module name in the case of relative"}, {"sha": "0c0b789a6efd1a63614621af60b8c89aa21753f0", "filename": "src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bb5f81d8d818ffd506ead1d08996d60e05bba07/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bb5f81d8d818ffd506ead1d08996d60e05bba07/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=3bb5f81d8d818ffd506ead1d08996d60e05bba07", "patch": "@@ -260,7 +260,7 @@ fn is_skip(meta_item: &MetaItem) -> bool {\n     match meta_item.kind {\n         MetaItemKind::Word => {\n             let path_str = pprust::path_to_string(&meta_item.path);\n-            path_str == *skip_annotation().as_str() || path_str == *depr_skip_annotation().as_str()\n+            path_str == skip_annotation().as_str() || path_str == depr_skip_annotation().as_str()\n         }\n         MetaItemKind::List(ref l) => {\n             meta_item.has_name(sym::cfg_attr) && l.len() == 2 && is_skip_nested(&l[1])"}]}