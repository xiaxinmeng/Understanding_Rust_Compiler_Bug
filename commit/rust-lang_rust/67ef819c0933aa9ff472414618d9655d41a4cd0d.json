{"sha": "67ef819c0933aa9ff472414618d9655d41a4cd0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3ZWY4MTljMDkzM2FhOWZmNDcyNDE0NjE4ZDk2NTVkNDFhNGNkMGQ=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2016-11-12T08:38:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-12T08:38:41Z"}, "message": "Rollup merge of #37669 - GuillaumeGomez:always_urls, r=brson\n\nAdd missing urls for FusedIterator and TrustedLen traits\n\nr? @steveklabnik", "tree": {"sha": "0ca9b3892541a70631c824e9f3daef4782430227", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ca9b3892541a70631c824e9f3daef4782430227"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67ef819c0933aa9ff472414618d9655d41a4cd0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67ef819c0933aa9ff472414618d9655d41a4cd0d", "html_url": "https://github.com/rust-lang/rust/commit/67ef819c0933aa9ff472414618d9655d41a4cd0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67ef819c0933aa9ff472414618d9655d41a4cd0d/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1187ecf5728335fa8638bab2a675c504fa5f24e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1187ecf5728335fa8638bab2a675c504fa5f24e5", "html_url": "https://github.com/rust-lang/rust/commit/1187ecf5728335fa8638bab2a675c504fa5f24e5"}, {"sha": "c67ff64b6fb57313c81e241f6a16b60783ffbb95", "url": "https://api.github.com/repos/rust-lang/rust/commits/c67ff64b6fb57313c81e241f6a16b60783ffbb95", "html_url": "https://github.com/rust-lang/rust/commit/c67ff64b6fb57313c81e241f6a16b60783ffbb95"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "e94582cda7c346e16d7aceb5d22c4a1faa381ab7", "filename": "src/libcore/iter/traits.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/67ef819c0933aa9ff472414618d9655d41a4cd0d/src%2Flibcore%2Fiter%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67ef819c0933aa9ff472414618d9655d41a4cd0d/src%2Flibcore%2Fiter%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits.rs?ref=67ef819c0933aa9ff472414618d9655d41a4cd0d", "patch": "@@ -666,13 +666,17 @@ float_sum_product! { f32 f64 }\n /// An iterator that always continues to yield `None` when exhausted.\n ///\n /// Calling next on a fused iterator that has returned `None` once is guaranteed\n-/// to return `None` again. This trait is should be implemented by all iterators\n+/// to return [`None`] again. This trait is should be implemented by all iterators\n /// that behave this way because it allows for some significant optimizations.\n ///\n /// Note: In general, you should not use `FusedIterator` in generic bounds if\n-/// you need a fused iterator. Instead, you should just call `Iterator::fused()`\n-/// on the iterator. If the iterator is already fused, the additional `Fuse`\n+/// you need a fused iterator. Instead, you should just call [`Iterator::fuse()`]\n+/// on the iterator. If the iterator is already fused, the additional [`Fuse`]\n /// wrapper will be a no-op with no performance penalty.\n+///\n+/// [`None`]: ../../std/option/enum.Option.html#variant.None\n+/// [`Iterator::fuse()`]: ../../std/iter/trait.Iterator.html#method.fuse\n+/// [`Fuse`]: ../../std/iter/struct.Fuse.html\n #[unstable(feature = \"fused\", issue = \"35602\")]\n pub trait FusedIterator: Iterator {}\n \n@@ -682,16 +686,20 @@ impl<'a, I: FusedIterator + ?Sized> FusedIterator for &'a mut I {}\n /// An iterator that reports an accurate length using size_hint.\n ///\n /// The iterator reports a size hint where it is either exact\n-/// (lower bound is equal to upper bound), or the upper bound is `None`.\n-/// The upper bound must only be `None` if the actual iterator length is\n-/// larger than `usize::MAX`.\n+/// (lower bound is equal to upper bound), or the upper bound is [`None`].\n+/// The upper bound must only be [`None`] if the actual iterator length is\n+/// larger than [`usize::MAX`].\n ///\n /// The iterator must produce exactly the number of elements it reported.\n ///\n /// # Safety\n ///\n /// This trait must only be implemented when the contract is upheld.\n-/// Consumers of this trait must inspect `.size_hint()`\u2019s upper bound.\n+/// Consumers of this trait must inspect [`.size_hint()`]\u2019s upper bound.\n+///\n+/// [`None`]: ../../std/option/enum.Option.html#variant.None\n+/// [`usize::MAX`]: ../../std/usize/constant.MAX.html\n+/// [`.size_hint()`]: ../../std/iter/trait.Iterator.html#method.size_hint\n #[unstable(feature = \"trusted_len\", issue = \"37572\")]\n pub unsafe trait TrustedLen : Iterator {}\n "}]}