{"sha": "d6da18e99d2fb4e67e3bc7503059282b5e14bd13", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2ZGExOGU5OWQyZmI0ZTY3ZTNiYzc1MDMwNTkyODJiNWUxNGJkMTM=", "commit": {"author": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2020-01-10T21:41:52Z"}, "committer": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2020-01-10T21:41:52Z"}, "message": "Address nit", "tree": {"sha": "712cdb37b25f553c5739f319a849414de480cff4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/712cdb37b25f553c5739f319a849414de480cff4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6da18e99d2fb4e67e3bc7503059282b5e14bd13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6da18e99d2fb4e67e3bc7503059282b5e14bd13", "html_url": "https://github.com/rust-lang/rust/commit/d6da18e99d2fb4e67e3bc7503059282b5e14bd13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6da18e99d2fb4e67e3bc7503059282b5e14bd13/comments", "author": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d1eea217d5b674e6cad77704f912a3a76505d70", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d1eea217d5b674e6cad77704f912a3a76505d70", "html_url": "https://github.com/rust-lang/rust/commit/1d1eea217d5b674e6cad77704f912a3a76505d70"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "cea18937f280ddfe95860a64fd586362052990c3", "filename": "crates/ra_lsp_server/src/world.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6da18e99d2fb4e67e3bc7503059282b5e14bd13/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6da18e99d2fb4e67e3bc7503059282b5e14bd13/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs?ref=d6da18e99d2fb4e67e3bc7503059282b5e14bd13", "patch": "@@ -135,7 +135,7 @@ impl WorldState {\n         let check_watcher = {\n             let first_workspace = workspaces.first().unwrap();\n             let cargo_project_root = match first_workspace {\n-                ProjectWorkspace::Cargo { cargo, .. } => cargo.workspace_root.clone(),\n+                ProjectWorkspace::Cargo { cargo, .. } => cargo.workspace_root().to_path_buf(),\n                 ProjectWorkspace::Json { .. } => {\n                     log::warn!(\n                         \"Cargo check watching only supported for cargo workspaces, disabling\""}, {"sha": "1832c101f097e637041b405ff81ffc0d03eebeda", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d6da18e99d2fb4e67e3bc7503059282b5e14bd13/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6da18e99d2fb4e67e3bc7503059282b5e14bd13/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=d6da18e99d2fb4e67e3bc7503059282b5e14bd13", "patch": "@@ -21,7 +21,7 @@ use crate::Result;\n pub struct CargoWorkspace {\n     packages: Arena<Package, PackageData>,\n     targets: Arena<Target, TargetData>,\n-    pub workspace_root: PathBuf,\n+    workspace_root: PathBuf,\n }\n \n #[derive(Deserialize, Clone, Debug, PartialEq, Eq)]\n@@ -225,4 +225,8 @@ impl CargoWorkspace {\n     pub fn target_by_root(&self, root: &Path) -> Option<Target> {\n         self.packages().filter_map(|pkg| pkg.targets(self).find(|it| it.root(self) == root)).next()\n     }\n+\n+    pub fn workspace_root(&self) -> &Path {\n+        &self.workspace_root\n+    }\n }"}, {"sha": "6a104e6f2c829bd92c55ed62bd94160238f35657", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6da18e99d2fb4e67e3bc7503059282b5e14bd13/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6da18e99d2fb4e67e3bc7503059282b5e14bd13/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=d6da18e99d2fb4e67e3bc7503059282b5e14bd13", "patch": "@@ -333,7 +333,7 @@ impl ProjectWorkspace {\n     pub fn workspace_root_for(&self, path: &Path) -> Option<&Path> {\n         match self {\n             ProjectWorkspace::Cargo { cargo, .. } => {\n-                Some(cargo.workspace_root.as_ref()).filter(|root| path.starts_with(root))\n+                Some(cargo.workspace_root()).filter(|root| path.starts_with(root))\n             }\n             ProjectWorkspace::Json { project: JsonProject { roots, .. } } => roots\n                 .iter()"}]}