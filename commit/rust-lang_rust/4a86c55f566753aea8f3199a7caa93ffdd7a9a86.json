{"sha": "4a86c55f566753aea8f3199a7caa93ffdd7a9a86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhODZjNTVmNTY2NzUzYWVhOGYzMTk5YTdjYWE5M2ZmZGQ3YTlhODY=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-01-14T04:23:51Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-01-28T13:12:53Z"}, "message": "record_killed_borrows_for_local takes Local by value", "tree": {"sha": "70fde38a60638eb29d3f1df0ea18c558afeb304c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70fde38a60638eb29d3f1df0ea18c558afeb304c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a86c55f566753aea8f3199a7caa93ffdd7a9a86", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAl4wM1UACgkQiMlBzaHU\nZDLibxAAg6KQEIo+uRByJm2acKnCQesi4kZmHVGW2pAqwJzYAaNM9Lp1I+Fvokby\nfLttkDaEbnETxBVdydBjP5MwVwusjnaUEAb9vCqVwqgbx2H1iYaGFWFdNgso5Kt2\n671NEBJl6BGXdwjfcbJRhO2mETJJgbwjlxbeWQJBksnNkEMymHpQlxkuPzX0SbtD\n36qvDTw4Cs38LhzqM3KtkCBORE0W2tihB3k93VdP5hKKkYtHKul7vKKKDqd1IxXD\nEHm6To4/9utzplZG5enHgle569dc35lXrdc6KnKZb7FDe/3P5ZHYzaPwhdoz3+CX\n7DRoP2DnOC66J7I2UBLa/zzpC+0mCCybK9Wo6eMwdTf60YtOIBidyIkGmik/LNdy\nNLWllaINqNpzfiE7/15PJa5B9e6eBfmPq0hvqYauQ/lI2yEc0aM+cbh0/7rsgPZF\nL6No/cXQ+HbUl7fu7Hp67cGtZyHyA0szcU5Y9w63XrGT7u00/8qS/HbUBxdc2CTt\nYuMID1W3wWLsQbiULeus7DTo2VCcRKRe/dpi/yEx9WFyj2NRkVMeA13PRAhDsD+l\nc+X5z44gTIDLpKQlbHhrqylidcZsAiF3TqheYhJh3xc87yDTGLWGvNJFICu3xYkb\nhijt1WPWo7RHGtRkcd7W+bB3iYQ/WO4ZBquiNAx1SsqcBcfOM5M=\n=oUKA\n-----END PGP SIGNATURE-----", "payload": "tree 70fde38a60638eb29d3f1df0ea18c558afeb304c\nparent a71cc4ca117f108508e850936cddf40b702aadb9\nauthor Santiago Pastorino <spastorino@gmail.com> 1578975831 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1580217173 -0300\n\nrecord_killed_borrows_for_local takes Local by value\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a86c55f566753aea8f3199a7caa93ffdd7a9a86", "html_url": "https://github.com/rust-lang/rust/commit/4a86c55f566753aea8f3199a7caa93ffdd7a9a86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a86c55f566753aea8f3199a7caa93ffdd7a9a86/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a71cc4ca117f108508e850936cddf40b702aadb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a71cc4ca117f108508e850936cddf40b702aadb9", "html_url": "https://github.com/rust-lang/rust/commit/a71cc4ca117f108508e850936cddf40b702aadb9"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "d85b55656ca20d1ac275a99de88a72cadf6dd11c", "filename": "src/librustc_mir/borrow_check/constraint_generation.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4a86c55f566753aea8f3199a7caa93ffdd7a9a86/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a86c55f566753aea8f3199a7caa93ffdd7a9a86/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs?ref=4a86c55f566753aea8f3199a7caa93ffdd7a9a86", "patch": "@@ -97,7 +97,7 @@ impl<'cg, 'cx, 'tcx> Visitor<'tcx> for ConstraintGeneration<'cg, 'cx, 'tcx> {\n             ));\n \n             // If there are borrows on this now dead local, we need to record them as `killed`.\n-            if let StatementKind::StorageDead(ref local) = statement.kind {\n+            if let StatementKind::StorageDead(local) = statement.kind {\n                 record_killed_borrows_for_local(\n                     all_facts,\n                     self.borrow_set,\n@@ -199,7 +199,7 @@ impl<'cx, 'cg, 'tcx> ConstraintGeneration<'cx, 'cg, 'tcx> {\n                         all_facts,\n                         self.borrow_set,\n                         self.location_table,\n-                        local,\n+                        *local,\n                         location,\n                     );\n                 }\n@@ -239,10 +239,10 @@ fn record_killed_borrows_for_local(\n     all_facts: &mut AllFacts,\n     borrow_set: &BorrowSet<'_>,\n     location_table: &LocationTable,\n-    local: &Local,\n+    local: Local,\n     location: Location,\n ) {\n-    if let Some(borrow_indices) = borrow_set.local_map.get(local) {\n+    if let Some(borrow_indices) = borrow_set.local_map.get(&local) {\n         all_facts.killed.reserve(borrow_indices.len());\n         for &borrow_index in borrow_indices {\n             let location_index = location_table.mid_index(location);"}]}