{"sha": "55a642c2d472034a66e1af4e81dbdc2fe42e7ddb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1YTY0MmMyZDQ3MjAzNGE2NmUxYWY0ZTgxZGJkYzJmZTQyZTdkZGI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-02-27T22:06:44Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-02-28T14:31:28Z"}, "message": "correct freevar encoding, add more debugging output", "tree": {"sha": "0cc7a4df7b0e3733432056a55f32b77758d5aae1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cc7a4df7b0e3733432056a55f32b77758d5aae1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55a642c2d472034a66e1af4e81dbdc2fe42e7ddb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55a642c2d472034a66e1af4e81dbdc2fe42e7ddb", "html_url": "https://github.com/rust-lang/rust/commit/55a642c2d472034a66e1af4e81dbdc2fe42e7ddb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55a642c2d472034a66e1af4e81dbdc2fe42e7ddb/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cffc6f84c1553fb7075d465f918d2ac335b15b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cffc6f84c1553fb7075d465f918d2ac335b15b1", "html_url": "https://github.com/rust-lang/rust/commit/8cffc6f84c1553fb7075d465f918d2ac335b15b1"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "4c859494d3284ebda33ad5c086e5e70330d786df", "filename": "src/comp/metadata/astencode.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/55a642c2d472034a66e1af4e81dbdc2fe42e7ddb/src%2Fcomp%2Fmetadata%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55a642c2d472034a66e1af4e81dbdc2fe42e7ddb/src%2Fcomp%2Fmetadata%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fastencode.rs?ref=55a642c2d472034a66e1af4e81dbdc2fe42e7ddb", "patch": "@@ -56,13 +56,21 @@ iface tr {\n \n fn encode_inlined_item(ecx: @e::encode_ctxt,\n                        ebml_w: ebml::writer,\n+                       path: ast_map::path,\n                        item: @ast::item) {\n+    #debug[\"> Encoding inlined item: %s::%s (%u)\",\n+           ast_map::path_to_str(path),\n+           item.ident,\n+           ebml_w.writer.tell()];\n     let id_range = compute_id_range(item);\n     ebml_w.wr_tag(c::tag_ast as uint) {||\n         encode_id_range(ebml_w, id_range);\n         encode_ast(ebml_w, item);\n         encode_side_tables_for_item(ecx, ebml_w, item);\n     }\n+    #debug[\"< Encoded inlined item: %s (%u)\",\n+           ast_map::path_to_str(path),\n+           ebml_w.writer.tell()];\n }\n \n fn decode_inlined_item(cdata: cstore::crate_metadata,\n@@ -74,15 +82,18 @@ fn decode_inlined_item(cdata: cstore::crate_metadata,\n     alt par_doc.opt_child(c::tag_ast) {\n       none { none }\n       some(ast_doc) {\n+        #debug[\"> Decoding inlined item: %s\", ast_map::path_to_str(path)];\n         let from_id_range = decode_id_range(ast_doc);\n         let to_id_range = reserve_id_range(dcx.tcx.sess, from_id_range);\n         let xcx = @{dcx: dcx,\n                     from_id_range: from_id_range,\n                     to_id_range: to_id_range};\n         let raw_item = decode_ast(ast_doc);\n         let item = renumber_ast(xcx, raw_item);\n+        #debug[\">> Item named: %s\", item.ident];\n         ast_map::map_decoded_item(dcx.tcx.items, path, item);\n         decode_side_tables(xcx, ast_doc);\n+        #debug[\"< Decoded inlined item: %s\", ast_map::path_to_str(path)];\n         some(item)\n       }\n     }\n@@ -629,7 +640,7 @@ fn encode_side_tables_for_id(ecx: @e::encode_ctxt,\n             ebml_w.id(id);\n             ebml_w.tag(c::tag_table_val) {||\n                 ebml_w.emit_from_vec(*fv) {|fv_entry|\n-                    encode_def(ebml_w, fv_entry.def);\n+                    encode_freevar_entry(ebml_w, *fv_entry)\n                 }\n             }\n         }\n@@ -759,7 +770,7 @@ fn decode_side_tables(xcx: extended_decode_ctxt,\n         let id0 = entry_doc[c::tag_table_id].as_int();\n         let id = xcx.tr_id(id0);\n \n-        #debug[\"side table document with tag 0x%x found for id %d (orig %d)\",\n+        #debug[\">> Side table document with tag 0x%x found for id %d (orig %d)\",\n                tag, id, id0];\n \n         if tag == (c::tag_table_mutbl as uint) {\n@@ -803,6 +814,8 @@ fn decode_side_tables(xcx: extended_decode_ctxt,\n                     #fmt[\"Unknown tag found in side tables: %x\", tag]);\n             }\n         }\n+\n+        #debug[\">< Side table doc loaded\"];\n     }\n }\n "}, {"sha": "705848b48ffbfd6114fd18f2488a876d3decf1ea", "filename": "src/comp/metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55a642c2d472034a66e1af4e81dbdc2fe42e7ddb/src%2Fcomp%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55a642c2d472034a66e1af4e81dbdc2fe42e7ddb/src%2Fcomp%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fencoder.rs?ref=55a642c2d472034a66e1af4e81dbdc2fe42e7ddb", "patch": "@@ -352,7 +352,7 @@ fn encode_info_for_item(ecx: @encode_ctxt, ebml_w: ebml::writer, item: @item,\n         encode_symbol(ecx, ebml_w, item.id);\n         encode_path(ebml_w, path, ast_map::path_name(item.ident));\n         if should_inline(path, item) {\n-            astencode::encode_inlined_item(ecx, ebml_w, item);\n+            astencode::encode_inlined_item(ecx, ebml_w, path, item);\n         }\n         ebml_w.end_tag();\n       }"}]}