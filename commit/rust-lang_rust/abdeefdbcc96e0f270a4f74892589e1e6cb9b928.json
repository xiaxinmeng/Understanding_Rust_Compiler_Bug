{"sha": "abdeefdbcc96e0f270a4f74892589e1e6cb9b928", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZGVlZmRiY2M5NmUwZjI3MGE0Zjc0ODkyNTg5ZTFlNmNiOWI5Mjg=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-12-30T01:04:12Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-01-05T01:28:54Z"}, "message": "Remove deprecated functionality from `char`.", "tree": {"sha": "80bf401b7c94a910f23981505781f326e82eb434", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80bf401b7c94a910f23981505781f326e82eb434"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abdeefdbcc96e0f270a4f74892589e1e6cb9b928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abdeefdbcc96e0f270a4f74892589e1e6cb9b928", "html_url": "https://github.com/rust-lang/rust/commit/abdeefdbcc96e0f270a4f74892589e1e6cb9b928", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abdeefdbcc96e0f270a4f74892589e1e6cb9b928/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5773bdefff2e47cc007f5cc2af3f80b30303d45a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5773bdefff2e47cc007f5cc2af3f80b30303d45a", "html_url": "https://github.com/rust-lang/rust/commit/5773bdefff2e47cc007f5cc2af3f80b30303d45a"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "1a619e57a9ce1ea8b73aaf092c59543711286881", "filename": "src/libunicode/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abdeefdbcc96e0f270a4f74892589e1e6cb9b928/src%2Flibunicode%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abdeefdbcc96e0f270a4f74892589e1e6cb9b928/src%2Flibunicode%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunicode%2Flib.rs?ref=abdeefdbcc96e0f270a4f74892589e1e6cb9b928", "patch": "@@ -58,9 +58,7 @@ mod u_str;\n /// however the converse is not always true due to the above range limits\n /// and, as such, should be performed via the `from_u32` function..\n pub mod char {\n-    pub use core::char::{MAX, from_u32};\n-    pub use core::char::{from_digit};\n-    pub use core::char::Char;\n+    pub use core::char::{MAX, from_u32, from_digit, Char};\n \n     pub use normalize::{decompose_canonical, decompose_compatible, compose};\n "}]}