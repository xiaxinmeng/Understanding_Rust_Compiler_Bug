{"sha": "adc321a1e3c9a3304befa09589bb60f5146f4ade", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYzMyMWExZTNjOWEzMzA0YmVmYTA5NTg5YmI2MGY1MTQ2ZjRhZGU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-06-04T10:12:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-04T10:12:45Z"}, "message": "Rollup merge of #72782 - petrochenkov:crtargs, r=varkor\n\nrustc_target: Remove `pre_link_args_crt`\n\nTo regain some more control over the definition of `+crt-static` (https://github.com/rust-lang/rust/pull/71586).\n\nAfter https://github.com/rust-lang/rust/pull/71769 this target option wasn't used anywhere except for VxWorks, and I suspect that for VxWorks its use may be redundant as well.", "tree": {"sha": "bd42b22aae391ad1627a286fd0573bf6f6fb3390", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd42b22aae391ad1627a286fd0573bf6f6fb3390"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adc321a1e3c9a3304befa09589bb60f5146f4ade", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe2MkeCRBK7hj4Ov3rIwAAdHIIAC4Tht2q+zN99cE778X5u0xb\n5EfsjSYEennX2MvjkmNpDvrdR4pgrTBwH3Ux6wJJ/on1EcQKPCZnxwcK3XYAlhLW\n2HcFrrpKg5bwmPNdbEyl1CloYoF+q8S7vfVJIuRg9dg0MVBmvm7Owxk+dBXkYfP3\n7fGDDyqbcKAPzcfiSwh8pwBWwA2X+dqFxG6LLQnWPiZtDDzV2zThHse56Zr44w2a\n3qafN8hSeRDzK6sQSP0Gve4oxnJAx2eDwty7mCFuC7ikp8op1YWLgY5tHVP3zUMN\nkT2zg8xmiVRyHKyNA9EaY7wVHWbGSJEDVYwA/5N/r0wY1BaQrhsjEeyrnKD27IQ=\n=uqQo\n-----END PGP SIGNATURE-----\n", "payload": "tree bd42b22aae391ad1627a286fd0573bf6f6fb3390\nparent 21ac561ab78ce0174b3471521501dc7ca85e8758\nparent b628358e9a78982982d818a0db4c9c5a8cad6a3f\nauthor Dylan DPC <dylan.dpc@gmail.com> 1591265565 +0200\ncommitter GitHub <noreply@github.com> 1591265565 +0200\n\nRollup merge of #72782 - petrochenkov:crtargs, r=varkor\n\nrustc_target: Remove `pre_link_args_crt`\n\nTo regain some more control over the definition of `+crt-static` (https://github.com/rust-lang/rust/pull/71586).\n\nAfter https://github.com/rust-lang/rust/pull/71769 this target option wasn't used anywhere except for VxWorks, and I suspect that for VxWorks its use may be redundant as well.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adc321a1e3c9a3304befa09589bb60f5146f4ade", "html_url": "https://github.com/rust-lang/rust/commit/adc321a1e3c9a3304befa09589bb60f5146f4ade", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adc321a1e3c9a3304befa09589bb60f5146f4ade/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21ac561ab78ce0174b3471521501dc7ca85e8758", "url": "https://api.github.com/repos/rust-lang/rust/commits/21ac561ab78ce0174b3471521501dc7ca85e8758", "html_url": "https://github.com/rust-lang/rust/commit/21ac561ab78ce0174b3471521501dc7ca85e8758"}, {"sha": "b628358e9a78982982d818a0db4c9c5a8cad6a3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b628358e9a78982982d818a0db4c9c5a8cad6a3f", "html_url": "https://github.com/rust-lang/rust/commit/b628358e9a78982982d818a0db4c9c5a8cad6a3f"}], "stats": {"total": 39, "additions": 18, "deletions": 21}, "files": [{"sha": "cff84b11aa09833acc29f76fe6591b8881b46e17", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/adc321a1e3c9a3304befa09589bb60f5146f4ade/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc321a1e3c9a3304befa09589bb60f5146f4ade/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=adc321a1e3c9a3304befa09589bb60f5146f4ade", "patch": "@@ -1253,20 +1253,10 @@ fn add_post_link_objects(\n \n /// Add arbitrary \"pre-link\" args defined by the target spec or from command line.\n /// FIXME: Determine where exactly these args need to be inserted.\n-fn add_pre_link_args(\n-    cmd: &mut dyn Linker,\n-    sess: &Session,\n-    flavor: LinkerFlavor,\n-    crate_type: CrateType,\n-) {\n+fn add_pre_link_args(cmd: &mut dyn Linker, sess: &Session, flavor: LinkerFlavor) {\n     if let Some(args) = sess.target.target.options.pre_link_args.get(&flavor) {\n         cmd.args(args);\n     }\n-    if let Some(args) = sess.target.target.options.pre_link_args_crt.get(&flavor) {\n-        if sess.crt_static(Some(crate_type)) {\n-            cmd.args(args);\n-        }\n-    }\n     cmd.args(&sess.opts.debugging_opts.pre_link_args);\n }\n \n@@ -1502,7 +1492,7 @@ fn linker_with_args<'a, B: ArchiveBuilder<'a>>(\n     let crt_objects_fallback = crt_objects_fallback(sess, crate_type);\n \n     // NO-OPT-OUT, OBJECT-FILES-MAYBE, CUSTOMIZATION-POINT\n-    add_pre_link_args(cmd, sess, flavor, crate_type);\n+    add_pre_link_args(cmd, sess, flavor);\n \n     // NO-OPT-OUT\n     add_link_script(cmd, sess, tmpdir, crate_type);"}, {"sha": "d9fed998c92fb8afd65618658447130f9d1e5980", "filename": "src/librustc_codegen_ssa/back/linker.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/adc321a1e3c9a3304befa09589bb60f5146f4ade/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc321a1e3c9a3304befa09589bb60f5146f4ade/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs?ref=adc321a1e3c9a3304befa09589bb60f5146f4ade", "patch": "@@ -315,6 +315,21 @@ impl<'a> Linker for GccLinker<'a> {\n                 self.build_dylib(out_filename);\n             }\n         }\n+        // VxWorks compiler driver introduced `--static-crt` flag specifically for rustc,\n+        // it switches linking for libc and similar system libraries to static without using\n+        // any `#[link]` attributes in the `libc` crate, see #72782 for details.\n+        // FIXME: Switch to using `#[link]` attributes in the `libc` crate\n+        // similarly to other targets.\n+        if self.sess.target.target.target_os == \"vxworks\"\n+            && matches!(\n+                output_kind,\n+                LinkOutputKind::StaticNoPicExe\n+                    | LinkOutputKind::StaticPicExe\n+                    | LinkOutputKind::StaticDylib\n+            )\n+        {\n+            self.cmd.arg(\"--static-crt\");\n+        }\n     }\n \n     fn link_dylib(&mut self, lib: Symbol) {"}, {"sha": "f329c8c06cc2edd860fd8c4d142c2cc7546be1ef", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/adc321a1e3c9a3304befa09589bb60f5146f4ade/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc321a1e3c9a3304befa09589bb60f5146f4ade/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=adc321a1e3c9a3304befa09589bb60f5146f4ade", "patch": "@@ -733,8 +733,7 @@ pub struct TargetOptions {\n     pub lld_flavor: LldFlavor,\n \n     /// Linker arguments that are passed *before* any user-defined libraries.\n-    pub pre_link_args: LinkArgs, // ... unconditionally\n-    pub pre_link_args_crt: LinkArgs, // ... when linking with a bundled crt\n+    pub pre_link_args: LinkArgs,\n     /// Objects to link before and after all other object code.\n     pub pre_link_objects: CrtObjects,\n     pub post_link_objects: CrtObjects,\n@@ -997,7 +996,6 @@ impl Default for TargetOptions {\n             linker: option_env!(\"CFG_DEFAULT_LINKER\").map(|s| s.to_string()),\n             lld_flavor: LldFlavor::Ld,\n             pre_link_args: LinkArgs::new(),\n-            pre_link_args_crt: LinkArgs::new(),\n             post_link_args: LinkArgs::new(),\n             link_script: None,\n             asm_args: Vec::new(),\n@@ -1397,7 +1395,6 @@ impl Target {\n         key!(post_link_objects_fallback, link_objects);\n         key!(crt_objects_fallback, crt_objects_fallback)?;\n         key!(pre_link_args, link_args);\n-        key!(pre_link_args_crt, link_args);\n         key!(late_link_args, link_args);\n         key!(late_link_args_dynamic, link_args);\n         key!(late_link_args_static, link_args);\n@@ -1629,7 +1626,6 @@ impl ToJson for Target {\n         target_option_val!(post_link_objects_fallback);\n         target_option_val!(crt_objects_fallback);\n         target_option_val!(link_args - pre_link_args);\n-        target_option_val!(link_args - pre_link_args_crt);\n         target_option_val!(link_args - late_link_args);\n         target_option_val!(link_args - late_link_args_dynamic);\n         target_option_val!(link_args - late_link_args_static);"}, {"sha": "788d1d2c48405f1762ba3dfcfbd3deb202531756", "filename": "src/librustc_target/spec/tests/tests_impl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/adc321a1e3c9a3304befa09589bb60f5146f4ade/src%2Flibrustc_target%2Fspec%2Ftests%2Ftests_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc321a1e3c9a3304befa09589bb60f5146f4ade/src%2Flibrustc_target%2Fspec%2Ftests%2Ftests_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Ftests%2Ftests_impl.rs?ref=adc321a1e3c9a3304befa09589bb60f5146f4ade", "patch": "@@ -25,7 +25,6 @@ impl Target {\n         );\n         for args in &[\n             &self.options.pre_link_args,\n-            &self.options.pre_link_args_crt,\n             &self.options.late_link_args,\n             &self.options.late_link_args_dynamic,\n             &self.options.late_link_args_static,"}, {"sha": "777bb58d7db8fc5bcd5524fd10a25a3e609d56dd", "filename": "src/librustc_target/spec/vxworks_base.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/adc321a1e3c9a3304befa09589bb60f5146f4ade/src%2Flibrustc_target%2Fspec%2Fvxworks_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc321a1e3c9a3304befa09589bb60f5146f4ade/src%2Flibrustc_target%2Fspec%2Fvxworks_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fvxworks_base.rs?ref=adc321a1e3c9a3304befa09589bb60f5146f4ade", "patch": "@@ -1,8 +1,6 @@\n use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n-    let mut args_crt = LinkArgs::new();\n-    args_crt.insert(LinkerFlavor::Gcc, vec![\"--static-crt\".to_string()]);\n     let mut args = LinkArgs::new();\n     args.insert(\n         LinkerFlavor::Gcc,\n@@ -29,7 +27,6 @@ pub fn opts() -> TargetOptions {\n         pre_link_args: args,\n         position_independent_executables: false,\n         has_elf_tls: true,\n-        pre_link_args_crt: args_crt,\n         crt_static_default: true,\n         crt_static_respected: true,\n         crt_static_allows_dylibs: true,"}]}