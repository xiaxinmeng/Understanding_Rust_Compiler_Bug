{"sha": "0ef11587b0130607627414f5b92bf657d01d7b63", "node_id": "C_kwDOAAsO6NoAKDBlZjExNTg3YjAxMzA2MDc2Mjc0MTRmNWI5MmJmNjU3ZDAxZDdiNjM", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-09-26T16:38:05Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-10-20T18:42:35Z"}, "message": "Remove NullOp::Box", "tree": {"sha": "3dae367af8bac7a42515444d4b6d7b6f4587baa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dae367af8bac7a42515444d4b6d7b6f4587baa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ef11587b0130607627414f5b92bf657d01d7b63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ef11587b0130607627414f5b92bf657d01d7b63", "html_url": "https://github.com/rust-lang/rust/commit/0ef11587b0130607627414f5b92bf657d01d7b63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ef11587b0130607627414f5b92bf657d01d7b63/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44cce7a4c878ca99451910dae960dc1b617da634", "url": "https://api.github.com/repos/rust-lang/rust/commits/44cce7a4c878ca99451910dae960dc1b617da634", "html_url": "https://github.com/rust-lang/rust/commit/44cce7a4c878ca99451910dae960dc1b617da634"}], "stats": {"total": 25, "additions": 0, "deletions": 25}, "files": [{"sha": "a17d10cff665b7119f6f3b2e6f12b5b33ee45395", "filename": "src/base.rs", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/0ef11587b0130607627414f5b92bf657d01d7b63/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ef11587b0130607627414f5b92bf657d01d7b63/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=0ef11587b0130607627414f5b92bf657d01d7b63", "patch": "@@ -708,30 +708,6 @@ fn codegen_stmt<'tcx>(\n                     let operand = operand.load_scalar(fx);\n                     lval.write_cvalue(fx, CValue::by_val(operand, box_layout));\n                 }\n-                Rvalue::NullaryOp(NullOp::Box, content_ty) => {\n-                    let usize_type = fx.clif_type(fx.tcx.types.usize).unwrap();\n-                    let content_ty = fx.monomorphize(content_ty);\n-                    let layout = fx.layout_of(content_ty);\n-                    let llsize = fx.bcx.ins().iconst(usize_type, layout.size.bytes() as i64);\n-                    let llalign = fx.bcx.ins().iconst(usize_type, layout.align.abi.bytes() as i64);\n-                    let box_layout = fx.layout_of(fx.tcx.mk_box(content_ty));\n-\n-                    // Allocate space:\n-                    let def_id =\n-                        match fx.tcx.lang_items().require(rustc_hir::LangItem::ExchangeMalloc) {\n-                            Ok(id) => id,\n-                            Err(s) => {\n-                                fx.tcx\n-                                    .sess\n-                                    .fatal(&format!(\"allocation of `{}` {}\", box_layout.ty, s));\n-                            }\n-                        };\n-                    let instance = ty::Instance::mono(fx.tcx, def_id).polymorphize(fx.tcx);\n-                    let func_ref = fx.get_function_ref(instance);\n-                    let call = fx.bcx.ins().call(func_ref, &[llsize, llalign]);\n-                    let ptr = fx.bcx.inst_results(call)[0];\n-                    lval.write_cvalue(fx, CValue::by_val(ptr, box_layout));\n-                }\n                 Rvalue::NullaryOp(null_op, ty) => {\n                     assert!(\n                         lval.layout()\n@@ -742,7 +718,6 @@ fn codegen_stmt<'tcx>(\n                     let val = match null_op {\n                         NullOp::SizeOf => layout.size.bytes(),\n                         NullOp::AlignOf => layout.align.abi.bytes(),\n-                        NullOp::Box => unreachable!(),\n                     };\n                     let val =\n                         CValue::const_val(fx, fx.layout_of(fx.tcx.types.usize), val.into());"}]}