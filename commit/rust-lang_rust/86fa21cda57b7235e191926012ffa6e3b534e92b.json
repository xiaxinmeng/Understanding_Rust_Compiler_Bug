{"sha": "86fa21cda57b7235e191926012ffa6e3b534e92b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZmEyMWNkYTU3YjcyMzVlMTkxOTI2MDEyZmZhNmUzYjUzNGU5MmI=", "commit": {"author": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2021-08-14T21:19:28Z"}, "committer": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2021-08-14T21:19:28Z"}, "message": "Implement a finish method for the status_bar and some cleanup", "tree": {"sha": "5f1a80ae81b05632ac7648884061f73d036d9eb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f1a80ae81b05632ac7648884061f73d036d9eb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86fa21cda57b7235e191926012ffa6e3b534e92b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86fa21cda57b7235e191926012ffa6e3b534e92b", "html_url": "https://github.com/rust-lang/rust/commit/86fa21cda57b7235e191926012ffa6e3b534e92b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86fa21cda57b7235e191926012ffa6e3b534e92b/comments", "author": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c17628be18b1c99b1cb4c78b28670068da0f2fc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c17628be18b1c99b1cb4c78b28670068da0f2fc4", "html_url": "https://github.com/rust-lang/rust/commit/c17628be18b1c99b1cb4c78b28670068da0f2fc4"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "fcecd00bd5370848825c262dab6564f765ae29cd", "filename": "src/tools/rustdoc-gui/tester.js", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/86fa21cda57b7235e191926012ffa6e3b534e92b/src%2Ftools%2Frustdoc-gui%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/86fa21cda57b7235e191926012ffa6e3b534e92b/src%2Ftools%2Frustdoc-gui%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-gui%2Ftester.js?ref=86fa21cda57b7235e191926012ffa6e3b534e92b", "patch": "@@ -5,6 +5,7 @@\n // ```\n const fs = require(\"fs\");\n const path = require(\"path\");\n+const os = require('os');\n const {Options, runTest} = require('browser-ui-test');\n \n function showHelp() {\n@@ -78,19 +79,23 @@ function char_printer(n_tests) {\n         successful: function() {\n             current += 1;\n             if (current % max_per_line === 0) {\n-                process.stdout.write(`. (${current}/${n_tests})\\n`);\n+                process.stdout.write(`. (${current}/${n_tests})${os.EOL}`);\n             } else {\n                 process.stdout.write(\".\");\n             }\n         },\n         erroneous: function() {\n             current += 1;\n             if (current % max_per_line === 0) {\n-                process.stderr.write(`F (${current}/${n_tests})\\n`);\n+                process.stderr.write(`F (${current}/${n_tests})${os.EOL}`);\n             } else {\n                 process.stderr.write(\"F\");\n             }\n         },\n+        finish: function() {\n+            const spaces = \" \".repeat(max_per_line - (current % max_per_line));\n+            process.stdout.write(`${spaces} (${current}/${n_tests})${os.EOL}${os.EOL}`);\n+        },\n     };\n }\n \n@@ -187,9 +192,10 @@ async function main(argv) {\n             await tests[i];\n         }\n     }\n-    await Promise.all(tests);\n-    // final \\n after the tests\n-    console.log(\"\\n\");\n+    if (!no_headless) {\n+        await Promise.all(tests);\n+    }\n+    status_bar.finish();\n \n     if (debug === false) {\n         results.successful.sort(by_filename);"}]}