{"sha": "f15f0d1ec006c6c628fb70414d311bd85c2a0469", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNWYwZDFlYzAwNmM2YzYyOGZiNzA0MTRkMzExYmQ4NWMyYTA0Njk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-02T21:04:08Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-02T21:04:08Z"}, "message": "Merge #1472\n\n1472: Add completion for type aliases r=matklad a=sinkuu\n\n\n\nCo-authored-by: Shotaro Yamada <sinkuu@sinkuu.xyz>", "tree": {"sha": "635e47b1796a224917e38899549d8ce04d9755cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/635e47b1796a224917e38899549d8ce04d9755cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f15f0d1ec006c6c628fb70414d311bd85c2a0469", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f15f0d1ec006c6c628fb70414d311bd85c2a0469", "html_url": "https://github.com/rust-lang/rust/commit/f15f0d1ec006c6c628fb70414d311bd85c2a0469", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f15f0d1ec006c6c628fb70414d311bd85c2a0469/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "dd698fc3f7090b7781504566a8b82cf2c3d62420", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd698fc3f7090b7781504566a8b82cf2c3d62420", "html_url": "https://github.com/rust-lang/rust/commit/dd698fc3f7090b7781504566a8b82cf2c3d62420"}, {"sha": "546442df68bcb62e7ff4bc7356c6a003052304da", "url": "https://api.github.com/repos/rust-lang/rust/commits/546442df68bcb62e7ff4bc7356c6a003052304da", "html_url": "https://github.com/rust-lang/rust/commit/546442df68bcb62e7ff4bc7356c6a003052304da"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "75914ccb07ee4c8100c78a940821af71f573ef2e", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f15f0d1ec006c6c628fb70414d311bd85c2a0469/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f15f0d1ec006c6c628fb70414d311bd85c2a0469/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=f15f0d1ec006c6c628fb70414d311bd85c2a0469", "patch": "@@ -849,6 +849,10 @@ impl TypeAlias {\n         db.type_alias_data(self).type_ref.clone()\n     }\n \n+    pub fn ty(self, db: &impl HirDatabase) -> Ty {\n+        db.type_for_def(self.into(), Namespace::Types)\n+    }\n+\n     pub fn name(self, db: &impl DefDatabase) -> Name {\n         db.type_alias_data(self).name.clone()\n     }"}, {"sha": "da8fb9d8e9e9c9b54019d56108fac475a78dab69", "filename": "crates/ra_ide_api/src/completion/complete_path.rs", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/f15f0d1ec006c6c628fb70414d311bd85c2a0469/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f15f0d1ec006c6c628fb70414d311bd85c2a0469/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=f15f0d1ec006c6c628fb70414d311bd85c2a0469", "patch": "@@ -37,7 +37,10 @@ pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) {\n                 acc.add_resolution(ctx, name.to_string(), &res.def.map(hir::Resolution::Def));\n             }\n         }\n-        hir::ModuleDef::Enum(_) | hir::ModuleDef::Struct(_) | hir::ModuleDef::Union(_) => {\n+        hir::ModuleDef::Enum(_)\n+        | hir::ModuleDef::Struct(_)\n+        | hir::ModuleDef::Union(_)\n+        | hir::ModuleDef::TypeAlias(_) => {\n             if let hir::ModuleDef::Enum(e) = def {\n                 for variant in e.variants(ctx.db) {\n                     acc.add_enum_variant(ctx, variant);\n@@ -47,6 +50,7 @@ pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) {\n                 hir::ModuleDef::Enum(e) => e.ty(ctx.db),\n                 hir::ModuleDef::Struct(s) => s.ty(ctx.db),\n                 hir::ModuleDef::Union(u) => u.ty(ctx.db),\n+                hir::ModuleDef::TypeAlias(a) => a.ty(ctx.db),\n                 _ => unreachable!(),\n             };\n             let krate = ctx.module.and_then(|m| m.krate(ctx.db));\n@@ -544,6 +548,42 @@ mod tests {\n         insert: \"bar\",\n         kind: Module,\n     },\n+]\"###\n+        );\n+    }\n+\n+    #[test]\n+    fn completes_type_alias() {\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                struct S;\n+                impl S { fn foo() {} }\n+                type T = S;\n+                impl T { fn bar() {} }\n+\n+                fn main() {\n+                    T::<|>;\n+                }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"bar\",\n+        source_range: [185; 185),\n+        delete: [185; 185),\n+        insert: \"bar()$0\",\n+        kind: Function,\n+        detail: \"fn bar()\",\n+    },\n+    CompletionItem {\n+        label: \"foo\",\n+        source_range: [185; 185),\n+        delete: [185; 185),\n+        insert: \"foo()$0\",\n+        kind: Function,\n+        detail: \"fn foo()\",\n+    },\n ]\"###\n         );\n     }"}]}