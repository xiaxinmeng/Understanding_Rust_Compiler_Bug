{"sha": "e95d40980b3044a6a9cad1b5e72eb57390790d18", "node_id": "C_kwDOAAsO6NoAKGU5NWQ0MDk4MGIzMDQ0YTZhOWNhZDFiNWU3MmViNTczOTA3OTBkMTg", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2022-11-22T13:30:29Z"}, "committer": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2022-11-22T13:30:29Z"}, "message": "Clippy: Workaround for let_chains issue", "tree": {"sha": "7d62139e43fb9c8c34dddd9eeaecb4219c2e4aef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d62139e43fb9c8c34dddd9eeaecb4219c2e4aef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e95d40980b3044a6a9cad1b5e72eb57390790d18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e95d40980b3044a6a9cad1b5e72eb57390790d18", "html_url": "https://github.com/rust-lang/rust/commit/e95d40980b3044a6a9cad1b5e72eb57390790d18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e95d40980b3044a6a9cad1b5e72eb57390790d18/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fce4691d523f0d22596c53e6fe420b442894482", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fce4691d523f0d22596c53e6fe420b442894482", "html_url": "https://github.com/rust-lang/rust/commit/6fce4691d523f0d22596c53e6fe420b442894482"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "ad6132a49baaec685db1d7b62033b7c820b950d3", "filename": "src/driver.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e95d40980b3044a6a9cad1b5e72eb57390790d18/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e95d40980b3044a6a9cad1b5e72eb57390790d18/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=e95d40980b3044a6a9cad1b5e72eb57390790d18", "patch": "@@ -90,11 +90,12 @@ fn track_files(parse_sess: &mut ParseSess, conf_path_string: Option<String>) {\n \n     // During development track the `clippy-driver` executable so that cargo will re-run clippy whenever\n     // it is rebuilt\n-    if cfg!(debug_assertions)\n-        && let Ok(current_exe) = env::current_exe()\n-        && let Some(current_exe) = current_exe.to_str()\n-    {\n-        file_depinfo.insert(Symbol::intern(current_exe));\n+    if cfg!(debug_assertions) {\n+        if let Ok(current_exe) = env::current_exe()\n+            && let Some(current_exe) = current_exe.to_str()\n+        {\n+            file_depinfo.insert(Symbol::intern(current_exe));\n+        }\n     }\n }\n "}]}