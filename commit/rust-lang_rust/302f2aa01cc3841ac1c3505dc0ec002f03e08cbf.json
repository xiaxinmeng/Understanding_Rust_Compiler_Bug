{"sha": "302f2aa01cc3841ac1c3505dc0ec002f03e08cbf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMmYyYWEwMWNjMzg0MWFjMWMzNTA1ZGMwZWMwMDJmMDNlMDhjYmY=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-04-14T18:49:11Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-04-14T18:49:11Z"}, "message": "Rollup merge of #32932 - Manishearth:fx-mir, r=bluss\n\nMake rustc_mir pass rustdoc\n\nNone", "tree": {"sha": "ea6c5cff26215537e0a624995deaf6103d55dbbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea6c5cff26215537e0a624995deaf6103d55dbbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/302f2aa01cc3841ac1c3505dc0ec002f03e08cbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/302f2aa01cc3841ac1c3505dc0ec002f03e08cbf", "html_url": "https://github.com/rust-lang/rust/commit/302f2aa01cc3841ac1c3505dc0ec002f03e08cbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/302f2aa01cc3841ac1c3505dc0ec002f03e08cbf/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e54888052469406b346ab307f8aa1af5732feb1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e54888052469406b346ab307f8aa1af5732feb1b", "html_url": "https://github.com/rust-lang/rust/commit/e54888052469406b346ab307f8aa1af5732feb1b"}, {"sha": "3e93a6e2655f36aab5ea69f9f8c250ef8ecda73e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e93a6e2655f36aab5ea69f9f8c250ef8ecda73e", "html_url": "https://github.com/rust-lang/rust/commit/3e93a6e2655f36aab5ea69f9f8c250ef8ecda73e"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "ccb2099dcc75ddcd0024cd83835d53e2933d937f", "filename": "src/librustc_mir/build/matches/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/302f2aa01cc3841ac1c3505dc0ec002f03e08cbf/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302f2aa01cc3841ac1c3505dc0ec002f03e08cbf/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs?ref=302f2aa01cc3841ac1c3505dc0ec002f03e08cbf", "patch": "@@ -434,7 +434,7 @@ impl<'a,'tcx> Builder<'a,'tcx> {\n     /// But there may also be candidates that the test just doesn't\n     /// apply to. For example, consider the case of #29740:\n     ///\n-    /// ```rust\n+    /// ```rust,ignore\n     /// match x {\n     ///     \"foo\" => ...,\n     ///     \"bar\" => ...,"}, {"sha": "e5f2c7543786e61dc964bf7cae9664aace2288e3", "filename": "src/librustc_mir/build/matches/util.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/302f2aa01cc3841ac1c3505dc0ec002f03e08cbf/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302f2aa01cc3841ac1c3505dc0ec002f03e08cbf/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Futil.rs?ref=302f2aa01cc3841ac1c3505dc0ec002f03e08cbf", "patch": "@@ -32,14 +32,18 @@ impl<'a,'tcx> Builder<'a,'tcx> {\n     /// this function converts the prefix (`x`, `y`) and suffix (`z`) into\n     /// distinct match pairs:\n     ///\n+    /// ```rust,ignore\n     ///     lv[0 of 3] @ x  // see ProjectionElem::ConstantIndex (and its Debug impl)\n     ///     lv[1 of 3] @ y  // to explain the `[x of y]` notation\n     ///     lv[-1 of 3] @ z\n+    /// ```\n     ///\n     /// If a slice like `s` is present, then the function also creates\n     /// a temporary like:\n     ///\n+    /// ```rust,ignore\n     ///     tmp0 = lv[2..-1] // using the special Rvalue::Slice\n+    /// ```\n     ///\n     /// and creates a match pair `tmp0 @ s`\n     pub fn prefix_suffix_slice<'pat>(&mut self,"}, {"sha": "bfbf27d46d005f5a7aa72b984435c203065e06ee", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/302f2aa01cc3841ac1c3505dc0ec002f03e08cbf/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302f2aa01cc3841ac1c3505dc0ec002f03e08cbf/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=302f2aa01cc3841ac1c3505dc0ec002f03e08cbf", "patch": "@@ -47,7 +47,7 @@ set of scheduled drops up front, and so whenever we exit from the\n scope we only drop the values scheduled thus far. For example, consider\n the scope S corresponding to this loop:\n \n-```\n+```rust,ignore\n loop {\n     let x = ...;\n     if cond { break; }"}, {"sha": "77e8e37ef7493f1e267fa620a4ec543b27d9dca0", "filename": "src/librustc_mir/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/302f2aa01cc3841ac1c3505dc0ec002f03e08cbf/src%2Flibrustc_mir%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302f2aa01cc3841ac1c3505dc0ec002f03e08cbf/src%2Flibrustc_mir%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fpretty.rs?ref=302f2aa01cc3841ac1c3505dc0ec002f03e08cbf", "patch": "@@ -23,7 +23,7 @@ const INDENT: &'static str = \"    \";\n /// If the session is properly configured, dumps a human-readable\n /// representation of the mir into:\n ///\n-/// ```\n+/// ```text\n /// rustc.node<node_id>.<pass_name>.<disambiguator>\n /// ```\n ///"}, {"sha": "c58b5c877246163edebe4b466478205377acd86b", "filename": "src/librustc_mir/traversal.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/302f2aa01cc3841ac1c3505dc0ec002f03e08cbf/src%2Flibrustc_mir%2Ftraversal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302f2aa01cc3841ac1c3505dc0ec002f03e08cbf/src%2Flibrustc_mir%2Ftraversal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftraversal.rs?ref=302f2aa01cc3841ac1c3505dc0ec002f03e08cbf", "patch": "@@ -19,13 +19,16 @@ use rustc::mir::repr::*;\n /// Preorder traversal is when each node is visited before an of it's\n /// successors\n ///\n+/// ```text\n+///\n ///         A\n ///        / \\\n ///       /   \\\n ///      B     C\n ///       \\   /\n ///        \\ /\n ///         D\n+/// ```\n ///\n /// A preorder traversal of this graph is either `A B D C` or `A C D B`\n #[derive(Clone)]\n@@ -80,13 +83,17 @@ impl<'a, 'tcx> Iterator for Preorder<'a, 'tcx> {\n /// Postorder traversal is when each node is visited after all of it's\n /// successors, except when the successor is only reachable by a back-edge\n ///\n+///\n+/// ```text\n+///\n ///         A\n ///        / \\\n ///       /   \\\n ///      B     C\n ///       \\   /\n ///        \\ /\n ///         D\n+/// ```\n ///\n /// A Postorder traversal of this graph is `D B C A` or `D C B A`\n pub struct Postorder<'a, 'tcx: 'a> {\n@@ -215,13 +222,16 @@ impl<'a, 'tcx> Iterator for Postorder<'a, 'tcx> {\n /// This is different to a preorder traversal and represents a natural\n /// linearisation of control-flow.\n ///\n+/// ```text\n+///\n ///         A\n ///        / \\\n ///       /   \\\n ///      B     C\n ///       \\   /\n ///        \\ /\n ///         D\n+/// ```\n ///\n /// A reverse postorder traversal of this graph is either `A B C D` or `A C B D`\n /// Note that for a graph containing no loops (i.e. A DAG), this is equivalent to"}]}