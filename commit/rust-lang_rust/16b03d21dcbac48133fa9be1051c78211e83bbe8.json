{"sha": "16b03d21dcbac48133fa9be1051c78211e83bbe8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2YjAzZDIxZGNiYWM0ODEzM2ZhOWJlMTA1MWM3ODIxMWU4M2JiZTg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-18T19:02:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-18T19:02:32Z"}, "message": "Merge #8871\n\n8871: internal: Simplify `DefCollector::resolve_macros` r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "9b79c549f6d8fac64936a13e06f2922d2227d8f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b79c549f6d8fac64936a13e06f2922d2227d8f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16b03d21dcbac48133fa9be1051c78211e83bbe8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgpA9ICRBK7hj4Ov3rIwAAtPMIAAdivcMtPeheQiZaiiFE8Bbu\nQVAip/OEY+AU4j0kVYULLkc8s5Y1Z+W6NMuGr8AtQ/41oU04gyrCFqk4yW5DrX43\n1/RTBgvUukrPik/4ykZNinM1sRIG7xjftoIt0CaaMvVKwJCVppT9ikyk+TsNgc8G\nWtVHT/eeQT2i850TIUNDfkIhibw7Dzs7hVkWvUQ3k46EA/l6VtkuwmT3C+h5UxkK\nIWDSdGE6krnsAJfggL+q6qgv8b6Q0d66ZtBfg2gIDP07tT79bGDI1b9t8zI2MEKn\nTMqijvh1lcM+jXlwURa+4lWX5EfFSzJUsovvxM/AmUQ6e6l2GblOX8KTb+BZ8Lw=\n=ie+w\n-----END PGP SIGNATURE-----\n", "payload": "tree 9b79c549f6d8fac64936a13e06f2922d2227d8f8\nparent e3d0d89d7e3e253234271008df9324ec1faf1746\nparent 4884d9ec1deec8d4bbbe240dab1107c7cb8dd688\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1621364552 +0000\ncommitter GitHub <noreply@github.com> 1621364552 +0000\n\nMerge #8871\n\n8871: internal: Simplify `DefCollector::resolve_macros` r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16b03d21dcbac48133fa9be1051c78211e83bbe8", "html_url": "https://github.com/rust-lang/rust/commit/16b03d21dcbac48133fa9be1051c78211e83bbe8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16b03d21dcbac48133fa9be1051c78211e83bbe8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3d0d89d7e3e253234271008df9324ec1faf1746", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3d0d89d7e3e253234271008df9324ec1faf1746", "html_url": "https://github.com/rust-lang/rust/commit/e3d0d89d7e3e253234271008df9324ec1faf1746"}, {"sha": "4884d9ec1deec8d4bbbe240dab1107c7cb8dd688", "url": "https://api.github.com/repos/rust-lang/rust/commits/4884d9ec1deec8d4bbbe240dab1107c7cb8dd688", "html_url": "https://github.com/rust-lang/rust/commit/4884d9ec1deec8d4bbbe240dab1107c7cb8dd688"}], "stats": {"total": 36, "additions": 13, "deletions": 23}, "files": [{"sha": "d4840be2fbb0e7f8a4489c17b2386dfca398e3ea", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 13, "deletions": 23, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/16b03d21dcbac48133fa9be1051c78211e83bbe8/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16b03d21dcbac48133fa9be1051c78211e83bbe8/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=16b03d21dcbac48133fa9be1051c78211e83bbe8", "patch": "@@ -811,23 +811,25 @@ impl DefCollector<'_> {\n         let mut resolved = Vec::new();\n         let mut res = ReachedFixedPoint::Yes;\n         macros.retain(|directive| {\n+            let resolver = |path| {\n+                let resolved_res = self.def_map.resolve_path_fp_with_macro(\n+                    self.db,\n+                    ResolveMode::Other,\n+                    directive.module_id,\n+                    &path,\n+                    BuiltinShadowMode::Module,\n+                );\n+                resolved_res.resolved_def.take_macros()\n+            };\n+\n             match &directive.kind {\n                 MacroDirectiveKind::FnLike { ast_id, fragment } => {\n                     match macro_call_as_call_id(\n                         ast_id,\n                         *fragment,\n                         self.db,\n                         self.def_map.krate,\n-                        |path| {\n-                            let resolved_res = self.def_map.resolve_path_fp_with_macro(\n-                                self.db,\n-                                ResolveMode::Other,\n-                                directive.module_id,\n-                                &path,\n-                                BuiltinShadowMode::Module,\n-                            );\n-                            resolved_res.resolved_def.take_macros()\n-                        },\n+                        &resolver,\n                         &mut |_err| (),\n                     ) {\n                         Ok(Ok(call_id)) => {\n@@ -844,7 +846,7 @@ impl DefCollector<'_> {\n                         *derive_attr,\n                         self.db,\n                         self.def_map.krate,\n-                        |path| self.resolve_derive_macro(directive.module_id, &path),\n+                        &resolver,\n                     ) {\n                         Ok(call_id) => {\n                             resolved.push((directive.module_id, call_id, directive.depth));\n@@ -867,18 +869,6 @@ impl DefCollector<'_> {\n         res\n     }\n \n-    fn resolve_derive_macro(&self, module: LocalModuleId, path: &ModPath) -> Option<MacroDefId> {\n-        let resolved_res = self.def_map.resolve_path_fp_with_macro(\n-            self.db,\n-            ResolveMode::Other,\n-            module,\n-            &path,\n-            BuiltinShadowMode::Module,\n-        );\n-\n-        resolved_res.resolved_def.take_macros()\n-    }\n-\n     fn collect_macro_expansion(\n         &mut self,\n         module_id: LocalModuleId,"}]}