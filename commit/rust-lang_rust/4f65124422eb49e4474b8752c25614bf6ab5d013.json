{"sha": "4f65124422eb49e4474b8752c25614bf6ab5d013", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNjUxMjQ0MjJlYjQ5ZTQ0NzRiODc1MmMyNTYxNGJmNmFiNWQwMTM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-24T00:19:36Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-24T00:19:36Z"}, "message": "Remove legacy option `fn_return_indent`", "tree": {"sha": "beefe0bea58023e505b600e7bdf0e56c1d4720d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/beefe0bea58023e505b600e7bdf0e56c1d4720d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f65124422eb49e4474b8752c25614bf6ab5d013", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f65124422eb49e4474b8752c25614bf6ab5d013", "html_url": "https://github.com/rust-lang/rust/commit/4f65124422eb49e4474b8752c25614bf6ab5d013", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f65124422eb49e4474b8752c25614bf6ab5d013/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0f12b8ec8044200c09a9f3be2af59d026b85b83", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0f12b8ec8044200c09a9f3be2af59d026b85b83", "html_url": "https://github.com/rust-lang/rust/commit/d0f12b8ec8044200c09a9f3be2af59d026b85b83"}], "stats": {"total": 111, "additions": 6, "deletions": 105}, "files": [{"sha": "d71a07e53b6acb9de4fce4d264fd1a5def8a700f", "filename": "Configurations.md", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/4f65124422eb49e4474b8752c25614bf6ab5d013/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/4f65124422eb49e4474b8752c25614bf6ab5d013/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=4f65124422eb49e4474b8752c25614bf6ab5d013", "patch": "@@ -991,48 +991,6 @@ fn lorem() {\n \n See also [`control_brace_style`](#control_brace_style).\n \n-## `fn_return_indent`\n-\n-Location of return type in function declaration\n-\n-- **Default value**: `\"WithArgs\"`\n-- **Possible values**: `\"WithArgs\"`, `\"WithWhereClause\"`\n-\n-#### `\"WithArgs\"` (default):\n-\n-```rust\n-fn lorem(ipsum: Ipsum,\n-         dolor: Dolor,\n-         sit: Sit,\n-         amet: Amet,\n-         consectetur: Consectetur,\n-         adipiscing: Adipiscing)\n-         -> Elit\n-    where Ipsum: Eq\n-{\n-    // body\n-}\n-\n-```\n-\n-#### `\"WithWhereClause\"`:\n-\n-```rust\n-fn lorem(ipsum: Ipsum,\n-         dolor: Dolor,\n-         sit: Sit,\n-         amet: Amet,\n-         consectetur: Consectetur,\n-         adipiscing: Adipiscing)\n-    -> Elit\n-    where Ipsum: Eq\n-{\n-    // body\n-}\n-\n-```\n-\n-**Note**: This option only takes effect when `indent_style` is set to `\"Visual\"`.\n \n ## `fn_single_line`\n "}, {"sha": "1c3ecee904d65a35193f54333b6830cbc057e6f1", "filename": "src/config.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4f65124422eb49e4474b8752c25614bf6ab5d013/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f65124422eb49e4474b8752c25614bf6ab5d013/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=4f65124422eb49e4474b8752c25614bf6ab5d013", "patch": "@@ -63,14 +63,6 @@ configuration_option_enum! { ControlBraceStyle:\n     AlwaysNextLine,\n }\n \n-// How to indent a function's return type.\n-configuration_option_enum! { ReturnIndent:\n-    // Aligned with the arguments\n-    WithArgs,\n-    // Aligned with the where clause\n-    WithWhereClause,\n-}\n-\n configuration_option_enum! { IndentStyle:\n     // First line on the same line as the opening brace, all lines aligned with\n     // the first line.\n@@ -557,8 +549,6 @@ create_config! {\n         \"Add trailing semicolon after break, continue and return\";\n     fn_empty_single_line: bool, true, false, \"Put empty-body functions on a single line\";\n     fn_single_line: bool, false, false, \"Put single-expression functions on a single line\";\n-    fn_return_indent: ReturnIndent, ReturnIndent::WithArgs, false,\n-        \"Location of return type in function declaration\";\n     fn_args_paren_newline: bool, false, false, \"If function argument parenthesis goes on a newline\";\n     fn_args_density: Density, Density::Tall, false, \"Argument density in functions\";\n     array_width: usize, 60, false,"}, {"sha": "3d0a31639e6c4f59b301ca975ff3e50c94a163aa", "filename": "src/items.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4f65124422eb49e4474b8752c25614bf6ab5d013/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f65124422eb49e4474b8752c25614bf6ab5d013/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=4f65124422eb49e4474b8752c25614bf6ab5d013", "patch": "@@ -22,7 +22,7 @@ use spanned::Spanned;\n use codemap::{LineRangeUtils, SpanUtils};\n use comment::{combine_strs_with_missing_comments, contains_comment, recover_comment_removed,\n               recover_missing_comment_in_span, rewrite_missing_comment, FindUncommented};\n-use config::{BraceStyle, Config, Density, IndentStyle, ReturnIndent};\n+use config::{BraceStyle, Config, Density, IndentStyle};\n use expr::{choose_rhs, format_expr, is_empty_block, is_simple_block_stmt, rewrite_assign_rhs,\n            rewrite_call_inner, ExprType};\n use lists::{definitive_tactic, itemize_list, write_list, DefinitiveListTactic, ListFormatting,\n@@ -1979,17 +1979,15 @@ fn rewrite_fn_base(\n             }\n         };\n         let ret_indent = if ret_should_indent {\n-            let indent = match context.config.fn_return_indent() {\n-                ReturnIndent::WithWhereClause => indent + 4,\n+            let indent = if arg_str.is_empty() {\n                 // Aligning with non-existent args looks silly.\n-                _ if arg_str.is_empty() => {\n-                    force_new_line_for_brace = true;\n-                    indent + 4\n-                }\n+                force_new_line_for_brace = true;\n+                indent + 4\n+            } else {\n                 // FIXME: we might want to check that using the arg indent\n                 // doesn't blow our budget, and if it does, then fallback to\n                 // the where clause indent.\n-                _ => arg_indent,\n+                arg_indent\n             };\n \n             result.push('\\n');"}, {"sha": "e377446c013ad5d53fe954d5790c10af8016a74b", "filename": "tests/config/small_tabs.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f65124422eb49e4474b8752c25614bf6ab5d013/tests%2Fconfig%2Fsmall_tabs.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4f65124422eb49e4474b8752c25614bf6ab5d013/tests%2Fconfig%2Fsmall_tabs.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconfig%2Fsmall_tabs.toml?ref=4f65124422eb49e4474b8752c25614bf6ab5d013", "patch": "@@ -3,7 +3,6 @@ comment_width = 80\n tab_spaces = 2\n newline_style = \"Unix\"\n brace_style = \"SameLineWhere\"\n-fn_return_indent = \"WithArgs\"\n fn_args_paren_newline = true\n fn_args_density = \"Tall\"\n where_density = \"Tall\""}, {"sha": "35d1459641aa567b190f532fe6a663e7cfeba67e", "filename": "tests/source/configs-fn_return_indent-with_args.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d0f12b8ec8044200c09a9f3be2af59d026b85b83/tests%2Fsource%2Fconfigs-fn_return_indent-with_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0f12b8ec8044200c09a9f3be2af59d026b85b83/tests%2Fsource%2Fconfigs-fn_return_indent-with_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_return_indent-with_args.rs?ref=d0f12b8ec8044200c09a9f3be2af59d026b85b83", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-fn_return_indent: WithArgs\n-// Function return type indent\n-\n-fn lorem(ipsum: Ipsum, dolor: Dolor, sit: Sit, amet: Amet, consectetur: Consectetur, adipiscing: Adipiscing) -> Elit where Ipsum: Eq {\n-    // body\n-}"}, {"sha": "2fdbcd2657252ae4f220deaa2fa8a7daa8721d49", "filename": "tests/source/configs-fn_return_indent-with_where_clause.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d0f12b8ec8044200c09a9f3be2af59d026b85b83/tests%2Fsource%2Fconfigs-fn_return_indent-with_where_clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0f12b8ec8044200c09a9f3be2af59d026b85b83/tests%2Fsource%2Fconfigs-fn_return_indent-with_where_clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_return_indent-with_where_clause.rs?ref=d0f12b8ec8044200c09a9f3be2af59d026b85b83", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-fn_return_indent: WithWhereClause\n-// Function return type indent\n-\n-fn lorem(ipsum: Ipsum, dolor: Dolor, sit: Sit, amet: Amet, consectetur: Consectetur, adipiscing: Adipiscing) -> Elit where Ipsum: Eq {\n-    // body\n-}"}, {"sha": "e1d49a65c25282cb8fa5921bf6e2187609e0c041", "filename": "tests/target/configs-fn_return_indent-with_args.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d0f12b8ec8044200c09a9f3be2af59d026b85b83/tests%2Ftarget%2Fconfigs-fn_return_indent-with_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0f12b8ec8044200c09a9f3be2af59d026b85b83/tests%2Ftarget%2Fconfigs-fn_return_indent-with_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_return_indent-with_args.rs?ref=d0f12b8ec8044200c09a9f3be2af59d026b85b83", "patch": "@@ -1,16 +0,0 @@\n-// rustfmt-fn_return_indent: WithArgs\n-// Function return type indent\n-\n-fn lorem(\n-    ipsum: Ipsum,\n-    dolor: Dolor,\n-    sit: Sit,\n-    amet: Amet,\n-    consectetur: Consectetur,\n-    adipiscing: Adipiscing,\n-) -> Elit\n-where\n-    Ipsum: Eq,\n-{\n-    // body\n-}"}, {"sha": "62a35af516b315a16c8184b9a08817c3f8d21ba7", "filename": "tests/target/configs-fn_return_indent-with_where_clause.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d0f12b8ec8044200c09a9f3be2af59d026b85b83/tests%2Ftarget%2Fconfigs-fn_return_indent-with_where_clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0f12b8ec8044200c09a9f3be2af59d026b85b83/tests%2Ftarget%2Fconfigs-fn_return_indent-with_where_clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_return_indent-with_where_clause.rs?ref=d0f12b8ec8044200c09a9f3be2af59d026b85b83", "patch": "@@ -1,16 +0,0 @@\n-// rustfmt-fn_return_indent: WithWhereClause\n-// Function return type indent\n-\n-fn lorem(\n-    ipsum: Ipsum,\n-    dolor: Dolor,\n-    sit: Sit,\n-    amet: Amet,\n-    consectetur: Consectetur,\n-    adipiscing: Adipiscing,\n-) -> Elit\n-where\n-    Ipsum: Eq,\n-{\n-    // body\n-}"}]}