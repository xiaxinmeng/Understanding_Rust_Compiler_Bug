{"sha": "072b0155151329b323540d521bffe3eb49873799", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MmIwMTU1MTUxMzI5YjMyMzU0MGQ1MjFiZmZlM2ViNDk4NzM3OTk=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-03-01T09:11:28Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-03-01T09:11:28Z"}, "message": "Add test case for #1894", "tree": {"sha": "cd956b3b65fa9a6f09825e7ff3ce5008510e22c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd956b3b65fa9a6f09825e7ff3ce5008510e22c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/072b0155151329b323540d521bffe3eb49873799", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/072b0155151329b323540d521bffe3eb49873799", "html_url": "https://github.com/rust-lang/rust/commit/072b0155151329b323540d521bffe3eb49873799", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/072b0155151329b323540d521bffe3eb49873799/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1471b1f3ffd71eda0511df7ec6a9a0b94b55e958", "url": "https://api.github.com/repos/rust-lang/rust/commits/1471b1f3ffd71eda0511df7ec6a9a0b94b55e958", "html_url": "https://github.com/rust-lang/rust/commit/1471b1f3ffd71eda0511df7ec6a9a0b94b55e958"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "68a230f52a00bc0202c0fafdb1e47628c287fd0e", "filename": "src/test/run-pass/last-use-corner-cases.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/072b0155151329b323540d521bffe3eb49873799/src%2Ftest%2Frun-pass%2Flast-use-corner-cases.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072b0155151329b323540d521bffe3eb49873799/src%2Ftest%2Frun-pass%2Flast-use-corner-cases.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flast-use-corner-cases.rs?ref=072b0155151329b323540d521bffe3eb49873799", "patch": "@@ -0,0 +1,31 @@\n+fn main() {\n+    // Make sure closing over can be a last use\n+    let q = ~10;\n+    let addr = ptr::addr_of(*q);\n+    let f = fn@() -> *int { ptr::addr_of(*q) };\n+    assert addr == f();\n+\n+    // But only when it really is the last use\n+    let q = ~20;\n+    let f = fn@() -> *int { ptr::addr_of(*q) };\n+    assert ptr::addr_of(*q) != f();\n+\n+    // Ensure function arguments and box arguments interact sanely.\n+    fn call_me(x: fn() -> int, y: ~int) { assert x() == *y; }\n+    let q = ~30;\n+    call_me({|| *q}, q);\n+\n+    // Check that no false positives are found in loops.\n+    let q = ~40, p = 10;\n+    while true {\n+        let i = q;\n+        p += *i;\n+        if p > 100 { break; }\n+    }\n+\n+    // Verify that blocks can't interfere with each other.\n+    fn two_blocks(a: fn(), b: fn()) { a(); b(); a(); b(); }\n+    let q = ~50;\n+    two_blocks({|| let a = q; assert *a == 50;},\n+               {|| let a = q; assert *a == 50;});\n+}"}]}