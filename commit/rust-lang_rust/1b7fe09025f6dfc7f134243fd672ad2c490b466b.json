{"sha": "1b7fe09025f6dfc7f134243fd672ad2c490b466b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiN2ZlMDkwMjVmNmRmYzdmMTM0MjQzZmQ2NzJhZDJjNDkwYjQ2NmI=", "commit": {"author": {"name": "Vishnunarayan K I", "email": "appukuttancr@gmail.com", "date": "2020-12-02T11:49:11Z"}, "committer": {"name": "Vishnunarayan K I", "email": "appukuttancr@gmail.com", "date": "2020-12-02T11:49:11Z"}, "message": "add comment and bless some tests", "tree": {"sha": "97ecd242091092d54e38d2e9b12a489d02c03005", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97ecd242091092d54e38d2e9b12a489d02c03005"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b7fe09025f6dfc7f134243fd672ad2c490b466b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b7fe09025f6dfc7f134243fd672ad2c490b466b", "html_url": "https://github.com/rust-lang/rust/commit/1b7fe09025f6dfc7f134243fd672ad2c490b466b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b7fe09025f6dfc7f134243fd672ad2c490b466b/comments", "author": {"login": "vn-ki", "id": 31964688, "node_id": "MDQ6VXNlcjMxOTY0Njg4", "avatar_url": "https://avatars.githubusercontent.com/u/31964688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vn-ki", "html_url": "https://github.com/vn-ki", "followers_url": "https://api.github.com/users/vn-ki/followers", "following_url": "https://api.github.com/users/vn-ki/following{/other_user}", "gists_url": "https://api.github.com/users/vn-ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/vn-ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vn-ki/subscriptions", "organizations_url": "https://api.github.com/users/vn-ki/orgs", "repos_url": "https://api.github.com/users/vn-ki/repos", "events_url": "https://api.github.com/users/vn-ki/events{/privacy}", "received_events_url": "https://api.github.com/users/vn-ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vn-ki", "id": 31964688, "node_id": "MDQ6VXNlcjMxOTY0Njg4", "avatar_url": "https://avatars.githubusercontent.com/u/31964688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vn-ki", "html_url": "https://github.com/vn-ki", "followers_url": "https://api.github.com/users/vn-ki/followers", "following_url": "https://api.github.com/users/vn-ki/following{/other_user}", "gists_url": "https://api.github.com/users/vn-ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/vn-ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vn-ki/subscriptions", "organizations_url": "https://api.github.com/users/vn-ki/orgs", "repos_url": "https://api.github.com/users/vn-ki/repos", "events_url": "https://api.github.com/users/vn-ki/events{/privacy}", "received_events_url": "https://api.github.com/users/vn-ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6c4cbd46a087de58b59063fca936efff31e212c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6c4cbd46a087de58b59063fca936efff31e212c", "html_url": "https://github.com/rust-lang/rust/commit/a6c4cbd46a087de58b59063fca936efff31e212c"}], "stats": {"total": 380, "additions": 241, "deletions": 139}, "files": [{"sha": "29bc14be74db612e9e0cac68b64a51cdb6bf3a3f", "filename": "compiler/rustc_mir/src/const_eval/machine.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1b7fe09025f6dfc7f134243fd672ad2c490b466b/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7fe09025f6dfc7f134243fd672ad2c490b466b/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs?ref=1b7fe09025f6dfc7f134243fd672ad2c490b466b", "patch": "@@ -38,7 +38,11 @@ impl<'mir, 'tcx> InterpCx<'mir, 'tcx, CompileTimeInterpreter<'mir, 'tcx>> {\n         if instance.def.requires_caller_location(self.tcx()) {\n             return Ok(false);\n         }\n-        // only memoize instrinsics\n+        // Only memoize instrinsics. This was added in #79594 while adding the `const_allocate` intrinsic.\n+        // We only memoize intrinsics because it would be unsound to memoize functions\n+        // which might interact with the heap.\n+        // Additionally, const_allocate intrinsic is impure and thus should not be memoized;\n+        // it will not be memoized because it has non-ZST args\n         if !matches!(instance.def, InstanceDef::Intrinsic(_)) {\n             return Ok(false);\n         }"}, {"sha": "4d627f05adc061dd61e6ff8d12b7548b149a8d70", "filename": "src/test/ui/const-generics/const-argument-if-length.full.stderr", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-if-length.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-if-length.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-if-length.full.stderr?ref=1b7fe09025f6dfc7f134243fd672ad2c490b466b", "patch": "@@ -11,12 +11,6 @@ LL |     if std::mem::size_of::<T>() == 0 {\n LL | pub const fn size_of<T>() -> usize {\n    |                      - required by this bound in `std::mem::size_of`\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/const-argument-if-length.rs:19:15\n-   |\n-LL |     pad: [u8; is_zst::<T>()],\n-   |               ^^^^^^^^^^^^^ referenced constant has errors\n-\n error[E0277]: the size for values of type `T` cannot be known at compilation time\n   --> $DIR/const-argument-if-length.rs:17:12\n    |\n@@ -36,7 +30,6 @@ help: the `Box` type always has a statically known size and allocates its conten\n LL |     value: Box<T>,\n    |            ^^^^ ^\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0080, E0277.\n-For more information about an error, try `rustc --explain E0080`.\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "8090738312418d57a73db7d6ab7692478029660e", "filename": "src/test/ui/const-generics/const-argument-if-length.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-if-length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-if-length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-if-length.rs?ref=1b7fe09025f6dfc7f134243fd672ad2c490b466b", "patch": "@@ -18,7 +18,6 @@ pub struct AtLeastByte<T: ?Sized> {\n     //~^ ERROR the size for values of type `T` cannot be known at compilation time\n     pad: [u8; is_zst::<T>()],\n     //[min]~^ ERROR generic parameters may not be used in const operations\n-    //[full]~^^ ERROR evaluation of constant value failed\n }\n \n fn main() {}"}, {"sha": "040cc3fcf798d64b337489ee04beeeddbccd50ba", "filename": "src/test/ui/consts/const-eval/erroneous-const.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const.stderr?ref=1b7fe09025f6dfc7f134243fd672ad2c490b466b", "patch": "@@ -24,18 +24,18 @@ note: the lint level is defined here\n LL | #![warn(const_err, unconditional_panic)]\n    |         ^^^^^^^^^\n \n-error[E0080]: evaluation of constant value failed\n+error[E0080]: could not evaluate static initializer\n   --> $DIR/erroneous-const.rs:12:17\n    |\n LL |         let _ = PrintName::<T>::VOID;\n-   |                 ^^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n-\n-error[E0080]: could not evaluate static initializer\n-  --> $DIR/erroneous-const.rs:16:22\n-   |\n+   |                 ^^^^^^^^^^^^^^^^^^^^\n+   |                 |\n+   |                 referenced constant has errors\n+   |                 inside `no_codegen::<i32>` at $DIR/erroneous-const.rs:12:17\n+...\n LL | pub static FOO: () = no_codegen::<i32>();\n-   |                      ^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n+   |                      ------------------- inside `FOO` at $DIR/erroneous-const.rs:16:22\n \n-error: aborting due to 2 previous errors; 2 warnings emitted\n+error: aborting due to previous error; 2 warnings emitted\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "b9e63e2fa20802d905e3692d71e87863bf119cd5", "filename": "src/test/ui/consts/const-eval/unwind-abort.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funwind-abort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funwind-abort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funwind-abort.rs?ref=1b7fe09025f6dfc7f134243fd672ad2c490b466b", "patch": "@@ -2,10 +2,10 @@\n \n #[unwind(aborts)]\n const fn foo() {\n-    panic!() //~ evaluation of constant value failed\n+    panic!() //~ 5:13: any use of this value will cause an error [const_err]\n }\n \n-const _: () = foo(); //~ any use of this value will cause an error\n+const _: () = foo();\n // Ensure that the CTFE engine handles calls to `#[unwind(aborts)]` gracefully\n \n fn main() {"}, {"sha": "eee1a35a0dc88610f15c91886477489847330ade", "filename": "src/test/ui/consts/const-eval/unwind-abort.stderr", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funwind-abort.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funwind-abort.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funwind-abort.stderr?ref=1b7fe09025f6dfc7f134243fd672ad2c490b466b", "patch": "@@ -1,21 +1,18 @@\n-error[E0080]: evaluation of constant value failed\n+error: any use of this value will cause an error\n   --> $DIR/unwind-abort.rs:5:5\n    |\n LL |     panic!()\n-   |     ^^^^^^^^ the evaluated program panicked at 'explicit panic', $DIR/unwind-abort.rs:5:5\n-   |\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: any use of this value will cause an error\n-  --> $DIR/unwind-abort.rs:8:15\n-   |\n+   |     ^^^^^^^^\n+   |     |\n+   |     the evaluated program panicked at 'explicit panic', $DIR/unwind-abort.rs:5:5\n+   |     inside `foo` at $SRC_DIR/std/src/macros.rs:LL:COL\n+   |     inside `_` at $DIR/unwind-abort.rs:8:15\n+...\n LL | const _: () = foo();\n-   | --------------^^^^^-\n-   |               |\n-   |               referenced constant has errors\n+   | --------------------\n    |\n    = note: `#[deny(const_err)]` on by default\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0080`."}, {"sha": "129457ebdf92913bd58756b2c687a2bfd344661c", "filename": "src/test/ui/consts/const-size_of-cycle.stderr", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr?ref=1b7fe09025f6dfc7f134243fd672ad2c490b466b", "patch": "@@ -14,11 +14,6 @@ note: ...which requires const-evaluating + checking `Foo::bytes::{constant#0}`..\n    |\n LL |     bytes: [u8; std::mem::size_of::<Foo>()]\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires const-evaluating + checking `std::mem::size_of`...\n-  --> $SRC_DIR/core/src/mem/mod.rs:LL:COL\n-   |\n-LL | pub const fn size_of<T>() -> usize {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: ...which requires computing layout of `Foo`...\n    = note: ...which requires normalizing `[u8; _]`...\n    = note: ...which again requires simplifying constant for the type system `Foo::bytes::{constant#0}`, completing the cycle"}, {"sha": "7fb1dc988bb24745ae4ca635e4c145dddb1d8ee6", "filename": "src/test/ui/consts/uninhabited-const-issue-61744.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.rs?ref=1b7fe09025f6dfc7f134243fd672ad2c490b466b", "patch": "@@ -1,15 +1,15 @@\n // build-fail\n \n pub const unsafe fn fake_type<T>() -> T {\n-    hint_unreachable()\n+    hint_unreachable() //~ 4:23: any use of this value will cause an error [const_err]\n }\n \n pub const unsafe fn hint_unreachable() -> ! {\n-    fake_type() //~ ERROR evaluation of constant value failed\n+    fake_type()\n }\n \n trait Const {\n-    const CONSTANT: i32 = unsafe { fake_type() }; //~ ERROR any use of this value will cause an err\n+    const CONSTANT: i32 = unsafe { fake_type() };\n }\n \n impl<T> Const for T {}"}, {"sha": "1fb5ac11df0f0a153e775bc160513adbecb06555", "filename": "src/test/ui/consts/uninhabited-const-issue-61744.stderr", "status": "modified", "additions": 70, "deletions": 79, "changes": 149, "blob_url": "https://github.com/rust-lang/rust/blob/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.stderr?ref=1b7fe09025f6dfc7f134243fd672ad2c490b466b", "patch": "@@ -1,150 +1,141 @@\n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/uninhabited-const-issue-61744.rs:8:5\n+error: any use of this value will cause an error\n+  --> $DIR/uninhabited-const-issue-61744.rs:4:5\n    |\n LL |     hint_unreachable()\n-   |     ------------------\n+   |     ^^^^^^^^^^^^^^^^^^\n    |     |\n+   |     reached the configured maximum number of stack frames\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n    |     inside `fake_type::<i32>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `<i32 as Const>::CONSTANT` at $DIR/uninhabited-const-issue-61744.rs:12:36\n ...\n-LL |     fake_type()\n-   |     ^^^^^^^^^^^\n-   |     |\n-   |     reached the configured maximum number of stack frames\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-   |     inside `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:8:5\n-\n-error: any use of this value will cause an error\n-  --> $DIR/uninhabited-const-issue-61744.rs:12:36\n-   |\n LL |     const CONSTANT: i32 = unsafe { fake_type() };\n-   |     -------------------------------^^^^^^^^^^^---\n-   |                                    |\n-   |                                    referenced constant has errors\n+   |     ---------------------------------------------\n    |\n    = note: `#[deny(const_err)]` on by default\n \n@@ -154,6 +145,6 @@ error[E0080]: erroneous constant used\n LL |     dbg!(i32::CONSTANT);\n    |          ^^^^^^^^^^^^^ referenced constant has errors\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "2e812dc53a68970a08e826a60a2935c2dc5c55e2", "filename": "src/test/ui/infinite/infinite-recursion-const-fn.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Finfinite%2Finfinite-recursion-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Finfinite%2Finfinite-recursion-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finfinite%2Finfinite-recursion-const-fn.rs?ref=1b7fe09025f6dfc7f134243fd672ad2c490b466b", "patch": "@@ -1,8 +1,7 @@\n //https://github.com/rust-lang/rust/issues/31364\n \n const fn a() -> usize {\n-    //~^ ERROR cycle detected when const-evaluating + checking `a` [E0391]\n-    b()\n+    b() //~ 4:8: evaluation of constant value failed [E0080]\n }\n const fn b() -> usize {\n     a()"}, {"sha": "620c9e110ff6822b9d71151805beca0c365aae53", "filename": "src/test/ui/infinite/infinite-recursion-const-fn.stderr", "status": "modified", "additions": 140, "deletions": 16, "changes": 156, "blob_url": "https://github.com/rust-lang/rust/blob/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Finfinite%2Finfinite-recursion-const-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b7fe09025f6dfc7f134243fd672ad2c490b466b/src%2Ftest%2Fui%2Finfinite%2Finfinite-recursion-const-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finfinite%2Finfinite-recursion-const-fn.stderr?ref=1b7fe09025f6dfc7f134243fd672ad2c490b466b", "patch": "@@ -1,21 +1,145 @@\n-error[E0391]: cycle detected when const-evaluating + checking `a`\n-  --> $DIR/infinite-recursion-const-fn.rs:3:1\n-   |\n-LL | const fn a() -> usize {\n-   | ^^^^^^^^^^^^^^^^^^^^^\n-   |\n-note: ...which requires const-evaluating + checking `b`...\n-  --> $DIR/infinite-recursion-const-fn.rs:7:1\n-   |\n-LL | const fn b() -> usize {\n-   | ^^^^^^^^^^^^^^^^^^^^^\n-   = note: ...which again requires const-evaluating + checking `a`, completing the cycle\n-note: cycle used when const-evaluating + checking `ARR::{constant#0}`\n-  --> $DIR/infinite-recursion-const-fn.rs:10:18\n+error[E0080]: evaluation of constant value failed\n+  --> $DIR/infinite-recursion-const-fn.rs:4:5\n    |\n+LL |     b()\n+   |     ^^^\n+   |     |\n+   |     reached the configured maximum number of stack frames\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+   |     inside `a` at $DIR/infinite-recursion-const-fn.rs:4:5\n+...\n+LL |     a()\n+   |     ---\n+   |     |\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+   |     inside `b` at $DIR/infinite-recursion-const-fn.rs:7:5\n+LL | }\n LL | const ARR: [i32; a()] = [5; 6];\n-   |                  ^^^\n+   |                  --- inside `ARR::{constant#0}` at $DIR/infinite-recursion-const-fn.rs:9:18\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0391`.\n+For more information about this error, try `rustc --explain E0080`."}]}