{"sha": "0f51652ad3502bfbedfc3762f5e63e578883146b", "node_id": "C_kwDOAAsO6NoAKDBmNTE2NTJhZDM1MDJiZmJlZGZjMzc2MmY1ZTYzZTU3ODg4MzE0NmI", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-08-11T18:14:26Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-04-18T18:59:08Z"}, "message": "Update tests", "tree": {"sha": "01496fb1c09c33d66b9471acacfd052820fd7133", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01496fb1c09c33d66b9471acacfd052820fd7133"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f51652ad3502bfbedfc3762f5e63e578883146b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f51652ad3502bfbedfc3762f5e63e578883146b", "html_url": "https://github.com/rust-lang/rust/commit/0f51652ad3502bfbedfc3762f5e63e578883146b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f51652ad3502bfbedfc3762f5e63e578883146b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3aeef670373e80aff644ddaea103ceb72d2e6464", "url": "https://api.github.com/repos/rust-lang/rust/commits/3aeef670373e80aff644ddaea103ceb72d2e6464", "html_url": "https://github.com/rust-lang/rust/commit/3aeef670373e80aff644ddaea103ceb72d2e6464"}], "stats": {"total": 112, "additions": 81, "deletions": 31}, "files": [{"sha": "828c20860a6fd43f0a4a3645ad53acd3060a1bda", "filename": "src/test/rustdoc-gui/search-result-color.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-gui%2Fsearch-result-color.goml", "raw_url": "https://github.com/rust-lang/rust/raw/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-gui%2Fsearch-result-color.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-result-color.goml?ref=0f51652ad3502bfbedfc3762f5e63e578883146b", "patch": "@@ -1,5 +1,5 @@\n // The goal of this test is to ensure the color of the text is the one expected.\n-goto: file://|DOC_PATH|/test_docs/index.html?search=coo\n+goto: file://|DOC_PATH|/test_docs/index.html?search=cook\n \n // This is needed so that the text color is computed.\n show-text: true"}, {"sha": "b47a1fefa41d00d7e8646c32bdf38d1016733914", "filename": "src/test/rustdoc-js-std/filter-crate.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js-std%2Ffilter-crate.js", "raw_url": "https://github.com/rust-lang/rust/raw/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js-std%2Ffilter-crate.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Ffilter-crate.js?ref=0f51652ad3502bfbedfc3762f5e63e578883146b", "patch": "@@ -1,6 +1,6 @@\n // exact-check\n \n-const QUERY = 'hashmap';\n+const QUERY = '\"hashmap\"';\n const FILTER_CRATE = 'core';\n \n const EXPECTED = {"}, {"sha": "aec8484a41f6dcb6e27ad2cee6a0247163bdc4d3", "filename": "src/test/rustdoc-js-std/quoted.js", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js-std%2Fquoted.js", "raw_url": "https://github.com/rust-lang/rust/raw/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js-std%2Fquoted.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fquoted.js?ref=0f51652ad3502bfbedfc3762f5e63e578883146b", "patch": "@@ -1,12 +1,20 @@\n+// ignore-order\n+\n const QUERY = '\"error\"';\n+const FILTER_CRATE = 'std';\n \n const EXPECTED = {\n     'others': [\n         { 'path': 'std', 'name': 'error' },\n         { 'path': 'std::fmt', 'name': 'Error' },\n         { 'path': 'std::io', 'name': 'Error' },\n     ],\n-    'in_args': [],\n+    'in_args': [\n+        { 'path': 'std::fmt::Error', 'name': 'eq' },\n+        { 'path': 'std::fmt::Error', 'name': 'cmp' },\n+        { 'path': 'std::fmt::Error', 'name': 'partial_cmp' },\n+\n+    ],\n     'returned': [\n         { 'path': 'std::fmt::LowerExp', 'name': 'fmt' },\n     ],"}, {"sha": "29609904b1957a52f893b9de8f097f796d399a49", "filename": "src/test/rustdoc-js-std/struct-vec.js", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js-std%2Fstruct-vec.js", "raw_url": "https://github.com/rust-lang/rust/raw/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js-std%2Fstruct-vec.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fstruct-vec.js?ref=0f51652ad3502bfbedfc3762f5e63e578883146b", "patch": "@@ -1,8 +1,8 @@\n-const QUERY = 'struct:Vec';\n+const QUERY = 'struct:VecD';\n \n const EXPECTED = {\n     'others': [\n-        { 'path': 'std::vec', 'name': 'Vec' },\n         { 'path': 'std::collections', 'name': 'VecDeque' },\n+        { 'path': 'std::vec', 'name': 'Vec' },\n     ],\n };"}, {"sha": "25efbad26954003233d959692152f34888221bd7", "filename": "src/test/rustdoc-js-std/typed-query.js", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js-std%2Ftyped-query.js", "raw_url": "https://github.com/rust-lang/rust/raw/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js-std%2Ftyped-query.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Ftyped-query.js?ref=0f51652ad3502bfbedfc3762f5e63e578883146b", "patch": "@@ -1,6 +1,7 @@\n // exact-check\n \n const QUERY = 'macro:print';\n+const FILTER_CRATE = 'std';\n \n const EXPECTED = {\n     'others': [\n@@ -9,6 +10,8 @@ const EXPECTED = {\n         { 'path': 'std', 'name': 'println' },\n         { 'path': 'std', 'name': 'eprintln' },\n         { 'path': 'std::pin', 'name': 'pin' },\n-        { 'path': 'core::pin', 'name': 'pin' },\n+        { 'path': 'std::future', 'name': 'join' },\n+        { 'path': 'std', 'name': 'line' },\n+        { 'path': 'std', 'name': 'write' },\n     ],\n };"}, {"sha": "e06047ba7606e78b8de5591ec8ecbbda03993a9d", "filename": "src/test/rustdoc-js/doc-alias-filter.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js%2Fdoc-alias-filter.js", "raw_url": "https://github.com/rust-lang/rust/raw/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js%2Fdoc-alias-filter.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fdoc-alias-filter.js?ref=0f51652ad3502bfbedfc3762f5e63e578883146b", "patch": "@@ -1,6 +1,6 @@\n // exact-check\n \n-const QUERY = 'true';\n+const QUERY = '\"true\"';\n \n const FILTER_CRATE = 'doc_alias_filter';\n "}, {"sha": "3ee55fe455d7a45457b4713e124dedf812b60c53", "filename": "src/test/rustdoc-js/doc-alias-whitespace.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js%2Fdoc-alias-whitespace.js", "raw_url": "https://github.com/rust-lang/rust/raw/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js%2Fdoc-alias-whitespace.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fdoc-alias-whitespace.js?ref=0f51652ad3502bfbedfc3762f5e63e578883146b", "patch": "@@ -10,7 +10,7 @@ const EXPECTED = [\n             {\n                 'path': 'doc_alias_whitespace',\n                 'name': 'Struct',\n-                'alias': 'Demon Lord',\n+                'alias': 'demon lord',\n                 'href': '../doc_alias_whitespace/struct.Struct.html',\n                 'is_alias': true\n             },"}, {"sha": "f450bf97981851333ecdba27c623f312ec67cf84", "filename": "src/test/rustdoc-js/doc-alias.js", "status": "modified", "additions": 41, "deletions": 21, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js%2Fdoc-alias.js", "raw_url": "https://github.com/rust-lang/rust/raw/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js%2Fdoc-alias.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fdoc-alias.js?ref=0f51652ad3502bfbedfc3762f5e63e578883146b", "patch": "@@ -27,33 +27,36 @@ const QUERY = [\n \n const EXPECTED = [\n     {\n+        // StructItem\n         'others': [\n             {\n                 'path': 'doc_alias',\n                 'name': 'Struct',\n-                'alias': 'StructItem',\n+                'alias': 'structitem',\n                 'href': '../doc_alias/struct.Struct.html',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // StructFieldItem\n         'others': [\n             {\n                 'path': 'doc_alias::Struct',\n                 'name': 'field',\n-                'alias': 'StructFieldItem',\n+                'alias': 'structfielditem',\n                 'href': '../doc_alias/struct.Struct.html#structfield.field',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // StructMethodItem\n         'others': [\n             {\n                 'path': 'doc_alias::Struct',\n                 'name': 'method',\n-                'alias': 'StructMethodItem',\n+                'alias': 'structmethoditem',\n                 'href': '../doc_alias/struct.Struct.html#method.method',\n                 'is_alias': true\n             },\n@@ -69,139 +72,151 @@ const EXPECTED = [\n             {\n                 'path': 'doc_alias::Struct',\n                 'name': 'ImplConstItem',\n-                'alias': 'StructImplConstItem',\n+                'alias': 'structimplconstitem',\n                 'href': '../doc_alias/struct.Struct.html#associatedconstant.ImplConstItem',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // ImplTraitFunction\n         'others': [\n             {\n                 'path': 'doc_alias::Struct',\n                 'name': 'function',\n-                'alias': 'ImplTraitFunction',\n+                'alias': 'impltraitfunction',\n                 'href': '../doc_alias/struct.Struct.html#method.function',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // EnumItem\n         'others': [\n             {\n                 'path': 'doc_alias',\n                 'name': 'Enum',\n-                'alias': 'EnumItem',\n+                'alias': 'enumitem',\n                 'href': '../doc_alias/enum.Enum.html',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // VariantItem\n         'others': [\n             {\n                 'path': 'doc_alias::Enum',\n                 'name': 'Variant',\n-                'alias': 'VariantItem',\n+                'alias': 'variantitem',\n                 'href': '../doc_alias/enum.Enum.html#variant.Variant',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // EnumMethodItem\n         'others': [\n             {\n                 'path': 'doc_alias::Enum',\n                 'name': 'method',\n-                'alias': 'EnumMethodItem',\n+                'alias': 'enummethoditem',\n                 'href': '../doc_alias/enum.Enum.html#method.method',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // TypedefItem\n         'others': [\n             {\n                 'path': 'doc_alias',\n                 'name': 'Typedef',\n-                'alias': 'TypedefItem',\n+                'alias': 'typedefitem',\n                 'href': '../doc_alias/type.Typedef.html',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // TraitItem\n         'others': [\n             {\n                 'path': 'doc_alias',\n                 'name': 'Trait',\n-                'alias': 'TraitItem',\n+                'alias': 'traititem',\n                 'href': '../doc_alias/trait.Trait.html',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // TraitTypeItem\n         'others': [\n             {\n                 'path': 'doc_alias::Trait',\n                 'name': 'Target',\n-                'alias': 'TraitTypeItem',\n+                'alias': 'traittypeitem',\n                 'href': '../doc_alias/trait.Trait.html#associatedtype.Target',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // AssociatedConstItem\n         'others': [\n             {\n                 'path': 'doc_alias::Trait',\n                 'name': 'AssociatedConst',\n-                'alias': 'AssociatedConstItem',\n+                'alias': 'associatedconstitem',\n                 'href': '../doc_alias/trait.Trait.html#associatedconstant.AssociatedConst',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // TraitFunctionItem\n         'others': [\n             {\n                 'path': 'doc_alias::Trait',\n                 'name': 'function',\n-                'alias': 'TraitFunctionItem',\n+                'alias': 'traitfunctionitem',\n                 'href': '../doc_alias/trait.Trait.html#tymethod.function',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // FunctionItem\n         'others': [\n             {\n                 'path': 'doc_alias',\n                 'name': 'function',\n-                'alias': 'FunctionItem',\n+                'alias': 'functionitem',\n                 'href': '../doc_alias/fn.function.html',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // ModuleItem\n         'others': [\n             {\n                 'path': 'doc_alias',\n                 'name': 'Module',\n-                'alias': 'ModuleItem',\n+                'alias': 'moduleitem',\n                 'href': '../doc_alias/Module/index.html',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // ConstItem\n         'others': [\n             {\n                 'path': 'doc_alias',\n                 'name': 'Const',\n-                'alias': 'ConstItem',\n+                'alias': 'constitem',\n                 'href': '../doc_alias/constant.Const.html',\n                 'is_alias': true\n             },\n@@ -212,22 +227,24 @@ const EXPECTED = [\n         ],\n     },\n     {\n+        // StaticItem\n         'others': [\n             {\n                 'path': 'doc_alias',\n                 'name': 'Static',\n-                'alias': 'StaticItem',\n+                'alias': 'staticitem',\n                 'href': '../doc_alias/static.Static.html',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // UnionItem\n         'others': [\n             {\n                 'path': 'doc_alias',\n                 'name': 'Union',\n-                'alias': 'UnionItem',\n+                'alias': 'unionitem',\n                 'href': '../doc_alias/union.Union.html',\n                 'is_alias': true\n             },\n@@ -240,33 +257,36 @@ const EXPECTED = [\n         ],\n     },\n     {\n+        // UnionFieldItem\n         'others': [\n             {\n                 'path': 'doc_alias::Union',\n                 'name': 'union_item',\n-                'alias': 'UnionFieldItem',\n+                'alias': 'unionfielditem',\n                 'href': '../doc_alias/union.Union.html#structfield.union_item',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // UnionMethodItem\n         'others': [\n             {\n                 'path': 'doc_alias::Union',\n                 'name': 'method',\n-                'alias': 'UnionMethodItem',\n+                'alias': 'unionmethoditem',\n                 'href': '../doc_alias/union.Union.html#method.method',\n                 'is_alias': true\n             },\n         ],\n     },\n     {\n+        // MacroItem\n         'others': [\n             {\n                 'path': 'doc_alias',\n                 'name': 'Macro',\n-                'alias': 'MacroItem',\n+                'alias': 'macroitem',\n                 'href': '../doc_alias/macro.Macro.html',\n                 'is_alias': true\n             },"}, {"sha": "9d5937dafdc142fd127ab981cddb785790b222c9", "filename": "src/test/rustdoc-js/generics.js", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js%2Fgenerics.js", "raw_url": "https://github.com/rust-lang/rust/raw/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js%2Fgenerics.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fgenerics.js?ref=0f51652ad3502bfbedfc3762f5e63e578883146b", "patch": "@@ -1,16 +1,18 @@\n // exact-check\n \n const QUERY = [\n-    '\"R<P>\"',\n+    '\"R\"<\"P\">',\n     '\"P\"',\n     'P',\n-    '\"ExtraCreditStructMulti<ExtraCreditInnerMulti, ExtraCreditInnerMulti>\"',\n+    '\"ExtraCreditStructMulti\"<\"ExtraCreditInnerMulti\", \"ExtraCreditInnerMulti\">',\n     'TraitCat',\n     'TraitDog',\n+    'Result<String>',\n ];\n \n const EXPECTED = [\n     {\n+        // \"R\"<\"P\">\n         'returned': [\n             { 'path': 'generics', 'name': 'alef' },\n         ],\n@@ -19,6 +21,7 @@ const EXPECTED = [\n         ],\n     },\n     {\n+        // \"P\"\n         'others': [\n             { 'path': 'generics', 'name': 'P' },\n         ],\n@@ -30,6 +33,7 @@ const EXPECTED = [\n         ],\n     },\n     {\n+        // P\n         'returned': [\n             { 'path': 'generics', 'name': 'alef' },\n             { 'path': 'generics', 'name': 'bet' },\n@@ -40,19 +44,32 @@ const EXPECTED = [\n         ],\n     },\n     {\n+        // \"ExtraCreditStructMulti\"<\"ExtraCreditInnerMulti\", \"ExtraCreditInnerMulti\">\n         'in_args': [\n             { 'path': 'generics', 'name': 'extracreditlabhomework' },\n         ],\n         'returned': [],\n     },\n     {\n+        // TraitCat\n         'in_args': [\n             { 'path': 'generics', 'name': 'gamma' },\n         ],\n     },\n     {\n+        // TraitDog\n         'in_args': [\n             { 'path': 'generics', 'name': 'gamma' },\n         ],\n     },\n+    {\n+        // Result<String>\n+        'others': [],\n+        'returned': [\n+            { 'path': 'generics', 'name': 'super_soup' },\n+        ],\n+        'in_args': [\n+            { 'path': 'generics', 'name': 'super_soup' },\n+        ],\n+    },\n ];"}, {"sha": "055c51c7ec5781f819196bbf9e1907b5ff61194b", "filename": "src/test/rustdoc-js/generics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f51652ad3502bfbedfc3762f5e63e578883146b/src%2Ftest%2Frustdoc-js%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fgenerics.rs?ref=0f51652ad3502bfbedfc3762f5e63e578883146b", "patch": "@@ -24,3 +24,5 @@ pub trait TraitCat {}\n pub trait TraitDog {}\n \n pub fn gamma<T: TraitCat + TraitDog>(t: T) {}\n+\n+pub fn super_soup(s: Result<String, i32>) -> Result<String, i32> { s }"}]}