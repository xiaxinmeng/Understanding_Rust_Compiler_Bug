{"sha": "8ec467d521e6e39f80a0c74c049a5aa719a01dde", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlYzQ2N2Q1MjFlNmUzOWY4MGEwYzc0YzA0OWE1YWE3MTlhMDFkZGU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-23T01:24:28Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-23T05:29:17Z"}, "message": "std: Update timer for new kind rules", "tree": {"sha": "b55c30ab9aadd55145e11bdb9b1575ea4e9fe618", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b55c30ab9aadd55145e11bdb9b1575ea4e9fe618"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ec467d521e6e39f80a0c74c049a5aa719a01dde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ec467d521e6e39f80a0c74c049a5aa719a01dde", "html_url": "https://github.com/rust-lang/rust/commit/8ec467d521e6e39f80a0c74c049a5aa719a01dde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ec467d521e6e39f80a0c74c049a5aa719a01dde/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92e9e736fab57a169882897337cef344a48c0c2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/92e9e736fab57a169882897337cef344a48c0c2d", "html_url": "https://github.com/rust-lang/rust/commit/92e9e736fab57a169882897337cef344a48c0c2d"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "f910b724c4411f77b42d9ac4e9833a145b98cb5a", "filename": "src/libstd/timer.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8ec467d521e6e39f80a0c74c049a5aa719a01dde/src%2Flibstd%2Ftimer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec467d521e6e39f80a0c74c049a5aa719a01dde/src%2Flibstd%2Ftimer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftimer.rs?ref=8ec467d521e6e39f80a0c74c049a5aa719a01dde", "patch": "@@ -21,8 +21,8 @@ for *at least* that period of time.\n * ch - a channel of type T to send a `val` on\n * val - a value of type T to send over the provided `ch`\n \"]\n-fn delayed_send<T: send>(hl_loop: uv::hl::high_level_loop,\n-                         msecs: uint, ch: comm::chan<T>, val: T) {\n+fn delayed_send<T: copy send>(hl_loop: uv::hl::high_level_loop,\n+                              msecs: uint, ch: comm::chan<T>, val: T) {\n     task::spawn() {||\n         unsafe {\n             let timer_done_po = comm::port::<()>();\n@@ -97,8 +97,9 @@ An `option<T>` representing the outcome of the call. If the call `recv`'d on\n the provided port in the allotted timeout period, then the result will be a\n `some(T)`. If not, then `none` will be returned.\n \"]\n-fn recv_timeout<T: send>(hl_loop: uv::hl::high_level_loop,\n-                         msecs: uint, wait_po: comm::port<T>) -> option<T> {\n+fn recv_timeout<T: copy send>(hl_loop: uv::hl::high_level_loop,\n+                              msecs: uint,\n+                              wait_po: comm::port<T>) -> option<T> {\n     let timeout_po = comm::port::<()>();\n     let timeout_ch = comm::chan(timeout_po);\n     delayed_send(hl_loop, msecs, timeout_ch, ());"}]}