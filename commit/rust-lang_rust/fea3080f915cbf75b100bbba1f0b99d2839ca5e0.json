{"sha": "fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlYTMwODBmOTE1Y2JmNzViMTAwYmJiYTFmMGI5OWQyODM5Y2E1ZTA=", "commit": {"author": {"name": "sinkuu", "email": "sinkuu@sinkuu.xyz", "date": "2017-08-11T07:17:12Z"}, "committer": {"name": "sinkuu", "email": "sinkuu@sinkuu.xyz", "date": "2017-08-11T08:44:16Z"}, "message": "Format", "tree": {"sha": "c646c61b8e5c4780bba13ca84ba256066870d232", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c646c61b8e5c4780bba13ca84ba256066870d232"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "html_url": "https://github.com/rust-lang/rust/commit/fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b433e63d2a952db18fd079cbf8ec1cf49b0d076b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b433e63d2a952db18fd079cbf8ec1cf49b0d076b", "html_url": "https://github.com/rust-lang/rust/commit/b433e63d2a952db18fd079cbf8ec1cf49b0d076b"}], "stats": {"total": 22, "additions": 0, "deletions": 22}, "files": [{"sha": "2c0ec3a84dcb9a43820895861c8a496e3410afab", "filename": "src/bin/cargo-fmt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/src%2Fbin%2Fcargo-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/src%2Fbin%2Fcargo-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-fmt.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -271,7 +271,6 @@ fn get_targets(workspace_hitlist: WorkspaceHitlist) -> Result<Vec<Target>, std::\n         std::io::ErrorKind::NotFound,\n         str::from_utf8(&output.stderr).unwrap(),\n     ))\n-\n }\n \n fn target_from_json(jtarget: &Value) -> Target {"}, {"sha": "88bd3222fcb85fe90f43bed09386b9982cc95979", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -102,7 +102,6 @@ fn match_cli_path_or_file(\n     config_path: Option<PathBuf>,\n     input_file: &Path,\n ) -> FmtResult<(Config, Option<PathBuf>)> {\n-\n     if let Some(config_file) = config_path {\n         let toml = Config::from_toml_path(config_file.as_ref())?;\n         return Ok((toml, Some(config_file)));"}, {"sha": "298b8143b53178a60a70bad1182ad7b5d18c850b", "filename": "src/expr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -2985,7 +2985,6 @@ fn choose_rhs(\n }\n \n fn prefer_next_line(orig_rhs: &str, next_line_rhs: &str) -> bool {\n-\n     fn count_line_breaks(src: &str) -> usize {\n         src.chars().filter(|&x| x == '\\n').count()\n     }"}, {"sha": "72724da1c1189b031ecde43ed68c2b8e48e938cf", "filename": "src/filemap.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/src%2Ffilemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/src%2Ffilemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffilemap.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -90,7 +90,6 @@ pub fn write_file<T>(\n where\n     T: Write,\n {\n-\n     fn source_and_formatted_text(\n         text: &StringBuffer,\n         filename: &str,"}, {"sha": "61ef03b1687475c8bc647050f5f9f96e9426b466", "filename": "src/types.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -404,7 +404,6 @@ where\n     } else {\n         Some(format!(\"{}{}\", args, output))\n     }\n-\n }\n \n fn type_bound_colon(context: &RewriteContext) -> &'static str {\n@@ -601,7 +600,6 @@ impl Rewrite for ast::TyParam {\n             result.push_str(&join_bounds(context, shape, &strs));\n         }\n         if let Some(ref def) = self.default {\n-\n             let eq_str = match context.config.type_punctuation_density() {\n                 TypeDensity::Compressed => \"=\",\n                 TypeDensity::Wide => \" = \","}, {"sha": "e3d489411ad2815698625685b71feb9f8b26bf90", "filename": "tests/source/fn-simple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Fsource%2Ffn-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Fsource%2Ffn-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-simple.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -51,5 +51,4 @@ pub fn waltz(cwd: &Path) -> CliAssert {\n             formatted_comment = rewrite_comment(comment, block_style, width, offset, formatting_fig);\n         }\n     }\n-\n }"}, {"sha": "75cee57f10db61c9f2bc9e16dea4c84b4041161e", "filename": "tests/source/indent_match_arms.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Fsource%2Findent_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Fsource%2Findent_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Findent_match_arms.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -23,5 +23,4 @@ fn main() {\n         },\n         _ => \"something else\",\n     }\n-\n }"}, {"sha": "4c60859e6cf3919bd1a731d0922e01fe270b3d72", "filename": "tests/source/issue-510.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Fsource%2Fissue-510.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Fsource%2Fissue-510.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-510.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -3,7 +3,6 @@ fn solve_inline_size_constraints(&self,\n block: &mut BlockFlow,\n input: &ISizeConstraintInput)\n -> ISizeConstraintSolution {\n-\n let (inline_start,inline_size,margin_inline_start,margin_inline_end) =\n match (inline_startssssssxxxxxxsssssxxxxxxxxxssssssxxx,inline_startssssssxxxxxxsssssxxxxxxxxxssssssxxx) {\n (MaybeAuto::Auto, MaybeAuto::Auto, MaybeAuto::Auto) => {"}, {"sha": "73cab841e2e61771b20818cbd9695b2f6255528b", "filename": "tests/source/spaces-within-angle-brackets.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Fsource%2Fspaces-within-angle-brackets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Fsource%2Fspaces-within-angle-brackets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fspaces-within-angle-brackets.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -31,7 +31,6 @@ fn foo<T, E>(a: T, b: E) {\n }\n \n fn foo<T: Send, E: Send>(a: T, b: E) {\n-\n     foo::<u32, str>(10, \"bar\");\n \n     let opt: Option<u32>;"}, {"sha": "dba8d7cf01309dbb281da9a41f1bf3dfc8834d6a", "filename": "tests/source/spaces-within-parens.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Fsource%2Fspaces-within-parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Fsource%2Fspaces-within-parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fspaces-within-parens.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -14,7 +14,6 @@ struct TupleStruct2(u32, u32);\n fn fooEmpty() {}\n \n fn foo(e: E, _: u32) -> (u32, u32) {\n-\n     // Tuples\n     let t1 = ();\n     let t2 = (1,);"}, {"sha": "d0466cacdd54f1dc19556634b72f9aa79c53f197", "filename": "tests/source/spaces-within-square-brackets.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Fsource%2Fspaces-within-square-brackets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Fsource%2Fspaces-within-square-brackets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fspaces-within-square-brackets.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -1,7 +1,6 @@\n // rustfmt-spaces_within_square_brackets: true\n \n fn main() {\n-\n     let arr: [i32; 5] = [1, 2, 3, 4, 5];\n     let arr: [i32; 500] = [0; 500];\n "}, {"sha": "d7d9e961bc443a00b5c1a81250f6ed3ebd399bde", "filename": "tests/source/struct_tuple_visual.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Fsource%2Fstruct_tuple_visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Fsource%2Fstruct_tuple_visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fstruct_tuple_visual.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -3,7 +3,6 @@\n // rustfmt-error_on_line_overflow: false\n // rustfmt-struct_lit_style: Visual\n fn foo() {\n-\n     Fooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo(f(), b());\n \n     Foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo(// Comment\n@@ -35,5 +34,4 @@ fn foo() {\n             //              /|\\   \\\n             //             o o o   o\n             G)\n-\n }"}, {"sha": "a9640937f60628940541d438d84f57fba5063023", "filename": "tests/target/fn-simple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Ftarget%2Ffn-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Ftarget%2Ffn-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-simple.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -96,5 +96,4 @@ pub fn waltz(cwd: &Path) -> CliAssert {\n                 rewrite_comment(comment, block_style, width, offset, formatting_fig);\n         }\n     }\n-\n }"}, {"sha": "8d5e7ef78874ad870890f101d1f1dfce728ae63b", "filename": "tests/target/indent_match_arms.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Ftarget%2Findent_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Ftarget%2Findent_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Findent_match_arms.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -23,5 +23,4 @@ fn main() {\n     },\n     _ => \"something else\",\n     }\n-\n }"}, {"sha": "a166b68498fa0672a96bb31fab427cf935472fed", "filename": "tests/target/issue-510.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Ftarget%2Fissue-510.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Ftarget%2Fissue-510.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-510.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -4,7 +4,6 @@ impl ISizeAndMarginsComputer for AbsoluteNonReplaced {\n         block: &mut BlockFlow,\n         input: &ISizeConstraintInput,\n     ) -> ISizeConstraintSolution {\n-\n         let (inline_start, inline_size, margin_inline_start, margin_inline_end) = match (\n             inline_startssssssxxxxxxsssssxxxxxxxxxssssssxxx,\n             inline_startssssssxxxxxxsssssxxxxxxxxxssssssxxx,"}, {"sha": "89335b602a423f71695041221be800d1f3b482a0", "filename": "tests/target/spaces-within-angle-brackets.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Ftarget%2Fspaces-within-angle-brackets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Ftarget%2Fspaces-within-angle-brackets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fspaces-within-angle-brackets.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -31,7 +31,6 @@ fn foo< T, E >(a: T, b: E) {\n }\n \n fn foo< T: Send, E: Send >(a: T, b: E) {\n-\n     foo::< u32, str >(10, \"bar\");\n \n     let opt: Option< u32 >;"}, {"sha": "651386c618bfd4d008e1dcc3be061462fd6f0469", "filename": "tests/target/spaces-within-parens.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Ftarget%2Fspaces-within-parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Ftarget%2Fspaces-within-parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fspaces-within-parens.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -14,7 +14,6 @@ struct TupleStruct2( u32, u32 );\n fn fooEmpty() {}\n \n fn foo( e: E, _: u32 ) -> ( u32, u32 ) {\n-\n     // Tuples\n     let t1 = ();\n     let t2 = ( 1, );"}, {"sha": "cb468d6b59e62b2a1388c93e2e7a21d823a0f3b7", "filename": "tests/target/spaces-within-square-brackets.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Ftarget%2Fspaces-within-square-brackets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Ftarget%2Fspaces-within-square-brackets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fspaces-within-square-brackets.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -1,7 +1,6 @@\n // rustfmt-spaces_within_square_brackets: true\n \n fn main() {\n-\n     let arr: [ i32; 5 ] = [ 1, 2, 3, 4, 5 ];\n     let arr: [ i32; 500 ] = [ 0; 500 ];\n "}, {"sha": "02811668bcba9152173e5e5338f4d7ed272da43d", "filename": "tests/target/struct_tuple_visual.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Ftarget%2Fstruct_tuple_visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fea3080f915cbf75b100bbba1f0b99d2839ca5e0/tests%2Ftarget%2Fstruct_tuple_visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstruct_tuple_visual.rs?ref=fea3080f915cbf75b100bbba1f0b99d2839ca5e0", "patch": "@@ -3,7 +3,6 @@\n // rustfmt-error_on_line_overflow: false\n // rustfmt-struct_lit_style: Visual\n fn foo() {\n-\n     Fooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo(f(), b());\n \n     Foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo(\n@@ -45,5 +44,4 @@ fn foo() {\n         //             o o o   o\n         G,\n     )\n-\n }"}]}