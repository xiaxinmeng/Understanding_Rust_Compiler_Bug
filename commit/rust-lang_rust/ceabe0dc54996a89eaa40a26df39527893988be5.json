{"sha": "ceabe0dc54996a89eaa40a26df39527893988be5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlYWJlMGRjNTQ5OTZhODllYWE0MGEyNmRmMzk1Mjc4OTM5ODhiZTU=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-08-12T15:59:45Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-08-19T15:57:09Z"}, "message": "rustc_mir: disallow non-monomorphic vtables.", "tree": {"sha": "d666f3bfe107f955a86f8cf1a76ef9d8f960f325", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d666f3bfe107f955a86f8cf1a76ef9d8f960f325"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ceabe0dc54996a89eaa40a26df39527893988be5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ceabe0dc54996a89eaa40a26df39527893988be5", "html_url": "https://github.com/rust-lang/rust/commit/ceabe0dc54996a89eaa40a26df39527893988be5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ceabe0dc54996a89eaa40a26df39527893988be5/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4149964ae4248bcf3a7bd95b3cc5f8cb7bb45d10", "url": "https://api.github.com/repos/rust-lang/rust/commits/4149964ae4248bcf3a7bd95b3cc5f8cb7bb45d10", "html_url": "https://github.com/rust-lang/rust/commit/4149964ae4248bcf3a7bd95b3cc5f8cb7bb45d10"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "a2fc75739ffa0ae34ffe672fb06c6c395a483fbf", "filename": "src/librustc_mir/interpret/traits.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ceabe0dc54996a89eaa40a26df39527893988be5/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceabe0dc54996a89eaa40a26df39527893988be5/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs?ref=ceabe0dc54996a89eaa40a26df39527893988be5", "patch": "@@ -1,4 +1,4 @@\n-use rustc::ty::{self, Ty, Instance};\n+use rustc::ty::{self, Ty, Instance, TypeFoldable};\n use rustc::ty::layout::{Size, Align, LayoutOf};\n use rustc::mir::interpret::{Scalar, Pointer, InterpResult, PointerArithmetic,};\n \n@@ -20,6 +20,11 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n         let (ty, poly_trait_ref) = self.tcx.erase_regions(&(ty, poly_trait_ref));\n \n+        // All vtables must be monomorphic, bail out otherwise.\n+        if ty.needs_subst() || poly_trait_ref.needs_subst() {\n+            throw_inval!(TooGeneric);\n+        }\n+\n         if let Some(&vtable) = self.vtables.get(&(ty, poly_trait_ref)) {\n             // This means we guarantee that there are no duplicate vtables, we will\n             // always use the same vtable for the same (Type, Trait) combination."}]}