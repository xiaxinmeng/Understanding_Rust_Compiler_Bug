{"sha": "f21655ec0286769056c73f9b1c847936c577004b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyMTY1NWVjMDI4Njc2OTA1NmM3M2Y5YjFjODQ3OTM2YzU3NzAwNGI=", "commit": {"author": {"name": "Steven Allen", "email": "steven@stebalien.com", "date": "2015-05-22T14:37:44Z"}, "committer": {"name": "Steven Allen", "email": "steven@stebalien.com", "date": "2015-05-22T16:47:52Z"}, "message": "Allow patterns to be followed by if and in.\n\nNeeded to support:\n\nmatch X {\n  pattern if Y ...\n}\n\nfor pattern in Y {}", "tree": {"sha": "3d810dff3431ba98df386c0374c22f84ca1f79c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d810dff3431ba98df386c0374c22f84ca1f79c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f21655ec0286769056c73f9b1c847936c577004b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f21655ec0286769056c73f9b1c847936c577004b", "html_url": "https://github.com/rust-lang/rust/commit/f21655ec0286769056c73f9b1c847936c577004b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f21655ec0286769056c73f9b1c847936c577004b/comments", "author": {"login": "Stebalien", "id": 310393, "node_id": "MDQ6VXNlcjMxMDM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/310393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stebalien", "html_url": "https://github.com/Stebalien", "followers_url": "https://api.github.com/users/Stebalien/followers", "following_url": "https://api.github.com/users/Stebalien/following{/other_user}", "gists_url": "https://api.github.com/users/Stebalien/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stebalien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stebalien/subscriptions", "organizations_url": "https://api.github.com/users/Stebalien/orgs", "repos_url": "https://api.github.com/users/Stebalien/repos", "events_url": "https://api.github.com/users/Stebalien/events{/privacy}", "received_events_url": "https://api.github.com/users/Stebalien/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Stebalien", "id": 310393, "node_id": "MDQ6VXNlcjMxMDM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/310393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stebalien", "html_url": "https://github.com/Stebalien", "followers_url": "https://api.github.com/users/Stebalien/followers", "following_url": "https://api.github.com/users/Stebalien/following{/other_user}", "gists_url": "https://api.github.com/users/Stebalien/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stebalien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stebalien/subscriptions", "organizations_url": "https://api.github.com/users/Stebalien/orgs", "repos_url": "https://api.github.com/users/Stebalien/repos", "events_url": "https://api.github.com/users/Stebalien/events{/privacy}", "received_events_url": "https://api.github.com/users/Stebalien/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3d60aba6c86883c79055c1a3923d4db116b644e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3d60aba6c86883c79055c1a3923d4db116b644e", "html_url": "https://github.com/rust-lang/rust/commit/c3d60aba6c86883c79055c1a3923d4db116b644e"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "0f9a01645199acbe27fb0275489f877a1f220a5a", "filename": "src/doc/trpl/macros.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f21655ec0286769056c73f9b1c847936c577004b/src%2Fdoc%2Ftrpl%2Fmacros.md", "raw_url": "https://github.com/rust-lang/rust/raw/f21655ec0286769056c73f9b1c847936c577004b/src%2Fdoc%2Ftrpl%2Fmacros.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fmacros.md?ref=f21655ec0286769056c73f9b1c847936c577004b", "patch": "@@ -478,7 +478,7 @@ There are additional rules regarding the next token after a metavariable:\n \n * `expr` variables may only be followed by one of: `=> , ;`\n * `ty` and `path` variables may only be followed by one of: `=> , : = > as`\n-* `pat` variables may only be followed by one of: `=> , =`\n+* `pat` variables may only be followed by one of: `=> , = if in`\n * Other variables may be followed by any token.\n \n These rules provide some flexibility for Rust\u2019s syntax to evolve without"}, {"sha": "03d4e21a941bffdba4a63f649eea93e308ffb9ed", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f21655ec0286769056c73f9b1c847936c577004b/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f21655ec0286769056c73f9b1c847936c577004b/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=f21655ec0286769056c73f9b1c847936c577004b", "patch": "@@ -495,6 +495,7 @@ fn is_in_follow(_: &ExtCtxt, tok: &Token, frag: &str) -> Result<bool, String> {\n             \"pat\" => {\n                 match *tok {\n                     FatArrow | Comma | Eq => Ok(true),\n+                    Ident(i, _) if i.as_str() == \"if\" || i.as_str() == \"in\" => Ok(true),\n                     _ => Ok(false)\n                 }\n             },"}, {"sha": "77c6ed4447f116a174c0ada89133f1cf1a7a0d58", "filename": "src/test/run-pass/macro-pat-follow.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f21655ec0286769056c73f9b1c847936c577004b/src%2Ftest%2Frun-pass%2Fmacro-pat-follow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f21655ec0286769056c73f9b1c847936c577004b/src%2Ftest%2Frun-pass%2Fmacro-pat-follow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-pat-follow.rs?ref=f21655ec0286769056c73f9b1c847936c577004b", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+macro_rules! pat_in {\n+    ($p:pat in $e:expr) => {{\n+        let mut iter = $e.into_iter();\n+        while let $p = iter.next() {}\n+    }}\n+}\n+\n+macro_rules! pat_if {\n+    ($p:pat if $e:expr) => {{\n+        match Some(1u8) {\n+            $p if $e => {},\n+            _ => {}\n+        }\n+    }}\n+}\n+\n+fn main() {\n+    pat_in!(Some(_) in 0..10);\n+    pat_if!(Some(x) if x > 0);\n+}"}]}