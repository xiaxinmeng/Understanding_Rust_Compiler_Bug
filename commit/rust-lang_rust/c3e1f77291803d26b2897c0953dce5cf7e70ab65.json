{"sha": "c3e1f77291803d26b2897c0953dce5cf7e70ab65", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzZTFmNzcyOTE4MDNkMjZiMjg5N2MwOTUzZGNlNWNmN2U3MGFiNjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-04T08:47:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-04T08:47:27Z"}, "message": "Auto merge of #21892 - huonw:deprecate-rand, r=alexcrichton\n\nUse [`rand`](https://crates.io/crates/rand) and [`derive_rand`](https://crates.io/crates/derive_rand) from crates.io.\r\n\r\n[breaking-change]", "tree": {"sha": "83eb70740cacdf3d395976e85fed0b19c35dcc6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83eb70740cacdf3d395976e85fed0b19c35dcc6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3e1f77291803d26b2897c0953dce5cf7e70ab65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3e1f77291803d26b2897c0953dce5cf7e70ab65", "html_url": "https://github.com/rust-lang/rust/commit/c3e1f77291803d26b2897c0953dce5cf7e70ab65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3e1f77291803d26b2897c0953dce5cf7e70ab65/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6c15d9b2daecdbe32eca894bda40c424798f5a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6c15d9b2daecdbe32eca894bda40c424798f5a0", "html_url": "https://github.com/rust-lang/rust/commit/d6c15d9b2daecdbe32eca894bda40c424798f5a0"}, {"sha": "df1ac7aa63ea89a067c57663eab035f7b83f6933", "url": "https://api.github.com/repos/rust-lang/rust/commits/df1ac7aa63ea89a067c57663eab035f7b83f6933", "html_url": "https://github.com/rust-lang/rust/commit/df1ac7aa63ea89a067c57663eab035f7b83f6933"}], "stats": {"total": 126, "additions": 26, "deletions": 100}, "files": [{"sha": "a8a62358d3afe41f578c2a7ca2701a7db295f717", "filename": "src/etc/generate-deriving-span-tests.py", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Fetc%2Fgenerate-deriving-span-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Fetc%2Fgenerate-deriving-span-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgenerate-deriving-span-tests.py?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -114,8 +114,7 @@ def write_file(name, string):\n     'Encodable': (0, [], 0), # FIXME: quoting gives horrible spans\n }\n \n-for (trait, supers, errs) in [('Rand', [], 1),\n-                              ('Clone', [], 1),\n+for (trait, supers, errs) in [('Clone', [], 1),\n                               ('PartialEq', [], 2),\n                               ('PartialOrd', ['PartialEq'], 8),\n                               ('Eq', ['PartialEq'], 1),"}, {"sha": "f44141fe0f49370eccac5a83ed995b62ed3e416d", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -32,6 +32,7 @@\n #![feature(unicode)]\n #![feature(unsafe_destructor, slicing_syntax)]\n #![cfg_attr(test, feature(test))]\n+#![cfg_attr(test, allow(deprecated))] // rand\n \n #![no_std]\n "}, {"sha": "50066ab07f555f2f53864584bfce48e9d7fff010", "filename": "src/libcoretest/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibcoretest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibcoretest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Flib.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -12,6 +12,7 @@\n #![feature(int_uint)]\n #![feature(unboxed_closures)]\n #![feature(unsafe_destructor, slicing_syntax)]\n+#![allow(deprecated)] // rand\n \n extern crate core;\n extern crate test;"}, {"sha": "a3bbba6d7b432eb0f4ee48d541b50cd187cf9c45", "filename": "src/libflate/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibflate%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibflate%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibflate%2Flib.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -130,6 +130,7 @@ pub fn inflate_bytes_zlib(bytes: &[u8]) -> Option<Bytes> {\n \n #[cfg(test)]\n mod tests {\n+    #![allow(deprecated)]\n     use super::{inflate_bytes, deflate_bytes};\n     use std::rand;\n     use std::rand::Rng;"}, {"sha": "0627b461fdb0c2bec691da0c28f460cbae6161f2", "filename": "src/librand/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibrand%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibrand%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Flib.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -28,6 +28,10 @@\n #![feature(staged_api)]\n #![staged_api]\n #![feature(core)]\n+#![deprecated(reason = \"use the crates.io `rand` library instead\",\n+              since = \"1.0.0-alpha\")]\n+\n+#![allow(deprecated)]\n \n #[macro_use]\n extern crate core;"}, {"sha": "286a3936314a5540500550f99dd8087432f2bf8c", "filename": "src/librustc_back/sha2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibrustc_back%2Fsha2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibrustc_back%2Fsha2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Fsha2.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -528,6 +528,7 @@ static H256: [u32; 8] = [\n \n #[cfg(test)]\n mod tests {\n+    #![allow(deprecated)]\n     extern crate rand;\n \n     use self::rand::Rng;"}, {"sha": "63270610472485cc708a04200fd758aa3f180919", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -1593,6 +1593,7 @@ pub struct RandomState {\n impl RandomState {\n     /// Construct a new `RandomState` that is initialized with random keys.\n     #[inline]\n+    #[allow(deprecated)]\n     pub fn new() -> RandomState {\n         let mut r = rand::thread_rng();\n         RandomState { k0: r.gen(), k1: r.gen() }"}, {"sha": "14e779f9c4a8edad733e408b7baa5a97a17af2df", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -140,7 +140,7 @@ extern crate core;\n #[macro_reexport(vec)]\n extern crate \"collections\" as core_collections;\n \n-extern crate \"rand\" as core_rand;\n+#[allow(deprecated)] extern crate \"rand\" as core_rand;\n extern crate alloc;\n extern crate unicode;\n extern crate libc;"}, {"sha": "9c4741b3ce316f0eefa0e06343eda48fe8f223d5", "filename": "src/libstd/num/strconv.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Fnum%2Fstrconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Fnum%2Fstrconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fstrconv.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -459,6 +459,7 @@ mod tests {\n \n #[cfg(test)]\n mod bench {\n+    #![allow(deprecated)] // rand\n     extern crate test;\n \n     mod uint {"}, {"sha": "67e3fddfd05a5401d10b0ea5b9a175e6dede52a2", "filename": "src/libstd/old_io/fs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Fold_io%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Fold_io%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_io%2Ffs.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -822,6 +822,7 @@ fn access_string(access: FileAccess) -> &'static str {\n #[allow(unused_imports)]\n #[allow(unused_variables)]\n #[allow(unused_mut)]\n+#[allow(deprecated)] // rand\n mod test {\n     use prelude::v1::*;\n     use old_io::{SeekSet, SeekCur, SeekEnd, Read, Open, ReadWrite, FileType};"}, {"sha": "42317c7a2d4316be452817d5b0988bc00a667cad", "filename": "src/libstd/old_io/tempfile.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Fold_io%2Ftempfile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Fold_io%2Ftempfile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_io%2Ftempfile.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n //! Temporary files and directories\n+#![allow(deprecated)] // rand\n \n use env;\n use iter::{IteratorExt};"}, {"sha": "64f9e16aee4fd3392220bbaea6b13946d6d97644", "filename": "src/libstd/os.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -1422,6 +1422,8 @@ mod arch_consts {\n \n #[cfg(test)]\n mod tests {\n+    #![allow(deprecated)] // rand\n+\n     use prelude::v1::*;\n \n     use iter::repeat;"}, {"sha": "e52d5ada0ef092767896d0dbc53c6e79dd263196", "filename": "src/libstd/rand/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Frand%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Frand%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fmod.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -220,6 +220,9 @@\n //! ```\n \n #![unstable(feature = \"rand\")]\n+#![deprecated(reason = \"use the crates.io `rand` library instead\",\n+              since = \"1.0.0-alpha\")]\n+#![allow(deprecated)]\n \n use cell::RefCell;\n use clone::Clone;"}, {"sha": "6efbcf894156e887b97264c16be78d9eece25578", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -383,6 +383,8 @@ impl<'a, T> Drop for RwLockWriteGuard<'a, T> {\n \n #[cfg(test)]\n mod tests {\n+    #![allow(deprecated)] // rand\n+\n     use prelude::v1::*;\n \n     use rand::{self, Rng};"}, {"sha": "0b57e7e7c8e9e63a38a1855fe3fa8caaa040ab5c", "filename": "src/libsyntax/ext/deriving/rand.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -24,6 +24,10 @@ pub fn expand_deriving_rand<F>(cx: &mut ExtCtxt,\n                                push: F) where\n     F: FnOnce(P<Item>),\n {\n+    cx.span_warn(span,\n+                 \"`#[derive(Rand)]` is deprecated in favour of `#[derive_Rand]` from \\\n+                  `rand_macros` on crates.io\");\n+\n     let trait_def = TraitDef {\n         span: span,\n         attributes: Vec::new(),"}, {"sha": "4d3542c586b0aaa46c032161a2ceb33a7b35819d", "filename": "src/test/compile-fail/deriving-span-Rand-enum-struct-variant.rs", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d6c15d9b2daecdbe32eca894bda40c424798f5a0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6c15d9b2daecdbe32eca894bda40c424798f5a0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-enum-struct-variant.rs?ref=d6c15d9b2daecdbe32eca894bda40c424798f5a0", "patch": "@@ -1,25 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n-\n-extern crate rand;\n-\n-\n-struct Error;\n-\n-#[derive(Rand)]\n-enum Enum {\n-   A {\n-     x: Error //~ ERROR\n-   }\n-}\n-\n-fn main() {}"}, {"sha": "dcfdbdc8062ce6f4df1d45e2610fe02b39c4aa17", "filename": "src/test/compile-fail/deriving-span-Rand-enum.rs", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d6c15d9b2daecdbe32eca894bda40c424798f5a0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6c15d9b2daecdbe32eca894bda40c424798f5a0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-enum.rs?ref=d6c15d9b2daecdbe32eca894bda40c424798f5a0", "patch": "@@ -1,25 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n-\n-extern crate rand;\n-\n-\n-struct Error;\n-\n-#[derive(Rand)]\n-enum Enum {\n-   A(\n-     Error //~ ERROR\n-     )\n-}\n-\n-fn main() {}"}, {"sha": "73d89693b2bc458d2e84685a36d89a5eec6d91c0", "filename": "src/test/compile-fail/deriving-span-Rand-struct.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d6c15d9b2daecdbe32eca894bda40c424798f5a0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6c15d9b2daecdbe32eca894bda40c424798f5a0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-struct.rs?ref=d6c15d9b2daecdbe32eca894bda40c424798f5a0", "patch": "@@ -1,23 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n-\n-extern crate rand;\n-\n-\n-struct Error;\n-\n-#[derive(Rand)]\n-struct Struct {\n-    x: Error //~ ERROR\n-}\n-\n-fn main() {}"}, {"sha": "8038bf3ff092501ba959bf4815cb2d6f1a5487a4", "filename": "src/test/compile-fail/deriving-span-Rand-tuple-struct.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d6c15d9b2daecdbe32eca894bda40c424798f5a0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6c15d9b2daecdbe32eca894bda40c424798f5a0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-tuple-struct.rs?ref=d6c15d9b2daecdbe32eca894bda40c424798f5a0", "patch": "@@ -1,23 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n-\n-extern crate rand;\n-\n-\n-struct Error;\n-\n-#[derive(Rand)]\n-struct Struct(\n-    Error //~ ERROR\n-);\n-\n-fn main() {}"}, {"sha": "ada0cd2bc98f82cf035e817aa62697cebecdb9af", "filename": "src/test/compile-fail/lint-unused-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Ftest%2Fcompile-fail%2Flint-unused-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Ftest%2Fcompile-fail%2Flint-unused-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-unused-extern-crate.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -12,6 +12,7 @@\n \n #![deny(unused_extern_crates)]\n #![allow(unused_variables)]\n+#![allow(deprecated)]\n #![feature(libc)]\n #![feature(collections)]\n #![feature(rand)]"}, {"sha": "42a0f41dd97c3921ffdc50b02e8e461eac9fae46", "filename": "src/test/compile-fail/macros-nonfatal-errors.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Ftest%2Fcompile-fail%2Fmacros-nonfatal-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e1f77291803d26b2897c0953dce5cf7e70ab65/src%2Ftest%2Fcompile-fail%2Fmacros-nonfatal-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacros-nonfatal-errors.rs?ref=c3e1f77291803d26b2897c0953dce5cf7e70ab65", "patch": "@@ -15,7 +15,6 @@\n #![feature(trace_macros, concat_idents)]\n \n #[derive(Default, //~ ERROR\n-           Rand, //~ ERROR\n            Zero)] //~ ERROR\n enum CantDeriveThose {}\n "}]}