{"sha": "43e4bbdaaaad1c606a1ad2ea5dbf7e1dc975af74", "node_id": "C_kwDOAAsO6NoAKDQzZTRiYmRhYWFhZDFjNjA2YTFhZDJlYTVkYmY3ZTFkYzk3NWFmNzQ", "commit": {"author": {"name": "Maximilian K\u00f6hl", "email": "mail@koehlma.de", "date": "2022-03-19T22:51:33Z"}, "committer": {"name": "Maximilian K\u00f6hl", "email": "mail@koehlma.de", "date": "2022-03-19T22:51:33Z"}, "message": "rustdoc: add \ud83d\udd12 to indicate restricted visibility", "tree": {"sha": "a4238339eddb097979e14f9301fe8c48c1e6833e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4238339eddb097979e14f9301fe8c48c1e6833e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43e4bbdaaaad1c606a1ad2ea5dbf7e1dc975af74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43e4bbdaaaad1c606a1ad2ea5dbf7e1dc975af74", "html_url": "https://github.com/rust-lang/rust/commit/43e4bbdaaaad1c606a1ad2ea5dbf7e1dc975af74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43e4bbdaaaad1c606a1ad2ea5dbf7e1dc975af74/comments", "author": {"login": "koehlma", "id": 509209, "node_id": "MDQ6VXNlcjUwOTIwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/509209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koehlma", "html_url": "https://github.com/koehlma", "followers_url": "https://api.github.com/users/koehlma/followers", "following_url": "https://api.github.com/users/koehlma/following{/other_user}", "gists_url": "https://api.github.com/users/koehlma/gists{/gist_id}", "starred_url": "https://api.github.com/users/koehlma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koehlma/subscriptions", "organizations_url": "https://api.github.com/users/koehlma/orgs", "repos_url": "https://api.github.com/users/koehlma/repos", "events_url": "https://api.github.com/users/koehlma/events{/privacy}", "received_events_url": "https://api.github.com/users/koehlma/received_events", "type": "User", "site_admin": false}, "committer": {"login": "koehlma", "id": 509209, "node_id": "MDQ6VXNlcjUwOTIwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/509209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koehlma", "html_url": "https://github.com/koehlma", "followers_url": "https://api.github.com/users/koehlma/followers", "following_url": "https://api.github.com/users/koehlma/following{/other_user}", "gists_url": "https://api.github.com/users/koehlma/gists{/gist_id}", "starred_url": "https://api.github.com/users/koehlma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koehlma/subscriptions", "organizations_url": "https://api.github.com/users/koehlma/orgs", "repos_url": "https://api.github.com/users/koehlma/repos", "events_url": "https://api.github.com/users/koehlma/events{/privacy}", "received_events_url": "https://api.github.com/users/koehlma/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d60bf427a4b055f464122062e76b3ec34d4f8ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d60bf427a4b055f464122062e76b3ec34d4f8ba", "html_url": "https://github.com/rust-lang/rust/commit/8d60bf427a4b055f464122062e76b3ec34d4f8ba"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "dcf7d68ab87d41c692d8ed13fe261317611da7ad", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/43e4bbdaaaad1c606a1ad2ea5dbf7e1dc975af74/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43e4bbdaaaad1c606a1ad2ea5dbf7e1dc975af74/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=43e4bbdaaaad1c606a1ad2ea5dbf7e1dc975af74", "patch": "@@ -376,17 +376,24 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                 let stab = myitem.stability_class(cx.tcx());\n                 let add = if stab.is_some() { \" \" } else { \"\" };\n \n+                let visibility_emoji = match myitem.visibility {\n+                    clean::Visibility::Restricted(_) => \"<span title=\\\"Restricted Visibility\\\">\ud83d\udd12</span> \",\n+                    _ => \"\"\n+                };\n+\n                 let doc_value = myitem.doc_value().unwrap_or_default();\n                 w.write_str(ITEM_TABLE_ROW_OPEN);\n                 write!(\n                     w,\n                     \"<div class=\\\"item-left {stab}{add}module-item\\\">\\\n-                         <a class=\\\"{class}\\\" href=\\\"{href}\\\" title=\\\"{title}\\\">{name}</a>\\\n-                             {unsafety_flag}\\\n-                             {stab_tags}\\\n+                            {visibility_emoji}\\\n+                            <a class=\\\"{class}\\\" href=\\\"{href}\\\" title=\\\"{title}\\\">{name}</a>\\\n+                            {unsafety_flag}\\\n+                            {stab_tags}\\\n                      </div>\\\n                      <div class=\\\"item-right docblock-short\\\">{docs}</div>\",\n                     name = myitem.name.unwrap(),\n+                    visibility_emoji = visibility_emoji,\n                     stab_tags = extra_info_tags(myitem, item, cx.tcx()),\n                     docs = MarkdownSummaryLine(&doc_value, &myitem.links(cx)).into_string(),\n                     class = myitem.type_(),"}]}