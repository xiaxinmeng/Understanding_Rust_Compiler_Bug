{"sha": "b9569886a915f2411adaecbcad28eda8b163c3e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5NTY5ODg2YTkxNWYyNDExYWRhZWNiY2FkMjhlZGE4YjE2M2MzZTM=", "commit": {"author": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-05-24T20:28:02Z"}, "committer": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-06-27T14:10:26Z"}, "message": "Rename Expr::UnsafeBlock to Expr::Unsafe", "tree": {"sha": "291b5a8e121b261fc5c4a3ca3d71feee01befcc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/291b5a8e121b261fc5c4a3ca3d71feee01befcc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9569886a915f2411adaecbcad28eda8b163c3e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9569886a915f2411adaecbcad28eda8b163c3e3", "html_url": "https://github.com/rust-lang/rust/commit/b9569886a915f2411adaecbcad28eda8b163c3e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9569886a915f2411adaecbcad28eda8b163c3e3/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "278cbf12cd0f76fc191d5ce7f130e6245596a578", "url": "https://api.github.com/repos/rust-lang/rust/commits/278cbf12cd0f76fc191d5ce7f130e6245596a578", "html_url": "https://github.com/rust-lang/rust/commit/278cbf12cd0f76fc191d5ce7f130e6245596a578"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "6eb72e9504300749e56c9a4fa1326839741d71ba", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9569886a915f2411adaecbcad28eda8b163c3e3/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9569886a915f2411adaecbcad28eda8b163c3e3/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=b9569886a915f2411adaecbcad28eda8b163c3e3", "patch": "@@ -220,7 +220,7 @@ impl ExprCollector<'_> {\n                 }\n                 ast::Effect::Unsafe(_) => {\n                     let body = self.collect_block_opt(e.block_expr());\n-                    self.alloc_expr(Expr::UnsafeBlock { body }, syntax_ptr)\n+                    self.alloc_expr(Expr::Unsafe { body }, syntax_ptr)\n                 }\n                 // FIXME: we need to record these effects somewhere...\n                 ast::Effect::Async(_) | ast::Effect::Label(_) => {"}, {"sha": "e41cfc16b9e813ef74c080d0ea2be3db67ce9d41", "filename": "crates/ra_hir_def/src/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b9569886a915f2411adaecbcad28eda8b163c3e3/crates%2Fra_hir_def%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9569886a915f2411adaecbcad28eda8b163c3e3/crates%2Fra_hir_def%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fexpr.rs?ref=b9569886a915f2411adaecbcad28eda8b163c3e3", "patch": "@@ -150,7 +150,7 @@ pub enum Expr {\n     Tuple {\n         exprs: Vec<ExprId>,\n     },\n-    UnsafeBlock {\n+    Unsafe {\n         body: ExprId,\n     },\n     Array(Array),\n@@ -250,7 +250,7 @@ impl Expr {\n                     f(*expr);\n                 }\n             }\n-            Expr::TryBlock { body } | Expr::UnsafeBlock { body } => f(*body),\n+            Expr::TryBlock { body } | Expr::Unsafe { body } => f(*body),\n             Expr::Loop { body, .. } => f(*body),\n             Expr::While { condition, body, .. } => {\n                 f(*condition);"}, {"sha": "ce73251b882f1fadc34fcb48e44cf2da0be174e3", "filename": "crates/ra_hir_ty/src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9569886a915f2411adaecbcad28eda8b163c3e3/crates%2Fra_hir_ty%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9569886a915f2411adaecbcad28eda8b163c3e3/crates%2Fra_hir_ty%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fexpr.rs?ref=b9569886a915f2411adaecbcad28eda8b163c3e3", "patch": "@@ -340,7 +340,7 @@ pub fn unsafe_expressions(\n     let expr_scopes = db.expr_scopes(def);\n     for (id, expr) in body.exprs.iter() {\n         match expr {\n-            Expr::UnsafeBlock { body } => {\n+            Expr::Unsafe { body } => {\n                 if let Some(scope) = expr_scopes.scope_for(*body) {\n                     unsafe_block_scopes.push(scope);\n                 }"}, {"sha": "61af5f06456c062aa2853089d3c7b42eb26700ca", "filename": "crates/ra_hir_ty/src/infer/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9569886a915f2411adaecbcad28eda8b163c3e3/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9569886a915f2411adaecbcad28eda8b163c3e3/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=b9569886a915f2411adaecbcad28eda8b163c3e3", "patch": "@@ -142,7 +142,7 @@ impl<'a> InferenceContext<'a> {\n                 // FIXME: Breakable block inference\n                 self.infer_block(statements, *tail, expected)\n             }\n-            Expr::UnsafeBlock { body } => self.infer_expr(*body, expected),\n+            Expr::Unsafe { body } => self.infer_expr(*body, expected),\n             Expr::TryBlock { body } => {\n                 let _inner = self.infer_expr(*body, expected);\n                 // FIXME should be std::result::Result<{inner}, _>"}]}