{"sha": "216ce7c519c172dbc6f36676c43590c7a79094f0", "node_id": "C_kwDOAAsO6NoAKDIxNmNlN2M1MTljMTcyZGJjNmYzNjY3NmM0MzU5MGM3YTc5MDk0ZjA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-17T05:08:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-17T05:08:16Z"}, "message": "Rollup merge of #92921 - dtolnay:printernew, r=wesleywiser\n\nRename Printer constructor from mk_printer() to Printer::new()\n\nThe original naming is left over from 2011 which was before impl blocks and associated functions existed.\n\nhttps://github.com/rust-lang/rust/blob/21313d623a505086b2973f30c19db4f1d6ec8f61/src/comp/pretty/pp.rs", "tree": {"sha": "45c623ea4da7f0423c8f0faf12fb258de2939f75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45c623ea4da7f0423c8f0faf12fb258de2939f75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/216ce7c519c172dbc6f36676c43590c7a79094f0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh5PnACRBK7hj4Ov3rIwAApTcIADzaEaX6GmPZmSSklyjinv71\nXZxhnaIAHVzQRKVocRkzqevsHaf2Um5J7W7U75c6rEqfMXwVUgO+xpSB8PkBC+iA\n9r3/xMLtOtnTdfBEAmsu+/aU8Y2TZFosp2NF5lhdfth5LyrmHaCFtYuBpzea4tDR\nu3lnHotl4K3/1RjseOaVA6yEU73Z/rZ22hPsYLzcKpDZ6E5/q3cglCtYLn7It1GQ\nxouAXlG1Ta8nKnlN0T1adNzY6Fe6IAbe9z1JYg9ULBsNgdrsEu0eDgkDKvAkam/Z\nXbAh7jAo//Cif3uomsRErghJvj76FhlDDbu3ya99s/xp1Tg4yG3ILirpClDbvic=\n=uidi\n-----END PGP SIGNATURE-----\n", "payload": "tree 45c623ea4da7f0423c8f0faf12fb258de2939f75\nparent c6ff4be01153c023666e9069833dc3570c994bf8\nparent 953da9832da3ceeb6927d177e86868039f95e08a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642396096 +0100\ncommitter GitHub <noreply@github.com> 1642396096 +0100\n\nRollup merge of #92921 - dtolnay:printernew, r=wesleywiser\n\nRename Printer constructor from mk_printer() to Printer::new()\n\nThe original naming is left over from 2011 which was before impl blocks and associated functions existed.\n\nhttps://github.com/rust-lang/rust/blob/21313d623a505086b2973f30c19db4f1d6ec8f61/src/comp/pretty/pp.rs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/216ce7c519c172dbc6f36676c43590c7a79094f0", "html_url": "https://github.com/rust-lang/rust/commit/216ce7c519c172dbc6f36676c43590c7a79094f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/216ce7c519c172dbc6f36676c43590c7a79094f0/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6ff4be01153c023666e9069833dc3570c994bf8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6ff4be01153c023666e9069833dc3570c994bf8", "html_url": "https://github.com/rust-lang/rust/commit/c6ff4be01153c023666e9069833dc3570c994bf8"}, {"sha": "953da9832da3ceeb6927d177e86868039f95e08a", "url": "https://api.github.com/repos/rust-lang/rust/commits/953da9832da3ceeb6927d177e86868039f95e08a", "html_url": "https://github.com/rust-lang/rust/commit/953da9832da3ceeb6927d177e86868039f95e08a"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "20954a322a57811db0667599c09f3a3f644ddaec", "filename": "compiler/rustc_ast_pretty/src/pp.rs", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/216ce7c519c172dbc6f36676c43590c7a79094f0/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/216ce7c519c172dbc6f36676c43590c7a79094f0/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs?ref=216ce7c519c172dbc6f36676c43590c7a79094f0", "patch": "@@ -222,29 +222,6 @@ struct PrintStackElem {\n \n const SIZE_INFINITY: isize = 0xffff;\n \n-pub fn mk_printer() -> Printer {\n-    let linewidth = 78;\n-    // Yes 55, it makes the ring buffers big enough to never fall behind.\n-    let n: usize = 55 * linewidth;\n-    debug!(\"mk_printer {}\", linewidth);\n-    Printer {\n-        out: String::new(),\n-        buf_max_len: n,\n-        margin: linewidth as isize,\n-        space: linewidth as isize,\n-        left: 0,\n-        right: 0,\n-        // Initialize a single entry; advance_right() will extend it on demand\n-        // up to `buf_max_len` elements.\n-        buf: vec![BufEntry::default()],\n-        left_total: 0,\n-        right_total: 0,\n-        scan_stack: VecDeque::new(),\n-        print_stack: Vec::new(),\n-        pending_indentation: 0,\n-    }\n-}\n-\n pub struct Printer {\n     out: String,\n     buf_max_len: usize,\n@@ -288,6 +265,29 @@ impl Default for BufEntry {\n }\n \n impl Printer {\n+    pub fn new() -> Self {\n+        let linewidth = 78;\n+        // Yes 55, it makes the ring buffers big enough to never fall behind.\n+        let n: usize = 55 * linewidth;\n+        debug!(\"Printer::new {}\", linewidth);\n+        Printer {\n+            out: String::new(),\n+            buf_max_len: n,\n+            margin: linewidth as isize,\n+            space: linewidth as isize,\n+            left: 0,\n+            right: 0,\n+            // Initialize a single entry; advance_right() will extend it on demand\n+            // up to `buf_max_len` elements.\n+            buf: vec![BufEntry::default()],\n+            left_total: 0,\n+            right_total: 0,\n+            scan_stack: VecDeque::new(),\n+            print_stack: Vec::new(),\n+            pending_indentation: 0,\n+        }\n+    }\n+\n     pub fn last_token(&self) -> Token {\n         self.buf[self.right].token.clone()\n     }"}, {"sha": "015cd431deb6b1b4c3819a6ec35fcccf9ee90d10", "filename": "compiler/rustc_ast_pretty/src/pprust/state.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/216ce7c519c172dbc6f36676c43590c7a79094f0/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/216ce7c519c172dbc6f36676c43590c7a79094f0/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs?ref=216ce7c519c172dbc6f36676c43590c7a79094f0", "patch": "@@ -103,7 +103,7 @@ pub fn print_crate<'a>(\n     edition: Edition,\n ) -> String {\n     let mut s =\n-        State { s: pp::mk_printer(), comments: Some(Comments::new(sm, filename, input)), ann };\n+        State { s: pp::Printer::new(), comments: Some(Comments::new(sm, filename, input)), ann };\n \n     if is_expanded && !krate.attrs.iter().any(|attr| attr.has_name(sym::no_core)) {\n         // We need to print `#![no_std]` (and its feature gate) so that\n@@ -910,7 +910,7 @@ impl<'a> PrintState<'a> for State<'a> {\n \n impl<'a> State<'a> {\n     pub fn new() -> State<'a> {\n-        State { s: pp::mk_printer(), comments: None, ann: &NoAnn }\n+        State { s: pp::Printer::new(), comments: None, ann: &NoAnn }\n     }\n \n     crate fn commasep_cmnt<T, F, G>(&mut self, b: Breaks, elts: &[T], mut op: F, mut get_span: G)"}, {"sha": "dabab073551c3a2e23f21b4ea0590a784185bee2", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/216ce7c519c172dbc6f36676c43590c7a79094f0/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/216ce7c519c172dbc6f36676c43590c7a79094f0/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=216ce7c519c172dbc6f36676c43590c7a79094f0", "patch": "@@ -170,7 +170,7 @@ impl<'a> State<'a> {\n         ann: &'a dyn PpAnn,\n     ) -> State<'a> {\n         State {\n-            s: pp::mk_printer(),\n+            s: pp::Printer::new(),\n             comments: Some(Comments::new(sm, filename, input)),\n             attrs,\n             ann,\n@@ -186,7 +186,7 @@ pub fn to_string<F>(ann: &dyn PpAnn, f: F) -> String\n where\n     F: FnOnce(&mut State<'_>),\n {\n-    let mut printer = State { s: pp::mk_printer(), comments: None, attrs: &|_| &[], ann };\n+    let mut printer = State { s: pp::Printer::new(), comments: None, attrs: &|_| &[], ann };\n     f(&mut printer);\n     printer.s.eof()\n }"}]}