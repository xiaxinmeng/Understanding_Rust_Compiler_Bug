{"sha": "0cc123cbb3450649141f8551b9c34f405b25e67f", "node_id": "C_kwDOAAsO6NoAKDBjYzEyM2NiYjM0NTA2NDkxNDFmODU1MWI5YzM0ZjQwNWIyNWU2N2Y", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-10-08T20:30:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-08T20:30:39Z"}, "message": "Rollup merge of #89538 - notriddle:notriddle/arrow-highlight, r=GuillaumeGomez\n\nMake rustdoc not highlight `->` and `=>` as operators\n\nIt was marking them up as `<span class=\"op\">=</span><span class=\"op\">&gt;</span>`,\nwhich is bloaty and wrong (at least, I think `<=` and `=>` should probably be different colors, since they're so different and yet made from the same symbols).\n\nBefore:\n\n![image](https://user-images.githubusercontent.com/1593513/135939748-f49b0f9e-6a7d-4d65-935a-e31cdf688a81.png)\n\nAfter:\n\n![image](https://user-images.githubusercontent.com/1593513/135940063-5ef1f6b1-7e03-4227-b46b-572b063aba05.png)", "tree": {"sha": "7d7fc49e4add6de956c6589f6a1b212fb823366f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d7fc49e4add6de956c6589f6a1b212fb823366f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cc123cbb3450649141f8551b9c34f405b25e67f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhYKpvCRBK7hj4Ov3rIwAAvswIADuMuHfOXoJbSpev5gbK+KfQ\nylumBCIlXMmRGnSmExqS6bzGB0cWaC6Sgvyu9ug12zxyit2CA141s6rTKMDPQCON\n2iA5sg0jwCPcOepqLaGhHQLO/12B0AsfJivSKK2V9XcWxdom7aAc8VjGX2Lgix6C\ngqhVeRC+pqr/+X89xim3yZ4xTYYFvHyEF7j42rqRSXET1l0MQHW6ER9NTHxK8x6S\nvjQEjDAxhi12KgIQhnaUfw6eL1/oit+tPiao834wgB+7zEW5w6fzHgTQ+lSg8vpV\nBz4sDeryUbsl20H04Jce4E7EW1sT+ImJocQZWwdd8DrdItZFVZFKMatjh1Qyt+U=\n=oWUf\n-----END PGP SIGNATURE-----\n", "payload": "tree 7d7fc49e4add6de956c6589f6a1b212fb823366f\nparent 32502404e5ed78b927cc9807eac0cf6cd3623450\nparent 8eb3a95afa5ef5a0a10a92e3811237e27003e7b8\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1633725039 +0200\ncommitter GitHub <noreply@github.com> 1633725039 +0200\n\nRollup merge of #89538 - notriddle:notriddle/arrow-highlight, r=GuillaumeGomez\n\nMake rustdoc not highlight `->` and `=>` as operators\n\nIt was marking them up as `<span class=\"op\">=</span><span class=\"op\">&gt;</span>`,\nwhich is bloaty and wrong (at least, I think `<=` and `=>` should probably be different colors, since they're so different and yet made from the same symbols).\n\nBefore:\n\n![image](https://user-images.githubusercontent.com/1593513/135939748-f49b0f9e-6a7d-4d65-935a-e31cdf688a81.png)\n\nAfter:\n\n![image](https://user-images.githubusercontent.com/1593513/135940063-5ef1f6b1-7e03-4227-b46b-572b063aba05.png)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cc123cbb3450649141f8551b9c34f405b25e67f", "html_url": "https://github.com/rust-lang/rust/commit/0cc123cbb3450649141f8551b9c34f405b25e67f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cc123cbb3450649141f8551b9c34f405b25e67f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32502404e5ed78b927cc9807eac0cf6cd3623450", "url": "https://api.github.com/repos/rust-lang/rust/commits/32502404e5ed78b927cc9807eac0cf6cd3623450", "html_url": "https://github.com/rust-lang/rust/commit/32502404e5ed78b927cc9807eac0cf6cd3623450"}, {"sha": "8eb3a95afa5ef5a0a10a92e3811237e27003e7b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8eb3a95afa5ef5a0a10a92e3811237e27003e7b8", "html_url": "https://github.com/rust-lang/rust/commit/8eb3a95afa5ef5a0a10a92e3811237e27003e7b8"}], "stats": {"total": 49, "additions": 31, "deletions": 18}, "files": [{"sha": "8ed69962875a62b6c05b0ee7ad3e3a6e4fd95b9a", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0cc123cbb3450649141f8551b9c34f405b25e67f/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cc123cbb3450649141f8551b9c34f405b25e67f/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=0cc123cbb3450649141f8551b9c34f405b25e67f", "patch": "@@ -435,15 +435,34 @@ impl<'a> Classifier<'a> {\n                 _ => Class::RefKeyWord,\n             },\n \n-            // Operators.\n+            // These can either be operators, or arrows.\n+            TokenKind::Eq => match lookahead {\n+                Some(TokenKind::Eq) => {\n+                    self.next();\n+                    sink(Highlight::Token { text: \"==\", class: Some(Class::Op) });\n+                    return;\n+                }\n+                Some(TokenKind::Gt) => {\n+                    self.next();\n+                    sink(Highlight::Token { text: \"=>\", class: None });\n+                    return;\n+                }\n+                _ => Class::Op,\n+            },\n+            TokenKind::Minus if lookahead == Some(TokenKind::Gt) => {\n+                self.next();\n+                sink(Highlight::Token { text: \"->\", class: None });\n+                return;\n+            }\n+\n+            // Other operators.\n             TokenKind::Minus\n             | TokenKind::Plus\n             | TokenKind::Or\n             | TokenKind::Slash\n             | TokenKind::Caret\n             | TokenKind::Percent\n             | TokenKind::Bang\n-            | TokenKind::Eq\n             | TokenKind::Lt\n             | TokenKind::Gt => Class::Op,\n "}, {"sha": "22e650af7e22b1a977928c540adadda782a27c92", "filename": "src/librustdoc/html/highlight/fixtures/sample.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cc123cbb3450649141f8551b9c34f405b25e67f/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.html", "raw_url": "https://github.com/rust-lang/rust/raw/0cc123cbb3450649141f8551b9c34f405b25e67f/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.html?ref=0cc123cbb3450649141f8551b9c34f405b25e67f", "patch": "@@ -13,7 +13,7 @@\n <span class=\"kw\">use</span> <span class=\"ident\">std::path</span>::{<span class=\"ident\">Path</span>, <span class=\"ident\">PathBuf</span>};\n \n <span class=\"attribute\">#[<span class=\"ident\">cfg</span>(<span class=\"ident\">target_os</span> <span class=\"op\">=</span> <span class=\"string\">&quot;linux&quot;</span>)]</span>\n-<span class=\"kw\">fn</span> <span class=\"ident\">main</span>() {\n+<span class=\"kw\">fn</span> <span class=\"ident\">main</span>() -&gt; () {\n     <span class=\"kw\">let</span> <span class=\"ident\">foo</span> <span class=\"op\">=</span> <span class=\"bool-val\">true</span> <span class=\"op\">&amp;&amp;</span> <span class=\"bool-val\">false</span> <span class=\"op\">|</span><span class=\"op\">|</span> <span class=\"bool-val\">true</span>;\n     <span class=\"kw\">let</span> <span class=\"kw\">_</span>: <span class=\"kw-2\">*</span><span class=\"kw\">const</span> () <span class=\"op\">=</span> <span class=\"number\">0</span>;\n     <span class=\"kw\">let</span> <span class=\"kw\">_</span> <span class=\"op\">=</span> <span class=\"kw-2\">&amp;</span><span class=\"ident\">foo</span>;\n@@ -27,11 +27,11 @@\n     <span class=\"kw\">let</span> <span class=\"kw-2\">mut</span> <span class=\"ident\">s</span> <span class=\"op\">=</span> <span class=\"ident\">String::new</span>();\n \n     <span class=\"kw\">match</span> <span class=\"kw-2\">&amp;</span><span class=\"ident\">s</span> {\n-        <span class=\"kw-2\">ref</span> <span class=\"kw-2\">mut</span> <span class=\"ident\">x</span> <span class=\"op\">=</span><span class=\"op\">&gt;</span> {}\n+        <span class=\"kw-2\">ref</span> <span class=\"kw-2\">mut</span> <span class=\"ident\">x</span> =&gt; {}\n     }\n }\n \n <span class=\"macro\">macro_rules!</span> <span class=\"ident\">bar</span> {\n-    (<span class=\"macro-nonterminal\">$</span><span class=\"macro-nonterminal\">foo</span>:<span class=\"ident\">tt</span>) <span class=\"op\">=</span><span class=\"op\">&gt;</span> {};\n+    (<span class=\"macro-nonterminal\">$</span><span class=\"macro-nonterminal\">foo</span>:<span class=\"ident\">tt</span>) =&gt; {};\n }\n </code></pre>"}, {"sha": "fbfdc6767337ccbff158e57265a3409ca53dc847", "filename": "src/librustdoc/html/highlight/fixtures/sample.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cc123cbb3450649141f8551b9c34f405b25e67f/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cc123cbb3450649141f8551b9c34f405b25e67f/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.rs?ref=0cc123cbb3450649141f8551b9c34f405b25e67f", "patch": "@@ -3,7 +3,7 @@\n use std::path::{Path, PathBuf};\n \n #[cfg(target_os = \"linux\")]\n-fn main() {\n+fn main() -> () {\n     let foo = true && false || true;\n     let _: *const () = 0;\n     let _ = &foo;"}, {"sha": "efc3b21e6da99952af08845e512d4d689c828595", "filename": "src/test/rustdoc/macro_rules-matchers.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0cc123cbb3450649141f8551b9c34f405b25e67f/src%2Ftest%2Frustdoc%2Fmacro_rules-matchers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cc123cbb3450649141f8551b9c34f405b25e67f/src%2Ftest%2Frustdoc%2Fmacro_rules-matchers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmacro_rules-matchers.rs?ref=0cc123cbb3450649141f8551b9c34f405b25e67f", "patch": "@@ -6,37 +6,31 @@\n // @has 'foo/macro.todo.html'\n // @has - '//span[@class=\"macro\"]' 'macro_rules!'\n // @has - '//span[@class=\"ident\"]' 'todo'\n-// Note: count = 2 * ('=' + '>') + '+' = 2 * (1 + 1) + 1 = 5\n-// @count - '//pre[@class=\"rust macro\"]//span[@class=\"op\"]' 5\n+// Note: the only op is the `+`\n+// @count - '//pre[@class=\"rust macro\"]//span[@class=\"op\"]' 1\n \n-// @has - '{ ()'\n-// @has - '//span[@class=\"op\"]' '='\n-// @has - '//span[@class=\"op\"]' '>'\n-// @has - '{ ... };'\n-\n-// @has - '($('\n+// @has - '{ () =&gt; { ... }; ($('\n // @has - '//span[@class=\"macro-nonterminal\"]' '$'\n // @has - '//span[@class=\"macro-nonterminal\"]' 'arg'\n // @has - ':'\n // @has - '//span[@class=\"ident\"]' 'tt'\n // @has - '),'\n // @has - '//span[@class=\"op\"]' '+'\n-// @has - ')'\n+// @has - ') =&gt; { ... }; }'\n pub use std::todo;\n \n mod mod1 {\n     // @has 'foo/macro.macro1.html'\n     // @has - 'macro_rules!'\n     // @has - 'macro1'\n-    // @has - '{ ()'\n-    // @has - '($('\n+    // @has - '{ () =&gt; { ... }; ($('\n     // @has - '//span[@class=\"macro-nonterminal\"]' '$'\n     // @has - '//span[@class=\"macro-nonterminal\"]' 'arg'\n     // @has - ':'\n     // @has - 'expr'\n     // @has - '),'\n     // @has - '+'\n-    // @has - ')'\n+    // @has - ') =&gt; { ... }; }'\n     #[macro_export]\n     macro_rules! macro1 {\n         () => {};"}]}