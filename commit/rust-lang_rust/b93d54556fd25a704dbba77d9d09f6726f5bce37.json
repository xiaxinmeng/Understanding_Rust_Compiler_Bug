{"sha": "b93d54556fd25a704dbba77d9d09f6726f5bce37", "node_id": "C_kwDOAAsO6NoAKGI5M2Q1NDU1NmZkMjVhNzA0ZGJiYTc3ZDlkMDlmNjcyNmY1YmNlMzc", "commit": {"author": {"name": "Obei Sideg", "email": "obei.sideg@gmail.com", "date": "2023-02-16T19:18:36Z"}, "committer": {"name": "Obei Sideg", "email": "obei.sideg@gmail.com", "date": "2023-02-23T10:57:13Z"}, "message": "Add ui test for `map_unit_fn` lint in closure case", "tree": {"sha": "5bbd036dd292e48202c8f258d0487a0bd0c81f5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bbd036dd292e48202c8f258d0487a0bd0c81f5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b93d54556fd25a704dbba77d9d09f6726f5bce37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b93d54556fd25a704dbba77d9d09f6726f5bce37", "html_url": "https://github.com/rust-lang/rust/commit/b93d54556fd25a704dbba77d9d09f6726f5bce37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b93d54556fd25a704dbba77d9d09f6726f5bce37/comments", "author": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a87443a85999eadc867d261667363137adcb2420", "url": "https://api.github.com/repos/rust-lang/rust/commits/a87443a85999eadc867d261667363137adcb2420", "html_url": "https://github.com/rust-lang/rust/commit/a87443a85999eadc867d261667363137adcb2420"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "dc1ecbf8424d4cf9abb73e1c68dd42ff2e4c0068", "filename": "tests/ui/lint/lint_map_unit_fn.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b93d54556fd25a704dbba77d9d09f6726f5bce37/tests%2Fui%2Flint%2Flint_map_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b93d54556fd25a704dbba77d9d09f6726f5bce37/tests%2Fui%2Flint%2Flint_map_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Flint_map_unit_fn.rs?ref=b93d54556fd25a704dbba77d9d09f6726f5bce37", "patch": "@@ -8,4 +8,13 @@ fn main() {\n     let mut x: Vec<Vec<u8>> = vec![vec![0, 2, 1], vec![5, 4, 3]];\n     x.iter_mut().map(foo);\n     //~^ ERROR `Iterator::map` call that discard the iterator's values\n+    x.iter_mut().map(|items| {\n+    //~^ ERROR `Iterator::map` call that discard the iterator's values\n+        items.sort();\n+    });\n+    let f = |items: &mut Vec<u8>| {\n+        items.sort();\n+    };\n+    x.iter_mut().map(f);\n+    //~^ ERROR `Iterator::map` call that discard the iterator's values\n }"}, {"sha": "fbf689c54219ebe29782ea688bbe7f3b3163c759", "filename": "tests/ui/lint/lint_map_unit_fn.stderr", "status": "modified", "additions": 42, "deletions": 1, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/b93d54556fd25a704dbba77d9d09f6726f5bce37/tests%2Fui%2Flint%2Flint_map_unit_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b93d54556fd25a704dbba77d9d09f6726f5bce37/tests%2Fui%2Flint%2Flint_map_unit_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Flint_map_unit_fn.stderr?ref=b93d54556fd25a704dbba77d9d09f6726f5bce37", "patch": "@@ -21,5 +21,46 @@ help: you might have meant to use `Iterator::for_each`\n LL |     x.iter_mut().for_each(foo);\n    |                  ~~~~~~~~\n \n-error: aborting due to previous error\n+error: `Iterator::map` call that discard the iterator's values\n+  --> $DIR/lint_map_unit_fn.rs:11:18\n+   |\n+LL |         x.iter_mut().map(|items| {\n+   |                      ^   -------\n+   |                      |   |\n+   |  ____________________|___this function returns `()`, which is likely not what you wanted\n+   | |  __________________|\n+   | | |\n+LL | | |\n+LL | | |         items.sort();\n+LL | | |     });\n+   | | |     -^ after this call to map, the resulting iterator is `impl Iterator<Item = ()>`, which means the only information carried by the iterator is the number of items\n+   | | |_____||\n+   | |_______|\n+   |         called `Iterator::map` with callable that returns `()`\n+   |\n+   = note: `Iterator::map`, like many of the methods on `Iterator`, gets executed lazily, meaning that its effects won't be visible until it is iterated\n+help: you might have meant to use `Iterator::for_each`\n+   |\n+LL |     x.iter_mut().for_each(|items| {\n+   |                  ~~~~~~~~\n+\n+error: `Iterator::map` call that discard the iterator's values\n+  --> $DIR/lint_map_unit_fn.rs:18:18\n+   |\n+LL |     let f = |items: &mut Vec<u8>| {\n+   |             --------------------- this function returns `()`, which is likely not what you wanted\n+...\n+LL |     x.iter_mut().map(f);\n+   |                  ^^^^-^\n+   |                  |   |\n+   |                  |   called `Iterator::map` with callable that returns `()`\n+   |                  after this call to map, the resulting iterator is `impl Iterator<Item = ()>`, which means the only information carried by the iterator is the number of items\n+   |\n+   = note: `Iterator::map`, like many of the methods on `Iterator`, gets executed lazily, meaning that its effects won't be visible until it is iterated\n+help: you might have meant to use `Iterator::for_each`\n+   |\n+LL |     x.iter_mut().for_each(f);\n+   |                  ~~~~~~~~\n+\n+error: aborting due to 3 previous errors\n "}]}