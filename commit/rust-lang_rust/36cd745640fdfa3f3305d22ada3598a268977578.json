{"sha": "36cd745640fdfa3f3305d22ada3598a268977578", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2Y2Q3NDU2NDBmZGZhM2YzMzA1ZDIyYWRhMzU5OGEyNjg5Nzc1Nzg=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-09-12T12:25:58Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-09-12T12:25:58Z"}, "message": "Regressions (#2041)", "tree": {"sha": "9d3cc77b5bd69638f7c0dd4e26bc8c098ff072da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d3cc77b5bd69638f7c0dd4e26bc8c098ff072da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36cd745640fdfa3f3305d22ada3598a268977578", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36cd745640fdfa3f3305d22ada3598a268977578", "html_url": "https://github.com/rust-lang/rust/commit/36cd745640fdfa3f3305d22ada3598a268977578", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36cd745640fdfa3f3305d22ada3598a268977578/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b583d63d88f629911953f1670c4049f3b756231", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b583d63d88f629911953f1670c4049f3b756231", "html_url": "https://github.com/rust-lang/rust/commit/6b583d63d88f629911953f1670c4049f3b756231"}], "stats": {"total": 171, "additions": 129, "deletions": 42}, "files": [{"sha": "5f5bdc02a59209f7d4353c63ee8adf8a5f35bc5a", "filename": "tests/ui/format.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/36cd745640fdfa3f3305d22ada3598a268977578/tests%2Fui%2Fformat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/36cd745640fdfa3f3305d22ada3598a268977578/tests%2Fui%2Fformat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.stderr?ref=36cd745640fdfa3f3305d22ada3598a268977578", "patch": "@@ -6,17 +6,5 @@ error: useless use of `format!`\n   |\n   = note: `-D useless-format` implied by `-D warnings`\n \n-error: useless use of `format!`\n- --> $DIR/format.rs:8:5\n-  |\n-8 |     format!(\"{}\", \"foo\");\n-  |     ^^^^^^^^^^^^^^^^^^^^^\n-\n-error: useless use of `format!`\n-  --> $DIR/format.rs:15:5\n-   |\n-15 |     format!(\"{}\", arg);\n-   |     ^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to previous error\n "}, {"sha": "2f55428cca7cfa39e76e2e8eb06237b9e36a1a2c", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 128, "deletions": 1, "changes": 129, "blob_url": "https://github.com/rust-lang/rust/blob/36cd745640fdfa3f3305d22ada3598a268977578/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/36cd745640fdfa3f3305d22ada3598a268977578/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=36cd745640fdfa3f3305d22ada3598a268977578", "patch": "@@ -249,6 +249,25 @@ error: Err(_) will match all errors, maybe not a good idea\n     = note: `-D match-wild-err-arm` implied by `-D warnings`\n     = note: to remove this warning, match each error seperately or use unreachable macro\n \n+error: this `match` has identical arm bodies\n+   --> $DIR/matches.rs:239:18\n+    |\n+239 |         Ok(_) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+    |\n+    = note: `-D match-same-arms` implied by `-D warnings`\n+note: same as this\n+   --> $DIR/matches.rs:238:18\n+    |\n+238 |         Ok(3) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+note: consider refactoring into `Ok(3) | Ok(_)`\n+   --> $DIR/matches.rs:238:18\n+    |\n+238 |         Ok(3) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+    = note: this error originates in a macro outside of the current crate\n+\n error: Err(_) will match all errors, maybe not a good idea\n    --> $DIR/matches.rs:246:9\n     |\n@@ -257,6 +276,24 @@ error: Err(_) will match all errors, maybe not a good idea\n     |\n     = note: to remove this warning, match each error seperately or use unreachable macro\n \n+error: this `match` has identical arm bodies\n+   --> $DIR/matches.rs:245:18\n+    |\n+245 |         Ok(_) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+    |\n+note: same as this\n+   --> $DIR/matches.rs:244:18\n+    |\n+244 |         Ok(3) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+note: consider refactoring into `Ok(3) | Ok(_)`\n+   --> $DIR/matches.rs:244:18\n+    |\n+244 |         Ok(3) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+    = note: this error originates in a macro outside of the current crate\n+\n error: Err(_) will match all errors, maybe not a good idea\n    --> $DIR/matches.rs:252:9\n     |\n@@ -265,5 +302,95 @@ error: Err(_) will match all errors, maybe not a good idea\n     |\n     = note: to remove this warning, match each error seperately or use unreachable macro\n \n-error: aborting due to 26 previous errors\n+error: this `match` has identical arm bodies\n+   --> $DIR/matches.rs:251:18\n+    |\n+251 |         Ok(_) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+    |\n+note: same as this\n+   --> $DIR/matches.rs:250:18\n+    |\n+250 |         Ok(3) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+note: consider refactoring into `Ok(3) | Ok(_)`\n+   --> $DIR/matches.rs:250:18\n+    |\n+250 |         Ok(3) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+    = note: this error originates in a macro outside of the current crate\n+\n+error: this `match` has identical arm bodies\n+   --> $DIR/matches.rs:258:18\n+    |\n+258 |         Ok(_) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+    |\n+note: same as this\n+   --> $DIR/matches.rs:257:18\n+    |\n+257 |         Ok(3) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+note: consider refactoring into `Ok(3) | Ok(_)`\n+   --> $DIR/matches.rs:257:18\n+    |\n+257 |         Ok(3) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+    = note: this error originates in a macro outside of the current crate\n+\n+error: this `match` has identical arm bodies\n+   --> $DIR/matches.rs:265:18\n+    |\n+265 |         Ok(_) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+    |\n+note: same as this\n+   --> $DIR/matches.rs:264:18\n+    |\n+264 |         Ok(3) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+note: consider refactoring into `Ok(3) | Ok(_)`\n+   --> $DIR/matches.rs:264:18\n+    |\n+264 |         Ok(3) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+    = note: this error originates in a macro outside of the current crate\n+\n+error: this `match` has identical arm bodies\n+   --> $DIR/matches.rs:271:18\n+    |\n+271 |         Ok(_) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+    |\n+note: same as this\n+   --> $DIR/matches.rs:270:18\n+    |\n+270 |         Ok(3) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+note: consider refactoring into `Ok(3) | Ok(_)`\n+   --> $DIR/matches.rs:270:18\n+    |\n+270 |         Ok(3) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+    = note: this error originates in a macro outside of the current crate\n+\n+error: this `match` has identical arm bodies\n+   --> $DIR/matches.rs:277:18\n+    |\n+277 |         Ok(_) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+    |\n+note: same as this\n+   --> $DIR/matches.rs:276:18\n+    |\n+276 |         Ok(3) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+note: consider refactoring into `Ok(3) | Ok(_)`\n+   --> $DIR/matches.rs:276:18\n+    |\n+276 |         Ok(3) => println!(\"ok\"),\n+    |                  ^^^^^^^^^^^^^^\n+    = note: this error originates in a macro outside of the current crate\n+\n+error: aborting due to 33 previous errors\n "}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/print_with_newline.stderr", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/36cd745640fdfa3f3305d22ada3598a268977578/tests%2Fui%2Fprint_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/36cd745640fdfa3f3305d22ada3598a268977578/tests%2Fui%2Fprint_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_with_newline.stderr?ref=36cd745640fdfa3f3305d22ada3598a268977578", "patch": "@@ -1,28 +0,0 @@\n-error: using `print!()` with a format string that ends in a newline, consider using `println!()` instead\n- --> $DIR/print_with_newline.rs:6:5\n-  |\n-6 |     print!(\"Hello/n\");\n-  |     ^^^^^^^^^^^^^^^^^^\n-  |\n-  = note: `-D print-with-newline` implied by `-D warnings`\n-\n-error: using `print!()` with a format string that ends in a newline, consider using `println!()` instead\n- --> $DIR/print_with_newline.rs:7:5\n-  |\n-7 |     print!(\"Hello {}/n\", \"world\");\n-  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: using `print!()` with a format string that ends in a newline, consider using `println!()` instead\n- --> $DIR/print_with_newline.rs:8:5\n-  |\n-8 |     print!(\"Hello {} {}/n/n\", \"world\", \"#2\");\n-  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: using `print!()` with a format string that ends in a newline, consider using `println!()` instead\n- --> $DIR/print_with_newline.rs:9:5\n-  |\n-9 |     print!(\"{}/n\", 1265);\n-  |     ^^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 4 previous errors\n-"}]}