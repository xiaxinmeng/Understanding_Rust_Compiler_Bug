{"sha": "eceebc344887269a821d1df0c8693d9eb4d5da7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjZWViYzM0NDg4NzI2OWE4MjFkMWRmMGM4NjkzZDllYjRkNWRhN2Q=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-25T16:40:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-25T16:40:14Z"}, "message": "Auto merge of #6183 - cgm616:hex_bin_digit_grouping, r=flip1995\n\nHex bin digit grouping\n\nThis revives and updates an old pr (#3391) for the current API.\n\nCloses #2538.\n\n---\n\n*Please keep the line below*\nchangelog: Add [`unusual_byte_groupings`] lint.", "tree": {"sha": "13c6463fd7ed5b7b399ebf0a7f5b66fb552f2907", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13c6463fd7ed5b7b399ebf0a7f5b66fb552f2907"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eceebc344887269a821d1df0c8693d9eb4d5da7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eceebc344887269a821d1df0c8693d9eb4d5da7d", "html_url": "https://github.com/rust-lang/rust/commit/eceebc344887269a821d1df0c8693d9eb4d5da7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eceebc344887269a821d1df0c8693d9eb4d5da7d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4242ef8ecd540728f8bcb259af755fe0f9453f58", "url": "https://api.github.com/repos/rust-lang/rust/commits/4242ef8ecd540728f8bcb259af755fe0f9453f58", "html_url": "https://github.com/rust-lang/rust/commit/4242ef8ecd540728f8bcb259af755fe0f9453f58"}, {"sha": "312bbff6968dbebd367ca90677c676e2cf5198d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/312bbff6968dbebd367ca90677c676e2cf5198d2", "html_url": "https://github.com/rust-lang/rust/commit/312bbff6968dbebd367ca90677c676e2cf5198d2"}], "stats": {"total": 114, "additions": 97, "deletions": 17}, "files": [{"sha": "25f3b5da198afbd8971819c2a2e1837c1c8b7edf", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eceebc344887269a821d1df0c8693d9eb4d5da7d/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/eceebc344887269a821d1df0c8693d9eb4d5da7d/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=eceebc344887269a821d1df0c8693d9eb4d5da7d", "patch": "@@ -2017,6 +2017,7 @@ Released 2018-09-13\n [`unused_label`]: https://rust-lang.github.io/rust-clippy/master/index.html#unused_label\n [`unused_self`]: https://rust-lang.github.io/rust-clippy/master/index.html#unused_self\n [`unused_unit`]: https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit\n+[`unusual_byte_groupings`]: https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n [`unwrap_in_result`]: https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_in_result\n [`unwrap_used`]: https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used\n [`use_debug`]: https://rust-lang.github.io/rust-clippy/master/index.html#use_debug"}, {"sha": "3be8bc0e36d6b6af792982e22359b1e9478ff59f", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eceebc344887269a821d1df0c8693d9eb4d5da7d/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eceebc344887269a821d1df0c8693d9eb4d5da7d/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=eceebc344887269a821d1df0c8693d9eb4d5da7d", "patch": "@@ -623,6 +623,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &literal_representation::LARGE_DIGIT_GROUPS,\n         &literal_representation::MISTYPED_LITERAL_SUFFIXES,\n         &literal_representation::UNREADABLE_LITERAL,\n+        &literal_representation::UNUSUAL_BYTE_GROUPINGS,\n         &loops::EMPTY_LOOP,\n         &loops::EXPLICIT_COUNTER_LOOP,\n         &loops::EXPLICIT_INTO_ITER_LOOP,\n@@ -1365,6 +1366,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&lifetimes::NEEDLESS_LIFETIMES),\n         LintId::of(&literal_representation::INCONSISTENT_DIGIT_GROUPING),\n         LintId::of(&literal_representation::MISTYPED_LITERAL_SUFFIXES),\n+        LintId::of(&literal_representation::UNUSUAL_BYTE_GROUPINGS),\n         LintId::of(&loops::EMPTY_LOOP),\n         LintId::of(&loops::EXPLICIT_COUNTER_LOOP),\n         LintId::of(&loops::FOR_KV_MAP),\n@@ -1587,6 +1589,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&len_zero::LEN_WITHOUT_IS_EMPTY),\n         LintId::of(&len_zero::LEN_ZERO),\n         LintId::of(&literal_representation::INCONSISTENT_DIGIT_GROUPING),\n+        LintId::of(&literal_representation::UNUSUAL_BYTE_GROUPINGS),\n         LintId::of(&loops::EMPTY_LOOP),\n         LintId::of(&loops::FOR_KV_MAP),\n         LintId::of(&loops::NEEDLESS_RANGE_LOOP),"}, {"sha": "e8a741683dac12d7192a8e02562b3484e1599750", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/eceebc344887269a821d1df0c8693d9eb4d5da7d/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eceebc344887269a821d1df0c8693d9eb4d5da7d/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=eceebc344887269a821d1df0c8693d9eb4d5da7d", "patch": "@@ -82,6 +82,25 @@ declare_clippy_lint! {\n     \"integer literals with digits grouped inconsistently\"\n }\n \n+declare_clippy_lint! {\n+    /// **What it does:** Warns if hexadecimal or binary literals are not grouped\n+    /// by nibble or byte.\n+    ///\n+    /// **Why is this bad?** Negatively impacts readability.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust\n+    /// let x: u32 = 0xFFF_FFF;\n+    /// let y: u8 = 0b01_011_101;\n+    /// ```\n+    pub UNUSUAL_BYTE_GROUPINGS,\n+    style,\n+    \"binary or hex literals that aren't grouped by four\"\n+}\n+\n declare_clippy_lint! {\n     /// **What it does:** Warns if the digits of an integral or floating-point\n     /// constant are grouped into groups that\n@@ -125,6 +144,7 @@ enum WarningType {\n     LargeDigitGroups,\n     DecimalRepresentation,\n     MistypedLiteralSuffix,\n+    UnusualByteGroupings,\n }\n \n impl WarningType {\n@@ -175,6 +195,15 @@ impl WarningType {\n                 suggested_format,\n                 Applicability::MachineApplicable,\n             ),\n+            Self::UnusualByteGroupings => span_lint_and_sugg(\n+                cx,\n+                UNUSUAL_BYTE_GROUPINGS,\n+                span,\n+                \"digits of hex or binary literal not grouped by four\",\n+                \"consider\",\n+                suggested_format,\n+                Applicability::MachineApplicable,\n+            ),\n         };\n     }\n }\n@@ -184,6 +213,7 @@ declare_lint_pass!(LiteralDigitGrouping => [\n     INCONSISTENT_DIGIT_GROUPING,\n     LARGE_DIGIT_GROUPS,\n     MISTYPED_LITERAL_SUFFIXES,\n+    UNUSUAL_BYTE_GROUPINGS,\n ]);\n \n impl EarlyLintPass for LiteralDigitGrouping {\n@@ -217,9 +247,9 @@ impl LiteralDigitGrouping {\n \n                 let result = (|| {\n \n-                    let integral_group_size = Self::get_group_size(num_lit.integer.split('_'))?;\n+                    let integral_group_size = Self::get_group_size(num_lit.integer.split('_'), num_lit.radix)?;\n                     if let Some(fraction) = num_lit.fraction {\n-                        let fractional_group_size = Self::get_group_size(fraction.rsplit('_'))?;\n+                        let fractional_group_size = Self::get_group_size(fraction.rsplit('_'), num_lit.radix)?;\n \n                         let consistent = Self::parts_consistent(integral_group_size,\n                                                                 fractional_group_size,\n@@ -229,6 +259,7 @@ impl LiteralDigitGrouping {\n                             return Err(WarningType::InconsistentDigitGrouping);\n                         };\n                     }\n+\n                     Ok(())\n                 })();\n \n@@ -237,6 +268,7 @@ impl LiteralDigitGrouping {\n                     let should_warn = match warning_type {\n                         | WarningType::UnreadableLiteral\n                         | WarningType::InconsistentDigitGrouping\n+                        | WarningType::UnusualByteGroupings\n                         | WarningType::LargeDigitGroups => {\n                             !in_macro(lit.span)\n                         }\n@@ -331,11 +363,15 @@ impl LiteralDigitGrouping {\n \n     /// Returns the size of the digit groups (or None if ungrouped) if successful,\n     /// otherwise returns a `WarningType` for linting.\n-    fn get_group_size<'a>(groups: impl Iterator<Item = &'a str>) -> Result<Option<usize>, WarningType> {\n+    fn get_group_size<'a>(groups: impl Iterator<Item = &'a str>, radix: Radix) -> Result<Option<usize>, WarningType> {\n         let mut groups = groups.map(str::len);\n \n         let first = groups.next().expect(\"At least one group\");\n \n+        if (radix == Radix::Binary || radix == Radix::Hexadecimal) && groups.any(|i| i != 4 && i != 2) {\n+            return Err(WarningType::UnusualByteGroupings);\n+        }\n+\n         if let Some(second) = groups.next() {\n             if !groups.all(|x| x == second) || first > second {\n                 Err(WarningType::InconsistentDigitGrouping)"}, {"sha": "d02603d7702c7f3c6a8f7f48d30b29a027ff7e00", "filename": "clippy_lints/src/utils/numeric_literal.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eceebc344887269a821d1df0c8693d9eb4d5da7d/clippy_lints%2Fsrc%2Futils%2Fnumeric_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eceebc344887269a821d1df0c8693d9eb4d5da7d/clippy_lints%2Fsrc%2Futils%2Fnumeric_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fnumeric_literal.rs?ref=eceebc344887269a821d1df0c8693d9eb4d5da7d", "patch": "@@ -1,6 +1,6 @@\n use rustc_ast::ast::{Lit, LitFloatType, LitIntType, LitKind};\n \n-#[derive(Debug, PartialEq)]\n+#[derive(Debug, PartialEq, Copy, Clone)]\n pub enum Radix {\n     Binary,\n     Octal,\n@@ -11,8 +11,8 @@ pub enum Radix {\n impl Radix {\n     /// Returns a reasonable digit group size for this radix.\n     #[must_use]\n-    fn suggest_grouping(&self) -> usize {\n-        match *self {\n+    fn suggest_grouping(self) -> usize {\n+        match self {\n             Self::Binary | Self::Hexadecimal => 4,\n             Self::Octal | Self::Decimal => 3,\n         }"}, {"sha": "6272ce45efbcd63006240c1849cd5d4111e4ebda", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/eceebc344887269a821d1df0c8693d9eb4d5da7d/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eceebc344887269a821d1df0c8693d9eb4d5da7d/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=eceebc344887269a821d1df0c8693d9eb4d5da7d", "patch": "@@ -2643,6 +2643,13 @@ vec![\n         deprecation: None,\n         module: \"unused_unit\",\n     },\n+    Lint {\n+        name: \"unusual_byte_groupings\",\n+        group: \"style\",\n+        desc: \"binary or hex literals that aren\\'t grouped by four\",\n+        deprecation: None,\n+        module: \"literal_representation\",\n+    },\n     Lint {\n         name: \"unwrap_in_result\",\n         group: \"restriction\","}, {"sha": "3430c137ec2207435c2dcb5a7d636ac6a348dfa3", "filename": "tests/ui/large_digit_groups.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eceebc344887269a821d1df0c8693d9eb4d5da7d/tests%2Fui%2Flarge_digit_groups.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eceebc344887269a821d1df0c8693d9eb4d5da7d/tests%2Fui%2Flarge_digit_groups.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_digit_groups.fixed?ref=eceebc344887269a821d1df0c8693d9eb4d5da7d", "patch": "@@ -11,7 +11,7 @@ fn main() {\n     let _good = (\n         0b1011_i64,\n         0o1_234_u32,\n-        0x1_234_567,\n+        0x0123_4567,\n         1_2345_6789,\n         1234_f32,\n         1_234.12_f32,"}, {"sha": "13d108b56e02e72558003d8c838410a07219e11a", "filename": "tests/ui/large_digit_groups.stderr", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eceebc344887269a821d1df0c8693d9eb4d5da7d/tests%2Fui%2Flarge_digit_groups.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eceebc344887269a821d1df0c8693d9eb4d5da7d/tests%2Fui%2Flarge_digit_groups.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_digit_groups.stderr?ref=eceebc344887269a821d1df0c8693d9eb4d5da7d", "patch": "@@ -1,24 +1,30 @@\n-error: digit groups should be smaller\n+error: digits of hex or binary literal not grouped by four\n+  --> $DIR/large_digit_groups.rs:14:9\n+   |\n+LL |         0x1_234_567,\n+   |         ^^^^^^^^^^^ help: consider: `0x0123_4567`\n+   |\n+   = note: `-D clippy::unusual-byte-groupings` implied by `-D warnings`\n+\n+error: digits of hex or binary literal not grouped by four\n   --> $DIR/large_digit_groups.rs:22:9\n    |\n LL |         0b1_10110_i64,\n    |         ^^^^^^^^^^^^^ help: consider: `0b11_0110_i64`\n-   |\n-   = note: `-D clippy::large-digit-groups` implied by `-D warnings`\n \n-error: digits grouped inconsistently by underscores\n+error: digits of hex or binary literal not grouped by four\n   --> $DIR/large_digit_groups.rs:23:9\n    |\n LL |         0xd_e_adbee_f_usize,\n    |         ^^^^^^^^^^^^^^^^^^^ help: consider: `0xdead_beef_usize`\n-   |\n-   = note: `-D clippy::inconsistent-digit-grouping` implied by `-D warnings`\n \n error: digit groups should be smaller\n   --> $DIR/large_digit_groups.rs:24:9\n    |\n LL |         1_23456_f32,\n    |         ^^^^^^^^^^^ help: consider: `123_456_f32`\n+   |\n+   = note: `-D clippy::large-digit-groups` implied by `-D warnings`\n \n error: digit groups should be smaller\n   --> $DIR/large_digit_groups.rs:25:9\n@@ -38,5 +44,5 @@ error: digit groups should be smaller\n LL |         1_23456.12345_6_f64,\n    |         ^^^^^^^^^^^^^^^^^^^ help: consider: `123_456.123_456_f64`\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 7 previous errors\n "}, {"sha": "a72a74b9131d8bb21fb3b2431fd344c2d069706c", "filename": "tests/ui/literals.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eceebc344887269a821d1df0c8693d9eb4d5da7d/tests%2Fui%2Fliterals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eceebc344887269a821d1df0c8693d9eb4d5da7d/tests%2Fui%2Fliterals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.rs?ref=eceebc344887269a821d1df0c8693d9eb4d5da7d", "patch": "@@ -33,4 +33,9 @@ fn main() {\n     let fail19 = 12_3456_21;\n     let fail22 = 3__4___23;\n     let fail23 = 3__16___23;\n+\n+    let fail24 = 0xAB_ABC_AB;\n+    let fail25 = 0b01_100_101;\n+    let ok26 = 0x6_A0_BF;\n+    let ok27 = 0b1_0010_0101;\n }"}, {"sha": "64ceeb316d8e5a109871389304449d97f424bda1", "filename": "tests/ui/literals.stderr", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eceebc344887269a821d1df0c8693d9eb4d5da7d/tests%2Fui%2Fliterals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eceebc344887269a821d1df0c8693d9eb4d5da7d/tests%2Fui%2Fliterals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.stderr?ref=eceebc344887269a821d1df0c8693d9eb4d5da7d", "patch": "@@ -69,5 +69,19 @@ error: digits grouped inconsistently by underscores\n LL |     let fail23 = 3__16___23;\n    |                  ^^^^^^^^^^ help: consider: `31_623`\n \n-error: aborting due to 8 previous errors\n+error: digits of hex or binary literal not grouped by four\n+  --> $DIR/literals.rs:37:18\n+   |\n+LL |     let fail24 = 0xAB_ABC_AB;\n+   |                  ^^^^^^^^^^^ help: consider: `0x0ABA_BCAB`\n+   |\n+   = note: `-D clippy::unusual-byte-groupings` implied by `-D warnings`\n+\n+error: digits of hex or binary literal not grouped by four\n+  --> $DIR/literals.rs:38:18\n+   |\n+LL |     let fail25 = 0b01_100_101;\n+   |                  ^^^^^^^^^^^^ help: consider: `0b0110_0101`\n+\n+error: aborting due to 10 previous errors\n "}, {"sha": "4043d53299f6b0ca219892ade384801523d5ed3a", "filename": "tests/ui/unreadable_literal.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eceebc344887269a821d1df0c8693d9eb4d5da7d/tests%2Fui%2Funreadable_literal.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eceebc344887269a821d1df0c8693d9eb4d5da7d/tests%2Fui%2Funreadable_literal.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funreadable_literal.fixed?ref=eceebc344887269a821d1df0c8693d9eb4d5da7d", "patch": "@@ -14,7 +14,7 @@ fn main() {\n     let _good = (\n         0b1011_i64,\n         0o1_234_u32,\n-        0x1_234_567,\n+        0x0123_4567,\n         65536,\n         1_2345_6789,\n         1234_f32,"}, {"sha": "8645cabeabbbc92dfe8a7a0a16e57f4d82bb990c", "filename": "tests/ui/unreadable_literal.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eceebc344887269a821d1df0c8693d9eb4d5da7d/tests%2Fui%2Funreadable_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eceebc344887269a821d1df0c8693d9eb4d5da7d/tests%2Fui%2Funreadable_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funreadable_literal.stderr?ref=eceebc344887269a821d1df0c8693d9eb4d5da7d", "patch": "@@ -1,3 +1,11 @@\n+error: digits of hex or binary literal not grouped by four\n+  --> $DIR/unreadable_literal.rs:17:9\n+   |\n+LL |         0x1_234_567,\n+   |         ^^^^^^^^^^^ help: consider: `0x0123_4567`\n+   |\n+   = note: `-D clippy::unusual-byte-groupings` implied by `-D warnings`\n+\n error: long literal lacking separators\n   --> $DIR/unreadable_literal.rs:25:17\n    |\n@@ -54,5 +62,5 @@ error: long literal lacking separators\n LL |     let _fail12: i128 = 0xabcabcabcabcabcabc;\n    |                         ^^^^^^^^^^^^^^^^^^^^ help: consider: `0x00ab_cabc_abca_bcab_cabc`\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 10 previous errors\n "}]}