{"sha": "3d8e8546048cc94b9640c1f9e50ae1a0d75df9ce", "node_id": "C_kwDOAAsO6NoAKDNkOGU4NTQ2MDQ4Y2M5NGI5NjQwYzFmOWU1MGFlMWEwZDc1ZGY5Y2U", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-05-15T11:31:28Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-06-06T12:39:32Z"}, "message": "Make saved_file field of WorkProduct non-optional\n\nA WorkProduct without a saved file is useless", "tree": {"sha": "a74d9eb2071a0040424ac8a064959fe897e47631", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a74d9eb2071a0040424ac8a064959fe897e47631"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d8e8546048cc94b9640c1f9e50ae1a0d75df9ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d8e8546048cc94b9640c1f9e50ae1a0d75df9ce", "html_url": "https://github.com/rust-lang/rust/commit/3d8e8546048cc94b9640c1f9e50ae1a0d75df9ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d8e8546048cc94b9640c1f9e50ae1a0d75df9ce/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbb850931fa5ccdb23eaaaead853084f49f9b2c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbb850931fa5ccdb23eaaaead853084f49f9b2c6", "html_url": "https://github.com/rust-lang/rust/commit/bbb850931fa5ccdb23eaaaead853084f49f9b2c6"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "05457ce15e9a7d8bfce0d6747bd888373e25f033", "filename": "src/driver/aot.rs", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/3d8e8546048cc94b9640c1f9e50ae1a0d75df9ce/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d8e8546048cc94b9640c1f9e50ae1a0d75df9ce/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=3d8e8546048cc94b9640c1f9e50ae1a0d75df9ce", "patch": "@@ -80,29 +80,24 @@ fn reuse_workproduct_for_cgu(\n     cgu: &CodegenUnit<'_>,\n     work_products: &mut FxHashMap<WorkProductId, WorkProduct>,\n ) -> CompiledModule {\n-    let mut object = None;\n     let work_product = cgu.previous_work_product(tcx);\n-    if let Some(saved_file) = &work_product.saved_file {\n-        let obj_out =\n-            tcx.output_filenames(()).temp_path(OutputType::Object, Some(cgu.name().as_str()));\n-        object = Some(obj_out.clone());\n-        let source_file = rustc_incremental::in_incr_comp_dir_sess(&tcx.sess, &saved_file);\n-        if let Err(err) = rustc_fs_util::link_or_copy(&source_file, &obj_out) {\n-            tcx.sess.err(&format!(\n-                \"unable to copy {} to {}: {}\",\n-                source_file.display(),\n-                obj_out.display(),\n-                err\n-            ));\n-        }\n+    let obj_out = tcx.output_filenames(()).temp_path(OutputType::Object, Some(cgu.name().as_str()));\n+    let source_file = rustc_incremental::in_incr_comp_dir_sess(&tcx.sess, &work_product.saved_file);\n+    if let Err(err) = rustc_fs_util::link_or_copy(&source_file, &obj_out) {\n+        tcx.sess.err(&format!(\n+            \"unable to copy {} to {}: {}\",\n+            source_file.display(),\n+            obj_out.display(),\n+            err\n+        ));\n     }\n \n     work_products.insert(cgu.work_product_id(), work_product);\n \n     CompiledModule {\n         name: cgu.name().to_string(),\n         kind: ModuleKind::Regular,\n-        object,\n+        object: Some(obj_out),\n         dwarf_object: None,\n         bytecode: None,\n     }"}]}