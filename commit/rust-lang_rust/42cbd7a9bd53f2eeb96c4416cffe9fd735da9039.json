{"sha": "42cbd7a9bd53f2eeb96c4416cffe9fd735da9039", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyY2JkN2E5YmQ1M2YyZWViOTZjNDQxNmNmZmU5ZmQ3MzVkYTkwMzk=", "commit": {"author": {"name": "Sean T Allen", "email": "sean@monkeysnatchbanana.com", "date": "2015-01-22T18:00:15Z"}, "committer": {"name": "Sean T Allen", "email": "sean@monkeysnatchbanana.com", "date": "2015-01-22T18:17:23Z"}, "message": "Reference correct fn during lifetime ellision", "tree": {"sha": "8568e04f14fce40fffacaff2503fe47da12b56bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8568e04f14fce40fffacaff2503fe47da12b56bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42cbd7a9bd53f2eeb96c4416cffe9fd735da9039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42cbd7a9bd53f2eeb96c4416cffe9fd735da9039", "html_url": "https://github.com/rust-lang/rust/commit/42cbd7a9bd53f2eeb96c4416cffe9fd735da9039", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42cbd7a9bd53f2eeb96c4416cffe9fd735da9039/comments", "author": {"login": "SeanTAllen", "id": 193596, "node_id": "MDQ6VXNlcjE5MzU5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/193596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeanTAllen", "html_url": "https://github.com/SeanTAllen", "followers_url": "https://api.github.com/users/SeanTAllen/followers", "following_url": "https://api.github.com/users/SeanTAllen/following{/other_user}", "gists_url": "https://api.github.com/users/SeanTAllen/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeanTAllen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeanTAllen/subscriptions", "organizations_url": "https://api.github.com/users/SeanTAllen/orgs", "repos_url": "https://api.github.com/users/SeanTAllen/repos", "events_url": "https://api.github.com/users/SeanTAllen/events{/privacy}", "received_events_url": "https://api.github.com/users/SeanTAllen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SeanTAllen", "id": 193596, "node_id": "MDQ6VXNlcjE5MzU5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/193596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeanTAllen", "html_url": "https://github.com/SeanTAllen", "followers_url": "https://api.github.com/users/SeanTAllen/followers", "following_url": "https://api.github.com/users/SeanTAllen/following{/other_user}", "gists_url": "https://api.github.com/users/SeanTAllen/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeanTAllen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeanTAllen/subscriptions", "organizations_url": "https://api.github.com/users/SeanTAllen/orgs", "repos_url": "https://api.github.com/users/SeanTAllen/repos", "events_url": "https://api.github.com/users/SeanTAllen/events{/privacy}", "received_events_url": "https://api.github.com/users/SeanTAllen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d2056a7e3e52b2aec41662cfd960e0eafe8494c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d2056a7e3e52b2aec41662cfd960e0eafe8494c", "html_url": "https://github.com/rust-lang/rust/commit/5d2056a7e3e52b2aec41662cfd960e0eafe8494c"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "56cb5b1de699c4fd0aa40427db595d5a83faf39a", "filename": "src/doc/trpl/ownership.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/42cbd7a9bd53f2eeb96c4416cffe9fd735da9039/src%2Fdoc%2Ftrpl%2Fownership.md", "raw_url": "https://github.com/rust-lang/rust/raw/42cbd7a9bd53f2eeb96c4416cffe9fd735da9039/src%2Fdoc%2Ftrpl%2Fownership.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fownership.md?ref=42cbd7a9bd53f2eeb96c4416cffe9fd735da9039", "patch": "@@ -244,8 +244,8 @@ three. The ownership system in Rust does this through a concept called\n Remember the function that borrowed an `i32`? Let's look at it again.\n \n ```rust\n-fn add_one(num: &i32) -> i32 {\n-    *num + 1\n+fn add_one(num: &mut i32) {\n+    *num += 1;\n }\n ```\n \n@@ -255,8 +255,8 @@ cover the others later. Without eliding the lifetimes, `add_one` looks like\n this:\n \n ```rust\n-fn add_one<'a>(num: &'a i32) -> i32 {\n-    *num + 1\n+fn add_one<'a>(num: &'a mut i32) {\n+    *num += 1;\n }\n ```\n \n@@ -278,12 +278,12 @@ fn add_two<'a, 'b>(...)\n Then in our parameter list, we use the lifetimes we've named:\n \n ```{rust,ignore}\n-...(num: &'a i32) -> ...\n+...(num: &'a mut i32)\n ```\n \n-If you compare `&i32` to `&'a i32`, they're the same, it's just that the\n-lifetime `'a` has snuck in between the `&` and the `i32`. We read `&i32` as \"a\n-reference to an i32\" and `&'a i32` as \"a reference to an i32 with the lifetime 'a.'\"\n+If you compare `&mut i32` to `&'a mut i32`, they're the same, it's just that the\n+lifetime `'a` has snuck in between the `&` and the `mut i32`. We read `&mut i32` as \"a\n+mutable reference to an i32\" and `&'a mut i32` as \"a mutable reference to an i32 with the lifetime 'a.'\"\n \n Why do lifetimes matter? Well, for example, here's some code:\n "}]}