{"sha": "12ae3651f891d22f804c67923d02cbdfa10fa60d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyYWUzNjUxZjg5MWQyMmY4MDRjNjc5MjNkMDJjYmRmYTEwZmE2MGQ=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-01-06T06:36:14Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-01-08T21:31:09Z"}, "message": "Misc cleanups", "tree": {"sha": "a48c33031512dd205577249e9cfb064e849a27bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a48c33031512dd205577249e9cfb064e849a27bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12ae3651f891d22f804c67923d02cbdfa10fa60d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12ae3651f891d22f804c67923d02cbdfa10fa60d", "html_url": "https://github.com/rust-lang/rust/commit/12ae3651f891d22f804c67923d02cbdfa10fa60d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12ae3651f891d22f804c67923d02cbdfa10fa60d/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f67124245cc24babd0345347a77089ba698acd14", "url": "https://api.github.com/repos/rust-lang/rust/commits/f67124245cc24babd0345347a77089ba698acd14", "html_url": "https://github.com/rust-lang/rust/commit/f67124245cc24babd0345347a77089ba698acd14"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "214b5d3a84f24c4bb3f88af4cb8063eea18545a0", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/12ae3651f891d22f804c67923d02cbdfa10fa60d/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12ae3651f891d22f804c67923d02cbdfa10fa60d/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=12ae3651f891d22f804c67923d02cbdfa10fa60d", "patch": "@@ -1076,7 +1076,7 @@ impl<'a> Formatter<'a> {\n                 self.args[i].as_usize()\n             }\n             rt::v1::Count::NextParam => {\n-                self.curarg.next().and_then(|arg| arg.as_usize())\n+                self.curarg.next()?.as_usize()\n             }\n         }\n     }\n@@ -1142,15 +1142,15 @@ impl<'a> Formatter<'a> {\n             sign = Some('+'); width += 1;\n         }\n \n-        let mut prefixed = false;\n-        if self.alternate() {\n-            prefixed = true; width += prefix.chars().count();\n+        let prefixed = self.alternate();\n+        if prefixed {\n+            width += prefix.chars().count();\n         }\n \n         // Writes the sign if it exists, and then the prefix if it was requested\n         let write_prefix = |f: &mut Formatter| {\n             if let Some(c) = sign {\n-                f.buf.write_str(c.encode_utf8(&mut [0; 4]))?;\n+                f.buf.write_char(c)?;\n             }\n             if prefixed { f.buf.write_str(prefix) }\n             else { Ok(()) }\n@@ -1312,7 +1312,7 @@ impl<'a> Formatter<'a> {\n \n                 // remove the sign from the formatted parts\n                 formatted.sign = b\"\";\n-                width = if width < sign.len() { 0 } else { width - sign.len() };\n+                width = width.saturating_sub(sign.len());\n                 align = rt::v1::Alignment::Right;\n                 self.fill = '0';\n                 self.align = rt::v1::Alignment::Right;"}, {"sha": "55a7ba181e5271d5a4e7f8188ba3714934e765d1", "filename": "src/libcore/str/pattern.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/12ae3651f891d22f804c67923d02cbdfa10fa60d/src%2Flibcore%2Fstr%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12ae3651f891d22f804c67923d02cbdfa10fa60d/src%2Flibcore%2Fstr%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fpattern.rs?ref=12ae3651f891d22f804c67923d02cbdfa10fa60d", "patch": "@@ -425,8 +425,7 @@ impl<'a> Pattern<'a> for char {\n     #[inline]\n     fn into_searcher(self, haystack: &'a str) -> Self::Searcher {\n         let mut utf8_encoded = [0; 4];\n-        self.encode_utf8(&mut utf8_encoded);\n-        let utf8_size = self.len_utf8();\n+        let utf8_size = self.encode_utf8(&mut utf8_encoded).len();\n         CharSearcher {\n             haystack,\n             finger: 0,"}]}