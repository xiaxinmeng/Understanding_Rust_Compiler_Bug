{"sha": "4a938b5b3c475a5a12fa582eca2dd91d76cb0d3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhOTM4YjViM2M0NzVhNWExMmZhNTgyZWNhMmRkOTFkNzZjYjBkM2U=", "commit": {"author": {"name": "Kampfkarren", "email": "boynedmaster@gmail.com", "date": "2019-04-10T17:35:48Z"}, "committer": {"name": "Kampfkarren", "email": "boynedmaster@gmail.com", "date": "2019-04-10T17:35:48Z"}, "message": "Special error when using catch after try", "tree": {"sha": "ed8e4bdc1fa1a9033961b4eaa2f9c6b85674ddb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed8e4bdc1fa1a9033961b4eaa2f9c6b85674ddb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a938b5b3c475a5a12fa582eca2dd91d76cb0d3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a938b5b3c475a5a12fa582eca2dd91d76cb0d3e", "html_url": "https://github.com/rust-lang/rust/commit/4a938b5b3c475a5a12fa582eca2dd91d76cb0d3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a938b5b3c475a5a12fa582eca2dd91d76cb0d3e/comments", "author": {"login": "Kampfkarren", "id": 3190756, "node_id": "MDQ6VXNlcjMxOTA3NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3190756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kampfkarren", "html_url": "https://github.com/Kampfkarren", "followers_url": "https://api.github.com/users/Kampfkarren/followers", "following_url": "https://api.github.com/users/Kampfkarren/following{/other_user}", "gists_url": "https://api.github.com/users/Kampfkarren/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kampfkarren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kampfkarren/subscriptions", "organizations_url": "https://api.github.com/users/Kampfkarren/orgs", "repos_url": "https://api.github.com/users/Kampfkarren/repos", "events_url": "https://api.github.com/users/Kampfkarren/events{/privacy}", "received_events_url": "https://api.github.com/users/Kampfkarren/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kampfkarren", "id": 3190756, "node_id": "MDQ6VXNlcjMxOTA3NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3190756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kampfkarren", "html_url": "https://github.com/Kampfkarren", "followers_url": "https://api.github.com/users/Kampfkarren/followers", "following_url": "https://api.github.com/users/Kampfkarren/following{/other_user}", "gists_url": "https://api.github.com/users/Kampfkarren/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kampfkarren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kampfkarren/subscriptions", "organizations_url": "https://api.github.com/users/Kampfkarren/orgs", "repos_url": "https://api.github.com/users/Kampfkarren/repos", "events_url": "https://api.github.com/users/Kampfkarren/events{/privacy}", "received_events_url": "https://api.github.com/users/Kampfkarren/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53b622a48a7945e223dbc5cfb30f7cbd38acc7c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/53b622a48a7945e223dbc5cfb30f7cbd38acc7c5", "html_url": "https://github.com/rust-lang/rust/commit/53b622a48a7945e223dbc5cfb30f7cbd38acc7c5"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "98bad0a80aae2c5aac3df68aa888e7c66b688d3c", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4a938b5b3c475a5a12fa582eca2dd91d76cb0d3e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a938b5b3c475a5a12fa582eca2dd91d76cb0d3e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=4a938b5b3c475a5a12fa582eca2dd91d76cb0d3e", "patch": "@@ -3618,7 +3618,13 @@ impl<'a> Parser<'a> {\n     {\n         let (iattrs, body) = self.parse_inner_attrs_and_block()?;\n         attrs.extend(iattrs);\n-        Ok(self.mk_expr(span_lo.to(body.span), ExprKind::TryBlock(body), attrs))\n+        if self.eat_keyword(keywords::Catch) {\n+            let mut error = self.struct_span_err(self.prev_span, \"`try {} catch` is not a valid syntax\");\n+            error.help(\"try using `match` on the result of the `try` block instead\");\n+            Err(error)\n+        } else {\n+            Ok(self.mk_expr(span_lo.to(body.span), ExprKind::TryBlock(body), attrs))\n+        }\n     }\n \n     // `match` token already eaten"}, {"sha": "8f3d6d87258af6f5d50258d206820add6d3e711c", "filename": "src/test/ui/try-block/try-block-catch.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4a938b5b3c475a5a12fa582eca2dd91d76cb0d3e/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-catch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a938b5b3c475a5a12fa582eca2dd91d76cb0d3e/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-catch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-catch.rs?ref=4a938b5b3c475a5a12fa582eca2dd91d76cb0d3e", "patch": "@@ -0,0 +1,9 @@\n+// compile-flags: --edition 2018\n+\n+#![feature(try_blocks)]\n+\n+fn main() {\n+\tlet res: Option<bool> = try {\n+\t\ttrue\n+\t} catch { }; //~ ERROR `try {} catch` is not a valid syntax\n+}"}, {"sha": "0689647d3b2a45f994fe0d466b4f48873a5f2258", "filename": "src/test/ui/try-block/try-block-catch.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4a938b5b3c475a5a12fa582eca2dd91d76cb0d3e/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-catch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4a938b5b3c475a5a12fa582eca2dd91d76cb0d3e/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-catch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-catch.stderr?ref=4a938b5b3c475a5a12fa582eca2dd91d76cb0d3e", "patch": "@@ -0,0 +1,10 @@\n+error: `try {} catch` is not a valid syntax\n+  --> $DIR/try-block-catch.rs:8:4\n+   |\n+LL |     } catch { }; //~ ERROR `try {} catch` is not a valid syntax\n+   |       ^^^^^\n+   |\n+   = help: try using `match` on the result of the `try` block instead\n+\n+error: aborting due to previous error\n+"}]}