{"sha": "731c0ce4c9fce4b689841be477841595be686ce9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczMWMwY2U0YzlmY2U0YjY4OTg0MWJlNDc3ODQxNTk1YmU2ODZjZTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-20T22:08:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-20T22:08:19Z"}, "message": "Auto merge of #29961 - alexcrichton:order-dependent, r=brson\n\nThis commit fixes a bug where a crate could fail to compile depending on the\norder of `extern crate` directives at the top of the crate. Specifically, if the\nsame crate is found at two locations, then if it's loaded first via `--extern`\nit will not emit a duplicate warning, but if it's first loaded transitively\nvia a dep and *then* via `--extern` an error will be emitted.\n\nThe loader was tweaked to catch this scenario and coalesce the loading of these\ntwo crates to prevent errors from being emitted.", "tree": {"sha": "27144f93eb0a6605785f14baea6c9228839e7ac4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27144f93eb0a6605785f14baea6c9228839e7ac4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/731c0ce4c9fce4b689841be477841595be686ce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/731c0ce4c9fce4b689841be477841595be686ce9", "html_url": "https://github.com/rust-lang/rust/commit/731c0ce4c9fce4b689841be477841595be686ce9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/731c0ce4c9fce4b689841be477841595be686ce9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20cbba71d496b8b3760d76d694e12dd54c3f3eea", "url": "https://api.github.com/repos/rust-lang/rust/commits/20cbba71d496b8b3760d76d694e12dd54c3f3eea", "html_url": "https://github.com/rust-lang/rust/commit/20cbba71d496b8b3760d76d694e12dd54c3f3eea"}, {"sha": "24311d076267b40fed222dd661eb179f4613be74", "url": "https://api.github.com/repos/rust-lang/rust/commits/24311d076267b40fed222dd661eb179f4613be74", "html_url": "https://github.com/rust-lang/rust/commit/24311d076267b40fed222dd661eb179f4613be74"}], "stats": {"total": 86, "additions": 81, "deletions": 5}, "files": [{"sha": "6ce5d1117a63f83482c4e5715cc156723d24fb4c", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/731c0ce4c9fce4b689841be477841595be686ce9/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/731c0ce4c9fce4b689841be477841595be686ce9/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=731c0ce4c9fce4b689841be477841595be686ce9", "patch": "@@ -368,7 +368,12 @@ impl<'a> CrateReader<'a> {\n                      explicitly_linked: bool)\n                          -> (ast::CrateNum, Rc<cstore::crate_metadata>,\n                              cstore::CrateSource) {\n-        match self.existing_match(name, hash, kind) {\n+        enum LookupResult {\n+            Previous(ast::CrateNum),\n+            Loaded(loader::Library),\n+        }\n+        let result = match self.existing_match(name, hash, kind) {\n+            Some(cnum) => LookupResult::Previous(cnum),\n             None => {\n                 let mut load_ctxt = loader::Context {\n                     sess: self.sess,\n@@ -386,16 +391,36 @@ impl<'a> CrateReader<'a> {\n                     should_match_name: true,\n                 };\n                 let library = load_ctxt.load_library_crate();\n-                self.register_crate(root, ident, name, span, library,\n-                                    explicitly_linked)\n+\n+                // In the case that we're loading a crate, but not matching\n+                // against a hash, we could load a crate which has the same hash\n+                // as an already loaded crate. If this is the case prevent\n+                // duplicates by just using the first crate.\n+                let meta_hash = decoder::get_crate_hash(library.metadata\n+                                                               .as_slice());\n+                let mut result = LookupResult::Loaded(library);\n+                self.sess.cstore.iter_crate_data(|cnum, data| {\n+                    if data.name() == name && meta_hash == data.hash() {\n+                        assert!(hash.is_none());\n+                        result = LookupResult::Previous(cnum);\n+                    }\n+                });\n+                result\n             }\n-            Some(cnum) => {\n+        };\n+\n+        match result {\n+            LookupResult::Previous(cnum) => {\n                 let data = self.sess.cstore.get_crate_data(cnum);\n                 if explicitly_linked && !data.explicitly_linked.get() {\n                     data.explicitly_linked.set(explicitly_linked);\n                 }\n                 (cnum, data, self.sess.cstore.get_used_crate_source(cnum).unwrap())\n             }\n+            LookupResult::Loaded(library) => {\n+                self.register_crate(root, ident, name, span, library,\n+                                    explicitly_linked)\n+            }\n         }\n     }\n "}, {"sha": "ca1562683efe72c8220f698364f0ef5396a07741", "filename": "src/librustc/metadata/loader.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/731c0ce4c9fce4b689841be477841595be686ce9/src%2Flibrustc%2Fmetadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/731c0ce4c9fce4b689841be477841595be686ce9/src%2Flibrustc%2Fmetadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Floader.rs?ref=731c0ce4c9fce4b689841be477841595be686ce9", "patch": "@@ -547,7 +547,12 @@ impl<'a> Context<'a> {\n                     continue\n                 }\n             };\n-            if ret.is_some() {\n+            // If we've already found a candidate and we're not matching hashes,\n+            // emit an error about duplicate candidates found. If we're matching\n+            // based on a hash, however, then if we've gotten this far both\n+            // candidates have the same hash, so they're not actually\n+            // duplicates that we should warn about.\n+            if ret.is_some() && self.hash.is_none() {\n                 span_err!(self.sess, self.span, E0465,\n                           \"multiple {} candidates for `{}` found\",\n                           flavor, self.crate_name);"}, {"sha": "1631aa806af090ec454544f599a3f0c6b7e9c854", "filename": "src/test/run-make/extern-multiple-copies/Makefile", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/731c0ce4c9fce4b689841be477841595be686ce9/src%2Ftest%2Frun-make%2Fextern-multiple-copies%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/731c0ce4c9fce4b689841be477841595be686ce9/src%2Ftest%2Frun-make%2Fextern-multiple-copies%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-multiple-copies%2FMakefile?ref=731c0ce4c9fce4b689841be477841595be686ce9", "patch": "@@ -0,0 +1,8 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) foo1.rs\n+\t$(RUSTC) foo2.rs\n+\tmkdir $(TMPDIR)/foo\n+\tcp $(TMPDIR)/libfoo1.rlib $(TMPDIR)/foo/libfoo1.rlib\n+\t$(RUSTC) bar.rs --extern foo1=$(TMPDIR)/libfoo1.rlib -L $(TMPDIR)/foo"}, {"sha": "a50f5de384c0281c3530af42335ca8d973739fc3", "filename": "src/test/run-make/extern-multiple-copies/bar.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/731c0ce4c9fce4b689841be477841595be686ce9/src%2Ftest%2Frun-make%2Fextern-multiple-copies%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/731c0ce4c9fce4b689841be477841595be686ce9/src%2Ftest%2Frun-make%2Fextern-multiple-copies%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-multiple-copies%2Fbar.rs?ref=731c0ce4c9fce4b689841be477841595be686ce9", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate foo2; // foo2 first to exhibit the bug\n+extern crate foo1;\n+\n+fn main() {\n+    /* ... */\n+}"}, {"sha": "0be200ddcd27dd53d6e03180a5f8149c586e34dd", "filename": "src/test/run-make/extern-multiple-copies/foo1.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/731c0ce4c9fce4b689841be477841595be686ce9/src%2Ftest%2Frun-make%2Fextern-multiple-copies%2Ffoo1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/731c0ce4c9fce4b689841be477841595be686ce9/src%2Ftest%2Frun-make%2Fextern-multiple-copies%2Ffoo1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-multiple-copies%2Ffoo1.rs?ref=731c0ce4c9fce4b689841be477841595be686ce9", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]"}, {"sha": "0be200ddcd27dd53d6e03180a5f8149c586e34dd", "filename": "src/test/run-make/extern-multiple-copies/foo2.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/731c0ce4c9fce4b689841be477841595be686ce9/src%2Ftest%2Frun-make%2Fextern-multiple-copies%2Ffoo2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/731c0ce4c9fce4b689841be477841595be686ce9/src%2Ftest%2Frun-make%2Fextern-multiple-copies%2Ffoo2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-multiple-copies%2Ffoo2.rs?ref=731c0ce4c9fce4b689841be477841595be686ce9", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]"}]}