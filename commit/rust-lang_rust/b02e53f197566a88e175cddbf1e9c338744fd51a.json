{"sha": "b02e53f197566a88e175cddbf1e9c338744fd51a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMmU1M2YxOTc1NjZhODhlMTc1Y2RkYmYxZTljMzM4NzQ0ZmQ1MWE=", "commit": {"author": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-03-25T17:46:01Z"}, "committer": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-03-26T16:13:25Z"}, "message": "Remove check for ZST in `RawVec::needs_to_grow`", "tree": {"sha": "d8a2c313e8c5b2c8eb91bf5a29415ebdcfe40853", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8a2c313e8c5b2c8eb91bf5a29415ebdcfe40853"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b02e53f197566a88e175cddbf1e9c338744fd51a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b02e53f197566a88e175cddbf1e9c338744fd51a", "html_url": "https://github.com/rust-lang/rust/commit/b02e53f197566a88e175cddbf1e9c338744fd51a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b02e53f197566a88e175cddbf1e9c338744fd51a/comments", "author": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad7de67a32d40360ad36d03845c5a7004ba68150", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad7de67a32d40360ad36d03845c5a7004ba68150", "html_url": "https://github.com/rust-lang/rust/commit/ad7de67a32d40360ad36d03845c5a7004ba68150"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "efb7d4cae5da3c9fc458aa65675f0aeb3a6e7eef", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b02e53f197566a88e175cddbf1e9c338744fd51a/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b02e53f197566a88e175cddbf1e9c338744fd51a/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=b02e53f197566a88e175cddbf1e9c338744fd51a", "patch": "@@ -461,8 +461,7 @@ impl<T, A: AllocRef> RawVec<T, A> {\n     /// Returns if the buffer needs to grow to fulfill the needed extra capacity.\n     /// Mainly used to make inlining reserve-calls possible without inlining `grow`.\n     fn needs_to_grow(&self, used_capacity: usize, needed_extra_capacity: usize) -> bool {\n-        mem::size_of::<T>() != 0\n-            && needed_extra_capacity > self.capacity().wrapping_sub(used_capacity)\n+        needed_extra_capacity > self.capacity().wrapping_sub(used_capacity)\n     }\n \n     fn capacity_from_bytes(excess: usize) -> usize {"}]}