{"sha": "900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwMGRkOGE3YjljYTZkMjc4NmU5ZGI4YTJmNWRjZGZmNTZiNGFkMmQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-12-29T17:55:16Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-12-29T17:55:16Z"}, "message": "rustbuild: Don't run pretty tests by default\n\nThis commit relegates all pretty tests to not get run by default and rather get\nrun as part of an \"aux\" test suite. This \"aux\" suite is renamed from the old\n\"cargotest\" suite to just collect tests that don't need to run everywhere but\nshould at least pass on Unix/Windows.", "tree": {"sha": "739fe3a04c874c727952fdba4f16357c6cee6eec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/739fe3a04c874c727952fdba4f16357c6cee6eec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d", "html_url": "https://github.com/rust-lang/rust/commit/900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f957ebeff8932637002574c9eae75a702b202b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f957ebeff8932637002574c9eae75a702b202b7", "html_url": "https://github.com/rust-lang/rust/commit/3f957ebeff8932637002574c9eae75a702b202b7"}], "stats": {"total": 40, "additions": 25, "deletions": 15}, "files": [{"sha": "0540b982d91620bf6aae7ef8a46296fa7578d2ee", "filename": ".travis.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d", "patch": "@@ -19,7 +19,7 @@ matrix:\n     - env: IMAGE=i686-gnu-nopt\n     - env: IMAGE=x86_64-freebsd\n     - env: IMAGE=x86_64-gnu\n-    - env: IMAGE=x86_64-gnu-cargotest\n+    - env: IMAGE=x86_64-gnu-aux\n     - env: IMAGE=x86_64-gnu-debug\n     - env: IMAGE=x86_64-gnu-nopt\n     - env: IMAGE=x86_64-gnu-make"}, {"sha": "dfe644cac35a0036144fe84c13041ae6d3f52e65", "filename": "appveyor.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d", "patch": "@@ -21,7 +21,7 @@ environment:\n   # MSVC cargotest\n   - MSYS_BITS: 64\n     NO_VENDOR: 1\n-    RUST_CHECK_TARGET: check-cargotest\n+    RUST_CHECK_TARGET: check-aux\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n \n   # 32/64-bit MinGW builds."}, {"sha": "a3333369930b84244f132b68764718cd7714ac29", "filename": "src/bootstrap/mk/Makefile.in", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d/src%2Fbootstrap%2Fmk%2FMakefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d/src%2Fbootstrap%2Fmk%2FMakefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmk%2FMakefile.in?ref=900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d", "patch": "@@ -51,8 +51,16 @@ standalone-docs:\n \t$(Q)$(BOOTSTRAP) doc src/doc $(BOOTSTRAP_ARGS)\n check:\n \t$(Q)$(BOOTSTRAP) test $(BOOTSTRAP_ARGS)\n-check-cargotest:\n-\t$(Q)$(BOOTSTRAP) test src/tools/cargotest $(BOOTSTRAP_ARGS)\n+check-aux:\n+\t$(Q)$(BOOTSTRAP) test \\\n+\t\tsrc/tools/cargotest \\\n+\t\tsrc/test/pretty \\\n+\t\tsrc/test/run-pass/pretty \\\n+\t\tsrc/test/run-fail/pretty \\\n+\t\tsrc/test/run-pass-valgrind/pretty \\\n+\t\tsrc/test/run-pass-fulldeps/pretty \\\n+\t\tsrc/test/run-fail-fulldeps/pretty \\\n+\t\t$(BOOTSTRAP_ARGS)\n dist:\n \t$(Q)$(BOOTSTRAP) dist $(BOOTSTRAP_ARGS)\n distcheck:"}, {"sha": "bab969b9d3f7c8c9f89adcdc744e1aba28d382e6", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d", "patch": "@@ -221,7 +221,7 @@ pub fn build_rules(build: &Build) -> Rules {\n     //\n     // Various unit tests and tests suites we can run\n     {\n-        let mut suite = |name, path, dir, mode| {\n+        let mut suite = |name, path, mode, dir| {\n             rules.test(name, path)\n                  .dep(|s| s.name(\"libtest\"))\n                  .dep(|s| s.name(\"tool-compiletest\").target(s.host))\n@@ -233,9 +233,9 @@ pub fn build_rules(build: &Build) -> Rules {\n                          Step::noop()\n                      }\n                  })\n-                 .default(true)\n+                 .default(mode != \"pretty\") // pretty tests don't run everywhere\n                  .run(move |s| {\n-                     check::compiletest(build, &s.compiler(), s.target, dir, mode)\n+                     check::compiletest(build, &s.compiler(), s.target, mode, dir)\n                  });\n         };\n \n@@ -254,12 +254,13 @@ pub fn build_rules(build: &Build) -> Rules {\n         suite(\"check-incremental\", \"src/test/incremental\", \"incremental\",\n               \"incremental\");\n         suite(\"check-ui\", \"src/test/ui\", \"ui\", \"ui\");\n+\n         suite(\"check-pretty\", \"src/test/pretty\", \"pretty\", \"pretty\");\n         suite(\"check-pretty-rpass\", \"src/test/run-pass/pretty\", \"pretty\",\n               \"run-pass\");\n-        suite(\"check-pretty-rfail\", \"src/test/run-pass/pretty\", \"pretty\",\n+        suite(\"check-pretty-rfail\", \"src/test/run-fail/pretty\", \"pretty\",\n               \"run-fail\");\n-        suite(\"check-pretty-valgrind\", \"src/test/run-pass-valgrind\", \"pretty\",\n+        suite(\"check-pretty-valgrind\", \"src/test/run-pass-valgrind/pretty\", \"pretty\",\n               \"run-pass-valgrind\");\n     }\n \n@@ -290,14 +291,14 @@ pub fn build_rules(build: &Build) -> Rules {\n                                          s.target));\n \n     {\n-        let mut suite = |name, path, dir, mode| {\n+        let mut suite = |name, path, mode, dir| {\n             rules.test(name, path)\n                  .dep(|s| s.name(\"librustc\"))\n                  .dep(|s| s.name(\"tool-compiletest\").target(s.host))\n-                 .default(true)\n+                 .default(mode != \"pretty\")\n                  .host(true)\n                  .run(move |s| {\n-                     check::compiletest(build, &s.compiler(), s.target, dir, mode)\n+                     check::compiletest(build, &s.compiler(), s.target, mode, dir)\n                  });\n         };\n \n@@ -307,9 +308,10 @@ pub fn build_rules(build: &Build) -> Rules {\n               \"compile-fail\", \"compile-fail-fulldeps\");\n         suite(\"check-rmake\", \"src/test/run-make\", \"run-make\", \"run-make\");\n         suite(\"check-rustdoc\", \"src/test/rustdoc\", \"rustdoc\", \"rustdoc\");\n-        suite(\"check-pretty-rpass-full\", \"src/test/run-pass-fulldeps\",\n+\n+        suite(\"check-pretty-rpass-full\", \"src/test/run-pass-fulldeps/pretty\",\n               \"pretty\", \"run-pass-fulldeps\");\n-        suite(\"check-pretty-rfail-full\", \"src/test/run-fail-fulldeps\",\n+        suite(\"check-pretty-rfail-full\", \"src/test/run-fail-fulldeps/pretty\",\n               \"pretty\", \"run-fail-fulldeps\");\n     }\n "}, {"sha": "88c8aa4a8c448c90ab5b8fce5a5439a6e0c7fada", "filename": "src/ci/docker/x86_64-gnu-aux/Dockerfile", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d/src%2Fci%2Fdocker%2Fx86_64-gnu-aux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d/src%2Fci%2Fdocker%2Fx86_64-gnu-aux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-aux%2FDockerfile?ref=900dd8a7b9ca6d2786e9db8a2f5dcdff56b4ad2d", "patch": "@@ -25,7 +25,7 @@ RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-ini\n ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n \n ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu\n-ENV RUST_CHECK_TARGET check-cargotest\n+ENV RUST_CHECK_TARGET check-aux\n ENV NO_VENDOR 1\n RUN mkdir /tmp/obj\n RUN chmod 777 /tmp/obj", "previous_filename": "src/ci/docker/x86_64-gnu-cargotest/Dockerfile"}]}