{"sha": "ab04080b56448c4bcd7e5b79215a1097e1a9b217", "node_id": "C_kwDOAAsO6NoAKGFiMDQwODBiNTY0NDhjNGJjZDdlNWI3OTIxNWExMDk3ZTFhOWIyMTc", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-11-23T22:28:45Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-11-28T08:11:12Z"}, "message": "Change multiline span ASCII art visual order", "tree": {"sha": "ad4aa4cc7a3a92ed1f983ab3d9d94f94f7b89471", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad4aa4cc7a3a92ed1f983ab3d9d94f94f7b89471"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab04080b56448c4bcd7e5b79215a1097e1a9b217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab04080b56448c4bcd7e5b79215a1097e1a9b217", "html_url": "https://github.com/rust-lang/rust/commit/ab04080b56448c4bcd7e5b79215a1097e1a9b217", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab04080b56448c4bcd7e5b79215a1097e1a9b217/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "454784afba5bf35b5ff14ada0e31265ad1d75e73", "url": "https://api.github.com/repos/rust-lang/rust/commits/454784afba5bf35b5ff14ada0e31265ad1d75e73", "html_url": "https://github.com/rust-lang/rust/commit/454784afba5bf35b5ff14ada0e31265ad1d75e73"}], "stats": {"total": 216, "additions": 111, "deletions": 105}, "files": [{"sha": "d22f3ca42144ab132d1bdce41741ea1c4aa8b24b", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ab04080b56448c4bcd7e5b79215a1097e1a9b217/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab04080b56448c4bcd7e5b79215a1097e1a9b217/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=ab04080b56448c4bcd7e5b79215a1097e1a9b217", "patch": "@@ -2300,8 +2300,14 @@ impl FileWithAnnotatedLines {\n         }\n \n         let mut max_depth = 0; // max overlapping multiline spans\n-        for (file, ann) in multiline_annotations {\n+        for (_, ann) in &multiline_annotations {\n             max_depth = max(max_depth, ann.depth);\n+        }\n+        // Change order of multispan depth to minimize the number of overlaps in the ASCII art.\n+        for (_, a) in multiline_annotations.iter_mut() {\n+            a.depth = max_depth - a.depth + 1;\n+        }\n+        for (file, ann) in multiline_annotations {\n             let mut end_ann = ann.as_end();\n             if !ann.overlaps_exactly {\n                 // avoid output like"}, {"sha": "539b04535a0d028f8f45f2cbabfe8828e97802ce", "filename": "compiler/rustc_expand/src/tests.rs", "status": "modified", "additions": 54, "deletions": 54, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/ab04080b56448c4bcd7e5b79215a1097e1a9b217/compiler%2Frustc_expand%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab04080b56448c4bcd7e5b79215a1097e1a9b217/compiler%2Frustc_expand%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Ftests.rs?ref=ab04080b56448c4bcd7e5b79215a1097e1a9b217", "patch": "@@ -272,13 +272,13 @@ error: foo\n  --> test.rs:3:3\n   |\n 3 |      X0 Y0\n-  |  ____^__-\n-  | | ___|\n+  |   ___^__-\n+  |  |___|\n   | ||\n 4 | ||   X1 Y1\n 5 | ||   X2 Y2\n   | ||____^__- `Y` is a good letter too\n-  |  |____|\n+  | |_____|\n   |       `X` is a good letter\n \n \"#,\n@@ -311,12 +311,12 @@ error: foo\n  --> test.rs:3:3\n   |\n 3 |      X0 Y0\n-  |  ____^__-\n-  | | ___|\n+  |   ___^__-\n+  |  |___|\n   | ||\n 4 | ||   Y1 X1\n   | ||____-__^ `X` is a good letter\n-  | |_____|\n+  |  |____|\n   |       `Y` is a good letter too\n \n \"#,\n@@ -351,13 +351,13 @@ error: foo\n  --> test.rs:3:6\n   |\n 3 |      X0 Y0 Z0\n-  |   ______^\n-4 |  |   X1 Y1 Z1\n-  |  |_________-\n+  |  _______^\n+4 | |    X1 Y1 Z1\n+  | | _________-\n 5 | ||   X2 Y2 Z2\n   | ||____^ `X` is a good letter\n-6 | |    X3 Y3 Z3\n-  | |_____- `Y` is a good letter too\n+6 |  |   X3 Y3 Z3\n+  |  |____- `Y` is a good letter too\n \n \"#,\n     );\n@@ -395,15 +395,15 @@ error: foo\n  --> test.rs:3:3\n   |\n 3 |       X0 Y0 Z0\n-  |  _____^__-__-\n-  | | ____|__|\n-  | || ___|\n+  |    ___^__-__-\n+  |   |___|__|\n+  |  ||___|\n   | |||\n 4 | |||   X1 Y1 Z1\n 5 | |||   X2 Y2 Z2\n   | |||____^__-__- `Z` label\n-  |  ||____|__|\n-  |   |____|  `Y` is a good letter too\n+  | ||_____|__|\n+  | |______|  `Y` is a good letter too\n   |        `X` is a good letter\n \n \"#,\n@@ -487,17 +487,17 @@ error: foo\n  --> test.rs:3:6\n   |\n 3 |      X0 Y0 Z0\n-  |   ______^\n-4 |  |   X1 Y1 Z1\n-  |  |____^_-\n+  |  _______^\n+4 | |    X1 Y1 Z1\n+  | | ____^_-\n   | ||____|\n-  | |     `X` is a good letter\n-5 | |    X2 Y2 Z2\n-  | |____-______- `Y` is a good letter too\n-  |  ____|\n-  | |\n-6 | |    X3 Y3 Z3\n-  | |________- `Z`\n+  |  |    `X` is a good letter\n+5 |  |   X2 Y2 Z2\n+  |  |___-______- `Y` is a good letter too\n+  |   ___|\n+  |  |\n+6 |  |   X3 Y3 Z3\n+  |  |_______- `Z`\n \n \"#,\n     );\n@@ -570,14 +570,14 @@ error: foo\n  --> test.rs:3:6\n   |\n 3 |      X0 Y0 Z0\n-  |   ______^\n-4 |  |   X1 Y1 Z1\n-  |  |____^____-\n+  |  _______^\n+4 | |    X1 Y1 Z1\n+  | | ____^____-\n   | ||____|\n-  | |     `X` is a good letter\n-5 | |    X2 Y2 Z2\n-6 | |    X3 Y3 Z3\n-  | |___________- `Y` is a good letter too\n+  |  |    `X` is a good letter\n+5 |  |   X2 Y2 Z2\n+6 |  |   X3 Y3 Z3\n+  |  |__________- `Y` is a good letter too\n \n \"#,\n     );\n@@ -941,18 +941,18 @@ error: foo\n   --> test.rs:3:6\n    |\n 3  |      X0 Y0 Z0\n-   |   ______^\n-4  |  |   X1 Y1 Z1\n-   |  |____^____-\n+   |  _______^\n+4  | |    X1 Y1 Z1\n+   | | ____^____-\n    | ||____|\n-   | |     `X` is a good letter\n-5  | |  1\n-6  | |  2\n-7  | |  3\n-...  |\n-15 | |    X2 Y2 Z2\n-16 | |    X3 Y3 Z3\n-   | |___________- `Y` is a good letter too\n+   |  |    `X` is a good letter\n+5  |  | 1\n+6  |  | 2\n+7  |  | 3\n+...   |\n+15 |  |   X2 Y2 Z2\n+16 |  |   X3 Y3 Z3\n+   |  |__________- `Y` is a good letter too\n \n \"#,\n     );\n@@ -996,21 +996,21 @@ error: foo\n   --> test.rs:3:6\n    |\n 3  |      X0 Y0 Z0\n-   |   ______^\n-4  |  | 1\n-5  |  | 2\n-6  |  | 3\n-7  |  |   X1 Y1 Z1\n-   |  |_________-\n+   |  _______^\n+4  | |  1\n+5  | |  2\n+6  | |  3\n+7  | |    X1 Y1 Z1\n+   | | _________-\n 8  | || 4\n 9  | || 5\n 10 | || 6\n 11 | ||   X2 Y2 Z2\n    | ||__________- `Z` is a good letter too\n-...   |\n-15 |  | 10\n-16 |  |   X3 Y3 Z3\n-   |  |_______^ `Y` is a good letter\n+...  |\n+15 | |  10\n+16 | |    X3 Y3 Z3\n+   | |________^ `Y` is a good letter\n \n \"#,\n     );"}, {"sha": "3e840a28a92adb7f9761791dfdbfd9aac2bfaf5f", "filename": "src/test/ui/alloc-error/alloc-error-handler-bad-signature-1.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-1.stderr?ref=ab04080b56448c4bcd7e5b79215a1097e1a9b217", "patch": "@@ -4,16 +4,16 @@ error[E0308]: mismatched types\n LL |    #[alloc_error_handler]\n    |    ---------------------- in this procedural macro expansion\n LL |    fn oom(\n-   |   _^\n-   |  |_|\n+   |  __^\n+   | | _|\n    | ||\n LL | ||     info: &Layout,\n LL | || ) -> ()\n    | ||_______- arguments to this function are incorrect\n-LL | |  {\n-LL | |      loop {}\n-LL | |  }\n-   | |__^ expected `&Layout`, found struct `Layout`\n+LL |  | {\n+LL |  |     loop {}\n+LL |  | }\n+   |  |_^ expected `&Layout`, found struct `Layout`\n    |\n note: function defined here\n   --> $DIR/alloc-error-handler-bad-signature-1.rs:10:4\n@@ -30,16 +30,16 @@ error[E0308]: mismatched types\n LL |    #[alloc_error_handler]\n    |    ---------------------- in this procedural macro expansion\n LL |    fn oom(\n-   |   _^\n-   |  |_|\n+   |  __^\n+   | | _|\n    | ||\n LL | ||     info: &Layout,\n LL | || ) -> ()\n    | ||_______^ expected `!`, found `()`\n-LL | |  {\n-LL | |      loop {}\n-LL | |  }\n-   | |__- expected `!` because of return type\n+LL |  | {\n+LL |  |     loop {}\n+LL |  | }\n+   |  |_- expected `!` because of return type\n    |\n    = note:   expected type `!`\n            found unit type `()`"}, {"sha": "7cbfd55770515181655490f21b5594056fafbcfc", "filename": "src/test/ui/alloc-error/alloc-error-handler-bad-signature-2.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-2.stderr?ref=ab04080b56448c4bcd7e5b79215a1097e1a9b217", "patch": "@@ -4,17 +4,17 @@ error[E0308]: mismatched types\n LL |    #[alloc_error_handler]\n    |    ---------------------- in this procedural macro expansion\n LL |    fn oom(\n-   |   _^\n-   |  |_|\n+   |  __^\n+   | | _|\n    | ||\n LL | ||     info: Layout,\n LL | || ) {\n    | || -\n    | ||_|\n-   | |  arguments to this function are incorrect\n-LL | |      loop {}\n-LL | |  }\n-   | |__^ expected struct `Layout`, found struct `core::alloc::Layout`\n+   |  | arguments to this function are incorrect\n+LL |  |     loop {}\n+LL |  | }\n+   |  |_^ expected struct `Layout`, found struct `core::alloc::Layout`\n    |\n    = note: struct `core::alloc::Layout` and struct `Layout` have similar names, but are actually distinct types\n note: struct `core::alloc::Layout` is defined in crate `core`\n@@ -42,17 +42,17 @@ error[E0308]: mismatched types\n LL |    #[alloc_error_handler]\n    |    ---------------------- in this procedural macro expansion\n LL |    fn oom(\n-   |   _^\n-   |  |_|\n+   |  __^\n+   | | _|\n    | ||\n LL | ||     info: Layout,\n LL | || ) {\n    | || ^\n    | ||_|\n-   | |  expected `!`, found `()`\n-LL | |      loop {}\n-LL | |  }\n-   | |__- expected `!` because of return type\n+   |  | expected `!`, found `()`\n+LL |  |     loop {}\n+LL |  | }\n+   |  |_- expected `!` because of return type\n    |\n    = note:   expected type `!`\n            found unit type `()`"}, {"sha": "034005697b4343b239e27871028732a1f068c5aa", "filename": "src/test/ui/inference/deref-suggestion.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Finference%2Fderef-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Finference%2Fderef-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fderef-suggestion.stderr?ref=ab04080b56448c4bcd7e5b79215a1097e1a9b217", "patch": "@@ -157,19 +157,19 @@ error[E0308]: `if` and `else` have incompatible types\n   --> $DIR/deref-suggestion.rs:69:12\n    |\n LL |        let val = if true {\n-   |   _______________-\n-LL |  |         *a\n-   |  |         -- expected because of this\n-LL |  |     } else if true {\n-   |  |____________^\n+   |  ________________-\n+LL | |          *a\n+   | |          -- expected because of this\n+LL | |      } else if true {\n+   | | ____________^\n LL | ||\n LL | ||         b\n LL | ||     } else {\n LL | ||         &0\n LL | ||     };\n    | ||     ^\n    | ||_____|\n-   | |______`if` and `else` have incompatible types\n+   |  |_____`if` and `else` have incompatible types\n    |        expected `i32`, found `&{integer}`\n \n error: aborting due to 13 previous errors"}, {"sha": "3abeadf9e4bbeb12ebb3b27bbd94ecc749fe03eb", "filename": "src/test/ui/issues/issue-13497-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.stderr?ref=ab04080b56448c4bcd7e5b79215a1097e1a9b217", "patch": "@@ -2,12 +2,12 @@ error[E0515]: cannot return value referencing local variable `rawLines`\n   --> $DIR/issue-13497-2.rs:3:5\n    |\n LL |        rawLines\n-   |   _____^\n-   |  |_____|\n+   |  ______^\n+   | | _____|\n    | ||\n LL | ||         .iter().map(|l| l.trim()).collect()\n    | ||_______________-___________________________^ returns a value referencing data owned by the current function\n-   | |________________|\n+   |  |_______________|\n    |                  `rawLines` is borrowed here\n \n error: aborting due to previous error"}, {"sha": "4caee777a131bb830da6ba797b298b03da760e3f", "filename": "src/test/ui/lint/suggestions.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr?ref=ab04080b56448c4bcd7e5b79215a1097e1a9b217", "patch": "@@ -41,12 +41,12 @@ warning: variable does not need to be mutable\n   --> $DIR/suggestions.rs:54:13\n    |\n LL |            let mut\n-   |   _____________^\n-   |  |_____________|\n+   |  ______________^\n+   | | _____________|\n    | ||\n LL | ||             b = 1;\n    | ||____________-^\n-   |  |____________|\n+   | |_____________|\n    |               help: remove this `mut`\n \n error: const items should never be `#[no_mangle]`"}, {"sha": "4f938670e5e2c88ab76a8ad53c3e3d59f4327a17", "filename": "src/test/ui/return/issue-86188-return-not-in-fn-body.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.stderr?ref=ab04080b56448c4bcd7e5b79215a1097e1a9b217", "patch": "@@ -35,17 +35,17 @@ LL | |     }\n error[E0572]: return statement outside of function body\n   --> $DIR/issue-86188-return-not-in-fn-body.rs:36:10\n    |\n-LL |  / fn main() {\n-LL |  |\n-LL |  |     [(); return || {\n-   |  |__________^\n+LL | /  fn main() {\n+LL | |\n+LL | |      [(); return || {\n+   | | __________^\n LL | ||\n LL | ||\n LL | ||         let tx;\n LL | ||     }];\n    | ||_____^ the return is part of this body...\n-LL |  | }\n-   |  |_- ...not the enclosing function body\n+LL | |  }\n+   | |__- ...not the enclosing function body\n \n error: aborting due to 4 previous errors\n "}, {"sha": "260df85653b156890153e712d62d14032886c4be", "filename": "src/test/ui/suggestions/issue-99240-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Fsuggestions%2Fissue-99240-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Fsuggestions%2Fissue-99240-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-99240-2.stderr?ref=ab04080b56448c4bcd7e5b79215a1097e1a9b217", "patch": "@@ -5,12 +5,12 @@ LL |        Unit,\n    |        ---- enum variant `Alias::Unit` defined here\n ...\n LL |        Alias::\n-   |   _____^\n-   |  |_____|\n+   |  ______^\n+   | | _____|\n    | ||\n LL | ||     Unit();\n    | ||________^_- call expression requires function\n-   | |_________|\n+   |  |________|\n    | \n    |\n help: `Alias::Unit` is a unit enum variant, and does not take parentheses to be constructed"}, {"sha": "b1afa2b0a6b11e6ebab7bd9c4d0825baa39a0950", "filename": "src/test/ui/suggestions/suggest-remove-refs-3.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-remove-refs-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab04080b56448c4bcd7e5b79215a1097e1a9b217/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-remove-refs-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-remove-refs-3.stderr?ref=ab04080b56448c4bcd7e5b79215a1097e1a9b217", "patch": "@@ -2,14 +2,14 @@ error[E0277]: `&&&&&Enumerate<std::slice::Iter<'_, {integer}>>` is not an iterat\n   --> $DIR/suggest-remove-refs-3.rs:6:19\n    |\n LL |        for (i, _) in & & &\n-   |   ___________________^\n-   |  |___________________|\n+   |  ____________________^\n+   | | ___________________|\n    | ||\n LL | ||         & &v\n    | ||___________- help: consider removing 5 leading `&`-references\n-LL | |          .iter()\n-LL | |          .enumerate() {\n-   | |_____________________^ `&&&&&Enumerate<std::slice::Iter<'_, {integer}>>` is not an iterator\n+LL |  |         .iter()\n+LL |  |         .enumerate() {\n+   |  |____________________^ `&&&&&Enumerate<std::slice::Iter<'_, {integer}>>` is not an iterator\n    |\n    = help: the trait `Iterator` is not implemented for `&&&&&Enumerate<std::slice::Iter<'_, {integer}>>`\n    = note: required for `&&&&&Enumerate<std::slice::Iter<'_, {integer}>>` to implement `IntoIterator`"}]}