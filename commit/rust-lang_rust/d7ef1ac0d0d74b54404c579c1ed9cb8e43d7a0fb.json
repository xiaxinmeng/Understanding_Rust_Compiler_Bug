{"sha": "d7ef1ac0d0d74b54404c579c1ed9cb8e43d7a0fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ZWYxYWMwZDBkNzRiNTQ0MDRjNTc5YzFlZDljYjhlNDNkN2EwZmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-07-04T22:09:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-04T22:09:36Z"}, "message": "Auto merge of #34639 - dzamlo:master, r=michaelwoerister\n\nUse lazy iterator in vec/slice gdb pretty printers", "tree": {"sha": "5d74eedc6ab8fee81444e78bbf2f0e21d65919ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d74eedc6ab8fee81444e78bbf2f0e21d65919ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7ef1ac0d0d74b54404c579c1ed9cb8e43d7a0fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7ef1ac0d0d74b54404c579c1ed9cb8e43d7a0fb", "html_url": "https://github.com/rust-lang/rust/commit/d7ef1ac0d0d74b54404c579c1ed9cb8e43d7a0fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7ef1ac0d0d74b54404c579c1ed9cb8e43d7a0fb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7cf491d22dbc2b97021e6eaa34eba8588d2ac86", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7cf491d22dbc2b97021e6eaa34eba8588d2ac86", "html_url": "https://github.com/rust-lang/rust/commit/e7cf491d22dbc2b97021e6eaa34eba8588d2ac86"}, {"sha": "5de76afcfda5d167ece05cf020dc77c5e3ea4a3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5de76afcfda5d167ece05cf020dc77c5e3ea4a3c", "html_url": "https://github.com/rust-lang/rust/commit/5de76afcfda5d167ece05cf020dc77c5e3ea4a3c"}], "stats": {"total": 86, "additions": 79, "deletions": 7}, "files": [{"sha": "33f22e8579664815349f342aa78794639de159e1", "filename": "src/etc/gdb_rust_pretty_printing.py", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d7ef1ac0d0d74b54404c579c1ed9cb8e43d7a0fb/src%2Fetc%2Fgdb_rust_pretty_printing.py", "raw_url": "https://github.com/rust-lang/rust/raw/d7ef1ac0d0d74b54404c579c1ed9cb8e43d7a0fb/src%2Fetc%2Fgdb_rust_pretty_printing.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_rust_pretty_printing.py?ref=d7ef1ac0d0d74b54404c579c1ed9cb8e43d7a0fb", "patch": "@@ -211,15 +211,12 @@ def to_string(self):\n                 (\"(len: %i)\" % length))\n \n     def children(self):\n-        cs = []\n         (length, data_ptr) = rustpp.extract_length_and_ptr_from_slice(self.__val)\n         assert data_ptr.type.get_dwarf_type_kind() == rustpp.DWARF_TYPE_CODE_PTR\n         raw_ptr = data_ptr.get_wrapped_value()\n \n         for index in range(0, length):\n-            cs.append((str(index), (raw_ptr + index).dereference()))\n-\n-        return cs\n+            yield (str(index), (raw_ptr + index).dereference())\n \n \n class RustStringSlicePrinter:\n@@ -245,12 +242,10 @@ def to_string(self):\n                 (\"(len: %i, cap: %i)\" % (length, cap)))\n \n     def children(self):\n-        cs = []\n         (length, data_ptr, cap) = rustpp.extract_length_ptr_and_cap_from_std_vec(self.__val)\n         gdb_ptr = data_ptr.get_wrapped_value()\n         for index in range(0, length):\n-            cs.append((str(index), (gdb_ptr + index).dereference()))\n-        return cs\n+            yield (str(index), (gdb_ptr + index).dereference())\n \n \n class RustStdStringPrinter:"}, {"sha": "bb5385235230702be34bde4f397005f5c0d77f4b", "filename": "src/test/debuginfo/pretty-huge-vec.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/d7ef1ac0d0d74b54404c579c1ed9cb8e43d7a0fb/src%2Ftest%2Fdebuginfo%2Fpretty-huge-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7ef1ac0d0d74b54404c579c1ed9cb8e43d7a0fb/src%2Ftest%2Fdebuginfo%2Fpretty-huge-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpretty-huge-vec.rs?ref=d7ef1ac0d0d74b54404c579c1ed9cb8e43d7a0fb", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2013-2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-windows failing on win32 bot\n+// ignore-freebsd: gdb package too new\n+// ignore-android: FIXME(#10381)\n+// compile-flags:-g\n+// min-gdb-version 7.7\n+// min-lldb-version: 310\n+\n+// === GDB TESTS ===================================================================================\n+\n+// gdb-command: run\n+\n+// gdb-command: print vec\n+// gdb-check:$1 = Vec<u8>(len: 1000000000, cap: 1000000000) = {[...]...}\n+\n+// gdb-command: print slice\n+// gdb-check:$2 = &[u8](len: 1000000000) = {[...]...}\n+\n+\n+#![allow(unused_variables)]\n+\n+fn main() {\n+\n+    // Vec\n+    let mut vec: Vec<u8> = Vec::with_capacity(1_000_000_000);\n+    unsafe{ vec.set_len(1_000_000_000) }\n+    let slice = &vec[..];\n+\n+    zzz(); // #break\n+}\n+\n+fn zzz() { () }"}, {"sha": "75169658fe6a23264f74fa3ce238dc2b02ada032", "filename": "src/test/debuginfo/pretty-uninitialized-vec.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/d7ef1ac0d0d74b54404c579c1ed9cb8e43d7a0fb/src%2Ftest%2Fdebuginfo%2Fpretty-uninitialized-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7ef1ac0d0d74b54404c579c1ed9cb8e43d7a0fb/src%2Ftest%2Fdebuginfo%2Fpretty-uninitialized-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpretty-uninitialized-vec.rs?ref=d7ef1ac0d0d74b54404c579c1ed9cb8e43d7a0fb", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2013-2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-windows failing on win32 bot\n+// ignore-freebsd: gdb package too new\n+// ignore-android: FIXME(#10381)\n+// compile-flags:-g\n+// min-gdb-version 7.7\n+// min-lldb-version: 310\n+\n+// === GDB TESTS ===================================================================================\n+\n+// gdb-command: run\n+\n+// gdb-command: print vec\n+// gdb-check:$1 = Vec<i32>(len: [...], cap: [...])[...]\n+\n+\n+#![allow(unused_variables)]\n+\n+fn main() {\n+\n+    let vec;\n+    zzz(); // #break\n+    vec = vec![0];\n+\n+}\n+\n+fn zzz() { () }"}]}