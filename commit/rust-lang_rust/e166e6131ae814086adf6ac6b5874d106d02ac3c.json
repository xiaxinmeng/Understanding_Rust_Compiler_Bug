{"sha": "e166e6131ae814086adf6ac6b5874d106d02ac3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNjZlNjEzMWFlODE0MDg2YWRmNmFjNmI1ODc0ZDEwNmQwMmFjM2M=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-08-26T10:05:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-26T10:05:23Z"}, "message": "Rollup merge of #53428 - RalfJung:libtest-terse, r=KodrAus\n\nlibtest terse format: show how far in we are\n\nSo for example `./x.py test src/libcore` looks like\n```\nrunning 881 tests\n.................................................................................................... 100/881\n.................................................................................................... 200/881\n.................................................................................................... 300/881\n.............................................................i.i.................................... 400/881\n.................................................................................................... 500/881\n.................................................................................................... 600/881\n.................................................................................................... 700/881\n.................................................................................................... 800/881\n.................................................................................\ntest result: ok. 879 passed; 0 failed; 2 ignored; 0 measured; 0 filtered out\n```\nWhen I am waiting for 3500 ui tests to complete, I am often missing some sense of how far in these 3500 it is.\n\nGetting the total count in `write_run_start` is a bit hacky; I did that to not change the \"public interface\" of the formatters. I can also give them an extra argument in their constructor so that they know from the beginning how many tests there will be. Would you prefer that? (I think I would, but I wanted to get feedback first.)", "tree": {"sha": "8d2485b520caec5b0bbf2173b97f5087ca716fec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d2485b520caec5b0bbf2173b97f5087ca716fec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e166e6131ae814086adf6ac6b5874d106d02ac3c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbgntjCRBK7hj4Ov3rIwAAdHIIAHlyP2kmgJ9CgYqhB8aJksPs\njmbNxMDT9jXGkAlFflOJtA3IVSzkvIg0YHp/6NzG5lG4xuklqgNILAVklOvLWYDp\nX02IWY4cDLGgisWe+2DkCN5AGT6NPPTw1O1kNsJIkm16gVdm7IkvNxbEHt334jYs\nKwxwgDo41PECCnjA/eEVMUbe4GmDtMqN6tIbyGHQU+m6ppPv1ufLDl+KBR7YLEGX\nkZvE7CAHgIt0NfjaxOqoKG5Qh3vUSgDNnKw8vJp3gNMQzHx2c9eCbmirOJ62qYnH\nCtlr27hsCtEsoHAG6AV25PC38+nCKdKKfcKS39EOTZZpQPCgeM0vGkeZsPGf0uo=\n=/w15\n-----END PGP SIGNATURE-----\n", "payload": "tree 8d2485b520caec5b0bbf2173b97f5087ca716fec\nparent 49944aea3f8baa8645380e3a0cde3d87e18289bf\nparent ffbb4078015ea0153e04991efa5565524cba0a8f\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1535277923 +0200\ncommitter GitHub <noreply@github.com> 1535277923 +0200\n\nRollup merge of #53428 - RalfJung:libtest-terse, r=KodrAus\n\nlibtest terse format: show how far in we are\n\nSo for example `./x.py test src/libcore` looks like\n```\nrunning 881 tests\n.................................................................................................... 100/881\n.................................................................................................... 200/881\n.................................................................................................... 300/881\n.............................................................i.i.................................... 400/881\n.................................................................................................... 500/881\n.................................................................................................... 600/881\n.................................................................................................... 700/881\n.................................................................................................... 800/881\n.................................................................................\ntest result: ok. 879 passed; 0 failed; 2 ignored; 0 measured; 0 filtered out\n```\nWhen I am waiting for 3500 ui tests to complete, I am often missing some sense of how far in these 3500 it is.\n\nGetting the total count in `write_run_start` is a bit hacky; I did that to not change the \"public interface\" of the formatters. I can also give them an extra argument in their constructor so that they know from the beginning how many tests there will be. Would you prefer that? (I think I would, but I wanted to get feedback first.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e166e6131ae814086adf6ac6b5874d106d02ac3c", "html_url": "https://github.com/rust-lang/rust/commit/e166e6131ae814086adf6ac6b5874d106d02ac3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e166e6131ae814086adf6ac6b5874d106d02ac3c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49944aea3f8baa8645380e3a0cde3d87e18289bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/49944aea3f8baa8645380e3a0cde3d87e18289bf", "html_url": "https://github.com/rust-lang/rust/commit/49944aea3f8baa8645380e3a0cde3d87e18289bf"}, {"sha": "ffbb4078015ea0153e04991efa5565524cba0a8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffbb4078015ea0153e04991efa5565524cba0a8f", "html_url": "https://github.com/rust-lang/rust/commit/ffbb4078015ea0153e04991efa5565524cba0a8f"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "6f7dfee53facc423fa5919c854be3c9c00a26043", "filename": "src/libtest/formatters/terse.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e166e6131ae814086adf6ac6b5874d106d02ac3c/src%2Flibtest%2Fformatters%2Fterse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e166e6131ae814086adf6ac6b5874d106d02ac3c/src%2Flibtest%2Fformatters%2Fterse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Fformatters%2Fterse.rs?ref=e166e6131ae814086adf6ac6b5874d106d02ac3c", "patch": "@@ -18,6 +18,7 @@ pub(crate) struct TerseFormatter<T> {\n     max_name_len: usize,\n \n     test_count: usize,\n+    total_test_count: usize,\n }\n \n impl<T: Write> TerseFormatter<T> {\n@@ -33,6 +34,7 @@ impl<T: Write> TerseFormatter<T> {\n             max_name_len,\n             is_multithreaded,\n             test_count: 0,\n+            total_test_count: 0, // initialized later, when write_run_start is called\n         }\n     }\n \n@@ -66,7 +68,8 @@ impl<T: Write> TerseFormatter<T> {\n             // we insert a new line every 100 dots in order to flush the\n             // screen when dealing with line-buffered output (e.g. piping to\n             // `stamp` in the rust CI).\n-            self.write_plain(\"\\n\")?;\n+            let out = format!(\" {}/{}\\n\", self.test_count+1, self.total_test_count);\n+            self.write_plain(&out)?;\n         }\n \n         self.test_count += 1;\n@@ -160,6 +163,7 @@ impl<T: Write> TerseFormatter<T> {\n \n impl<T: Write> OutputFormatter for TerseFormatter<T> {\n     fn write_run_start(&mut self, test_count: usize) -> io::Result<()> {\n+        self.total_test_count = test_count;\n         let noun = if test_count != 1 { \"tests\" } else { \"test\" };\n         self.write_plain(&format!(\"\\nrunning {} {}\\n\", test_count, noun))\n     }"}]}