{"sha": "35118568a6a9d81c0ce0ad1c9f579b7da1f6022d", "node_id": "C_kwDOAAsO6NoAKDM1MTE4NTY4YTZhOWQ4MWMwY2UwYWQxYzlmNTc5YjdkYTFmNjAyMmQ", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-19T22:07:18Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-19T22:07:18Z"}, "message": "remove a type string comparison in `check_str_addition`", "tree": {"sha": "eda1d58a0a3d69bd4ccf5dcbe1b15ac8780cf887", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eda1d58a0a3d69bd4ccf5dcbe1b15ac8780cf887"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35118568a6a9d81c0ce0ad1c9f579b7da1f6022d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35118568a6a9d81c0ce0ad1c9f579b7da1f6022d", "html_url": "https://github.com/rust-lang/rust/commit/35118568a6a9d81c0ce0ad1c9f579b7da1f6022d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35118568a6a9d81c0ce0ad1c9f579b7da1f6022d/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "475aec11886250ec93fbb6e8e1e3dbd4b35dfc89", "url": "https://api.github.com/repos/rust-lang/rust/commits/475aec11886250ec93fbb6e8e1e3dbd4b35dfc89", "html_url": "https://github.com/rust-lang/rust/commit/475aec11886250ec93fbb6e8e1e3dbd4b35dfc89"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "322b8f1e74944310e67f18accad20fe888466380", "filename": "compiler/rustc_typeck/src/check/op.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/35118568a6a9d81c0ce0ad1c9f579b7da1f6022d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35118568a6a9d81c0ce0ad1c9f579b7da1f6022d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs?ref=35118568a6a9d81c0ce0ad1c9f579b7da1f6022d", "patch": "@@ -631,18 +631,19 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let rm_borrow_msg = \"remove the borrow to obtain an owned `String`\";\n         let to_owned_msg = \"create an owned `String` from a string reference\";\n \n-        let string_type = self.tcx.get_diagnostic_item(sym::String);\n-        let is_std_string = |ty: Ty<'tcx>| match ty.ty_adt_def() {\n-            Some(ty_def) => Some(ty_def.did()) == string_type,\n-            None => false,\n+        let is_std_string = |ty: Ty<'tcx>| {\n+            ty.ty_adt_def()\n+                .map_or(false, |ty_def| self.tcx.is_diagnostic_item(sym::String, ty_def.did()))\n         };\n \n         match (lhs_ty.kind(), rhs_ty.kind()) {\n             (&Ref(_, l_ty, _), &Ref(_, r_ty, _)) // &str or &String + &str, &String or &&str\n-                if (*l_ty.kind() == Str || is_std_string(l_ty)) && (\n-                        *r_ty.kind() == Str || is_std_string(r_ty) ||\n-                        &format!(\"{:?}\", rhs_ty) == \"&&str\"\n-                    ) =>\n+                if (*l_ty.kind() == Str || is_std_string(l_ty))\n+                    && (*r_ty.kind() == Str\n+                        || is_std_string(r_ty)\n+                        || matches!(\n+                            r_ty.kind(), Ref(_, inner_ty, _) if *inner_ty.kind() == Str\n+                        )) =>\n             {\n                 if let IsAssign::No = is_assign { // Do not supply this message if `&str += &str`\n                     err.span_label(op.span, \"`+` cannot be used to concatenate two `&str` strings\");"}]}