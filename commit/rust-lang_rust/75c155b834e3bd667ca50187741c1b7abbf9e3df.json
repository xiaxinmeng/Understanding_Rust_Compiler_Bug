{"sha": "75c155b834e3bd667ca50187741c1b7abbf9e3df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1YzE1NWI4MzRlM2JkNjY3Y2E1MDE4Nzc0MWMxYjdhYmJmOWUzZGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-06T23:31:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-06T23:31:27Z"}, "message": "Auto merge of #35641 - ahmedcharles:install, r=alexcrichton\n\nrustbuild: Add install target. #34675\n\nIt just prints to the screen currently.\n\nr? @alexcrichton\n\nI'm working on the next commit to actually have it install.", "tree": {"sha": "1972347705f28c37c51f35e125f96ca783ac142a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1972347705f28c37c51f35e125f96ca783ac142a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75c155b834e3bd667ca50187741c1b7abbf9e3df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75c155b834e3bd667ca50187741c1b7abbf9e3df", "html_url": "https://github.com/rust-lang/rust/commit/75c155b834e3bd667ca50187741c1b7abbf9e3df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75c155b834e3bd667ca50187741c1b7abbf9e3df/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad19c32a58a1c5502e2f63350f72a2479c219498", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad19c32a58a1c5502e2f63350f72a2479c219498", "html_url": "https://github.com/rust-lang/rust/commit/ad19c32a58a1c5502e2f63350f72a2479c219498"}, {"sha": "fa230825c1da8605d51a2ef8d6b672b60baeb692", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa230825c1da8605d51a2ef8d6b672b60baeb692", "html_url": "https://github.com/rust-lang/rust/commit/fa230825c1da8605d51a2ef8d6b672b60baeb692"}], "stats": {"total": 98, "additions": 91, "deletions": 7}, "files": [{"sha": "a0901bde5a5f7d95c61c3f44c1cdb1c5e6dc398f", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/75c155b834e3bd667ca50187741c1b7abbf9e3df/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75c155b834e3bd667ca50187741c1b7abbf9e3df/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=75c155b834e3bd667ca50187741c1b7abbf9e3df", "patch": "@@ -79,6 +79,9 @@ pub struct Config {\n     // Fallback musl-root for all targets\n     pub musl_root: Option<PathBuf>,\n     pub prefix: Option<String>,\n+    pub docdir: Option<String>,\n+    pub libdir: Option<String>,\n+    pub mandir: Option<String>,\n     pub codegen_tests: bool,\n     pub nodejs: Option<PathBuf>,\n }\n@@ -359,6 +362,15 @@ impl Config {\n                 \"CFG_PREFIX\" => {\n                     self.prefix = Some(value.to_string());\n                 }\n+                \"CFG_DOCDIR\" => {\n+                    self.docdir = Some(value.to_string());\n+                }\n+                \"CFG_LIBDIR\" => {\n+                    self.libdir = Some(value.to_string());\n+                }\n+                \"CFG_MANDIR\" => {\n+                    self.mandir = Some(value.to_string());\n+                }\n                 \"CFG_LLVM_ROOT\" if value.len() > 0 => {\n                     let target = self.target_config.entry(self.build.clone())\n                                      .or_insert(Target::default());"}, {"sha": "465abf15750fa4b54c05313519177c35147856e0", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/75c155b834e3bd667ca50187741c1b7abbf9e3df/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75c155b834e3bd667ca50187741c1b7abbf9e3df/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=75c155b834e3bd667ca50187741c1b7abbf9e3df", "patch": "@@ -27,7 +27,7 @@ use {Build, Compiler};\n use util::{cp_r, libdir, is_dylib, cp_filtered, copy};\n use regex::{RegexSet, quote};\n \n-fn package_vers(build: &Build) -> &str {\n+pub fn package_vers(build: &Build) -> &str {\n     match &build.config.channel[..] {\n         \"stable\" => &build.release,\n         \"beta\" => \"beta\",\n@@ -40,7 +40,7 @@ fn distdir(build: &Build) -> PathBuf {\n     build.out.join(\"dist\")\n }\n \n-fn tmpdir(build: &Build) -> PathBuf {\n+pub fn tmpdir(build: &Build) -> PathBuf {\n     build.out.join(\"tmp/dist\")\n }\n \n@@ -418,7 +418,7 @@ fn chmod(_path: &Path, _perms: u32) {}\n \n // We have to run a few shell scripts, which choke quite a bit on both `\\`\n // characters and on `C:\\` paths, so normalize both of them away.\n-fn sanitize_sh(path: &Path) -> String {\n+pub fn sanitize_sh(path: &Path) -> String {\n     let path = path.to_str().unwrap().replace(\"\\\\\", \"/\");\n     return change_drive(&path).unwrap_or(path);\n "}, {"sha": "9bc5a7c00abafca26975f7925b882f116c197846", "filename": "src/bootstrap/install.rs", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/75c155b834e3bd667ca50187741c1b7abbf9e3df/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75c155b834e3bd667ca50187741c1b7abbf9e3df/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=75c155b834e3bd667ca50187741c1b7abbf9e3df", "patch": "@@ -0,0 +1,61 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! Implementation of the install aspects of the compiler.\n+//!\n+//! This module is responsible for installing the standard library,\n+//! compiler, and documentation.\n+\n+use std::fs;\n+use std::borrow::Cow;\n+use std::path::Path;\n+use std::process::Command;\n+\n+use Build;\n+use dist::{package_vers, sanitize_sh, tmpdir};\n+\n+/// Installs everything.\n+pub fn install(build: &Build, stage: u32, host: &str) {\n+    let prefix = build.config.prefix.as_ref().clone().map(|x| Path::new(x))\n+        .unwrap_or(Path::new(\"/usr/local\"));\n+    let docdir = build.config.docdir.as_ref().clone().map(|x| Cow::Borrowed(Path::new(x)))\n+        .unwrap_or(Cow::Owned(prefix.join(\"share/doc/rust\")));\n+    let libdir = build.config.libdir.as_ref().clone().map(|x| Cow::Borrowed(Path::new(x)))\n+        .unwrap_or(Cow::Owned(prefix.join(\"lib\")));\n+    let mandir = build.config.mandir.as_ref().clone().map(|x| Cow::Borrowed(Path::new(x)))\n+        .unwrap_or(Cow::Owned(prefix.join(\"share/man\")));\n+    let empty_dir = build.out.join(\"tmp/empty_dir\");\n+    t!(fs::create_dir_all(&empty_dir));\n+    if build.config.docs {\n+        install_sh(&build, \"docs\", \"rust-docs\", stage, host, prefix,\n+                   &docdir, &libdir, &mandir, &empty_dir);\n+    }\n+    install_sh(&build, \"std\", \"rust-std\", stage, host, prefix,\n+               &docdir, &libdir, &mandir, &empty_dir);\n+    install_sh(&build, \"rustc\", \"rustc\", stage, host, prefix,\n+               &docdir, &libdir, &mandir, &empty_dir);\n+    t!(fs::remove_dir_all(&empty_dir));\n+}\n+\n+fn install_sh(build: &Build, package: &str, name: &str, stage: u32, host: &str,\n+              prefix: &Path, docdir: &Path, libdir: &Path, mandir: &Path, empty_dir: &Path) {\n+    println!(\"Install {} stage{} ({})\", package, stage, host);\n+    let package_name = format!(\"{}-{}-{}\", name, package_vers(build), host);\n+\n+    let mut cmd = Command::new(\"sh\");\n+    cmd.current_dir(empty_dir)\n+       .arg(sanitize_sh(&tmpdir(build).join(&package_name).join(\"install.sh\")))\n+       .arg(format!(\"--prefix={}\", sanitize_sh(prefix)))\n+       .arg(format!(\"--docdir={}\", sanitize_sh(docdir)))\n+       .arg(format!(\"--libdir={}\", sanitize_sh(libdir)))\n+       .arg(format!(\"--mandir={}\", sanitize_sh(mandir)))\n+       .arg(\"--disable-ldconfig\");\n+    build.run(&mut cmd);\n+}"}, {"sha": "9ffc433cd78e9c1c519aa4f28e0ae0de085a272a", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/75c155b834e3bd667ca50187741c1b7abbf9e3df/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75c155b834e3bd667ca50187741c1b7abbf9e3df/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=75c155b834e3bd667ca50187741c1b7abbf9e3df", "patch": "@@ -62,6 +62,7 @@ mod config;\n mod dist;\n mod doc;\n mod flags;\n+mod install;\n mod native;\n mod sanity;\n mod step;\n@@ -453,6 +454,8 @@ impl Build {\n                 DistStd { compiler } => dist::std(self, &compiler, target.target),\n                 DistSrc { _dummy } => dist::rust_src(self),\n \n+                Install { stage } => install::install(self, stage, target.target),\n+\n                 DebuggerScripts { stage } => {\n                     let compiler = Compiler::new(stage, target.target);\n                     dist::debugger_scripts(self,"}, {"sha": "61d0e2540741d15df75f8820a9699c9c466b2901", "filename": "src/bootstrap/mk/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75c155b834e3bd667ca50187741c1b7abbf9e3df/src%2Fbootstrap%2Fmk%2FMakefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/75c155b834e3bd667ca50187741c1b7abbf9e3df/src%2Fbootstrap%2Fmk%2FMakefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmk%2FMakefile.in?ref=75c155b834e3bd667ca50187741c1b7abbf9e3df", "patch": "@@ -51,6 +51,8 @@ check-cargotest:\n \t$(Q)$(BOOTSTRAP) --step check-cargotest\n dist:\n \t$(Q)$(BOOTSTRAP) --step dist\n+install:\n+\t$(Q)$(BOOTSTRAP) --step install\n tidy:\n \t$(Q)$(BOOTSTRAP) --step check-tidy --stage 0\n "}, {"sha": "22539b31ef2bdef4aee2de0eff566b4be179af20", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/75c155b834e3bd667ca50187741c1b7abbf9e3df/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75c155b834e3bd667ca50187741c1b7abbf9e3df/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=75c155b834e3bd667ca50187741c1b7abbf9e3df", "patch": "@@ -140,6 +140,9 @@ macro_rules! targets {\n             (dist_std, DistStd { compiler: Compiler<'a> }),\n             (dist_src, DistSrc { _dummy: () }),\n \n+            // install target\n+            (install, Install { stage: u32 }),\n+\n             // Misc targets\n             (android_copy_libs, AndroidCopyLibs { compiler: Compiler<'a> }),\n         }\n@@ -249,8 +252,7 @@ fn top_level(build: &Build) -> Vec<Step> {\n         }\n     }\n \n-    return targets\n-\n+    targets\n }\n \n fn add_steps<'a>(build: &'a Build,\n@@ -467,7 +469,7 @@ impl<'a> Step<'a> {\n                         self.dist(stage),\n                     ]);\n                 }\n-                return base\n+                base\n             }\n             Source::CheckLinkcheck { stage } => {\n                 vec![self.tool_linkchecker(stage), self.doc(stage)]\n@@ -590,7 +592,11 @@ impl<'a> Step<'a> {\n                         base.push(target.dist_std(compiler));\n                     }\n                 }\n-                return base\n+                base\n+            }\n+\n+            Source::Install { stage } => {\n+                vec![self.dist(stage)]\n             }\n \n             Source::AndroidCopyLibs { compiler } => {"}]}