{"sha": "64716d529a9febcb035fabd444c32872aa55fafe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NzE2ZDUyOWE5ZmViY2IwMzVmYWJkNDQ0YzMyODcyYWE1NWZhZmU=", "commit": {"author": {"name": "Jakub Wieczorek", "email": "jakub@jakub.cc", "date": "2014-10-16T19:40:21Z"}, "committer": {"name": "Jakub Wieczorek", "email": "jakub@jakub.cc", "date": "2014-10-16T22:27:12Z"}, "message": "Add tests for a few fixed issues", "tree": {"sha": "f71537b42120dbcb0af4f6f043056882730b8b43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f71537b42120dbcb0af4f6f043056882730b8b43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64716d529a9febcb035fabd444c32872aa55fafe", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64716d529a9febcb035fabd444c32872aa55fafe", "html_url": "https://github.com/rust-lang/rust/commit/64716d529a9febcb035fabd444c32872aa55fafe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64716d529a9febcb035fabd444c32872aa55fafe/comments", "author": null, "committer": null, "parents": [{"sha": "f3d46bda657d71610b4db74792fe66d407176d46", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3d46bda657d71610b4db74792fe66d407176d46", "html_url": "https://github.com/rust-lang/rust/commit/f3d46bda657d71610b4db74792fe66d407176d46"}], "stats": {"total": 366, "additions": 363, "deletions": 3}, "files": [{"sha": "8b3ae3028e3fd27cd8249180a088b2536a01d6dc", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -557,7 +557,7 @@ impl<'a> ExtCtxt<'a> {\n         self.recursion_count += 1;\n         if self.recursion_count > self.ecfg.recursion_limit {\n             self.span_fatal(ei.call_site,\n-                            format!(\"Recursion limit reached while expanding the macro `{}`\",\n+                            format!(\"recursion limit reached while expanding the macro `{}`\",\n                                     ei.callee.name).as_slice());\n         }\n "}, {"sha": "67a7cdf1024814cc923986a2966edc12764722e9", "filename": "src/test/compile-fail/infinite-macro-expansion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Finfinite-macro-expansion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Finfinite-macro-expansion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finfinite-macro-expansion.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -12,7 +12,7 @@\n \n macro_rules! recursive(\n       () => (\n-                recursive!() //~ ERROR Recursion limit reached while expanding the macro `recursive`\n+                recursive!() //~ ERROR recursion limit reached while expanding the macro `recursive`\n               )\n       )\n "}, {"sha": "fb6d1d4fc6efe9ecfe06259debfde2bc79197e72", "filename": "src/test/compile-fail/issue-13847.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-13847.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-13847.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-13847.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    return.is_failure\n+//~^ ERROR attempted access of field `is_failure` on type `!`, but no field with that name was found\n+}"}, {"sha": "f1c0b622ae4373391e1c73df7d4f4a2fbbd2272b", "filename": "src/test/compile-fail/issue-15207.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-15207.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-15207.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15207.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    loop { break.push(1); } //~ ERROR type `!` does not implement any method in scope named `push`\n+}"}, {"sha": "dbd3336962b76296709557e20a671a29ab779902", "filename": "src/test/compile-fail/issue-16048.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-16048.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-16048.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16048.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait NoLifetime {\n+    fn get<'p, T : Test<'p>>(&self) -> T;\n+}\n+\n+trait Test<'p> {\n+    fn new(buf: &'p mut [u8]) -> Self;\n+}\n+\n+struct Foo<'a> {\n+    buf: &'a mut [u8],\n+}\n+\n+impl<'a> Test<'a> for Foo<'a> {\n+    fn new(buf: &'a mut [u8]) -> Foo<'a> {\n+        Foo { buf: buf }\n+    }\n+}\n+\n+impl<'a> NoLifetime for Foo<'a> {\n+    fn get<'p, T : Test<'a>>(&self) -> T {\n+//~^ ERROR lifetime parameters or bounds on method `get` do not match the trait declaration\n+        return *self as T; //~ ERROR non-scalar cast: `Foo<'a>` as `T`\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "5adcd7c2bb6d7b219f514468b3cb6a6f25bfa1a2", "filename": "src/test/compile-fail/issue-16098.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-16098.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-16098.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16098.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(macro_rules)]\n+\n+macro_rules! prob1 {\n+    (0) => {\n+        0\n+    };\n+    ($n:expr) => {\n+        if ($n % 3 == 0) || ($n % 5 == 0) {\n+            $n + prob1!($n - 1); //~ ERROR recursion limit reached while expanding the macro `prob1`\n+        } else {\n+            prob1!($n - 1);\n+        }\n+    };\n+}\n+\n+fn main() {\n+    println!(\"Problem 1: {}\", prob1!(1000));\n+}"}, {"sha": "1e69fb7bfc943e6898e2c1f98f14291a7546229c", "filename": "src/test/compile-fail/issue-16562.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-16562.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-16562.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16562.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait MatrixShape {}\n+\n+struct Col<D, C> {\n+    data: D,\n+    col: C,\n+}\n+\n+impl<T, M: MatrixShape> Collection for Col<M, uint> {\n+//~^ ERROR unable to infer enough type information to locate the impl of the trait\n+//~^^ NOTE the trait `core::kinds::Sized` must be implemented because it is required by\n+    fn len(&self) -> uint {\n+        unimplemented!()\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "fc15801eb75b953ddd87dc3d9e558ba6211023a3", "filename": "src/test/compile-fail/issue-16709.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-16709.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-16709.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16709.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::ptr;\n+use std::raw;\n+\n+fn main() {\n+  unsafe {\n+    let nil: *const u8 = ptr::null();\n+    let slice: raw::Slice<u8> =\n+      Slice { //~ ERROR use of trait `Slice` as a struct constructor [E0159]\n+        data: nil,\n+        len:  0,\n+      };\n+  }\n+}"}, {"sha": "012dc01ca97a8b13c157fd2426909c3f25d5e561", "filename": "src/test/compile-fail/issue-16747.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-16747.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-16747.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16747.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait ListItem<'a> {\n+    fn list_name() -> &'a str;\n+}\n+\n+struct List<'a, T: ListItem<'a>> {\n+//~^ ERROR the parameter type `T` may not live long enough; consider adding an explicit lifetime bo\n+//~^^ NOTE ...so that the reference type `&'a [T]` does not outlive the data it points at\n+    slice: &'a [T]\n+}\n+\n+impl<'a, T: ListItem<'a>> Collection for List<'a, T> {\n+    fn len(&self) -> uint {\n+        0\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "1efc78e13b83f5d5004e440df764abd1f939ee30", "filename": "src/test/compile-fail/issue-17025.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-17025.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-17025.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17025.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum A {\n+    B(char),\n+    C([Box<A>]),\n+}\n+\n+fn c(c:char) -> A {\n+    B(c) //~ ERROR cannot move a value of type A: the size of A cannot be statically determined\n+}\n+\n+pub fn main() {}"}, {"sha": "ca611c625770d6d5f7a27cfb3bcc227ef5838eaf", "filename": "src/test/compile-fail/issue-17450.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-17450.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-17450.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17450.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(dead_code)]\n+\n+static mut x: int = 3;\n+static mut y: int = unsafe {\n+    x\n+//~^ ERROR cannot refer to other statics by value, use the address-of operator or a constant instea\n+};\n+\n+fn main() {}"}, {"sha": "635a184a9d30cc83cb2f95d41799f35df52be9cb", "filename": "src/test/compile-fail/issue-17636.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-17636.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Fcompile-fail%2Fissue-17636.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17636.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait MyItem<T> {}\n+impl<T> MyItem<T> for T {}\n+\n+pub fn build_archive<'a, I: MyItem<&'a (|&uint|:'a)>>(files: I) {}\n+\n+fn main() {\n+    build_archive(&(|_| { }));\n+//~^ ERROR unable to infer enough type information to locate the impl of the trait `MyItem<&|&uint|\n+}"}, {"sha": "7fab36bd64ec7b2c6c40ab36d6ff174f267cb468", "filename": "src/test/run-pass/issue-13105.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fissue-13105.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fissue-13105.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-13105.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo {\n+    fn quux(u8) {}\n+}\n+\n+fn main() {}"}, {"sha": "221115a0869a58047b2f187911333fd5d4000bd4", "filename": "src/test/run-pass/issue-13837.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fissue-13837.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fissue-13837.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-13837.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+static TEST_VALUE : *const [int, ..2] = 0x1234 as *const [int, ..2];\n+\n+fn main() {}"}, {"sha": "fbbd40895b283d126930b6e164ce673dba9bf00c", "filename": "src/test/run-pass/issue-15261.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fissue-15261.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fissue-15261.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15261.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+static mut n_mut: uint = 0;\n+\n+static n: &'static uint = unsafe{ &n_mut };\n+\n+fn main() {}"}, {"sha": "48ea3a93296e3194420f2e9c79c05e23c907cade", "filename": "src/test/run-pass/issue-16256.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fissue-16256.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fissue-16256.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16256.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let mut buf = Vec::new();\n+    |c: u8| buf.push(c);\n+}"}, {"sha": "df959fa0bda9391ce9a5d3c2df5519c4bf992dba", "filename": "src/test/run-pass/issue-16596.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fissue-16596.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fissue-16596.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16596.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait MatrixRow {}\n+\n+struct Mat;\n+\n+impl<'a> MatrixRow for &'a Mat {}\n+\n+struct Rows<M: MatrixRow> {\n+    mat: M,\n+}\n+\n+impl<'a> Iterator<()> for Rows<&'a Mat> {\n+    fn next(&mut self) -> Option<()> {\n+        unimplemented!()\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "f53bedc6daca55a7975843208bb0424e0dfbb4e6", "filename": "src/test/run-pass/issue-17121.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fissue-17121.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fissue-17121.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17121.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,39 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::io::BufReader;\n+use std::io::BufferedReader;\n+use std::io::File;\n+use std::io::IoResult;\n+\n+struct Lexer<R: Reader>\n+{\n+    reader: BufferedReader<R>,\n+}\n+\n+impl<R: Reader> Lexer<R>\n+{\n+    pub fn new_from_reader(r: R) -> Lexer<R>\n+    {\n+        Lexer{reader: BufferedReader::new(r)}\n+    }\n+\n+    pub fn new_from_file(p: Path) -> IoResult<Lexer<File>>\n+    {\n+        Ok(Lexer::new_from_reader(try!(File::open(&p))))\n+    }\n+\n+    pub fn new_from_str<'a>(s: &'a str) -> Lexer<BufReader<'a>>\n+    {\n+        Lexer::new_from_reader(BufReader::new(s.as_bytes()))\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "013aef5722359faa09022e3accd9f3881935d875", "filename": "src/test/run-pass/issue-9249.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fissue-9249.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fissue-9249.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9249.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+static DATA:&'static [&'static str] = [\"my string\"];\n+fn main() { }"}, {"sha": "34c5bf0234f18c16b5af1c6a182eb5dc917ed99e", "filename": "src/test/run-pass/parse-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fparse-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64716d529a9febcb035fabd444c32872aa55fafe/src%2Ftest%2Frun-pass%2Fparse-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fparse-fail.rs?ref=64716d529a9febcb035fabd444c32872aa55fafe", "patch": "@@ -10,6 +10,6 @@\n \n #![allow(unreachable_code)]\n \n-fn dont_call_me() { fail!(); println!(\"{}\", 1); }\n+fn dont_call_me() { fail!(); println!(\"{}\", 1i); }\n \n pub fn main() { }"}]}