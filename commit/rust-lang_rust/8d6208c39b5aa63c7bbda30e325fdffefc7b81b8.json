{"sha": "8d6208c39b5aa63c7bbda30e325fdffefc7b81b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkNjIwOGMzOWI1YWE2M2M3YmJkYTMwZTMyNWZkZmZlZmM3YjgxYjg=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-21T21:37:59Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-09T18:33:07Z"}, "message": "Use nicer alignment when printing state vectors", "tree": {"sha": "5daaa176c541d427b77abf9ba6a03e0da64cff8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5daaa176c541d427b77abf9ba6a03e0da64cff8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d6208c39b5aa63c7bbda30e325fdffefc7b81b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d6208c39b5aa63c7bbda30e325fdffefc7b81b8", "html_url": "https://github.com/rust-lang/rust/commit/8d6208c39b5aa63c7bbda30e325fdffefc7b81b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d6208c39b5aa63c7bbda30e325fdffefc7b81b8/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83dfb422fe71979914d3db67db135e160ab29dcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/83dfb422fe71979914d3db67db135e160ab29dcd", "html_url": "https://github.com/rust-lang/rust/commit/83dfb422fe71979914d3db67db135e160ab29dcd"}], "stats": {"total": 44, "additions": 29, "deletions": 15}, "files": [{"sha": "b805b13592f898e13933c4dd6dd3c35897901bbb", "filename": "src/librustc_mir/dataflow/generic/graphviz.rs", "status": "modified", "additions": 29, "deletions": 15, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/8d6208c39b5aa63c7bbda30e325fdffefc7b81b8/src%2Flibrustc_mir%2Fdataflow%2Fgeneric%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d6208c39b5aa63c7bbda30e325fdffefc7b81b8/src%2Flibrustc_mir%2Fdataflow%2Fgeneric%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fgeneric%2Fgraphviz.rs?ref=8d6208c39b5aa63c7bbda30e325fdffefc7b81b8", "patch": "@@ -171,10 +171,19 @@ where\n         //   | | (on successful return)           | +_4        |\n         //   +-+----------------------------------+------------+\n \n-        write!(\n-            w,\n-            r#\"<table border=\"1\" cellborder=\"1\" cellspacing=\"0\" cellpadding=\"3\" sides=\"rb\">\"#,\n-        )?;\n+        // N.B., Some attributes (`align`, `balign`) are repeated on parent elements and their\n+        // children. This is because `xdot` seemed to have a hard time correctly propagating\n+        // attributes. Make sure to test the output before trying to remove the redundancy.\n+        // Notably, `align` was found to have no effect when applied only to <table>.\n+\n+        let table_fmt = concat!(\n+            \" border=\\\"1\\\"\",\n+            \" cellborder=\\\"1\\\"\",\n+            \" cellspacing=\\\"0\\\"\",\n+            \" cellpadding=\\\"3\\\"\",\n+            \" sides=\\\"rb\\\"\",\n+        );\n+        write!(w, r#\"<table{fmt}>\"#, fmt = table_fmt)?;\n \n         // A + B: Block header\n         if self.state_formatter.column_names().is_empty() {\n@@ -186,7 +195,7 @@ where\n         // C: Entry state\n         self.bg = Background::Light;\n         self.results.seek_to_block_start(block);\n-        self.write_row_with_full_state(w, \"\", \"(on_entry)\")?;\n+        self.write_row_with_full_state(w, \"\", \"(on entry)\")?;\n \n         // D: Statement transfer functions\n         for (i, statement) in body[block].statements.iter().enumerate() {\n@@ -212,7 +221,7 @@ where\n             self.write_row(w, \"\", \"(on successful return)\", |this, w, fmt| {\n                 write!(\n                     w,\n-                    r#\"<td colspan=\"{colspan}\" {fmt} align=\"left\">\"#,\n+                    r#\"<td balign=\"left\" colspan=\"{colspan}\" {fmt} align=\"left\">\"#,\n                     colspan = num_state_columns,\n                     fmt = fmt,\n                 )?;\n@@ -311,7 +320,9 @@ where\n         f: impl FnOnce(&mut Self, &mut W, &str) -> io::Result<()>,\n     ) -> io::Result<()> {\n         let bg = self.toggle_background();\n-        let fmt = format!(\"sides=\\\"tl\\\" {}\", bg.attr());\n+        let valign = if mir.starts_with(\"(on \") && mir != \"(on entry)\" { \"bottom\" } else { \"top\" };\n+\n+        let fmt = format!(\"valign=\\\"{}\\\" sides=\\\"tl\\\" {}\", valign, bg.attr());\n \n         write!(\n             w,\n@@ -345,7 +356,7 @@ where\n                 colspan = this.num_state_columns(),\n                 fmt = fmt,\n             )?;\n-            pretty_print_state_elems(w, analysis, state.iter(), \",\", LIMIT_40_ALIGN_1)?;\n+            pretty_print_state_elems(w, analysis, state.iter(), \", \", LIMIT_30_ALIGN_1)?;\n             write!(w, \"}}</td>\")\n         })\n     }\n@@ -416,7 +427,7 @@ where\n         }\n \n         self.prev_loc = location;\n-        write!(w, r#\"<td {fmt} align=\"left\">\"#, fmt = fmt)?;\n+        write!(w, r#\"<td {fmt} balign=\"left\" align=\"left\">\"#, fmt = fmt)?;\n         results.seek_after(location);\n         let curr_state = results.get();\n         write_diff(&mut w, results.analysis(), &self.prev_state, curr_state)?;\n@@ -524,12 +535,12 @@ where\n         for set in &[&block_trans.gen, &block_trans.kill] {\n             write!(\n                 w,\n-                r#\"<td {fmt} rowspan=\"{rowspan}\" align=\"center\">\"#,\n+                r#\"<td {fmt} rowspan=\"{rowspan}\" balign=\"left\" align=\"left\">\"#,\n                 fmt = fmt,\n                 rowspan = rowspan\n             )?;\n \n-            pretty_print_state_elems(&mut w, results.analysis(), set.iter(), \"\\n\", None)?;\n+            pretty_print_state_elems(&mut w, results.analysis(), set.iter(), BR_LEFT, None)?;\n             write!(w, \"</td>\")?;\n         }\n \n@@ -561,25 +572,28 @@ fn write_diff<A: Analysis<'tcx>>(\n \n     if !set.is_empty() {\n         write!(w, r#\"<font color=\"darkgreen\">+\"#)?;\n-        pretty_print_state_elems(w, analysis, set.iter(), \",\", LIMIT_40_ALIGN_1)?;\n+        pretty_print_state_elems(w, analysis, set.iter(), \", \", LIMIT_30_ALIGN_1)?;\n         write!(w, r#\"</font>\"#)?;\n     }\n \n     if !set.is_empty() && !clear.is_empty() {\n-        write!(w, \"<br/>\")?;\n+        write!(w, \"{}\", BR_LEFT)?;\n     }\n \n     if !clear.is_empty() {\n         write!(w, r#\"<font color=\"red\">-\"#)?;\n-        pretty_print_state_elems(w, analysis, clear.iter(), \",\", LIMIT_40_ALIGN_1)?;\n+        pretty_print_state_elems(w, analysis, clear.iter(), \", \", LIMIT_30_ALIGN_1)?;\n         write!(w, r#\"</font>\"#)?;\n     }\n \n     Ok(())\n }\n \n+const BR_LEFT: &'static str = r#\"<br align=\"left\"/>\"#;\n+const BR_LEFT_SPACE: &'static str = r#\"<br align=\"left\"/> \"#;\n+\n /// Line break policy that breaks at 40 characters and starts the next line with a single space.\n-const LIMIT_40_ALIGN_1: Option<LineBreak> = Some(LineBreak { sequence: \"<br/> \", limit: 40 });\n+const LIMIT_30_ALIGN_1: Option<LineBreak> = Some(LineBreak { sequence: BR_LEFT_SPACE, limit: 30 });\n \n struct LineBreak {\n     sequence: &'static str,"}]}