{"sha": "4957ecce3ede95c4415dbcc7a136f9d4ebd5cb4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5NTdlY2NlM2VkZTk1YzQ0MTVkYmNjN2ExMzZmOWQ0ZWJkNWNiNGU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-05-01T10:19:05Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-05-01T10:19:05Z"}, "message": "Add test for custom deriving plugins which rely on field attributes", "tree": {"sha": "08a1b6374a942f44b67c1ef8565e43ebaf4d3ecc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08a1b6374a942f44b67c1ef8565e43ebaf4d3ecc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4957ecce3ede95c4415dbcc7a136f9d4ebd5cb4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4957ecce3ede95c4415dbcc7a136f9d4ebd5cb4e", "html_url": "https://github.com/rust-lang/rust/commit/4957ecce3ede95c4415dbcc7a136f9d4ebd5cb4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4957ecce3ede95c4415dbcc7a136f9d4ebd5cb4e/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ede7a6dc8ff5455f9d0d39a90e6d11e9a374e93b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ede7a6dc8ff5455f9d0d39a90e6d11e9a374e93b", "html_url": "https://github.com/rust-lang/rust/commit/ede7a6dc8ff5455f9d0d39a90e6d11e9a374e93b"}], "stats": {"total": 160, "additions": 160, "deletions": 0}, "files": [{"sha": "631645ec0c0c744d09d90e4b0af4ab267f059efa", "filename": "src/test/auxiliary/custom_derive_plugin_attr.rs", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/4957ecce3ede95c4415dbcc7a136f9d4ebd5cb4e/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4957ecce3ede95c4415dbcc7a136f9d4ebd5cb4e/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin_attr.rs?ref=4957ecce3ede95c4415dbcc7a136f9d4ebd5cb4e", "patch": "@@ -0,0 +1,86 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar)]\n+#![feature(box_syntax)]\n+#![feature(rustc_private)]\n+\n+extern crate syntax;\n+extern crate rustc;\n+\n+use syntax::ast;\n+use syntax::attr::AttrMetaMethods;\n+use syntax::codemap::Span;\n+use syntax::ext::base::{Decorator, ExtCtxt};\n+use syntax::ext::build::AstBuilder;\n+use syntax::ext::deriving::generic::{cs_fold, TraitDef, MethodDef, combine_substructure};\n+use syntax::ext::deriving::generic::{Substructure, Struct, EnumMatching};\n+use syntax::ext::deriving::generic::ty::{Literal, LifetimeBounds, Path, borrowed_explicit_self};\n+use syntax::parse::token;\n+use syntax::ptr::P;\n+use rustc::plugin::Registry;\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_syntax_extension(\n+        token::intern(\"derive_TotalSum\"),\n+        Decorator(box expand));\n+}\n+\n+fn expand(cx: &mut ExtCtxt,\n+          span: Span,\n+          mitem: &ast::MetaItem,\n+          item: &ast::Item,\n+          push: &mut FnMut(P<ast::Item>)) {\n+    let trait_def = TraitDef {\n+        span: span,\n+        attributes: vec![],\n+        path: Path::new(vec![\"TotalSum\"]),\n+        additional_bounds: vec![],\n+        generics: LifetimeBounds::empty(),\n+        associated_types: vec![],\n+        methods: vec![\n+            MethodDef {\n+                name: \"total_sum\",\n+                generics: LifetimeBounds::empty(),\n+                explicit_self: borrowed_explicit_self(),\n+                args: vec![],\n+                ret_ty: Literal(Path::new_local(\"isize\")),\n+                attributes: vec![],\n+                combine_substructure: combine_substructure(Box::new(totalsum_substructure)),\n+            },\n+        ],\n+    };\n+\n+    trait_def.expand(cx, mitem, item, push)\n+}\n+\n+// Mostly copied from syntax::ext::deriving::hash\n+/// Defines how the implementation for `trace()` is to be generated\n+fn totalsum_substructure(cx: &mut ExtCtxt, trait_span: Span, substr: &Substructure) -> P<ast::Expr> {\n+    let fields = match *substr.fields {\n+        Struct(ref fs) | EnumMatching(_, _, ref fs) => fs,\n+        _ => cx.span_bug(trait_span, \"impossible substructure\")\n+    };\n+\n+    fields.iter().fold(cx.expr_int(trait_span, 0), |acc, ref item| {\n+        if item.attrs.iter().find(|a| a.check_name(\"ignore\")).is_some() {\n+            acc\n+        } else {\n+            cx.expr_binary(item.span, ast::BiAdd, acc,\n+                           cx.expr_method_call(item.span,\n+                                               item.self_.clone(),\n+                                               substr.method_ident,\n+                                               Vec::new()))\n+        }\n+    })\n+}"}, {"sha": "ef5198b9ae03802d6dfdab2e05a6cc655d779b42", "filename": "src/test/run-pass-fulldeps/derive-totalsum-attr.rs", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/4957ecce3ede95c4415dbcc7a136f9d4ebd5cb4e/src%2Ftest%2Frun-pass-fulldeps%2Fderive-totalsum-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4957ecce3ede95c4415dbcc7a136f9d4ebd5cb4e/src%2Ftest%2Frun-pass-fulldeps%2Fderive-totalsum-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fderive-totalsum-attr.rs?ref=4957ecce3ede95c4415dbcc7a136f9d4ebd5cb4e", "patch": "@@ -0,0 +1,74 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:custom_derive_plugin_attr.rs\n+// ignore-stage1\n+\n+#![feature(plugin, custom_derive, custom_attribute)]\n+#![plugin(custom_derive_plugin_attr)]\n+\n+trait TotalSum {\n+    fn total_sum(&self) -> isize;\n+}\n+\n+impl TotalSum for isize {\n+    fn total_sum(&self) -> isize {\n+        *self\n+    }\n+}\n+\n+struct Seven;\n+\n+impl TotalSum for Seven {\n+    fn total_sum(&self) -> isize {\n+        7\n+    }\n+}\n+\n+#[derive(TotalSum)]\n+struct Foo {\n+    seven: Seven,\n+    bar: Bar,\n+    baz: isize,\n+    #[ignore]\n+    nan: NaN,\n+}\n+\n+#[derive(TotalSum)]\n+struct Bar {\n+    quux: isize,\n+    bleh: isize,\n+    #[ignore]\n+    nan: NaN2\n+}\n+\n+struct NaN;\n+\n+impl TotalSum for NaN {\n+    fn total_sum(&self) -> isize {\n+        panic!();\n+    }\n+}\n+\n+struct NaN2;\n+\n+pub fn main() {\n+    let v = Foo {\n+        seven: Seven,\n+        bar: Bar {\n+            quux: 9,\n+            bleh: 3,\n+            nan: NaN2\n+        },\n+        baz: 80,\n+        nan: NaN\n+    };\n+    assert_eq!(v.total_sum(), 99);\n+}"}]}