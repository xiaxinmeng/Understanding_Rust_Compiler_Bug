{"sha": "cb5af8901ab2f4af231936473774df9a859ef256", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiNWFmODkwMWFiMmY0YWYyMzE5MzY0NzM3NzRkZjlhODU5ZWYyNTY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-30T23:34:59Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-30T23:34:59Z"}, "message": "Rollup merge of #32612 - frewsxcv:unnecessary-coercions, r=alexcrichton\n\nRemove no longer necessary coercions to fn pointer types.\n\nOriginally added in 8fe9e4dff6d9d0fdd940835ae377edcb3754f8c1.\n\nEverything appears to build fine without the coercions, so they can\npresumably be removed.", "tree": {"sha": "82ba17f2d70781003c90db752823c524c8cdfbc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82ba17f2d70781003c90db752823c524c8cdfbc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb5af8901ab2f4af231936473774df9a859ef256", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb5af8901ab2f4af231936473774df9a859ef256", "html_url": "https://github.com/rust-lang/rust/commit/cb5af8901ab2f4af231936473774df9a859ef256", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb5af8901ab2f4af231936473774df9a859ef256/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74546e8ab795a5fabdf4f5079a875b8c69573003", "url": "https://api.github.com/repos/rust-lang/rust/commits/74546e8ab795a5fabdf4f5079a875b8c69573003", "html_url": "https://github.com/rust-lang/rust/commit/74546e8ab795a5fabdf4f5079a875b8c69573003"}, {"sha": "99501e6177b2614708dd30fe06109415015b1158", "url": "https://api.github.com/repos/rust-lang/rust/commits/99501e6177b2614708dd30fe06109415015b1158", "html_url": "https://github.com/rust-lang/rust/commit/99501e6177b2614708dd30fe06109415015b1158"}], "stats": {"total": 12, "additions": 0, "deletions": 12}, "files": [{"sha": "1d21d2d18e4f3492d8d9b7b8c8fbcd6aef88c33d", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cb5af8901ab2f4af231936473774df9a859ef256/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb5af8901ab2f4af231936473774df9a859ef256/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=cb5af8901ab2f4af231936473774df9a859ef256", "patch": "@@ -837,8 +837,6 @@ impl<K, V, S> HashMap<K, V, S>\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn keys<'a>(&'a self) -> Keys<'a, K, V> {\n         fn first<A, B>((a, _): (A, B)) -> A { a }\n-        let first: fn((&'a K,&'a V)) -> &'a K = first; // coerce to fn ptr\n-\n         Keys { inner: self.iter().map(first) }\n     }\n \n@@ -862,8 +860,6 @@ impl<K, V, S> HashMap<K, V, S>\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn values<'a>(&'a self) -> Values<'a, K, V> {\n         fn second<A, B>((_, b): (A, B)) -> B { b }\n-        let second: fn((&'a K,&'a V)) -> &'a V = second; // coerce to fn ptr\n-\n         Values { inner: self.iter().map(second) }\n     }\n \n@@ -997,8 +993,6 @@ impl<K, V, S> HashMap<K, V, S>\n     #[stable(feature = \"drain\", since = \"1.6.0\")]\n     pub fn drain(&mut self) -> Drain<K, V> {\n         fn last_two<A, B, C>((_, b, c): (A, B, C)) -> (B, C) { (b, c) }\n-        let last_two: fn((SafeHash, K, V)) -> (K, V) = last_two; // coerce to fn pointer\n-\n         Drain {\n             inner: self.table.drain().map(last_two),\n         }\n@@ -1404,8 +1398,6 @@ impl<K, V, S> IntoIterator for HashMap<K, V, S>\n     /// ```\n     fn into_iter(self) -> IntoIter<K, V> {\n         fn last_two<A, B, C>((_, b, c): (A, B, C)) -> (B, C) { (b, c) }\n-        let last_two: fn((SafeHash, K, V)) -> (K, V) = last_two;\n-\n         IntoIter {\n             inner: self.table.into_iter().map(last_two)\n         }"}, {"sha": "24dfcb1a9b7ba18ab04c9999fb0e124be271a455", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cb5af8901ab2f4af231936473774df9a859ef256/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb5af8901ab2f4af231936473774df9a859ef256/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=cb5af8901ab2f4af231936473774df9a859ef256", "patch": "@@ -415,8 +415,6 @@ impl<T, S> HashSet<T, S>\n     #[stable(feature = \"drain\", since = \"1.6.0\")]\n     pub fn drain(&mut self) -> Drain<T> {\n         fn first<A, B>((a, _): (A, B)) -> A { a }\n-        let first: fn((T, ())) -> T = first; // coerce to fn pointer\n-\n         Drain { iter: self.map.drain().map(first) }\n     }\n \n@@ -892,8 +890,6 @@ impl<T, S> IntoIterator for HashSet<T, S>\n     /// ```\n     fn into_iter(self) -> IntoIter<T> {\n         fn first<A, B>((a, _): (A, B)) -> A { a }\n-        let first: fn((T, ())) -> T = first;\n-\n         IntoIter { iter: self.map.into_iter().map(first) }\n     }\n }"}]}