{"sha": "3dab4e22d43c1ec724b23d301c81bdc2b99d50e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYWI0ZTIyZDQzYzFlYzcyNGIyM2QzMDFjODFiZGMyYjk5ZDUwZTc=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-04-12T23:07:28Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-04-16T18:12:01Z"}, "message": "Skip into_iter() for arrays before 2021", "tree": {"sha": "28f83332951c330c70a497df43db18d30616d5fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28f83332951c330c70a497df43db18d30616d5fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7", "html_url": "https://github.com/rust-lang/rust/commit/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35b1590223b44a7da28c584c97967cc63f3e4e25", "url": "https://api.github.com/repos/rust-lang/rust/commits/35b1590223b44a7da28c584c97967cc63f3e4e25", "html_url": "https://github.com/rust-lang/rust/commit/35b1590223b44a7da28c584c97967cc63f3e4e25"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "ddbdc6a4acf3aaf16c627511094a57e214047561", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=3dab4e22d43c1ec724b23d301c81bdc2b99d50e7", "patch": "@@ -155,6 +155,10 @@ impl<T: fmt::Debug, const N: usize> fmt::Debug for [T; N] {\n     }\n }\n \n+// Note: the `#[rustc_skip_array_during_method_dispatch]` on `trait IntoIterator`\n+// hides this implementation from explicit `.into_iter()` calls on editions < 2021,\n+// so those calls will still resolve to the slice implementation, by reference.\n+#[cfg(not(bootstrap))]\n #[stable(feature = \"array_into_iter_impl\", since = \"1.53.0\")]\n impl<T, const N: usize> IntoIterator for [T; N] {\n     type Item = T;"}, {"sha": "13a2e24cadd10454ec7a0d9f1efbd968695edc43", "filename": "library/core/src/iter/traits/collect.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs?ref=3dab4e22d43c1ec724b23d301c81bdc2b99d50e7", "patch": "@@ -198,6 +198,7 @@ pub trait FromIterator<A>: Sized {\n /// }\n /// ```\n #[rustc_diagnostic_item = \"IntoIterator\"]\n+#[cfg_attr(not(bootstrap), rustc_skip_array_during_method_dispatch)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait IntoIterator {\n     /// The type of the elements being iterated over."}, {"sha": "cbcfcf2512f5e9fed95e4c6c1674a3e83a0f1706", "filename": "src/test/ui/iterators/into-iter-on-arrays-2018.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.rs?ref=3dab4e22d43c1ec724b23d301c81bdc2b99d50e7", "patch": "@@ -0,0 +1,17 @@\n+// check-pass\n+\n+use std::array::IntoIter;\n+use std::slice::Iter;\n+\n+fn main() {\n+    let array = [0; 10];\n+\n+    // Before 2021, the method dispatched to `IntoIterator for &[T]`,\n+    // which we continue to support for compatibility.\n+    let _: Iter<'_, i32> = array.into_iter();\n+    //~^ WARNING this method call currently resolves to `<&[T; N] as IntoIterator>::into_iter`\n+    //~| WARNING this was previously accepted by the compiler but is being phased out\n+\n+    // But you can always use the trait method explicitly as an array.\n+    let _: IntoIter<i32, 10> = IntoIterator::into_iter(array);\n+}"}, {"sha": "7140c01ed0e92cf8c5a58ec4a1c639883df0ad3e", "filename": "src/test/ui/iterators/into-iter-on-arrays-2018.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.stderr?ref=3dab4e22d43c1ec724b23d301c81bdc2b99d50e7", "patch": "@@ -0,0 +1,23 @@\n+warning: this method call currently resolves to `<&[T; N] as IntoIterator>::into_iter` (due to autoref coercions), but that might change in the future when `IntoIterator` impls for arrays are added.\n+  --> $DIR/into-iter-on-arrays-2018.rs:11:34\n+   |\n+LL |     let _: Iter<'_, i32> = array.into_iter();\n+   |                                  ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n+   |\n+   = note: `#[warn(array_into_iter)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #66145 <https://github.com/rust-lang/rust/issues/66145>\n+\n+warning: 1 warning emitted\n+\n+Future incompatibility report: Future breakage date: None, diagnostic:\n+warning: this method call currently resolves to `<&[T; N] as IntoIterator>::into_iter` (due to autoref coercions), but that might change in the future when `IntoIterator` impls for arrays are added.\n+  --> $DIR/into-iter-on-arrays-2018.rs:11:34\n+   |\n+LL |     let _: Iter<'_, i32> = array.into_iter();\n+   |                                  ^^^^^^^^^ help: use `.iter()` instead of `.into_iter()` to avoid ambiguity: `iter`\n+   |\n+   = note: `#[warn(array_into_iter)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #66145 <https://github.com/rust-lang/rust/issues/66145>\n+"}, {"sha": "731971484e82ee9c66c315dbd09386e043b65ce8", "filename": "src/test/ui/iterators/into-iter-on-arrays-2021.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dab4e22d43c1ec724b23d301c81bdc2b99d50e7/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2021.rs?ref=3dab4e22d43c1ec724b23d301c81bdc2b99d50e7", "patch": "@@ -0,0 +1,15 @@\n+// check-pass\n+// edition:2021\n+// compile-flags: -Zunstable-options\n+\n+use std::array::IntoIter;\n+\n+fn main() {\n+    let array = [0; 10];\n+\n+    // In 2021, the method dispatches to `IntoIterator for [T; N]`.\n+    let _: IntoIter<i32, 10> = array.into_iter();\n+\n+    // And you can always use the trait method explicitly as an array.\n+    let _: IntoIter<i32, 10> = IntoIterator::into_iter(array);\n+}"}]}