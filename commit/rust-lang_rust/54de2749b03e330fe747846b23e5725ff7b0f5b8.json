{"sha": "54de2749b03e330fe747846b23e5725ff7b0f5b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0ZGUyNzQ5YjAzZTMzMGZlNzQ3ODQ2YjIzZTU3MjVmZjdiMGY1Yjg=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-05-01T01:51:17Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-05-01T01:51:17Z"}, "message": "Try fixing bigendian metadata serialisation\n\nI compiled this on PPC to check and it seems to work, but not sure whether I didn't mess up\nanything in a major way.\n\nMaybe a good shot at #41443", "tree": {"sha": "e5ff37343928a3aaded1c4238a546fbbdd5c0ebb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5ff37343928a3aaded1c4238a546fbbdd5c0ebb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54de2749b03e330fe747846b23e5725ff7b0f5b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54de2749b03e330fe747846b23e5725ff7b0f5b8", "html_url": "https://github.com/rust-lang/rust/commit/54de2749b03e330fe747846b23e5725ff7b0f5b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54de2749b03e330fe747846b23e5725ff7b0f5b8/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06fb4d25642a3f223db1441972dd5962085cfba1", "url": "https://api.github.com/repos/rust-lang/rust/commits/06fb4d25642a3f223db1441972dd5962085cfba1", "html_url": "https://github.com/rust-lang/rust/commit/06fb4d25642a3f223db1441972dd5962085cfba1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ebf9910e9c99c03383c94b08ee0829cb715f6a87", "filename": "src/librustc_metadata/index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54de2749b03e330fe747846b23e5725ff7b0f5b8/src%2Flibrustc_metadata%2Findex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54de2749b03e330fe747846b23e5725ff7b0f5b8/src%2Flibrustc_metadata%2Findex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Findex.rs?ref=54de2749b03e330fe747846b23e5725ff7b0f5b8", "patch": "@@ -58,7 +58,7 @@ impl Index {\n         let pos = buf.position();\n \n         // First we write the length of the lower range ...\n-        buf.write_all(words_to_bytes(&[self.positions[0].len() as u32])).unwrap();\n+        buf.write_all(words_to_bytes(&[(self.positions[0].len() as u32).to_le()])).unwrap();\n         // ... then the values in the lower range ...\n         buf.write_all(words_to_bytes(&self.positions[0][..])).unwrap();\n         // ... then the values in the higher range."}]}