{"sha": "037ddf282bbf011babd4b7f9a851f6028fc6fd70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzN2RkZjI4MmJiZjAxMWJhYmQ0YjdmOWE4NTFmNjAyOGZjNmZkNzA=", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-05-06T13:22:17Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-05-06T13:32:05Z"}, "message": "Update CHANGELOG.md", "tree": {"sha": "40edfcf028a243dd9048c3bb2641b8fdb5c94787", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40edfcf028a243dd9048c3bb2641b8fdb5c94787"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/037ddf282bbf011babd4b7f9a851f6028fc6fd70", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmCT79UACgkQHKDfKvWd\naKWniRAAgzoj+07fP8D3tmYWFCUJ6m9myTnYqu15NXvzBEZTkJRXlAAXtcrJ3Ukv\nP6uVvlYCrpb2BQJmU4T8s6qIEoZa+82qfuXbR4UBq7jOyFDyrMRdkhgow01axEv0\niu3VwXddLEeyeRNzA6Ldt49veQAMJlYTpj77EzC35MySNb/s3moADdO4HTXxBOh3\ne2/fP7pIfxhdZLvaeBqCeSFnTXLwZTZko4qTZH9abdb7YHiWQBu4pynmjSz/PONN\nMMPqKbG1/7wxdlDCgv7YVtUpUcIP/MJ6thJA6ma5+q58WLrVWMwTlCfsykPMPD86\nNiSV800b4MxPWofJb+O2i9VuBwfGvKKLGlFk/Z+0gVXc4DoD0xdHehKZGNWTLbwS\nAY3dPnTTIAc4Zc70KJbeh/CphPWsvZ6/Tc3V68s4in9ArI/jCUfXHs+PJG+QaTF0\nzoX/OO3TaeIipk4B5ECWacJJIDdTobPqB6SjDytOpnLkQ2aBndnORUGAC18t2qyC\nbJvFjzYA00oLL1FUvKuayi1j4PIQLTQ0W3vzOofcNRUAByXdxJmltqpk0oHhhs8T\n4gQFB4HopTrUmait3zp4My9kkqERcyv/RMRjsN/z8/21HQl3dMe2EmFR1x0NpCIP\n36ZQ8tk5eMADymQX08Wbg4Xzf8dj4HRovyXB6ZFl5BvBbuMSOko=\n=4yNy\n-----END PGP SIGNATURE-----", "payload": "tree 40edfcf028a243dd9048c3bb2641b8fdb5c94787\nparent b71f3405606d49b9735606b479c3415a0ca9810f\nauthor flip1995 <philipp.krones@embecosm.com> 1620307337 +0200\ncommitter flip1995 <philipp.krones@embecosm.com> 1620307925 +0200\n\nUpdate CHANGELOG.md\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/037ddf282bbf011babd4b7f9a851f6028fc6fd70", "html_url": "https://github.com/rust-lang/rust/commit/037ddf282bbf011babd4b7f9a851f6028fc6fd70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/037ddf282bbf011babd4b7f9a851f6028fc6fd70/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b71f3405606d49b9735606b479c3415a0ca9810f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b71f3405606d49b9735606b479c3415a0ca9810f", "html_url": "https://github.com/rust-lang/rust/commit/b71f3405606d49b9735606b479c3415a0ca9810f"}], "stats": {"total": 196, "additions": 190, "deletions": 6}, "files": [{"sha": "fce3fccd075d4f08d1243d2e7168710b30b86c0e", "filename": "CHANGELOG.md", "status": "modified", "additions": 190, "deletions": 6, "changes": 196, "blob_url": "https://github.com/rust-lang/rust/blob/037ddf282bbf011babd4b7f9a851f6028fc6fd70/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/037ddf282bbf011babd4b7f9a851f6028fc6fd70/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=037ddf282bbf011babd4b7f9a851f6028fc6fd70", "patch": "@@ -6,11 +6,195 @@ document.\n \n ## Unreleased / In Rust Nightly\n \n-[6ed6f1e...master](https://github.com/rust-lang/rust-clippy/compare/6ed6f1e...master)\n+[7c7683c...master](https://github.com/rust-lang/rust-clippy/compare/7c7683c...master)\n \n ## Rust 1.52\n \n-Current beta, release 2021-05-06\n+Current beta, release 2021-06-17\n+\n+[6ed6f1e...7c7683c](https://github.com/rust-lang/rust-clippy/compare/6ed6f1e...7c7683c)\n+\n+### New Lints\n+\n+* [`option_filter_map`]\n+  [#6342](https://github.com/rust-lang/rust-clippy/pull/6342)\n+* [`branches_sharing_code`]\n+  [#6463](https://github.com/rust-lang/rust-clippy/pull/6463)\n+* [`needless_for_each`]\n+  [#6706](https://github.com/rust-lang/rust-clippy/pull/6706)\n+* [`if_then_some_else_none`]\n+  [#6859](https://github.com/rust-lang/rust-clippy/pull/6859)\n+* [`non_octal_unix_permissions`]\n+  [#7001](https://github.com/rust-lang/rust-clippy/pull/7001)\n+* [`unnecessary_self_imports`]\n+  [#7072](https://github.com/rust-lang/rust-clippy/pull/7072)\n+* [`bool_assert_comparison`]\n+  [#7083](https://github.com/rust-lang/rust-clippy/pull/7083)\n+* [`cloned_instead_of_copied`]\n+  [#7098](https://github.com/rust-lang/rust-clippy/pull/7098)\n+* [`flat_map_option`]\n+  [#7101](https://github.com/rust-lang/rust-clippy/pull/7101)\n+\n+### Moves and Deprecations\n+\n+* Deprecate [`filter_map`] lint\n+  [#7059](https://github.com/rust-lang/rust-clippy/pull/7059)\n+* Move [`transmute_ptr_to_ptr`] to `pedantic`\n+  [#7102](https://github.com/rust-lang/rust-clippy/pull/7102)\n+\n+### Enhancements\n+\n+* [`mem_replace_with_default`]: Also lint on common std constructors\n+  [#6820](https://github.com/rust-lang/rust-clippy/pull/6820)\n+* [`wrong_self_convention`]: Also lint on `to_*_mut` methods\n+  [#6828](https://github.com/rust-lang/rust-clippy/pull/6828)\n+* [`wildcard_enum_match_arm`], [`match_wildcard_for_single_variants`]:\n+  [#6863](https://github.com/rust-lang/rust-clippy/pull/6863)\n+    * Attempt to find a common path prefix in suggestion\n+    * Don't lint on `Option` and `Result`\n+    * Consider `Self` prefix\n+* [`explicit_deref_methods`]: Also lint on chained `deref` calls\n+  [#6865](https://github.com/rust-lang/rust-clippy/pull/6865)\n+* [`or_fun_call`]: Also lint on `unsafe` blocks\n+  [#6928](https://github.com/rust-lang/rust-clippy/pull/6928)\n+* [`vec_box`], [`linkedlist`], [`option_option`]: Also lint in `const` and\n+  `static` items [#6938](https://github.com/rust-lang/rust-clippy/pull/6938)\n+* [`search_is_some`]: Also check for `is_none`\n+  [#6942](https://github.com/rust-lang/rust-clippy/pull/6942)\n+* [`string_lit_as_bytes`]: Also lint on `into_bytes`\n+  [#6959](https://github.com/rust-lang/rust-clippy/pull/6959)\n+* [`len_without_is_empty`]: Also lint if function signatures of `len` and\n+  `is_empty` don't match\n+  [#6980](https://github.com/rust-lang/rust-clippy/pull/6980)\n+* [`redundant_pattern_matching`]: Also lint if the pattern is a `&` pattern\n+  [#6991](https://github.com/rust-lang/rust-clippy/pull/6991)\n+* [`clone_on_copy`]: Also lint on chained method calls taking `self` by value\n+  [#7000](https://github.com/rust-lang/rust-clippy/pull/7000)\n+* [`missing_panics_doc`]: Also lint on `assert_eq!` and `assert_ne!`\n+  [#7029](https://github.com/rust-lang/rust-clippy/pull/7029)\n+* [`needless_return`]: Also lint in `async` functions\n+  [#7067](https://github.com/rust-lang/rust-clippy/pull/7067)\n+* [`unused_io_amount`]: Also lint on expressions like `_.read().ok()?`\n+  [#7100](https://github.com/rust-lang/rust-clippy/pull/7100)\n+* [`iter_cloned_collect`]: Also lint on large arrays, since const-generics are\n+  now stable [#7138](https://github.com/rust-lang/rust-clippy/pull/7138)\n+\n+### False Positive Fixes\n+\n+* [`upper_case_acronyms`]: No longer lints on public items\n+  [#6805](https://github.com/rust-lang/rust-clippy/pull/6805)\n+* [`suspicious_map`]: No longer lints when side effects may occur inside the\n+  `map` call [#6831](https://github.com/rust-lang/rust-clippy/pull/6831)\n+* [`manual_map`], [`manual_unwrap_or`]: No longer lints in `const` functions\n+  [#6917](https://github.com/rust-lang/rust-clippy/pull/6917)\n+* [`wrong_self_convention`]: Now respects `Copy` types\n+  [#6924](https://github.com/rust-lang/rust-clippy/pull/6924)\n+* [`needless_question_mark`]: No longer lints if the `?` and the `Some(..)` come\n+  from different macro contexts [#6935](https://github.com/rust-lang/rust-clippy/pull/6935)\n+* [`map_entry`]: Better detect if the entry API can be used\n+  [#6937](https://github.com/rust-lang/rust-clippy/pull/6937)\n+* [`or_fun_call`]: No longer lints on some `len` function calls\n+  [#6950](https://github.com/rust-lang/rust-clippy/pull/6950)\n+* [`new_ret_no_self`]: No longer lints when `Self` is returned with different\n+  generic arguments [#6952](https://github.com/rust-lang/rust-clippy/pull/6952)\n+* [`upper_case_acronyms`]: No longer lints on public items\n+  [#6981](https://github.com/rust-lang/rust-clippy/pull/6981)\n+* [`explicit_into_iter_loop`]: Only lint when `into_iter` is an implementation\n+  of `IntoIterator` [#6982](https://github.com/rust-lang/rust-clippy/pull/6982)\n+* [`expl_impl_clone_on_copy`]: Take generic constraints into account before\n+  suggesting to use `derive` instead\n+  [#6993](https://github.com/rust-lang/rust-clippy/pull/6993)\n+* [`missing_panics_doc`]: No longer lints when only debug-assertions are used\n+  [#6996](https://github.com/rust-lang/rust-clippy/pull/6996)\n+* [`clone_on_copy`]: Only lint when using the `Clone` trait\n+  [#7000](https://github.com/rust-lang/rust-clippy/pull/7000)\n+* [`wrong_self_convention`]: No longer lints inside a trait implementation\n+  [#7002](https://github.com/rust-lang/rust-clippy/pull/7002)\n+* [`redundant_clone`]: No longer lints when the cloned value is modified while\n+  the clone is in use\n+  [#7011](https://github.com/rust-lang/rust-clippy/pull/7011)\n+* [`same_item_push`]: No longer lints if the `Vec` is used in the loop body\n+  [#7018](https://github.com/rust-lang/rust-clippy/pull/7018)\n+* [`cargo_common_metadata`]: Remove author requirement\n+  [#7026](https://github.com/rust-lang/rust-clippy/pull/7026)\n+* [`panic_in_result_fn`]: No longer lints on `debug_assert` family\n+  [#7060](https://github.com/rust-lang/rust-clippy/pull/7060)\n+* [`panic`]: No longer wrongfully lints on `debug_assert` with message\n+  [#7063](https://github.com/rust-lang/rust-clippy/pull/7063)\n+* [`wrong_self_convention`]: No longer lints in trait implementations where no\n+  `self` is involved [#7064](https://github.com/rust-lang/rust-clippy/pull/7064)\n+* [`missing_const_for_fn`]: No longer lints when unstable `const` function is\n+  involved [#7076](https://github.com/rust-lang/rust-clippy/pull/7076)\n+* [`suspicious_else_formatting`]: Allow Allman style braces\n+  [#7087](https://github.com/rust-lang/rust-clippy/pull/7087)\n+* [`inconsistent_struct_constructor`]: No longer lints in macros\n+  [#7097](https://github.com/rust-lang/rust-clippy/pull/7097)\n+* [`single_component_path_imports`]: No longer lints on macro re-exports\n+  [#7120](https://github.com/rust-lang/rust-clippy/pull/7120)\n+\n+### Suggestion Fixes/Improvements\n+\n+* [`redundant_pattern_matching`]: Add a note when applying this lint would\n+  change the drop order\n+  [#6568](https://github.com/rust-lang/rust-clippy/pull/6568)\n+* [`write_literal`], [`print_literal`]: Add auto-applicable suggestion\n+  [#6821](https://github.com/rust-lang/rust-clippy/pull/6821)\n+* [`manual_map`]: Fix suggestion for complex `if let ... else` chains\n+  [#6856](https://github.com/rust-lang/rust-clippy/pull/6856)\n+* [`inconsistent_struct_constructor`]: Make lint description and message clearer\n+  [#6892](https://github.com/rust-lang/rust-clippy/pull/6892)\n+* [`map_entry`]: Now suggests `or_insert`, `insert_with` or `match _.entry(_)`\n+  as appropriate [#6937](https://github.com/rust-lang/rust-clippy/pull/6937)\n+* [`manual_flatten`]: Suggest to insert `copied` if necessary\n+  [#6962](https://github.com/rust-lang/rust-clippy/pull/6962)\n+* [`redundant_slicing`]: Fix suggestion when a re-borrow might be required or\n+  when the value is from a macro call\n+  [#6975](https://github.com/rust-lang/rust-clippy/pull/6975)\n+* [`match_wildcard_for_single_variants`]: Fix suggestion for hidden variant\n+  [#6988](https://github.com/rust-lang/rust-clippy/pull/6988)\n+* [`clone_on_copy`]: Correct suggestion when the cloned value is a macro call\n+  [#7000](https://github.com/rust-lang/rust-clippy/pull/7000)\n+* [`manual_map`]: Fix suggestion at the end of an if chain\n+  [#7004](https://github.com/rust-lang/rust-clippy/pull/7004)\n+* Fix needless parenthesis output in multiple lint suggestions\n+  [#7013](https://github.com/rust-lang/rust-clippy/pull/7013)\n+* [`needless_collect`]: Better explanation in the lint message\n+  [#7020](https://github.com/rust-lang/rust-clippy/pull/7020)\n+* [`useless_vec`]: Now considers mutability\n+  [#7036](https://github.com/rust-lang/rust-clippy/pull/7036)\n+* [`useless_format`]: Wrap the content in braces if necessary\n+  [#7092](https://github.com/rust-lang/rust-clippy/pull/7092)\n+* [`single_match`]: Don't suggest an equality check for types which don't\n+  implement `PartialEq`\n+  [#7093](https://github.com/rust-lang/rust-clippy/pull/7093)\n+* [`from_over_into`]: Mention type in help message\n+  [#7099](https://github.com/rust-lang/rust-clippy/pull/7099)\n+* [`manual_unwrap_or`]: Fix invalid code suggestion due to a macro call\n+  [#7136](https://github.com/rust-lang/rust-clippy/pull/7136)\n+\n+### ICE Fixes\n+\n+* [`macro_use_imports`]\n+  [#7022](https://github.com/rust-lang/rust-clippy/pull/7022)\n+* [`missing_panics_doc`]\n+  [#7034](https://github.com/rust-lang/rust-clippy/pull/7034)\n+* [`tabs_in_doc_comments`]\n+  [#7039](https://github.com/rust-lang/rust-clippy/pull/7039)\n+* [`missing_const_for_fn`]\n+  [#7128](https://github.com/rust-lang/rust-clippy/pull/7128)\n+\n+### Others\n+\n+* [Clippy's lint\n+  list](https://rust-lang.github.io/rust-clippy/master/index.html) now supports\n+  themes [#7030](https://github.com/rust-lang/rust-clippy/pull/7030)\n+* Lints that were uplifted to `rustc` now mention the new `rustc` name in the\n+  deprecation warning\n+  [#7056](https://github.com/rust-lang/rust-clippy/pull/7056)\n+\n+## Rust 1.52\n+\n+Current stable, released 2021-05-06\n \n [3e41797...6ed6f1e](https://github.com/rust-lang/rust-clippy/compare/3e41797...6ed6f1e)\n \n@@ -99,7 +283,7 @@ Current beta, release 2021-05-06\n   [#6682](https://github.com/rust-lang/rust-clippy/pull/6682)\n * [`unit_arg`]: No longer lints on unit arguments when they come from a path expression.\n   [#6601](https://github.com/rust-lang/rust-clippy/pull/6601)\n-* [`cargo_common_metadata`]: No longer lints if \n+* [`cargo_common_metadata`]: No longer lints if\n   [`publish = false`](https://doc.rust-lang.org/cargo/reference/manifest.html#the-publish-field)\n   is defined in the manifest\n   [#6650](https://github.com/rust-lang/rust-clippy/pull/6650)\n@@ -124,11 +308,11 @@ Current beta, release 2021-05-06\n \n * [`useless_format`]: Improved the documentation example\n   [#6854](https://github.com/rust-lang/rust-clippy/pull/6854)\n-* Clippy's [`README.md`]: Includes a new subsection on running Clippy as a rustc wrapper \n+* Clippy's [`README.md`]: Includes a new subsection on running Clippy as a rustc wrapper\n   [#6782](https://github.com/rust-lang/rust-clippy/pull/6782)\n \n ### Others\n-* Running `cargo clippy` after `cargo check` now works as expected \n+* Running `cargo clippy` after `cargo check` now works as expected\n   (`cargo clippy` and `cargo check` no longer shares the same build cache)\n   [#6687](https://github.com/rust-lang/rust-clippy/pull/6687)\n * Cargo now re-runs Clippy if arguments after `--` provided to `cargo clippy` are changed.\n@@ -145,7 +329,7 @@ Current beta, release 2021-05-06\n \n ## Rust 1.51\n \n-Current stable, released 2021-03-25\n+Released 2021-03-25\n \n [4911ab1...3e41797](https://github.com/rust-lang/rust-clippy/compare/4911ab1...3e41797)\n "}]}