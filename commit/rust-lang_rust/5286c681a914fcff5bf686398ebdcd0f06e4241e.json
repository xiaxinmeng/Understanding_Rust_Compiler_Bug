{"sha": "5286c681a914fcff5bf686398ebdcd0f06e4241e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyODZjNjgxYTkxNGZjZmY1YmY2ODYzOThlYmRjZDBmMDZlNDI0MWU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-02-15T17:36:52Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-02-16T20:18:36Z"}, "message": "appveyor: Move MSVC dist builds to their own builder\n\nIn the long run we want to separate out the dist builders from the test\nbuilders. This provides us leeway to expand the dist builders with more tools\n(e.g. Cargo and the RLS) without impacting cycle times.\n\nCurrently the Travis dist builders double-up the platforms they provide builds\nfor, so I figured we could try that out for MSVC as well. This commit adds a new\nAppVeyor builder which runs a dist for all the MSVC targets:\n\n* x86_64-pc-windows-msvc\n* i686-pc-windows-msvc\n* i586-pc-windows-msvc\n\nIf this takes too long and/or times out we'll need to split this up. In any case\nwe're going to need more capacity from AppVeyor no matter what becaue the two\npc-windows-gnu targets can't cross compile so we need at least 2 more builders\nno matter what.", "tree": {"sha": "e94b7db964135d504eea55fe8e994b1c8001bf49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e94b7db964135d504eea55fe8e994b1c8001bf49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5286c681a914fcff5bf686398ebdcd0f06e4241e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5286c681a914fcff5bf686398ebdcd0f06e4241e", "html_url": "https://github.com/rust-lang/rust/commit/5286c681a914fcff5bf686398ebdcd0f06e4241e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5286c681a914fcff5bf686398ebdcd0f06e4241e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62eb6056d332be09206dc664f2e949ae64341e64", "url": "https://api.github.com/repos/rust-lang/rust/commits/62eb6056d332be09206dc664f2e949ae64341e64", "html_url": "https://github.com/rust-lang/rust/commit/62eb6056d332be09206dc664f2e949ae64341e64"}], "stats": {"total": 51, "additions": 38, "deletions": 13}, "files": [{"sha": "44791b033a641a789a1efc98f24abd78b40551ef", "filename": "appveyor.yml", "status": "modified", "additions": 38, "deletions": 13, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/5286c681a914fcff5bf686398ebdcd0f06e4241e/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/5286c681a914fcff5bf686398ebdcd0f06e4241e/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=5286c681a914fcff5bf686398ebdcd0f06e4241e", "patch": "@@ -5,17 +5,15 @@ environment:\n     secure: 1UkmbiDd15tWtYbMm5O2Uqm0b0Ur8v1MoSlydxl4ojcroPeerRMlUges0l57py8c\n   SCCACHE_DIGEST: f808afabb4a4eb1d7112bcb3fa6be03b61e93412890c88e177c667eb37f46353d7ec294e559b16f9f4b5e894f2185fe7670a0df15fd064889ecbd80f0c34166c\n   matrix:\n-  # 32/64 bit MSVC\n+  # 32/64 bit MSVC tests\n   - MSYS_BITS: 64\n-    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-extended\n-    SCRIPT: python x.py test && python x.py dist\n-    DEPLOY: 1\n+    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n+    SCRIPT: python x.py test\n   - MSYS_BITS: 32\n-    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc --target=i586-pc-windows-msvc --enable-extended\n-    SCRIPT: python x.py test --host i686-pc-windows-msvc --target i686-pc-windows-msvc && python x.py dist\n-    DEPLOY: 1\n+    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc --target=i586-pc-windows-msvc\n+    SCRIPT: python x.py test --host i686-pc-windows-msvc --target i686-pc-windows-msvc\n \n-  # MSVC cargotest\n+  # MSVC aux tests\n   - MSYS_BITS: 64\n     RUST_CHECK_TARGET: check-aux\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n@@ -44,16 +42,40 @@ environment:\n   # And as a final point of note, the 32-bit MinGW build using the makefiles do\n   # *not* use debug assertions and llvm assertions. This is because they take\n   # too long on appveyor and this is tested by rustbuild below.\n+  - MSYS_BITS: 32\n+    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n+    SCRIPT: python x.py test\n+    MINGW_URL: https://s3.amazonaws.com/rust-lang-ci\n+    MINGW_ARCHIVE: i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z\n+    MINGW_DIR: mingw32\n+  - MSYS_BITS: 64\n+    SCRIPT: python x.py test\n+    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu\n+    MINGW_URL: https://s3.amazonaws.com/rust-lang-ci\n+    MINGW_ARCHIVE: x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z\n+    MINGW_DIR: mingw64\n+\n+  # 32/64 bit MSVC and GNU deployment\n+  - RUST_CONFIGURE_ARGS: >\n+      --build=x86_64-pc-windows-msvc\n+      --enable-extended\n+    SCRIPT: python x.py dist\n+    DEPLOY: 1\n+  - RUST_CONFIGURE_ARGS: >\n+      --build=i686-pc-windows-msvc\n+      --target=i586-pc-windows-msvc\n+      --enable-extended\n+    SCRIPT: python x.py dist\n+    DEPLOY: 1\n   - MSYS_BITS: 32\n     RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-extended\n-    SCRIPT: python x.py test && python x.py dist\n+    SCRIPT: python x.py dist\n     MINGW_URL: https://s3.amazonaws.com/rust-lang-ci\n     MINGW_ARCHIVE: i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z\n     MINGW_DIR: mingw32\n     DEPLOY: 1\n-\n   - MSYS_BITS: 64\n-    SCRIPT: python x.py test && python x.py dist\n+    SCRIPT: python x.py dist\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-extended\n     MINGW_URL: https://s3.amazonaws.com/rust-lang-ci\n     MINGW_ARCHIVE: x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z\n@@ -83,12 +105,15 @@ install:\n   # file exists in there (which it doesn't by default).\n   - if defined MINGW_URL appveyor DownloadFile %MINGW_URL%/%MINGW_ARCHIVE%\n   - if defined MINGW_URL 7z x -y %MINGW_ARCHIVE% > nul\n-  - if defined MINGW_URL set PATH=C:\\Python27;%CD%\\%MINGW_DIR%\\bin;C:\\msys64\\usr\\bin;%PATH%\n-  - if defined MINGW_URL copy C:\\Python27\\python.exe C:\\Python27\\python2.7.exe\n+  - if defined MINGW_URL set PATH=%CD%\\%MINGW_DIR%\\bin;C:\\msys64\\usr\\bin;%PATH%\n \n   # Otherwise pull in the MinGW installed on appveyor\n   - if NOT defined MINGW_URL set PATH=C:\\msys64\\mingw%MSYS_BITS%\\bin;C:\\msys64\\usr\\bin;%PATH%\n \n+  # Prefer the \"native\" Python as LLVM has trouble building with MSYS sometimes\n+  - copy C:\\Python27\\python.exe C:\\Python27\\python2.7.exe\n+  - set PATH=C:\\Python27;%PATH%\n+\n   # Download and install sccache\n   - appveyor DownloadFile https://api.pub.build.mozilla.org/tooltool/sha512/%SCCACHE_DIGEST%\n   - mv %SCCACHE_DIGEST% sccache.tar.bz2"}]}