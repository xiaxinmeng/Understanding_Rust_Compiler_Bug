{"sha": "7374fdcf541ff92449112a539345e48a27edc45e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNzRmZGNmNTQxZmY5MjQ0OTExMmE1MzkzNDVlNDhhMjdlZGM0NWU=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-12-19T08:54:39Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-19T12:18:30Z"}, "message": "Remove a token after closing delimiter from the span of macro in type position", "tree": {"sha": "48fb5816c6293a6457e365dfdf2d44786eb091a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48fb5816c6293a6457e365dfdf2d44786eb091a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7374fdcf541ff92449112a539345e48a27edc45e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7374fdcf541ff92449112a539345e48a27edc45e", "html_url": "https://github.com/rust-lang/rust/commit/7374fdcf541ff92449112a539345e48a27edc45e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7374fdcf541ff92449112a539345e48a27edc45e/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9f047c048eac4f135dd6df5223b7195d651539d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9f047c048eac4f135dd6df5223b7195d651539d", "html_url": "https://github.com/rust-lang/rust/commit/a9f047c048eac4f135dd6df5223b7195d651539d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "74ec11b83c78a80a2bcf7856f38c4f4e4e5bae62", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7374fdcf541ff92449112a539345e48a27edc45e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7374fdcf541ff92449112a539345e48a27edc45e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=7374fdcf541ff92449112a539345e48a27edc45e", "patch": "@@ -1553,7 +1553,7 @@ impl<'a> Parser<'a> {\n             if self.eat(&token::Not) {\n                 // Macro invocation in type position\n                 let (_, tts) = self.expect_delimited_token_tree()?;\n-                TyKind::Mac(respan(lo.to(self.span), Mac_ { path: path, tts: tts }))\n+                TyKind::Mac(respan(lo.to(self.prev_span), Mac_ { path: path, tts: tts }))\n             } else {\n                 // Just a type path or bound list (trait object type) starting with a trait.\n                 //   `Type`"}]}