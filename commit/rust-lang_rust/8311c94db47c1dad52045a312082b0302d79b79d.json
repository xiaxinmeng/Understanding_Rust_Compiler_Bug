{"sha": "8311c94db47c1dad52045a312082b0302d79b79d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMTFjOTRkYjQ3YzFkYWQ1MjA0NWEzMTIwODJiMDMwMmQ3OWI3OWQ=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-12-17T20:43:28Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-12-17T20:43:28Z"}, "message": "Merge pull request #4200 from ttaubert/issue-2649-rewrite-to_str_bytes\n\nrewrite uint::to_str_bytes to avoid raw pointers", "tree": {"sha": "98920bd28dd7f5c9715792bea386a7aa097d7583", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98920bd28dd7f5c9715792bea386a7aa097d7583"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8311c94db47c1dad52045a312082b0302d79b79d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8311c94db47c1dad52045a312082b0302d79b79d", "html_url": "https://github.com/rust-lang/rust/commit/8311c94db47c1dad52045a312082b0302d79b79d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8311c94db47c1dad52045a312082b0302d79b79d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70fbdb95809e94e3c6537eac78d47656a601bfe3", "url": "https://api.github.com/repos/rust-lang/rust/commits/70fbdb95809e94e3c6537eac78d47656a601bfe3", "html_url": "https://github.com/rust-lang/rust/commit/70fbdb95809e94e3c6537eac78d47656a601bfe3"}, {"sha": "2f3d4f61817fcfe48c03990f94175258bdbcc0cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f3d4f61817fcfe48c03990f94175258bdbcc0cb", "html_url": "https://github.com/rust-lang/rust/commit/2f3d4f61817fcfe48c03990f94175258bdbcc0cb"}], "stats": {"total": 48, "additions": 20, "deletions": 28}, "files": [{"sha": "17a2b02647e4532241a74a7b1ceba5f85248df57", "filename": "src/libcore/uint-template.rs", "status": "modified", "additions": 20, "deletions": 28, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/8311c94db47c1dad52045a312082b0302d79b79d/src%2Flibcore%2Fuint-template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8311c94db47c1dad52045a312082b0302d79b79d/src%2Flibcore%2Fuint-template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fuint-template.rs?ref=8311c94db47c1dad52045a312082b0302d79b79d", "patch": "@@ -179,7 +179,7 @@ pub pure fn to_str_bytes<U>(neg: bool, num: T, radix: uint,\n                    f: fn(v: &[u8]) -> U) -> U {\n \n     #[inline(always)]\n-    fn digit(n: T) -> u8 {\n+    pure fn digit(n: T) -> u8 {\n         if n <= 9u as T {\n             n as u8 + '0' as u8\n         } else if n <= 15u as T {\n@@ -195,35 +195,27 @@ pub pure fn to_str_bytes<U>(neg: bool, num: T, radix: uint,\n     // Worst case: 64-bit number, binary-radix, with\n     // a leading negative sign = 65 bytes.\n     let buf : [mut u8 * 65] = [mut 0u8, ..65];\n+    let len = buf.len();\n \n-    // FIXME (#2649): post-snapshot, you can do this without the raw\n-    // pointers and unsafe bits, and the codegen will prove it's all\n-    // in-bounds, no extra cost.\n-\n-    unsafe {\n-        do vec::as_imm_buf(buf) |p, len| {\n-            let mp = p as *mut u8;\n-            let mut i = len;\n-            let mut n = num;\n-            let radix = radix as T;\n-            loop {\n-                i -= 1u;\n-                assert 0u < i && i < len;\n-                *ptr::mut_offset(mp, i) = digit(n % radix);\n-                n /= radix;\n-                if n == 0 as T { break; }\n-            }\n-\n-            assert 0u < i && i < len;\n-\n-            if neg {\n-                i -= 1u;\n-                *ptr::mut_offset(mp, i) = '-' as u8;\n-            }\n-\n-            vec::raw::buf_as_slice(ptr::offset(p, i), len - i, f)\n-        }\n+    let mut i = len;\n+    let mut n = num;\n+    let radix = radix as T;\n+    loop {\n+        i -= 1u;\n+        assert 0u < i && i < len;\n+        buf[i] = digit(n % radix);\n+        n /= radix;\n+        if n == 0 as T { break; }\n+    }\n+\n+    assert 0u < i && i < len;\n+\n+    if neg {\n+        i -= 1u;\n+        buf[i] = '-' as u8;\n     }\n+\n+    f(vec::view(buf, i, len))\n }\n \n /// Convert to a string"}]}