{"sha": "7de6f5472812a7dde8ffba399b71a3c558cd44bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkZTZmNTQ3MjgxMmE3ZGRlOGZmYmEzOTliNzFhM2M1NThjZDQ0YmY=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-06-24T08:43:51Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-06-24T08:45:21Z"}, "message": "Turn internal lints into tool lints", "tree": {"sha": "83e7cd0180cbcd1b3c22e9b540ffe216c3de9007", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83e7cd0180cbcd1b3c22e9b540ffe216c3de9007"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7de6f5472812a7dde8ffba399b71a3c558cd44bf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl0QjaEACgkQaTCGhp1Q\nZjdkiQ/+Nhxar98G8UaLQkSWIUEHo8dVeG6uhKspxvJ5hFU7YROwzE0CGoMsLujq\nZKFnvY0qXurDLsjhNCu9dwfROmaxBVfZEtRY7VNbXLJOpbA8LO6lJgByf0IeRVPc\noxdM9lWyW+YiYxMEVH34abiTdVIAM/BQZz+AMCLqwfGfoBp9vO1iBU8SJ9zes1xe\nzYgDoCvJ3LhPCXidzdgO1lkvL9ww3W6ZGb1hoGcBCzPGhFCdom5RJWGWHsu7PgrM\n89rK3dovlMAcjnl6MDE6z+wk4OM0Nql1NsnKGgN3sY7IYxiEIanllEGZFeGE24su\nj3vz7p4Sjbg1KdmHQTOxtqB+rqI2vPWb5mSJj7eGrulqU7XkszifknI393xalopZ\n0LeVDE0sz3FQqciWqcGLp2H7mzNJtMbeRyqvYAFz0q12BhK7Mr/rqyJYgueGlkfr\nyCEF2dCI23Jly4GKBdruzmiQqEsB8uBJFxWQjIuH05RTbY947R+VBJJfjLJlkfhe\nTYRGrcgMsuL34w4XueMofP0rSWrT9bh8SkD8y/AlOzjTYe6dCq4hFUa370K9g3IF\njHPDp2dgd4NBX8HqZAGnugUmCwUfsBmRKIfH2Yi8kdTw0Kh1+Fu93lHRyyVr3dru\nyCRQI8AUqewEtZIsvd0j9NWZKQ7qMB2zAguXfYuIzWlNfoCg34U=\n=NKDT\n-----END PGP SIGNATURE-----", "payload": "tree 83e7cd0180cbcd1b3c22e9b540ffe216c3de9007\nparent 08b81f2d070fdeb5364c96ccb2fdd8d992dff955\nauthor flip1995 <hello@philkrones.com> 1561365831 +0200\ncommitter flip1995 <hello@philkrones.com> 1561365921 +0200\n\nTurn internal lints into tool lints\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7de6f5472812a7dde8ffba399b71a3c558cd44bf", "html_url": "https://github.com/rust-lang/rust/commit/7de6f5472812a7dde8ffba399b71a3c558cd44bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7de6f5472812a7dde8ffba399b71a3c558cd44bf/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08b81f2d070fdeb5364c96ccb2fdd8d992dff955", "url": "https://api.github.com/repos/rust-lang/rust/commits/08b81f2d070fdeb5364c96ccb2fdd8d992dff955", "html_url": "https://github.com/rust-lang/rust/commit/08b81f2d070fdeb5364c96ccb2fdd8d992dff955"}], "stats": {"total": 84, "additions": 47, "deletions": 37}, "files": [{"sha": "a1333ff3dc7008cf3850414cc5b44eed18ff150d", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -306,10 +306,14 @@ fn main() {\n     }\n \n     // This is required for internal lints.\n+    cmd.arg(\"-Zunstable-options\");\n     if let Some(crate_name) = args.windows(2).find(|a| &*a[0] == \"--crate-name\") {\n         let crate_name = crate_name[1].to_string_lossy();\n-        if crate_name.starts_with(\"rustc\") || crate_name.starts_with(\"syntax\") {\n-            cmd.arg(\"-Zunstable-options\");\n+        if crate_name.starts_with(\"rustc\")\n+            || crate_name.starts_with(\"syntax\")\n+            || crate_name == \"arena\"\n+            || crate_name == \"fmt_macros\"\n+        {\n             if stage != \"0\" {\n                 cmd.arg(\"-Wrustc::internal\");\n             }"}, {"sha": "950f7ad2e089f2484260096c3049da84b8135222", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -1341,7 +1341,7 @@ struct LateLintPassObjects<'a> {\n     lints: &'a mut [LateLintPassObject],\n }\n \n-#[cfg_attr(not(stage0), allow(lint_pass_impl_without_macro))]\n+#[cfg_attr(not(bootstrap), allow(rustc::lint_pass_impl_without_macro))]\n impl LintPass for LateLintPassObjects<'_> {\n     fn name(&self) -> &'static str {\n         panic!()\n@@ -1511,7 +1511,7 @@ struct EarlyLintPassObjects<'a> {\n     lints: &'a mut [EarlyLintPassObject],\n }\n \n-#[cfg_attr(not(stage0), allow(lint_pass_impl_without_macro))]\n+#[cfg_attr(not(bootstrap), allow(rustc::lint_pass_impl_without_macro))]\n impl LintPass for EarlyLintPassObjects<'_> {\n     fn name(&self) -> &'static str {\n         panic!()"}, {"sha": "34899736949675cd2142cd4967fa30bc37ccacaa", "filename": "src/librustc/lint/internal.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Flibrustc%2Flint%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Flibrustc%2Flint%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Finternal.rs?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -11,8 +11,8 @@ use syntax::ast::{Ident, Item, ItemKind};\n use syntax::symbol::{sym, Symbol};\n use syntax_pos::ExpnInfo;\n \n-declare_lint! {\n-    pub DEFAULT_HASH_TYPES,\n+declare_tool_lint! {\n+    pub rustc::DEFAULT_HASH_TYPES,\n     Allow,\n     \"forbid HashMap and HashSet and suggest the FxHash* variants\"\n }\n@@ -23,7 +23,7 @@ pub struct DefaultHashTypes {\n \n impl DefaultHashTypes {\n     // we are allowed to use `HashMap` and `HashSet` as identifiers for implementing the lint itself\n-    #[allow(default_hash_types)]\n+    #[cfg_attr(not(bootstrap), allow(rustc::default_hash_types))]\n     pub fn new() -> Self {\n         let mut map = FxHashMap::default();\n         map.insert(sym::HashMap, sym::FxHashMap);\n@@ -51,20 +51,20 @@ impl EarlyLintPass for DefaultHashTypes {\n     }\n }\n \n-declare_lint! {\n-    pub USAGE_OF_TY_TYKIND,\n+declare_tool_lint! {\n+    pub rustc::USAGE_OF_TY_TYKIND,\n     Allow,\n     \"usage of `ty::TyKind` outside of the `ty::sty` module\"\n }\n \n-declare_lint! {\n-    pub TY_PASS_BY_REFERENCE,\n+declare_tool_lint! {\n+    pub rustc::TY_PASS_BY_REFERENCE,\n     Allow,\n     \"passing `Ty` or `TyCtxt` by reference\"\n }\n \n-declare_lint! {\n-    pub USAGE_OF_QUALIFIED_TY,\n+declare_tool_lint! {\n+    pub rustc::USAGE_OF_QUALIFIED_TY,\n     Allow,\n     \"using `ty::{Ty,TyCtxt}` instead of importing it\"\n }\n@@ -215,8 +215,8 @@ fn gen_args(segment: &PathSegment) -> String {\n     String::new()\n }\n \n-declare_lint! {\n-    pub LINT_PASS_IMPL_WITHOUT_MACRO,\n+declare_tool_lint! {\n+    pub rustc::LINT_PASS_IMPL_WITHOUT_MACRO,\n     Allow,\n     \"`impl LintPass` without the `declare_lint_pass!` or `impl_lint_pass!` macros\"\n }"}, {"sha": "796b2b3c1a1c8555af3c639ff9c98bf64512b6ef", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -1,6 +1,6 @@\n // ignore-tidy-filelength\n \n-#![allow(usage_of_ty_tykind)]\n+#![cfg_attr(not(bootstrap), allow(rustc::usage_of_ty_tykind))]\n \n pub use self::Variance::*;\n pub use self::AssocItemContainer::*;"}, {"sha": "7609e9591fb0a15f21d2411708ba81efd40fdf40", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -27,7 +27,7 @@\n #![cfg_attr(test, feature(test))]\n \n #![deny(rust_2018_idioms)]\n-#![allow(default_hash_types)]\n+#![cfg_attr(not(bootstrap), allow(rustc::default_hash_types))]\n \n #[macro_use]\n extern crate log;"}, {"sha": "28996f93312b2eb9dec752da353f86fca095254a", "filename": "src/librustc_macros/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Flibrustc_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Flibrustc_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Flib.rs?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -1,6 +1,6 @@\n #![feature(proc_macro_hygiene)]\n #![deny(rust_2018_idioms)]\n-#![allow(default_hash_types)]\n+#![cfg_attr(not(bootstrap), allow(rustc::default_hash_types))]\n \n extern crate proc_macro;\n "}, {"sha": "08bea08c2574eb80fdd23ffc73a95f007e7ad667", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -60,7 +60,7 @@ pub fn is_known(attr: &Attribute) -> bool {\n }\n \n pub fn is_known_lint_tool(m_item: Ident) -> bool {\n-    [\"clippy\"].contains(&m_item.as_str().as_ref())\n+    [\"clippy\", \"rustc\"].contains(&m_item.as_str().as_ref())\n }\n \n impl NestedMetaItem {"}, {"sha": "2a57876f464c0b391600265ff4577788514116af", "filename": "src/test/ui-fulldeps/auxiliary/lint-tool-test.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -8,8 +8,7 @@ extern crate syntax;\n extern crate rustc;\n extern crate rustc_plugin;\n \n-use rustc::lint::{EarlyContext, LintContext, LintPass, EarlyLintPass,\n-                  LintArray};\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};\n use rustc_plugin::Registry;\n use syntax::ast;\n declare_tool_lint!(pub clippy::TEST_LINT, Warn, \"Warn about stuff\");\n@@ -19,7 +18,14 @@ declare_tool_lint!(\n     Warn, \"Warn about other stuff\"\n );\n \n-declare_lint_pass!(Pass => [TEST_LINT, TEST_GROUP]);\n+declare_tool_lint!(\n+    /// Some docs\n+    pub rustc::TEST_RUSTC_TOOL_LINT,\n+    Deny,\n+    \"Deny internal stuff\"\n+);\n+\n+declare_lint_pass!(Pass => [TEST_LINT, TEST_GROUP, TEST_RUSTC_TOOL_LINT]);\n \n impl EarlyLintPass for Pass {\n     fn check_item(&mut self, cx: &EarlyContext, it: &ast::Item) {"}, {"sha": "3786c6de7e78c400a827cf3f4e339e47d232e6c1", "filename": "src/test/ui-fulldeps/internal-lints/default_hash_types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdefault_hash_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdefault_hash_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdefault_hash_types.rs?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -7,7 +7,7 @@ extern crate rustc_data_structures;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use std::collections::{HashMap, HashSet};\n \n-#[deny(default_hash_types)]\n+#[deny(rustc::default_hash_types)]\n fn main() {\n     let _map: HashMap<String, String> = HashMap::default();\n     //~^ ERROR Prefer FxHashMap over HashMap, it has better performance"}, {"sha": "c1762d31323cf8b2a1a83ac008ab9659083fa964", "filename": "src/test/ui-fulldeps/internal-lints/default_hash_types.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdefault_hash_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdefault_hash_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdefault_hash_types.stderr?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -7,8 +7,8 @@ LL |     let _map: HashMap<String, String> = HashMap::default();\n note: lint level defined here\n   --> $DIR/default_hash_types.rs:10:8\n    |\n-LL | #[deny(default_hash_types)]\n-   |        ^^^^^^^^^^^^^^^^^^\n+LL | #[deny(rustc::default_hash_types)]\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary\n \n error: Prefer FxHashMap over HashMap, it has better performance"}, {"sha": "48dd5b122b5acd023f074022a8474b1481b208ab", "filename": "src/test/ui-fulldeps/internal-lints/lint_pass_impl_without_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.rs?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -1,7 +1,7 @@\n // compile-flags: -Z unstable-options\n \n #![feature(rustc_private)]\n-#![deny(lint_pass_impl_without_macro)]\n+#![deny(rustc::lint_pass_impl_without_macro)]\n \n extern crate rustc;\n "}, {"sha": "b439ae2cd148d5dbe97cbd4de7b3ebddc031db25", "filename": "src/test/ui-fulldeps/internal-lints/lint_pass_impl_without_macro.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.stderr?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -7,8 +7,8 @@ LL | impl LintPass for Foo {\n note: lint level defined here\n   --> $DIR/lint_pass_impl_without_macro.rs:4:9\n    |\n-LL | #![deny(lint_pass_impl_without_macro)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustc::lint_pass_impl_without_macro)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: try using `declare_lint_pass!` or `impl_lint_pass!` instead\n \n error: implementing `LintPass` by hand"}, {"sha": "7564c0245802ddcde7d526be33212f8a2daa41ee", "filename": "src/test/ui-fulldeps/internal-lints/pass_ty_by_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref.rs?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -1,7 +1,7 @@\n // compile-flags: -Z unstable-options\n \n #![feature(rustc_private)]\n-#![deny(ty_pass_by_reference)]\n+#![deny(rustc::ty_pass_by_reference)]\n #![allow(unused)]\n \n extern crate rustc;"}, {"sha": "d2ed6b6a19c31eb722b665c1e9d76b7b33c316bc", "filename": "src/test/ui-fulldeps/internal-lints/pass_ty_by_ref.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref.stderr?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -7,8 +7,8 @@ LL |     ty_ref: &Ty<'_>,\n note: lint level defined here\n   --> $DIR/pass_ty_by_ref.rs:4:9\n    |\n-LL | #![deny(ty_pass_by_reference)]\n-   |         ^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustc::ty_pass_by_reference)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: passing `TyCtxt<'_>` by reference\n   --> $DIR/pass_ty_by_ref.rs:15:18"}, {"sha": "0040230ec7d7c6e4871c9f7f7dff7adcccaf78e8", "filename": "src/test/ui-fulldeps/internal-lints/qualified_ty_ty_ctxt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fqualified_ty_ty_ctxt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fqualified_ty_ty_ctxt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fqualified_ty_ty_ctxt.rs?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -1,7 +1,7 @@\n // compile-flags: -Z unstable-options\n \n #![feature(rustc_private)]\n-#![deny(usage_of_qualified_ty)]\n+#![deny(rustc::usage_of_qualified_ty)]\n #![allow(unused)]\n \n extern crate rustc;"}, {"sha": "72c23f8cd3cac0fc36ed3e96d1167c582ff33957", "filename": "src/test/ui-fulldeps/internal-lints/qualified_ty_ty_ctxt.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fqualified_ty_ty_ctxt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fqualified_ty_ty_ctxt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fqualified_ty_ty_ctxt.stderr?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -7,8 +7,8 @@ LL |     ty_q: ty::Ty<'_>,\n note: lint level defined here\n   --> $DIR/qualified_ty_ty_ctxt.rs:4:9\n    |\n-LL | #![deny(usage_of_qualified_ty)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustc::usage_of_qualified_ty)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: usage of qualified `ty::TyCtxt<'_>`\n   --> $DIR/qualified_ty_ty_ctxt.rs:27:16"}, {"sha": "c6bd122f4e5489dd8f8f61733bbeed25977fb545", "filename": "src/test/ui-fulldeps/internal-lints/ty_tykind_usage.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fty_tykind_usage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fty_tykind_usage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fty_tykind_usage.rs?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -6,7 +6,7 @@ extern crate rustc;\n \n use rustc::ty::{self, Ty, TyKind};\n \n-#[deny(usage_of_ty_tykind)]\n+#[deny(rustc::usage_of_ty_tykind)]\n fn main() {\n     let sty = TyKind::Bool; //~ ERROR usage of `ty::TyKind::<kind>`\n "}, {"sha": "8add4252c4103a36e0b5c46161546eef87bab52c", "filename": "src/test/ui-fulldeps/internal-lints/ty_tykind_usage.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fty_tykind_usage.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de6f5472812a7dde8ffba399b71a3c558cd44bf/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fty_tykind_usage.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fty_tykind_usage.stderr?ref=7de6f5472812a7dde8ffba399b71a3c558cd44bf", "patch": "@@ -7,8 +7,8 @@ LL |     let sty = TyKind::Bool;\n note: lint level defined here\n   --> $DIR/ty_tykind_usage.rs:9:8\n    |\n-LL | #[deny(usage_of_ty_tykind)]\n-   |        ^^^^^^^^^^^^^^^^^^\n+LL | #[deny(rustc::usage_of_ty_tykind)]\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: usage of `ty::TyKind::<kind>`\n   --> $DIR/ty_tykind_usage.rs:14:9"}]}