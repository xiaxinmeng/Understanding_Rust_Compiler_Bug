{"sha": "43098d99ae9ee3d102ce54510d7885bae58e5ac7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzMDk4ZDk5YWU5ZWUzZDEwMmNlNTQ1MTBkNzg4NWJhZTU4ZTVhYzc=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-06-21T14:01:03Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-06-21T14:15:25Z"}, "message": "Remove deprecation support in config", "tree": {"sha": "4e0ad9d6b0a19dedae5be066d9cdd37850343859", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e0ad9d6b0a19dedae5be066d9cdd37850343859"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43098d99ae9ee3d102ce54510d7885bae58e5ac7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43098d99ae9ee3d102ce54510d7885bae58e5ac7", "html_url": "https://github.com/rust-lang/rust/commit/43098d99ae9ee3d102ce54510d7885bae58e5ac7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43098d99ae9ee3d102ce54510d7885bae58e5ac7/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7c2eb8b0885198f9b1a5e44ca49c2289128d27d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7c2eb8b0885198f9b1a5e44ca49c2289128d27d", "html_url": "https://github.com/rust-lang/rust/commit/c7c2eb8b0885198f9b1a5e44ca49c2289128d27d"}], "stats": {"total": 63, "additions": 13, "deletions": 50}, "files": [{"sha": "fa72a9bfb5183ccc62be66befe0e620f9393ca08", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 13, "deletions": 39, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/43098d99ae9ee3d102ce54510d7885bae58e5ac7/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43098d99ae9ee3d102ce54510d7885bae58e5ac7/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=43098d99ae9ee3d102ce54510d7885bae58e5ac7", "patch": "@@ -142,9 +142,10 @@ config_data! {\n         highlighting_strings: bool = \"true\",\n \n         /// Whether to show documentation on hover.\n-        hover_documentation: bool   = \"true\",\n+        hover_documentation: bool       = \"true\",\n         /// Use markdown syntax for links in hover.\n-        hover_linksInHover: bool    = \"true\",\n+        hover_linksInHover |\n+        hoverActions_linksInHover: bool = \"true\",\n \n         /// Whether to show `Debug` action. Only applies when\n         /// `#rust-analyzer.hoverActions.enable#` is set.\n@@ -163,9 +164,6 @@ config_data! {\n         /// Whether to show `Run` action. Only applies when\n         /// `#rust-analyzer.hoverActions.enable#` is set.\n         hoverActions_run: bool             = \"true\",\n-        #[deprecated = \"Use hover.linksInHover instead\"]\n-        /// Use markdown syntax for links in hover.\n-        hoverActions_linksInHover: bool    = \"false\",\n \n         /// Whether to show inlay type hints for method chains.\n         inlayHints_chainingHints: bool      = \"true\",\n@@ -732,7 +730,7 @@ impl Config {\n             run: self.data.hoverActions_enable && self.data.hoverActions_run,\n             debug: self.data.hoverActions_enable && self.data.hoverActions_debug,\n             goto_type_def: self.data.hoverActions_enable && self.data.hoverActions_gotoTypeDef,\n-            links_in_hover: self.data.hoverActions_linksInHover || self.data.hover_linksInHover,\n+            links_in_hover: self.data.hover_linksInHover,\n             markdown: try_or!(\n                 self.caps\n                     .text_document\n@@ -829,7 +827,6 @@ enum WorskpaceSymbolSearchKindDef {\n macro_rules! _config_data {\n     (struct $name:ident {\n         $(\n-            $(#[deprecated=$deprecation_msg:literal])?\n             $(#[doc=$doc:literal])*\n             $field:ident $(| $alias:ident)*: $ty:ty = $default:expr,\n         )*\n@@ -854,9 +851,8 @@ macro_rules! _config_data {\n                     $({\n                         let field = stringify!($field);\n                         let ty = stringify!($ty);\n-                        let deprecation_msg = None $( .or(Some($deprecation_msg)) )?;\n \n-                        (field, ty, &[$($doc),*], $default, deprecation_msg)\n+                        (field, ty, &[$($doc),*], $default)\n                     },)*\n                 ])\n             }\n@@ -867,9 +863,8 @@ macro_rules! _config_data {\n                     $({\n                         let field = stringify!($field);\n                         let ty = stringify!($ty);\n-                        let deprecation_msg = None $( .or(Some($deprecation_msg)) )?;\n \n-                        (field, ty, &[$($doc),*], $default, deprecation_msg)\n+                        (field, ty, &[$($doc),*], $default)\n                     },)*\n                 ])\n             }\n@@ -899,9 +894,7 @@ fn get_field<T: DeserializeOwned>(\n         .unwrap_or(default)\n }\n \n-fn schema(\n-    fields: &[(&'static str, &'static str, &[&str], &str, Option<&str>)],\n-) -> serde_json::Value {\n+fn schema(fields: &[(&'static str, &'static str, &[&str], &str)]) -> serde_json::Value {\n     for ((f1, ..), (f2, ..)) in fields.iter().zip(&fields[1..]) {\n         fn key(f: &str) -> &str {\n             f.splitn(2, '_').next().unwrap()\n@@ -911,23 +904,17 @@ fn schema(\n \n     let map = fields\n         .iter()\n-        .map(|(field, ty, doc, default, deprecation_msg)| {\n+        .map(|(field, ty, doc, default)| {\n             let name = field.replace(\"_\", \".\");\n             let name = format!(\"rust-analyzer.{}\", name);\n-            let props = field_props(field, ty, doc, default, deprecation_msg.as_deref());\n+            let props = field_props(field, ty, doc, default);\n             (name, props)\n         })\n         .collect::<serde_json::Map<_, _>>();\n     map.into()\n }\n \n-fn field_props(\n-    field: &str,\n-    ty: &str,\n-    doc: &[&str],\n-    default: &str,\n-    deprecation_msg: Option<&str>,\n-) -> serde_json::Value {\n+fn field_props(field: &str, ty: &str, doc: &[&str], default: &str) -> serde_json::Value {\n     let doc = doc_comment_to_string(doc);\n     let doc = doc.trim_end_matches('\\n');\n     assert!(\n@@ -946,9 +933,6 @@ fn field_props(\n     }\n     set!(\"markdownDescription\": doc);\n     set!(\"default\": default);\n-    if let Some(deprecation_msg) = deprecation_msg {\n-        set!(\"deprecationMessage\": deprecation_msg);\n-    }\n \n     match ty {\n         \"bool\" => set!(\"type\": \"boolean\"),\n@@ -1045,23 +1029,13 @@ fn field_props(\n }\n \n #[cfg(test)]\n-fn manual(fields: &[(&'static str, &'static str, &[&str], &str, Option<&str>)]) -> String {\n+fn manual(fields: &[(&'static str, &'static str, &[&str], &str)]) -> String {\n     fields\n         .iter()\n-        .map(|(field, _ty, doc, default, deprecation_msg)| {\n+        .map(|(field, _ty, doc, default)| {\n             let name = format!(\"rust-analyzer.{}\", field.replace(\"_\", \".\"));\n             let doc = doc_comment_to_string(*doc);\n-            match deprecation_msg {\n-                Some(deprecation_msg) => {\n-                    format!(\n-                        \"[[{}]]{} (deprecated: `{}`)::\\n+\\n--\\n{}--\\n\",\n-                        name, name, deprecation_msg, doc\n-                    )\n-                }\n-                None => {\n-                    format!(\"[[{}]]{} (default: `{}`)::\\n+\\n--\\n{}--\\n\", name, name, default, doc)\n-                }\n-            }\n+            format!(\"[[{}]]{} (default: `{}`)::\\n+\\n--\\n{}--\\n\", name, name, default, doc)\n         })\n         .collect::<String>()\n }"}, {"sha": "4105d784f2a6814220c239f67bb669e77e6ac8ff", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/43098d99ae9ee3d102ce54510d7885bae58e5ac7/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/43098d99ae9ee3d102ce54510d7885bae58e5ac7/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=43098d99ae9ee3d102ce54510d7885bae58e5ac7", "patch": "@@ -250,11 +250,6 @@ Whether to show `References` action. Only applies when\n Whether to show `Run` action. Only applies when\n `#rust-analyzer.hoverActions.enable#` is set.\n --\n-[[rust-analyzer.hoverActions.linksInHover]]rust-analyzer.hoverActions.linksInHover (deprecated: `Use hover.linksInHover instead`)::\n-+\n---\n-Use markdown syntax for links in hover.\n---\n [[rust-analyzer.inlayHints.chainingHints]]rust-analyzer.inlayHints.chainingHints (default: `true`)::\n +\n --"}, {"sha": "43a5cc2b5ffbe94305c8dedee8f80a92d025fcfb", "filename": "editors/code/package.json", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/43098d99ae9ee3d102ce54510d7885bae58e5ac7/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/43098d99ae9ee3d102ce54510d7885bae58e5ac7/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=43098d99ae9ee3d102ce54510d7885bae58e5ac7", "patch": "@@ -680,12 +680,6 @@\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n-                \"rust-analyzer.hoverActions.linksInHover\": {\n-                    \"markdownDescription\": \"Use markdown syntax for links in hover.\",\n-                    \"default\": false,\n-                    \"deprecationMessage\": \"Use hover.linksInHover instead\",\n-                    \"type\": \"boolean\"\n-                },\n                 \"rust-analyzer.inlayHints.chainingHints\": {\n                     \"markdownDescription\": \"Whether to show inlay type hints for method chains.\",\n                     \"default\": true,"}]}