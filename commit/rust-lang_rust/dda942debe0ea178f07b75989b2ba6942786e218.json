{"sha": "dda942debe0ea178f07b75989b2ba6942786e218", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkYTk0MmRlYmUwZWExNzhmMDdiNzU5ODliMmJhNjk0Mjc4NmUyMTg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-01T09:01:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-01T09:06:16Z"}, "message": "Pull enabled check up", "tree": {"sha": "fedc86771ede31e1c8f97770fb052f2343baeeae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fedc86771ede31e1c8f97770fb052f2343baeeae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dda942debe0ea178f07b75989b2ba6942786e218", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dda942debe0ea178f07b75989b2ba6942786e218", "html_url": "https://github.com/rust-lang/rust/commit/dda942debe0ea178f07b75989b2ba6942786e218", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dda942debe0ea178f07b75989b2ba6942786e218/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fae6cecf5434a865043ec566a6417e9bb28c3a4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fae6cecf5434a865043ec566a6417e9bb28c3a4c", "html_url": "https://github.com/rust-lang/rust/commit/fae6cecf5434a865043ec566a6417e9bb28c3a4c"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "b6bb9da4b8d2f9a0d434ba73477047e7a6a326d3", "filename": "crates/ra_flycheck/src/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dda942debe0ea178f07b75989b2ba6942786e218/crates%2Fra_flycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda942debe0ea178f07b75989b2ba6942786e218/crates%2Fra_flycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_flycheck%2Fsrc%2Flib.rs?ref=dda942debe0ea178f07b75989b2ba6942786e218", "patch": "@@ -24,7 +24,6 @@ pub use crate::conv::url_from_path_with_drive_lowercasing;\n \n #[derive(Clone, Debug)]\n pub struct CheckConfig {\n-    pub enable: bool,\n     pub args: Vec<String>,\n     pub command: String,\n     pub all_targets: bool,\n@@ -216,9 +215,6 @@ impl CheckWatcherThread {\n         // First, clear and cancel the old thread\n         self.message_recv = never();\n         self.check_process = None;\n-        if !self.options.enable {\n-            return;\n-        }\n \n         let mut args: Vec<String> = vec![\n             self.options.command.clone(),"}, {"sha": "16d7f156986723bcbb59c434011de2a232ff2719", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/dda942debe0ea178f07b75989b2ba6942786e218/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda942debe0ea178f07b75989b2ba6942786e218/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=dda942debe0ea178f07b75989b2ba6942786e218", "patch": "@@ -101,11 +101,14 @@ fn get_config(\n             chaining_hints: config.inlay_hints_chaining,\n             max_length: config.inlay_hints_max_length,\n         },\n-        check: CheckConfig {\n-            enable: config.cargo_watch_enable,\n-            args: config.cargo_watch_args.clone(),\n-            command: config.cargo_watch_command.clone(),\n-            all_targets: config.cargo_watch_all_targets,\n+        check: if config.cargo_watch_enable {\n+            Some(CheckConfig {\n+                args: config.cargo_watch_args.clone(),\n+                command: config.cargo_watch_command.clone(),\n+                all_targets: config.cargo_watch_all_targets,\n+            })\n+        } else {\n+            None\n         },\n         rustfmt_args: config.rustfmt_args.clone(),\n         vscode_lldb: config.vscode_lldb,"}, {"sha": "9a4e353fb09a329b7951a3022559761984d99eb7", "filename": "crates/rust-analyzer/src/world.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dda942debe0ea178f07b75989b2ba6942786e218/crates%2Frust-analyzer%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda942debe0ea178f07b75989b2ba6942786e218/crates%2Frust-analyzer%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fworld.rs?ref=dda942debe0ea178f07b75989b2ba6942786e218", "patch": "@@ -32,6 +32,8 @@ use ra_db::ExternSourceId;\n use rustc_hash::{FxHashMap, FxHashSet};\n \n fn create_watcher(workspaces: &[ProjectWorkspace], config: &Config) -> Option<CheckWatcher> {\n+    let check_config = config.check.as_ref()?;\n+\n     // FIXME: Figure out the multi-workspace situation\n     workspaces\n         .iter()\n@@ -41,7 +43,7 @@ fn create_watcher(workspaces: &[ProjectWorkspace], config: &Config) -> Option<Ch\n         })\n         .map(|cargo| {\n             let cargo_project_root = cargo.workspace_root().to_path_buf();\n-            Some(CheckWatcher::new(config.check.clone(), cargo_project_root))\n+            Some(CheckWatcher::new(check_config.clone(), cargo_project_root))\n         })\n         .unwrap_or_else(|| {\n             log::warn!(\"Cargo check watching only supported for cargo workspaces, disabling\");\n@@ -56,7 +58,7 @@ pub struct Config {\n     pub line_folding_only: bool,\n     pub inlay_hints: InlayHintsConfig,\n     pub rustfmt_args: Vec<String>,\n-    pub check: CheckConfig,\n+    pub check: Option<CheckConfig>,\n     pub vscode_lldb: bool,\n     pub proc_macro_srv: Option<String>,\n }"}]}