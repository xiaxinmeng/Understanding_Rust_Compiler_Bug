{"sha": "e0697a309d8081310f9c94ae5f9fefde0924f670", "node_id": "C_kwDOAAsO6NoAKGUwNjk3YTMwOWQ4MDgxMzEwZjljOTRhZTVmOWZlZmRlMDkyNGY2NzA", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-07-28T08:39:19Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-07-28T08:39:19Z"}, "message": "Move output argument from ArchiveBuilder::new to .build()", "tree": {"sha": "4e9aa41715179b7232cbf66c7b714ecd81eba2da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e9aa41715179b7232cbf66c7b714ecd81eba2da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0697a309d8081310f9c94ae5f9fefde0924f670", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0697a309d8081310f9c94ae5f9fefde0924f670", "html_url": "https://github.com/rust-lang/rust/commit/e0697a309d8081310f9c94ae5f9fefde0924f670", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0697a309d8081310f9c94ae5f9fefde0924f670/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6260ecd81e2eb928b7532649888e0b19540f82f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6260ecd81e2eb928b7532649888e0b19540f82f", "html_url": "https://github.com/rust-lang/rust/commit/a6260ecd81e2eb928b7532649888e0b19540f82f"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "9d39b4aa661a0a5dcc6cd72e39f0c5ad976fd4ab", "filename": "src/archive.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e0697a309d8081310f9c94ae5f9fefde0924f670/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0697a309d8081310f9c94ae5f9fefde0924f670/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=e0697a309d8081310f9c94ae5f9fefde0924f670", "patch": "@@ -19,7 +19,6 @@ enum ArchiveEntry {\n \n pub(crate) struct ArArchiveBuilder<'a> {\n     sess: &'a Session,\n-    dst: PathBuf,\n     use_gnu_style_archive: bool,\n     no_builtin_ranlib: bool,\n \n@@ -30,10 +29,9 @@ pub(crate) struct ArArchiveBuilder<'a> {\n }\n \n impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n-    fn new(sess: &'a Session, output: &Path) -> Self {\n+    fn new(sess: &'a Session) -> Self {\n         ArArchiveBuilder {\n             sess,\n-            dst: output.to_path_buf(),\n             use_gnu_style_archive: sess.target.archive_format == \"gnu\",\n             // FIXME fix builtin ranlib on macOS\n             no_builtin_ranlib: sess.target.is_like_osx,\n@@ -74,7 +72,7 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n         Ok(())\n     }\n \n-    fn build(mut self) -> bool {\n+    fn build(mut self, output: &Path) -> bool {\n         enum BuilderKind {\n             Bsd(ar::Builder<File>),\n             Gnu(ar::GnuBuilder<File>),\n@@ -163,7 +161,7 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n         let mut builder = if self.use_gnu_style_archive {\n             BuilderKind::Gnu(\n                 ar::GnuBuilder::new(\n-                    File::create(&self.dst).unwrap_or_else(|err| {\n+                    File::create(output).unwrap_or_else(|err| {\n                         sess.fatal(&format!(\n                             \"error opening destination during archive building: {}\",\n                             err\n@@ -178,7 +176,7 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n         } else {\n             BuilderKind::Bsd(\n                 ar::Builder::new(\n-                    File::create(&self.dst).unwrap_or_else(|err| {\n+                    File::create(output).unwrap_or_else(|err| {\n                         sess.fatal(&format!(\n                             \"error opening destination during archive building: {}\",\n                             err\n@@ -209,7 +207,7 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n \n             // Run ranlib to be able to link the archive\n             let status = std::process::Command::new(ranlib)\n-                .arg(self.dst)\n+                .arg(output)\n                 .status()\n                 .expect(\"Couldn't run ranlib\");\n "}]}