{"sha": "332f2205b092744265914a4064b61161ba368df3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzMmYyMjA1YjA5Mjc0NDI2NTkxNGE0MDY0YjYxMTYxYmEzNjhkZjM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-12T16:17:57Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-12T16:17:57Z"}, "message": "Correct obsolete comment", "tree": {"sha": "6bbc6a58de0d12184b3dcebfd040f655c302e5ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bbc6a58de0d12184b3dcebfd040f655c302e5ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/332f2205b092744265914a4064b61161ba368df3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/332f2205b092744265914a4064b61161ba368df3", "html_url": "https://github.com/rust-lang/rust/commit/332f2205b092744265914a4064b61161ba368df3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/332f2205b092744265914a4064b61161ba368df3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "125559c14b0e85bb69e9b2759d7ecd33a73ea443", "url": "https://api.github.com/repos/rust-lang/rust/commits/125559c14b0e85bb69e9b2759d7ecd33a73ea443", "html_url": "https://github.com/rust-lang/rust/commit/125559c14b0e85bb69e9b2759d7ecd33a73ea443"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "ec9d13e827047420481ce253d98625c9542a0d11", "filename": "crates/ra_hir_def/src/path.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/332f2205b092744265914a4064b61161ba368df3/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332f2205b092744265914a4064b61161ba368df3/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fpath.rs?ref=332f2205b092744265914a4064b61161ba368df3", "patch": "@@ -29,8 +29,7 @@ pub struct PathSegment {\n }\n \n /// Generic arguments to a path segment (e.g. the `i32` in `Option<i32>`). This\n-/// can (in the future) also include bindings of associated types, like in\n-/// `Iterator<Item = Foo>`.\n+/// also includes bindings of associated types, like in `Iterator<Item = Foo>`.\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct GenericArgs {\n     pub args: Vec<GenericArg>,"}]}