{"sha": "e89ade38092a77f402698cb8a9dc0caaa5d4befa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4OWFkZTM4MDkyYTc3ZjQwMjY5OGNiOGE5ZGMwY2FhYTVkNGJlZmE=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-01-14T18:55:32Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-01-14T18:55:32Z"}, "message": "Cleanup assert", "tree": {"sha": "6bd60551b6339bff563d45829ce99f91fa964adb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bd60551b6339bff563d45829ce99f91fa964adb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e89ade38092a77f402698cb8a9dc0caaa5d4befa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e89ade38092a77f402698cb8a9dc0caaa5d4befa", "html_url": "https://github.com/rust-lang/rust/commit/e89ade38092a77f402698cb8a9dc0caaa5d4befa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e89ade38092a77f402698cb8a9dc0caaa5d4befa/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2ed130ffd9c79de26249a1dfb2a8312d6af12b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2ed130ffd9c79de26249a1dfb2a8312d6af12b3", "html_url": "https://github.com/rust-lang/rust/commit/b2ed130ffd9c79de26249a1dfb2a8312d6af12b3"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "1a65b5dc070ad920a58a9242dec63e495226d925", "filename": "crates/ra_assists/src/assist_ctx.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e89ade38092a77f402698cb8a9dc0caaa5d4befa/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e89ade38092a77f402698cb8a9dc0caaa5d4befa/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs?ref=e89ade38092a77f402698cb8a9dc0caaa5d4befa", "patch": "@@ -84,11 +84,7 @@ impl<'a, DB: HirDatabase> AssistCtx<'a, DB> {\n         f: impl FnOnce(&mut AssistBuilder),\n     ) -> Option<Assist> {\n         let label = AssistLabel { label: label.into(), id };\n-        assert_eq!(\n-            label.label.chars().nth(0).and_then(|c| Some(c.is_uppercase())).unwrap(),\n-            true,\n-            \"First character should be uppercase\"\n-        );\n+        assert!(label.label.chars().nth(0).unwrap().is_uppercase());\n \n         let assist = if self.should_compute_edit {\n             let action = {"}]}