{"sha": "b86440f85f195b73c656092d4f5ecefcd19fec71", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NjQ0MGY4NWYxOTViNzNjNjU2MDkyZDRmNWVjZWZjZDE5ZmVjNzE=", "commit": {"author": {"name": "Valerii Hiora", "email": "valerii.hiora@gmail.com", "date": "2014-07-04T07:40:21Z"}, "committer": {"name": "Valerii Hiora", "email": "valerii.hiora@gmail.com", "date": "2014-07-04T07:40:21Z"}, "message": "Removed LLVM bug workaround\n\nIt was required to get iOS compilable but since\nthat time a couple of changes were introduced\nwhich cause the same bug to re-appear and broke \nbuild anyway. Fixing all of them doesn\u2019t look a \nviable alternative to me as it will pollute the \ncode too much.\n\nSo it should be fixed from LLVM side and I hope \nLLVM will upstream corresponding changes in a \nmonth.\n\nMeanwhile, who wants to play with Rust on iOS is \nbetter to use a fork which uses patched LLVM:\nhttps://github.com/vhbit/rust/tree/ios . It may \nlag behind master a bit, but it is Travis-checked \nto compile successfully.", "tree": {"sha": "d6ca16ac10cdaaba0787b7a884177fbd996de2c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6ca16ac10cdaaba0787b7a884177fbd996de2c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b86440f85f195b73c656092d4f5ecefcd19fec71", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b86440f85f195b73c656092d4f5ecefcd19fec71", "html_url": "https://github.com/rust-lang/rust/commit/b86440f85f195b73c656092d4f5ecefcd19fec71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b86440f85f195b73c656092d4f5ecefcd19fec71/comments", "author": {"login": "vhbit", "id": 140199, "node_id": "MDQ6VXNlcjE0MDE5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/140199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vhbit", "html_url": "https://github.com/vhbit", "followers_url": "https://api.github.com/users/vhbit/followers", "following_url": "https://api.github.com/users/vhbit/following{/other_user}", "gists_url": "https://api.github.com/users/vhbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/vhbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vhbit/subscriptions", "organizations_url": "https://api.github.com/users/vhbit/orgs", "repos_url": "https://api.github.com/users/vhbit/repos", "events_url": "https://api.github.com/users/vhbit/events{/privacy}", "received_events_url": "https://api.github.com/users/vhbit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vhbit", "id": 140199, "node_id": "MDQ6VXNlcjE0MDE5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/140199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vhbit", "html_url": "https://github.com/vhbit", "followers_url": "https://api.github.com/users/vhbit/followers", "following_url": "https://api.github.com/users/vhbit/following{/other_user}", "gists_url": "https://api.github.com/users/vhbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/vhbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vhbit/subscriptions", "organizations_url": "https://api.github.com/users/vhbit/orgs", "repos_url": "https://api.github.com/users/vhbit/repos", "events_url": "https://api.github.com/users/vhbit/events{/privacy}", "received_events_url": "https://api.github.com/users/vhbit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00f9ff2b41ffd1f1c187533570d979018724852a", "url": "https://api.github.com/repos/rust-lang/rust/commits/00f9ff2b41ffd1f1c187533570d979018724852a", "html_url": "https://github.com/rust-lang/rust/commit/00f9ff2b41ffd1f1c187533570d979018724852a"}], "stats": {"total": 17, "additions": 2, "deletions": 15}, "files": [{"sha": "87c320e0457cbfe2f3e270e57592ed8306eb0bd9", "filename": "src/libnative/io/timer_unix.rs", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b86440f85f195b73c656092d4f5ecefcd19fec71/src%2Flibnative%2Fio%2Ftimer_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b86440f85f195b73c656092d4f5ecefcd19fec71/src%2Flibnative%2Fio%2Ftimer_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ftimer_unix.rs?ref=b86440f85f195b73c656092d4f5ecefcd19fec71", "patch": "@@ -93,20 +93,7 @@ pub fn now() -> u64 {\n     }\n }\n \n-\n-// Note: although the last parameter isn't used there is no way now to\n-// convert it to unit type, because LLVM dies in SjLj preparation\n-// step (unfortunately iOS uses SjLJ exceptions)\n-//\n-// It's definitely a temporary workaround just to get it working.\n-// So far it looks like an LLVM issue and it was reported:\n-// http://llvm.org/bugs/show_bug.cgi?id=19855\n-// Actually this issue is pretty common while compiling for armv7 iOS\n-// and in most cases it is simply solved by using --opt-level=2 (or -O)\n-//\n-// For this specific case unfortunately turning optimizations wasn't\n-// enough.\n-fn helper(input: libc::c_int, messages: Receiver<Req>, _: int) {\n+fn helper(input: libc::c_int, messages: Receiver<Req>, _: ()) {\n     let mut set: c::fd_set = unsafe { mem::zeroed() };\n \n     let mut fd = FileDesc::new(input, true);\n@@ -218,7 +205,7 @@ impl Timer {\n     pub fn new() -> IoResult<Timer> {\n         // See notes above regarding using int return value\n         // instead of ()\n-        unsafe { HELPER.boot(|| {0}, helper); }\n+        unsafe { HELPER.boot(|| {}, helper); }\n \n         static mut ID: atomics::AtomicUint = atomics::INIT_ATOMIC_UINT;\n         let id = unsafe { ID.fetch_add(1, atomics::Relaxed) };"}]}