{"sha": "57dd22baad83d3e5a8ec81a0bf64ad54464988bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZGQyMmJhYWQ4M2QzZTVhOGVjODFhMGJmNjRhZDU0NDY0OTg4YmM=", "commit": {"author": {"name": "Samrat Man Singh", "email": "samratmansingh@gmail.com", "date": "2020-04-28T15:57:14Z"}, "committer": {"name": "Samrat Man Singh", "email": "samratmansingh@gmail.com", "date": "2020-04-28T16:10:03Z"}, "message": "Suggest `into` to convert into `isize` only if uint is of width 8\n\nSince Into<isize> is not implemented for uint of width greater than 8", "tree": {"sha": "a97d448ef43325e837e8f647866a09c42e158d92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a97d448ef43325e837e8f647866a09c42e158d92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57dd22baad83d3e5a8ec81a0bf64ad54464988bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57dd22baad83d3e5a8ec81a0bf64ad54464988bc", "html_url": "https://github.com/rust-lang/rust/commit/57dd22baad83d3e5a8ec81a0bf64ad54464988bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57dd22baad83d3e5a8ec81a0bf64ad54464988bc/comments", "author": {"login": "samrat", "id": 480806, "node_id": "MDQ6VXNlcjQ4MDgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/480806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samrat", "html_url": "https://github.com/samrat", "followers_url": "https://api.github.com/users/samrat/followers", "following_url": "https://api.github.com/users/samrat/following{/other_user}", "gists_url": "https://api.github.com/users/samrat/gists{/gist_id}", "starred_url": "https://api.github.com/users/samrat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samrat/subscriptions", "organizations_url": "https://api.github.com/users/samrat/orgs", "repos_url": "https://api.github.com/users/samrat/repos", "events_url": "https://api.github.com/users/samrat/events{/privacy}", "received_events_url": "https://api.github.com/users/samrat/received_events", "type": "User", "site_admin": false}, "committer": {"login": "samrat", "id": 480806, "node_id": "MDQ6VXNlcjQ4MDgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/480806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samrat", "html_url": "https://github.com/samrat", "followers_url": "https://api.github.com/users/samrat/followers", "following_url": "https://api.github.com/users/samrat/following{/other_user}", "gists_url": "https://api.github.com/users/samrat/gists{/gist_id}", "starred_url": "https://api.github.com/users/samrat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samrat/subscriptions", "organizations_url": "https://api.github.com/users/samrat/orgs", "repos_url": "https://api.github.com/users/samrat/repos", "events_url": "https://api.github.com/users/samrat/events{/privacy}", "received_events_url": "https://api.github.com/users/samrat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f0a864570d79807c7843ebb995fdcdd384ff3c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f0a864570d79807c7843ebb995fdcdd384ff3c9", "html_url": "https://github.com/rust-lang/rust/commit/1f0a864570d79807c7843ebb995fdcdd384ff3c9"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "aa36bec6e1e8813f5d543f108f0c59d5bbfeb4ca", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/57dd22baad83d3e5a8ec81a0bf64ad54464988bc/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57dd22baad83d3e5a8ec81a0bf64ad54464988bc/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=57dd22baad83d3e5a8ec81a0bf64ad54464988bc", "patch": "@@ -770,12 +770,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 (&ty::Int(exp), &ty::Uint(found)) => {\n                     let is_fallible = match (exp.bit_width(), found.bit_width()) {\n                         (Some(exp), Some(found)) if found < exp => false,\n-                        (None, Some(found)) if found <= 16 => false,\n-                        _ => true\n+                        (None, Some(8)) => false,\n+                        _ => true,\n                     };\n                     suggest_to_change_suffix_or_into(err, is_fallible);\n                     true\n-                },\n+                }\n                 (&ty::Uint(_), &ty::Int(_)) => {\n                     suggest_to_change_suffix_or_into(err, true);\n                     true"}]}