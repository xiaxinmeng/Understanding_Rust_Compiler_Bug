{"sha": "0fa9d31c41cfa5f60dbce1204104eb8d8261be5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmYTlkMzFjNDFjZmE1ZjYwZGJjZTEyMDQxMDRlYjhkODI2MWJlNWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-01T09:58:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-01T09:58:59Z"}, "message": "Auto merge of #78876 - GuillaumeGomez:better-setting-keyboard-ux, r=jyn514\n\nMake keyboard interactions in the settings menu more pleasant\n\n#78868 improved the keyboard interactions with the settings page. This PR goes a bit further by allowing more than just \"space\" to toggle the checkboxes.\n\nr? `@jyn514`", "tree": {"sha": "fad5578bd03825f08b8e0d8ac4bffce1d28c9050", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fad5578bd03825f08b8e0d8ac4bffce1d28c9050"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fa9d31c41cfa5f60dbce1204104eb8d8261be5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fa9d31c41cfa5f60dbce1204104eb8d8261be5f", "html_url": "https://github.com/rust-lang/rust/commit/0fa9d31c41cfa5f60dbce1204104eb8d8261be5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fa9d31c41cfa5f60dbce1204104eb8d8261be5f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4926d01ada661d4fbffb0e5b1708ae5463d47b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4926d01ada661d4fbffb0e5b1708ae5463d47b3", "html_url": "https://github.com/rust-lang/rust/commit/c4926d01ada661d4fbffb0e5b1708ae5463d47b3"}, {"sha": "14ecee769318615b6497957d225c8869d07f3e97", "url": "https://api.github.com/repos/rust-lang/rust/commits/14ecee769318615b6497957d225c8869d07f3e97", "html_url": "https://github.com/rust-lang/rust/commit/14ecee769318615b6497957d225c8869d07f3e97"}], "stats": {"total": 117, "additions": 62, "deletions": 55}, "files": [{"sha": "69984be5eb622b2eee6f619a8b01abff7c3e628a", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 23, "deletions": 22, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/0fa9d31c41cfa5f60dbce1204104eb8d8261be5f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/0fa9d31c41cfa5f60dbce1204104eb8d8261be5f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=0fa9d31c41cfa5f60dbce1204104eb8d8261be5f", "patch": "@@ -40,6 +40,29 @@ if (!DOMTokenList.prototype.remove) {\n     };\n }\n \n+\n+// Gets the human-readable string for the virtual-key code of the\n+// given KeyboardEvent, ev.\n+//\n+// This function is meant as a polyfill for KeyboardEvent#key,\n+// since it is not supported in IE 11 or Chrome for Android. We also test for\n+// KeyboardEvent#keyCode because the handleShortcut handler is\n+// also registered for the keydown event, because Blink doesn't fire\n+// keypress on hitting the Escape key.\n+//\n+// So I guess you could say things are getting pretty interoperable.\n+function getVirtualKey(ev) {\n+    if (\"key\" in ev && typeof ev.key != \"undefined\") {\n+        return ev.key;\n+    }\n+\n+    var c = ev.charCode || ev.keyCode;\n+    if (c == 27) {\n+        return \"Escape\";\n+    }\n+    return String.fromCharCode(c);\n+}\n+\n function getSearchInput() {\n     return document.getElementsByClassName(\"search-input\")[0];\n }\n@@ -326,28 +349,6 @@ function defocusSearchBar() {\n         }\n     }\n \n-    // Gets the human-readable string for the virtual-key code of the\n-    // given KeyboardEvent, ev.\n-    //\n-    // This function is meant as a polyfill for KeyboardEvent#key,\n-    // since it is not supported in Trident.  We also test for\n-    // KeyboardEvent#keyCode because the handleShortcut handler is\n-    // also registered for the keydown event, because Blink doesn't fire\n-    // keypress on hitting the Escape key.\n-    //\n-    // So I guess you could say things are getting pretty interoperable.\n-    function getVirtualKey(ev) {\n-        if (\"key\" in ev && typeof ev.key != \"undefined\") {\n-            return ev.key;\n-        }\n-\n-        var c = ev.charCode || ev.keyCode;\n-        if (c == 27) {\n-            return \"Escape\";\n-        }\n-        return String.fromCharCode(c);\n-    }\n-\n     function getHelpElement() {\n         buildHelperPopup();\n         return document.getElementById(\"help\");"}, {"sha": "bc14420232c4dd5736ca9c0bda1f920bf8739ec1", "filename": "src/librustdoc/html/static/settings.js", "status": "modified", "additions": 39, "deletions": 33, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/0fa9d31c41cfa5f60dbce1204104eb8d8261be5f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsettings.js", "raw_url": "https://github.com/rust-lang/rust/raw/0fa9d31c41cfa5f60dbce1204104eb8d8261be5f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsettings.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsettings.js?ref=0fa9d31c41cfa5f60dbce1204104eb8d8261be5f", "patch": "@@ -1,5 +1,5 @@\n // Local js definitions:\n-/* global getCurrentValue, updateLocalStorage, updateSystemTheme */\n+/* global getCurrentValue, getVirtualKey, updateLocalStorage, updateSystemTheme */\n \n (function () {\n     function changeSetting(settingName, value) {\n@@ -14,41 +14,47 @@\n         }\n     }\n \n-    function setEvents() {\n-        var elems = {\n-            toggles: document.getElementsByClassName(\"slider\"),\n-            selects: document.getElementsByClassName(\"select-wrapper\")\n-        };\n-        var i;\n-\n-        if (elems.toggles && elems.toggles.length > 0) {\n-            for (i = 0; i < elems.toggles.length; ++i) {\n-                var toggle = elems.toggles[i].previousElementSibling;\n-                var settingId = toggle.id;\n-                var settingValue = getSettingValue(settingId);\n-                if (settingValue !== null) {\n-                    toggle.checked = settingValue === \"true\";\n-                }\n-                toggle.onchange = function() {\n-                    changeSetting(this.id, this.checked);\n-                };\n-            }\n+    function handleKey(ev) {\n+        // Don't interfere with browser shortcuts\n+        if (ev.ctrlKey || ev.altKey || ev.metaKey) {\n+            return;\n+        }\n+        switch (getVirtualKey(ev)) {\n+            case \"Enter\":\n+            case \"Return\":\n+            case \"Space\":\n+                ev.target.checked = !ev.target.checked;\n+                ev.preventDefault();\n+                break;\n         }\n+    }\n \n-        if (elems.selects && elems.selects.length > 0) {\n-            for (i = 0; i < elems.selects.length; ++i) {\n-                var select = elems.selects[i].getElementsByTagName(\"select\")[0];\n-                var settingId = select.id;\n-                var settingValue = getSettingValue(settingId);\n-                if (settingValue !== null) {\n-                    select.value = settingValue;\n-                }\n-                select.onchange = function() {\n-                    changeSetting(this.id, this.value);\n-                };\n+    function setEvents() {\n+        onEachLazy(document.getElementsByClassName(\"slider\"), function(elem) {\n+            var toggle = elem.previousElementSibling;\n+            var settingId = toggle.id;\n+            var settingValue = getSettingValue(settingId);\n+            if (settingValue !== null) {\n+                toggle.checked = settingValue === \"true\";\n             }\n-        }\n+            toggle.onchange = function() {\n+                changeSetting(this.id, this.checked);\n+            };\n+            toggle.onkeyup = handleKey;\n+            toggle.onkeyrelease = handleKey;\n+        });\n+        onEachLazy(document.getElementsByClassName(\"select-wrapper\"), function(elem) {\n+            var select = elem.getElementsByTagName(\"select\")[0];\n+            var settingId = select.id;\n+            var settingValue = getSettingValue(settingId);\n+            if (settingValue !== null) {\n+                select.value = settingValue;\n+            }\n+            select.onchange = function() {\n+                changeSetting(this.id, this.value);\n+            };\n+        });\n     }\n \n-    setEvents();\n+    window.addEventListener(\"DOMContentLoaded\", setEvents);\n })();"}]}