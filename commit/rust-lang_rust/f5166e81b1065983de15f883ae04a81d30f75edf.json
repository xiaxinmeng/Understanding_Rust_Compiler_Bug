{"sha": "f5166e81b1065983de15f883ae04a81d30f75edf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1MTY2ZTgxYjEwNjU5ODNkZTE1Zjg4M2FlMDRhODFkMzBmNzVlZGY=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-11-04T21:41:15Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-11-04T21:41:15Z"}, "message": "Run cargo dev fmt", "tree": {"sha": "a5f803d3f47c86a24ab2bb48f78243570ca68934", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5f803d3f47c86a24ab2bb48f78243570ca68934"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5166e81b1065983de15f883ae04a81d30f75edf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5166e81b1065983de15f883ae04a81d30f75edf", "html_url": "https://github.com/rust-lang/rust/commit/f5166e81b1065983de15f883ae04a81d30f75edf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5166e81b1065983de15f883ae04a81d30f75edf/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "834ad5c51653a5d05f04f6eac6d4e560db4283f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/834ad5c51653a5d05f04f6eac6d4e560db4283f2", "html_url": "https://github.com/rust-lang/rust/commit/834ad5c51653a5d05f04f6eac6d4e560db4283f2"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "0035ded9356cf53ba787f20a386ac9bee6162126", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5166e81b1065983de15f883ae04a81d30f75edf/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5166e81b1065983de15f883ae04a81d30f75edf/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=f5166e81b1065983de15f883ae04a81d30f75edf", "patch": "@@ -7,10 +7,10 @@ use rustc_data_structures::sync::Lrc;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::{BinOp, BinOpKind, Block, Expr, ExprKind, HirId, QPath, UnOp};\n use rustc_lint::LateContext;\n+use rustc_middle::mir::interpret::Scalar;\n use rustc_middle::ty::subst::{Subst, SubstsRef};\n-use rustc_middle::ty::{self, Ty, TyCtxt, ScalarInt};\n+use rustc_middle::ty::{self, ScalarInt, Ty, TyCtxt};\n use rustc_middle::{bug, span_bug};\n-use rustc_middle::mir::interpret::Scalar;\n use rustc_span::symbol::Symbol;\n use std::cmp::Ordering::{self, Equal};\n use std::convert::TryInto;\n@@ -501,7 +501,7 @@ impl<'a, 'tcx> ConstEvalLateContext<'a, 'tcx> {\n }\n \n pub fn miri_to_const(result: &ty::Const<'_>) -> Option<Constant> {\n-    use rustc_middle::mir::interpret::{ConstValue};\n+    use rustc_middle::mir::interpret::ConstValue;\n     match result.val {\n         ty::ConstKind::Value(ConstValue::Scalar(Scalar::Int(int))) => {\n             match result.ty.kind() {"}]}