{"sha": "2af0f0dddff59625a658a061b3befaed82bb90ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhZjBmMGRkZGZmNTk2MjVhNjU4YTA2MWIzYmVmYWVkODJiYjkwZWE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-12-27T18:03:48Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-01-19T19:27:12Z"}, "message": "Hide more stuff from rustc_trans", "tree": {"sha": "87d41b25662fdce7f293714d3ce16cd082de0564", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87d41b25662fdce7f293714d3ce16cd082de0564"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2af0f0dddff59625a658a061b3befaed82bb90ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2af0f0dddff59625a658a061b3befaed82bb90ea", "html_url": "https://github.com/rust-lang/rust/commit/2af0f0dddff59625a658a061b3befaed82bb90ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2af0f0dddff59625a658a061b3befaed82bb90ea/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af0f17386fb2d598883ec4f801da3d7f10ba120b", "url": "https://api.github.com/repos/rust-lang/rust/commits/af0f17386fb2d598883ec4f801da3d7f10ba120b", "html_url": "https://github.com/rust-lang/rust/commit/af0f17386fb2d598883ec4f801da3d7f10ba120b"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "96a130d86d255e84ac6135fabd06748c1c74d4b2", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/2af0f0dddff59625a658a061b3befaed82bb90ea/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2af0f0dddff59625a658a061b3befaed82bb90ea/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=2af0f0dddff59625a658a061b3befaed82bb90ea", "patch": "@@ -89,15 +89,15 @@ use rustc_trans_utils::trans_crate::TransCrate;\n \n mod diagnostics;\n \n-pub(crate) mod back {\n+mod back {\n+    pub use rustc_trans_utils::symbol_names;\n     mod archive;\n     pub mod bytecode;\n     mod command;\n-    pub(crate) mod linker;\n+    pub mod linker;\n     pub mod link;\n     mod lto;\n-    pub(crate) mod symbol_export;\n-    pub(crate) use rustc_trans_utils::symbol_names;\n+    pub mod symbol_export;\n     pub mod write;\n     mod rpath;\n }\n@@ -258,8 +258,8 @@ pub struct ModuleTranslation {\n     /// as the crate name and disambiguator.\n     name: String,\n     llmod_id: String,\n-    pub source: ModuleSource,\n-    pub kind: ModuleKind,\n+    source: ModuleSource,\n+    kind: ModuleKind,\n }\n \n #[derive(Copy, Clone, Debug, PartialEq)]\n@@ -270,14 +270,14 @@ pub enum ModuleKind {\n }\n \n impl ModuleTranslation {\n-    pub fn llvm(&self) -> Option<&ModuleLlvm> {\n+    fn llvm(&self) -> Option<&ModuleLlvm> {\n         match self.source {\n             ModuleSource::Translated(ref llvm) => Some(llvm),\n             ModuleSource::Preexisting(_) => None,\n         }\n     }\n \n-    pub fn into_compiled_module(self,\n+    fn into_compiled_module(self,\n                                 emit_obj: bool,\n                                 emit_bc: bool,\n                                 emit_bc_compressed: bool,\n@@ -317,16 +317,16 @@ impl ModuleTranslation {\n \n #[derive(Debug)]\n pub struct CompiledModule {\n-    pub name: String,\n-    pub llmod_id: String,\n-    pub kind: ModuleKind,\n-    pub pre_existing: bool,\n-    pub object: Option<PathBuf>,\n-    pub bytecode: Option<PathBuf>,\n-    pub bytecode_compressed: Option<PathBuf>,\n+    name: String,\n+    llmod_id: String,\n+    kind: ModuleKind,\n+    pre_existing: bool,\n+    object: Option<PathBuf>,\n+    bytecode: Option<PathBuf>,\n+    bytecode_compressed: Option<PathBuf>,\n }\n \n-pub enum ModuleSource {\n+enum ModuleSource {\n     /// Copy the `.o` files or whatever from the incr. comp. directory.\n     Preexisting(WorkProduct),\n \n@@ -337,7 +337,7 @@ pub enum ModuleSource {\n #[derive(Debug)]\n pub struct ModuleLlvm {\n     llcx: llvm::ContextRef,\n-    pub llmod: llvm::ModuleRef,\n+    llmod: llvm::ModuleRef,\n     tm: llvm::TargetMachineRef,\n }\n \n@@ -355,12 +355,12 @@ impl Drop for ModuleLlvm {\n }\n \n pub struct CrateTranslation {\n-    pub crate_name: Symbol,\n-    pub modules: Vec<CompiledModule>,\n+    crate_name: Symbol,\n+    modules: Vec<CompiledModule>,\n     allocator_module: Option<CompiledModule>,\n     metadata_module: CompiledModule,\n-    pub link: rustc::middle::cstore::LinkMeta,\n-    pub metadata: rustc::middle::cstore::EncodedMetadata,\n+    link: rustc::middle::cstore::LinkMeta,\n+    metadata: rustc::middle::cstore::EncodedMetadata,\n     windows_subsystem: Option<String>,\n     linker_info: back::linker::LinkerInfo,\n     crate_info: CrateInfo,"}]}