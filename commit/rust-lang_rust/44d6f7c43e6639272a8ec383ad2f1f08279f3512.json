{"sha": "44d6f7c43e6639272a8ec383ad2f1f08279f3512", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ZDZmN2M0M2U2NjM5MjcyYThlYzM4M2FkMmYxZjA4Mjc5ZjM1MTI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-02-08T03:35:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-08T03:35:50Z"}, "message": "Merge pull request #3332 from rchaser53/issue-3234\n\nadd issue-3234 test", "tree": {"sha": "f7090e1752d9219e9dd1933675d33704c4822244", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7090e1752d9219e9dd1933675d33704c4822244"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44d6f7c43e6639272a8ec383ad2f1f08279f3512", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcXPkWCRBK7hj4Ov3rIwAAdHIIACz2yDvTuqzlJ5hSeW6LVv33\nsrMS5zLv2VaMWKFzMGbMS//M8Mp5XWM9HryiN09WX+Sove04PdvBIKbZb2lCcCrv\nvoC2vpGjwYwvOaWyBbp6Iz2DDhkiLqJ0mo7LL3kLP18Wzp+rGBn2EbiGHy2QzNmN\nrByNG0bQ6wbz6LxKgvu/Cd44keC15PCjnsaZ+mFiPeq46zn5EgZSHGrUJpSII10X\n5hlI+k679XBmoNLC63LvE++Hvj63bxJ2QN4YlxKrEaB5J/jQo4ShVJumyzWe+L6Z\n/AGzCF7qW0RwG+cwd18OBCYzg+6bu5L7Xnl4bKP00aWiJBU3BPCGicoHr52z7AY=\n=Z/XZ\n-----END PGP SIGNATURE-----\n", "payload": "tree f7090e1752d9219e9dd1933675d33704c4822244\nparent 672f352c89b214b9d5a3671efa255a45882a32d1\nparent 5e530980b787067735ff8460f0753bab4a680ca1\nauthor Seiichi Uchida <seuchida@gmail.com> 1549596950 +0900\ncommitter GitHub <noreply@github.com> 1549596950 +0900\n\nMerge pull request #3332 from rchaser53/issue-3234\n\nadd issue-3234 test"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44d6f7c43e6639272a8ec383ad2f1f08279f3512", "html_url": "https://github.com/rust-lang/rust/commit/44d6f7c43e6639272a8ec383ad2f1f08279f3512", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44d6f7c43e6639272a8ec383ad2f1f08279f3512/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "672f352c89b214b9d5a3671efa255a45882a32d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/672f352c89b214b9d5a3671efa255a45882a32d1", "html_url": "https://github.com/rust-lang/rust/commit/672f352c89b214b9d5a3671efa255a45882a32d1"}, {"sha": "5e530980b787067735ff8460f0753bab4a680ca1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e530980b787067735ff8460f0753bab4a680ca1", "html_url": "https://github.com/rust-lang/rust/commit/5e530980b787067735ff8460f0753bab4a680ca1"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "120740a72339b697409604ccca8e917435998a2b", "filename": "tests/source/issue-3234.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/44d6f7c43e6639272a8ec383ad2f1f08279f3512/tests%2Fsource%2Fissue-3234.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44d6f7c43e6639272a8ec383ad2f1f08279f3512/tests%2Fsource%2Fissue-3234.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3234.rs?ref=44d6f7c43e6639272a8ec383ad2f1f08279f3512", "patch": "@@ -0,0 +1,14 @@\n+macro_rules! fuzz_target {\n+    (|$data:ident: &[u8]| $body:block) => {};\n+}\n+\n+fuzz_target!(|data: &[u8]| {\n+\n+    if let Ok(app_img) = AppImage::parse(data) {\n+        if let Ok(app_img) = app_img.sign_for_secureboot(include_str!(\"../../test-data/signing-key\")) {\n+            assert!(app_img.is_signed());\n+            Gbl::from_app_image(app_img).to_bytes();\n+        }\n+    }\n+\n+});"}, {"sha": "c7d9d42bdbe235d6a42e64d85106a948ec3021f7", "filename": "tests/target/issue-3234.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/44d6f7c43e6639272a8ec383ad2f1f08279f3512/tests%2Ftarget%2Fissue-3234.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44d6f7c43e6639272a8ec383ad2f1f08279f3512/tests%2Ftarget%2Fissue-3234.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3234.rs?ref=44d6f7c43e6639272a8ec383ad2f1f08279f3512", "patch": "@@ -0,0 +1,14 @@\n+macro_rules! fuzz_target {\n+    (|$data:ident: &[u8]| $body:block) => {};\n+}\n+\n+fuzz_target!(|data: &[u8]| {\n+    if let Ok(app_img) = AppImage::parse(data) {\n+        if let Ok(app_img) =\n+            app_img.sign_for_secureboot(include_str!(\"../../test-data/signing-key\"))\n+        {\n+            assert!(app_img.is_signed());\n+            Gbl::from_app_image(app_img).to_bytes();\n+        }\n+    }\n+});"}]}