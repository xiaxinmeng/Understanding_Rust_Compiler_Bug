{"sha": "a5516971342ed8fa9ddfb0a05a73c27c180125d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NTE2OTcxMzQyZWQ4ZmE5ZGRmYjBhMDVhNzNjMjdjMTgwMTI1ZDE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-07-17T12:21:24Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-07-24T08:53:19Z"}, "message": "Don't be so eager to call unresolved inference variables an error.  MC\nis being used now before the final regionck stage and in some cases SOME\namount of unresolved inference is OK. In fact, we could probably just\nallow inference variables as well with only minimal pain.", "tree": {"sha": "4f45fca7d9f2ccb42b29b06c97c54693828f710c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f45fca7d9f2ccb42b29b06c97c54693828f710c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5516971342ed8fa9ddfb0a05a73c27c180125d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5516971342ed8fa9ddfb0a05a73c27c180125d1", "html_url": "https://github.com/rust-lang/rust/commit/a5516971342ed8fa9ddfb0a05a73c27c180125d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5516971342ed8fa9ddfb0a05a73c27c180125d1/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4172c8237be8f334d613178645d8143d644a9a11", "url": "https://api.github.com/repos/rust-lang/rust/commits/4172c8237be8f334d613178645d8143d644a9a11", "html_url": "https://github.com/rust-lang/rust/commit/4172c8237be8f334d613178645d8143d644a9a11"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "48042c152b890e714c2e374e7e2a6bc67a1086b7", "filename": "src/librustc/middle/infer/mod.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a5516971342ed8fa9ddfb0a05a73c27c180125d1/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5516971342ed8fa9ddfb0a05a73c27c180125d1/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs?ref=a5516971342ed8fa9ddfb0a05a73c27c180125d1", "patch": "@@ -1162,7 +1162,15 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     /// these unconstrained type variables.\n     fn resolve_type_vars_or_error(&self, t: &Ty<'tcx>) -> mc::McResult<Ty<'tcx>> {\n         let ty = self.resolve_type_vars_if_possible(t);\n-        if ty.has_infer_types() || ty.references_error() { Err(()) } else { Ok(ty) }\n+        if ty.references_error() {\n+            debug!(\"resolve_type_vars_or_error: error from {:?}\", ty);\n+            Err(())\n+        } else if ty.is_ty_var() {\n+            debug!(\"resolve_type_vars_or_error: error from {:?}\", ty);\n+            Err(())\n+        } else {\n+            Ok(ty)\n+        }\n     }\n \n     pub fn fully_resolve<T:TypeFoldable<'tcx>>(&self, value: &T) -> FixupResult<T> {"}]}