{"sha": "d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0", "node_id": "C_kwDOAAsO6NoAKGQzOWZlZmRkNjk0YjAyYzdlN2I0YTY0Y2NiYjM4ZDlmOGJlMTZkZjA", "commit": {"author": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2022-08-01T02:23:09Z"}, "committer": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2022-08-22T10:10:28Z"}, "message": "use type alias impl trait in `outlives_bounds::InferCtxtExt`", "tree": {"sha": "25c432bb502d991d5d9d0150c1223ddb8dce8dfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25c432bb502d991d5d9d0150c1223ddb8dce8dfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0", "html_url": "https://github.com/rust-lang/rust/commit/d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0/comments", "author": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d037f1843e9472d547dc22edbfb18788174c0754", "url": "https://api.github.com/repos/rust-lang/rust/commits/d037f1843e9472d547dc22edbfb18788174c0754", "html_url": "https://github.com/rust-lang/rust/commit/d037f1843e9472d547dc22edbfb18788174c0754"}], "stats": {"total": 40, "additions": 26, "deletions": 14}, "files": [{"sha": "d9aff94fef2f9f28ddd97ebb01a6528d40a7f038", "filename": "compiler/rustc_mir_dataflow/src/framework/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0/compiler%2Frustc_mir_dataflow%2Fsrc%2Fframework%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0/compiler%2Frustc_mir_dataflow%2Fsrc%2Fframework%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fframework%2Fmod.rs?ref=d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0", "patch": "@@ -256,6 +256,7 @@ pub trait Analysis<'tcx>: AnalysisDomain<'tcx> {\n     ///     .iterate_to_fixpoint()\n     ///     .into_results_cursor(body);\n     /// ```\n+    #[inline]\n     fn into_engine<'mir>(\n         self,\n         tcx: TyCtxt<'tcx>,\n@@ -413,7 +414,7 @@ where\n     }\n \n     /* Extension methods */\n-\n+    #[inline]\n     fn into_engine<'mir>(\n         self,\n         tcx: TyCtxt<'tcx>,"}, {"sha": "057e5f93563decdc2b9b4fcb6afb8f9963856c57", "filename": "compiler/rustc_typeck/src/check/wfcheck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0", "patch": "@@ -699,7 +699,7 @@ fn resolve_regions_with_wf_tys<'tcx>(\n         let outlives_environment = OutlivesEnvironment::with_bounds(\n             param_env,\n             Some(&infcx),\n-            infcx.implied_bounds_tys(param_env, id, wf_tys.iter().map(|ty| *ty)),\n+            infcx.implied_bounds_tys(param_env, id, wf_tys.clone()),\n         );\n         let region_bound_pairs = outlives_environment.region_bound_pairs();\n "}, {"sha": "64cd69750f3512cfb44e2080829feb371db82eee", "filename": "compiler/rustc_typeck/src/impl_wf_check/min_specialization.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs?ref=d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0", "patch": "@@ -158,6 +158,16 @@ fn get_impl_substs<'tcx>(\n \n \n \n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n         let errors = ocx.select_all_or_error();\n         if !errors.is_empty() {\n             ocx.infcx.report_fulfillment_errors(&errors, None, false);"}, {"sha": "1ff9c6271316ab3afecb10400857c57a0341ffc6", "filename": "compiler/rustc_typeck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Flib.rs?ref=d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0", "patch": "@@ -72,6 +72,7 @@ This API is completely unstable and subject to change.\n #![feature(slice_partition_dedup)]\n #![feature(try_blocks)]\n #![feature(is_some_with)]\n+#![feature(type_alias_impl_trait)]\n #![recursion_limit = \"256\"]\n \n #[macro_use]"}, {"sha": "024e20d92234b6ab36ee3820586a70769031721e", "filename": "compiler/rustc_typeck/src/outlives/outlives_bounds.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Foutlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Foutlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Foutlives_bounds.rs?ref=d39fefdd694b02c7e7b4a64ccbb38d9f8be16df0", "patch": "@@ -1,3 +1,4 @@\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::HirId;\n use rustc_middle::ty::{self, ParamEnv, Ty};\n@@ -8,6 +9,7 @@ use rustc_trait_selection::traits::{ObligationCause, TraitEngine, TraitEngineExt\n \n pub use rustc_middle::traits::query::OutlivesBound;\n \n+type Bounds<'a, 'tcx: 'a> = impl Iterator<Item = OutlivesBound<'tcx>> + 'a;\n pub trait InferCtxtExt<'a, 'tcx> {\n     fn implied_outlives_bounds(\n         &self,\n@@ -20,8 +22,8 @@ pub trait InferCtxtExt<'a, 'tcx> {\n         &'a self,\n         param_env: ty::ParamEnv<'tcx>,\n         body_id: hir::HirId,\n-        tys: impl IntoIterator<Item = Ty<'tcx>> + 'a,\n-    ) -> Box<dyn Iterator<Item = OutlivesBound<'tcx>> + 'a>;\n+        tys: FxHashSet<Ty<'tcx>>,\n+    ) -> Bounds<'a, 'tcx>;\n }\n \n impl<'a, 'cx, 'tcx: 'a> InferCtxtExt<'a, 'tcx> for InferCtxt<'cx, 'tcx> {\n@@ -100,15 +102,13 @@ impl<'a, 'cx, 'tcx: 'a> InferCtxtExt<'a, 'tcx> for InferCtxt<'cx, 'tcx> {\n         &'a self,\n         param_env: ParamEnv<'tcx>,\n         body_id: HirId,\n-        tys: impl IntoIterator<Item = Ty<'tcx>> + 'a,\n-    ) -> Box<dyn Iterator<Item = OutlivesBound<'tcx>> + 'a> {\n-        Box::new(\n-            tys.into_iter()\n-                .map(move |ty| {\n-                    let ty = self.resolve_vars_if_possible(ty);\n-                    self.implied_outlives_bounds(param_env, body_id, ty)\n-                })\n-                .flatten(),\n-        )\n+        tys: FxHashSet<Ty<'tcx>>,\n+    ) -> Bounds<'a, 'tcx> {\n+        tys.into_iter()\n+            .map(move |ty| {\n+                let ty = self.resolve_vars_if_possible(ty);\n+                self.implied_outlives_bounds(param_env, body_id, ty)\n+            })\n+            .flatten()\n     }\n }"}]}