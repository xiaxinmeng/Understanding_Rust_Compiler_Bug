{"sha": "aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhODE5Yjc3NDhiOGFhNmFlMDNkZGNkYzk5M2I2ZGZmMWJhMjY5MTI=", "commit": {"author": {"name": "josephDunne", "email": "jd@lambda.tech", "date": "2016-03-27T18:59:02Z"}, "committer": {"name": "josephDunne", "email": "jd@lambda.tech", "date": "2016-03-27T19:24:10Z"}, "message": "Update rust-clippy to rustc 1.9.0-nightly (d5a91e695 2016-03-26)\n\nmove cfg, infer, traits and ty from middle to top-level\nmove middle::subst into middle::ty\ntrack the extern-crate def-id rather than path (rustc ab9b844)", "tree": {"sha": "a5e29cb91a4c2ad8cbb17ba2755985d9588924d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5e29cb91a4c2ad8cbb17ba2755985d9588924d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "html_url": "https://github.com/rust-lang/rust/commit/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/comments", "author": {"login": "josephDunne", "id": 1827457, "node_id": "MDQ6VXNlcjE4Mjc0NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1827457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josephDunne", "html_url": "https://github.com/josephDunne", "followers_url": "https://api.github.com/users/josephDunne/followers", "following_url": "https://api.github.com/users/josephDunne/following{/other_user}", "gists_url": "https://api.github.com/users/josephDunne/gists{/gist_id}", "starred_url": "https://api.github.com/users/josephDunne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josephDunne/subscriptions", "organizations_url": "https://api.github.com/users/josephDunne/orgs", "repos_url": "https://api.github.com/users/josephDunne/repos", "events_url": "https://api.github.com/users/josephDunne/events{/privacy}", "received_events_url": "https://api.github.com/users/josephDunne/received_events", "type": "User", "site_admin": false}, "committer": {"login": "josephDunne", "id": 1827457, "node_id": "MDQ6VXNlcjE4Mjc0NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1827457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josephDunne", "html_url": "https://github.com/josephDunne", "followers_url": "https://api.github.com/users/josephDunne/followers", "following_url": "https://api.github.com/users/josephDunne/following{/other_user}", "gists_url": "https://api.github.com/users/josephDunne/gists{/gist_id}", "starred_url": "https://api.github.com/users/josephDunne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josephDunne/subscriptions", "organizations_url": "https://api.github.com/users/josephDunne/orgs", "repos_url": "https://api.github.com/users/josephDunne/repos", "events_url": "https://api.github.com/users/josephDunne/events{/privacy}", "received_events_url": "https://api.github.com/users/josephDunne/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f51293c399eda07678ea74cc6f5a83c557011c63", "url": "https://api.github.com/repos/rust-lang/rust/commits/f51293c399eda07678ea74cc6f5a83c557011c63", "html_url": "https://github.com/rust-lang/rust/commit/f51293c399eda07678ea74cc6f5a83c557011c63"}], "stats": {"total": 81, "additions": 43, "deletions": 38}, "files": [{"sha": "d7b181c8bdba75e9969a9a0a6dcd1e04ab326f2c", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -31,7 +31,7 @@ the lint will end up to be a nested series of matches and ifs,\n [like so](https://github.com/Manishearth/rust-clippy/blob/de5ccdfab68a5e37689f3c950ed1532ba9d652a0/src/misc.rs#L34).\n \n T-middle issues can be more involved and require verifying types. The\n-[`middle::ty`](http://manishearth.github.io/rust-internals-docs/rustc/middle/ty) module contains a\n+[`ty`](http://manishearth.github.io/rust-internals-docs/rustc/middle/ty) module contains a\n lot of methods that are useful, though one of the most useful would be `expr_ty` (gives the type of\n an AST expression). `match_def_path()` in Clippy's `utils` module can also be useful.\n "}, {"sha": "344a8b8c34e0ac2ad4f871f7af7e94331cef1849", "filename": "src/array_indexing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Farray_indexing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Farray_indexing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farray_indexing.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,7 +1,7 @@\n use rustc::lint::*;\n use rustc::middle::const_eval::EvalHint::ExprTypeChecked;\n use rustc::middle::const_eval::{eval_const_expr_partial, ConstVal};\n-use rustc::middle::ty::TyArray;\n+use rustc::ty::TyArray;\n use rustc_front::hir::*;\n use rustc_const_eval::ConstInt;\n use syntax::ast::RangeLimits;"}, {"sha": "789f852c6c35902496a0d64a39c66f7e58c5afb9", "filename": "src/copies.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcopies.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,5 +1,5 @@\n use rustc::lint::*;\n-use rustc::middle::ty;\n+use rustc::ty;\n use rustc_front::hir::*;\n use std::collections::HashMap;\n use std::collections::hash_map::Entry;"}, {"sha": "3db080f970ef58dee05990afc068421b41229fe3", "filename": "src/cyclomatic_complexity.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fcyclomatic_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fcyclomatic_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcyclomatic_complexity.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,8 +1,8 @@\n //! calculate cyclomatic complexity and warn about overly complex functions\n \n use rustc::lint::*;\n-use rustc::middle::cfg::CFG;\n-use rustc::middle::ty;\n+use rustc::cfg::CFG;\n+use rustc::ty;\n use rustc_front::hir::*;\n use rustc_front::intravisit::{Visitor, walk_expr};\n use syntax::ast::Attribute;"}, {"sha": "4a20d8018de814c30b38e6841e7dc571403d5518", "filename": "src/derive.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fderive.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,8 +1,8 @@\n use rustc::lint::*;\n-use rustc::middle::subst::Subst;\n-use rustc::middle::ty::TypeVariants;\n-use rustc::middle::ty::fast_reject::simplify_type;\n-use rustc::middle::ty;\n+use rustc::ty::subst::Subst;\n+use rustc::ty::TypeVariants;\n+use rustc::ty::fast_reject::simplify_type;\n+use rustc::ty;\n use rustc_front::hir::*;\n use syntax::ast::{Attribute, MetaItemKind};\n use syntax::codemap::Span;"}, {"sha": "7536fb1b63b0e930ed5a53238886de62fc6e87c0", "filename": "src/drop_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fdrop_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fdrop_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdrop_ref.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,5 +1,5 @@\n use rustc::lint::*;\n-use rustc::middle::ty;\n+use rustc::ty;\n use rustc_front::hir::*;\n use syntax::codemap::Span;\n use utils::DROP_PATH;"}, {"sha": "63f5886fec89e90b3e8f6ddf18ce968edaef54af", "filename": "src/enum_glob_use.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fenum_glob_use.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -3,7 +3,7 @@\n use rustc::front::map::Node::NodeItem;\n use rustc::front::map::definitions::DefPathData;\n use rustc::lint::{LateLintPass, LintPass, LateContext, LintArray, LintContext};\n-use rustc::middle::ty::TyEnum;\n+use rustc::ty::TyEnum;\n use rustc_front::hir::*;\n use syntax::ast::NodeId;\n use syntax::codemap::Span;\n@@ -51,8 +51,9 @@ impl EnumGlobUse {\n                             }\n                         }\n                     } else {\n-                        if let Some(dp) = cx.sess().cstore.def_path(def.def_id()).last() {\n-                            if let DefPathData::Type(_) = dp.data {\n+                        let dp = cx.sess().cstore.relative_def_path(def.def_id());\n+                        if  let Some(dpa) = dp.data.last() {\n+                            if let  DefPathData::TypeNs(_) = dpa.data {\n                                 if let TyEnum(..) = cx.sess().cstore.item_type(&cx.tcx, def.def_id()).ty.sty {\n                                     span_lint(cx, ENUM_GLOB_USE, item.span, \"don't use glob imports for enum variants\");\n                                 }"}, {"sha": "51c4c7b6f5dfdb53e865ade961446aa0bb05153d", "filename": "src/escape.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fescape.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,11 +1,11 @@\n use rustc::front::map::Node::{NodeExpr, NodeStmt};\n use rustc::lint::*;\n use rustc::middle::expr_use_visitor::*;\n-use rustc::middle::infer;\n+use rustc::infer;\n use rustc::middle::mem_categorization::{cmt, Categorization};\n-use rustc::middle::traits::ProjectionMode;\n-use rustc::middle::ty::adjustment::AutoAdjustment;\n-use rustc::middle::ty;\n+use rustc::traits::ProjectionMode;\n+use rustc::ty::adjustment::AutoAdjustment;\n+use rustc::ty;\n use rustc::util::nodemap::NodeSet;\n use rustc_front::hir::*;\n use rustc_front::intravisit as visit;"}, {"sha": "bae971f46acdbda2d9a4ae67cf7eab5fd62a7d7f", "filename": "src/eta_reduction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feta_reduction.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,5 +1,5 @@\n use rustc::lint::*;\n-use rustc::middle::ty;\n+use rustc::ty;\n use rustc_front::hir::*;\n use utils::{snippet_opt, span_lint_and_then, is_adjusted};\n "}, {"sha": "300b3d17b393b4e38fce870d692540289cc9fbef", "filename": "src/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformat.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,6 +1,6 @@\n use rustc::front::map::Node::NodeItem;\n use rustc::lint::*;\n-use rustc::middle::ty::TypeVariants;\n+use rustc::ty::TypeVariants;\n use rustc_front::hir::*;\n use syntax::ast::LitKind;\n use utils::{DISPLAY_FMT_METHOD_PATH, FMT_ARGUMENTS_NEWV1_PATH, STRING_PATH};"}, {"sha": "6dad8684354eecbab6dd62d3957dc84606717063", "filename": "src/len_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flen_zero.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,6 +1,6 @@\n use rustc::lint::*;\n use rustc::middle::def_id::DefId;\n-use rustc::middle::ty::{self, MethodTraitItemId, ImplOrTraitItemId};\n+use rustc::ty::{self, MethodTraitItemId, ImplOrTraitItemId};\n use rustc_front::hir::*;\n use syntax::ast::{Lit, LitKind, Name};\n use syntax::codemap::{Span, Spanned};"}, {"sha": "c0d3993746a001eadac43cbb9df05e815cc856af", "filename": "src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Floops.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -5,7 +5,7 @@ use rustc::middle::const_eval::EvalHint::ExprTypeChecked;\n use rustc::middle::const_eval::{ConstVal, eval_const_expr_partial};\n use rustc::middle::def::Def;\n use rustc::middle::region::CodeExtent;\n-use rustc::middle::ty;\n+use rustc::ty;\n use rustc_front::hir::*;\n use rustc_front::intravisit::{Visitor, walk_expr, walk_block, walk_decl};\n use std::borrow::Cow;"}, {"sha": "bc3b45b32ef53a693752cb54ccb4f6dcd47521b4", "filename": "src/matches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,7 +1,7 @@\n use rustc::lint::*;\n use rustc::middle::const_eval::EvalHint::ExprTypeChecked;\n use rustc::middle::const_eval::{eval_const_expr_partial, ConstVal};\n-use rustc::middle::ty;\n+use rustc::ty;\n use rustc_front::hir::*;\n use rustc_const_eval::ConstInt;\n use std::cmp::Ordering;"}, {"sha": "b8bbc0e9068784ba210e18bde795e96f2e8fc7c9", "filename": "src/methods.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmethods.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -2,8 +2,8 @@ use rustc::lint::*;\n use rustc::middle::const_eval::EvalHint::ExprTypeChecked;\n use rustc::middle::const_eval::{ConstVal, eval_const_expr_partial};\n use rustc::middle::cstore::CrateStore;\n-use rustc::middle::subst::{Subst, TypeSpace};\n-use rustc::middle::ty;\n+use rustc::ty::subst::{Subst, TypeSpace};\n+use rustc::ty;\n use rustc_front::hir::*;\n use std::borrow::Cow;\n use std::fmt;"}, {"sha": "49426d5d5de351554f92a9ef8580e7d9a8ec249e", "filename": "src/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -3,7 +3,7 @@ use rustc::lint::*;\n use rustc::middle::const_eval::ConstVal::Float;\n use rustc::middle::const_eval::EvalHint::ExprTypeChecked;\n use rustc::middle::const_eval::eval_const_expr_partial;\n-use rustc::middle::ty;\n+use rustc::ty;\n use rustc_front::hir::*;\n use rustc_front::intravisit::FnKind;\n use rustc_front::util::{is_comparison_binop, binop_to_string};"}, {"sha": "a5ed233241de375e898bcc58f6b112916196241d", "filename": "src/mut_mut.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmut_mut.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,5 +1,5 @@\n use rustc::lint::*;\n-use rustc::middle::ty::{TypeAndMut, TyRef};\n+use rustc::ty::{TypeAndMut, TyRef};\n use rustc_front::hir::*;\n use utils::{in_external_macro, span_lint};\n "}, {"sha": "95ed1092eb55d5834fedc9279f9d699d2e8c3e5b", "filename": "src/mut_reference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmut_reference.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,5 +1,5 @@\n use rustc::lint::*;\n-use rustc::middle::ty::{TypeAndMut, TypeVariants, MethodCall, TyS};\n+use rustc::ty::{TypeAndMut, TypeVariants, MethodCall, TyS};\n use rustc_front::hir::*;\n use syntax::ptr::P;\n use utils::span_lint;"}, {"sha": "0593438cfc1521a5d2eb4cbc8607fc117e5446c5", "filename": "src/mutex_atomic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmutex_atomic.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -3,8 +3,8 @@\n //! This lint is **warn** by default\n \n use rustc::lint::{LintPass, LintArray, LateLintPass, LateContext};\n-use rustc::middle::subst::ParamSpace;\n-use rustc::middle::ty;\n+use rustc::ty::subst::ParamSpace;\n+use rustc::ty;\n use rustc_front::hir::Expr;\n use syntax::ast;\n use utils::{span_lint, MUTEX_PATH, match_type};"}, {"sha": "d25f66ca43467ba9924d93b1df373f139b6a45ab", "filename": "src/needless_update.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fneedless_update.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,5 +1,5 @@\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n-use rustc::middle::ty::TyStruct;\n+use rustc::ty::TyStruct;\n use rustc_front::hir::{Expr, ExprStruct};\n use utils::span_lint;\n "}, {"sha": "b7882bfda16d304f463182dcb71c6cfb6530ce1c", "filename": "src/ptr_arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fptr_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fptr_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fptr_arg.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -4,7 +4,7 @@\n \n use rustc::front::map::NodeItem;\n use rustc::lint::*;\n-use rustc::middle::ty;\n+use rustc::ty;\n use rustc_front::hir::*;\n use syntax::ast::NodeId;\n use utils::{STRING_PATH, VEC_PATH};"}, {"sha": "8689a7e366870d49bdd5e7e45b742e98d0614d10", "filename": "src/transmute.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftransmute.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,7 +1,7 @@\n use rustc::lint::*;\n use rustc_front::hir::*;\n-use rustc::middle::ty::TyS;\n-use rustc::middle::ty::TypeVariants::TyRawPtr;\n+use rustc::ty::TyS;\n+use rustc::ty::TypeVariants::TyRawPtr;\n use utils;\n use utils::TRANSMUTE_PATH;\n "}, {"sha": "c2fc242ec537c7afedc2ac3ea9532cf63e1eb683", "filename": "src/types.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,6 +1,7 @@\n use reexport::*;\n use rustc::lint::*;\n-use rustc::middle::{const_eval, def, ty};\n+use rustc::middle::{const_eval, def};\n+use rustc::ty;\n use rustc_front::hir::*;\n use rustc_front::intravisit::{FnKind, Visitor, walk_ty};\n use rustc_front::util::{is_comparison_binop, binop_to_string};"}, {"sha": "017890dc4610f16efabaaa9b186c76926c044a7b", "filename": "src/utils/mod.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils%2Fmod.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -2,9 +2,12 @@ use reexport::*;\n use rustc::front::map::Node;\n use rustc::lint::{LintContext, LateContext, Level, Lint};\n use rustc::middle::def_id::DefId;\n-use rustc::middle::traits::ProjectionMode;\n-use rustc::middle::{cstore, def, infer, ty, traits};\n-use rustc::middle::subst::Subst;\n+use rustc::traits;\n+use rustc::traits::ProjectionMode;\n+use rustc::middle::{cstore, def};\n+use rustc::infer;\n+use rustc::ty;\n+use rustc::ty::subst::Subst;\n use rustc::session::Session;\n use rustc_front::hir::*;\n use std::borrow::Cow;"}, {"sha": "481c84079f25e44572680522bc1e84c516a91a3d", "filename": "src/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa819b7748b8aa6ae03ddcdc993b6dff1ba26912/src%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvec.rs?ref=aa819b7748b8aa6ae03ddcdc993b6dff1ba26912", "patch": "@@ -1,5 +1,5 @@\n use rustc::lint::*;\n-use rustc::middle::ty::TypeVariants;\n+use rustc::ty::TypeVariants;\n use rustc_front::hir::*;\n use syntax::codemap::Span;\n use syntax::ptr::P;"}]}