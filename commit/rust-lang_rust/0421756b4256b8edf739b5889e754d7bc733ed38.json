{"sha": "0421756b4256b8edf739b5889e754d7bc733ed38", "node_id": "C_kwDOAAsO6NoAKDA0MjE3NTZiNDI1NmI4ZWRmNzM5YjU4ODllNzU0ZDdiYzczM2VkMzg", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-10-17T13:43:15Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-10-17T13:45:57Z"}, "message": "Implement stop and start server commands", "tree": {"sha": "829aef24fb671930e5e6f49acc149e36e68c3181", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/829aef24fb671930e5e6f49acc149e36e68c3181"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0421756b4256b8edf739b5889e754d7bc733ed38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0421756b4256b8edf739b5889e754d7bc733ed38", "html_url": "https://github.com/rust-lang/rust/commit/0421756b4256b8edf739b5889e754d7bc733ed38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0421756b4256b8edf739b5889e754d7bc733ed38/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d68616a140b35dd9bc4e2982e0993257ab0942e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d68616a140b35dd9bc4e2982e0993257ab0942e0", "html_url": "https://github.com/rust-lang/rust/commit/d68616a140b35dd9bc4e2982e0993257ab0942e0"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "10558e8c018a39f3a81b5290d6f5d25bd1160744", "filename": "editors/code/package.json", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0421756b4256b8edf739b5889e754d7bc733ed38/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/0421756b4256b8edf739b5889e754d7bc733ed38/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=0421756b4256b8edf739b5889e754d7bc733ed38", "patch": "@@ -60,6 +60,7 @@\n         \"onCommand:rust-analyzer.analyzerStatus\",\n         \"onCommand:rust-analyzer.memoryUsage\",\n         \"onCommand:rust-analyzer.reloadWorkspace\",\n+        \"onCommand:rust-analyzer.startServer\",\n         \"workspaceContains:*/Cargo.toml\",\n         \"workspaceContains:*/rust-project.json\"\n     ],\n@@ -191,6 +192,16 @@\n                 \"title\": \"Restart server\",\n                 \"category\": \"rust-analyzer\"\n             },\n+            {\n+                \"command\": \"rust-analyzer.startServer\",\n+                \"title\": \"Start server\",\n+                \"category\": \"rust-analyzer\"\n+            },\n+            {\n+                \"command\": \"rust-analyzer.stopServer\",\n+                \"title\": \"Stop server\",\n+                \"category\": \"rust-analyzer\"\n+            },\n             {\n                 \"command\": \"rust-analyzer.onEnter\",\n                 \"title\": \"Enhanced enter key\","}, {"sha": "fb667619c86be045490827de8a44fe6343243ded", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0421756b4256b8edf739b5889e754d7bc733ed38/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/0421756b4256b8edf739b5889e754d7bc733ed38/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=0421756b4256b8edf739b5889e754d7bc733ed38", "patch": "@@ -76,6 +76,14 @@ export async function createClient(\n         outputChannel,\n         middleware: {\n             workspace: {\n+                // HACK: This is a workaround, when the client has been disposed, VSCode\n+                // continues to emit events to the client and the default one for this event\n+                // attempt to restart the client for no reason\n+                async didChangeWatchedFile(event, next) {\n+                    if (client.isRunning()) {\n+                        await next(event);\n+                    }\n+                },\n                 async configuration(\n                     params: lc.ConfigurationParams,\n                     token: vscode.CancellationToken,"}, {"sha": "2080db7a2c1277b777187ea446144a28c0f7ab26", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0421756b4256b8edf739b5889e754d7bc733ed38/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/0421756b4256b8edf739b5889e754d7bc733ed38/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=0421756b4256b8edf739b5889e754d7bc733ed38", "patch": "@@ -68,8 +68,6 @@ export class Ctx {\n         }\n \n         if (!this.client) {\n-            log.info(\"Creating language client\");\n-\n             this._serverPath = await bootstrap(this.extCtx, this.config, this.state).catch(\n                 (err) => {\n                     let message = \"bootstrap error. \";"}, {"sha": "f65620aebc69121bb5ac33bcee0cc17319e3e701", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0421756b4256b8edf739b5889e754d7bc733ed38/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/0421756b4256b8edf739b5889e754d7bc733ed38/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=0421756b4256b8edf739b5889e754d7bc733ed38", "patch": "@@ -126,6 +126,13 @@ async function initCommonContext(ctx: Ctx) {\n         await ctx.activate();\n     });\n \n+    ctx.registerCommand(\"startServer\", (_) => async () => {\n+        await ctx.activate();\n+    });\n+    ctx.registerCommand(\"stopServer\", (_) => async () => {\n+        // FIXME: We should re-use the client, that is ctx.deactivate() if none of the configs have changed\n+        await ctx.disposeClient();\n+    });\n     ctx.registerCommand(\"analyzerStatus\", commands.analyzerStatus);\n     ctx.registerCommand(\"memoryUsage\", commands.memoryUsage);\n     ctx.registerCommand(\"shuffleCrateGraph\", commands.shuffleCrateGraph);"}]}