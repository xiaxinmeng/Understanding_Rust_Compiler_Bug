{"sha": "443928f7e33666f83711c768ef2968090c85bc7f", "node_id": "C_kwDOAAsO6NoAKDQ0MzkyOGY3ZTMzNjY2ZjgzNzExYzc2OGVmMjk2ODA5MGM4NWJjN2Y", "commit": {"author": {"name": "Jonas Platte", "email": "jplatte+git@posteo.de", "date": "2023-04-06T19:54:05Z"}, "committer": {"name": "Jonas Platte", "email": "jplatte+git@posteo.de", "date": "2023-04-06T21:14:23Z"}, "message": "Stabilize is_some_and", "tree": {"sha": "8729f7610626e03a0901cc9af055969818c2122d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8729f7610626e03a0901cc9af055969818c2122d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/443928f7e33666f83711c768ef2968090c85bc7f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIwEABYIADQWIQSDGkJBzFPeoiYaT9p9Jh13HZFTeAUCZC82MBYcanBsYXR0ZStn\naXRAcG9zdGVvLmRlAAoJEH0mHXcdkVN4CeEBAODtParLmiaIeHnl5xSErO3B+kS6\n5QFfa3Lu50qc4NxuAQDwEaZocBArCyfhHq3R7HHnvd8wd0M+SmQUUarYE/h/CQ==\n=9DaW\n-----END PGP SIGNATURE-----", "payload": "tree 8729f7610626e03a0901cc9af055969818c2122d\nparent f5b8f44e5d5dee0f60cec1729b5a107659779d94\nauthor Jonas Platte <jplatte+git@posteo.de> 1680810845 +0200\ncommitter Jonas Platte <jplatte+git@posteo.de> 1680815663 +0200\n\nStabilize is_some_and\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/443928f7e33666f83711c768ef2968090c85bc7f", "html_url": "https://github.com/rust-lang/rust/commit/443928f7e33666f83711c768ef2968090c85bc7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/443928f7e33666f83711c768ef2968090c85bc7f/comments", "author": {"login": "jplatte", "id": 951129, "node_id": "MDQ6VXNlcjk1MTEyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/951129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplatte", "html_url": "https://github.com/jplatte", "followers_url": "https://api.github.com/users/jplatte/followers", "following_url": "https://api.github.com/users/jplatte/following{/other_user}", "gists_url": "https://api.github.com/users/jplatte/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplatte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplatte/subscriptions", "organizations_url": "https://api.github.com/users/jplatte/orgs", "repos_url": "https://api.github.com/users/jplatte/repos", "events_url": "https://api.github.com/users/jplatte/events{/privacy}", "received_events_url": "https://api.github.com/users/jplatte/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jplatte", "id": 951129, "node_id": "MDQ6VXNlcjk1MTEyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/951129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplatte", "html_url": "https://github.com/jplatte", "followers_url": "https://api.github.com/users/jplatte/followers", "following_url": "https://api.github.com/users/jplatte/following{/other_user}", "gists_url": "https://api.github.com/users/jplatte/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplatte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplatte/subscriptions", "organizations_url": "https://api.github.com/users/jplatte/orgs", "repos_url": "https://api.github.com/users/jplatte/repos", "events_url": "https://api.github.com/users/jplatte/events{/privacy}", "received_events_url": "https://api.github.com/users/jplatte/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5b8f44e5d5dee0f60cec1729b5a107659779d94", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5b8f44e5d5dee0f60cec1729b5a107659779d94", "html_url": "https://github.com/rust-lang/rust/commit/f5b8f44e5d5dee0f60cec1729b5a107659779d94"}], "stats": {"total": 16, "additions": 3, "deletions": 13}, "files": [{"sha": "7697b592e33a10b6fb8b4b4d7bd32d5f3687eaf0", "filename": "compiler/rustc_builtin_macros/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/443928f7e33666f83711c768ef2968090c85bc7f/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/443928f7e33666f83711c768ef2968090c85bc7f/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs?ref=443928f7e33666f83711c768ef2968090c85bc7f", "patch": "@@ -7,7 +7,6 @@\n #![feature(box_patterns)]\n #![feature(decl_macro)]\n #![feature(if_let_guard)]\n-#![feature(is_some_and)]\n #![feature(is_sorted)]\n #![feature(let_chains)]\n #![feature(proc_macro_internals)]"}, {"sha": "5ab389d04c7eea344b84dc4b0f520c1291a3e476", "filename": "compiler/rustc_const_eval/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/443928f7e33666f83711c768ef2968090c85bc7f/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/443928f7e33666f83711c768ef2968090c85bc7f/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs?ref=443928f7e33666f83711c768ef2968090c85bc7f", "patch": "@@ -20,7 +20,6 @@ Rust MIR: a lowered representation of Rust.\n #![feature(try_blocks)]\n #![feature(yeet_expr)]\n #![feature(if_let_guard)]\n-#![feature(is_some_and)]\n #![recursion_limit = \"256\"]\n \n #[macro_use]"}, {"sha": "27e56180349efe7ae852cd549359d9cafb2f8d1b", "filename": "compiler/rustc_hir_analysis/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/443928f7e33666f83711c768ef2968090c85bc7f/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/443928f7e33666f83711c768ef2968090c85bc7f/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs?ref=443928f7e33666f83711c768ef2968090c85bc7f", "patch": "@@ -70,7 +70,6 @@ This API is completely unstable and subject to change.\n #![feature(lazy_cell)]\n #![feature(slice_partition_dedup)]\n #![feature(try_blocks)]\n-#![feature(is_some_and)]\n #![feature(type_alias_impl_trait)]\n #![recursion_limit = \"256\"]\n "}, {"sha": "057053297cd2d1f9b1bdc80566889414b608e3d9", "filename": "library/core/src/option.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443928f7e33666f83711c768ef2968090c85bc7f/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/443928f7e33666f83711c768ef2968090c85bc7f/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=443928f7e33666f83711c768ef2968090c85bc7f", "patch": "@@ -605,8 +605,6 @@ impl<T> Option<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(is_some_and)]\n-    ///\n     /// let x: Option<u32> = Some(2);\n     /// assert_eq!(x.is_some_and(|x| x > 1), true);\n     ///\n@@ -618,7 +616,7 @@ impl<T> Option<T> {\n     /// ```\n     #[must_use]\n     #[inline]\n-    #[unstable(feature = \"is_some_and\", issue = \"93050\")]\n+    #[stable(feature = \"is_some_and\", since = \"CURRENT_RUSTC_VERSION\")]\n     pub fn is_some_and(self, f: impl FnOnce(T) -> bool) -> bool {\n         match self {\n             None => false,"}, {"sha": "241602c0e18f1b7b609f5e109dd475251a030411", "filename": "library/core/src/result.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/443928f7e33666f83711c768ef2968090c85bc7f/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/443928f7e33666f83711c768ef2968090c85bc7f/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=443928f7e33666f83711c768ef2968090c85bc7f", "patch": "@@ -545,8 +545,6 @@ impl<T, E> Result<T, E> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(is_some_and)]\n-    ///\n     /// let x: Result<u32, &str> = Ok(2);\n     /// assert_eq!(x.is_ok_and(|x| x > 1), true);\n     ///\n@@ -558,7 +556,7 @@ impl<T, E> Result<T, E> {\n     /// ```\n     #[must_use]\n     #[inline]\n-    #[unstable(feature = \"is_some_and\", issue = \"93050\")]\n+    #[stable(feature = \"is_some_and\", since = \"CURRENT_RUSTC_VERSION\")]\n     pub fn is_ok_and(self, f: impl FnOnce(T) -> bool) -> bool {\n         match self {\n             Err(_) => false,\n@@ -590,7 +588,6 @@ impl<T, E> Result<T, E> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(is_some_and)]\n     /// use std::io::{Error, ErrorKind};\n     ///\n     /// let x: Result<u32, Error> = Err(Error::new(ErrorKind::NotFound, \"!\"));\n@@ -604,7 +601,7 @@ impl<T, E> Result<T, E> {\n     /// ```\n     #[must_use]\n     #[inline]\n-    #[unstable(feature = \"is_some_and\", issue = \"93050\")]\n+    #[stable(feature = \"is_some_and\", since = \"CURRENT_RUSTC_VERSION\")]\n     pub fn is_err_and(self, f: impl FnOnce(E) -> bool) -> bool {\n         match self {\n             Ok(_) => false,"}, {"sha": "736b3c0497c46d7f0be6b69e97e320dd0bdf5a59", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/443928f7e33666f83711c768ef2968090c85bc7f/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/443928f7e33666f83711c768ef2968090c85bc7f/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=443928f7e33666f83711c768ef2968090c85bc7f", "patch": "@@ -289,7 +289,6 @@\n #![feature(hashmap_internals)]\n #![feature(ip)]\n #![feature(ip_in_core)]\n-#![feature(is_some_and)]\n #![feature(maybe_uninit_slice)]\n #![feature(maybe_uninit_write_slice)]\n #![feature(panic_can_unwind)]"}, {"sha": "fb4e59acd001d19ecdcc7ad6c1ee8d9383964a6d", "filename": "src/tools/miri/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/443928f7e33666f83711c768ef2968090c85bc7f/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/443928f7e33666f83711c768ef2968090c85bc7f/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs?ref=443928f7e33666f83711c768ef2968090c85bc7f", "patch": "@@ -5,7 +5,6 @@\n #![feature(io_error_more)]\n #![feature(variant_count)]\n #![feature(yeet_expr)]\n-#![feature(is_some_and)]\n #![feature(nonzero_ops)]\n #![feature(local_key_cell_methods)]\n #![feature(is_terminal)]"}]}