{"sha": "4cfc7b3f73a1a813098f35d992ad94727d2a206b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjZmM3YjNmNzNhMWE4MTMwOThmMzVkOTkyYWQ5NDcyN2QyYTIwNmI=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-04-16T21:05:59Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-04-16T21:05:59Z"}, "message": "Error when compiletest is passed duplicate revisions\n\nCurrently, we allow the user to write things like\n'// revisions: rpass1 rpass1', which will not test what they were\nintending to test.", "tree": {"sha": "19e6d2ca8a337f6b84e23f25afe69862655acdf4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19e6d2ca8a337f6b84e23f25afe69862655acdf4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cfc7b3f73a1a813098f35d992ad94727d2a206b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmB5/HkACgkQtAh+UQ6Y\nsWTOdA/6A6+AErKJmxox339/de2cGhSqxl0AwMZAmDMIoMcRINvrawBhWJs8kp8i\nSO1YPLzjyqcMaEyI0MYnjx/CtUim39jzFhFvdYyDKQ1E1DtSlKOXfw9PQ3sdS8MK\nZOpjqCxZlwW03vIcYSYA+80+ByMzLeUBlD5dTKQeBuad0LO5P7xh4vbarz15J4ix\nC8S0HJa6HG/e8Wo0ovhlO8lmb56vN8XZzlx3cngLxPFaEKHxypjRZNLZGqcff5l4\nu6dDeChNGCsQra7ahitqIKDtG52jLPihgMyRYuhUweNJ92RXOXtS3ysbelDWqSrv\nDCxw5Zjn7qQCcRZt00Wbsf+rWwy7BXvhvo16FLnYO69zarzAPhqhAHvPsnmSKEGe\nJCIf/KngUjcFfawB6iuZoundSd6qlZHN2L/o3xcl2UTuEOLps/LvCLDeXG9yQGmW\n3HW7/UGzL+c1M7ggRhb22iXKVzYR7oGRo81LoBjUtvg+k6i+DhTjScLfDuiLfu7g\n3atSbXFWjADoTuGRbR1xiBaEz+rstLXSf06USaA7NwXm1nH/MRKhjUgoUuEzue6U\nM+4NXRtgQgqSpjAxI3vJV640FNmYMSbPBlhPKSvzkGDP6FqMTERv2tBqoeiomJ+P\nU4VmNY6aoc7LFeJe0a1y2p+1RzZG8U57GMdrTdLb46848ksiBsI=\n=A6u1\n-----END PGP SIGNATURE-----", "payload": "tree 19e6d2ca8a337f6b84e23f25afe69862655acdf4\nparent 0cc00c48d2c8f7344028cf007d1ee551b886b602\nauthor Aaron Hill <aa1ronham@gmail.com> 1618607159 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1618607159 -0400\n\nError when compiletest is passed duplicate revisions\n\nCurrently, we allow the user to write things like\n'// revisions: rpass1 rpass1', which will not test what they were\nintending to test.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cfc7b3f73a1a813098f35d992ad94727d2a206b", "html_url": "https://github.com/rust-lang/rust/commit/4cfc7b3f73a1a813098f35d992ad94727d2a206b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cfc7b3f73a1a813098f35d992ad94727d2a206b/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cc00c48d2c8f7344028cf007d1ee551b886b602", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cc00c48d2c8f7344028cf007d1ee551b886b602", "html_url": "https://github.com/rust-lang/rust/commit/0cc00c48d2c8f7344028cf007d1ee551b886b602"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "f31a24738df6c7bae1312e96f037b3bdab330df9", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4cfc7b3f73a1a813098f35d992ad94727d2a206b/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cfc7b3f73a1a813098f35d992ad94727d2a206b/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=4cfc7b3f73a1a813098f35d992ad94727d2a206b", "patch": "@@ -136,9 +136,7 @@ impl EarlyProps {\n                 props.aux_crate.push(ac);\n             }\n \n-            if let Some(r) = config.parse_revisions(ln) {\n-                props.revisions.extend(r);\n-            }\n+            config.parse_and_update_revisions(ln, &mut props.revisions);\n \n             props.should_fail = props.should_fail || config.parse_name_directive(ln, \"should-fail\");\n         });\n@@ -432,9 +430,7 @@ impl TestProps {\n                     self.compile_flags.push(format!(\"--edition={}\", edition));\n                 }\n \n-                if let Some(r) = config.parse_revisions(ln) {\n-                    self.revisions.extend(r);\n-                }\n+                config.parse_and_update_revisions(ln, &mut self.revisions);\n \n                 if self.run_flags.is_none() {\n                     self.run_flags = config.parse_run_flags(ln);\n@@ -723,9 +719,16 @@ impl Config {\n         self.parse_name_value_directive(line, \"compile-flags\")\n     }\n \n-    fn parse_revisions(&self, line: &str) -> Option<Vec<String>> {\n-        self.parse_name_value_directive(line, \"revisions\")\n-            .map(|r| r.split_whitespace().map(|t| t.to_string()).collect())\n+    fn parse_and_update_revisions(&self, line: &str, existing: &mut Vec<String>) {\n+        if let Some(raw) = self.parse_name_value_directive(line, \"revisions\") {\n+            let mut duplicates: HashSet<_> = existing.iter().cloned().collect();\n+            for revision in raw.split_whitespace().map(|r| r.to_string()) {\n+                if !duplicates.insert(revision.clone()) {\n+                    panic!(\"Duplicate revision: `{}` in line `{}`\", revision, raw);\n+                }\n+                existing.push(revision);\n+            }\n+        }\n     }\n \n     fn parse_run_flags(&self, line: &str) -> Option<String> {"}, {"sha": "ca7458d255c3c2db552441697be297c115987d62", "filename": "src/tools/compiletest/src/header/tests.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4cfc7b3f73a1a813098f35d992ad94727d2a206b/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cfc7b3f73a1a813098f35d992ad94727d2a206b/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs?ref=4cfc7b3f73a1a813098f35d992ad94727d2a206b", "patch": "@@ -248,3 +248,10 @@ fn test_extract_version_range() {\n     assert_eq!(extract_version_range(\"   - 4.5.6\", extract_llvm_version), None);\n     assert_eq!(extract_version_range(\"0  -\", extract_llvm_version), None);\n }\n+\n+#[test]\n+#[should_panic(expected = \"Duplicate revision: `rpass1` in line ` rpass1 rpass1`\")]\n+fn test_duplicate_revisions() {\n+    let config = config();\n+    parse_rs(&config, \"// revisions: rpass1 rpass1\");\n+}"}]}