{"sha": "86995dc8c56b3c2923dff8a4bb79fed7c60a4396", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2OTk1ZGM4YzU2YjNjMjkyM2RmZjhhNGJiNzlmZWQ3YzYwYTQzOTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-09-05T01:36:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-05T01:36:42Z"}, "message": "Auto merge of #36240 - leeopop:master, r=jseyfried\n\nAllow CompilerControllers to access rustc_plugin::registry::Registry\n\nfixes #36064\n\nI chose to put ructc_plugin::registry::Registry structure\ninto CompilerState structure, instead of Session structure.\nThis will preserve dependencies among librustc, libructc_driver, and libructc_plugin.\n\n@jseyfried @sanxiyn", "tree": {"sha": "b087462a8e6dc08d38c973812b65d7b97278434b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b087462a8e6dc08d38c973812b65d7b97278434b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86995dc8c56b3c2923dff8a4bb79fed7c60a4396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86995dc8c56b3c2923dff8a4bb79fed7c60a4396", "html_url": "https://github.com/rust-lang/rust/commit/86995dc8c56b3c2923dff8a4bb79fed7c60a4396", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86995dc8c56b3c2923dff8a4bb79fed7c60a4396/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91f057de35066d0a34102bd0673b56684509b93d", "url": "https://api.github.com/repos/rust-lang/rust/commits/91f057de35066d0a34102bd0673b56684509b93d", "html_url": "https://github.com/rust-lang/rust/commit/91f057de35066d0a34102bd0673b56684509b93d"}, {"sha": "ca5dfd0c975c80697dcc2a3bcbfc9d3106609fb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca5dfd0c975c80697dcc2a3bcbfc9d3106609fb1", "html_url": "https://github.com/rust-lang/rust/commit/ca5dfd0c975c80697dcc2a3bcbfc9d3106609fb1"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "065ef9e0ce15f22730bb904dd1a6b43cfc333f05", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/86995dc8c56b3c2923dff8a4bb79fed7c60a4396/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86995dc8c56b3c2923dff8a4bb79fed7c60a4396/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=86995dc8c56b3c2923dff8a4bb79fed7c60a4396", "patch": "@@ -99,7 +99,7 @@ pub fn compile_input(sess: &Session,\n             }\n         };\n \n-        let krate = {\n+        let (krate, registry) = {\n             let mut compile_state = CompileState::state_after_parse(input,\n                                                                     sess,\n                                                                     outdir,\n@@ -111,14 +111,14 @@ pub fn compile_input(sess: &Session,\n                                     compile_state,\n                                     Ok(()));\n \n-            compile_state.krate.unwrap()\n+            (compile_state.krate.unwrap(), compile_state.registry)\n         };\n \n         let outputs = build_output_filenames(input, outdir, output, &krate.attrs, sess);\n         let crate_name = link::find_crate_name(Some(sess), &krate.attrs, input);\n         let ExpansionResult { expanded_crate, defs, analysis, resolutions, mut hir_forest } = {\n             phase_2_configure_and_expand(\n-                sess, &cstore, krate, &crate_name, addl_plugins, control.make_glob_map,\n+                sess, &cstore, krate, registry, &crate_name, addl_plugins, control.make_glob_map,\n                 |expanded_crate| {\n                     let mut state = CompileState::state_after_expand(\n                         input, sess, outdir, output, &cstore, expanded_crate, &crate_name,\n@@ -332,6 +332,7 @@ pub struct CompileState<'a, 'b, 'ast: 'a, 'tcx: 'b> where 'ast: 'tcx {\n     pub input: &'a Input,\n     pub session: &'ast Session,\n     pub krate: Option<ast::Crate>,\n+    pub registry: Option<Registry<'a>>,\n     pub cstore: Option<&'a CStore>,\n     pub crate_name: Option<&'a str>,\n     pub output_filenames: Option<&'a OutputFilenames>,\n@@ -360,6 +361,7 @@ impl<'a, 'b, 'ast, 'tcx> CompileState<'a, 'b, 'ast, 'tcx> {\n             out_file: None,\n             arenas: None,\n             krate: None,\n+            registry: None,\n             cstore: None,\n             crate_name: None,\n             output_filenames: None,\n@@ -382,6 +384,8 @@ impl<'a, 'b, 'ast, 'tcx> CompileState<'a, 'b, 'ast, 'tcx> {\n                          cstore: &'a CStore)\n                          -> CompileState<'a, 'b, 'ast, 'tcx> {\n         CompileState {\n+            // Initialize the registry before moving `krate`\n+            registry: Some(Registry::new(&session, krate.span)),\n             krate: Some(krate),\n             cstore: Some(cstore),\n             out_file: out_file.as_ref().map(|s| &**s),\n@@ -548,6 +552,7 @@ pub struct ExpansionResult<'a> {\n pub fn phase_2_configure_and_expand<'a, F>(sess: &Session,\n                                            cstore: &CStore,\n                                            mut krate: ast::Crate,\n+                                           registry: Option<Registry>,\n                                            crate_name: &'a str,\n                                            addl_plugins: Option<Vec<String>>,\n                                            make_glob_map: MakeGlobMap,\n@@ -595,7 +600,7 @@ pub fn phase_2_configure_and_expand<'a, F>(sess: &Session,\n                                    addl_plugins.take().unwrap())\n     });\n \n-    let mut registry = Registry::new(sess, &krate);\n+    let mut registry = registry.unwrap_or(Registry::new(sess, krate.span));\n \n     time(time_passes, \"plugin registration\", || {\n         if sess.features.borrow().rustc_diagnostic_macros {"}, {"sha": "8569ff64f91001050fb4c4e7501bb6eaf32c80ae", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86995dc8c56b3c2923dff8a4bb79fed7c60a4396/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86995dc8c56b3c2923dff8a4bb79fed7c60a4396/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=86995dc8c56b3c2923dff8a4bb79fed7c60a4396", "patch": "@@ -115,7 +115,7 @@ fn test_env<F>(source_string: &str,\n     let krate = driver::phase_1_parse_input(&sess, krate_config, &input).unwrap();\n     let driver::ExpansionResult { defs, resolutions, mut hir_forest, .. } = {\n         driver::phase_2_configure_and_expand(\n-            &sess, &cstore, krate, \"test\", None, MakeGlobMap::No, |_| Ok(()),\n+            &sess, &cstore, krate, None, \"test\", None, MakeGlobMap::No, |_| Ok(()),\n         ).expect(\"phase 2 aborted\")\n     };\n     let _ignore = dep_graph.in_ignore();"}, {"sha": "435196d956187068cdf243ae400141f48a1acc9d", "filename": "src/librustc_plugin/registry.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86995dc8c56b3c2923dff8a4bb79fed7c60a4396/src%2Flibrustc_plugin%2Fregistry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86995dc8c56b3c2923dff8a4bb79fed7c60a4396/src%2Flibrustc_plugin%2Fregistry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Fregistry.rs?ref=86995dc8c56b3c2923dff8a4bb79fed7c60a4396", "patch": "@@ -69,11 +69,11 @@ pub struct Registry<'a> {\n \n impl<'a> Registry<'a> {\n     #[doc(hidden)]\n-    pub fn new(sess: &'a Session, krate: &ast::Crate) -> Registry<'a> {\n+    pub fn new(sess: &'a Session, krate_span: Span) -> Registry<'a> {\n         Registry {\n             sess: sess,\n             args_hidden: None,\n-            krate_span: krate.span,\n+            krate_span: krate_span,\n             syntax_exts: vec!(),\n             early_lint_passes: vec!(),\n             late_lint_passes: vec!(),"}, {"sha": "0c236434cc70576ecd47c4d6c8363be700719b89", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86995dc8c56b3c2923dff8a4bb79fed7c60a4396/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86995dc8c56b3c2923dff8a4bb79fed7c60a4396/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=86995dc8c56b3c2923dff8a4bb79fed7c60a4396", "patch": "@@ -146,7 +146,7 @@ pub fn run_core(search_paths: SearchPaths,\n \n     let driver::ExpansionResult { defs, analysis, resolutions, mut hir_forest, .. } = {\n         driver::phase_2_configure_and_expand(\n-            &sess, &cstore, krate, &name, None, resolve::MakeGlobMap::No, |_| Ok(()),\n+            &sess, &cstore, krate, None, &name, None, resolve::MakeGlobMap::No, |_| Ok(()),\n         ).expect(\"phase_2_configure_and_expand aborted in rustdoc!\")\n     };\n "}, {"sha": "e4dd41d7e4c3e19066f88d6536378933c5abd568", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86995dc8c56b3c2923dff8a4bb79fed7c60a4396/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86995dc8c56b3c2923dff8a4bb79fed7c60a4396/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=86995dc8c56b3c2923dff8a4bb79fed7c60a4396", "patch": "@@ -94,7 +94,7 @@ pub fn run(input: &str,\n     let krate = panictry!(driver::phase_1_parse_input(&sess, cfg, &input));\n     let driver::ExpansionResult { defs, mut hir_forest, .. } = {\n         phase_2_configure_and_expand(\n-            &sess, &cstore, krate, \"rustdoc-test\", None, MakeGlobMap::No, |_| Ok(())\n+            &sess, &cstore, krate, None, \"rustdoc-test\", None, MakeGlobMap::No, |_| Ok(())\n         ).expect(\"phase_2_configure_and_expand aborted in rustdoc!\")\n     };\n "}]}