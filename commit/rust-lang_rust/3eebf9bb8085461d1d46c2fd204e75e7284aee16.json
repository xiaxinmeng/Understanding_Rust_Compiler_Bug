{"sha": "3eebf9bb8085461d1d46c2fd204e75e7284aee16", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZWJmOWJiODA4NTQ2MWQxZDQ2YzJmZDIwNGU3NWU3Mjg0YWVlMTY=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2021-01-25T20:28:29Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2021-01-25T20:39:46Z"}, "message": "tidy: Remove cargo check.\n\nThe cargo check was checking that every dependency had an `extern crate`.\nThe compiler has not used `extern crate` in a long time (edition 2018).\nThe test was broken (the call to `!super::filter_dirs(path)` was backwards).\nThis just removes it since it is no longer valid.", "tree": {"sha": "170eb29f050e307ba1b176779c8f0d977488889d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/170eb29f050e307ba1b176779c8f0d977488889d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3eebf9bb8085461d1d46c2fd204e75e7284aee16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3eebf9bb8085461d1d46c2fd204e75e7284aee16", "html_url": "https://github.com/rust-lang/rust/commit/3eebf9bb8085461d1d46c2fd204e75e7284aee16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3eebf9bb8085461d1d46c2fd204e75e7284aee16/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fba12bb1d3877870758a7a53e2fe766bb19bd60", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fba12bb1d3877870758a7a53e2fe766bb19bd60", "html_url": "https://github.com/rust-lang/rust/commit/7fba12bb1d3877870758a7a53e2fe766bb19bd60"}], "stats": {"total": 95, "additions": 0, "deletions": 95}, "files": [{"sha": "e06616a59f38c16becbd95cfbfe5759ef9898034", "filename": "src/tools/tidy/src/cargo.rs", "status": "removed", "additions": 0, "deletions": 90, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/7fba12bb1d3877870758a7a53e2fe766bb19bd60/src%2Ftools%2Ftidy%2Fsrc%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fba12bb1d3877870758a7a53e2fe766bb19bd60/src%2Ftools%2Ftidy%2Fsrc%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fcargo.rs?ref=7fba12bb1d3877870758a7a53e2fe766bb19bd60", "patch": "@@ -1,90 +0,0 @@\n-//! Tidy check to ensure that `[dependencies]` and `extern crate` are in sync.\n-//!\n-//! This tidy check ensures that all crates listed in the `[dependencies]`\n-//! section of a `Cargo.toml` are present in the corresponding `lib.rs` as\n-//! `extern crate` declarations. This should help us keep the DAG correctly\n-//! structured through various refactorings to prune out unnecessary edges.\n-\n-use std::fs;\n-use std::path::Path;\n-\n-pub fn check(path: &Path, bad: &mut bool) {\n-    if !super::filter_dirs(path) {\n-        return;\n-    }\n-    for entry in t!(path.read_dir(), path).map(|e| t!(e)) {\n-        // Look for `Cargo.toml` with a sibling `src/lib.rs` or `lib.rs`.\n-        if entry.file_name().to_str() == Some(\"Cargo.toml\") {\n-            if path.join(\"src/lib.rs\").is_file() {\n-                verify(&entry.path(), &path.join(\"src/lib.rs\"), bad)\n-            }\n-            if path.join(\"lib.rs\").is_file() {\n-                verify(&entry.path(), &path.join(\"lib.rs\"), bad)\n-            }\n-        } else if t!(entry.file_type()).is_dir() {\n-            check(&entry.path(), bad);\n-        }\n-    }\n-}\n-\n-/// Verifies that the dependencies in Cargo.toml at `tomlfile` are synced with\n-/// the `extern crate` annotations in the lib.rs at `libfile`.\n-fn verify(tomlfile: &Path, libfile: &Path, bad: &mut bool) {\n-    let toml = t!(fs::read_to_string(&tomlfile));\n-    let librs = t!(fs::read_to_string(&libfile));\n-\n-    if toml.contains(\"name = \\\"bootstrap\\\"\") {\n-        return;\n-    }\n-\n-    // \"Poor man's TOML parser\" -- just assume we use one syntax for now.\n-    //\n-    // We just look for:\n-    //\n-    // ````\n-    // [dependencies]\n-    // name = ...\n-    // name2 = ...\n-    // name3 = ...\n-    // ```\n-    //\n-    // If we encounter a line starting with `[` then we assume it's the end of\n-    // the dependency section and bail out.\n-    let deps = match toml.find(\"[dependencies]\") {\n-        Some(i) => &toml[i + 1..],\n-        None => return,\n-    };\n-    for line in deps.lines() {\n-        if line.starts_with('[') {\n-            break;\n-        }\n-\n-        let krate = match line.split_once('=') {\n-            None => continue,\n-            Some((krate, _)) => krate.trim(),\n-        };\n-\n-        // Don't worry about depending on core/std while not writing `extern crate\n-        // core/std` -- that's intentional.\n-        if krate == \"core\" || krate == \"std\" {\n-            continue;\n-        }\n-\n-        // This is intentional -- this dependency just makes the crate available\n-        // for others later on.\n-        let allowed = krate.starts_with(\"panic\");\n-        if toml.contains(\"name = \\\"std\\\"\") && allowed {\n-            continue;\n-        }\n-\n-        if !librs.contains(&format!(\"extern crate {}\", krate)) {\n-            tidy_error!(\n-                bad,\n-                \"{} doesn't have `extern crate {}`, but Cargo.toml \\\n-                              depends on it\",\n-                libfile.display(),\n-                krate\n-            );\n-        }\n-    }\n-}"}, {"sha": "27972c4992442b7b268c4ab4bfc8967e29b462c6", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3eebf9bb8085461d1d46c2fd204e75e7284aee16/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eebf9bb8085461d1d46c2fd204e75e7284aee16/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=3eebf9bb8085461d1d46c2fd204e75e7284aee16", "patch": "@@ -40,7 +40,6 @@ macro_rules! tidy_error {\n }\n \n pub mod bins;\n-pub mod cargo;\n pub mod debug_artifacts;\n pub mod deps;\n pub mod edition;"}, {"sha": "2ac96e404acb9e61940c5e7061a3724101ea41ec", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3eebf9bb8085461d1d46c2fd204e75e7284aee16/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eebf9bb8085461d1d46c2fd204e75e7284aee16/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=3eebf9bb8085461d1d46c2fd204e75e7284aee16", "patch": "@@ -49,10 +49,6 @@ fn main() {\n     style::check(&compiler_path, &mut bad);\n     style::check(&library_path, &mut bad);\n \n-    cargo::check(&src_path, &mut bad);\n-    cargo::check(&compiler_path, &mut bad);\n-    cargo::check(&library_path, &mut bad);\n-\n     edition::check(&src_path, &mut bad);\n     edition::check(&compiler_path, &mut bad);\n     edition::check(&library_path, &mut bad);"}]}