{"sha": "cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMTMyZjU2M2VhNTM4NWM4ZGZlZDJiOWM5MDMyZWEzZThkYzNlZGM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-02T11:33:59Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-02T11:33:59Z"}, "message": "port compile-fail allocator tests to stable API", "tree": {"sha": "ad0b5a2c1c2e64cfb0cf3faf7cdd953966135aee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad0b5a2c1c2e64cfb0cf3faf7cdd953966135aee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc", "html_url": "https://github.com/rust-lang/rust/commit/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "033eae5ad73ef69648f7b794040de1cb2c4317a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/033eae5ad73ef69648f7b794040de1cb2c4317a1", "html_url": "https://github.com/rust-lang/rust/commit/033eae5ad73ef69648f7b794040de1cb2c4317a1"}], "stats": {"total": 72, "additions": 21, "deletions": 51}, "files": [{"sha": "9b5ee9a934b0b26b5ce3205d7cc1aa53368518b0", "filename": "tests/compile-fail/deallocate-bad-alignment.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc/tests%2Fcompile-fail%2Fdeallocate-bad-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc/tests%2Fcompile-fail%2Fdeallocate-bad-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdeallocate-bad-alignment.rs?ref=cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc", "patch": "@@ -1,15 +1,10 @@\n-#![feature(allocator_api)]\n-\n-extern crate alloc;\n-\n-use alloc::alloc::Global;\n-use std::alloc::{AllocRef, Layout};\n+use std::alloc::{alloc, dealloc, realloc, Layout};\n \n // error-pattern: allocation has size 1 and alignment 1, but gave size 1 and alignment 2\n \n fn main() {\n     unsafe {\n-        let x = Global.alloc(Layout::from_size_align_unchecked(1, 1)).unwrap().0;\n-        Global.dealloc(x, Layout::from_size_align_unchecked(1, 2));\n+        let x = alloc(Layout::from_size_align_unchecked(1, 1));\n+        dealloc(x, Layout::from_size_align_unchecked(1, 2));\n     }\n }"}, {"sha": "39a0d48c8b1a43f241fc2854d4207a9fe1c047b4", "filename": "tests/compile-fail/deallocate-bad-size.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc/tests%2Fcompile-fail%2Fdeallocate-bad-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc/tests%2Fcompile-fail%2Fdeallocate-bad-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdeallocate-bad-size.rs?ref=cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc", "patch": "@@ -1,15 +1,10 @@\n-#![feature(allocator_api)]\n-\n-extern crate alloc;\n-\n-use alloc::alloc::Global;\n-use std::alloc::{AllocRef, Layout};\n+use std::alloc::{alloc, dealloc, realloc, Layout};\n \n // error-pattern: allocation has size 1 and alignment 1, but gave size 2 and alignment 1\n \n fn main() {\n     unsafe {\n-        let x = Global.alloc(Layout::from_size_align_unchecked(1, 1)).unwrap().0;\n-        Global.dealloc(x, Layout::from_size_align_unchecked(2, 1));\n+        let x = alloc(Layout::from_size_align_unchecked(1, 1));\n+        dealloc(x, Layout::from_size_align_unchecked(2, 1));\n     }\n }"}, {"sha": "3c5e8e96360c726b0843f78ee6bd320c6b3214cf", "filename": "tests/compile-fail/deallocate-twice.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc/tests%2Fcompile-fail%2Fdeallocate-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc/tests%2Fcompile-fail%2Fdeallocate-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdeallocate-twice.rs?ref=cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc", "patch": "@@ -1,16 +1,11 @@\n-#![feature(allocator_api)]\n-\n-extern crate alloc;\n-\n-use alloc::alloc::Global;\n-use std::alloc::{AllocRef, Layout};\n+use std::alloc::{alloc, dealloc, realloc, Layout};\n \n // error-pattern: dereferenced after this allocation got freed\n \n fn main() {\n     unsafe {\n-        let x = Global.alloc(Layout::from_size_align_unchecked(1, 1)).unwrap().0;\n-        Global.dealloc(x, Layout::from_size_align_unchecked(1, 1));\n-        Global.dealloc(x, Layout::from_size_align_unchecked(1, 1));\n+        let x = alloc(Layout::from_size_align_unchecked(1, 1));\n+        dealloc(x, Layout::from_size_align_unchecked(1, 1));\n+        dealloc(x, Layout::from_size_align_unchecked(1, 1));\n     }\n }"}, {"sha": "bbdef4421b6c2771dd9bde9a9905565260e601fd", "filename": "tests/compile-fail/reallocate-bad-size.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc/tests%2Fcompile-fail%2Freallocate-bad-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc/tests%2Fcompile-fail%2Freallocate-bad-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Freallocate-bad-size.rs?ref=cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc", "patch": "@@ -1,15 +1,10 @@\n-#![feature(allocator_api)]\n-\n-extern crate alloc;\n-\n-use alloc::alloc::Global;\n-use std::alloc::{AllocRef, Layout};\n+use std::alloc::{alloc, dealloc, realloc, Layout};\n \n // error-pattern: allocation has size 1 and alignment 1, but gave size 2 and alignment 1\n \n fn main() {\n     unsafe {\n-        let x = Global.alloc(Layout::from_size_align_unchecked(1, 1)).unwrap().0;\n-        Global.realloc(x, Layout::from_size_align_unchecked(2, 1), 1).unwrap();\n+        let x = alloc(Layout::from_size_align_unchecked(1, 1));\n+        realloc(x, Layout::from_size_align_unchecked(2, 1), 1);\n     }\n }"}, {"sha": "8130d72dee59698cd9f31fdc44e3cc33f28995a8", "filename": "tests/compile-fail/reallocate-change-alloc.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc/tests%2Fcompile-fail%2Freallocate-change-alloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc/tests%2Fcompile-fail%2Freallocate-change-alloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Freallocate-change-alloc.rs?ref=cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc", "patch": "@@ -1,14 +1,9 @@\n-#![feature(allocator_api)]\n-\n-extern crate alloc;\n-\n-use alloc::alloc::Global;\n-use std::alloc::{AllocRef, Layout};\n+use std::alloc::{alloc, dealloc, realloc, Layout};\n \n fn main() {\n     unsafe {\n-        let x = Global.alloc(Layout::from_size_align_unchecked(1, 1)).unwrap().0;\n-        Global.realloc(x, Layout::from_size_align_unchecked(1, 1), 1).unwrap();\n-        let _z = *(x.as_ptr() as *mut u8); //~ ERROR dereferenced after this allocation got freed\n+        let x = alloc(Layout::from_size_align_unchecked(1, 1));\n+        realloc(x, Layout::from_size_align_unchecked(1, 1), 1);\n+        let _z = *x; //~ ERROR dereferenced after this allocation got freed\n     }\n }"}, {"sha": "702ddc0724a33af8abc898d74e2318f485e237b3", "filename": "tests/compile-fail/reallocate-dangling.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc/tests%2Fcompile-fail%2Freallocate-dangling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc/tests%2Fcompile-fail%2Freallocate-dangling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Freallocate-dangling.rs?ref=cd132f563ea5385c8dfed2b9c9032ea3e8dc3edc", "patch": "@@ -1,16 +1,11 @@\n-#![feature(allocator_api)]\n-\n-extern crate alloc;\n-\n-use alloc::alloc::Global;\n-use std::alloc::{AllocRef, Layout};\n+use std::alloc::{alloc, dealloc, realloc, Layout};\n \n // error-pattern: dereferenced after this allocation got freed\n \n fn main() {\n     unsafe {\n-        let x = Global.alloc(Layout::from_size_align_unchecked(1, 1)).unwrap().0;\n-        Global.dealloc(x, Layout::from_size_align_unchecked(1, 1));\n-        Global.realloc(x, Layout::from_size_align_unchecked(1, 1), 1).unwrap();\n+        let x = alloc(Layout::from_size_align_unchecked(1, 1));\n+        dealloc(x, Layout::from_size_align_unchecked(1, 1));\n+        realloc(x, Layout::from_size_align_unchecked(1, 1), 1);\n     }\n }"}]}