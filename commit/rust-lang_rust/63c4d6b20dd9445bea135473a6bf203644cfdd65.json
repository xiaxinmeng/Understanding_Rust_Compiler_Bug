{"sha": "63c4d6b20dd9445bea135473a6bf203644cfdd65", "node_id": "C_kwDOAAsO6NoAKDYzYzRkNmIyMGRkOTQ0NWJlYTEzNTQ3M2E2YmYyMDM2NDRjZmRkNjU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-29T19:58:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-29T19:58:14Z"}, "message": "Merge #11844\n\n11844: Fix divergence detection for bare match arms r=flodiebold a=flodiebold\n\nFixes #11814 and #11837.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>", "tree": {"sha": "17ecd0084270eec411bf2731fdac52a8e8afafda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17ecd0084270eec411bf2731fdac52a8e8afafda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63c4d6b20dd9445bea135473a6bf203644cfdd65", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiQ2TXCRBK7hj4Ov3rIwAA1gQIAC/FNYj5zSbWezbIlDM/UUN1\nrUirdaEA6LQdAQKDO4bG7eFiHPYVr3pjd3lW3Al7pNDDsM5s5Y13VZIb+SIzIJkL\nVi5Tpv1k03rqExQQjclxRd2mkymgQ8PKydj/WdlDTUfFO+MZK4R2HJhMFKf2UY2s\nQ0iRCrFHYSySEiT7M0VyLSH/eNwU06e5iu03hmKf7ueqvkqvYgkvvaqjuKsSMq/C\ntTSK5mK092ATY6IPjbFOvF0tknOLrrOe7ZewFAfNRi44eJMt4TFdocSlctgUBOLx\n3HtmphFmrhHqsWL//NyydCW8TzS6zkb8sqSVQHY7T+gFoMvihZtCwQLC+VgVtVY=\n=s+z8\n-----END PGP SIGNATURE-----\n", "payload": "tree 17ecd0084270eec411bf2731fdac52a8e8afafda\nparent 9eb7553d5ab7cd512b7edf8d8a30b191be0dc761\nparent ea1d0bccef335ed55ddc7af1312074990249eb77\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1648583894 +0000\ncommitter GitHub <noreply@github.com> 1648583894 +0000\n\nMerge #11844\n\n11844: Fix divergence detection for bare match arms r=flodiebold a=flodiebold\n\nFixes #11814 and #11837.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63c4d6b20dd9445bea135473a6bf203644cfdd65", "html_url": "https://github.com/rust-lang/rust/commit/63c4d6b20dd9445bea135473a6bf203644cfdd65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63c4d6b20dd9445bea135473a6bf203644cfdd65/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9eb7553d5ab7cd512b7edf8d8a30b191be0dc761", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb7553d5ab7cd512b7edf8d8a30b191be0dc761", "html_url": "https://github.com/rust-lang/rust/commit/9eb7553d5ab7cd512b7edf8d8a30b191be0dc761"}, {"sha": "ea1d0bccef335ed55ddc7af1312074990249eb77", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea1d0bccef335ed55ddc7af1312074990249eb77", "html_url": "https://github.com/rust-lang/rust/commit/ea1d0bccef335ed55ddc7af1312074990249eb77"}], "stats": {"total": 52, "additions": 47, "deletions": 5}, "files": [{"sha": "01022f20bd133923a444d8662660343ab79535a0", "filename": "crates/hir_ty/src/infer/expr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/63c4d6b20dd9445bea135473a6bf203644cfdd65/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63c4d6b20dd9445bea135473a6bf203644cfdd65/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=63c4d6b20dd9445bea135473a6bf203644cfdd65", "patch": "@@ -45,10 +45,6 @@ use super::{\n impl<'a> InferenceContext<'a> {\n     pub(crate) fn infer_expr(&mut self, tgt_expr: ExprId, expected: &Expectation) -> Ty {\n         let ty = self.infer_expr_inner(tgt_expr, expected);\n-        if self.resolve_ty_shallow(&ty).is_never() {\n-            // Any expression that produces a value of type `!` must have diverged\n-            self.diverges = Diverges::Always;\n-        }\n         if let Some(expected_ty) = expected.only_has_type(&mut self.table) {\n             let could_unify = self.unify(&ty, &expected_ty);\n             if !could_unify {\n@@ -800,6 +796,10 @@ impl<'a> InferenceContext<'a> {\n         // use a new type variable if we got unknown here\n         let ty = self.insert_type_vars_shallow(ty);\n         self.write_expr_ty(tgt_expr, ty.clone());\n+        if self.resolve_ty_shallow(&ty).is_never() {\n+            // Any expression that produces a value of type `!` must have diverged\n+            self.diverges = Diverges::Always;\n+        }\n         ty\n     }\n "}, {"sha": "fbdc8209f8f4b13138f5f233e786fab9e91b5e86", "filename": "crates/hir_ty/src/tests/never_type.rs", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/63c4d6b20dd9445bea135473a6bf203644cfdd65/crates%2Fhir_ty%2Fsrc%2Ftests%2Fnever_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63c4d6b20dd9445bea135473a6bf203644cfdd65/crates%2Fhir_ty%2Fsrc%2Ftests%2Fnever_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fnever_type.rs?ref=63c4d6b20dd9445bea135473a6bf203644cfdd65", "patch": "@@ -1,6 +1,6 @@\n use expect_test::expect;\n \n-use super::{check_infer_with_mismatches, check_types};\n+use super::{check_infer_with_mismatches, check_no_mismatches, check_types};\n \n #[test]\n fn infer_never1() {\n@@ -441,3 +441,45 @@ fn let_else_must_diverge() {\n         \"#]],\n     );\n }\n+\n+#[test]\n+fn issue_11837() {\n+    check_no_mismatches(\n+        r#\"\n+//- minicore: result\n+enum MyErr {\n+    Err1,\n+    Err2,\n+}\n+\n+fn example_ng() {\n+    let value: Result<i32, MyErr> = Ok(3);\n+\n+    loop {\n+        let ret = match value {\n+            Ok(value) => value,\n+            Err(ref err) => {\n+                match err {\n+                    MyErr::Err1 => break,\n+                    MyErr::Err2 => continue,\n+                };\n+            }\n+        };\n+    }\n+}\n+\"#,\n+    );\n+}\n+\n+#[test]\n+fn issue_11814() {\n+    check_no_mismatches(\n+        r#\"\n+fn example() -> bool {\n+    match 1 {\n+        _ => return true,\n+    };\n+}\n+\"#,\n+    );\n+}"}]}