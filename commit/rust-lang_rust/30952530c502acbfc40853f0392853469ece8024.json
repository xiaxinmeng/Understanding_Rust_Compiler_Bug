{"sha": "30952530c502acbfc40853f0392853469ece8024", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwOTUyNTMwYzUwMmFjYmZjNDA4NTNmMDM5Mjg1MzQ2OWVjZTgwMjQ=", "commit": {"author": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-02-09T12:20:42Z"}, "committer": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-03-31T15:05:42Z"}, "message": "Fix codes that fails dogfood", "tree": {"sha": "a9c1bfc5e79c0f7c2fd7325b49ca49e7cfafa0c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9c1bfc5e79c0f7c2fd7325b49ca49e7cfafa0c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30952530c502acbfc40853f0392853469ece8024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30952530c502acbfc40853f0392853469ece8024", "html_url": "https://github.com/rust-lang/rust/commit/30952530c502acbfc40853f0392853469ece8024", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30952530c502acbfc40853f0392853469ece8024/comments", "author": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5029dc805fa1b8c58988cad119a45a6d51bcdaad", "url": "https://api.github.com/repos/rust-lang/rust/commits/5029dc805fa1b8c58988cad119a45a6d51bcdaad", "html_url": "https://github.com/rust-lang/rust/commit/5029dc805fa1b8c58988cad119a45a6d51bcdaad"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8c6c30a18814c24cb088f6bd0ca2fadd7b3a91c5", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/30952530c502acbfc40853f0392853469ece8024/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30952530c502acbfc40853f0392853469ece8024/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=30952530c502acbfc40853f0392853469ece8024", "patch": "@@ -924,7 +924,7 @@ fn check_wild_err_arm<'tcx>(cx: &LateContext<'tcx>, ex: &Expr<'tcx>, arms: &[Arm\n                     let mut ident_bind_name = String::from(\"_\");\n                     if !matching_wild {\n                         // Looking for unused bindings (i.e.: `_e`)\n-                        inner.iter().for_each(|pat| {\n+                        for pat in inner.iter() {\n                             if let PatKind::Binding(_, id, ident, None) = pat.kind {\n                                 if ident.as_str().starts_with('_')\n                                     && !LocalUsedVisitor::new(cx, id).check_expr(arm.body)\n@@ -933,7 +933,7 @@ fn check_wild_err_arm<'tcx>(cx: &LateContext<'tcx>, ex: &Expr<'tcx>, arms: &[Arm\n                                     matching_wild = true;\n                                 }\n                             }\n-                        });\n+                        }\n                     }\n                     if_chain! {\n                         if matching_wild;"}]}