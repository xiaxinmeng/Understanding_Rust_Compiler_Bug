{"sha": "ed34354bfa4f98da2883fdbba4453c571dde1ef7", "node_id": "C_kwDOAAsO6NoAKGVkMzQzNTRiZmE0Zjk4ZGEyODgzZmRiYmE0NDUzYzU3MWRkZTFlZjc", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-02-25T08:39:05Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-02-25T10:12:20Z"}, "message": "Do not lint unresolved trait for ineffective unstable trait impl", "tree": {"sha": "31efc301ffb740635abc3c90d47b3e7cad0d3643", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31efc301ffb740635abc3c90d47b3e7cad0d3643"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed34354bfa4f98da2883fdbba4453c571dde1ef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed34354bfa4f98da2883fdbba4453c571dde1ef7", "html_url": "https://github.com/rust-lang/rust/commit/ed34354bfa4f98da2883fdbba4453c571dde1ef7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed34354bfa4f98da2883fdbba4453c571dde1ef7/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd4a96a12d0bf6dc12edf20a45df3a33052c9d7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd4a96a12d0bf6dc12edf20a45df3a33052c9d7d", "html_url": "https://github.com/rust-lang/rust/commit/bd4a96a12d0bf6dc12edf20a45df3a33052c9d7d"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "d7bf96b5237b4abb2fd611c729210e5f37ba8c87", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ed34354bfa4f98da2883fdbba4453c571dde1ef7/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed34354bfa4f98da2883fdbba4453c571dde1ef7/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=ed34354bfa4f98da2883fdbba4453c571dde1ef7", "patch": "@@ -748,7 +748,10 @@ impl<'tcx> Visitor<'tcx> for Checker<'tcx> {\n                         let mut c = CheckTraitImplStable { tcx: self.tcx, fully_stable: true };\n                         c.visit_ty(self_ty);\n                         c.visit_trait_ref(t);\n-                        if c.fully_stable {\n+\n+                        // do not lint when the trait isn't resolved, since resolution error should\n+                        // be fixed first\n+                        if t.path.res != Res::Err && c.fully_stable {\n                             self.tcx.struct_span_lint_hir(\n                                 INEFFECTIVE_UNSTABLE_TRAIT_IMPL,\n                                 item.hir_id(),"}, {"sha": "818d228bc91c5b08828d718dde3862bf239a1ebd", "filename": "tests/ui/stability-attribute/unresolved_stability_lint.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ed34354bfa4f98da2883fdbba4453c571dde1ef7/tests%2Fui%2Fstability-attribute%2Funresolved_stability_lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed34354bfa4f98da2883fdbba4453c571dde1ef7/tests%2Fui%2Fstability-attribute%2Funresolved_stability_lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstability-attribute%2Funresolved_stability_lint.rs?ref=ed34354bfa4f98da2883fdbba4453c571dde1ef7", "patch": "@@ -0,0 +1,8 @@\n+#![feature(staged_api)]\n+#![stable(feature = \"uwu\", since = \"1.0.0\")]\n+\n+#[unstable(feature = \"foo\", issue = \"none\")]\n+impl Foo for () {}\n+//~^ ERROR cannot find trait `Foo` in this scope\n+\n+fn main() {}"}, {"sha": "11d6abcaf361f27361bb11d9bed1b624bf0946f1", "filename": "tests/ui/stability-attribute/unresolved_stability_lint.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ed34354bfa4f98da2883fdbba4453c571dde1ef7/tests%2Fui%2Fstability-attribute%2Funresolved_stability_lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ed34354bfa4f98da2883fdbba4453c571dde1ef7/tests%2Fui%2Fstability-attribute%2Funresolved_stability_lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstability-attribute%2Funresolved_stability_lint.stderr?ref=ed34354bfa4f98da2883fdbba4453c571dde1ef7", "patch": "@@ -0,0 +1,9 @@\n+error[E0405]: cannot find trait `Foo` in this scope\n+  --> $DIR/unresolved_stability_lint.rs:5:6\n+   |\n+LL | impl Foo for () {}\n+   |      ^^^ not found in this scope\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0405`."}]}