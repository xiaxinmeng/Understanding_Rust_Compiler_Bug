{"sha": "dd593d3ab85826436dec593ce6ac06932291fd0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNTkzZDNhYjg1ODI2NDM2ZGVjNTkzY2U2YWMwNjkzMjI5MWZkMGU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-28T11:49:11Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-28T11:49:11Z"}, "message": "get_ref -> get_mut", "tree": {"sha": "208e7801941b3829c25fe1c969ca2c805236708d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/208e7801941b3829c25fe1c969ca2c805236708d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd593d3ab85826436dec593ce6ac06932291fd0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd593d3ab85826436dec593ce6ac06932291fd0e", "html_url": "https://github.com/rust-lang/rust/commit/dd593d3ab85826436dec593ce6ac06932291fd0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd593d3ab85826436dec593ce6ac06932291fd0e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "965fdb029460346553cd9ddc59f5bb3b93e2f508", "url": "https://api.github.com/repos/rust-lang/rust/commits/965fdb029460346553cd9ddc59f5bb3b93e2f508", "html_url": "https://github.com/rust-lang/rust/commit/965fdb029460346553cd9ddc59f5bb3b93e2f508"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "c2107c28e034cd7f73816ca05e4d9e3547ab5fd8", "filename": "src/libstd/sys/windows/mutex.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/dd593d3ab85826436dec593ce6ac06932291fd0e/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd593d3ab85826436dec593ce6ac06932291fd0e/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs?ref=dd593d3ab85826436dec593ce6ac06932291fd0e", "patch": "@@ -173,26 +173,26 @@ impl ReentrantMutex {\n \n     pub unsafe fn lock(&self) {\n         // `init` must have been called, so this is now initialized and\n-        // we can call `get_ref`.\n-        c::EnterCriticalSection((&mut *self.inner.get()).get_ref());\n+        // we can call `get_mut`.\n+        c::EnterCriticalSection((&mut *self.inner.get()).get_mut());\n     }\n \n     #[inline]\n     pub unsafe fn try_lock(&self) -> bool {\n         // `init` must have been called, so this is now initialized and\n-        // we can call `get_ref`.\n-        c::TryEnterCriticalSection((&mut *self.inner.get()).get_ref()) != 0\n+        // we can call `get_mut`.\n+        c::TryEnterCriticalSection((&mut *self.inner.get()).get_mut()) != 0\n     }\n \n     pub unsafe fn unlock(&self) {\n         // `init` must have been called, so this is now initialized and\n-        // we can call `get_ref`.\n-        c::LeaveCriticalSection((&mut *self.inner.get()).get_ref());\n+        // we can call `get_mut`.\n+        c::LeaveCriticalSection((&mut *self.inner.get()).get_mut());\n     }\n \n     pub unsafe fn destroy(&self) {\n         // `init` must have been called, so this is now initialized and\n-        // we can call `get_ref`.\n-        c::DeleteCriticalSection((&mut *self.inner.get()).get_ref());\n+        // we can call `get_mut`.\n+        c::DeleteCriticalSection((&mut *self.inner.get()).get_mut());\n     }\n }"}]}