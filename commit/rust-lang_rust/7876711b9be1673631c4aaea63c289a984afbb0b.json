{"sha": "7876711b9be1673631c4aaea63c289a984afbb0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4NzY3MTFiOWJlMTY3MzYzMWM0YWFlYTYzYzI4OWE5ODRhZmJiMGI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-25T05:00:47Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-25T05:00:47Z"}, "message": "parse: address nitpick", "tree": {"sha": "ee122a13da07d190caec602f44dd6d08b63965a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee122a13da07d190caec602f44dd6d08b63965a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7876711b9be1673631c4aaea63c289a984afbb0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7876711b9be1673631c4aaea63c289a984afbb0b", "html_url": "https://github.com/rust-lang/rust/commit/7876711b9be1673631c4aaea63c289a984afbb0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7876711b9be1673631c4aaea63c289a984afbb0b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1eb0844f5d4321a7769238af740e6d93d3e966e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1eb0844f5d4321a7769238af740e6d93d3e966e4", "html_url": "https://github.com/rust-lang/rust/commit/1eb0844f5d4321a7769238af740e6d93d3e966e4"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "d2a6f0b7fcf0cc7d22b54eb9bff64f9f827c9ac5", "filename": "src/librustc_parse/parser/stmt.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7876711b9be1673631c4aaea63c289a984afbb0b/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7876711b9be1673631c4aaea63c289a984afbb0b/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fstmt.rs?ref=7876711b9be1673631c4aaea63c289a984afbb0b", "patch": "@@ -59,9 +59,8 @@ impl<'a> Parser<'a> {\n         } else if let Some(item) = self.parse_stmt_item(attrs.clone())? {\n             // FIXME: Bad copy of attrs\n             self.mk_stmt(lo.to(item.span), StmtKind::Item(P(item)))\n-        }\n-        // Do not attempt to parse an expression if we're done here.\n-        else if self.token == token::Semi {\n+        } else if self.token == token::Semi {\n+            // Do not attempt to parse an expression if we're done here.\n             self.error_outer_attrs(&attrs);\n             self.bump();\n             let mut last_semi = lo;"}]}