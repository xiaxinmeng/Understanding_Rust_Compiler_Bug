{"sha": "ea960913316b5638d99a73febadfbf7ff8ca2c7d", "node_id": "C_kwDOAAsO6NoAKGVhOTYwOTEzMzE2YjU2MzhkOTlhNzNmZWJhZGZiZjdmZjhjYTJjN2Q", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-19T15:46:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-19T15:46:35Z"}, "message": "Auto merge of #8838 - tamaroning:fix_dbg, r=Jarcho,xFrednet\n\n[dbg_macro] tolerates use of `dbg!` in items which have `#[cfg(test)]` attribute\n\nfix: #8758\nchangelog: [dbg_macro] tolerates use of `dbg!` in items with `#[cfg(test)]` attribute", "tree": {"sha": "621fb63060e27c4e6a24d92b5989a9a935a23a1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/621fb63060e27c4e6a24d92b5989a9a935a23a1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea960913316b5638d99a73febadfbf7ff8ca2c7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea960913316b5638d99a73febadfbf7ff8ca2c7d", "html_url": "https://github.com/rust-lang/rust/commit/ea960913316b5638d99a73febadfbf7ff8ca2c7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea960913316b5638d99a73febadfbf7ff8ca2c7d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f8d18fe691d3197009d352bd4aa03600b8c28c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f8d18fe691d3197009d352bd4aa03600b8c28c5", "html_url": "https://github.com/rust-lang/rust/commit/6f8d18fe691d3197009d352bd4aa03600b8c28c5"}, {"sha": "db41df112aded9ecbbbba421189f28f6eb326554", "url": "https://api.github.com/repos/rust-lang/rust/commits/db41df112aded9ecbbbba421189f28f6eb326554", "html_url": "https://github.com/rust-lang/rust/commit/db41df112aded9ecbbbba421189f28f6eb326554"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "f99d793c201d76c4c20584c48ce98e8af0d48868", "filename": "clippy_lints/src/dbg_macro.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea960913316b5638d99a73febadfbf7ff8ca2c7d/clippy_lints%2Fsrc%2Fdbg_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea960913316b5638d99a73febadfbf7ff8ca2c7d/clippy_lints%2Fsrc%2Fdbg_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdbg_macro.rs?ref=ea960913316b5638d99a73febadfbf7ff8ca2c7d", "patch": "@@ -1,7 +1,7 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n-use clippy_utils::is_in_test_function;\n use clippy_utils::macros::root_macro_call_first_node;\n use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::{is_in_cfg_test, is_in_test_function};\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n@@ -37,7 +37,7 @@ impl LateLintPass<'_> for DbgMacro {\n         let Some(macro_call) = root_macro_call_first_node(cx, expr) else { return };\n         if cx.tcx.is_diagnostic_item(sym::dbg_macro, macro_call.def_id) {\n             // we make an exception for test code\n-            if is_in_test_function(cx.tcx, expr.hir_id) {\n+            if is_in_test_function(cx.tcx, expr.hir_id) || is_in_cfg_test(cx.tcx, expr.hir_id) {\n                 return;\n             }\n             let mut applicability = Applicability::MachineApplicable;"}, {"sha": "8f9e687fb6a1002bbcbf5a0733f026dfe410de87", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ea960913316b5638d99a73febadfbf7ff8ca2c7d/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea960913316b5638d99a73febadfbf7ff8ca2c7d/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=ea960913316b5638d99a73febadfbf7ff8ca2c7d", "patch": "@@ -2146,6 +2146,27 @@ pub fn is_in_test_function(tcx: TyCtxt<'_>, id: hir::HirId) -> bool {\n     })\n }\n \n+/// Checks if the item containing the given `HirId` has `#[cfg(test)]` attribute applied\n+///\n+/// Note: Add `// compile-flags: --test` to UI tests with a `#[cfg(test)]` function\n+pub fn is_in_cfg_test(tcx: TyCtxt<'_>, id: hir::HirId) -> bool {\n+    fn is_cfg_test(attr: &Attribute) -> bool {\n+        if attr.has_name(sym::cfg)\n+            && let Some(items) = attr.meta_item_list()\n+            && let [item] = &*items\n+            && item.has_name(sym::test)\n+        {\n+            true\n+        } else {\n+            false\n+        }\n+    }\n+    tcx.hir()\n+        .parent_iter(id)\n+        .flat_map(|(parent_id, _)| tcx.hir().attrs(parent_id))\n+        .any(is_cfg_test)\n+}\n+\n /// Checks whether item either has `test` attribute applied, or\n /// is a module with `test` in its name.\n ///"}, {"sha": "25294e8c766f8b3a0ac22fd33fd4366a15b08615", "filename": "tests/ui/dbg_macro.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ea960913316b5638d99a73febadfbf7ff8ca2c7d/tests%2Fui%2Fdbg_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea960913316b5638d99a73febadfbf7ff8ca2c7d/tests%2Fui%2Fdbg_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdbg_macro.rs?ref=ea960913316b5638d99a73febadfbf7ff8ca2c7d", "patch": "@@ -46,3 +46,15 @@ mod issue7274 {\n pub fn issue8481() {\n     dbg!(1);\n }\n+\n+#[cfg(test)]\n+fn foo2() {\n+    dbg!(1);\n+}\n+\n+#[cfg(test)]\n+mod mod1 {\n+    fn func() {\n+        dbg!(1);\n+    }\n+}"}]}