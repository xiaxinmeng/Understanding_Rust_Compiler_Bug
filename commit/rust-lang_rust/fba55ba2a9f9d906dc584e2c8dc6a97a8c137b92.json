{"sha": "fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiYTU1YmEyYTlmOWQ5MDZkYzU4NGUyYzhkYzZhOTdhOGMxMzdiOTI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-24T15:16:41Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-01T07:58:03Z"}, "message": "make the -Z flags we use more consistent", "tree": {"sha": "8e31ec006184bdcbd66e4b0ccb08e43d159a40f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e31ec006184bdcbd66e4b0ccb08e43d159a40f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92", "html_url": "https://github.com/rust-lang/rust/commit/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2833b54100908103645ee247fa014bc6a5d136fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/2833b54100908103645ee247fa014bc6a5d136fb", "html_url": "https://github.com/rust-lang/rust/commit/2833b54100908103645ee247fa014bc6a5d136fb"}], "stats": {"total": 50, "additions": 35, "deletions": 15}, "files": [{"sha": "1e9ccbdf95000ff4d3b10aaa70747d6d3d46687f", "filename": "appveyor.yml", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92", "patch": "@@ -14,19 +14,20 @@ branches:\n     - master\n \n install:\n-    # install Rust\n+    # Install Rust.\n     - set PATH=C:\\Program Files\\Git\\mingw64\\bin;C:\\msys64\\mingw%MSYS2_BITS%\\bin;%PATH%\n     - set /p RUST_TOOLCHAIN=<rust-version\n     - curl -sSf -o rustup-init.exe https://win.rustup.rs/\n     - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_TOOLCHAIN%\n     - set PATH=%USERPROFILE%\\.cargo\\bin;%PATH%\n     - rustc --version\n-    # customize installation\n+    # Customize installation.\n     - rustup component add rust-src\n     - cargo install xargo\n-    # prepare a libstd with MIR (cannot use bash script, obviously)\n+    # Prepare a libstd with MIR (cannot use bash script, obviously).\n+    # The flags here should be kept in sync with `add_miri_default_args` in `src/lib.rs`.\n     - cd xargo\n-    - set RUSTFLAGS=-Zalways-encode-mir -Zmir-emit-validate=1\n+    - set RUSTFLAGS=-Zalways-encode-mir -Zmir-emit-retag -Zmir-opt-level=0\n     - xargo build\n     - set RUSTFLAGS=\n     - cd .."}, {"sha": "20fb0fa35319906a9467b5eeb51d38a1b722b75e", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92", "patch": "@@ -186,7 +186,7 @@ fn main() {\n             Command::new(\"rustc\")\n         };\n \n-        args.extend_from_slice(&[\"-Z\".to_owned(), \"always-encode-mir\".to_owned()]);\n+        miri::add_miri_default_args(&mut args);\n         args.extend_from_slice(&[\"--cfg\".to_owned(), r#\"feature=\"cargo-miri\"\"#.to_owned()]);\n \n         match command.args(&args).status() {"}, {"sha": "d14d7a2e4bd1f8774328394c2742c7bbf30942b3", "filename": "src/bin/miri-rustc-tests.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92/src%2Fbin%2Fmiri-rustc-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92/src%2Fbin%2Fmiri-rustc-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri-rustc-tests.rs?ref=fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92", "patch": "@@ -165,9 +165,7 @@ fn main() {\n             args.push(Path::new(&std::env::var(\"HOME\").unwrap()).join(\".xargo\").join(\"HOST\").display().to_string());\n         }\n \n-        args.push(\"-Zmir-opt-level=3\".to_owned());\n-        // for auxilary builds in unit tests\n-        args.push(\"-Zalways-encode-mir\".to_owned());\n+        miri::add_miri_default_args(&mut args);\n \n         // A threadsafe buffer for writing.\n         #[derive(Default, Clone)]"}, {"sha": "686f685b831cac5cedee856b0e2d60efa97ef6e7", "filename": "src/bin/miri.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92", "patch": "@@ -10,6 +10,8 @@ extern crate rustc_codegen_utils;\n extern crate env_logger;\n extern crate log_settings;\n extern crate syntax;\n+\n+#[macro_use]\n extern crate log;\n \n use std::path::PathBuf;\n@@ -212,12 +214,7 @@ fn main() {\n     init_early_loggers();\n     let mut args: Vec<String> = std::env::args().collect();\n \n-    let sysroot_flag = String::from(\"--sysroot\");\n-    if !args.contains(&sysroot_flag) {\n-        args.push(sysroot_flag);\n-        args.push(find_sysroot());\n-    }\n-\n+    // Parse our own -Z flags and remove them before rustc gets their hand on them.\n     let mut validate = true;\n     args.retain(|arg| {\n         match arg.as_str() {\n@@ -229,7 +226,16 @@ fn main() {\n         }\n     });\n \n+    // Determine sysroot and let rustc know about it\n+    let sysroot_flag = String::from(\"--sysroot\");\n+    if !args.contains(&sysroot_flag) {\n+        args.push(sysroot_flag);\n+        args.push(find_sysroot());\n+    }\n+    // Finally, add the default flags all the way in the beginning.\n+    miri::add_miri_default_args(&mut args);\n \n+    trace!(\"rustc arguments: {:?}\", args);\n     let result = rustc_driver::run(move || {\n         rustc_driver::run_compiler(&args, Box::new(MiriCompilerCalls {\n             default: Box::new(RustcDefaultCalls),"}, {"sha": "2de6665186bf7b94edd256187abb4853faf54764", "filename": "src/lib.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92", "patch": "@@ -50,6 +50,20 @@ use stacked_borrows::{EvalContextExt as StackedBorEvalContextExt};\n // Used by priroda\n pub use stacked_borrows::{Borrow, Stacks, Mut as MutBorrow};\n \n+/// Insert rustc arguments at the beginning of the argument listthat miri wants to be\n+/// set per default, for maximal validation power.\n+pub fn add_miri_default_args(args: &mut Vec<String>) {\n+    // The flags here should be kept in sync with what bootstrap adds when `test-miri` is\n+    // set, which happens in `bootstrap/bin/rustc.rs` in the rustc sources; and also\n+    // kept in sync with `xargo/build.sh` in this repo and `appveyor.yml`.\n+\n+    // Inserting at index 1, after the binary name\n+    args.splice(1..1,\n+        [\"-Zalways-encode-mir\", \"-Zmir-emit-retag\", \"-Zmir-opt-level=0\"]\n+        .iter().map(|s| s.to_string())\n+    );\n+}\n+\n // Used by priroda\n pub fn create_ecx<'a, 'mir: 'a, 'tcx: 'mir>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,"}, {"sha": "25c56d31ab56a4032e22e773d153064700091643", "filename": "xargo/build.sh", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92/xargo%2Fbuild.sh", "raw_url": "https://github.com/rust-lang/rust/raw/fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92/xargo%2Fbuild.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xargo%2Fbuild.sh?ref=fba55ba2a9f9d906dc584e2c8dc6a97a8c137b92", "patch": "@@ -1,3 +1,4 @@\n #!/bin/sh\n cd \"$(dirname \"$0\")\"\n-RUSTFLAGS='-Zalways-encode-mir -Zmir-emit-validate=1' xargo build\n+# The flags here should be kept in sync with `add_miri_default_args` in `src/lib.rs`.\n+RUSTFLAGS='-Zalways-encode-mir -Zmir-emit-retag -Zmir-opt-level=0' xargo build"}]}