{"sha": "023466cccaf2230b6f2beb3e9e9802e6be1f29d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMzQ2NmNjY2FmMjIzMGI2ZjJiZWIzZTllOTgwMmU2YmUxZjI5ZDk=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-10-14T05:47:52Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-10-14T05:47:55Z"}, "message": "extra: implement Encodable/Decodable for Uuid", "tree": {"sha": "d4258db7f60b444e205124690e620655237cd3a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4258db7f60b444e205124690e620655237cd3a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/023466cccaf2230b6f2beb3e9e9802e6be1f29d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/023466cccaf2230b6f2beb3e9e9802e6be1f29d9", "html_url": "https://github.com/rust-lang/rust/commit/023466cccaf2230b6f2beb3e9e9802e6be1f29d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/023466cccaf2230b6f2beb3e9e9802e6be1f29d9/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "009c3d8bae1c12d36c77649dde90523b708b8d10", "url": "https://api.github.com/repos/rust-lang/rust/commits/009c3d8bae1c12d36c77649dde90523b708b8d10", "html_url": "https://github.com/rust-lang/rust/commit/009c3d8bae1c12d36c77649dde90523b708b8d10"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "c3b67ae0a0ce79c33267e803146f5e516dbfd9e2", "filename": "src/libextra/uuid.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/023466cccaf2230b6f2beb3e9e9802e6be1f29d9/src%2Flibextra%2Fuuid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/023466cccaf2230b6f2beb3e9e9802e6be1f29d9/src%2Flibextra%2Fuuid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fuuid.rs?ref=023466cccaf2230b6f2beb3e9e9802e6be1f29d9", "patch": "@@ -66,6 +66,8 @@ use std::rand::Rng;\n use std::cmp::Eq;\n use std::cast::{transmute,transmute_copy};\n \n+use serialize::{Encoder, Encodable, Decoder, Decodable};\n+\n /// A 128-bit (16 byte) buffer containing the ID\n pub type UuidBytes = [u8, ..16];\n \n@@ -486,6 +488,19 @@ impl TotalEq for Uuid {\n     }\n }\n \n+// FIXME #9845: Test these\n+impl<T: Encoder> Encodable<T> for Uuid {\n+    fn encode(&self, e: &mut T) {\n+        e.emit_str(self.to_hyphenated_str());\n+    }\n+}\n+\n+impl<T: Decoder> Decodable<T> for Uuid {\n+    fn decode(d: &mut T) -> Uuid {\n+        from_str(d.read_str()).unwrap()\n+    }\n+}\n+\n /// Generates a random instance of UUID (V4 conformant)\n impl rand::Rand for Uuid {\n     #[inline]"}]}