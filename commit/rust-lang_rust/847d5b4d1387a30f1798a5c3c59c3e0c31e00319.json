{"sha": "847d5b4d1387a30f1798a5c3c59c3e0c31e00319", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0N2Q1YjRkMTM4N2EzMGYxNzk4YTVjM2M1OWMzZTBjMzFlMDAzMTk=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2020-02-01T18:29:28Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2020-02-01T18:29:28Z"}, "message": "Derive Clone + PartialEq + Eq for std::string::FromUtf8Error", "tree": {"sha": "d2ae5fab8210db388f987e0621bfa37cc78b0186", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2ae5fab8210db388f987e0621bfa37cc78b0186"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/847d5b4d1387a30f1798a5c3c59c3e0c31e00319", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAl41w4gACgkQ/vbIBR0O\nATyFRw/7BhBHvWoZqSR04h5jE+lUFGL/MjAshjsO51tVddFRylH/iTzxMrxrVN4f\nEsQz6uP2ZylcL71vvm0rxGIybNRfkWGpnLLMEF2qmXBEeQhDchKB3PM2e/dllCdx\nwwn1nuDvbn76Phrbjw8vGc1SoeSIbZqUwkaUPoQDErCfo0TZZ0Ez69xdIWAYTYf4\nTyuBqQRFpYXVoV9uArT+wsH1HV4e1Oh7yYpXv5rb6wivCdt67wrl7D9I/jUXelTD\nMxXDiUBmkDoafE/76BMrehSO2cjl5Kfy7wvYMUOHlkyKgOfBWrrgkwkhkdM9gpnF\nrUoeiWiCrQERHdnN19pSbbZn64wS2dKGxCiQSM/Y+6TPU5LTeo98f0/hSyQzvPL0\nuS5cwhMnYdvgKC4Kz0P4uRtBs9HWA6+0VzVvvZFvTozn/H/KMBm1kUcLR+QLAgKW\nmVVOOlDLpT/U2XiYqsgo6R8cYplV+BcyISUD/hLW45Jy0JHVbmW1dPhQ8x5aHM2K\nT1llHY6UnhBKoGpA3q9aAR0bpTJBORrg/wIRrT/C5cEarVgGs2yyAKcOvZkyKSvR\nUx70x4/DoFhD0XMZ5AhKjSjO7paLuOZANkjWShY7SNfGnCJIusxGUQTcBB/+aPiX\nyfl8qnK7o+5mWJaoXS0mIBE8Io62LCx4hoD+RMOYXirrLvWzLNY=\n=O7hq\n-----END PGP SIGNATURE-----", "payload": "tree d2ae5fab8210db388f987e0621bfa37cc78b0186\nparent 6c0b779b7bb23ad1bead914e8023642cc2368406\nauthor kennytm <kennytm@gmail.com> 1580581768 +0800\ncommitter kennytm <kennytm@gmail.com> 1580581768 +0800\n\nDerive Clone + PartialEq + Eq for std::string::FromUtf8Error\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/847d5b4d1387a30f1798a5c3c59c3e0c31e00319", "html_url": "https://github.com/rust-lang/rust/commit/847d5b4d1387a30f1798a5c3c59c3e0c31e00319", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/847d5b4d1387a30f1798a5c3c59c3e0c31e00319/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c0b779b7bb23ad1bead914e8023642cc2368406", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c0b779b7bb23ad1bead914e8023642cc2368406", "html_url": "https://github.com/rust-lang/rust/commit/6c0b779b7bb23ad1bead914e8023642cc2368406"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "8c9c95eec60c64f38ceb65a3d75fd42775c3c7a2", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/847d5b4d1387a30f1798a5c3c59c3e0c31e00319/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/847d5b4d1387a30f1798a5c3c59c3e0c31e00319/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=847d5b4d1387a30f1798a5c3c59c3e0c31e00319", "patch": "@@ -319,7 +319,7 @@ pub struct String {\n /// assert_eq!(vec![0, 159], value.unwrap_err().into_bytes());\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[derive(Debug)]\n+#[derive(Debug, Clone, PartialEq, Eq)]\n pub struct FromUtf8Error {\n     bytes: Vec<u8>,\n     error: Utf8Error,"}, {"sha": "08859b2b24bde0b2c715cbb569f95ef1cd0c18e1", "filename": "src/liballoc/tests/string.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/847d5b4d1387a30f1798a5c3c59c3e0c31e00319/src%2Fliballoc%2Ftests%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/847d5b4d1387a30f1798a5c3c59c3e0c31e00319/src%2Fliballoc%2Ftests%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstring.rs?ref=847d5b4d1387a30f1798a5c3c59c3e0c31e00319", "patch": "@@ -50,7 +50,11 @@ fn test_from_utf8() {\n \n     let xs = b\"hello\\xFF\".to_vec();\n     let err = String::from_utf8(xs).unwrap_err();\n+    assert_eq!(err.as_bytes(), b\"hello\\xff\");\n+    let err_clone = err.clone();\n+    assert_eq!(err, err_clone);\n     assert_eq!(err.into_bytes(), b\"hello\\xff\".to_vec());\n+    assert_eq!(err_clone.utf8_error().valid_up_to(), 5);\n }\n \n #[test]"}]}