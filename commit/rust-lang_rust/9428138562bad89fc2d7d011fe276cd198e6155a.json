{"sha": "9428138562bad89fc2d7d011fe276cd198e6155a", "node_id": "C_kwDOAAsO6NoAKDk0MjgxMzg1NjJiYWQ4OWZjMmQ3ZDAxMWZlMjc2Y2QxOThlNjE1NWE", "commit": {"author": {"name": "Icxolu", "email": "10486322+Icxolu@users.noreply.github.com", "date": "2023-04-25T18:44:09Z"}, "committer": {"name": "Icxolu", "email": "10486322+Icxolu@users.noreply.github.com", "date": "2023-04-26T19:12:59Z"}, "message": "adds lint to detect construction of unit struct using `default`\n\nUsing `default` to construct a unit struct increases code complexity and\nadds a function call. This can be avoided by simply removing the call to\n`default` and simply construct by name.", "tree": {"sha": "fd779117f0f590547ebf7a0d5f0ad5ee552aaa96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd779117f0f590547ebf7a0d5f0ad5ee552aaa96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9428138562bad89fc2d7d011fe276cd198e6155a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9428138562bad89fc2d7d011fe276cd198e6155a", "html_url": "https://github.com/rust-lang/rust/commit/9428138562bad89fc2d7d011fe276cd198e6155a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9428138562bad89fc2d7d011fe276cd198e6155a/comments", "author": {"login": "Icxolu", "id": 10486322, "node_id": "MDQ6VXNlcjEwNDg2MzIy", "avatar_url": "https://avatars.githubusercontent.com/u/10486322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Icxolu", "html_url": "https://github.com/Icxolu", "followers_url": "https://api.github.com/users/Icxolu/followers", "following_url": "https://api.github.com/users/Icxolu/following{/other_user}", "gists_url": "https://api.github.com/users/Icxolu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Icxolu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Icxolu/subscriptions", "organizations_url": "https://api.github.com/users/Icxolu/orgs", "repos_url": "https://api.github.com/users/Icxolu/repos", "events_url": "https://api.github.com/users/Icxolu/events{/privacy}", "received_events_url": "https://api.github.com/users/Icxolu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Icxolu", "id": 10486322, "node_id": "MDQ6VXNlcjEwNDg2MzIy", "avatar_url": "https://avatars.githubusercontent.com/u/10486322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Icxolu", "html_url": "https://github.com/Icxolu", "followers_url": "https://api.github.com/users/Icxolu/followers", "following_url": "https://api.github.com/users/Icxolu/following{/other_user}", "gists_url": "https://api.github.com/users/Icxolu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Icxolu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Icxolu/subscriptions", "organizations_url": "https://api.github.com/users/Icxolu/orgs", "repos_url": "https://api.github.com/users/Icxolu/repos", "events_url": "https://api.github.com/users/Icxolu/events{/privacy}", "received_events_url": "https://api.github.com/users/Icxolu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "990bbdc2bee264291843497cebe59f307c2ed86f", "url": "https://api.github.com/repos/rust-lang/rust/commits/990bbdc2bee264291843497cebe59f307c2ed86f", "html_url": "https://github.com/rust-lang/rust/commit/990bbdc2bee264291843497cebe59f307c2ed86f"}], "stats": {"total": 170, "additions": 170, "deletions": 0}, "files": [{"sha": "735ac59758a64db2f4ff785d793510a90010fe35", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9428138562bad89fc2d7d011fe276cd198e6155a/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/9428138562bad89fc2d7d011fe276cd198e6155a/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=9428138562bad89fc2d7d011fe276cd198e6155a", "patch": "@@ -4582,6 +4582,7 @@ Released 2018-09-13\n [`debug_assert_with_mut_call`]: https://rust-lang.github.io/rust-clippy/master/index.html#debug_assert_with_mut_call\n [`decimal_literal_representation`]: https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation\n [`declare_interior_mutable_const`]: https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n+[`default_constructed_unit_struct`]: https://rust-lang.github.io/rust-clippy/master/index.html#default_constructed_unit_struct\n [`default_instead_of_iter_empty`]: https://rust-lang.github.io/rust-clippy/master/index.html#default_instead_of_iter_empty\n [`default_numeric_fallback`]: https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback\n [`default_trait_access`]: https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access"}, {"sha": "bf30f5b52f7d2872b75a6f1e69a8b2073b8c685d", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9428138562bad89fc2d7d011fe276cd198e6155a/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9428138562bad89fc2d7d011fe276cd198e6155a/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=9428138562bad89fc2d7d011fe276cd198e6155a", "patch": "@@ -105,6 +105,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::dbg_macro::DBG_MACRO_INFO,\n     crate::default::DEFAULT_TRAIT_ACCESS_INFO,\n     crate::default::FIELD_REASSIGN_WITH_DEFAULT_INFO,\n+    crate::default_constructed_unit_struct::DEFAULT_CONSTRUCTED_UNIT_STRUCT_INFO,\n     crate::default_instead_of_iter_empty::DEFAULT_INSTEAD_OF_ITER_EMPTY_INFO,\n     crate::default_numeric_fallback::DEFAULT_NUMERIC_FALLBACK_INFO,\n     crate::default_union_representation::DEFAULT_UNION_REPRESENTATION_INFO,"}, {"sha": "a04f7b9d9a9fdd6806ef96106e4de2054a96a70d", "filename": "clippy_lints/src/default_constructed_unit_struct.rs", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/9428138562bad89fc2d7d011fe276cd198e6155a/clippy_lints%2Fsrc%2Fdefault_constructed_unit_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9428138562bad89fc2d7d011fe276cd198e6155a/clippy_lints%2Fsrc%2Fdefault_constructed_unit_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_constructed_unit_struct.rs?ref=9428138562bad89fc2d7d011fe276cd198e6155a", "patch": "@@ -0,0 +1,66 @@\n+use clippy_utils::{diagnostics::span_lint_and_sugg, is_from_proc_macro, match_def_path, paths};\n+use hir::{def::Res, ExprKind};\n+use rustc_errors::Applicability;\n+use rustc_hir as hir;\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Check for construction on unit struct using `default`.\n+    ///\n+    /// ### Why is this bad?\n+    /// This adds code complexity and an unnecessary function call.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// #[derive(Default)]\n+    /// struct S<T> {\n+    ///     _marker: PhantomData<T>\n+    /// }\n+    ///\n+    /// let _: S<i32> = S {\n+    ///     _marker: PhantomData::default()\n+    /// };\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// let _: S<i32> = Something {\n+    ///     _marker: PhantomData\n+    /// }\n+    /// ```\n+    #[clippy::version = \"1.71.0\"]\n+    pub DEFAULT_CONSTRUCTED_UNIT_STRUCT,\n+    complexity,\n+    \"unit structs can be contructed without calling `default`\"\n+}\n+declare_lint_pass!(DefaultConstructedUnitStruct => [DEFAULT_CONSTRUCTED_UNIT_STRUCT]);\n+\n+impl LateLintPass<'_> for DefaultConstructedUnitStruct {\n+    fn check_expr<'tcx>(&mut self, cx: &LateContext<'tcx>, expr: &'tcx hir::Expr<'tcx>) {\n+        if_chain!(\n+            // make sure we have a call to `Default::default`\n+            if let hir::ExprKind::Call(fn_expr, &[]) = expr.kind;\n+            if let ExprKind::Path(ref qpath) = fn_expr.kind;\n+            if let Res::Def(_, def_id) = cx.qpath_res(qpath, fn_expr.hir_id);\n+            if match_def_path(cx, def_id, &paths::DEFAULT_TRAIT_METHOD);\n+            // make sure we have a struct with no fields (unit struct)\n+            if let ty::Adt(def, ..) = cx.typeck_results().expr_ty(expr).kind();\n+            if def.is_struct() && def.is_payloadfree()\n+                && !def.non_enum_variant().is_field_list_non_exhaustive()\n+                && !is_from_proc_macro(cx, expr);\n+            then {\n+                span_lint_and_sugg(\n+                    cx,\n+                    DEFAULT_CONSTRUCTED_UNIT_STRUCT,\n+                    qpath.last_segment_span(),\n+                    \"Use of `default` to create a unit struct.\",\n+                    \"remove this call to `default`\",\n+                    String::new(),\n+                    Applicability::MachineApplicable,\n+                )\n+            }\n+        );\n+    }\n+}"}, {"sha": "9af0b17e27bce06b9add348442dce725ef7f2e36", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9428138562bad89fc2d7d011fe276cd198e6155a/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9428138562bad89fc2d7d011fe276cd198e6155a/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=9428138562bad89fc2d7d011fe276cd198e6155a", "patch": "@@ -94,6 +94,7 @@ mod crate_in_macro_def;\n mod create_dir;\n mod dbg_macro;\n mod default;\n+mod default_constructed_unit_struct;\n mod default_instead_of_iter_empty;\n mod default_numeric_fallback;\n mod default_union_representation;\n@@ -970,6 +971,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|_| Box::new(manual_slice_size_calculation::ManualSliceSizeCalculation));\n     store.register_early_pass(|| Box::new(suspicious_doc_comments::SuspiciousDocComments));\n     store.register_late_pass(|_| Box::new(items_after_test_module::ItemsAfterTestModule));\n+    store.register_late_pass(|_| Box::new(default_constructed_unit_struct::DefaultConstructedUnitStruct));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "b64da9b863ac47d6754f9fabb1d405cff63e02a8", "filename": "tests/ui/default_constructed_unit_struct.rs", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/9428138562bad89fc2d7d011fe276cd198e6155a/tests%2Fui%2Fdefault_constructed_unit_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9428138562bad89fc2d7d011fe276cd198e6155a/tests%2Fui%2Fdefault_constructed_unit_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_constructed_unit_struct.rs?ref=9428138562bad89fc2d7d011fe276cd198e6155a", "patch": "@@ -0,0 +1,72 @@\n+#![allow(unused)]\n+#![warn(clippy::default_constructed_unit_struct)]\n+use std::marker::PhantomData;\n+\n+#[derive(Default)]\n+struct UnitStruct;\n+\n+#[derive(Default)]\n+struct TupleStruct(usize);\n+\n+// no lint for derived impl\n+#[derive(Default)]\n+struct NormalStruct {\n+    inner: PhantomData<usize>,\n+}\n+\n+struct NonDefaultStruct;\n+\n+impl NonDefaultStruct {\n+    fn default() -> Self {\n+        Self\n+    }\n+}\n+\n+#[derive(Default)]\n+enum SomeEnum {\n+    #[default]\n+    Unit,\n+    Tuple(UnitStruct),\n+    Struct {\n+        inner: usize,\n+    },\n+}\n+\n+impl NormalStruct {\n+    fn new() -> Self {\n+        // should lint\n+        Self {\n+            inner: PhantomData::default(),\n+        }\n+    }\n+}\n+\n+#[derive(Default)]\n+struct GenericStruct<T> {\n+    t: T,\n+}\n+\n+impl<T: Default> GenericStruct<T> {\n+    fn new() -> Self {\n+        // should not lint\n+        Self { t: T::default() }\n+    }\n+}\n+\n+#[derive(Default)]\n+#[non_exhaustive]\n+struct NonExhaustiveStruct;\n+\n+fn main() {\n+    // should lint\n+    let _ = PhantomData::<usize>::default();\n+    let _: PhantomData<i32> = PhantomData::default();\n+    let _ = UnitStruct::default();\n+\n+    // should not lint\n+    let _ = TupleStruct::default();\n+    let _ = NormalStruct::default();\n+    let _ = NonExhaustiveStruct::default();\n+    let _ = SomeEnum::default();\n+    let _ = NonDefaultStruct::default();\n+}"}, {"sha": "13439414f4a7bafa1e65315f592f81527abad2e6", "filename": "tests/ui/default_constructed_unit_struct.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9428138562bad89fc2d7d011fe276cd198e6155a/tests%2Fui%2Fdefault_constructed_unit_struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9428138562bad89fc2d7d011fe276cd198e6155a/tests%2Fui%2Fdefault_constructed_unit_struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_constructed_unit_struct.stderr?ref=9428138562bad89fc2d7d011fe276cd198e6155a", "patch": "@@ -0,0 +1,28 @@\n+error: Use of `default` to create a unit struct.\n+  --> $DIR/default_constructed_unit_struct.rs:39:33\n+   |\n+LL |             inner: PhantomData::default(),\n+   |                                 ^^^^^^^ help: remove this call to `default`\n+   |\n+   = note: `-D clippy::default-constructed-unit-struct` implied by `-D warnings`\n+\n+error: Use of `default` to create a unit struct.\n+  --> $DIR/default_constructed_unit_struct.rs:62:35\n+   |\n+LL |     let _ = PhantomData::<usize>::default();\n+   |                                   ^^^^^^^ help: remove this call to `default`\n+\n+error: Use of `default` to create a unit struct.\n+  --> $DIR/default_constructed_unit_struct.rs:63:44\n+   |\n+LL |     let _: PhantomData<i32> = PhantomData::default();\n+   |                                            ^^^^^^^ help: remove this call to `default`\n+\n+error: Use of `default` to create a unit struct.\n+  --> $DIR/default_constructed_unit_struct.rs:64:25\n+   |\n+LL |     let _ = UnitStruct::default();\n+   |                         ^^^^^^^ help: remove this call to `default`\n+\n+error: aborting due to 4 previous errors\n+"}]}