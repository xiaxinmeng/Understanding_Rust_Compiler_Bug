{"sha": "b83c2e952c493eaf5e006899fbe80acbcba06988", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4M2MyZTk1MmM0OTNlYWY1ZTAwNjg5OWZiZTgwYWNiY2JhMDY5ODg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-12T12:49:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-12T12:49:01Z"}, "message": "Rollup merge of #71029 - Mark-Simulacrum:cargo-build, r=Mark-Simulacrum\n\nPartial work on building with Cargo\n\nThis cherry picks the commits I'm directly approving from #70999, I want to land them so that that PR is smaller.", "tree": {"sha": "1d94105e51a360afc6f35a83d9f9b521d9943958", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d94105e51a360afc6f35a83d9f9b521d9943958"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b83c2e952c493eaf5e006899fbe80acbcba06988", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJekw4+CRBK7hj4Ov3rIwAAdHIIAHzYjdj7+h3BTGWxWwJNt1lm\nVd4MoJtzKmwRkWDAGzbTTdzcGXGhq1Hl1XM1oe4/FBDvJ2eKEgY45AH0JFAiodfH\nc56HLfASfyoB4u25VHEPxacnKlYqCVoMewsOqxMYQX+PElzJjCWuj7Rmsuql43Md\n9gSnINWozMqV5v7PfQDMqEdG4UW92zEspHlkR8+RIB5HEExYBYOYhxVp3znS/njt\nx7nrVWpu9F82xcHTGQOoEGlHjrnhFDxJrKhWNwJ2o5QXZcUZVVaZ78zzD+r7S7pT\naF5C95P/oSYW8YTYk/C5lVGgho7OFEgslTkuy7ug2L+VwsnCFh+QrgnqdA+pg7Q=\n=5C2D\n-----END PGP SIGNATURE-----\n", "payload": "tree 1d94105e51a360afc6f35a83d9f9b521d9943958\nparent 32fb4dcdd7a57683a639a0959442711d0fd123bc\nparent 1864caaaa4d283143eb5e267e5cb46fa0500434a\nauthor Dylan DPC <dylan.dpc@gmail.com> 1586695741 +0200\ncommitter GitHub <noreply@github.com> 1586695741 +0200\n\nRollup merge of #71029 - Mark-Simulacrum:cargo-build, r=Mark-Simulacrum\n\nPartial work on building with Cargo\n\nThis cherry picks the commits I'm directly approving from #70999, I want to land them so that that PR is smaller.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b83c2e952c493eaf5e006899fbe80acbcba06988", "html_url": "https://github.com/rust-lang/rust/commit/b83c2e952c493eaf5e006899fbe80acbcba06988", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b83c2e952c493eaf5e006899fbe80acbcba06988/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32fb4dcdd7a57683a639a0959442711d0fd123bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/32fb4dcdd7a57683a639a0959442711d0fd123bc", "html_url": "https://github.com/rust-lang/rust/commit/32fb4dcdd7a57683a639a0959442711d0fd123bc"}, {"sha": "1864caaaa4d283143eb5e267e5cb46fa0500434a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1864caaaa4d283143eb5e267e5cb46fa0500434a", "html_url": "https://github.com/rust-lang/rust/commit/1864caaaa4d283143eb5e267e5cb46fa0500434a"}], "stats": {"total": 73, "additions": 42, "deletions": 31}, "files": [{"sha": "73d276d1776489d6200e3b087678500881c15bab", "filename": "Cargo.lock", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -3694,6 +3694,7 @@ dependencies = [\n  \"indexmap\",\n  \"jobserver\",\n  \"lazy_static 1.4.0\",\n+ \"libc\",\n  \"log\",\n  \"measureme\",\n  \"parking_lot 0.10.0\",\n@@ -3713,6 +3714,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"env_logger 0.7.1\",\n  \"lazy_static 1.4.0\",\n+ \"libc\",\n  \"log\",\n  \"rustc_ast\",\n  \"rustc_ast_pretty\",\n@@ -3867,6 +3869,7 @@ dependencies = [\n name = \"rustc_interface\"\n version = \"0.0.0\"\n dependencies = [\n+ \"libc\",\n  \"log\",\n  \"once_cell\",\n  \"rustc-rayon\",\n@@ -3960,6 +3963,7 @@ name = \"rustc_metadata\"\n version = \"0.0.0\"\n dependencies = [\n  \"flate2\",\n+ \"libc\",\n  \"log\",\n  \"memmap\",\n  \"rustc_ast\",\n@@ -4197,6 +4201,7 @@ dependencies = [\n name = \"rustc_session\"\n version = \"0.0.0\"\n dependencies = [\n+ \"getopts\",\n  \"log\",\n  \"num_cpus\",\n  \"rustc_ast\","}, {"sha": "f44096af6dd53bb9c7a314de2f075f54278368e3", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -186,6 +186,8 @@ pub fn std_cargo(builder: &Builder<'_>, target: Interned<String>, cargo: &mut Ca\n     // `compiler-rt` is located.\n     let compiler_builtins_root = builder.src.join(\"src/llvm-project/compiler-rt\");\n     let compiler_builtins_c_feature = if compiler_builtins_root.exists() {\n+        // Note that `libprofiler_builtins/build.rs` also computes this so if\n+        // you're changing something here please also change that.\n         cargo.env(\"RUST_COMPILER_RT_ROOT\", &compiler_builtins_root);\n         \" compiler-builtins-c\".to_string()\n     } else {"}, {"sha": "e23e2f2c1306f6a4caece4226eba825a4b9bbd63", "filename": "src/libprofiler_builtins/build.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibprofiler_builtins%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibprofiler_builtins%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibprofiler_builtins%2Fbuild.rs?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -63,8 +63,9 @@ fn main() {\n         cfg.define(\"COMPILER_RT_HAS_ATOMICS\", Some(\"1\"));\n     }\n \n-    let root = env::var_os(\"RUST_COMPILER_RT_ROOT\").unwrap();\n-    let root = Path::new(&root);\n+    // Note that this should exist if we're going to run (otherwise we just\n+    // don't build profiler builtins at all).\n+    let root = Path::new(\"../llvm-project/compiler-rt\");\n \n     let src_root = root.join(\"lib\").join(\"profile\");\n     for src in profile_sources {"}, {"sha": "6d7022acc7863d54aafbeec27c08725f5f845ba3", "filename": "src/librustc_data_structures/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_data_structures%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_data_structures%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2FCargo.toml?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -27,6 +27,7 @@ smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n rustc_index = { path = \"../librustc_index\", package = \"rustc_index\" }\n bitflags = \"1.2.1\"\n measureme = \"0.7.1\"\n+libc = \"0.2\"\n \n [dependencies.parking_lot]\n version = \"0.10\""}, {"sha": "d0180911567c7e0244ca39954e5eb1d445e350db", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -26,8 +26,6 @@\n \n #[macro_use]\n extern crate log;\n-#[cfg(unix)]\n-extern crate libc;\n #[macro_use]\n extern crate cfg_if;\n "}, {"sha": "cfd103aed3240832e0c2eb83b9da6e0e179a58ee", "filename": "src/librustc_driver/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2FCargo.toml?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -11,6 +11,7 @@ crate-type = [\"dylib\"]\n \n [dependencies]\n lazy_static = \"1.0\"\n+libc = \"0.2\"\n log = \"0.4\"\n env_logger = { version = \"0.7\", default-features = false }\n rustc_middle = { path = \"../librustc_middle\" }"}, {"sha": "0e3199975f9becf3d1a6125f8b5be5440851eb7a", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -8,9 +8,6 @@\n #![feature(nll)]\n #![recursion_limit = \"256\"]\n \n-pub extern crate getopts;\n-#[cfg(unix)]\n-extern crate libc;\n #[macro_use]\n extern crate log;\n #[macro_use]\n@@ -37,6 +34,7 @@ use rustc_save_analysis::DumpHandler;\n use rustc_serialize::json::{self, ToJson};\n use rustc_session::config::nightly_options;\n use rustc_session::config::{ErrorOutputType, Input, OutputType, PrintRequest};\n+use rustc_session::getopts;\n use rustc_session::lint::{Lint, LintId};\n use rustc_session::{config, DiagnosticOutput, Session};\n use rustc_session::{early_error, early_warn};"}, {"sha": "8ea866d7cab5ca76a74ea79da4880a611e7792b1", "filename": "src/librustc_interface/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_interface%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_interface%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2FCargo.toml?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -10,6 +10,7 @@ path = \"lib.rs\"\n doctest = false\n \n [dependencies]\n+libc = \"0.2\"\n log = \"0.4\"\n rayon = { version = \"0.3.0\", package = \"rustc-rayon\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "0650d09003486d620bde8fdee48d3709de8079cc", "filename": "src/librustc_interface/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_interface%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_interface%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Flib.rs?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -6,9 +6,6 @@\n #![feature(generators)]\n #![recursion_limit = \"256\"]\n \n-#[cfg(unix)]\n-extern crate libc;\n-\n mod callbacks;\n pub mod interface;\n mod passes;"}, {"sha": "c75f3b279a258396935b6fd0b17a312bdc972563", "filename": "src/librustc_interface/tests.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_interface%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_interface%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Ftests.rs?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -1,5 +1,3 @@\n-extern crate getopts;\n-\n use crate::interface::parse_cfgspecs;\n \n use rustc_data_structures::fx::FxHashSet;\n@@ -9,6 +7,7 @@ use rustc_session::config::{build_configuration, build_session_options, to_crate\n use rustc_session::config::{rustc_optgroups, ErrorOutputType, ExternLocation, Options, Passes};\n use rustc_session::config::{ExternEntry, LinkerPluginLto, LtoCli, SwitchWithOptPath};\n use rustc_session::config::{Externs, OutputType, OutputTypes, SymbolManglingVersion};\n+use rustc_session::getopts;\n use rustc_session::lint::Level;\n use rustc_session::search_paths::SearchPath;\n use rustc_session::{build_session, Session};"}, {"sha": "f14fc9fc2eba8897fc47462cdf10145f47ae17cb", "filename": "src/librustc_llvm/build.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fbuild.rs?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -24,18 +24,28 @@ fn main() {\n     build_helper::restore_library_path();\n \n     let target = env::var(\"TARGET\").expect(\"TARGET was not set\");\n-    let llvm_config = env::var_os(\"LLVM_CONFIG\").map(PathBuf::from).unwrap_or_else(|| {\n-        if let Some(dir) = env::var_os(\"CARGO_TARGET_DIR\").map(PathBuf::from) {\n-            let to_test =\n-                dir.parent().unwrap().parent().unwrap().join(&target).join(\"llvm/bin/llvm-config\");\n-            if Command::new(&to_test).output().is_ok() {\n-                return to_test;\n+    let llvm_config =\n+        env::var_os(\"LLVM_CONFIG\").map(|x| Some(PathBuf::from(x))).unwrap_or_else(|| {\n+            if let Some(dir) = env::var_os(\"CARGO_TARGET_DIR\").map(PathBuf::from) {\n+                let to_test = dir\n+                    .parent()\n+                    .unwrap()\n+                    .parent()\n+                    .unwrap()\n+                    .join(&target)\n+                    .join(\"llvm/bin/llvm-config\");\n+                if Command::new(&to_test).output().is_ok() {\n+                    return Some(to_test);\n+                }\n             }\n-        }\n-        PathBuf::from(\"llvm-config\")\n-    });\n+            None\n+        });\n+\n+    if let Some(llvm_config) = &llvm_config {\n+        println!(\"cargo:rerun-if-changed={}\", llvm_config.display());\n+    }\n+    let llvm_config = llvm_config.unwrap_or_else(|| PathBuf::from(\"llvm-config\"));\n \n-    println!(\"cargo:rerun-if-changed={}\", llvm_config.display());\n     println!(\"cargo:rerun-if-env-changed=LLVM_CONFIG\");\n \n     // Test whether we're cross-compiling LLVM. This is a pretty rare case"}, {"sha": "b03e884cdaf7ac3f62623820b19619b793ce1fbd", "filename": "src/librustc_metadata/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2FCargo.toml?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -11,6 +11,7 @@ doctest = false\n \n [dependencies]\n flate2 = \"1.0\"\n+libc = \"0.2\"\n log = \"0.4\"\n memmap = \"0.7\"\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "4659be8c195adb84c732cf5d82b06bbdc55df6b8", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -10,7 +10,6 @@\n #![feature(stmt_expr_attributes)]\n #![recursion_limit = \"256\"]\n \n-extern crate libc;\n extern crate proc_macro;\n \n #[macro_use]"}, {"sha": "814073bb4f7be06b202f3825e1be1a3a64675422", "filename": "src/librustc_session/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_session%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_session%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2FCargo.toml?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -9,6 +9,7 @@ name = \"rustc_session\"\n path = \"lib.rs\"\n \n [dependencies]\n+getopts = \"0.2\"\n log = \"0.4\"\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_feature = { path = \"../librustc_feature\" }"}, {"sha": "2ff92c46d12514c7b05d8b94f58a56c1c9200da0", "filename": "src/librustc_session/lib.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_session%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustc_session%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Flib.rs?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -1,10 +1,4 @@\n #![feature(crate_visibility_modifier)]\n-#![feature(test)]\n-\n-// Use the test crate here so we depend on getopts through it. This allow tools to link to both\n-// librustc_session and libtest.\n-extern crate getopts;\n-extern crate test as _;\n \n pub mod cgu_reuse_tracker;\n pub mod utils;\n@@ -23,3 +17,5 @@ mod session;\n pub use session::*;\n \n pub mod output;\n+\n+pub use getopts;"}, {"sha": "a5a1e20396cafd5f79e8fd4d85f0c7dfadf2f02a", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -10,6 +10,7 @@ use rustc_session::config::{\n     nightly_options,\n };\n use rustc_session::config::{CodegenOptions, DebuggingOptions, ErrorOutputType, Externs};\n+use rustc_session::getopts;\n use rustc_session::lint::Level;\n use rustc_session::search_paths::SearchPath;\n use rustc_span::edition::{Edition, DEFAULT_EDITION};"}, {"sha": "b0d5a8e58e1201f84c6ff76f2638b1abf6615008", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -15,7 +15,6 @@\n #![recursion_limit = \"256\"]\n \n extern crate env_logger;\n-extern crate getopts;\n extern crate rustc_ast;\n extern crate rustc_ast_pretty;\n extern crate rustc_attr;\n@@ -51,6 +50,7 @@ use std::panic;\n use std::process;\n \n use rustc_session::config::{make_crate_type_option, ErrorOutputType, RustcOptGroup};\n+use rustc_session::getopts;\n use rustc_session::{early_error, early_warn};\n \n #[macro_use]"}, {"sha": "ceb39c01c6723442d8ff7ec15d8d20c5f9d79644", "filename": "src/libstd/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibstd%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b83c2e952c493eaf5e006899fbe80acbcba06988/src%2Flibstd%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2FCargo.toml?ref=b83c2e952c493eaf5e006899fbe80acbcba06988", "patch": "@@ -47,7 +47,7 @@ hermit-abi = { version = \"0.1.10\", features = ['rustc-dep-of-std'] }\n wasi = { version = \"0.9.0\", features = ['rustc-dep-of-std'], default-features = false }\n \n [features]\n-default = [\"std_detect_file_io\", \"std_detect_dlsym_getauxval\"]\n+default = [\"std_detect_file_io\", \"std_detect_dlsym_getauxval\", \"panic-unwind\"]\n \n backtrace = [\n   \"backtrace_rs/dbghelp\",          # backtrace/symbolize on MSVC"}]}