{"sha": "69ffb4e3aea13b454de5b4e30aa9fd72185c101d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5ZmZiNGUzYWVhMTNiNDU0ZGU1YjRlMzBhYTlmZDcyMTg1YzEwMWQ=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-01-24T05:38:09Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-24T06:28:25Z"}, "message": "s/fn&/fn/", "tree": {"sha": "0b93e0e63fb40e904b6457b8cebbe27b1106d060", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b93e0e63fb40e904b6457b8cebbe27b1106d060"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69ffb4e3aea13b454de5b4e30aa9fd72185c101d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69ffb4e3aea13b454de5b4e30aa9fd72185c101d", "html_url": "https://github.com/rust-lang/rust/commit/69ffb4e3aea13b454de5b4e30aa9fd72185c101d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69ffb4e3aea13b454de5b4e30aa9fd72185c101d/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f4d1f3d27cfe0686602731736188f886a837516", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f4d1f3d27cfe0686602731736188f886a837516", "html_url": "https://github.com/rust-lang/rust/commit/8f4d1f3d27cfe0686602731736188f886a837516"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "fa1aca29efa4c0477af67bfa2adc5310f59b4d73", "filename": "src/libcore/str.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/69ffb4e3aea13b454de5b4e30aa9fd72185c101d/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69ffb4e3aea13b454de5b4e30aa9fd72185c101d/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=69ffb4e3aea13b454de5b4e30aa9fd72185c101d", "patch": "@@ -376,7 +376,7 @@ Iterate over the characters in a string\n \n FIXME: A synonym to iter_chars\n */\n-fn chars_iter(ss: str, it: fn&(char)) {\n+fn chars_iter(ss: str, it: fn(char)) {\n     iter_chars(ss, it)\n }\n \n@@ -387,7 +387,7 @@ Iterate over the bytes in a string\n \n FIXME: Should it really include the last byte '\\0'?\n */\n-fn bytes_iter(ss: str, it: fn&(u8)) {\n+fn bytes_iter(ss: str, it: fn(u8)) {\n     let pos = 0u;\n     let len = byte_len(ss);\n \n@@ -866,7 +866,7 @@ Splits a string into substrings using a function\n \n FIXME: will be renamed to split.\n */\n-fn split_func(ss: str, sepfn: fn&(cc: char)->bool) -> [str] {\n+fn split_func(ss: str, sepfn: fn(cc: char)->bool) -> [str] {\n     let vv: [str] = [];\n     let accum: str = \"\";\n     let ends_with_sep: bool = false;\n@@ -933,7 +933,7 @@ Function: words_iter\n \n Apply a function to each word\n */\n-fn words_iter(ss: str, ff: fn&(&&str)) {\n+fn words_iter(ss: str, ff: fn(&&str)) {\n     vec::iter(words(ss), ff)\n }\n \n@@ -942,7 +942,7 @@ Function: lines_iter\n \n Apply a function to each lines (by '\\n')\n */\n-fn lines_iter(ss: str, ff: fn&(&&str)) {\n+fn lines_iter(ss: str, ff: fn(&&str)) {\n     vec::iter(lines(ss), ff)\n }\n \n@@ -1180,7 +1180,7 @@ if the string contains no characters\n \n // FIXME: a synonym to loop_chars\n */\n-fn all(ss: str, ff: fn&(char) -> bool) -> bool {\n+fn all(ss: str, ff: fn(char) -> bool) -> bool {\n     str::loop_chars(ss, ff)\n }\n \n@@ -1190,7 +1190,7 @@ Function: any\n Return true if a predicate matches any character\n (and false if it matches none or there are no characters)\n */\n-fn any(ss: str, pred: fn&(char) -> bool) -> bool {\n+fn any(ss: str, pred: fn(char) -> bool) -> bool {\n    !all(ss, {|cc| !pred(cc)})\n }\n \n@@ -1199,7 +1199,7 @@ Function: map\n \n Apply a function to each character\n */\n-fn map(ss: str, ff: fn&(char) -> char) -> str {\n+fn map(ss: str, ff: fn(char) -> char) -> str {\n     let result = \"\";\n \n     str::iter_chars(ss, {|cc|"}]}