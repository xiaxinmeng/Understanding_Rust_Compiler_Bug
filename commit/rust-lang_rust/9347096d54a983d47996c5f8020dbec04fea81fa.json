{"sha": "9347096d54a983d47996c5f8020dbec04fea81fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzNDcwOTZkNTRhOTgzZDQ3OTk2YzVmODAyMGRiZWMwNGZlYTgxZmE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-19T16:11:00Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-19T16:11:00Z"}, "message": "Fix getting/setting huge env vars on windows\n\nOn windows, the GetEnvironmentVariable function will return the necessary buffer\nsize if the buffer provided was too small. This case previously fell through the\nchecks inside of fill_utf16_buf_and_decode, tripping an assertion in the `slice`\nmethod.\n\nThis adds an extra case for when the return value is >= the buffer size, in\nwhich case we assume the return value as the new buffer size and try again.\n\nCloses #12376", "tree": {"sha": "894f92aeeb7a183dfbb67d76ce7bc50a4b4eb85b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/894f92aeeb7a183dfbb67d76ce7bc50a4b4eb85b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9347096d54a983d47996c5f8020dbec04fea81fa", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9347096d54a983d47996c5f8020dbec04fea81fa", "html_url": "https://github.com/rust-lang/rust/commit/9347096d54a983d47996c5f8020dbec04fea81fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9347096d54a983d47996c5f8020dbec04fea81fa/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ace204a74548947914d08a7feca694941106175d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ace204a74548947914d08a7feca694941106175d", "html_url": "https://github.com/rust-lang/rust/commit/ace204a74548947914d08a7feca694941106175d"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "458e31fd86f5fd131fe1493011ec79881a6417f3", "filename": "src/libstd/os.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9347096d54a983d47996c5f8020dbec04fea81fa/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9347096d54a983d47996c5f8020dbec04fea81fa/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=9347096d54a983d47996c5f8020dbec04fea81fa", "patch": "@@ -113,13 +113,15 @@ pub mod win32 {\n             let mut done = false;\n             while !done {\n                 let mut buf = vec::from_elem(n as uint, 0u16);\n-                let k = f(buf.as_mut_ptr(), TMPBUF_SZ as DWORD);\n+                let k = f(buf.as_mut_ptr(), n);\n                 if k == (0 as DWORD) {\n                     done = true;\n                 } else if k == n &&\n                           libc::GetLastError() ==\n                           libc::ERROR_INSUFFICIENT_BUFFER as DWORD {\n                     n *= (2 as DWORD);\n+                } else if k >= n {\n+                    n = k;\n                 } else {\n                     done = true;\n                 }\n@@ -1494,6 +1496,16 @@ mod tests {\n         }\n     }\n \n+    #[test]\n+    fn test_env_set_get_huge() {\n+        let n = make_rand_name();\n+        let s = \"x\".repeat(10000);\n+        setenv(n, s);\n+        assert_eq!(getenv(n), Some(s));\n+        unsetenv(n);\n+        assert_eq!(getenv(n), None);\n+    }\n+\n     #[test]\n     fn test_env_setenv() {\n         let n = make_rand_name();"}]}