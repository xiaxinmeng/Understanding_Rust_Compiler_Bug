{"sha": "f2e547d5879eb26883e520319347795cbc84f0f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZTU0N2Q1ODc5ZWIyNjg4M2U1MjAzMTkzNDc3OTVjYmM4NGYwZjk=", "commit": {"author": {"name": "Irina Shestak", "email": "shestak.irina@gmail.com", "date": "2021-08-01T18:46:23Z"}, "committer": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-08T14:24:54Z"}, "message": "impl Debug def from trait", "tree": {"sha": "de40089430ac778b488c5f7f7017b90ab08c668b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de40089430ac778b488c5f7f7017b90ab08c668b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2e547d5879eb26883e520319347795cbc84f0f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2e547d5879eb26883e520319347795cbc84f0f9", "html_url": "https://github.com/rust-lang/rust/commit/f2e547d5879eb26883e520319347795cbc84f0f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2e547d5879eb26883e520319347795cbc84f0f9/comments", "author": {"login": "lrlna", "id": 8107784, "node_id": "MDQ6VXNlcjgxMDc3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8107784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrlna", "html_url": "https://github.com/lrlna", "followers_url": "https://api.github.com/users/lrlna/followers", "following_url": "https://api.github.com/users/lrlna/following{/other_user}", "gists_url": "https://api.github.com/users/lrlna/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrlna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrlna/subscriptions", "organizations_url": "https://api.github.com/users/lrlna/orgs", "repos_url": "https://api.github.com/users/lrlna/repos", "events_url": "https://api.github.com/users/lrlna/events{/privacy}", "received_events_url": "https://api.github.com/users/lrlna/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ea07fc26f2f92959b792b903a3719425a4d1a19", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ea07fc26f2f92959b792b903a3719425a4d1a19", "html_url": "https://github.com/rust-lang/rust/commit/6ea07fc26f2f92959b792b903a3719425a4d1a19"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "761ccff85169e7d2ce9e2ea746aba4070b2d1413", "filename": "crates/ide_assists/src/handlers/replace_derive_with_manual_impl.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f2e547d5879eb26883e520319347795cbc84f0f9/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2e547d5879eb26883e520319347795cbc84f0f9/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs?ref=f2e547d5879eb26883e520319347795cbc84f0f9", "patch": "@@ -2,6 +2,9 @@ use hir::ModuleDef;\n use ide_db::helpers::{import_assets::NameToImport, mod_path_to_ast};\n use ide_db::items_locator;\n use itertools::Itertools;\n+use syntax::ast::edit::AstNodeEdit;\n+use syntax::ast::Pat;\n+use syntax::ted;\n use syntax::{\n     ast::{self, make, AstNode, NameOwner},\n     SyntaxKind::{IDENT, WHITESPACE},\n@@ -127,6 +130,9 @@ fn add_assist(\n                     let mut cursor = Cursor::Before(first_assoc_item.syntax());\n                     let placeholder;\n                     if let ast::AssocItem::Fn(ref func) = first_assoc_item {\n+                        // need to know what kind of derive this is: if it's Derive Debug, special case it.\n+                        // the name of the struct\n+                        // list of fields of the struct\n                         if let Some(m) = func.syntax().descendants().find_map(ast::MacroCall::cast)\n                         {\n                             if m.syntax().text() == \"todo!()\" {\n@@ -163,6 +169,22 @@ fn impl_def_from_trait(\n         make::impl_trait(trait_path.clone(), make::ext::ident_path(&annotated_name.text()));\n     let (impl_def, first_assoc_item) =\n         add_trait_assoc_items_to_impl(sema, trait_items, trait_, impl_def, target_scope);\n+    if let ast::AssocItem::Fn(fn_) = &first_assoc_item {\n+        if trait_path.segment().unwrap().name_ref().unwrap().text() == \"Debug\" {\n+            let f_expr = make::expr_path(make::ext::ident_path(\"f\"));\n+            let args = make::arg_list(Some(make::expr_path(make::ext::ident_path(\n+                annotated_name.text().as_str(),\n+            ))));\n+            let body =\n+                make::block_expr(None, Some(make::expr_method_call(f_expr, \"debug_struct\", args)))\n+                    .indent(ast::edit::IndentLevel(1));\n+\n+            ted::replace(\n+                fn_.body().unwrap().tail_expr().unwrap().syntax(),\n+                body.clone_for_update().syntax(),\n+            );\n+        }\n+    }\n     Some((impl_def, first_assoc_item))\n }\n \n@@ -240,8 +262,8 @@ struct Foo {\n }\n \n impl fmt::Debug for Foo {\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        ${0:todo!()}\n+    $0fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.debug_struct(\"Foo\").field(\"bar\", &self.bar).finish()\n     }\n }\n \"#,"}]}