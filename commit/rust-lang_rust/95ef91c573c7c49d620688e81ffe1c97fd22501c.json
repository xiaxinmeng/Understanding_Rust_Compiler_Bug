{"sha": "95ef91c573c7c49d620688e81ffe1c97fd22501c", "node_id": "C_kwDOAAsO6NoAKDk1ZWY5MWM1NzNjN2M0OWQ2MjA2ODhlODFmZmUxYzk3ZmQyMjUwMWM", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-03-23T21:25:43Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-03-23T21:25:43Z"}, "message": "rustdoc: remove old `content` hack for theme switching\n\nThis is based on the compatibility data for `window.matchMedia` and\n`MediaQueryList`'s `EventTarget` implementation.\n\nhttps://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList#browser_compatibility\n\nhttps://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia#browser_compatibility\n\n  * EventTarget would require us to drop support for all Chrome\n    versions before 39. However, we already require Chrome 49,\n    because rustdoc requires [CSS variables].\n  * EventTarget would also limit us to Firefox 55, but since #106502\n    rustdoc only supports Firefox > 68.\n  * EventTarget limits us to Mobile Safari version 14, but #102404\n    shows that our CSS is broken in Safari versions before 15.5.\n\n[CSS variables]: https://developer.mozilla.org/en-US/docs/Web/CSS/--*#browser_compatibility", "tree": {"sha": "3bd59236f646ff7de038778cf837c8d26f961ee0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bd59236f646ff7de038778cf837c8d26f961ee0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95ef91c573c7c49d620688e81ffe1c97fd22501c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95ef91c573c7c49d620688e81ffe1c97fd22501c", "html_url": "https://github.com/rust-lang/rust/commit/95ef91c573c7c49d620688e81ffe1c97fd22501c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95ef91c573c7c49d620688e81ffe1c97fd22501c/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba3d6055adf0a93800d79ea2281222df81b44b59", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba3d6055adf0a93800d79ea2281222df81b44b59", "html_url": "https://github.com/rust-lang/rust/commit/ba3d6055adf0a93800d79ea2281222df81b44b59"}], "stats": {"total": 52, "additions": 5, "deletions": 47}, "files": [{"sha": "933a44c5aa78d77f46dcef4def1f7827eb2fcdae", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/95ef91c573c7c49d620688e81ffe1c97fd22501c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/95ef91c573c7c49d620688e81ffe1c97fd22501c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=95ef91c573c7c49d620688e81ffe1c97fd22501c", "patch": "@@ -87,21 +87,6 @@\n \tbox-sizing: border-box;\n }\n \n-/* This part handles the \"default\" theme being used depending on the system one. */\n-html {\n-\tcontent: \"\";\n-}\n-@media (prefers-color-scheme: light) {\n-\thtml {\n-\t\tcontent: \"light\";\n-\t}\n-}\n-@media (prefers-color-scheme: dark) {\n-\thtml {\n-\t\tcontent: \"dark\";\n-\t}\n-}\n-\n /* General structure and fonts */\n \n body {"}, {"sha": "8d82b5b78edbbee8dc5ee57e39fbe674e718b2ee", "filename": "src/librustdoc/html/static/js/storage.js", "status": "modified", "additions": 5, "deletions": 32, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/95ef91c573c7c49d620688e81ffe1c97fd22501c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/95ef91c573c7c49d620688e81ffe1c97fd22501c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js?ref=95ef91c573c7c49d620688e81ffe1c97fd22501c", "patch": "@@ -137,6 +137,9 @@ function switchTheme(newThemeName, saveTheme) {\n }\n \n const updateTheme = (function() {\n+    // only listen to (prefers-color-scheme: dark) because light is the default\n+    const mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n+\n     /**\n      * Update the current theme to match whatever the current combination of\n      * * the preference for using the system theme\n@@ -156,7 +159,7 @@ const updateTheme = (function() {\n             const lightTheme = getSettingValue(\"preferred-light-theme\") || \"light\";\n             const darkTheme = getSettingValue(\"preferred-dark-theme\") || \"dark\";\n \n-            if (isDarkMode()) {\n+            if (mql.matches) {\n                 use(darkTheme, true);\n             } else {\n                 // prefers a light theme, or has no preference\n@@ -170,37 +173,7 @@ const updateTheme = (function() {\n         }\n     }\n \n-    // This is always updated below to a function () => bool.\n-    let isDarkMode;\n-\n-    // Determine the function for isDarkMode, and if we have\n-    // `window.matchMedia`, set up an event listener on the preferred color\n-    // scheme.\n-    //\n-    // Otherwise, fall back to the prefers-color-scheme value CSS captured in\n-    // the \"content\" property.\n-    if (window.matchMedia) {\n-        // only listen to (prefers-color-scheme: dark) because light is the default\n-        const mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n-\n-        isDarkMode = () => mql.matches;\n-\n-        if (mql.addEventListener) {\n-            mql.addEventListener(\"change\", updateTheme);\n-        } else {\n-            // This is deprecated, see:\n-            // https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/addListener\n-            mql.addListener(updateTheme);\n-        }\n-    } else {\n-        // fallback to the CSS computed value\n-        const cssContent = getComputedStyle(document.documentElement)\n-            .getPropertyValue(\"content\");\n-        // (Note: the double-quotes come from that this is a CSS value, which\n-        // might be a length, string, etc.)\n-        const cssColorScheme = cssContent || \"\\\"light\\\"\";\n-        isDarkMode = () => (cssColorScheme === \"\\\"dark\\\"\");\n-    }\n+    mql.addEventListener(\"change\", updateTheme);\n \n     return updateTheme;\n })();"}]}