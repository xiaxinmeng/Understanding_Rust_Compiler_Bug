{"sha": "e5e4cccd3b95783da49cf74116f57d0b0851f719", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZTRjY2NkM2I5NTc4M2RhNDljZjc0MTE2ZjU3ZDBiMDg1MWY3MTk=", "commit": {"author": {"name": "Shantanu Raj", "email": "s@sraj.me", "date": "2016-08-04T02:01:06Z"}, "committer": {"name": "Shantanu Raj", "email": "s@sraj.me", "date": "2016-08-04T02:01:06Z"}, "message": "Update wording on E0080\n\nChange \"attempted\" to \"attempt\"", "tree": {"sha": "575ea7eb690e56e5eac0f0f75db0ba2f6d653128", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/575ea7eb690e56e5eac0f0f75db0ba2f6d653128"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5e4cccd3b95783da49cf74116f57d0b0851f719", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5e4cccd3b95783da49cf74116f57d0b0851f719", "html_url": "https://github.com/rust-lang/rust/commit/e5e4cccd3b95783da49cf74116f57d0b0851f719", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5e4cccd3b95783da49cf74116f57d0b0851f719/comments", "author": {"login": "shantanuraj", "id": 1716853, "node_id": "MDQ6VXNlcjE3MTY4NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1716853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shantanuraj", "html_url": "https://github.com/shantanuraj", "followers_url": "https://api.github.com/users/shantanuraj/followers", "following_url": "https://api.github.com/users/shantanuraj/following{/other_user}", "gists_url": "https://api.github.com/users/shantanuraj/gists{/gist_id}", "starred_url": "https://api.github.com/users/shantanuraj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shantanuraj/subscriptions", "organizations_url": "https://api.github.com/users/shantanuraj/orgs", "repos_url": "https://api.github.com/users/shantanuraj/repos", "events_url": "https://api.github.com/users/shantanuraj/events{/privacy}", "received_events_url": "https://api.github.com/users/shantanuraj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shantanuraj", "id": 1716853, "node_id": "MDQ6VXNlcjE3MTY4NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1716853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shantanuraj", "html_url": "https://github.com/shantanuraj", "followers_url": "https://api.github.com/users/shantanuraj/followers", "following_url": "https://api.github.com/users/shantanuraj/following{/other_user}", "gists_url": "https://api.github.com/users/shantanuraj/gists{/gist_id}", "starred_url": "https://api.github.com/users/shantanuraj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shantanuraj/subscriptions", "organizations_url": "https://api.github.com/users/shantanuraj/orgs", "repos_url": "https://api.github.com/users/shantanuraj/repos", "events_url": "https://api.github.com/users/shantanuraj/events{/privacy}", "received_events_url": "https://api.github.com/users/shantanuraj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cf189701e0a8caacbf106e5bfebfa302570bb81", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cf189701e0a8caacbf106e5bfebfa302570bb81", "html_url": "https://github.com/rust-lang/rust/commit/9cf189701e0a8caacbf106e5bfebfa302570bb81"}], "stats": {"total": 210, "additions": 105, "deletions": 105}, "files": [{"sha": "74e2c90503cd37fd66477a45e7f024eb485e2480", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -23,7 +23,7 @@ code example:\n #[deny(const_err)]\n \n const X: i32 = 42 / 0;\n-// error: attempted to divide by zero in a constant expression\n+// error: attempt to divide by zero in a constant expression\n ```\n \"##,\n "}, {"sha": "e2e30ef026c2fd81f255071216e819c665633a43", "filename": "src/librustc_const_math/err.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Flibrustc_const_math%2Ferr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Flibrustc_const_math%2Ferr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_math%2Ferr.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -57,18 +57,18 @@ impl ConstMathErr {\n             UnequalTypes(BitOr) => \"tried to bitor two values of different types\",\n             UnequalTypes(BitXor) => \"tried to xor two values of different types\",\n             UnequalTypes(_) => unreachable!(),\n-            Overflow(Add) => \"attempted to add with overflow\",\n-            Overflow(Sub) => \"attempted to subtract with overflow\",\n-            Overflow(Mul) => \"attempted to multiply with overflow\",\n-            Overflow(Div) => \"attempted to divide with overflow\",\n-            Overflow(Rem) => \"attempted to calculate the remainder with overflow\",\n-            Overflow(Neg) => \"attempted to negate with overflow\",\n-            Overflow(Shr) => \"attempted to shift right with overflow\",\n-            Overflow(Shl) => \"attempted to shift left with overflow\",\n+            Overflow(Add) => \"attempt to add with overflow\",\n+            Overflow(Sub) => \"attempt to subtract with overflow\",\n+            Overflow(Mul) => \"attempt to multiply with overflow\",\n+            Overflow(Div) => \"attempt to divide with overflow\",\n+            Overflow(Rem) => \"attempt to calculate the remainder with overflow\",\n+            Overflow(Neg) => \"attempt to negate with overflow\",\n+            Overflow(Shr) => \"attempt to shift right with overflow\",\n+            Overflow(Shl) => \"attempt to shift left with overflow\",\n             Overflow(_) => unreachable!(),\n-            ShiftNegative => \"attempted to shift by a negative amount\",\n-            DivisionByZero => \"attempted to divide by zero\",\n-            RemainderByZero => \"attempted to calculate the remainder with a divisor of zero\",\n+            ShiftNegative => \"attempt to shift by a negative amount\",\n+            DivisionByZero => \"attempt to divide by zero\",\n+            RemainderByZero => \"attempt to calculate the remainder with a divisor of zero\",\n             UnsignedNegation => \"unary negation of unsigned integer\",\n             ULitOutOfRange(ast::UintTy::U8) => \"literal out of range for u8\",\n             ULitOutOfRange(ast::UintTy::U16) => \"literal out of range for u16\","}, {"sha": "2a60dd17446717eae78d1a971c48dc81e6ee541a", "filename": "src/librustc_trans/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Flibrustc_trans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Flibrustc_trans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fexpr.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -1512,7 +1512,7 @@ fn trans_unary<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n                                           C_integral(llty, min, true), debug_loc);\n                         with_cond(bcx, is_min, |bcx| {\n                             let msg = InternedString::new(\n-                                \"attempted to negate with overflow\");\n+                                \"attempt to negate with overflow\");\n                             controlflow::trans_fail(bcx, expr_info(expr), msg)\n                         })\n                     } else {"}, {"sha": "42fb40394fb298bf7c19bb067019e5d8db716adb", "filename": "src/test/compile-fail/const-err-early.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-err-early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-err-early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err-early.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -11,10 +11,10 @@\n #![feature(const_indexing)]\n #![deny(const_err)]\n \n-pub const A: i8 = -std::i8::MIN; //~ ERROR attempted to negate with overflow\n-pub const B: u8 = 200u8 + 200u8; //~ ERROR attempted to add with overflow\n-pub const C: u8 = 200u8 * 4; //~ ERROR attempted to multiply with overflow\n-pub const D: u8 = 42u8 - (42u8 + 1); //~ ERROR attempted to subtract with overflow\n+pub const A: i8 = -std::i8::MIN; //~ ERROR attempt to negate with overflow\n+pub const B: u8 = 200u8 + 200u8; //~ ERROR attempt to add with overflow\n+pub const C: u8 = 200u8 * 4; //~ ERROR attempt to multiply with overflow\n+pub const D: u8 = 42u8 - (42u8 + 1); //~ ERROR attempt to subtract with overflow\n pub const E: u8 = [5u8][1];\n //~^ ERROR index out of bounds: the len is 1 but the index is 1\n "}, {"sha": "d4f9c0fe56dae4645af8f37e178cfad831ca2a87", "filename": "src/test/compile-fail/const-err-multi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-err-multi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-err-multi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err-multi.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n #![deny(const_err)]\n \n-pub const A: i8 = -std::i8::MIN; //~ ERROR attempted to negate with overflow\n+pub const A: i8 = -std::i8::MIN; //~ ERROR attempt to negate with overflow\n pub const B: i8 = A;\n pub const C: u8 = A as u8;\n pub const D: i8 = 50 - A;"}, {"sha": "944e458c4c0f03db09a25a11c2e5e3565e45b398", "filename": "src/test/compile-fail/const-err.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -30,18 +30,18 @@ const FOO: u8 = [5u8][1];\n fn main() {\n     let a = -std::i8::MIN;\n     //~^ WARN this expression will panic at run-time\n-    //~| attempted to negate with overflow\n+    //~| attempt to negate with overflow\n     let b = 200u8 + 200u8 + 200u8;\n     //~^ WARN this expression will panic at run-time\n-    //~| attempted to add with overflow\n+    //~| attempt to add with overflow\n     //~^^^ WARN this expression will panic at run-time\n-    //~| attempted to add with overflow\n+    //~| attempt to add with overflow\n     let c = 200u8 * 4;\n     //~^ WARN this expression will panic at run-time\n-    //~| attempted to multiply with overflow\n+    //~| attempt to multiply with overflow\n     let d = 42u8 - (42u8 + 1);\n     //~^ WARN this expression will panic at run-time\n-    //~| attempted to subtract with overflow\n+    //~| attempt to subtract with overflow\n     let _e = [5u8][1];\n     //~^ WARN this expression will panic at run-time\n     //~| index out of bounds: the len is 1 but the index is 1"}, {"sha": "7c1fb2ccd47297594b53f62bb6a6e3c270067d00", "filename": "src/test/compile-fail/const-err2.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-err2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-err2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err2.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -18,14 +18,14 @@ fn black_box<T>(_: T) {\n \n fn main() {\n     let a = -std::i8::MIN;\n-    //~^ ERROR attempted to negate with overflow\n+    //~^ ERROR attempt to negate with overflow\n     let b = 200u8 + 200u8 + 200u8;\n-    //~^ ERROR attempted to add with overflow\n-    //~| ERROR attempted to add with overflow\n+    //~^ ERROR attempt to add with overflow\n+    //~| ERROR attempt to add with overflow\n     let c = 200u8 * 4;\n-    //~^ ERROR attempted to multiply with overflow\n+    //~^ ERROR attempt to multiply with overflow\n     let d = 42u8 - (42u8 + 1);\n-    //~^ ERROR attempted to subtract with overflow\n+    //~^ ERROR attempt to subtract with overflow\n     let _e = [5u8][1];\n     black_box(a);\n     black_box(b);"}, {"sha": "264f02588ae5dbca1636c2d27a8ab91ddfa1df51", "filename": "src/test/compile-fail/const-eval-overflow-2.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow-2.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -20,11 +20,11 @@ use std::{u8, u16, u32, u64, usize};\n const NEG_128: i8 = -128;\n const NEG_NEG_128: i8 = -NEG_128;\n //~^ ERROR constant evaluation error\n-//~| attempted to negate with overflow\n+//~| attempt to negate with overflow\n //~| ERROR constant evaluation error\n-//~| attempted to negate with overflow\n+//~| attempt to negate with overflow\n //~| ERROR constant evaluation error\n-//~| attempted to negate with overflow\n+//~| attempt to negate with overflow\n \n fn main() {\n     match -128i8 {"}, {"sha": "d930cb770472ffc64c9b1ead3459effc3a2732d3", "filename": "src/test/compile-fail/const-eval-overflow-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow-3.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -17,7 +17,7 @@\n // self-hosted and a cross-compiled setup; therefore resorting to\n // error-pattern for now.\n \n-// error-pattern: attempted to add with overflow\n+// error-pattern: attempt to add with overflow\n \n #![allow(unused_imports)]\n "}, {"sha": "67525fc16261b252f7aa679ba3c1f2ce76f06221", "filename": "src/test/compile-fail/const-eval-overflow-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow-4.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -23,7 +23,7 @@ use std::{u8, u16, u32, u64, usize};\n \n const A_I8_T\n     : [u32; (i8::MAX as i8 + 1i8) as usize]\n-    //~^ ERROR error evaluating count: attempted to add with overflow\n+    //~^ ERROR error evaluating count: attempt to add with overflow\n     = [0; (i8::MAX as usize) + 1];\n \n fn main() {"}, {"sha": "b8f3f714a84ec89811235ddbcfaee993cb608f26", "filename": "src/test/compile-fail/const-eval-overflow.rs", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -22,113 +22,113 @@ use std::{u8, u16, u32, u64, usize};\n const VALS_I8: (i8, i8, i8, i8) =\n     (-i8::MIN,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to negate with overflow\n+     //~| attempt to negate with overflow\n      i8::MIN - 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to subtract with overflow\n+     //~| attempt to subtract with overflow\n      i8::MAX + 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to add with overflow\n+     //~| attempt to add with overflow\n      i8::MIN * 2,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to multiply with overflow\n+     //~| attempt to multiply with overflow\n      );\n \n const VALS_I16: (i16, i16, i16, i16) =\n     (-i16::MIN,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to negate with overflow\n+     //~| attempt to negate with overflow\n      i16::MIN - 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to subtract with overflow\n+     //~| attempt to subtract with overflow\n      i16::MAX + 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to add with overflow\n+     //~| attempt to add with overflow\n      i16::MIN * 2,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to multiply with overflow\n+     //~| attempt to multiply with overflow\n      );\n \n const VALS_I32: (i32, i32, i32, i32) =\n     (-i32::MIN,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to negate with overflow\n+     //~| attempt to negate with overflow\n      i32::MIN - 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to subtract with overflow\n+     //~| attempt to subtract with overflow\n      i32::MAX + 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to add with overflow\n+     //~| attempt to add with overflow\n      i32::MIN * 2,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to multiply with overflow\n+     //~| attempt to multiply with overflow\n      );\n \n const VALS_I64: (i64, i64, i64, i64) =\n     (-i64::MIN,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to negate with overflow\n+     //~| attempt to negate with overflow\n      i64::MIN - 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to subtract with overflow\n+     //~| attempt to subtract with overflow\n      i64::MAX + 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to add with overflow\n+     //~| attempt to add with overflow\n      i64::MAX * 2,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to multiply with overflow\n+     //~| attempt to multiply with overflow\n      );\n \n const VALS_U8: (u8, u8, u8, u8) =\n     (-(u8::MIN as i8) as u8,\n      u8::MIN - 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to subtract with overflow\n+     //~| attempt to subtract with overflow\n      u8::MAX + 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to add with overflow\n+     //~| attempt to add with overflow\n      u8::MAX * 2,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to multiply with overflow\n+     //~| attempt to multiply with overflow\n      );\n \n const VALS_U16: (u16, u16, u16, u16) =\n     (-(u16::MIN as i16) as u16,\n      u16::MIN - 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to subtract with overflow\n+     //~| attempt to subtract with overflow\n      u16::MAX + 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to add with overflow\n+     //~| attempt to add with overflow\n      u16::MAX * 2,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to multiply with overflow\n+     //~| attempt to multiply with overflow\n      );\n \n const VALS_U32: (u32, u32, u32, u32) =\n     (-(u32::MIN as i32) as u32,\n      u32::MIN - 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to subtract with overflow\n+     //~| attempt to subtract with overflow\n      u32::MAX + 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to add with overflow\n+     //~| attempt to add with overflow\n      u32::MAX * 2,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to multiply with overflow\n+     //~| attempt to multiply with overflow\n      );\n \n const VALS_U64: (u64, u64, u64, u64) =\n     (-(u64::MIN as i64) as u64,\n      u64::MIN - 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to subtract with overflow\n+     //~| attempt to subtract with overflow\n      u64::MAX + 1,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to add with overflow\n+     //~| attempt to add with overflow\n      u64::MAX * 2,\n      //~^ ERROR constant evaluation error\n-     //~| attempted to multiply with overflow\n+     //~| attempt to multiply with overflow\n      );\n \n fn main() {"}, {"sha": "c01bb82676304f1581af586d85520b13a977861c", "filename": "src/test/compile-fail/const-len-underflow-separate-spans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-len-underflow-separate-spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-len-underflow-separate-spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-len-underflow-separate-spans.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -16,7 +16,7 @@ const ONE: usize = 1;\n const TWO: usize = 2;\n const LEN: usize = ONE - TWO;\n //~^ ERROR E0080\n-//~| attempted to subtract with overflow\n+//~| attempt to subtract with overflow\n \n fn main() {\n     let a: [i8; LEN] = unimplemented!();"}, {"sha": "7f2229b5a6534c868910d7c42e834bd6f16337de", "filename": "src/test/compile-fail/const-len-underflow-subspans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-len-underflow-subspans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-len-underflow-subspans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-len-underflow-subspans.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -17,5 +17,5 @@ const TWO: usize = 2;\n fn main() {\n     let a: [i8; ONE - TWO] = unimplemented!();\n     //~^ ERROR constant evaluation error [E0080]\n-    //~| attempted to subtract with overflow\n+    //~| attempt to subtract with overflow\n }"}, {"sha": "8f7ec9de58af2bda03ee30398d18c8893cbfc6b5", "filename": "src/test/compile-fail/const-tup-index-span.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-tup-index-span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fconst-tup-index-span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-tup-index-span.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -12,7 +12,7 @@\n \n const TUP: (usize,) = 5 << 64;\n //~^ ERROR E0080\n-//~| attempted to shift left with overflow\n+//~| attempt to shift left with overflow\n const ARR: [i32; TUP.0] = [];\n \n fn main() {"}, {"sha": "86cc2c144ac07dd2a0169d5abdd69f0a742b336e", "filename": "src/test/compile-fail/eval-enum.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Feval-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Feval-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Feval-enum.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,10 +10,10 @@\n \n enum test {\n     div_zero = 1/0, //~ ERROR E0080\n-                    //~| attempted to divide by zero\n+                    //~| attempt to divide by zero\n     rem_zero = 1%0,\n     //~^ ERROR E0080\n-    //~| attempted to calculate the remainder with a divisor of zero\n+    //~| attempt to calculate the remainder with a divisor of zero\n }\n \n fn main() {}"}, {"sha": "d8ab48d1ec3e688cde39fe4a08c0592475764574", "filename": "src/test/compile-fail/issue-8460-const.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fissue-8460-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Fissue-8460-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-8460-const.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -15,43 +15,43 @@ use std::thread;\n \n fn main() {\n     assert!(thread::spawn(move|| { isize::MIN / -1; }).join().is_err());\n-    //~^ ERROR attempted to divide with overflow\n+    //~^ ERROR attempt to divide with overflow\n     assert!(thread::spawn(move|| { i8::MIN / -1; }).join().is_err());\n-    //~^ ERROR attempted to divide with overflow\n+    //~^ ERROR attempt to divide with overflow\n     assert!(thread::spawn(move|| { i16::MIN / -1; }).join().is_err());\n-    //~^ ERROR attempted to divide with overflow\n+    //~^ ERROR attempt to divide with overflow\n     assert!(thread::spawn(move|| { i32::MIN / -1; }).join().is_err());\n-    //~^ ERROR attempted to divide with overflow\n+    //~^ ERROR attempt to divide with overflow\n     assert!(thread::spawn(move|| { i64::MIN / -1; }).join().is_err());\n-    //~^ ERROR attempted to divide with overflow\n+    //~^ ERROR attempt to divide with overflow\n     assert!(thread::spawn(move|| { 1isize / 0; }).join().is_err());\n-    //~^ ERROR attempted to divide by zero\n+    //~^ ERROR attempt to divide by zero\n     assert!(thread::spawn(move|| { 1i8 / 0; }).join().is_err());\n-    //~^ ERROR attempted to divide by zero\n+    //~^ ERROR attempt to divide by zero\n     assert!(thread::spawn(move|| { 1i16 / 0; }).join().is_err());\n-    //~^ ERROR attempted to divide by zero\n+    //~^ ERROR attempt to divide by zero\n     assert!(thread::spawn(move|| { 1i32 / 0; }).join().is_err());\n-    //~^ ERROR attempted to divide by zero\n+    //~^ ERROR attempt to divide by zero\n     assert!(thread::spawn(move|| { 1i64 / 0; }).join().is_err());\n-    //~^ ERROR attempted to divide by zero\n+    //~^ ERROR attempt to divide by zero\n     assert!(thread::spawn(move|| { isize::MIN % -1; }).join().is_err());\n-    //~^ ERROR attempted to calculate the remainder with overflow\n+    //~^ ERROR attempt to calculate the remainder with overflow\n     assert!(thread::spawn(move|| { i8::MIN % -1; }).join().is_err());\n-    //~^ ERROR attempted to calculate the remainder with overflow\n+    //~^ ERROR attempt to calculate the remainder with overflow\n     assert!(thread::spawn(move|| { i16::MIN % -1; }).join().is_err());\n-    //~^ ERROR attempted to calculate the remainder with overflow\n+    //~^ ERROR attempt to calculate the remainder with overflow\n     assert!(thread::spawn(move|| { i32::MIN % -1; }).join().is_err());\n-    //~^ ERROR attempted to calculate the remainder with overflow\n+    //~^ ERROR attempt to calculate the remainder with overflow\n     assert!(thread::spawn(move|| { i64::MIN % -1; }).join().is_err());\n-    //~^ ERROR attempted to calculate the remainder with overflow\n+    //~^ ERROR attempt to calculate the remainder with overflow\n     assert!(thread::spawn(move|| { 1isize % 0; }).join().is_err());\n-    //~^ ERROR attempted to calculate the remainder with a divisor of zero\n+    //~^ ERROR attempt to calculate the remainder with a divisor of zero\n     assert!(thread::spawn(move|| { 1i8 % 0; }).join().is_err());\n-    //~^ ERROR attempted to calculate the remainder with a divisor of zero\n+    //~^ ERROR attempt to calculate the remainder with a divisor of zero\n     assert!(thread::spawn(move|| { 1i16 % 0; }).join().is_err());\n-    //~^ ERROR attempted to calculate the remainder with a divisor of zero\n+    //~^ ERROR attempt to calculate the remainder with a divisor of zero\n     assert!(thread::spawn(move|| { 1i32 % 0; }).join().is_err());\n-    //~^ ERROR attempted to calculate the remainder with a divisor of zero\n+    //~^ ERROR attempt to calculate the remainder with a divisor of zero\n     assert!(thread::spawn(move|| { 1i64 % 0; }).join().is_err());\n-    //~^ ERROR attempted to calculate the remainder with a divisor of zero\n+    //~^ ERROR attempt to calculate the remainder with a divisor of zero\n }"}, {"sha": "3e51550d1fa07bc336bcb1da6f19545643e0674b", "filename": "src/test/compile-fail/lint-exceeding-bitshifts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Flint-exceeding-bitshifts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Flint-exceeding-bitshifts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-exceeding-bitshifts.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -53,7 +53,7 @@ fn main() {\n       let n = n << 8; //~ ERROR: bitshift exceeds the type's number of bits\n \n       let n = 1u8 << -8; //~ ERROR: bitshift exceeds the type's number of bits\n-      //~^ WARN: attempted to shift by a negative amount\n+      //~^ WARN: attempt to shift by a negative amount\n \n       let n = 1u8 << (4+3);\n       let n = 1u8 << (4+4); //~ ERROR: bitshift exceeds the type's number of bits"}, {"sha": "a2971f23a79e148a9a30a941d23ee2c9d68e4df7", "filename": "src/test/compile-fail/lint-type-overflow2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Flint-type-overflow2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Fcompile-fail%2Flint-type-overflow2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-type-overflow2.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -15,7 +15,7 @@\n #[allow(unused_variables)]\n fn main() {\n     let x2: i8 = --128; //~ error: literal out of range for i8\n-    //~^ error: attempted to negate with overflow\n+    //~^ error: attempt to negate with overflow\n \n     let x = -3.40282348e+38_f32; //~ error: literal out of range for f32\n     let x =  3.40282348e+38_f32; //~ error: literal out of range for f32"}, {"sha": "c9c4a88c9b53eca1692726f0990cb833a5c7cf0f", "filename": "src/test/run-fail/divide-by-zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Fdivide-by-zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Fdivide-by-zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fdivide-by-zero.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:attempted to divide by zero\n+// error-pattern:attempt to divide by zero\n \n fn main() {\n     let y = 0;"}, {"sha": "d2b598a7933bcd86f128cbffdd484c5a83d3ee52", "filename": "src/test/run-fail/mod-zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Fmod-zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Fmod-zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmod-zero.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:attempted to calculate the remainder with a divisor of zero\n+// error-pattern:attempt to calculate the remainder with a divisor of zero\n \n fn main() {\n     let y = 0;"}, {"sha": "acc7676db457efd8d71c8264b37acd7b989562cd", "filename": "src/test/run-fail/overflowing-add.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-add.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:thread 'main' panicked at 'attempted to add with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to add with overflow'\n // compile-flags: -C debug-assertions\n \n "}, {"sha": "29ce3b0e6a16d7be8eb6fb2479fdd9b72b06baf3", "filename": "src/test/run-fail/overflowing-lsh-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-lsh-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-lsh-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-lsh-1.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:thread 'main' panicked at 'attempted to shift left with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to shift left with overflow'\n // compile-flags: -C debug-assertions\n \n #![warn(exceeding_bitshifts)]"}, {"sha": "62fc9230f353d07f2f8426d86b349416391df3a0", "filename": "src/test/run-fail/overflowing-lsh-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-lsh-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-lsh-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-lsh-2.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:thread 'main' panicked at 'attempted to shift left with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to shift left with overflow'\n // compile-flags: -C debug-assertions\n \n #![warn(exceeding_bitshifts)]"}, {"sha": "1bc1703a89ce37702c59c1436c03c5fb5d259e40", "filename": "src/test/run-fail/overflowing-lsh-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-lsh-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-lsh-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-lsh-3.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:thread 'main' panicked at 'attempted to shift left with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to shift left with overflow'\n // compile-flags: -C debug-assertions\n \n #![warn(exceeding_bitshifts)]"}, {"sha": "8de44f25e048967ec0d732654dcdf3ad8d718216", "filename": "src/test/run-fail/overflowing-lsh-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-lsh-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-lsh-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-lsh-4.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:thread 'main' panicked at 'attempted to shift left with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to shift left with overflow'\n // compile-flags: -C debug-assertions\n \n // This function is checking that our automatic truncation does not"}, {"sha": "a09c0f06a5cc6180f383100d8bf289ba20d7e076", "filename": "src/test/run-fail/overflowing-mul.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-mul.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-mul.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-mul.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:thread 'main' panicked at 'attempted to multiply with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to multiply with overflow'\n // compile-flags: -C debug-assertions\n \n fn main() {"}, {"sha": "96853fc565b716d4511d014f1e98b613833f7cd4", "filename": "src/test/run-fail/overflowing-neg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-neg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-neg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-neg.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:thread 'main' panicked at 'attempted to negate with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to negate with overflow'\n // compile-flags: -C debug-assertions\n \n fn main() {"}, {"sha": "b0ff0df557704f41ad42c9856c90217461959841", "filename": "src/test/run-fail/overflowing-pow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-pow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-pow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-pow.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:thread 'main' panicked at 'attempted to multiply with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to multiply with overflow'\n // compile-flags: -C debug-assertions\n \n fn main() {"}, {"sha": "ef4a503cfe42592d3674c2e479d714f7187a105b", "filename": "src/test/run-fail/overflowing-rsh-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-rsh-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-rsh-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-rsh-1.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:thread 'main' panicked at 'attempted to shift right with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to shift right with overflow'\n // compile-flags: -C debug-assertions\n \n #![warn(exceeding_bitshifts)]"}, {"sha": "da072b5a9a5a999c39cd535109d51fd4126139c0", "filename": "src/test/run-fail/overflowing-rsh-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-rsh-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-rsh-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-rsh-2.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:thread 'main' panicked at 'attempted to shift right with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to shift right with overflow'\n // compile-flags: -C debug-assertions\n \n #![warn(exceeding_bitshifts)]"}, {"sha": "0b7809402e6db93222cc588bf1dfc1b8c4d590e1", "filename": "src/test/run-fail/overflowing-rsh-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-rsh-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-rsh-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-rsh-3.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:thread 'main' panicked at 'attempted to shift right with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to shift right with overflow'\n // compile-flags: -C debug-assertions\n \n #![warn(exceeding_bitshifts)]"}, {"sha": "1e0cc18fbdcd63c9fb9e01a3ffac16f43a229240", "filename": "src/test/run-fail/overflowing-rsh-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-rsh-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-rsh-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-rsh-4.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:thread 'main' panicked at 'attempted to shift right with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to shift right with overflow'\n // compile-flags: -C debug-assertions\n \n // This function is checking that our (type-based) automatic"}, {"sha": "690901ff0c25b0f95d855604e3fe7cef932466d8", "filename": "src/test/run-fail/overflowing-rsh-5.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-rsh-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-rsh-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-rsh-5.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:thread 'main' panicked at 'attempted to shift right with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to shift right with overflow'\n // compile-flags: -C debug-assertions\n \n #![warn(exceeding_bitshifts)]"}, {"sha": "6a6ed4f11f20ef3dc7711d832bad80e2c32f964f", "filename": "src/test/run-fail/overflowing-rsh-6.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-rsh-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-rsh-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-rsh-6.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:thread 'main' panicked at 'attempted to shift right with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to shift right with overflow'\n // compile-flags: -C debug-assertions\n \n #![warn(exceeding_bitshifts)]"}, {"sha": "083e8d24467fd67148a2d7bff94c5182413adb33", "filename": "src/test/run-fail/overflowing-sub.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-sub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e4cccd3b95783da49cf74116f57d0b0851f719/src%2Ftest%2Frun-fail%2Foverflowing-sub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-sub.rs?ref=e5e4cccd3b95783da49cf74116f57d0b0851f719", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-// error-pattern:thread 'main' panicked at 'attempted to subtract with overflow'\n+// error-pattern:thread 'main' panicked at 'attempt to subtract with overflow'\n // compile-flags: -C debug-assertions\n \n fn main() {"}]}