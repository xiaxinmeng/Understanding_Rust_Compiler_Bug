{"sha": "89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ZDljYTliNTBlMDFjYmM1ZGM3OGEyNmYxNWNjOGM0MzViYmM1YTQ=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-05-16T16:07:35Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-05-16T17:11:31Z"}, "message": "Stabilize num::NonZeroU*\n\nTracking issue: https://github.com/rust-lang/rust/issues/49137", "tree": {"sha": "c40036f7d742280743edf2e413aaf91a6d1cb808", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c40036f7d742280743edf2e413aaf91a6d1cb808"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "html_url": "https://github.com/rust-lang/rust/commit/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c536639c1e1ce7e2b4816a40f2e954c581431456", "url": "https://api.github.com/repos/rust-lang/rust/commits/c536639c1e1ce7e2b4816a40f2e954c581431456", "html_url": "https://github.com/rust-lang/rust/commit/c536639c1e1ce7e2b4816a40f2e954c581431456"}], "stats": {"total": 29, "additions": 8, "deletions": 21}, "files": [{"sha": "f7dd9d4f010a4235162b6239e93c893314f8fc14", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "patch": "@@ -102,7 +102,6 @@\n #![feature(lang_items)]\n #![feature(libc)]\n #![feature(needs_allocator)]\n-#![feature(nonzero)]\n #![feature(optin_builtin_traits)]\n #![feature(pattern)]\n #![feature(pin)]"}, {"sha": "ae8b3087240b8ee5f3b8a213177bbf62c5e95356", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "patch": "@@ -21,9 +21,9 @@ use ops;\n use str::FromStr;\n \n macro_rules! impl_nonzero_fmt {\n-    ( #[$stability: meta] ( $( $Trait: ident ),+ ) for $Ty: ident ) => {\n+    ( ( $( $Trait: ident ),+ ) for $Ty: ident ) => {\n         $(\n-            #[$stability]\n+            #[stable(feature = \"nonzero\", since = \"1.28.0\")]\n             impl fmt::$Trait for $Ty {\n                 #[inline]\n                 fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n@@ -35,7 +35,7 @@ macro_rules! impl_nonzero_fmt {\n }\n \n macro_rules! nonzero_integers {\n-    ( #[$stability: meta] $( $Ty: ident($Int: ty); )+ ) => {\n+    ( $( $Ty: ident($Int: ty); )+ ) => {\n         $(\n             /// An integer that is known not to equal zero.\n             ///\n@@ -46,7 +46,7 @@ macro_rules! nonzero_integers {\n             /// use std::mem::size_of;\n             /// assert_eq!(size_of::<Option<std::num::NonZeroU32>>(), size_of::<u32>());\n             /// ```\n-            #[$stability]\n+            #[stable(feature = \"nonzero\", since = \"1.28.0\")]\n             #[derive(Copy, Clone, Eq, PartialEq, Ord, PartialOrd, Hash)]\n             pub struct $Ty(NonZero<$Int>);\n \n@@ -56,14 +56,14 @@ macro_rules! nonzero_integers {\n                 /// # Safety\n                 ///\n                 /// The value must not be zero.\n-                #[$stability]\n+                #[stable(feature = \"nonzero\", since = \"1.28.0\")]\n                 #[inline]\n                 pub const unsafe fn new_unchecked(n: $Int) -> Self {\n                     $Ty(NonZero(n))\n                 }\n \n                 /// Create a non-zero if the given value is not zero.\n-                #[$stability]\n+                #[stable(feature = \"nonzero\", since = \"1.28.0\")]\n                 #[inline]\n                 pub fn new(n: $Int) -> Option<Self> {\n                     if n != 0 {\n@@ -74,7 +74,7 @@ macro_rules! nonzero_integers {\n                 }\n \n                 /// Returns the value as a primitive type.\n-                #[$stability]\n+                #[stable(feature = \"nonzero\", since = \"1.28.0\")]\n                 #[inline]\n                 pub fn get(self) -> $Int {\n                     self.0 .0\n@@ -83,15 +83,13 @@ macro_rules! nonzero_integers {\n             }\n \n             impl_nonzero_fmt! {\n-                #[$stability]\n                 (Debug, Display, Binary, Octal, LowerHex, UpperHex) for $Ty\n             }\n         )+\n     }\n }\n \n nonzero_integers! {\n-    #[unstable(feature = \"nonzero\", issue = \"49137\")]\n     NonZeroU8(u8);\n     NonZeroU16(u16);\n     NonZeroU32(u32);"}, {"sha": "7fb4b503c01efea48e8acc5e46bb5efc8c356486", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "patch": "@@ -26,7 +26,6 @@\n #![feature(iterator_step_by)]\n #![feature(iterator_flatten)]\n #![feature(iterator_repeat_with)]\n-#![feature(nonzero)]\n #![feature(pattern)]\n #![feature(range_is_empty)]\n #![feature(raw)]"}, {"sha": "ac6ff6831adb804ceb61a80d6a0cbf16abfb13d3", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "patch": "@@ -56,7 +56,6 @@\n #![feature(never_type)]\n #![feature(exhaustive_patterns)]\n #![feature(non_exhaustive)]\n-#![feature(nonzero)]\n #![feature(proc_macro_internals)]\n #![feature(quote)]\n #![feature(optin_builtin_traits)]"}, {"sha": "328ff76c1cdd0175fd5986de70356bcdb5afe7ab", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "patch": "@@ -21,7 +21,6 @@\n       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(collections_range)]\n-#![feature(nonzero)]\n #![feature(unboxed_closures)]\n #![feature(fn_traits)]\n #![feature(unsize)]"}, {"sha": "ecced1b81682e94d365b34389a4234a4ff868700", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "patch": "@@ -30,7 +30,6 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![feature(exhaustive_patterns)]\n #![feature(range_contains)]\n #![feature(rustc_diagnostic_macros)]\n-#![feature(nonzero)]\n #![feature(inclusive_range_methods)]\n #![feature(crate_visibility_modifier)]\n #![feature(never_type)]"}, {"sha": "9cdc6a21622467af00052f3b006b99c20b71e7a9", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "patch": "@@ -277,7 +277,6 @@\n #![feature(needs_panic_runtime)]\n #![feature(never_type)]\n #![feature(exhaustive_patterns)]\n-#![feature(nonzero)]\n #![feature(num_bits_bytes)]\n #![feature(old_wrapping)]\n #![feature(on_unimplemented)]"}, {"sha": "3f90c1fa3b1f2cf39c1d60b0f4ec1d32e9d5a940", "filename": "src/libstd/num.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Flibstd%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Flibstd%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum.rs?ref=89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "patch": "@@ -21,8 +21,7 @@ pub use core::num::{FpCategory, ParseIntError, ParseFloatError, TryFromIntError}\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::num::Wrapping;\n \n-#[unstable(feature = \"nonzero\", issue = \"49137\")]\n-#[allow(deprecated)]\n+#[stable(feature = \"nonzero\", since = \"1.28.0\")]\n pub use core::num::{NonZeroU8, NonZeroU16, NonZeroU32, NonZeroU64, NonZeroU128, NonZeroUsize};\n \n #[cfg(test)] use fmt;"}, {"sha": "d5f3e88fd52e86f31301503ba0004ee8d0cb9379", "filename": "src/test/run-pass/ctfe/tuple-struct-constructors.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Ftest%2Frun-pass%2Fctfe%2Ftuple-struct-constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Ftest%2Frun-pass%2Fctfe%2Ftuple-struct-constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fctfe%2Ftuple-struct-constructors.rs?ref=89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "patch": "@@ -10,7 +10,6 @@\n \n // https://github.com/rust-lang/rust/issues/41898\n \n-#![feature(nonzero)]\n use std::num::NonZeroU64;\n \n fn main() {"}, {"sha": "34ed589d418c16e570d9adadd77b03da8f5e623a", "filename": "src/test/run-pass/enum-null-pointer-opt.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Ftest%2Frun-pass%2Fenum-null-pointer-opt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Ftest%2Frun-pass%2Fenum-null-pointer-opt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-null-pointer-opt.rs?ref=89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(nonzero, core)]\n-\n use std::mem::size_of;\n use std::num::NonZeroUsize;\n use std::ptr::NonNull;"}, {"sha": "17e7a21cd02e52ca0305dcae1fdb4dba101fd05e", "filename": "src/test/ui/print_type_sizes/niche-filling.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Ftest%2Fui%2Fprint_type_sizes%2Fniche-filling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4/src%2Ftest%2Fui%2Fprint_type_sizes%2Fniche-filling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fniche-filling.rs?ref=89d9ca9b50e01cbc5dc78a26f15cc8c435bbc5a4", "patch": "@@ -22,7 +22,6 @@\n // padding and overall computed sizes can be quite different.\n \n #![feature(start)]\n-#![feature(nonzero)]\n #![allow(dead_code)]\n \n use std::num::NonZeroU32;"}]}