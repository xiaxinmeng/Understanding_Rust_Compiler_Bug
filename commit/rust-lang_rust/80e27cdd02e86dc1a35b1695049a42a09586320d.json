{"sha": "80e27cdd02e86dc1a35b1695049a42a09586320d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwZTI3Y2RkMDJlODZkYzFhMzViMTY5NTA0OWE0MmEwOTU4NjMyMGQ=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-05-30T14:36:18Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-08-20T09:37:32Z"}, "message": "bootstrap: Allow to specify ranlib tool used when compiling C++ code.", "tree": {"sha": "abc0811674f38de96e6ef037538aa6c5c20e9c13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abc0811674f38de96e6ef037538aa6c5c20e9c13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80e27cdd02e86dc1a35b1695049a42a09586320d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80e27cdd02e86dc1a35b1695049a42a09586320d", "html_url": "https://github.com/rust-lang/rust/commit/80e27cdd02e86dc1a35b1695049a42a09586320d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80e27cdd02e86dc1a35b1695049a42a09586320d/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "758239c9c9e00b7c0daba6496ef246a85e7b5ce5", "url": "https://api.github.com/repos/rust-lang/rust/commits/758239c9c9e00b7c0daba6496ef246a85e7b5ce5", "html_url": "https://github.com/rust-lang/rust/commit/758239c9c9e00b7c0daba6496ef246a85e7b5ce5"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "e7a530ba4c2af27b33665083133e34644a814f4f", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/80e27cdd02e86dc1a35b1695049a42a09586320d/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/80e27cdd02e86dc1a35b1695049a42a09586320d/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=80e27cdd02e86dc1a35b1695049a42a09586320d", "patch": "@@ -388,6 +388,10 @@\n # Note: an absolute path should be used, otherwise LLVM build will break.\n #ar = \"ar\"\n \n+# Ranlib to be used to assemble static libraries compiled from C/C++ code.\n+# Note: an absolute path should be used, otherwise LLVM build will break.\n+#ranlib = \"ranlib\"\n+\n # Linker to be used to link Rust code. Note that the\n # default value is platform specific, and if not specified it may also depend on\n # what platform is crossing to what platform."}, {"sha": "aef97204a4abc88a5ab479e3d5ad94fe8089dce7", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/80e27cdd02e86dc1a35b1695049a42a09586320d/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80e27cdd02e86dc1a35b1695049a42a09586320d/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=80e27cdd02e86dc1a35b1695049a42a09586320d", "patch": "@@ -163,6 +163,7 @@ pub struct Target {\n     pub cc: Option<PathBuf>,\n     pub cxx: Option<PathBuf>,\n     pub ar: Option<PathBuf>,\n+    pub ranlib: Option<PathBuf>,\n     pub linker: Option<PathBuf>,\n     pub ndk: Option<PathBuf>,\n     pub crt_static: Option<bool>,\n@@ -327,6 +328,7 @@ struct TomlTarget {\n     cc: Option<String>,\n     cxx: Option<String>,\n     ar: Option<String>,\n+    ranlib: Option<String>,\n     linker: Option<String>,\n     android_ndk: Option<String>,\n     crt_static: Option<bool>,\n@@ -581,6 +583,7 @@ impl Config {\n                 target.cc = cfg.cc.clone().map(PathBuf::from);\n                 target.cxx = cfg.cxx.clone().map(PathBuf::from);\n                 target.ar = cfg.ar.clone().map(PathBuf::from);\n+                target.ranlib = cfg.ranlib.clone().map(PathBuf::from);\n                 target.linker = cfg.linker.clone().map(PathBuf::from);\n                 target.crt_static = cfg.crt_static.clone();\n                 target.musl_root = cfg.musl_root.clone().map(PathBuf::from);"}, {"sha": "97b05059c88d129e7679196365cb8f10640be4d4", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/80e27cdd02e86dc1a35b1695049a42a09586320d/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80e27cdd02e86dc1a35b1695049a42a09586320d/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=80e27cdd02e86dc1a35b1695049a42a09586320d", "patch": "@@ -281,6 +281,7 @@ pub struct Build {\n     cc: HashMap<Interned<String>, cc::Tool>,\n     cxx: HashMap<Interned<String>, cc::Tool>,\n     ar: HashMap<Interned<String>, PathBuf>,\n+    ranlib: HashMap<Interned<String>, PathBuf>,\n     // Misc\n     crates: HashMap<Interned<String>, Crate>,\n     is_sudo: bool,\n@@ -406,6 +407,7 @@ impl Build {\n             cc: HashMap::new(),\n             cxx: HashMap::new(),\n             ar: HashMap::new(),\n+            ranlib: HashMap::new(),\n             crates: HashMap::new(),\n             lldb_version: None,\n             lldb_python_dir: None,\n@@ -772,6 +774,11 @@ impl Build {\n         self.ar.get(&target).map(|p| &**p)\n     }\n \n+    /// Returns the path to the `ranlib` utility for the target specified.\n+    fn ranlib(&self, target: Interned<String>) -> Option<&Path> {\n+        self.ranlib.get(&target).map(|p| &**p)\n+    }\n+\n     /// Returns the path to the C++ compiler for the target specified.\n     fn cxx(&self, target: Interned<String>) -> Result<&Path, String> {\n         match self.cxx.get(&target) {"}, {"sha": "0e8605750dc64040c216104a8dc9119b890b6e34", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/80e27cdd02e86dc1a35b1695049a42a09586320d/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80e27cdd02e86dc1a35b1695049a42a09586320d/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=80e27cdd02e86dc1a35b1695049a42a09586320d", "patch": "@@ -379,6 +379,14 @@ fn configure_cmake(builder: &Builder,\n         }\n     }\n \n+    if let Some(ranlib) = builder.ranlib(target) {\n+        if ranlib.is_absolute() {\n+            // LLVM build breaks if `CMAKE_RANLIB` is a relative path, for some reason it\n+            // tries to resolve this path in the LLVM build directory.\n+            cfg.define(\"CMAKE_RANLIB\", sanitize_cc(ranlib));\n+        }\n+    }\n+\n     if env::var_os(\"SCCACHE_ERROR_LOG\").is_some() {\n         cfg.env(\"RUST_LOG\", \"sccache=warn\");\n     }"}]}