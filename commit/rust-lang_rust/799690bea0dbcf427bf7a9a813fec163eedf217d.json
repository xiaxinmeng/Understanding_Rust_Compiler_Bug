{"sha": "799690bea0dbcf427bf7a9a813fec163eedf217d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5OTY5MGJlYTBkYmNmNDI3YmY3YTlhODEzZmVjMTYzZWVkZjIxN2Q=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-12-07T21:12:05Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-12-07T21:33:00Z"}, "message": "Remove stmt_crate_directive, it's vestigial and confusing.", "tree": {"sha": "540b6eaeebfeb327462a143479830d0ce044b794", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/540b6eaeebfeb327462a143479830d0ce044b794"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/799690bea0dbcf427bf7a9a813fec163eedf217d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/799690bea0dbcf427bf7a9a813fec163eedf217d", "html_url": "https://github.com/rust-lang/rust/commit/799690bea0dbcf427bf7a9a813fec163eedf217d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/799690bea0dbcf427bf7a9a813fec163eedf217d/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfd699a8521c6fecd49b260e541764134c54b591", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfd699a8521c6fecd49b260e541764134c54b591", "html_url": "https://github.com/rust-lang/rust/commit/dfd699a8521c6fecd49b260e541764134c54b591"}], "stats": {"total": 39, "additions": 2, "deletions": 37}, "files": [{"sha": "909e90fd0c6d945fd8b56cbb747d6c113eaf71ae", "filename": "src/comp/middle/alias.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/799690bea0dbcf427bf7a9a813fec163eedf217d/src%2Fcomp%2Fmiddle%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/799690bea0dbcf427bf7a9a813fec163eedf217d/src%2Fcomp%2Fmiddle%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Falias.rs?ref=799690bea0dbcf427bf7a9a813fec163eedf217d", "patch": "@@ -154,9 +154,6 @@ fn visit_block(cx: @ctx, b: ast::blk, sc: scope, v: vt<scope>) {\n           ast::stmt_expr(ex, _) {\n             v.visit_expr(ex, sc, v);\n           }\n-          ast::stmt_crate_directive(cd) {\n-            visit::visit_crate_directive(cd, sc, v);\n-          }\n         }\n     }\n     visit::visit_expr_opt(b.node.expr, sc, v);"}, {"sha": "315eac891471c84efb08cb68565b07602bceacb3", "filename": "src/comp/middle/tstate/auxiliary.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/799690bea0dbcf427bf7a9a813fec163eedf217d/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/799690bea0dbcf427bf7a9a813fec163eedf217d/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs?ref=799690bea0dbcf427bf7a9a813fec163eedf217d", "patch": "@@ -319,10 +319,6 @@ fn stmt_to_ann(ccx: crate_ctxt, s: stmt) -> ts_ann {\n     alt s.node {\n       stmt_decl(_, id) { ret node_id_to_ts_ann(ccx, id); }\n       stmt_expr(_, id) { ret node_id_to_ts_ann(ccx, id); }\n-      stmt_crate_directive(_) {\n-        log_err \"expecting an annotated statement here\";\n-        fail;\n-      }\n     }\n }\n "}, {"sha": "00699238b7f8338aad0bcdb3e23c9ea76a2db5ef", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/799690bea0dbcf427bf7a9a813fec163eedf217d/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/799690bea0dbcf427bf7a9a813fec163eedf217d/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=799690bea0dbcf427bf7a9a813fec163eedf217d", "patch": "@@ -1659,10 +1659,6 @@ fn stmt_node_id(s: @ast::stmt) -> ast::node_id {\n     alt s.node {\n       ast::stmt_decl(_, id) { ret id; }\n       ast::stmt_expr(_, id) { ret id; }\n-      ast::stmt_crate_directive(_) {\n-        log_err \"ty::stmt_node_id(): crate directive found\";\n-        fail;\n-      }\n     }\n }\n "}, {"sha": "a501d083aae5a15c1b8ba0326ca34974204a637c", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/799690bea0dbcf427bf7a9a813fec163eedf217d/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/799690bea0dbcf427bf7a9a813fec163eedf217d/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=799690bea0dbcf427bf7a9a813fec163eedf217d", "patch": "@@ -145,9 +145,6 @@ type stmt = spanned<stmt_>;\n tag stmt_ {\n     stmt_decl(@decl, node_id);\n     stmt_expr(@expr, node_id);\n-\n-    // These only exist in crate-level blocks.\n-    stmt_crate_directive(@crate_directive);\n }\n \n tag init_op { init_assign; init_move; }"}, {"sha": "0e76e9a15d16984878765dcd323a4a5807438b7d", "filename": "src/comp/syntax/fold.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/799690bea0dbcf427bf7a9a813fec163eedf217d/src%2Fcomp%2Fsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/799690bea0dbcf427bf7a9a813fec163eedf217d/src%2Fcomp%2Fsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Ffold.rs?ref=799690bea0dbcf427bf7a9a813fec163eedf217d", "patch": "@@ -258,10 +258,7 @@ fn noop_fold_stmt(s: stmt_, fld: ast_fold) -> stmt_ {\n     ret alt s {\n           stmt_decl(d, nid) { stmt_decl(fld.fold_decl(d), nid) }\n           stmt_expr(e, nid) { stmt_expr(fld.fold_expr(e), nid) }\n-          stmt_crate_directive(cd) {\n-            stmt_crate_directive(fld.fold_crate_directive(cd))\n-          }\n-        };\n+    };\n }\n \n fn noop_fold_arm(a: arm, fld: ast_fold) -> arm {"}, {"sha": "2bf7865bf81c8dddb20f6684776d448b2606b958", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/799690bea0dbcf427bf7a9a813fec163eedf217d/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/799690bea0dbcf427bf7a9a813fec163eedf217d/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=799690bea0dbcf427bf7a9a813fec163eedf217d", "patch": "@@ -1525,18 +1525,6 @@ fn parse_let(p: parser) -> @ast::decl {\n }\n \n fn parse_stmt(p: parser) -> @ast::stmt {\n-    if p.get_file_type() == SOURCE_FILE {\n-        ret parse_source_stmt(p);\n-    } else { ret parse_crate_stmt(p); }\n-}\n-\n-fn parse_crate_stmt(p: parser) -> @ast::stmt {\n-    let cdir = parse_crate_directive(p, []);\n-    ret @spanned(cdir.span.lo, cdir.span.hi,\n-                 ast::stmt_crate_directive(@cdir));\n-}\n-\n-fn parse_source_stmt(p: parser) -> @ast::stmt {\n     let lo = p.get_lo_pos();\n     if eat_word(p, \"let\") {\n         let decl = parse_let(p);\n@@ -1642,10 +1630,6 @@ fn stmt_ends_with_semi(stmt: ast::stmt) -> bool {\n       ast::stmt_expr(e, _) {\n         ret expr_has_value(e);\n       }\n-      // We should not be calling this on a cdir.\n-      ast::stmt_crate_directive(cdir) {\n-        fail;\n-      }\n     }\n }\n \n@@ -1707,8 +1691,7 @@ fn parse_block_tail(p: parser, lo: uint, s: ast::blk_check_mode) -> ast::blk {\n                 // Not an expression statement.\n                 stmts += [stmt];\n \n-                if p.get_file_type() == SOURCE_FILE &&\n-                       stmt_ends_with_semi(*stmt) {\n+                if stmt_ends_with_semi(*stmt) {\n                     expect(p, token::SEMI);\n                 }\n               }"}, {"sha": "be4dbef294b31d87623a5f89e15c977b1a2e3cd6", "filename": "src/comp/syntax/visit.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/799690bea0dbcf427bf7a9a813fec163eedf217d/src%2Fcomp%2Fsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/799690bea0dbcf427bf7a9a813fec163eedf217d/src%2Fcomp%2Fsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fvisit.rs?ref=799690bea0dbcf427bf7a9a813fec163eedf217d", "patch": "@@ -196,7 +196,6 @@ fn visit_stmt<E>(s: @stmt, e: E, v: vt<E>) {\n     alt s.node {\n       stmt_decl(d, _) { v.visit_decl(d, e, v); }\n       stmt_expr(ex, _) { v.visit_expr(ex, e, v); }\n-      stmt_crate_directive(cd) { visit_crate_directive(cd, e, v); }\n     }\n }\n "}]}