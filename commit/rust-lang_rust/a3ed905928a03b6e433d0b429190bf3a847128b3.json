{"sha": "a3ed905928a03b6e433d0b429190bf3a847128b3", "node_id": "C_kwDOAAsO6NoAKGEzZWQ5MDU5MjhhMDNiNmU0MzNkMGI0MjkxOTBiZjNhODQ3MTI4YjM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-23T10:56:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-23T10:56:50Z"}, "message": "Auto merge of #10578 - blyxyas:items_after_test_module, r=dswij\n\nAdd `items_after_test_module` lint\n\nResolves task *3* of #10506, alongside *1* resolved at #10543 in an effort to help standarize a little bit more testing modules.\n\n---\n\nchangelog:[`items_after_test_module`]: Added the lint.", "tree": {"sha": "ba61a4c18fa46835cdeb6a6729e5daf3a63573c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba61a4c18fa46835cdeb6a6729e5daf3a63573c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3ed905928a03b6e433d0b429190bf3a847128b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3ed905928a03b6e433d0b429190bf3a847128b3", "html_url": "https://github.com/rust-lang/rust/commit/a3ed905928a03b6e433d0b429190bf3a847128b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3ed905928a03b6e433d0b429190bf3a847128b3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "419552227f51b400c1310c7e798074b466369a91", "url": "https://api.github.com/repos/rust-lang/rust/commits/419552227f51b400c1310c7e798074b466369a91", "html_url": "https://github.com/rust-lang/rust/commit/419552227f51b400c1310c7e798074b466369a91"}, {"sha": "1ac8dc51bc379136cbcba737e63ba619f9524269", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ac8dc51bc379136cbcba737e63ba619f9524269", "html_url": "https://github.com/rust-lang/rust/commit/1ac8dc51bc379136cbcba737e63ba619f9524269"}], "stats": {"total": 127, "additions": 127, "deletions": 0}, "files": [{"sha": "d7102d2474ef48826f491380b7d610fe12cfdb91", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a3ed905928a03b6e433d0b429190bf3a847128b3/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/a3ed905928a03b6e433d0b429190bf3a847128b3/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=a3ed905928a03b6e433d0b429190bf3a847128b3", "patch": "@@ -4730,6 +4730,7 @@ Released 2018-09-13\n [`invisible_characters`]: https://rust-lang.github.io/rust-clippy/master/index.html#invisible_characters\n [`is_digit_ascii_radix`]: https://rust-lang.github.io/rust-clippy/master/index.html#is_digit_ascii_radix\n [`items_after_statements`]: https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements\n+[`items_after_test_module`]: https://rust-lang.github.io/rust-clippy/master/index.html#items_after_test_module\n [`iter_cloned_collect`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_cloned_collect\n [`iter_count`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n [`iter_kv_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_kv_map"}, {"sha": "0c66d36a1d630b2aa0cc6f6a7c95c939255e3b25", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a3ed905928a03b6e433d0b429190bf3a847128b3/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3ed905928a03b6e433d0b429190bf3a847128b3/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=a3ed905928a03b6e433d0b429190bf3a847128b3", "patch": "@@ -215,6 +215,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::invalid_upcast_comparisons::INVALID_UPCAST_COMPARISONS_INFO,\n     crate::invalid_utf8_in_unchecked::INVALID_UTF8_IN_UNCHECKED_INFO,\n     crate::items_after_statements::ITEMS_AFTER_STATEMENTS_INFO,\n+    crate::items_after_test_module::ITEMS_AFTER_TEST_MODULE_INFO,\n     crate::iter_not_returning_iterator::ITER_NOT_RETURNING_ITERATOR_INFO,\n     crate::large_const_arrays::LARGE_CONST_ARRAYS_INFO,\n     crate::large_enum_variant::LARGE_ENUM_VARIANT_INFO,"}, {"sha": "52d716feea02fbe57a72ef3ea3e106dbc20fcbe6", "filename": "clippy_lints/src/items_after_test_module.rs", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/a3ed905928a03b6e433d0b429190bf3a847128b3/clippy_lints%2Fsrc%2Fitems_after_test_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3ed905928a03b6e433d0b429190bf3a847128b3/clippy_lints%2Fsrc%2Fitems_after_test_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fitems_after_test_module.rs?ref=a3ed905928a03b6e433d0b429190bf3a847128b3", "patch": "@@ -0,0 +1,83 @@\n+use clippy_utils::{diagnostics::span_lint_and_help, is_in_cfg_test};\n+use rustc_hir::{HirId, ItemId, ItemKind, Mod};\n+use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::{sym, Span};\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Triggers if an item is declared after the testing module marked with `#[cfg(test)]`.\n+    /// ### Why is this bad?\n+    /// Having items declared after the testing module is confusing and may lead to bad test coverage.\n+    /// ### Example\n+    /// ```rust\n+    /// #[cfg(test)]\n+    /// mod tests {\n+    ///     // [...]\n+    /// }\n+    ///\n+    /// fn my_function() {\n+    ///     // [...]\n+    /// }\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// fn my_function() {\n+    ///     // [...]\n+    /// }\n+    ///\n+    /// #[cfg(test)]\n+    /// mod tests {\n+    ///     // [...]\n+    /// }\n+    /// ```\n+    #[clippy::version = \"1.70.0\"]\n+    pub ITEMS_AFTER_TEST_MODULE,\n+    style,\n+    \"An item was found after the testing module `tests`\"\n+}\n+\n+declare_lint_pass!(ItemsAfterTestModule => [ITEMS_AFTER_TEST_MODULE]);\n+\n+impl LateLintPass<'_> for ItemsAfterTestModule {\n+    fn check_mod(&mut self, cx: &LateContext<'_>, _: &Mod<'_>, _: HirId) {\n+        let mut was_test_mod_visited = false;\n+        let mut test_mod_span: Option<Span> = None;\n+\n+        let hir = cx.tcx.hir();\n+        let items = hir.items().collect::<Vec<ItemId>>();\n+\n+        for (i, itid) in items.iter().enumerate() {\n+            let item = hir.item(*itid);\n+\n+            if_chain! {\n+            if was_test_mod_visited;\n+            if i == (items.len() - 3 /* Weird magic number (HIR-translation behaviour) */);\n+            if cx.sess().source_map().lookup_char_pos(item.span.lo()).file.name_hash\n+            == cx.sess().source_map().lookup_char_pos(test_mod_span.unwrap().lo()).file.name_hash; // Will never fail\n+            if !matches!(item.kind, ItemKind::Mod(_));\n+            if !is_in_cfg_test(cx.tcx, itid.hir_id()); // The item isn't in the testing module itself\n+            if !in_external_macro(cx.sess(), item.span);\n+\n+            then {\n+                span_lint_and_help(cx, ITEMS_AFTER_TEST_MODULE, test_mod_span.unwrap().with_hi(item.span.hi()), \"items were found after the testing module\", None, \"move the items to before the testing module was defined\");\n+            }};\n+\n+            if matches!(item.kind, ItemKind::Mod(_)) {\n+                for attr in cx.tcx.get_attrs(item.owner_id.to_def_id(), sym::cfg) {\n+                    if_chain! {\n+                        if attr.has_name(sym::cfg);\n+                        if let Some(mitems) = attr.meta_item_list();\n+                        if let [mitem] = &*mitems;\n+                        if mitem.has_name(sym::test);\n+                        then {\n+                            was_test_mod_visited = true;\n+                            test_mod_span = Some(item.span);\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "573ffe349ec23e227696c3ed42745789fdf46785", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a3ed905928a03b6e433d0b429190bf3a847128b3/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3ed905928a03b6e433d0b429190bf3a847128b3/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=a3ed905928a03b6e433d0b429190bf3a847128b3", "patch": "@@ -158,6 +158,7 @@ mod int_plus_one;\n mod invalid_upcast_comparisons;\n mod invalid_utf8_in_unchecked;\n mod items_after_statements;\n+mod items_after_test_module;\n mod iter_not_returning_iterator;\n mod large_const_arrays;\n mod large_enum_variant;\n@@ -961,6 +962,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|_| Box::new(tests_outside_test_module::TestsOutsideTestModule));\n     store.register_late_pass(|_| Box::new(manual_slice_size_calculation::ManualSliceSizeCalculation));\n     store.register_early_pass(|| Box::new(suspicious_doc_comments::SuspiciousDocComments));\n+    store.register_late_pass(|_| Box::new(items_after_test_module::ItemsAfterTestModule));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "5136b2557ec1a6d695b66a4b67181d7ea71f29c6", "filename": "tests/ui/items_after_test_module.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a3ed905928a03b6e433d0b429190bf3a847128b3/tests%2Fui%2Fitems_after_test_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3ed905928a03b6e433d0b429190bf3a847128b3/tests%2Fui%2Fitems_after_test_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fitems_after_test_module.rs?ref=a3ed905928a03b6e433d0b429190bf3a847128b3", "patch": "@@ -0,0 +1,23 @@\n+//@compile-flags: --test\n+#![allow(unused)]\n+#![warn(clippy::items_after_test_module)]\n+\n+fn main() {}\n+\n+fn should_not_lint() {}\n+\n+#[allow(dead_code)]\n+#[allow(unused)] // Some attributes to check that span replacement is good enough\n+#[allow(clippy::allow_attributes)]\n+#[cfg(test)]\n+mod tests {\n+    #[test]\n+    fn hi() {}\n+}\n+\n+fn should_lint() {}\n+\n+const SHOULD_ALSO_LINT: usize = 1;\n+macro_rules! should_not_lint {\n+    () => {};\n+}"}, {"sha": "8f1616dabc1f01541ae95c52f8a504e7a77fe126", "filename": "tests/ui/items_after_test_module.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a3ed905928a03b6e433d0b429190bf3a847128b3/tests%2Fui%2Fitems_after_test_module.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a3ed905928a03b6e433d0b429190bf3a847128b3/tests%2Fui%2Fitems_after_test_module.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fitems_after_test_module.stderr?ref=a3ed905928a03b6e433d0b429190bf3a847128b3", "patch": "@@ -0,0 +1,17 @@\n+error: items were found after the testing module\n+  --> $DIR/items_after_test_module.rs:13:1\n+   |\n+LL | / mod tests {\n+LL | |     #[test]\n+LL | |     fn hi() {}\n+LL | | }\n+...  |\n+LL | |     () => {};\n+LL | | }\n+   | |_^\n+   |\n+   = help: move the items to before the testing module was defined\n+   = note: `-D clippy::items-after-test-module` implied by `-D warnings`\n+\n+error: aborting due to previous error\n+"}]}