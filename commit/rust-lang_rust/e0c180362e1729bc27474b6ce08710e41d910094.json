{"sha": "e0c180362e1729bc27474b6ce08710e41d910094", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwYzE4MDM2MmUxNzI5YmMyNzQ3NGI2Y2UwODcxMGU0MWQ5MTAwOTQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-04-04T09:07:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-04T09:07:13Z"}, "message": "Rollup merge of #49516 - GuillaumeGomez:add-union-field-missing-anchor, r=QuietMisdreavus\n\nAdd missing anchor for union type fields\n\nr? @QuietMisdreavus", "tree": {"sha": "aabc9fc70948306256f7d5c83a96c0f554f7c9b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aabc9fc70948306256f7d5c83a96c0f554f7c9b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0c180362e1729bc27474b6ce08710e41d910094", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaxJXBCRBK7hj4Ov3rIwAAdHIIAHPMfiK9UfFYYl5dLENcKCie\nhLTyH8Ve/cS6VyqOav+V2Zp541drzwo95CAFRh0THsePjbzIJOqAMzgYOwBQaqEr\nu7lAM3zzLtOy5Dxl6qTxDdWKqayD4bX+P0XQV6hisUiTu2uaTsDkz0F0JvUgPfQz\n2cUyxpBJ1ajT15r8Sv/HEqwN3pfH3+SuNWweV/6s0fMD2fcsxaSRo+HqErQ3GWKc\nu9cXzs5axoqftnrsnmR/GH0f/D/q3ePgSaAYqk7nLXiOTQVE/OPu3vlkc/gZJO0/\nCcQ82vEvcWszLTAE/0FQtA1pNF2H8Ig179o9UzeJjD80uAIgKgZpV9GJk90B2QU=\n=I6YX\n-----END PGP SIGNATURE-----\n", "payload": "tree aabc9fc70948306256f7d5c83a96c0f554f7c9b6\nparent fcb17a47280bc2c2b1f8ebe84e82dc6d4e4621ad\nparent adaaeeaee341d9cc4472afc8287704dd5cea521e\nauthor kennytm <kennytm@gmail.com> 1522832833 +0200\ncommitter GitHub <noreply@github.com> 1522832833 +0200\n\nRollup merge of #49516 - GuillaumeGomez:add-union-field-missing-anchor, r=QuietMisdreavus\n\nAdd missing anchor for union type fields\n\nr? @QuietMisdreavus\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0c180362e1729bc27474b6ce08710e41d910094", "html_url": "https://github.com/rust-lang/rust/commit/e0c180362e1729bc27474b6ce08710e41d910094", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0c180362e1729bc27474b6ce08710e41d910094/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcb17a47280bc2c2b1f8ebe84e82dc6d4e4621ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcb17a47280bc2c2b1f8ebe84e82dc6d4e4621ad", "html_url": "https://github.com/rust-lang/rust/commit/fcb17a47280bc2c2b1f8ebe84e82dc6d4e4621ad"}, {"sha": "adaaeeaee341d9cc4472afc8287704dd5cea521e", "url": "https://api.github.com/repos/rust-lang/rust/commits/adaaeeaee341d9cc4472afc8287704dd5cea521e", "html_url": "https://github.com/rust-lang/rust/commit/adaaeeaee341d9cc4472afc8287704dd5cea521e"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "8e6dcf8caf48481fb858d0ddd703612341bbb60d", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e0c180362e1729bc27474b6ce08710e41d910094/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0c180362e1729bc27474b6ce08710e41d910094/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=e0c180362e1729bc27474b6ce08710e41d910094", "patch": "@@ -2815,10 +2815,15 @@ fn item_union(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n         write!(w, \"<h2 id='fields' class='fields small-section-header'>\n                    Fields<a href='#fields' class='anchor'></a></h2>\")?;\n         for (field, ty) in fields {\n-            write!(w, \"<span id='{shortty}.{name}' class=\\\"{shortty}\\\"><code>{name}: {ty}</code>\n+            let name = field.name.as_ref().expect(\"union field name\");\n+            let id = format!(\"{}.{}\", ItemType::StructField, name);\n+            write!(w, \"<span id=\\\"{id}\\\" class=\\\"{shortty} small-section-header\\\">\\\n+                           <a href=\\\"#{id}\\\" class=\\\"anchor field\\\"></a>\\\n+                           <span class='invisible'><code>{name}: {ty}</code></span>\\\n                        </span>\",\n+                   id = id,\n+                   name = name,\n                    shortty = ItemType::StructField,\n-                   name = field.name.as_ref().unwrap(),\n                    ty = ty)?;\n             if let Some(stability_class) = field.stability_class() {\n                 write!(w, \"<span class='stab {stab}'></span>\","}]}