{"sha": "bfb1c277a8e5b836b7b2a413bce6b8a056b70d43", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmYjFjMjc3YThlNWI4MzZiN2IyYTQxM2JjZTZiOGEwNTZiNzBkNDM=", "commit": {"author": {"name": "Robert Gawdzik", "email": "robertgawdzik@gmail.com", "date": "2017-03-21T20:00:33Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-03-21T20:00:33Z"}, "message": "Make list_files deterministic (Closes #1141) (#1393)\n\n- Use BTreeMap instead", "tree": {"sha": "6389863b0e839a0e5944b9eb3ef92ac59bb0c2bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6389863b0e839a0e5944b9eb3ef92ac59bb0c2bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfb1c277a8e5b836b7b2a413bce6b8a056b70d43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfb1c277a8e5b836b7b2a413bce6b8a056b70d43", "html_url": "https://github.com/rust-lang/rust/commit/bfb1c277a8e5b836b7b2a413bce6b8a056b70d43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfb1c277a8e5b836b7b2a413bce6b8a056b70d43/comments", "author": {"login": "robertg", "id": 2405472, "node_id": "MDQ6VXNlcjI0MDU0NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2405472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertg", "html_url": "https://github.com/robertg", "followers_url": "https://api.github.com/users/robertg/followers", "following_url": "https://api.github.com/users/robertg/following{/other_user}", "gists_url": "https://api.github.com/users/robertg/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertg/subscriptions", "organizations_url": "https://api.github.com/users/robertg/orgs", "repos_url": "https://api.github.com/users/robertg/repos", "events_url": "https://api.github.com/users/robertg/events{/privacy}", "received_events_url": "https://api.github.com/users/robertg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4c5d572c8b02849c194c13cc41366e07d32c9ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4c5d572c8b02849c194c13cc41366e07d32c9ca", "html_url": "https://github.com/rust-lang/rust/commit/d4c5d572c8b02849c194c13cc41366e07d32c9ca"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "3d2c3b0ac9f3c64643df0979bf290c6c8b8986b5", "filename": "src/modules.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bfb1c277a8e5b836b7b2a413bce6b8a056b70d43/src%2Fmodules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfb1c277a8e5b836b7b2a413bce6b8a056b70d43/src%2Fmodules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmodules.rs?ref=bfb1c277a8e5b836b7b2a413bce6b8a056b70d43", "patch": "@@ -11,7 +11,7 @@\n use utils;\n \n use std::path::{Path, PathBuf};\n-use std::collections::HashMap;\n+use std::collections::BTreeMap;\n \n use syntax::ast;\n use syntax::codemap;\n@@ -22,8 +22,8 @@ use syntax::parse::parser;\n /// If a file is used twice in a crate, it appears only once.\n pub fn list_files<'a>(krate: &'a ast::Crate,\n                       codemap: &codemap::CodeMap)\n-                      -> HashMap<PathBuf, &'a ast::Mod> {\n-    let mut result = HashMap::new();\n+                      -> BTreeMap<PathBuf, &'a ast::Mod> {\n+    let mut result = BTreeMap::new(); // Enforce file order determinism\n     let root_filename: PathBuf = codemap.span_to_filename(krate.span).into();\n     list_submodules(&krate.module,\n                     root_filename.parent().unwrap(),\n@@ -37,7 +37,7 @@ pub fn list_files<'a>(krate: &'a ast::Crate,\n fn list_submodules<'a>(module: &'a ast::Mod,\n                        search_dir: &Path,\n                        codemap: &codemap::CodeMap,\n-                       result: &mut HashMap<PathBuf, &'a ast::Mod>) {\n+                       result: &mut BTreeMap<PathBuf, &'a ast::Mod>) {\n     debug!(\"list_submodules: search_dir: {:?}\", search_dir);\n     for item in &module.items {\n         if let ast::ItemKind::Mod(ref sub_mod) = item.node {"}]}