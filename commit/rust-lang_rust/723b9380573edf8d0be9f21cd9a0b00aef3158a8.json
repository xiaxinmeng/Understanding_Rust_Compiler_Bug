{"sha": "723b9380573edf8d0be9f21cd9a0b00aef3158a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyM2I5MzgwNTczZWRmOGQwYmU5ZjIxY2Q5YTBiMDBhZWYzMTU4YTg=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-12-21T23:58:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-21T23:58:02Z"}, "message": "Merge pull request #2291 from topecongiro/issue-2289\n\nTake the width of block's prefix into account only once", "tree": {"sha": "dd70c06c168c5df60bc1f049d8175ac0c656e130", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd70c06c168c5df60bc1f049d8175ac0c656e130"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/723b9380573edf8d0be9f21cd9a0b00aef3158a8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaPEqKCRBK7hj4Ov3rIwAAdHIIAId6B2QhDC1y/lHAFQ7g8VuD\nqUjlsnEmAisCmvnWn0kV63XCnF2S30lXt6HfJlvC4pbS+MduVsVdUanyR8rKm1Ut\ncozMq3CNEgorBQp9FhHjoeyQN9Q9ov6r9nZFyJgkshH1A2Fm33639LvVF80dtTNH\nqKbcCZwS5ofbUOL/MeUW0fU+72W6JVcOXvmivltX0iCO81sr6UIt7t/4ahaB0LeC\n8M+AQAwMoLSkll/ZOldm3PahWw0QgZINWkFj9BNE5dQkKnZuAA10Ge1g0FE5Sqcz\n/KiY4puIcYS5WMB4nnVKtdcT41IOZjXkdcLAivFq0bzoXvk+f+Bco4+rV6AVYhs=\n=WjcK\n-----END PGP SIGNATURE-----\n", "payload": "tree dd70c06c168c5df60bc1f049d8175ac0c656e130\nparent 23dfa827a70187892ea8407ff621f06aa9df96ef\nparent 366ff40ae7fed8380cb3a421d6924ddb6485c234\nauthor Nick Cameron <nrc@ncameron.org> 1513900682 +1300\ncommitter GitHub <noreply@github.com> 1513900682 +1300\n\nMerge pull request #2291 from topecongiro/issue-2289\n\nTake the width of block's prefix into account only once "}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/723b9380573edf8d0be9f21cd9a0b00aef3158a8", "html_url": "https://github.com/rust-lang/rust/commit/723b9380573edf8d0be9f21cd9a0b00aef3158a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/723b9380573edf8d0be9f21cd9a0b00aef3158a8/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23dfa827a70187892ea8407ff621f06aa9df96ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/23dfa827a70187892ea8407ff621f06aa9df96ef", "html_url": "https://github.com/rust-lang/rust/commit/23dfa827a70187892ea8407ff621f06aa9df96ef"}, {"sha": "366ff40ae7fed8380cb3a421d6924ddb6485c234", "url": "https://api.github.com/repos/rust-lang/rust/commits/366ff40ae7fed8380cb3a421d6924ddb6485c234", "html_url": "https://github.com/rust-lang/rust/commit/366ff40ae7fed8380cb3a421d6924ddb6485c234"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "45804b5b701aa4f92cf9075f5633b1345708a88d", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/723b9380573edf8d0be9f21cd9a0b00aef3158a8/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/723b9380573edf8d0be9f21cd9a0b00aef3158a8/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=723b9380573edf8d0be9f21cd9a0b00aef3158a8", "patch": "@@ -608,7 +608,7 @@ fn rewrite_single_line_block(\n     shape: Shape,\n ) -> Option<String> {\n     if is_simple_block(block, context.codemap) {\n-        let expr_shape = Shape::legacy(shape.width - prefix.len(), shape.indent);\n+        let expr_shape = shape.offset_left(last_line_width(prefix))?;\n         let expr_str = block.stmts[0].rewrite(context, expr_shape)?;\n         let result = format!(\"{}{{ {} }}\", prefix, expr_str);\n         if result.len() <= shape.width && !result.contains('\\n') {\n@@ -654,7 +654,6 @@ impl Rewrite for ast::Block {\n         }\n \n         let prefix = block_prefix(context, self, shape)?;\n-        let shape = shape.offset_left(last_line_width(&prefix))?;\n \n         let result = rewrite_block_with_visitor(context, &prefix, self, shape, true);\n         if let Some(ref result_str) = result {"}, {"sha": "f87c950735f70fd98fa581320944469838d6b2ed", "filename": "tests/source/expr.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/723b9380573edf8d0be9f21cd9a0b00aef3158a8/tests%2Fsource%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/723b9380573edf8d0be9f21cd9a0b00aef3158a8/tests%2Fsource%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr.rs?ref=723b9380573edf8d0be9f21cd9a0b00aef3158a8", "patch": "@@ -108,6 +108,12 @@ fn baz() {\n     unsafe {\n         foo();\n     }\n+\n+    // #2289\n+    let identifier_0 = unsafe { this_is_58_chars_long_and_line_is_93_chars_long_xxxxxxxxxx };\n+    let identifier_1 = unsafe { this_is_59_chars_long_and_line_is_94_chars_long_xxxxxxxxxxx };\n+    let identifier_2 = unsafe { this_is_65_chars_long_and_line_is_100_chars_long_xxxxxxxxxxxxxxxx };\n+    let identifier_3 = unsafe { this_is_66_chars_long_and_line_is_101_chars_long_xxxxxxxxxxxxxxxxx };\n }\n \n // Test some empty blocks."}, {"sha": "5bc89d582229666f9d4a75623776e8b93b029404", "filename": "tests/target/closure.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/723b9380573edf8d0be9f21cd9a0b00aef3158a8/tests%2Ftarget%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/723b9380573edf8d0be9f21cd9a0b00aef3158a8/tests%2Ftarget%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fclosure.rs?ref=723b9380573edf8d0be9f21cd9a0b00aef3158a8", "patch": "@@ -123,9 +123,7 @@ fn foo() {\n \n fn issue1405() {\n     open_raw_fd(fd, b'r').and_then(|file| {\n-        Capture::new_raw(None, |_, err| unsafe {\n-            raw::pcap_fopen_offline(file, err)\n-        })\n+        Capture::new_raw(None, |_, err| unsafe { raw::pcap_fopen_offline(file, err) })\n     });\n }\n \n@@ -176,9 +174,8 @@ fn issue1329() {\n }\n \n fn issue325() {\n-    let f = || unsafe {\n-        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n-    };\n+    let f =\n+        || unsafe { xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx };\n }\n \n fn issue1697() {"}, {"sha": "3c5d85b7d766d6b6488a200b9e9fda6b82d20379", "filename": "tests/target/expr.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/723b9380573edf8d0be9f21cd9a0b00aef3158a8/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/723b9380573edf8d0be9f21cd9a0b00aef3158a8/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=723b9380573edf8d0be9f21cd9a0b00aef3158a8", "patch": "@@ -147,6 +147,13 @@ fn baz() {\n     unsafe {\n         foo();\n     }\n+\n+    // #2289\n+    let identifier_0 = unsafe { this_is_58_chars_long_and_line_is_93_chars_long_xxxxxxxxxx };\n+    let identifier_1 = unsafe { this_is_59_chars_long_and_line_is_94_chars_long_xxxxxxxxxxx };\n+    let identifier_2 = unsafe { this_is_65_chars_long_and_line_is_100_chars_long_xxxxxxxxxxxxxxxx };\n+    let identifier_3 =\n+        unsafe { this_is_66_chars_long_and_line_is_101_chars_long_xxxxxxxxxxxxxxxxx };\n }\n \n // Test some empty blocks."}]}