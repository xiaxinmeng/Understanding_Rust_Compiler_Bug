{"sha": "ab8105ee9703882534203237b3a6494842d65a75", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiODEwNWVlOTcwMzg4MjUzNDIwMzIzN2IzYTY0OTQ4NDJkNjVhNzU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-08T23:45:40Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-13T05:00:32Z"}, "message": "tokenstream: don't depend on pprust", "tree": {"sha": "ad991452866b6af27046a4df79195eea054564a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad991452866b6af27046a4df79195eea054564a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab8105ee9703882534203237b3a6494842d65a75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab8105ee9703882534203237b3a6494842d65a75", "html_url": "https://github.com/rust-lang/rust/commit/ab8105ee9703882534203237b3a6494842d65a75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab8105ee9703882534203237b3a6494842d65a75/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "742ec4b9bf7ae7d693da7fe75e5f974e0fafb9d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/742ec4b9bf7ae7d693da7fe75e5f974e0fafb9d0", "html_url": "https://github.com/rust-lang/rust/commit/742ec4b9bf7ae7d693da7fe75e5f974e0fafb9d0"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "e4fc269d14790eee2436fdf93296cf480fb82a33", "filename": "src/libsyntax/ext/mbe/macro_rules.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab8105ee9703882534203237b3a6494842d65a75/src%2Flibsyntax%2Fext%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8105ee9703882534203237b3a6494842d65a75/src%2Flibsyntax%2Fext%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fmbe%2Fmacro_rules.rs?ref=ab8105ee9703882534203237b3a6494842d65a75", "patch": "@@ -174,7 +174,8 @@ fn generic_extension<'cx>(\n     rhses: &[mbe::TokenTree],\n ) -> Box<dyn MacResult + 'cx> {\n     if cx.trace_macros() {\n-        trace_macros_note(cx, sp, format!(\"expanding `{}! {{ {} }}`\", name, arg));\n+        let msg = format!(\"expanding `{}! {{ {} }}`\", name, pprust::tts_to_string(arg.clone()));\n+        trace_macros_note(cx, sp, msg);\n     }\n \n     // Which arm's failure should we report? (the one furthest along)\n@@ -212,7 +213,8 @@ fn generic_extension<'cx>(\n                 }\n \n                 if cx.trace_macros() {\n-                    trace_macros_note(cx, sp, format!(\"to `{}`\", tts));\n+                    let msg = format!(\"to `{}`\", pprust::tts_to_string(tts.clone()));\n+                    trace_macros_note(cx, sp, msg);\n                 }\n \n                 let directory = Directory {"}, {"sha": "3ed6f4114ae29340b986dd3ca1bb5bee4c532a3a", "filename": "src/libsyntax/ext/proc_macro_server.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab8105ee9703882534203237b3a6494842d65a75/src%2Flibsyntax%2Fext%2Fproc_macro_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8105ee9703882534203237b3a6494842d65a75/src%2Flibsyntax%2Fext%2Fproc_macro_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fproc_macro_server.rs?ref=ab8105ee9703882534203237b3a6494842d65a75", "patch": "@@ -2,6 +2,7 @@ use crate::ast;\n use crate::ext::base::ExtCtxt;\n use crate::parse::{self, token, ParseSess};\n use crate::parse::lexer::comments;\n+use crate::print::pprust;\n use crate::tokenstream::{self, DelimSpan, IsJoint::*, TokenStream, TreeAndJoint};\n \n use errors::Diagnostic;\n@@ -407,7 +408,7 @@ impl server::TokenStream for Rustc<'_> {\n         )\n     }\n     fn to_string(&mut self, stream: &Self::TokenStream) -> String {\n-        stream.to_string()\n+        pprust::tts_to_string(stream.clone())\n     }\n     fn from_token_tree(\n         &mut self,"}, {"sha": "970bacdde13a770837d3f239abe292601693463b", "filename": "src/libsyntax/tokenstream.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ab8105ee9703882534203237b3a6494842d65a75/src%2Flibsyntax%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8105ee9703882534203237b3a6494842d65a75/src%2Flibsyntax%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftokenstream.rs?ref=ab8105ee9703882534203237b3a6494842d65a75", "patch": "@@ -14,7 +14,6 @@\n //! ownership of the original.\n \n use crate::parse::token::{self, DelimToken, Token, TokenKind};\n-use crate::print::pprust;\n \n use syntax_pos::{BytePos, Span, DUMMY_SP};\n #[cfg(target_arch = \"x86_64\")]\n@@ -23,7 +22,7 @@ use rustc_data_structures::sync::Lrc;\n use rustc_serialize::{Decoder, Decodable, Encoder, Encodable};\n use smallvec::{SmallVec, smallvec};\n \n-use std::{fmt, iter, mem};\n+use std::{iter, mem};\n \n #[cfg(test)]\n mod tests;\n@@ -507,12 +506,6 @@ impl Cursor {\n     }\n }\n \n-impl fmt::Display for TokenStream {\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.write_str(&pprust::tts_to_string(self.clone()))\n-    }\n-}\n-\n impl Encodable for TokenStream {\n     fn encode<E: Encoder>(&self, encoder: &mut E) -> Result<(), E::Error> {\n         self.trees().collect::<Vec<_>>().encode(encoder)"}]}