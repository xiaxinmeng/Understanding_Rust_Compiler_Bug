{"sha": "59bfa8a884165bcd0bc73d9065673deb39ff695a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5YmZhOGE4ODQxNjViY2QwYmM3M2Q5MDY1NjczZGViMzlmZjY5NWE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-08-04T06:35:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-04T06:35:53Z"}, "message": "Rollup merge of #52995 - cramertj:smaller-await, r=withoutboats\n\nRemove unnecessary local in await! generator\n\nThis makes `async { await!(future::ready(())) }` 4 bytes instead of 16. [Playground example](http://play.rust-lang.org/?gist=54c075599b9ff390fe505c75d6b98feb&version=nightly&mode=debug&edition=2018)", "tree": {"sha": "711bebb3a1e911388b3d7a132d2aae9e77f2ffed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/711bebb3a1e911388b3d7a132d2aae9e77f2ffed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59bfa8a884165bcd0bc73d9065673deb39ff695a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbZUlJCRBK7hj4Ov3rIwAAdHIIAJsaEiZxHEIpMeWg7bIDghCW\nAew+SGcJYosGnsI7edDGpH/F4tGNOyChWFgoi80a9rWONGKkxrLCDZoadf0nSQyh\nZkufZoXdhigGSlIU2cc1x3kAYnxr3dzSx464r7XOPgvvZURNlCIWY8Ol30Sas0Og\nKtiZ94C7Fv6WyULWAyziVNpsVfvIoGGY8m1E4GbI3nGtOz4cRlatbGdo4WeuvMm/\nV2KYsH+6/g3jhAgtcdU6/n6iP2hsaJR/RfBvvxOS1OPXnBNVkh28pBTsqkOvld+u\nppjuELlyXL94Reh3ApOfjDNx+YG1a9mvCAjfJgUZPCDPICGAJsbG80O/cdJTGic=\n=u30s\n-----END PGP SIGNATURE-----\n", "payload": "tree 711bebb3a1e911388b3d7a132d2aae9e77f2ffed\nparent a3653828265ee42d8db52056211ffc375017cf99\nparent 3a93e914ebe317a2b8267401e65e137961afc851\nauthor kennytm <kennytm@gmail.com> 1533364553 +0800\ncommitter GitHub <noreply@github.com> 1533364553 +0800\n\nRollup merge of #52995 - cramertj:smaller-await, r=withoutboats\n\nRemove unnecessary local in await! generator\n\nThis makes `async { await!(future::ready(())) }` 4 bytes instead of 16. [Playground example](http://play.rust-lang.org/?gist=54c075599b9ff390fe505c75d6b98feb&version=nightly&mode=debug&edition=2018)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59bfa8a884165bcd0bc73d9065673deb39ff695a", "html_url": "https://github.com/rust-lang/rust/commit/59bfa8a884165bcd0bc73d9065673deb39ff695a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59bfa8a884165bcd0bc73d9065673deb39ff695a/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3653828265ee42d8db52056211ffc375017cf99", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3653828265ee42d8db52056211ffc375017cf99", "html_url": "https://github.com/rust-lang/rust/commit/a3653828265ee42d8db52056211ffc375017cf99"}, {"sha": "3a93e914ebe317a2b8267401e65e137961afc851", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a93e914ebe317a2b8267401e65e137961afc851", "html_url": "https://github.com/rust-lang/rust/commit/3a93e914ebe317a2b8267401e65e137961afc851"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "12ea1ea9f9d49cc56a0ef0c4b3890647cd6a5013", "filename": "src/libstd/future.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/59bfa8a884165bcd0bc73d9065673deb39ff695a/src%2Flibstd%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59bfa8a884165bcd0bc73d9065673deb39ff695a/src%2Flibstd%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffuture.rs?ref=59bfa8a884165bcd0bc73d9065673deb39ff695a", "patch": "@@ -108,9 +108,9 @@ where\n \n #[unstable(feature = \"gen_future\", issue = \"50547\")]\n /// Polls a future in the current thread-local task context.\n-pub fn poll_in_task_cx<F>(f: &mut PinMut<F>) -> Poll<F::Output>\n+pub fn poll_in_task_cx<F>(f: PinMut<F>) -> Poll<F::Output>\n where\n     F: Future\n {\n-    get_task_cx(|cx| f.reborrow().poll(cx))\n+    get_task_cx(|cx| f.poll(cx))\n }"}, {"sha": "f15494c5fd7f59beeab250014135eeb81f1ef5da", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/59bfa8a884165bcd0bc73d9065673deb39ff695a/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59bfa8a884165bcd0bc73d9065673deb39ff695a/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=59bfa8a884165bcd0bc73d9065673deb39ff695a", "patch": "@@ -227,14 +227,17 @@ macro_rules! eprintln {\n macro_rules! await {\n     ($e:expr) => { {\n         let mut pinned = $e;\n-        let mut pinned = unsafe { $crate::mem::PinMut::new_unchecked(&mut pinned) };\n         loop {\n-            match $crate::future::poll_in_task_cx(&mut pinned) {\n-                // FIXME(cramertj) prior to stabilizing await, we have to ensure that this\n-                // can't be used to create a generator on stable via `|| await!()`.\n-                $crate::task::Poll::Pending => yield,\n-                $crate::task::Poll::Ready(x) => break x,\n+            if let $crate::task::Poll::Ready(x) =\n+                $crate::future::poll_in_task_cx(unsafe {\n+                    $crate::mem::PinMut::new_unchecked(&mut pinned)\n+                })\n+            {\n+                break x;\n             }\n+            // FIXME(cramertj) prior to stabilizing await, we have to ensure that this\n+            // can't be used to create a generator on stable via `|| await!()`.\n+            yield\n         }\n     } }\n }"}]}