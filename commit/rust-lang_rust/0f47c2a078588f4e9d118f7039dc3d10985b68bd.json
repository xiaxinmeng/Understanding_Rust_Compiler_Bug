{"sha": "0f47c2a078588f4e9d118f7039dc3d10985b68bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNDdjMmEwNzg1ODhmNGU5ZDExOGY3MDM5ZGMzZDEwOTg1YjY4YmQ=", "commit": {"author": {"name": "Hugues de Valon", "email": "hugues.devalon@arm.com", "date": "2018-11-13T15:00:51Z"}, "committer": {"name": "Hugues de Valon", "email": "hugues.devalon@arm.com", "date": "2018-12-04T13:30:59Z"}, "message": "Add Armv8-M Mainline targets\n\nThis commit enables the Armv8-M Mainline architecture profile.\nIt adds two targets:\n  - thumbv8m.main-none-eabi\n  - thumbv8m.main-none-eabihf\n\nThe second one uses the Floating Point Unit for floating point\noperations. It mainly targets the Cortex-M33 processor, which\ncan have the optional Floating Point Unit extension.", "tree": {"sha": "cc0f78a0419a7b8f30ea1b5badc248801f116397", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc0f78a0419a7b8f30ea1b5badc248801f116397"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f47c2a078588f4e9d118f7039dc3d10985b68bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f47c2a078588f4e9d118f7039dc3d10985b68bd", "html_url": "https://github.com/rust-lang/rust/commit/0f47c2a078588f4e9d118f7039dc3d10985b68bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f47c2a078588f4e9d118f7039dc3d10985b68bd/comments", "author": {"login": "hug-dev", "id": 29229160, "node_id": "MDQ6VXNlcjI5MjI5MTYw", "avatar_url": "https://avatars.githubusercontent.com/u/29229160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hug-dev", "html_url": "https://github.com/hug-dev", "followers_url": "https://api.github.com/users/hug-dev/followers", "following_url": "https://api.github.com/users/hug-dev/following{/other_user}", "gists_url": "https://api.github.com/users/hug-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/hug-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hug-dev/subscriptions", "organizations_url": "https://api.github.com/users/hug-dev/orgs", "repos_url": "https://api.github.com/users/hug-dev/repos", "events_url": "https://api.github.com/users/hug-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/hug-dev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hug-dev", "id": 29229160, "node_id": "MDQ6VXNlcjI5MjI5MTYw", "avatar_url": "https://avatars.githubusercontent.com/u/29229160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hug-dev", "html_url": "https://github.com/hug-dev", "followers_url": "https://api.github.com/users/hug-dev/followers", "following_url": "https://api.github.com/users/hug-dev/following{/other_user}", "gists_url": "https://api.github.com/users/hug-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/hug-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hug-dev/subscriptions", "organizations_url": "https://api.github.com/users/hug-dev/orgs", "repos_url": "https://api.github.com/users/hug-dev/repos", "events_url": "https://api.github.com/users/hug-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/hug-dev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58e9832a0d1681916cbcf9d7cf3de7d79dbaa8d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/58e9832a0d1681916cbcf9d7cf3de7d79dbaa8d5", "html_url": "https://github.com/rust-lang/rust/commit/58e9832a0d1681916cbcf9d7cf3de7d79dbaa8d5"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "12604877dfb8e1bdfb5330549b8b3074929aaf10", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f47c2a078588f4e9d118f7039dc3d10985b68bd/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f47c2a078588f4e9d118f7039dc3d10985b68bd/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=0f47c2a078588f4e9d118f7039dc3d10985b68bd", "patch": "@@ -400,6 +400,8 @@ supported_targets! {\n     (\"thumbv7em-none-eabi\", thumbv7em_none_eabi),\n     (\"thumbv7em-none-eabihf\", thumbv7em_none_eabihf),\n     (\"thumbv8m.base-none-eabi\", thumbv8m_base_none_eabi),\n+    (\"thumbv8m.main-none-eabi\", thumbv8m_main_none_eabi),\n+    (\"thumbv8m.main-none-eabihf\", thumbv8m_main_none_eabihf),\n \n     (\"msp430-none-elf\", msp430_none_elf),\n "}, {"sha": "a5c4b8925e248e89cac7a7dc1d36d8744bc94df4", "filename": "src/librustc_target/spec/thumb_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f47c2a078588f4e9d118f7039dc3d10985b68bd/src%2Flibrustc_target%2Fspec%2Fthumb_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f47c2a078588f4e9d118f7039dc3d10985b68bd/src%2Flibrustc_target%2Fspec%2Fthumb_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumb_base.rs?ref=0f47c2a078588f4e9d118f7039dc3d10985b68bd", "patch": "@@ -18,6 +18,7 @@\n // - Cortex-M4(F)\n // - Cortex-M7(F)\n // - Cortex-M23\n+// - Cortex-M33\n //\n // We have opted for these instead of one target per processor (e.g. `cortex-m0`, `cortex-m3`,\n // etc) because the differences between some processors like the cortex-m0 and cortex-m1 are almost"}, {"sha": "6dc203e81bf3f60eb1f2617d5690a8dc005413de", "filename": "src/librustc_target/spec/thumbv8m_main_none_eabi.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0f47c2a078588f4e9d118f7039dc3d10985b68bd/src%2Flibrustc_target%2Fspec%2Fthumbv8m_main_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f47c2a078588f4e9d118f7039dc3d10985b68bd/src%2Flibrustc_target%2Fspec%2Fthumbv8m_main_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv8m_main_none_eabi.rs?ref=0f47c2a078588f4e9d118f7039dc3d10985b68bd", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Targets the Cortex-M33 processor (Armv8-M Mainline architecture profile),\n+// without the Floating Point extension.\n+\n+use spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    Ok(Target {\n+        llvm_target: \"thumbv8m.main-none-eabi\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: String::new(),\n+        target_vendor: String::new(),\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n+\n+        options: TargetOptions {\n+            max_atomic_width: Some(32),\n+            .. super::thumb_base::opts()\n+        },\n+    })\n+}"}, {"sha": "dc7728c2bd5001e617b45cc04609d0ecfbe63352", "filename": "src/librustc_target/spec/thumbv8m_main_none_eabihf.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/0f47c2a078588f4e9d118f7039dc3d10985b68bd/src%2Flibrustc_target%2Fspec%2Fthumbv8m_main_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f47c2a078588f4e9d118f7039dc3d10985b68bd/src%2Flibrustc_target%2Fspec%2Fthumbv8m_main_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv8m_main_none_eabihf.rs?ref=0f47c2a078588f4e9d118f7039dc3d10985b68bd", "patch": "@@ -0,0 +1,40 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Targets the Cortex-M33 processor (Armv8-M Mainline architecture profile),\n+// with the Floating Point extension.\n+\n+use spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    Ok(Target {\n+        llvm_target: \"thumbv8m.main-none-eabihf\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: String::new(),\n+        target_vendor: String::new(),\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n+\n+        options: TargetOptions {\n+            // If the Floating Point extension is implemented in the Cortex-M33\n+            // processor, the Cortex-M33 Technical Reference Manual states that\n+            // the FPU uses the FPv5 architecture, single-precision instructions\n+            // and 16 D registers.\n+            // These parameters map to the following LLVM features.\n+            features: \"+fp-armv8,+fp-only-sp,+d16\".to_string(),\n+            max_atomic_width: Some(32),\n+            .. super::thumb_base::opts()\n+        },\n+    })\n+}"}]}