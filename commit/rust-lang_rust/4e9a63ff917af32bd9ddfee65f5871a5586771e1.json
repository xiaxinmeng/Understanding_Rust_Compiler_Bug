{"sha": "4e9a63ff917af32bd9ddfee65f5871a5586771e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlOWE2M2ZmOTE3YWYzMmJkOWRkZmVlNjVmNTg3MWE1NTg2NzcxZTE=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-27T00:42:01Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-27T14:04:14Z"}, "message": "std: add tests for decoding json enums", "tree": {"sha": "e08cf0f8eb9b6e0fc8d4bb58828cd8d264be43a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e08cf0f8eb9b6e0fc8d4bb58828cd8d264be43a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e9a63ff917af32bd9ddfee65f5871a5586771e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e9a63ff917af32bd9ddfee65f5871a5586771e1", "html_url": "https://github.com/rust-lang/rust/commit/4e9a63ff917af32bd9ddfee65f5871a5586771e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e9a63ff917af32bd9ddfee65f5871a5586771e1/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d6dcefcbb8688b69dd80bc7382a2f593c3b08d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d6dcefcbb8688b69dd80bc7382a2f593c3b08d8", "html_url": "https://github.com/rust-lang/rust/commit/4d6dcefcbb8688b69dd80bc7382a2f593c3b08d8"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "968c6d9e58bb5f0f1f011932b09104c0aec22039", "filename": "src/libstd/json.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a63ff917af32bd9ddfee65f5871a5586771e1/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a63ff917af32bd9ddfee65f5871a5586771e1/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=4e9a63ff917af32bd9ddfee65f5871a5586771e1", "patch": "@@ -851,7 +851,6 @@ impl<'self> serialize::Decoder for Decoder<'self> {\n \n     fn read_enum<T>(&self, name: &str, f: &fn() -> T) -> T {\n         debug!(\"read_enum(%s)\", name);\n-        if name != ~\"option\" { fail!(~\"only supports the option enum\") }\n         f()\n     }\n \n@@ -1720,6 +1719,20 @@ mod tests {\n         assert_eq!(value, Some(~\"jodhpurs\"));\n     }\n \n+    #[test]\n+    fn test_read_enum_no_args() {\n+        let decoder = Decoder(from_str(~\"\\\"Dog\\\"\").unwrap());\n+        let value: Animal = Decodable::decode(&decoder);\n+        assert_eq!(value, Dog);\n+    }\n+\n+    #[test]\n+    fn test_read_enum_multiple_args() {\n+        let decoder = Decoder(from_str(~\"[\\\"Frog\\\",\\\"Henry\\\",349]\").unwrap());\n+        let value: Animal = Decodable::decode(&decoder);\n+        assert_eq!(value, Frog(~\"Henry\", 349));\n+    }\n+\n     #[test]\n     fn test_multiline_errors() {\n         assert_eq!(from_str(~\"{\\n  \\\"foo\\\":\\n \\\"bar\\\"\"),"}]}