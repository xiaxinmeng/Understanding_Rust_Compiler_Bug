{"sha": "0142191e51386ede07e70f61e0b47631a86ff2a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxNDIxOTFlNTEzODZlZGUwN2U3MGY2MWUwYjQ3NjMxYTg2ZmYyYTQ=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2016-03-27T18:20:51Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2016-03-27T18:40:23Z"}, "message": "Remove trailing whitespace for fn types /w non-unit return", "tree": {"sha": "6e99f186a20d50aa686765712c211eca8590ba1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e99f186a20d50aa686765712c211eca8590ba1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0142191e51386ede07e70f61e0b47631a86ff2a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0142191e51386ede07e70f61e0b47631a86ff2a4", "html_url": "https://github.com/rust-lang/rust/commit/0142191e51386ede07e70f61e0b47631a86ff2a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0142191e51386ede07e70f61e0b47631a86ff2a4/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fd95df54ab5de3dddfd47d8ae9fc52fea803844", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fd95df54ab5de3dddfd47d8ae9fc52fea803844", "html_url": "https://github.com/rust-lang/rust/commit/8fd95df54ab5de3dddfd47d8ae9fc52fea803844"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "5a8e456bedba46523bbf523af57d836704cdeff4", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0142191e51386ede07e70f61e0b47631a86ff2a4/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0142191e51386ede07e70f61e0b47631a86ff2a4/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=0142191e51386ede07e70f61e0b47631a86ff2a4", "patch": "@@ -268,7 +268,7 @@ fn format_function_type<'a, I>(inputs: I,\n         FunctionRetTy::Default(..) => String::new(),\n     };\n \n-    let infix = if output.len() + list_str.len() > width {\n+    let infix = if output.len() > 0 && output.len() + list_str.len() > width {\n         format!(\"\\n{}\", (offset - 1).to_string(context.config))\n     } else {\n         String::new()"}, {"sha": "93e155534ecac0f79522ed1fbab203bc196ec9b6", "filename": "tests/source/type_alias.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0142191e51386ede07e70f61e0b47631a86ff2a4/tests%2Fsource%2Ftype_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0142191e51386ede07e70f61e0b47631a86ff2a4/tests%2Fsource%2Ftype_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ftype_alias.rs?ref=0142191e51386ede07e70f61e0b47631a86ff2a4", "patch": "@@ -25,3 +25,5 @@ pub type WithWhereClause<LONGPARAMETERNAME, T> where T: Clone, LONGPARAMETERNAME\n pub type Exactly100CharstoEqualWhereTest<T, U, PARAMET> where T: Clone + Ord + Eq + SomeOtherTrait = Option<T>;\n \n pub type Exactly101CharstoEqualWhereTest<T, U, PARAMETE> where T: Clone + Ord + Eq + SomeOtherTrait = Option<T>;\n+\n+type RegisterPlugin = unsafe fn(pt: *const c_char, plugin: *mut c_void, data: *mut CallbackData);"}, {"sha": "16c77b273c1fa05cc26790b3f9e17d8403da9b10", "filename": "tests/target/type_alias.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0142191e51386ede07e70f61e0b47631a86ff2a4/tests%2Ftarget%2Ftype_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0142191e51386ede07e70f61e0b47631a86ff2a4/tests%2Ftarget%2Ftype_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftype_alias.rs?ref=0142191e51386ede07e70f61e0b47631a86ff2a4", "patch": "@@ -49,3 +49,7 @@ pub type Exactly100CharstoEqualWhereTest<T, U, PARAMET> where T: Clone + Ord + E\n \n pub type Exactly101CharstoEqualWhereTest<T, U, PARAMETE>\n     where T: Clone + Ord + Eq + SomeOtherTrait = Option<T>;\n+\n+type RegisterPlugin = unsafe fn(pt: *const c_char,\n+                                plugin: *mut c_void,\n+                                data: *mut CallbackData);"}]}