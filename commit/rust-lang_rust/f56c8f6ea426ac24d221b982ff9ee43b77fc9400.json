{"sha": "f56c8f6ea426ac24d221b982ff9ee43b77fc9400", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1NmM4ZjZlYTQyNmFjMjRkMjIxYjk4MmZmOWVlNDNiNzdmYzk0MDA=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-07-23T18:19:13Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-07-23T18:19:13Z"}, "message": "Fix another case", "tree": {"sha": "119bbfb8413b14f7da566c6e1433c60609907295", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/119bbfb8413b14f7da566c6e1433c60609907295"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f56c8f6ea426ac24d221b982ff9ee43b77fc9400", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f56c8f6ea426ac24d221b982ff9ee43b77fc9400", "html_url": "https://github.com/rust-lang/rust/commit/f56c8f6ea426ac24d221b982ff9ee43b77fc9400", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f56c8f6ea426ac24d221b982ff9ee43b77fc9400/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b3b6b8d00df27c46d6254c737b40e79bebcced2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b3b6b8d00df27c46d6254c737b40e79bebcced2", "html_url": "https://github.com/rust-lang/rust/commit/5b3b6b8d00df27c46d6254c737b40e79bebcced2"}], "stats": {"total": 75, "additions": 72, "deletions": 3}, "files": [{"sha": "e494cb472a825c89be3008bf9965274e0e376836", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f56c8f6ea426ac24d221b982ff9ee43b77fc9400/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f56c8f6ea426ac24d221b982ff9ee43b77fc9400/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f56c8f6ea426ac24d221b982ff9ee43b77fc9400", "patch": "@@ -7670,8 +7670,9 @@ impl<'a> Parser<'a> {\n         let ret = f(self);\n         let last_token = if self.token_cursor.stack.len() == prev {\n             &mut self.token_cursor.frame.last_token\n-        } else if self.token_cursor.stack.is_empty() {//&& !self.unclosed_delims.is_empty() {\n-            // This can happen with mismatched delimiters (#62881)\n+        } else if self.token_cursor.stack.get(prev).is_none() {\n+            // This can happen due to a bad interaction of two unrelated recovery mechanisms with\n+            // mismatched delimiters *and* recovery lookahead on `pub ident(` likely typo (#62881)\n             return Ok((ret?, TokenStream::new(vec![])));\n         } else {\n             &mut self.token_cursor.stack[prev].last_token\n@@ -7680,7 +7681,15 @@ impl<'a> Parser<'a> {\n         // Pull out the tokens that we've collected from the call to `f` above.\n         let mut collected_tokens = match *last_token {\n             LastToken::Collecting(ref mut v) => mem::take(v),\n-            LastToken::Was(_) => panic!(\"our vector went away?\"),\n+            LastToken::Was(ref was) => {\n+                let msg = format!(\"our vector went away? - found Was({:?})\", was);\n+                debug!(\"collect_tokens: {}\", msg);\n+                self.sess.span_diagnostic.delay_span_bug(self.token.span, &msg);\n+                // This can happen due to a bad interaction of two unrelated recovery mechanisms\n+                // with mismatched delimiters *and* recovery lookahead on `pub ident(` likely typo\n+                // (#62895, different but similar to the case above)\n+                return Ok((ret?, TokenStream::new(vec![])));\n+            }\n         };\n \n         // If we're not at EOF our current token wasn't actually consumed by"}, {"sha": "53f17405d79f4aa8ec07b069f532fc31fd0df807", "filename": "src/test/ui/issues/issue-62895.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f56c8f6ea426ac24d221b982ff9ee43b77fc9400/src%2Ftest%2Fui%2Fissues%2Fissue-62895.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f56c8f6ea426ac24d221b982ff9ee43b77fc9400/src%2Ftest%2Fui%2Fissues%2Fissue-62895.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-62895.rs?ref=f56c8f6ea426ac24d221b982ff9ee43b77fc9400", "patch": "@@ -0,0 +1,11 @@\n+fn main() {}\n+\n+fn v() -> isize { //~ ERROR mismatched types\n+mod _ { //~ ERROR expected identifier\n+pub fn g() -> isizee { //~ ERROR cannot find type `isizee` in this scope\n+mod _ { //~ ERROR expected identifier\n+pub    g() -> is //~ ERROR missing `fn` for function definition\n+(), w20);\n+}\n+(), w20); //~ ERROR expected item, found `;`\n+}"}, {"sha": "7def7b562ca593b3dd99a95a159884204c8a69a3", "filename": "src/test/ui/issues/issue-62895.stderr", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/f56c8f6ea426ac24d221b982ff9ee43b77fc9400/src%2Ftest%2Fui%2Fissues%2Fissue-62895.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f56c8f6ea426ac24d221b982ff9ee43b77fc9400/src%2Ftest%2Fui%2Fissues%2Fissue-62895.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-62895.stderr?ref=f56c8f6ea426ac24d221b982ff9ee43b77fc9400", "patch": "@@ -0,0 +1,49 @@\n+error: expected identifier, found reserved identifier `_`\n+  --> $DIR/issue-62895.rs:4:5\n+   |\n+LL | mod _ {\n+   |     ^ expected identifier, found reserved identifier\n+\n+error: expected identifier, found reserved identifier `_`\n+  --> $DIR/issue-62895.rs:6:5\n+   |\n+LL | mod _ {\n+   |     ^ expected identifier, found reserved identifier\n+\n+error: missing `fn` for function definition\n+  --> $DIR/issue-62895.rs:7:4\n+   |\n+LL | pub    g() -> is\n+   |    ^^^^\n+help: add `fn` here to parse `g` as a public function\n+   |\n+LL | pub fn g() -> is\n+   |     ^^\n+\n+error: expected item, found `;`\n+  --> $DIR/issue-62895.rs:10:9\n+   |\n+LL | (), w20);\n+   |         ^ help: remove this semicolon\n+\n+error[E0412]: cannot find type `isizee` in this scope\n+  --> $DIR/issue-62895.rs:5:15\n+   |\n+LL | pub fn g() -> isizee {\n+   |               ^^^^^^ help: a builtin type with a similar name exists: `isize`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-62895.rs:3:11\n+   |\n+LL | fn v() -> isize {\n+   |    -      ^^^^^ expected isize, found ()\n+   |    |\n+   |    this function's body doesn't return\n+   |\n+   = note: expected type `isize`\n+              found type `()`\n+\n+error: aborting due to 6 previous errors\n+\n+Some errors have detailed explanations: E0308, E0412.\n+For more information about an error, try `rustc --explain E0308`."}]}