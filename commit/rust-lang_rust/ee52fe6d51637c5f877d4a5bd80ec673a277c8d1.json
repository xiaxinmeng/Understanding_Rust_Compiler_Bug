{"sha": "ee52fe6d51637c5f877d4a5bd80ec673a277c8d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlNTJmZTZkNTE2MzdjNWY4NzdkNGE1YmQ4MGVjNjczYTI3N2M4ZDE=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-10T19:46:51Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-11T22:46:12Z"}, "message": "Test failure of unchecked arithmetic intrinsics in const eval", "tree": {"sha": "8612172d12805d8e7baa8acd7566416361d1da56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8612172d12805d8e7baa8acd7566416361d1da56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee52fe6d51637c5f877d4a5bd80ec673a277c8d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee52fe6d51637c5f877d4a5bd80ec673a277c8d1", "html_url": "https://github.com/rust-lang/rust/commit/ee52fe6d51637c5f877d4a5bd80ec673a277c8d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee52fe6d51637c5f877d4a5bd80ec673a277c8d1/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a29424a2265411dda7d7446516ac5fd7499e2b55", "url": "https://api.github.com/repos/rust-lang/rust/commits/a29424a2265411dda7d7446516ac5fd7499e2b55", "html_url": "https://github.com/rust-lang/rust/commit/a29424a2265411dda7d7446516ac5fd7499e2b55"}], "stats": {"total": 160, "additions": 119, "deletions": 41}, "files": [{"sha": "fb09f62854d617a3a443e9b32be5004be9fa8233", "filename": "src/test/ui/consts/const-int-unchecked.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ee52fe6d51637c5f877d4a5bd80ec673a277c8d1/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee52fe6d51637c5f877d4a5bd80ec673a277c8d1/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs?ref=ee52fe6d51637c5f877d4a5bd80ec673a277c8d1", "patch": "@@ -1,4 +1,5 @@\n #![feature(core_intrinsics)]\n+#![feature(const_int_unchecked_arith)]\n \n use std::intrinsics;\n \n@@ -117,4 +118,25 @@ const SHR_I64_NEG_RANDOM: i64 = unsafe { intrinsics::unchecked_shr(5_i64, -30) }\n const SHR_I128_NEG_RANDOM: i128 = unsafe { intrinsics::unchecked_shr(5_i128, -93) };\n //~^ ERROR any use of this value will cause an error\n \n+// Other arithmetic functions:\n+\n+const _: u16 = unsafe { std::intrinsics::unchecked_add(40000u16, 30000) };\n+//~^ ERROR any use of this value will cause an error\n+\n+const _: u32 = unsafe { std::intrinsics::unchecked_sub(14u32, 22) };\n+//~^ ERROR any use of this value will cause an error\n+\n+const _: u16 = unsafe { std::intrinsics::unchecked_mul(300u16, 250u16) };\n+//~^ ERROR any use of this value will cause an error\n+\n+const _: i32 = unsafe { std::intrinsics::unchecked_div(1, 0) };\n+//~^ ERROR any use of this value will cause an error\n+const _: i32 = unsafe { std::intrinsics::unchecked_div(i32::min_value(), -1) };\n+//~^ ERROR any use of this value will cause an error\n+\n+const _: i32 = unsafe { std::intrinsics::unchecked_rem(1, 0) };\n+//~^ ERROR any use of this value will cause an error\n+const _: i32 = unsafe { std::intrinsics::unchecked_rem(i32::min_value(), -1) };\n+//~^ ERROR any use of this value will cause an error\n+\n fn main() {}"}, {"sha": "bf31e0b0732d8be34880cb26b0e17b4faccaa862", "filename": "src/test/ui/consts/const-int-unchecked.stderr", "status": "modified", "additions": 97, "deletions": 41, "changes": 138, "blob_url": "https://github.com/rust-lang/rust/blob/ee52fe6d51637c5f877d4a5bd80ec673a277c8d1/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee52fe6d51637c5f877d4a5bd80ec673a277c8d1/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr?ref=ee52fe6d51637c5f877d4a5bd80ec673a277c8d1", "patch": "@@ -1,5 +1,5 @@\n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:14:29\n+  --> $DIR/const-int-unchecked.rs:15:29\n    |\n LL | const SHL_U8: u8 = unsafe { intrinsics::unchecked_shl(5_u8, 8) };\n    | ----------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n@@ -9,316 +9,372 @@ LL | const SHL_U8: u8 = unsafe { intrinsics::unchecked_shl(5_u8, 8) };\n    = note: `#[deny(const_err)]` on by default\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:16:31\n+  --> $DIR/const-int-unchecked.rs:17:31\n    |\n LL | const SHL_U16: u16 = unsafe { intrinsics::unchecked_shl(5_u16, 16) };\n    | ------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                               |\n    |                               Overflowing shift by 16 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:18:31\n+  --> $DIR/const-int-unchecked.rs:19:31\n    |\n LL | const SHL_U32: u32 = unsafe { intrinsics::unchecked_shl(5_u32, 32) };\n    | ------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                               |\n    |                               Overflowing shift by 32 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:20:31\n+  --> $DIR/const-int-unchecked.rs:21:31\n    |\n LL | const SHL_U64: u64 = unsafe { intrinsics::unchecked_shl(5_u64, 64) };\n    | ------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                               |\n    |                               Overflowing shift by 64 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:22:33\n+  --> $DIR/const-int-unchecked.rs:23:33\n    |\n LL | const SHL_U128: u128 = unsafe { intrinsics::unchecked_shl(5_u128, 128) };\n    | --------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                 |\n    |                                 Overflowing shift by 128 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:27:29\n+  --> $DIR/const-int-unchecked.rs:28:29\n    |\n LL | const SHL_I8: i8 = unsafe { intrinsics::unchecked_shl(5_i8, 8) };\n    | ----------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                             |\n    |                             Overflowing shift by 8 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:29:31\n+  --> $DIR/const-int-unchecked.rs:30:31\n    |\n LL | const SHL_I16: i16 = unsafe { intrinsics::unchecked_shl(5_16, 16) };\n    | ------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                               |\n    |                               Overflowing shift by 16 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:31:31\n+  --> $DIR/const-int-unchecked.rs:32:31\n    |\n LL | const SHL_I32: i32 = unsafe { intrinsics::unchecked_shl(5_i32, 32) };\n    | ------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                               |\n    |                               Overflowing shift by 32 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:33:31\n+  --> $DIR/const-int-unchecked.rs:34:31\n    |\n LL | const SHL_I64: i64 = unsafe { intrinsics::unchecked_shl(5_i64, 64) };\n    | ------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                               |\n    |                               Overflowing shift by 64 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:35:33\n+  --> $DIR/const-int-unchecked.rs:36:33\n    |\n LL | const SHL_I128: i128 = unsafe { intrinsics::unchecked_shl(5_i128, 128) };\n    | --------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                 |\n    |                                 Overflowing shift by 128 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:40:33\n+  --> $DIR/const-int-unchecked.rs:41:33\n    |\n LL | const SHL_I8_NEG: i8 = unsafe { intrinsics::unchecked_shl(5_i8, -1) };\n    | --------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                 |\n    |                                 Overflowing shift by 255 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:42:35\n+  --> $DIR/const-int-unchecked.rs:43:35\n    |\n LL | const SHL_I16_NEG: i16 = unsafe { intrinsics::unchecked_shl(5_16, -1) };\n    | ----------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                   |\n    |                                   Overflowing shift by 65535 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:44:35\n+  --> $DIR/const-int-unchecked.rs:45:35\n    |\n LL | const SHL_I32_NEG: i32 = unsafe { intrinsics::unchecked_shl(5_i32, -1) };\n    | ----------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                   |\n    |                                   Overflowing shift by 4294967295 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:46:35\n+  --> $DIR/const-int-unchecked.rs:47:35\n    |\n LL | const SHL_I64_NEG: i64 = unsafe { intrinsics::unchecked_shl(5_i64, -1) };\n    | ----------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                   |\n    |                                   Overflowing shift by 18446744073709551615 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:48:37\n+  --> $DIR/const-int-unchecked.rs:49:37\n    |\n LL | const SHL_I128_NEG: i128 = unsafe { intrinsics::unchecked_shl(5_i128, -1) };\n    | ------------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                     |\n    |                                     Overflowing shift by 340282366920938463463374607431768211455 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:54:40\n+  --> $DIR/const-int-unchecked.rs:55:40\n    |\n LL | const SHL_I8_NEG_RANDOM: i8 = unsafe { intrinsics::unchecked_shl(5_i8, -6) };\n    | ---------------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                        |\n    |                                        Overflowing shift by 250 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:56:42\n+  --> $DIR/const-int-unchecked.rs:57:42\n    |\n LL | const SHL_I16_NEG_RANDOM: i16 = unsafe { intrinsics::unchecked_shl(5_16, -13) };\n    | -----------------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                          |\n    |                                          Overflowing shift by 65523 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:58:42\n+  --> $DIR/const-int-unchecked.rs:59:42\n    |\n LL | const SHL_I32_NEG_RANDOM: i32 = unsafe { intrinsics::unchecked_shl(5_i32, -25) };\n    | -----------------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                          |\n    |                                          Overflowing shift by 4294967271 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:60:42\n+  --> $DIR/const-int-unchecked.rs:61:42\n    |\n LL | const SHL_I64_NEG_RANDOM: i64 = unsafe { intrinsics::unchecked_shl(5_i64, -30) };\n    | -----------------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                          |\n    |                                          Overflowing shift by 18446744073709551586 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:62:44\n+  --> $DIR/const-int-unchecked.rs:63:44\n    |\n LL | const SHL_I128_NEG_RANDOM: i128 = unsafe { intrinsics::unchecked_shl(5_i128, -93) };\n    | -------------------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                            |\n    |                                            Overflowing shift by 340282366920938463463374607431768211363 in `unchecked_shl`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:69:29\n+  --> $DIR/const-int-unchecked.rs:70:29\n    |\n LL | const SHR_U8: u8 = unsafe { intrinsics::unchecked_shr(5_u8, 8) };\n    | ----------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                             |\n    |                             Overflowing shift by 8 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:71:31\n+  --> $DIR/const-int-unchecked.rs:72:31\n    |\n LL | const SHR_U16: u16 = unsafe { intrinsics::unchecked_shr(5_u16, 16) };\n    | ------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                               |\n    |                               Overflowing shift by 16 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:73:31\n+  --> $DIR/const-int-unchecked.rs:74:31\n    |\n LL | const SHR_U32: u32 = unsafe { intrinsics::unchecked_shr(5_u32, 32) };\n    | ------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                               |\n    |                               Overflowing shift by 32 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:75:31\n+  --> $DIR/const-int-unchecked.rs:76:31\n    |\n LL | const SHR_U64: u64 = unsafe { intrinsics::unchecked_shr(5_u64, 64) };\n    | ------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                               |\n    |                               Overflowing shift by 64 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:77:33\n+  --> $DIR/const-int-unchecked.rs:78:33\n    |\n LL | const SHR_U128: u128 = unsafe { intrinsics::unchecked_shr(5_u128, 128) };\n    | --------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                 |\n    |                                 Overflowing shift by 128 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:82:29\n+  --> $DIR/const-int-unchecked.rs:83:29\n    |\n LL | const SHR_I8: i8 = unsafe { intrinsics::unchecked_shr(5_i8, 8) };\n    | ----------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                             |\n    |                             Overflowing shift by 8 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:84:31\n+  --> $DIR/const-int-unchecked.rs:85:31\n    |\n LL | const SHR_I16: i16 = unsafe { intrinsics::unchecked_shr(5_16, 16) };\n    | ------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                               |\n    |                               Overflowing shift by 16 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:86:31\n+  --> $DIR/const-int-unchecked.rs:87:31\n    |\n LL | const SHR_I32: i32 = unsafe { intrinsics::unchecked_shr(5_i32, 32) };\n    | ------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                               |\n    |                               Overflowing shift by 32 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:88:31\n+  --> $DIR/const-int-unchecked.rs:89:31\n    |\n LL | const SHR_I64: i64 = unsafe { intrinsics::unchecked_shr(5_i64, 64) };\n    | ------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                               |\n    |                               Overflowing shift by 64 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:90:33\n+  --> $DIR/const-int-unchecked.rs:91:33\n    |\n LL | const SHR_I128: i128 = unsafe { intrinsics::unchecked_shr(5_i128, 128) };\n    | --------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                 |\n    |                                 Overflowing shift by 128 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:95:33\n+  --> $DIR/const-int-unchecked.rs:96:33\n    |\n LL | const SHR_I8_NEG: i8 = unsafe { intrinsics::unchecked_shr(5_i8, -1) };\n    | --------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                 |\n    |                                 Overflowing shift by 255 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:97:35\n+  --> $DIR/const-int-unchecked.rs:98:35\n    |\n LL | const SHR_I16_NEG: i16 = unsafe { intrinsics::unchecked_shr(5_16, -1) };\n    | ----------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                   |\n    |                                   Overflowing shift by 65535 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:99:35\n+  --> $DIR/const-int-unchecked.rs:100:35\n    |\n LL | const SHR_I32_NEG: i32 = unsafe { intrinsics::unchecked_shr(5_i32, -1) };\n    | ----------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                   |\n    |                                   Overflowing shift by 4294967295 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:101:35\n+  --> $DIR/const-int-unchecked.rs:102:35\n    |\n LL | const SHR_I64_NEG: i64 = unsafe { intrinsics::unchecked_shr(5_i64, -1) };\n    | ----------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                   |\n    |                                   Overflowing shift by 18446744073709551615 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:103:37\n+  --> $DIR/const-int-unchecked.rs:104:37\n    |\n LL | const SHR_I128_NEG: i128 = unsafe { intrinsics::unchecked_shr(5_i128, -1) };\n    | ------------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                     |\n    |                                     Overflowing shift by 340282366920938463463374607431768211455 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:109:40\n+  --> $DIR/const-int-unchecked.rs:110:40\n    |\n LL | const SHR_I8_NEG_RANDOM: i8 = unsafe { intrinsics::unchecked_shr(5_i8, -6) };\n    | ---------------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                        |\n    |                                        Overflowing shift by 250 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:111:42\n+  --> $DIR/const-int-unchecked.rs:112:42\n    |\n LL | const SHR_I16_NEG_RANDOM: i16 = unsafe { intrinsics::unchecked_shr(5_16, -13) };\n    | -----------------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                          |\n    |                                          Overflowing shift by 65523 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:113:42\n+  --> $DIR/const-int-unchecked.rs:114:42\n    |\n LL | const SHR_I32_NEG_RANDOM: i32 = unsafe { intrinsics::unchecked_shr(5_i32, -25) };\n    | -----------------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                          |\n    |                                          Overflowing shift by 4294967271 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:115:42\n+  --> $DIR/const-int-unchecked.rs:116:42\n    |\n LL | const SHR_I64_NEG_RANDOM: i64 = unsafe { intrinsics::unchecked_shr(5_i64, -30) };\n    | -----------------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                          |\n    |                                          Overflowing shift by 18446744073709551586 in `unchecked_shr`\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:117:44\n+  --> $DIR/const-int-unchecked.rs:118:44\n    |\n LL | const SHR_I128_NEG_RANDOM: i128 = unsafe { intrinsics::unchecked_shr(5_i128, -93) };\n    | -------------------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n    |                                            |\n    |                                            Overflowing shift by 340282366920938463463374607431768211363 in `unchecked_shr`\n \n-error: aborting due to 40 previous errors\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:123:25\n+   |\n+LL | const _: u16 = unsafe { std::intrinsics::unchecked_add(40000u16, 30000) };\n+   | ------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n+   |                         |\n+   |                         Overflow executing `unchecked_add`\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:126:25\n+   |\n+LL | const _: u32 = unsafe { std::intrinsics::unchecked_sub(14u32, 22) };\n+   | ------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n+   |                         |\n+   |                         Overflow executing `unchecked_sub`\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:129:25\n+   |\n+LL | const _: u16 = unsafe { std::intrinsics::unchecked_mul(300u16, 250u16) };\n+   | ------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n+   |                         |\n+   |                         Overflow executing `unchecked_mul`\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:132:25\n+   |\n+LL | const _: i32 = unsafe { std::intrinsics::unchecked_div(1, 0) };\n+   | ------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n+   |                         |\n+   |                         dividing by zero\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:134:25\n+   |\n+LL | const _: i32 = unsafe { std::intrinsics::unchecked_div(i32::min_value(), -1) };\n+   | ------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n+   |                         |\n+   |                         Overflow executing `unchecked_div`\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:137:25\n+   |\n+LL | const _: i32 = unsafe { std::intrinsics::unchecked_rem(1, 0) };\n+   | ------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n+   |                         |\n+   |                         calculating the remainder with a divisor of zero\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:139:25\n+   |\n+LL | const _: i32 = unsafe { std::intrinsics::unchecked_rem(i32::min_value(), -1) };\n+   | ------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n+   |                         |\n+   |                         Overflow executing `unchecked_rem`\n+\n+error: aborting due to 47 previous errors\n "}]}