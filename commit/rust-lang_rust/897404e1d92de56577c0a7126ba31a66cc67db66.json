{"sha": "897404e1d92de56577c0a7126ba31a66cc67db66", "node_id": "C_kwDOAAsO6NoAKDg5NzQwNGUxZDkyZGU1NjU3N2MwYTcxMjZiYTMxYTY2Y2M2N2RiNjY", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-03-31T20:36:12Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-05-08T12:37:16Z"}, "message": "Support `#[expect]` attributes for rustdoc lints (RFC 2383)", "tree": {"sha": "02abe250c0b6c832533df2516b17e506d3f2921f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02abe250c0b6c832533df2516b17e506d3f2921f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/897404e1d92de56577c0a7126ba31a66cc67db66", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEsfZNmu/fmIv8KDcv/Ny/Ka9k1gEFAmJ3uXwACgkQ/Ny/Ka9k\n1gH9Yg//daBHFons8YAaPlgkRvpK/Excq5YggdCXOusvZocyRlF9giLSAC8s1kXL\n09kC+nHDjGHCLUoyHwu0s983By2FdmJVdD84SUvX971yJ9roz0zwyL9mAhsXl2G+\ns3/0ApwsW76YF79UmgrAho0ROlyGbV+GtyXt0YC23jr6vjvlLei+ibWEnx+tQR+/\nH13S5QAHaemi5mT66JYqJEWp3YEVX+Ykk6UBmvsZQiTUAtNIOYLxGWLCb9olDqAZ\nAgqCXsScNBwmjmy9U5vn2xi2po19G6sXqlYXR6/zI8/AUB50n5PZ6HkXlYlIk64l\ny1+x+TRLbH/4WcDMsB6ouNHq+rRZWSw222RkGYneqeKECNhB81gF2pRbsU0+ph0y\ndM1KHMMHylgrsxNfFe3yYO8UyDyncsgR5TXJW2DShUHBpHGcSBGKaKb2ISShdej7\nh/QfMEQx9CbCf85VfbxLM0QArx8xB9xncOXTk2ple7vM2/CAc912Vy2I6PMNOlQ2\nJYL4tr+Gv37PN6O/YhrpcTbCztYRIF5LM4eb7Rz16Aeiwau7cf0RpkC7cgLyNkLo\nRjsvWIhuuffWM37yzPGMmInAbllCu66toCTlzEVbYDi4kf2sSPFolqDtULBY7Uju\n89GzCZRKv0uhKXnHqV5LpOkOPPtwLnsyNPJFWIBO8o+pHr/IVE8=\n=yQtB\n-----END PGP SIGNATURE-----", "payload": "tree 02abe250c0b6c832533df2516b17e506d3f2921f\nparent fb225d13030e991b3ceed631161b356e9993118d\nauthor xFrednet <xFrednet@gmail.com> 1648758972 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1652013436 +0200\n\nSupport `#[expect]` attributes for rustdoc lints (RFC 2383)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/897404e1d92de56577c0a7126ba31a66cc67db66", "html_url": "https://github.com/rust-lang/rust/commit/897404e1d92de56577c0a7126ba31a66cc67db66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/897404e1d92de56577c0a7126ba31a66cc67db66/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb225d13030e991b3ceed631161b356e9993118d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb225d13030e991b3ceed631161b356e9993118d", "html_url": "https://github.com/rust-lang/rust/commit/fb225d13030e991b3ceed631161b356e9993118d"}], "stats": {"total": 189, "additions": 189, "deletions": 0}, "files": [{"sha": "17644aeed85691dc23abe80ab30316a608c9c693", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/897404e1d92de56577c0a7126ba31a66cc67db66/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/897404e1d92de56577c0a7126ba31a66cc67db66/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=897404e1d92de56577c0a7126ba31a66cc67db66", "patch": "@@ -232,6 +232,8 @@ crate fn create_config(\n         rustc_lint::builtin::RENAMED_AND_REMOVED_LINTS.name.to_string(),\n         rustc_lint::builtin::UNKNOWN_LINTS.name.to_string(),\n         rustc_lint::builtin::UNEXPECTED_CFGS.name.to_string(),\n+        // this lint is needed to support `#[expect]` attributes\n+        rustc_lint::builtin::UNFULFILLED_LINT_EXPECTATIONS.name.to_string(),\n     ];\n     lints_to_show.extend(crate::lint::RUSTDOC_LINTS.iter().map(|lint| lint.name.to_string()));\n \n@@ -463,6 +465,8 @@ crate fn run_global_ctxt(\n         }\n     }\n \n+    tcx.sess.time(\"check_lint_expectations\", || tcx.check_expectations(Some(sym::rustdoc)));\n+\n     if tcx.sess.diagnostic().has_errors_or_lint_errors().is_some() {\n         rustc_errors::FatalError.raise();\n     }"}, {"sha": "0901ac3640fdda75db09625d7e7de9546675f6b1", "filename": "src/test/rustdoc-ui/expect-tool-lint-rfc-2383.rs", "status": "added", "additions": 157, "deletions": 0, "changes": 157, "blob_url": "https://github.com/rust-lang/rust/blob/897404e1d92de56577c0a7126ba31a66cc67db66/src%2Ftest%2Frustdoc-ui%2Fexpect-tool-lint-rfc-2383.rs", "raw_url": "https://github.com/rust-lang/rust/raw/897404e1d92de56577c0a7126ba31a66cc67db66/src%2Ftest%2Frustdoc-ui%2Fexpect-tool-lint-rfc-2383.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fexpect-tool-lint-rfc-2383.rs?ref=897404e1d92de56577c0a7126ba31a66cc67db66", "patch": "@@ -0,0 +1,157 @@\n+// check-pass\n+#![feature(lint_reasons)]\n+\n+//! This file tests the `#[expect]` attribute implementation for tool lints. The same\n+//! file is used to test clippy and rustdoc. Any changes to this file should be synced\n+//! to the other test files as well.\n+//!\n+//! Expectations:\n+//! * rustc: only rustc lint expectations are emitted\n+//! * clippy: rustc and Clippy's expectations are emitted\n+//! * rustdoc: only rustdoc lint expectations are emitted\n+//!\n+//! This test can't cover every lint from Clippy, rustdoc and potentially other\n+//! tools that will be developed. This therefore only tests a small subset of lints\n+\n+#![expect(rustdoc::missing_crate_level_docs)]\n+//~^ WARNING this lint expectation is unfulfilled [unfulfilled_lint_expectations]\n+//~| NOTE `#[warn(unfulfilled_lint_expectations)]` on by default\n+\n+mod rustc_ok {\n+    //! See <https://doc.rust-lang.org/rustc/lints/index.html>\n+\n+    #[expect(dead_code)]\n+    pub fn rustc_lints() {\n+        let x = 42.0;\n+\n+        #[expect(illegal_floating_point_literal_pattern)]\n+        match x {\n+            5.0 => {}\n+            6.0 => {}\n+            _ => {}\n+        }\n+    }\n+}\n+\n+mod rustc_warn {\n+    //! See <https://doc.rust-lang.org/rustc/lints/index.html>\n+\n+    #[expect(dead_code)]\n+    pub fn rustc_lints() {\n+        let x = 42;\n+\n+        #[expect(illegal_floating_point_literal_pattern)]\n+        match x {\n+            5 => {}\n+            6 => {}\n+            _ => {}\n+        }\n+    }\n+}\n+\n+pub mod rustdoc_ok {\n+    //! See <https://doc.rust-lang.org/rustdoc/lints.html>\n+\n+    #[expect(rustdoc::broken_intra_doc_links)]\n+    /// I want to link to [`Nonexistent`] but it doesn't exist!\n+    pub fn foo() {}\n+\n+    #[expect(rustdoc::invalid_html_tags)]\n+    /// <h1>\n+    pub fn bar() {}\n+\n+    #[expect(rustdoc::bare_urls)]\n+    /// http://example.org\n+    pub fn baz() {}\n+}\n+\n+pub mod rustdoc_warn {\n+    //! See <https://doc.rust-lang.org/rustdoc/lints.html>\n+\n+    #[expect(rustdoc::broken_intra_doc_links)]\n+    //~^ WARNING this lint expectation is unfulfilled [unfulfilled_lint_expectations]\n+    /// I want to link to [`bar`] but it doesn't exist!\n+    pub fn foo() {}\n+\n+    #[expect(rustdoc::invalid_html_tags)]\n+    //~^ WARNING this lint expectation is unfulfilled [unfulfilled_lint_expectations]\n+    /// <h1></h1>\n+    pub fn bar() {}\n+\n+    #[expect(rustdoc::bare_urls)]\n+    //~^ WARNING this lint expectation is unfulfilled [unfulfilled_lint_expectations]\n+    /// <http://example.org>\n+    pub fn baz() {}\n+}\n+\n+mod clippy_ok {\n+    //! See <https://rust-lang.github.io/rust-clippy/master/index.html>\n+\n+    #[expect(clippy::almost_swapped)]\n+    fn foo() {\n+        let mut a = 0;\n+        let mut b = 9;\n+        a = b;\n+        b = a;\n+    }\n+\n+    #[expect(clippy::bytes_nth)]\n+    fn bar() {\n+        let _ = \"Hello\".bytes().nth(3);\n+    }\n+\n+    #[expect(clippy::if_same_then_else)]\n+    fn baz() {\n+        let _ = if true {\n+            42\n+        } else {\n+            42\n+        };\n+    }\n+\n+    #[expect(clippy::logic_bug)]\n+    fn burger() {\n+        let a = false;\n+        let b = true;\n+\n+        if a && b || a {}\n+    }\n+}\n+\n+mod clippy_warn {\n+    //! See <https://rust-lang.github.io/rust-clippy/master/index.html>\n+\n+    #[expect(clippy::almost_swapped)]\n+    fn foo() {\n+        let mut a = 0;\n+        let mut b = 9;\n+        a = b;\n+    }\n+\n+    #[expect(clippy::bytes_nth)]\n+    fn bar() {\n+        let _ = \"Hello\".as_bytes().get(3);\n+    }\n+\n+    #[expect(clippy::if_same_then_else)]\n+    fn baz() {\n+        let _ = if true {\n+            33\n+        } else {\n+            42\n+        };\n+    }\n+\n+    #[expect(clippy::logic_bug)]\n+    fn burger() {\n+        let a = false;\n+        let b = true;\n+        let c = false;\n+\n+        if a && b || c {}\n+    }\n+}\n+\n+fn main() {\n+    rustc_warn::rustc_lints();\n+}"}, {"sha": "efc5f349f4f44437e301e1244a72399cebb1b8a5", "filename": "src/test/rustdoc-ui/expect-tool-lint-rfc-2383.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/897404e1d92de56577c0a7126ba31a66cc67db66/src%2Ftest%2Frustdoc-ui%2Fexpect-tool-lint-rfc-2383.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/897404e1d92de56577c0a7126ba31a66cc67db66/src%2Ftest%2Frustdoc-ui%2Fexpect-tool-lint-rfc-2383.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fexpect-tool-lint-rfc-2383.stderr?ref=897404e1d92de56577c0a7126ba31a66cc67db66", "patch": "@@ -0,0 +1,28 @@\n+warning: this lint expectation is unfulfilled\n+  --> $DIR/expect-tool-lint-rfc-2383.rs:16:11\n+   |\n+LL | #![expect(rustdoc::missing_crate_level_docs)]\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(unfulfilled_lint_expectations)]` on by default\n+\n+warning: this lint expectation is unfulfilled\n+  --> $DIR/expect-tool-lint-rfc-2383.rs:71:14\n+   |\n+LL |     #[expect(rustdoc::broken_intra_doc_links)]\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: this lint expectation is unfulfilled\n+  --> $DIR/expect-tool-lint-rfc-2383.rs:76:14\n+   |\n+LL |     #[expect(rustdoc::invalid_html_tags)]\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: this lint expectation is unfulfilled\n+  --> $DIR/expect-tool-lint-rfc-2383.rs:81:14\n+   |\n+LL |     #[expect(rustdoc::bare_urls)]\n+   |              ^^^^^^^^^^^^^^^^^^\n+\n+warning: 4 warnings emitted\n+"}]}