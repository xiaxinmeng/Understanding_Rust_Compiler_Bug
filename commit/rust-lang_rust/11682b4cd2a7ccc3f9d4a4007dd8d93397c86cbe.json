{"sha": "11682b4cd2a7ccc3f9d4a4007dd8d93397c86cbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExNjgyYjRjZDJhN2NjYzNmOWQ0YTQwMDdkZDhkOTMzOTdjODZjYmU=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-02-27T05:41:07Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-02-27T05:41:07Z"}, "message": "Add `rustfmt::skip` to outer attr format tests", "tree": {"sha": "b5c954969b345139eac671a9a455b647d083f7c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5c954969b345139eac671a9a455b647d083f7c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11682b4cd2a7ccc3f9d4a4007dd8d93397c86cbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11682b4cd2a7ccc3f9d4a4007dd8d93397c86cbe", "html_url": "https://github.com/rust-lang/rust/commit/11682b4cd2a7ccc3f9d4a4007dd8d93397c86cbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11682b4cd2a7ccc3f9d4a4007dd8d93397c86cbe/comments", "author": null, "committer": null, "parents": [{"sha": "6e8931c5f5d72a324d06ea36216c0156fbefaac1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e8931c5f5d72a324d06ea36216c0156fbefaac1", "html_url": "https://github.com/rust-lang/rust/commit/6e8931c5f5d72a324d06ea36216c0156fbefaac1"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "37754972b877797b453d277b500d390c8a006406", "filename": "ci/base-tests.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11682b4cd2a7ccc3f9d4a4007dd8d93397c86cbe/ci%2Fbase-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/11682b4cd2a7ccc3f9d4a4007dd8d93397c86cbe/ci%2Fbase-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbase-tests.sh?ref=11682b4cd2a7ccc3f9d4a4007dd8d93397c86cbe", "patch": "@@ -59,7 +59,7 @@ rustup override set nightly\n # avoid loop spam and allow cmds with exit status != 0\n set +ex\n \n-for file in `find tests -not -path \"tests/ui/empty_line_after_outer_attribute.rs\" -not -path \"tests/ui/double_parens.rs\" -not -path \"tests/ui/doc.rs\" -not -path \"tests/ui/unused_unit.rs\" | grep \"\\.rs$\"` ; do\n+for file in `find tests -not -path \"tests/ui/double_parens.rs\" -not -path \"tests/ui/doc.rs\" -not -path \"tests/ui/unused_unit.rs\" | grep \"\\.rs$\"` ; do\n   rustfmt ${file} --check\n   if [ $? -ne 0 ]; then\n     echo \"${file} needs reformatting!\""}, {"sha": "5343dff9da1db26078505730abf8edcea2383d2c", "filename": "tests/ui/empty_line_after_outer_attribute.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/11682b4cd2a7ccc3f9d4a4007dd8d93397c86cbe/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11682b4cd2a7ccc3f9d4a4007dd8d93397c86cbe/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_line_after_outer_attribute.rs?ref=11682b4cd2a7ccc3f9d4a4007dd8d93397c86cbe", "patch": "@@ -1,5 +1,8 @@\n #![warn(clippy::empty_line_after_outer_attr)]\n #![allow(clippy::assertions_on_constants)]\n+#![feature(custom_inner_attributes)]\n+#![rustfmt::skip]\n+\n // This should produce a warning\n #[crate_type = \"lib\"]\n "}, {"sha": "72692310391b126e9a894cef3bb9715233fec0ad", "filename": "tests/ui/empty_line_after_outer_attribute.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/11682b4cd2a7ccc3f9d4a4007dd8d93397c86cbe/tests%2Fui%2Fempty_line_after_outer_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11682b4cd2a7ccc3f9d4a4007dd8d93397c86cbe/tests%2Fui%2Fempty_line_after_outer_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_line_after_outer_attribute.stderr?ref=11682b4cd2a7ccc3f9d4a4007dd8d93397c86cbe", "patch": "@@ -1,5 +1,5 @@\n error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n-  --> $DIR/empty_line_after_outer_attribute.rs:4:1\n+  --> $DIR/empty_line_after_outer_attribute.rs:7:1\n    |\n LL | / #[crate_type = \"lib\"]\n LL | |\n@@ -10,15 +10,15 @@ LL | | fn with_one_newline_and_comment() { assert!(true) }\n    = note: `-D clippy::empty-line-after-outer-attr` implied by `-D warnings`\n \n error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n-  --> $DIR/empty_line_after_outer_attribute.rs:16:1\n+  --> $DIR/empty_line_after_outer_attribute.rs:19:1\n    |\n LL | / #[crate_type = \"lib\"]\n LL | |\n LL | | fn with_one_newline() { assert!(true) }\n    | |_\n \n error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n-  --> $DIR/empty_line_after_outer_attribute.rs:21:1\n+  --> $DIR/empty_line_after_outer_attribute.rs:24:1\n    |\n LL | / #[crate_type = \"lib\"]\n LL | |\n@@ -27,23 +27,23 @@ LL | | fn with_two_newlines() { assert!(true) }\n    | |_\n \n error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n-  --> $DIR/empty_line_after_outer_attribute.rs:28:1\n+  --> $DIR/empty_line_after_outer_attribute.rs:31:1\n    |\n LL | / #[crate_type = \"lib\"]\n LL | |\n LL | | enum Baz {\n    | |_\n \n error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n-  --> $DIR/empty_line_after_outer_attribute.rs:36:1\n+  --> $DIR/empty_line_after_outer_attribute.rs:39:1\n    |\n LL | / #[crate_type = \"lib\"]\n LL | |\n LL | | struct Foo {\n    | |_\n \n error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n-  --> $DIR/empty_line_after_outer_attribute.rs:44:1\n+  --> $DIR/empty_line_after_outer_attribute.rs:47:1\n    |\n LL | / #[crate_type = \"lib\"]\n LL | |"}]}