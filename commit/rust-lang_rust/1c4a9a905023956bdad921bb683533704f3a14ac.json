{"sha": "1c4a9a905023956bdad921bb683533704f3a14ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjNGE5YTkwNTAyMzk1NmJkYWQ5MjFiYjY4MzUzMzcwNGYzYTE0YWM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-29T03:32:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-29T03:32:54Z"}, "message": "Rollup merge of #63965 - loganwendholt:linker-script-fix, r=michaelwoerister\n\nPrevent syntax error in LD linker version script\n\nAs discussed in #63925, there is an edge case in which an invalid LD version script is generated when building a `cdylib` with no exported symbols. This PR makes a slight modification to the  LD version script generation by first checking to see if any symbols need to be exported. If not, the `global` section of the linker script is simply omitted, and the syntax error is averted.", "tree": {"sha": "eb14e18654b3d03ef50b412f55d4fdf8adf072e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb14e18654b3d03ef50b412f55d4fdf8adf072e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c4a9a905023956bdad921bb683533704f3a14ac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdZ0dmCRBK7hj4Ov3rIwAAdHIIAJgCp4fcQEc+GtxQuUKYB+zJ\nlVp2d3dZODDsNp/aJZUrheqU6qPiqhudD2/Rq0WyCdwQ4gqbsCKRvnmwm1BRoXrf\nFEKrthnL97osNzLFXAKzd+nkH+291qVEWBYI1O9B1K0nPkEm6YRj4yFJLgptJHul\nASU+gQOsjMpbvuDX5+RWeVEvzkji5xpE9pZc3tgV9Vi1q6GkuTBDsv/fPm+7gVEt\nvGm5MBN6FiNOz161cVmAT/9hjBi3ZziSh45ayTtENGDZ7R9Ymg3NROiI5Iav7MKq\nEVI1r2yV8TRkEffg/bH1bJ7gEVOBrNXARD6STYiZ5vaAL3Eyr+P37aXTcb9DYYM=\n=udE8\n-----END PGP SIGNATURE-----\n", "payload": "tree eb14e18654b3d03ef50b412f55d4fdf8adf072e6\nparent f0e2895cf892e8abf0d19d8e09b1a58dd618f01e\nparent 42bd6fa22b753858bd57aec5e987247fd6a00897\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1567049574 +0200\ncommitter GitHub <noreply@github.com> 1567049574 +0200\n\nRollup merge of #63965 - loganwendholt:linker-script-fix, r=michaelwoerister\n\nPrevent syntax error in LD linker version script\n\nAs discussed in #63925, there is an edge case in which an invalid LD version script is generated when building a `cdylib` with no exported symbols. This PR makes a slight modification to the  LD version script generation by first checking to see if any symbols need to be exported. If not, the `global` section of the linker script is simply omitted, and the syntax error is averted.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c4a9a905023956bdad921bb683533704f3a14ac", "html_url": "https://github.com/rust-lang/rust/commit/1c4a9a905023956bdad921bb683533704f3a14ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c4a9a905023956bdad921bb683533704f3a14ac/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0e2895cf892e8abf0d19d8e09b1a58dd618f01e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0e2895cf892e8abf0d19d8e09b1a58dd618f01e", "html_url": "https://github.com/rust-lang/rust/commit/f0e2895cf892e8abf0d19d8e09b1a58dd618f01e"}, {"sha": "42bd6fa22b753858bd57aec5e987247fd6a00897", "url": "https://api.github.com/repos/rust-lang/rust/commits/42bd6fa22b753858bd57aec5e987247fd6a00897", "html_url": "https://github.com/rust-lang/rust/commit/42bd6fa22b753858bd57aec5e987247fd6a00897"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "de481d2262478630d74266e20b1e1342678d048e", "filename": "src/librustc_codegen_ssa/back/linker.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1c4a9a905023956bdad921bb683533704f3a14ac/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4a9a905023956bdad921bb683533704f3a14ac/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs?ref=1c4a9a905023956bdad921bb683533704f3a14ac", "patch": "@@ -430,10 +430,13 @@ impl<'a> Linker for GccLinker<'a> {\n             // Write an LD version script\n             let res: io::Result<()> = try {\n                 let mut f = BufWriter::new(File::create(&path)?);\n-                writeln!(f, \"{{\\n  global:\")?;\n-                for sym in self.info.exports[&crate_type].iter() {\n-                    debug!(\"    {};\", sym);\n-                    writeln!(f, \"    {};\", sym)?;\n+                writeln!(f, \"{{\")?;\n+                if !self.info.exports[&crate_type].is_empty() {\n+                    writeln!(f, \"  global:\")?;\n+                    for sym in self.info.exports[&crate_type].iter() {\n+                        debug!(\"    {};\", sym);\n+                        writeln!(f, \"    {};\", sym)?;\n+                    }\n                 }\n                 writeln!(f, \"\\n  local:\\n    *;\\n}};\")?;\n             };"}]}