{"sha": "9fe206956f791a7974d3ba3a2534c1e32b09a3a0", "node_id": "C_kwDOAAsO6NoAKDlmZTIwNjk1NmY3OTFhNzk3NGQzYmEzYTI1MzRjMWUzMmIwOWEzYTA", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-03-15T11:53:39Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-03-15T13:34:31Z"}, "message": "fix: Fix ast::IfExpr child accessors", "tree": {"sha": "ed9a5cf6448b67f31fb6fedd1728e51f4ba56b6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed9a5cf6448b67f31fb6fedd1728e51f4ba56b6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fe206956f791a7974d3ba3a2534c1e32b09a3a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fe206956f791a7974d3ba3a2534c1e32b09a3a0", "html_url": "https://github.com/rust-lang/rust/commit/9fe206956f791a7974d3ba3a2534c1e32b09a3a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fe206956f791a7974d3ba3a2534c1e32b09a3a0/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1787c14e725e4ac416828f986b095a23ecd11494", "url": "https://api.github.com/repos/rust-lang/rust/commits/1787c14e725e4ac416828f986b095a23ecd11494", "html_url": "https://github.com/rust-lang/rust/commit/1787c14e725e4ac416828f986b095a23ecd11494"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "b273f21768c686772c70d11ba6b67c43cb1bd67a", "filename": "crates/hir-expand/src/fixup.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9fe206956f791a7974d3ba3a2534c1e32b09a3a0/crates%2Fhir-expand%2Fsrc%2Ffixup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe206956f791a7974d3ba3a2534c1e32b09a3a0/crates%2Fhir-expand%2Fsrc%2Ffixup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Ffixup.rs?ref=9fe206956f791a7974d3ba3a2534c1e32b09a3a0", "patch": "@@ -636,9 +636,8 @@ fn foo() {\n     if {}\n }\n \"#,\n-            // the {} gets parsed as the condition, I think?\n             expect![[r#\"\n-fn foo () {if {} {}}\n+fn foo () {if __ra_fixup {} {}}\n \"#]],\n         )\n     }"}, {"sha": "c43d0830b9e24864ff3148879cab369d6dadc968", "filename": "crates/syntax/src/ast/expr_ext.rs", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/9fe206956f791a7974d3ba3a2534c1e32b09a3a0/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe206956f791a7974d3ba3a2534c1e32b09a3a0/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs?ref=9fe206956f791a7974d3ba3a2534c1e32b09a3a0", "patch": "@@ -48,23 +48,30 @@ impl From<ast::IfExpr> for ElseBranch {\n }\n \n impl ast::IfExpr {\n-    pub fn then_branch(&self) -> Option<ast::BlockExpr> {\n-        self.children_after_condition().next()\n+    pub fn condition(&self) -> Option<ast::Expr> {\n+        // If the condition is a BlockExpr, check if the then body is missing.\n+        // If it is assume the condition is the expression that is missing instead.\n+        let mut exprs = support::children(self.syntax());\n+        let first = exprs.next();\n+        match first {\n+            Some(ast::Expr::BlockExpr(_)) => exprs.next().and(first),\n+            first => first,\n+        }\n     }\n \n-    pub fn else_branch(&self) -> Option<ElseBranch> {\n-        let res = match self.children_after_condition().nth(1) {\n-            Some(block) => ElseBranch::Block(block),\n-            None => {\n-                let elif = self.children_after_condition().next()?;\n-                ElseBranch::IfExpr(elif)\n-            }\n-        };\n-        Some(res)\n+    pub fn then_branch(&self) -> Option<ast::BlockExpr> {\n+        match support::children(self.syntax()).nth(1)? {\n+            ast::Expr::BlockExpr(block) => Some(block),\n+            _ => None,\n+        }\n     }\n \n-    fn children_after_condition<N: AstNode>(&self) -> impl Iterator<Item = N> {\n-        self.syntax().children().skip(1).filter_map(N::cast)\n+    pub fn else_branch(&self) -> Option<ElseBranch> {\n+        match support::children(self.syntax()).nth(2)? {\n+            ast::Expr::BlockExpr(block) => Some(ElseBranch::Block(block)),\n+            ast::Expr::IfExpr(elif) => Some(ElseBranch::IfExpr(elif)),\n+            _ => None,\n+        }\n     }\n }\n "}, {"sha": "3308077da5b12457a7f129cac2b5ad56d73d675e", "filename": "crates/syntax/src/ast/node_ext.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9fe206956f791a7974d3ba3a2534c1e32b09a3a0/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe206956f791a7974d3ba3a2534c1e32b09a3a0/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs?ref=9fe206956f791a7974d3ba3a2534c1e32b09a3a0", "patch": "@@ -937,12 +937,6 @@ impl From<ast::Adt> for ast::Item {\n     }\n }\n \n-impl ast::IfExpr {\n-    pub fn condition(&self) -> Option<ast::Expr> {\n-        support::child(&self.syntax)\n-    }\n-}\n-\n impl ast::MatchGuard {\n     pub fn condition(&self) -> Option<ast::Expr> {\n         support::child(&self.syntax)"}]}