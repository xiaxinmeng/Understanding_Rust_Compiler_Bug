{"sha": "5c6be13b29c44920a39b9b9e95931f734b60d92b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNmJlMTNiMjljNDQ5MjBhMzliOWI5ZTk1OTMxZjczNGI2MGQ5MmI=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-08-30T22:54:16Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-08-31T04:11:28Z"}, "message": "libcore: add result::unwrap_err.", "tree": {"sha": "737b8268b33c22fa47577b3ad64d5e9f9253276a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/737b8268b33c22fa47577b3ad64d5e9f9253276a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c6be13b29c44920a39b9b9e95931f734b60d92b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c6be13b29c44920a39b9b9e95931f734b60d92b", "html_url": "https://github.com/rust-lang/rust/commit/5c6be13b29c44920a39b9b9e95931f734b60d92b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c6be13b29c44920a39b9b9e95931f734b60d92b/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7649860339a0e298be75522d41d243b3bbb178b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7649860339a0e298be75522d41d243b3bbb178b6", "html_url": "https://github.com/rust-lang/rust/commit/7649860339a0e298be75522d41d243b3bbb178b6"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "ba8e796313328def13be69e9ae24daa209aaa73b", "filename": "src/libcore/result.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5c6be13b29c44920a39b9b9e95931f734b60d92b/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6be13b29c44920a39b9b9e95931f734b60d92b/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=5c6be13b29c44920a39b9b9e95931f734b60d92b", "patch": "@@ -348,6 +348,14 @@ fn unwrap<T, U>(+res: Result<T, U>) -> T {\n     }\n }\n \n+/// Unwraps a result, assuming it is an `err(U)`\n+fn unwrap_err<T, U>(+res: Result<T, U>) -> U {\n+    match move res {\n+      Err(move u) => u,\n+      Ok(_) => fail ~\"unwrap called on an ok result\"\n+    }\n+}\n+\n impl<T:Eq,U:Eq> Result<T,U> : Eq {\n     pure fn eq(&&other: Result<T,U>) -> bool {\n         match self {"}]}