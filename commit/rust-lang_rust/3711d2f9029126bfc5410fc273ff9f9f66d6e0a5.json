{"sha": "3711d2f9029126bfc5410fc273ff9f9f66d6e0a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3MTFkMmY5MDI5MTI2YmZjNTQxMGZjMjczZmY5ZjlmNjZkNmUwYTU=", "commit": {"author": {"name": "djzin", "email": "noreply@github.com", "date": "2016-12-23T21:19:21Z"}, "committer": {"name": "djzin", "email": "noreply@github.com", "date": "2017-01-14T16:51:50Z"}, "message": "impl RangeArgument for (Bound<T>, Bound<T>)", "tree": {"sha": "944cdb8d3d07fd517f08d07f13be6f61b4d1d543", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/944cdb8d3d07fd517f08d07f13be6f61b4d1d543"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3711d2f9029126bfc5410fc273ff9f9f66d6e0a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3711d2f9029126bfc5410fc273ff9f9f66d6e0a5", "html_url": "https://github.com/rust-lang/rust/commit/3711d2f9029126bfc5410fc273ff9f9f66d6e0a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3711d2f9029126bfc5410fc273ff9f9f66d6e0a5/comments", "author": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35f23e8211147372f1e8917f7b41593a1aec9865", "url": "https://api.github.com/repos/rust-lang/rust/commits/35f23e8211147372f1e8917f7b41593a1aec9865", "html_url": "https://github.com/rust-lang/rust/commit/35f23e8211147372f1e8917f7b41593a1aec9865"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "92716538147aa8902fb95610351d673aa0353fc8", "filename": "src/libcollections/range.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3711d2f9029126bfc5410fc273ff9f9f66d6e0a5/src%2Flibcollections%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3711d2f9029126bfc5410fc273ff9f9f66d6e0a5/src%2Flibcollections%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Frange.rs?ref=3711d2f9029126bfc5410fc273ff9f9f66d6e0a5", "patch": "@@ -91,3 +91,21 @@ impl<T> RangeArgument<T> for Range<T> {\n         Excluded(&self.end)\n     }\n }\n+\n+impl<T> RangeArgument<T> for (Bound<T>, Bound<T>) {\n+    fn start(&self) -> Bound<&T> {\n+        match *self {\n+            (Included(ref start), _) => Included(start),\n+            (Excluded(ref start), _) => Excluded(start),\n+            (Unbounded, _)           => Unbounded,\n+        }\n+    }\n+\n+    fn end(&self) -> Bound<&T> {\n+        match *self {\n+            (_, Included(ref end)) => Included(end),\n+            (_, Excluded(ref end)) => Excluded(end),\n+            (_, Unbounded)         => Unbounded,\n+        }\n+    }\n+}"}]}