{"sha": "3784067edcbcd0614f6c4c88f6445ca17ae27ff6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3ODQwNjdlZGNiY2QwNjE0ZjZjNGM4OGY2NDQ1Y2ExN2FlMjdmZjY=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2016-09-02T19:01:03Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2016-09-06T21:11:19Z"}, "message": "Point macros 1.1 errors to the input item\n\nBefore:\n\n```rust\nerror[E0106]: missing lifetime specifier\n  --> src/main.rs:10:10\n   |\n10 | #[derive(Serialize, Deserialize)]\n   |          ^ expected lifetime parameter\n\nerror[E0038]: the trait `T` cannot be made into an object\n  --> src/main.rs:15:15\n   |\n15 | #[derive(Serialize, Deserialize)]\n   |          ^^^^^^^^^^ the trait `T` cannot be made into an object\n```\n\nAfter:\n\n```rust\nerror[E0106]: missing lifetime specifier\n  --> src/main.rs:11:1\n   |\n11 | struct A {\n   | ^ expected lifetime parameter\n\nerror[E0038]: the trait `T` cannot be made into an object\n  --> src/main.rs:16:1\n   |\n16 | struct B<'a> {\n   | ^ the trait `T` cannot be made into an object\n```", "tree": {"sha": "60a0a0abe65bd0162ab1db0dda9d80e16caa1554", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60a0a0abe65bd0162ab1db0dda9d80e16caa1554"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3784067edcbcd0614f6c4c88f6445ca17ae27ff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3784067edcbcd0614f6c4c88f6445ca17ae27ff6", "html_url": "https://github.com/rust-lang/rust/commit/3784067edcbcd0614f6c4c88f6445ca17ae27ff6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3784067edcbcd0614f6c4c88f6445ca17ae27ff6/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13c4e32e7aca87cbf867be68bf0fc45528bb3fcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/13c4e32e7aca87cbf867be68bf0fc45528bb3fcf", "html_url": "https://github.com/rust-lang/rust/commit/13c4e32e7aca87cbf867be68bf0fc45528bb3fcf"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "716cf3a94b5166bfec642b62a1a4b05ab8ccfbb3", "filename": "src/libsyntax_ext/deriving/custom.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3784067edcbcd0614f6c4c88f6445ca17ae27ff6/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3784067edcbcd0614f6c4c88f6445ca17ae27ff6/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs?ref=3784067edcbcd0614f6c4c88f6445ca17ae27ff6", "patch": "@@ -53,6 +53,7 @@ impl MultiItemModifier for CustomDerive {\n             }\n         }\n \n+        let input_span = item.span;\n         let input = __internal::new_token_stream(item);\n         let res = __internal::set_parse_sess(&ecx.parse_sess, || {\n             let inner = self.inner;\n@@ -77,9 +78,9 @@ impl MultiItemModifier for CustomDerive {\n \n         // Right now we have no knowledge of spans at all in custom derive\n         // macros, everything is just parsed as a string. Reassign all spans to\n-        // the #[derive] attribute for better errors here.\n+        // the input `item` for better errors here.\n         item.into_iter().flat_map(|item| {\n-            ChangeSpan { span: span }.fold_item(item)\n+            ChangeSpan { span: input_span }.fold_item(item)\n         }).map(Annotatable::Item).collect()\n     }\n }"}]}