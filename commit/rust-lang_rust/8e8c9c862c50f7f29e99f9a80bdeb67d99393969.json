{"sha": "8e8c9c862c50f7f29e99f9a80bdeb67d99393969", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlOGM5Yzg2MmM1MGY3ZjI5ZTk5ZjlhODBiZGViNjdkOTkzOTM5Njk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-10T05:32:13Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-10T05:32:13Z"}, "message": "turns out we can enable this sanity check now", "tree": {"sha": "c7933e9cb901001718bcfe452b538502bbaac472", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7933e9cb901001718bcfe452b538502bbaac472"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e8c9c862c50f7f29e99f9a80bdeb67d99393969", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e8c9c862c50f7f29e99f9a80bdeb67d99393969", "html_url": "https://github.com/rust-lang/rust/commit/8e8c9c862c50f7f29e99f9a80bdeb67d99393969", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e8c9c862c50f7f29e99f9a80bdeb67d99393969/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34685044f9d6c01a87a05fde9778586079965958", "url": "https://api.github.com/repos/rust-lang/rust/commits/34685044f9d6c01a87a05fde9778586079965958", "html_url": "https://github.com/rust-lang/rust/commit/34685044f9d6c01a87a05fde9778586079965958"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "75acdbe778c3e1237b5fde49859e3661bda2faa1", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e8c9c862c50f7f29e99f9a80bdeb67d99393969/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e8c9c862c50f7f29e99f9a80bdeb67d99393969/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=8e8c9c862c50f7f29e99f9a80bdeb67d99393969", "patch": "@@ -547,9 +547,7 @@ impl<'a, 'tcx, M: Machine<'tcx>> Memory<'a, 'tcx, M> {\n                 None => {\n                     // Make sure we did not try to release someone else's lock.\n                     if !is_our_lock && lock.active != NoLock {\n-                        // FIXME: For the same reason that we have to live with suspensions already existing,\n-                        // we also cannot be sure here if things really are going wrong.  So accept this for now.\n-                        //return err!(InvalidMemoryLockRelease { ptr, len, frame: cur_frame, lock: lock.active.clone() });\n+                        return err!(InvalidMemoryLockRelease { ptr, len, frame: cur_frame, lock: lock.active.clone() });\n                     }\n                 }\n             }"}]}