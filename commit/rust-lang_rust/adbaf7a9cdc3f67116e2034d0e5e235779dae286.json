{"sha": "adbaf7a9cdc3f67116e2034d0e5e235779dae286", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYmFmN2E5Y2RjM2Y2NzExNmUyMDM0ZDBlNWUyMzU3NzlkYWUyODY=", "commit": {"author": {"name": "Alexey Shmalko", "email": "rasen.dubi@gmail.com", "date": "2019-05-01T20:26:06Z"}, "committer": {"name": "Alexey Shmalko", "email": "rasen.dubi@gmail.com", "date": "2019-05-01T20:26:06Z"}, "message": "BinaryHeap: add min-heap example", "tree": {"sha": "54268d22d453c6df3420d681e8a2669e6c310335", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54268d22d453c6df3420d681e8a2669e6c310335"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adbaf7a9cdc3f67116e2034d0e5e235779dae286", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE3PPB2N619bhpsT2i3O97zOswZsMFAlzKAO0ACgkQ3O97zOsw\nZsPbkwf/eX9SVLVW9RijzFnaAUSIuZ5PDZp1buH/x92Oc8i+PiLIevDdFpZPzkiM\nPRXwdRhOP7lJyNvMpY13ZJA9D/z4mV50Q7+4OO8v5ePy2r+SFK9+o3vLzPCJaFsk\niYZyGuhVYgdCaF1XrLlq1n09YjMSNz/R81/MWw28qnLSCbZyCX0/0Kj6gjgbDCW8\nb89c/zcOsKJA8PPaCO0d/UMv63YsHsAw4JGa+KIUIyjI+xzv4Q4DOpiOMCs1BiFT\n0k8Bpz+snBCOTgqyPcDerSu7X7BPhD434UU7KjsD634Pnmm5YrwLAnQxWjNI4JLC\nIbf5qORopFre8ecmvlk6QduFYOzicQ==\n=2ve/\n-----END PGP SIGNATURE-----", "payload": "tree 54268d22d453c6df3420d681e8a2669e6c310335\nparent 6cc24f26036b28fb3366de86efe3da6c4464057a\nauthor Alexey Shmalko <rasen.dubi@gmail.com> 1556742366 +0300\ncommitter Alexey Shmalko <rasen.dubi@gmail.com> 1556742366 +0300\n\nBinaryHeap: add min-heap example\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adbaf7a9cdc3f67116e2034d0e5e235779dae286", "html_url": "https://github.com/rust-lang/rust/commit/adbaf7a9cdc3f67116e2034d0e5e235779dae286", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adbaf7a9cdc3f67116e2034d0e5e235779dae286/comments", "author": {"login": "rasendubi", "id": 1366419, "node_id": "MDQ6VXNlcjEzNjY0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1366419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasendubi", "html_url": "https://github.com/rasendubi", "followers_url": "https://api.github.com/users/rasendubi/followers", "following_url": "https://api.github.com/users/rasendubi/following{/other_user}", "gists_url": "https://api.github.com/users/rasendubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasendubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasendubi/subscriptions", "organizations_url": "https://api.github.com/users/rasendubi/orgs", "repos_url": "https://api.github.com/users/rasendubi/repos", "events_url": "https://api.github.com/users/rasendubi/events{/privacy}", "received_events_url": "https://api.github.com/users/rasendubi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rasendubi", "id": 1366419, "node_id": "MDQ6VXNlcjEzNjY0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1366419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasendubi", "html_url": "https://github.com/rasendubi", "followers_url": "https://api.github.com/users/rasendubi/followers", "following_url": "https://api.github.com/users/rasendubi/following{/other_user}", "gists_url": "https://api.github.com/users/rasendubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasendubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasendubi/subscriptions", "organizations_url": "https://api.github.com/users/rasendubi/orgs", "repos_url": "https://api.github.com/users/rasendubi/repos", "events_url": "https://api.github.com/users/rasendubi/events{/privacy}", "received_events_url": "https://api.github.com/users/rasendubi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cc24f26036b28fb3366de86efe3da6c4464057a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cc24f26036b28fb3366de86efe3da6c4464057a", "html_url": "https://github.com/rust-lang/rust/commit/6cc24f26036b28fb3366de86efe3da6c4464057a"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "c355361b53c4690b3f346775d07d632f1fbb3bf4", "filename": "src/liballoc/collections/binary_heap.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/adbaf7a9cdc3f67116e2034d0e5e235779dae286/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adbaf7a9cdc3f67116e2034d0e5e235779dae286/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs?ref=adbaf7a9cdc3f67116e2034d0e5e235779dae286", "patch": "@@ -207,6 +207,30 @@ use super::SpecExtend;\n /// // The heap should now be empty.\n /// assert!(heap.is_empty())\n /// ```\n+///\n+/// ## Min-heap\n+///\n+/// Either `std::cmp::Reverse` or a custom `Ord` implementation can be used to\n+/// make `BinaryHeap` a min-heap. This makes `heap.pop()` return the smallest\n+/// value instead of the greatest one.\n+///\n+/// ```\n+/// use std::collections::BinaryHeap;\n+/// use std::cmp::Reverse;\n+///\n+/// let mut heap = BinaryHeap::new();\n+///\n+/// // Wrap values in `Reverse`\n+/// heap.push(Reverse(1));\n+/// heap.push(Reverse(5));\n+/// heap.push(Reverse(2));\n+///\n+/// // If we pop these scores now, they should come back in the reverse order.\n+/// assert_eq!(heap.pop(), Some(Reverse(1)));\n+/// assert_eq!(heap.pop(), Some(Reverse(2)));\n+/// assert_eq!(heap.pop(), Some(Reverse(5)));\n+/// assert_eq!(heap.pop(), None);\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct BinaryHeap<T> {\n     data: Vec<T>,"}]}