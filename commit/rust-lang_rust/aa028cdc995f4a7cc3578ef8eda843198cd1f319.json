{"sha": "aa028cdc995f4a7cc3578ef8eda843198cd1f319", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhMDI4Y2RjOTk1ZjRhN2NjMzU3OGVmOGVkYTg0MzE5OGNkMWYzMTk=", "commit": {"author": {"name": "Quentin Boyer", "email": "qbsecond@gmail.com", "date": "2019-11-03T16:37:35Z"}, "committer": {"name": "Quentin Boyer", "email": "qbsecond@gmail.com", "date": "2019-11-03T16:37:35Z"}, "message": "remove another status code check is should-ice", "tree": {"sha": "d15b7136dc5c914b3672bb3791c241a0b288368a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d15b7136dc5c914b3672bb3791c241a0b288368a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa028cdc995f4a7cc3578ef8eda843198cd1f319", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa028cdc995f4a7cc3578ef8eda843198cd1f319", "html_url": "https://github.com/rust-lang/rust/commit/aa028cdc995f4a7cc3578ef8eda843198cd1f319", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa028cdc995f4a7cc3578ef8eda843198cd1f319/comments", "author": {"login": "traxys", "id": 5623227, "node_id": "MDQ6VXNlcjU2MjMyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/5623227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traxys", "html_url": "https://github.com/traxys", "followers_url": "https://api.github.com/users/traxys/followers", "following_url": "https://api.github.com/users/traxys/following{/other_user}", "gists_url": "https://api.github.com/users/traxys/gists{/gist_id}", "starred_url": "https://api.github.com/users/traxys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traxys/subscriptions", "organizations_url": "https://api.github.com/users/traxys/orgs", "repos_url": "https://api.github.com/users/traxys/repos", "events_url": "https://api.github.com/users/traxys/events{/privacy}", "received_events_url": "https://api.github.com/users/traxys/received_events", "type": "User", "site_admin": false}, "committer": {"login": "traxys", "id": 5623227, "node_id": "MDQ6VXNlcjU2MjMyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/5623227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traxys", "html_url": "https://github.com/traxys", "followers_url": "https://api.github.com/users/traxys/followers", "following_url": "https://api.github.com/users/traxys/following{/other_user}", "gists_url": "https://api.github.com/users/traxys/gists{/gist_id}", "starred_url": "https://api.github.com/users/traxys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traxys/subscriptions", "organizations_url": "https://api.github.com/users/traxys/orgs", "repos_url": "https://api.github.com/users/traxys/repos", "events_url": "https://api.github.com/users/traxys/events{/privacy}", "received_events_url": "https://api.github.com/users/traxys/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32f3fe7a6d9b11ec029be3655da854514cb0a1db", "url": "https://api.github.com/repos/rust-lang/rust/commits/32f3fe7a6d9b11ec029be3655da854514cb0a1db", "html_url": "https://github.com/rust-lang/rust/commit/32f3fe7a6d9b11ec029be3655da854514cb0a1db"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "b3cb2724b5b1fc076037a2fe9c841bc439872b7c", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/aa028cdc995f4a7cc3578ef8eda843198cd1f319/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa028cdc995f4a7cc3578ef8eda843198cd1f319/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=aa028cdc995f4a7cc3578ef8eda843198cd1f319", "patch": "@@ -434,7 +434,12 @@ impl<'test> TestCx<'test> {\n     }\n \n     fn check_correct_failure_status(&self, proc_res: &ProcRes) {\n-        let expected_status = Some(self.props.failure_status);\n+        let expected_status =\n+            if self.props.should_ice {\n+                Some(101)\n+            } else {\n+                Some(self.props.failure_status)\n+            };\n         let received_status = proc_res.status.code();\n \n         if expected_status != received_status {"}]}