{"sha": "72ca2a7a85dd7b87d1a0cad54ce5b513c7cde2d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyY2EyYTdhODVkZDdiODdkMWEwY2FkNTRjZTViNTEzYzdjZGUyZDI=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "vastrauskas@gmail.com", "date": "2021-04-10T18:23:32Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "vastrauskas@gmail.com", "date": "2021-04-10T18:23:32Z"}, "message": "Attempt to fix #1763 by asking the scheduler to retry choosing an operation.", "tree": {"sha": "fe99f27ae92451344854360a6e4a8010e71c89e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe99f27ae92451344854360a6e4a8010e71c89e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72ca2a7a85dd7b87d1a0cad54ce5b513c7cde2d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72ca2a7a85dd7b87d1a0cad54ce5b513c7cde2d2", "html_url": "https://github.com/rust-lang/rust/commit/72ca2a7a85dd7b87d1a0cad54ce5b513c7cde2d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72ca2a7a85dd7b87d1a0cad54ce5b513c7cde2d2/comments", "author": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ae7bfc6c6b4c04fa5f6205812281d6e32e194dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ae7bfc6c6b4c04fa5f6205812281d6e32e194dd", "html_url": "https://github.com/rust-lang/rust/commit/1ae7bfc6c6b4c04fa5f6205812281d6e32e194dd"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "e744ac519dd022420e2aa42b2d589fbfaf7e09b8", "filename": "src/thread.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/72ca2a7a85dd7b87d1a0cad54ce5b513c7cde2d2/src%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72ca2a7a85dd7b87d1a0cad54ce5b513c7cde2d2/src%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fthread.rs?ref=72ca2a7a85dd7b87d1a0cad54ce5b513c7cde2d2", "patch": "@@ -711,7 +711,15 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     fn run_timeout_callback(&mut self) -> InterpResult<'tcx> {\n         let this = self.eval_context_mut();\n         let (thread, callback) =\n-            this.machine.threads.get_ready_callback().expect(\"no callback found\");\n+            if let Some((thread, callback)) = this.machine.threads.get_ready_callback() {\n+                (thread, callback)\n+            } else {\n+                // get_ready_callback can return None if the computer's clock was\n+                // shifted after calling the scheduler and before the call\n+                // to get_ready_callback. In this case, just do nothing, which\n+                // effectively just returns to the scheduler.\n+                return Ok(());\n+            };\n         // This back-and-forth with `set_active_thread` is here because of two\n         // design decisions:\n         // 1. Make the caller and not the callback responsible for changing"}]}