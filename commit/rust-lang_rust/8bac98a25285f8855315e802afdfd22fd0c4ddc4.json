{"sha": "8bac98a25285f8855315e802afdfd22fd0c4ddc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiYWM5OGEyNTI4NWY4ODU1MzE1ZTgwMmFmZGZkMjJmZDBjNGRkYzQ=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-05-25T01:50:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-25T01:50:02Z"}, "message": "Rollup merge of #42141 - ids1024:nobacktrace, r=aturon\n\nFix building std without backtrace feature, which was broken in ca8b754\n\nFixes #42139", "tree": {"sha": "3dc422eeb7c8f6ac0f23ac03e967b1be04552afe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dc422eeb7c8f6ac0f23ac03e967b1be04552afe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bac98a25285f8855315e802afdfd22fd0c4ddc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bac98a25285f8855315e802afdfd22fd0c4ddc4", "html_url": "https://github.com/rust-lang/rust/commit/8bac98a25285f8855315e802afdfd22fd0c4ddc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bac98a25285f8855315e802afdfd22fd0c4ddc4/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00c87a6486428b072199809b051beea1124f616f", "url": "https://api.github.com/repos/rust-lang/rust/commits/00c87a6486428b072199809b051beea1124f616f", "html_url": "https://github.com/rust-lang/rust/commit/00c87a6486428b072199809b051beea1124f616f"}, {"sha": "66237afce454db9235525dc715238568c492f54b", "url": "https://api.github.com/repos/rust-lang/rust/commits/66237afce454db9235525dc715238568c492f54b", "html_url": "https://github.com/rust-lang/rust/commit/66237afce454db9235525dc715238568c492f54b"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "06fd838ea06d966b047f8e1a257d1acd253433cd", "filename": "src/libstd/rt.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8bac98a25285f8855315e802afdfd22fd0c4ddc4/src%2Flibstd%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bac98a25285f8855315e802afdfd22fd0c4ddc4/src%2Flibstd%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt.rs?ref=8bac98a25285f8855315e802afdfd22fd0c4ddc4", "patch": "@@ -35,6 +35,8 @@ fn lang_start(main: fn(), argc: isize, argv: *const *const u8) -> isize {\n     use sys_common;\n     use sys_common::thread_info;\n     use thread::Thread;\n+    #[cfg(not(feature = \"backtrace\"))]\n+    use mem;\n \n     sys::init();\n \n@@ -53,9 +55,12 @@ fn lang_start(main: fn(), argc: isize, argv: *const *const u8) -> isize {\n         sys::args::init(argc, argv);\n \n         // Let's run some code!\n+        #[cfg(feature = \"backtrace\")]\n         let res = panic::catch_unwind(|| {\n             ::sys_common::backtrace::__rust_begin_short_backtrace(main)\n         });\n+        #[cfg(not(feature = \"backtrace\"))]\n+        let res = panic::catch_unwind(mem::transmute::<_, fn()>(main));\n         sys_common::cleanup();\n         res.is_err()\n     };"}, {"sha": "d0e3b00d75fac43fdf2ad5f869e0f1add11be067", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8bac98a25285f8855315e802afdfd22fd0c4ddc4/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bac98a25285f8855315e802afdfd22fd0c4ddc4/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=8bac98a25285f8855315e802afdfd22fd0c4ddc4", "patch": "@@ -359,9 +359,12 @@ impl Builder {\n             }\n             unsafe {\n                 thread_info::set(imp::guard::current(), their_thread);\n+                #[cfg(feature = \"backtrace\")]\n                 let try_result = panic::catch_unwind(panic::AssertUnwindSafe(|| {\n                     ::sys_common::backtrace::__rust_begin_short_backtrace(f)\n                 }));\n+                #[cfg(not(feature = \"backtrace\"))]\n+                let try_result = panic::catch_unwind(panic::AssertUnwindSafe(f));\n                 *their_packet.get() = Some(try_result);\n             }\n         };"}]}