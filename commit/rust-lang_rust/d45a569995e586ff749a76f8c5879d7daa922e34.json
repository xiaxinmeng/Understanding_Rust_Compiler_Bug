{"sha": "d45a569995e586ff749a76f8c5879d7daa922e34", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0NWE1Njk5OTVlNTg2ZmY3NDlhNzZmOGM1ODc5ZDdkYWE5MjJlMzQ=", "commit": {"author": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-08-06T05:07:10Z"}, "committer": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-08-06T05:07:10Z"}, "message": "Use byte literals in libserialize", "tree": {"sha": "9841e8fa237b93146b009fa9e8da178218605b0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9841e8fa237b93146b009fa9e8da178218605b0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d45a569995e586ff749a76f8c5879d7daa922e34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d45a569995e586ff749a76f8c5879d7daa922e34", "html_url": "https://github.com/rust-lang/rust/commit/d45a569995e586ff749a76f8c5879d7daa922e34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d45a569995e586ff749a76f8c5879d7daa922e34/comments", "author": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f36ddf1d0e033ba0a104f5cf1ea0ebeaa741de12", "url": "https://api.github.com/repos/rust-lang/rust/commits/f36ddf1d0e033ba0a104f5cf1ea0ebeaa741de12", "html_url": "https://github.com/rust-lang/rust/commit/f36ddf1d0e033ba0a104f5cf1ea0ebeaa741de12"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "f85f3a43974b9a9435799616b39c99131a1e9b6c", "filename": "src/libserialize/base64.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d45a569995e586ff749a76f8c5879d7daa922e34/src%2Flibserialize%2Fbase64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d45a569995e586ff749a76f8c5879d7daa922e34/src%2Flibserialize%2Fbase64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fbase64.rs?ref=d45a569995e586ff749a76f8c5879d7daa922e34", "patch": "@@ -89,8 +89,8 @@ impl<'a> ToBase64 for &'a [u8] {\n             match config.line_length {\n                 Some(line_length) =>\n                     if cur_length >= line_length {\n-                        v.push('\\r' as u8);\n-                        v.push('\\n' as u8);\n+                        v.push(b'\\r');\n+                        v.push(b'\\n');\n                         cur_length = 0;\n                     },\n                 None => ()\n@@ -114,8 +114,8 @@ impl<'a> ToBase64 for &'a [u8] {\n             match config.line_length {\n                 Some(line_length) =>\n                     if cur_length >= line_length {\n-                        v.push('\\r' as u8);\n-                        v.push('\\n' as u8);\n+                        v.push(b'\\r');\n+                        v.push(b'\\n');\n                     },\n                 None => ()\n             }\n@@ -130,8 +130,8 @@ impl<'a> ToBase64 for &'a [u8] {\n                 v.push(bytes[((n >> 18) & 63) as uint]);\n                 v.push(bytes[((n >> 12) & 63) as uint]);\n                 if config.pad {\n-                    v.push('=' as u8);\n-                    v.push('=' as u8);\n+                    v.push(b'=');\n+                    v.push(b'=');\n                 }\n             }\n             2 => {\n@@ -141,7 +141,7 @@ impl<'a> ToBase64 for &'a [u8] {\n                 v.push(bytes[((n >> 12) & 63) as uint]);\n                 v.push(bytes[((n >> 6 ) & 63) as uint]);\n                 if config.pad {\n-                    v.push('=' as u8);\n+                    v.push(b'=');\n                 }\n             }\n             _ => fail!(\"Algebra is broken, please alert the math police\")"}, {"sha": "2c1bfa5550bb06235d2b2428f6b864192f406df5", "filename": "src/libserialize/hex.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d45a569995e586ff749a76f8c5879d7daa922e34/src%2Flibserialize%2Fhex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d45a569995e586ff749a76f8c5879d7daa922e34/src%2Flibserialize%2Fhex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fhex.rs?ref=d45a569995e586ff749a76f8c5879d7daa922e34", "patch": "@@ -113,9 +113,9 @@ impl<'a> FromHex for &'a str {\n             buf <<= 4;\n \n             match byte as char {\n-                'A'..'F' => buf |= byte - ('A' as u8) + 10,\n-                'a'..'f' => buf |= byte - ('a' as u8) + 10,\n-                '0'..'9' => buf |= byte - ('0' as u8),\n+                'A'..'F' => buf |= byte - b'A' + 10,\n+                'a'..'f' => buf |= byte - b'a' + 10,\n+                '0'..'9' => buf |= byte - b'0',\n                 ' '|'\\r'|'\\n'|'\\t' => {\n                     buf >>= 4;\n                     continue"}]}