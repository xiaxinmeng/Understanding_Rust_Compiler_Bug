{"sha": "024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyNGJmMmVjNzJiZGMyNDI4ZDVjNThhNTliZmVkN2RhMWJiYzRlZmQ=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-04-24T12:45:57Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-04-24T22:20:00Z"}, "message": "Rename Natural to Integer\n\n'Natural' normally means 'positive integer' in mathematics. It is therefore strange to implement it on signed integer types. 'Integer' is probably a better choice.", "tree": {"sha": "7ba0a339d6bf55e5191e94c697823895279b967f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ba0a339d6bf55e5191e94c697823895279b967f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd", "html_url": "https://github.com/rust-lang/rust/commit/024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4868ee74085c2dc2943ef9407ced2d06e43abf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4868ee74085c2dc2943ef9407ced2d06e43abf6", "html_url": "https://github.com/rust-lang/rust/commit/d4868ee74085c2dc2943ef9407ced2d06e43abf6"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "2a8de6a80322c30672c7c35a0aac779c317f2fd1", "filename": "src/libcore/core.rc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd/src%2Flibcore%2Fcore.rc", "raw_url": "https://github.com/rust-lang/rust/raw/024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd/src%2Flibcore%2Fcore.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcore.rc?ref=024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd", "patch": "@@ -103,7 +103,8 @@ pub use iter::{BaseIter, ExtendedIter, EqIter, CopyableIter};\n pub use iter::{CopyableOrderedIter, CopyableNonstrictIter, Times};\n pub use iter::{ExtendedMutableIter};\n \n-pub use num::{Num, Signed, Unsigned, Natural, NumCast};\n+pub use num::{Num, NumCast};\n+pub use num::{Signed, Unsigned, Integer};\n pub use ptr::Ptr;\n pub use to_str::ToStr;\n pub use clone::Clone;"}, {"sha": "e322e5edeb90e1988feb318e381a529e8b69a04b", "filename": "src/libcore/num/int-template.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd/src%2Flibcore%2Fnum%2Fint-template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd/src%2Flibcore%2Fnum%2Fint-template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fint-template.rs?ref=024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd", "patch": "@@ -279,7 +279,7 @@ impl Signed for T {\n     fn is_negative(&self) -> bool { *self < 0 }\n }\n \n-impl Natural for T {\n+impl Integer for T {\n     /**\n      * Floored integer division\n      *"}, {"sha": "1c3c699603b0d176d14aec417d626a90abe37df3", "filename": "src/libcore/num/num.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd/src%2Flibcore%2Fnum%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd/src%2Flibcore%2Fnum%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fnum.rs?ref=024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd", "patch": "@@ -61,7 +61,7 @@ pub fn abs<T:Ord + Zero + Neg<T>>(v: T) -> T {\n     if v < Zero::zero() { v.neg() } else { v }\n }\n \n-pub trait Natural: Num\n+pub trait Integer: Num\n                  + Ord\n                  + Quot<Self,Self>\n                  + Rem<Self,Self> {"}, {"sha": "69483f33e52810c253c84f2555cb1cd1e2ef3b36", "filename": "src/libcore/num/uint-template.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd/src%2Flibcore%2Fnum%2Fuint-template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd/src%2Flibcore%2Fnum%2Fuint-template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fuint-template.rs?ref=024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd", "patch": "@@ -176,7 +176,7 @@ impl Neg<T> for T {\n \n impl Unsigned for T {}\n \n-impl Natural for T {\n+impl Integer for T {\n     /// Unsigned integer division. Returns the same result as `quot` (`/`).\n     #[inline(always)]\n     fn div(&self, other: T) -> T { *self / other }"}, {"sha": "ec332adb8323b76b302a33f65c7c5633dff1c8ca", "filename": "src/libcore/prelude.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd/src%2Flibcore%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd/src%2Flibcore%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprelude.rs?ref=024bf2ec72bdc2428d5c58a59bfed7da1bbc4efd", "patch": "@@ -37,7 +37,8 @@ pub use hash::Hash;\n pub use iter::{BaseIter, ReverseIter, MutableIter, ExtendedIter, EqIter};\n pub use iter::{CopyableIter, CopyableOrderedIter, CopyableNonstrictIter};\n pub use iter::{Times, ExtendedMutableIter};\n-pub use num::{Num, Signed, Unsigned, Natural, NumCast};\n+pub use num::{Num, NumCast};\n+pub use num::{Signed, Unsigned, Integer};\n pub use path::GenericPath;\n pub use path::Path;\n pub use path::PosixPath;"}]}