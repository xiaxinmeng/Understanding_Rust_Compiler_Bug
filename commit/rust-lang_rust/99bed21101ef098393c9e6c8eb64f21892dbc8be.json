{"sha": "99bed21101ef098393c9e6c8eb64f21892dbc8be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5YmVkMjExMDFlZjA5ODM5M2M5ZTZjOGViNjRmMjE4OTJkYmM4YmU=", "commit": {"author": {"name": "Havvy (Ryan Scheel)", "email": "ryan.havvy@gmail.com", "date": "2018-09-10T22:38:37Z"}, "committer": {"name": "Havvy (Ryan Scheel)", "email": "ryan.havvy@gmail.com", "date": "2018-10-06T00:41:43Z"}, "message": "Linkify types in docs", "tree": {"sha": "a89c1fb09ae3ab4390e5eecf00e8c2595172074c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a89c1fb09ae3ab4390e5eecf00e8c2595172074c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99bed21101ef098393c9e6c8eb64f21892dbc8be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99bed21101ef098393c9e6c8eb64f21892dbc8be", "html_url": "https://github.com/rust-lang/rust/commit/99bed21101ef098393c9e6c8eb64f21892dbc8be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99bed21101ef098393c9e6c8eb64f21892dbc8be/comments", "author": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b911dba40b441a65d8566e2013256612a15d27a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b911dba40b441a65d8566e2013256612a15d27a4", "html_url": "https://github.com/rust-lang/rust/commit/b911dba40b441a65d8566e2013256612a15d27a4"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5f992795531ec3dfc9bbcbed9e0d27dba9ec3bbd", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99bed21101ef098393c9e6c8eb64f21892dbc8be/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99bed21101ef098393c9e6c8eb64f21892dbc8be/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=99bed21101ef098393c9e6c8eb64f21892dbc8be", "patch": "@@ -218,7 +218,7 @@ impl<T> [T] {\n     /// * total and antisymmetric: exactly one of a < b, a == b or a > b is true; and\n     /// * transitive, a < b and b < c implies a < c. The same must hold for both == and >.\n     ///\n-    /// For example, while `f64` doesn't implement `Ord` because `NaN != NaN`, we can use\n+    /// For example, while [`f64`] doesn't implement [`Ord`] because `NaN != NaN`, we can use\n     /// `partial_cmp` as our sort function when we know the slice doesn't contain a `NaN`.\n     ///\n     /// ```"}, {"sha": "a9d76376c07b6cbc60d7af7fc9e1fa3ceeb89005", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99bed21101ef098393c9e6c8eb64f21892dbc8be/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99bed21101ef098393c9e6c8eb64f21892dbc8be/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=99bed21101ef098393c9e6c8eb64f21892dbc8be", "patch": "@@ -1346,7 +1346,7 @@ impl<T> [T] {\n     /// * total and antisymmetric: exactly one of a < b, a == b or a > b is true; and\n     /// * transitive, a < b and b < c implies a < c. The same must hold for both == and >.\n     ///\n-    /// For example, while `f64` doesn't implement `Ord` because `NaN != NaN`, we can use\n+    /// For example, while [`f64`] doesn't implement [`Ord`] because `NaN != NaN`, we can use\n     /// `partial_cmp` as our sort function when we know the slice doesn't contain a `NaN`.\n     ///\n     /// ```"}]}