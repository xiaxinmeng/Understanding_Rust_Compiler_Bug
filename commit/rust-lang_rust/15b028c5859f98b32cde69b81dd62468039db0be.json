{"sha": "15b028c5859f98b32cde69b81dd62468039db0be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1YjAyOGM1ODU5Zjk4YjMyY2RlNjliODFkZDYyNDY4MDM5ZGIwYmU=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2015-04-22T12:18:02Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2015-06-10T18:34:22Z"}, "message": "Add a write_char method to std::fmt::Formatter.\n\nThis is the logical next step after #24661, but I\u2019m less sure about this one.", "tree": {"sha": "2a40b6f9a6b6da2794ea403f0cf22249b1f8d36b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a40b6f9a6b6da2794ea403f0cf22249b1f8d36b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15b028c5859f98b32cde69b81dd62468039db0be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15b028c5859f98b32cde69b81dd62468039db0be", "html_url": "https://github.com/rust-lang/rust/commit/15b028c5859f98b32cde69b81dd62468039db0be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15b028c5859f98b32cde69b81dd62468039db0be/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8025bc964c0f31726636811d97f9f46cd0d4c40f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8025bc964c0f31726636811d97f9f46cd0d4c40f", "html_url": "https://github.com/rust-lang/rust/commit/8025bc964c0f31726636811d97f9f46cd0d4c40f"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "34d635ca4ab5da2e81ded93511a87284809713d4", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/15b028c5859f98b32cde69b81dd62468039db0be/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15b028c5859f98b32cde69b81dd62468039db0be/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=15b028c5859f98b32cde69b81dd62468039db0be", "patch": "@@ -731,6 +731,13 @@ impl<'a> Formatter<'a> {\n         self.buf.write_str(data)\n     }\n \n+    /// Writes a `char` to the underlying buffer contained within this\n+    /// formatter.\n+    #[stable(feature = \"fmt_write_char\", since = \"1.1.0\")]\n+    pub fn write_char(&mut self, c: char) -> Result {\n+        self.buf.write_char(c)\n+    }\n+\n     /// Writes some formatted information into this instance\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn write_fmt(&mut self, fmt: Arguments) -> Result {\n@@ -965,10 +972,7 @@ impl Debug for char {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Display for char {\n     fn fmt(&self, f: &mut Formatter) -> Result {\n-        let mut utf8 = [0; 4];\n-        let amt = self.encode_utf8(&mut utf8).unwrap_or(0);\n-        let s: &str = unsafe { mem::transmute(&utf8[..amt]) };\n-        Display::fmt(s, f)\n+        f.write_char(*self)\n     }\n }\n "}, {"sha": "abd1a9531130c7c31f4242005a67fa8373c98ca2", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/15b028c5859f98b32cde69b81dd62468039db0be/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15b028c5859f98b32cde69b81dd62468039db0be/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=15b028c5859f98b32cde69b81dd62468039db0be", "patch": "@@ -21,6 +21,7 @@ use std::usize;\n struct A;\n struct B;\n struct C;\n+struct D;\n \n impl fmt::LowerHex for A {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n@@ -37,6 +38,13 @@ impl fmt::Display for C {\n         f.pad_integral(true, \"\u2603\", \"123\")\n     }\n }\n+impl fmt::Binary for D {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        try!(f.write_str(\"aa\"));\n+        try!(f.write_char('\u2603'));\n+        f.write_str(\"bb\")\n+    }\n+}\n \n macro_rules! t {\n     ($a:expr, $b:expr) => { assert_eq!($a, $b) }\n@@ -90,6 +98,7 @@ pub fn main() {\n     t!(format!(\"{foo_bar}\", foo_bar=1), \"1\");\n     t!(format!(\"{}\", 5 + 5), \"10\");\n     t!(format!(\"{:#4}\", C), \"\u2603123\");\n+    t!(format!(\"{:b}\", D), \"aa\u2603bb\");\n \n     let a: &fmt::Debug = &1;\n     t!(format!(\"{:?}\", a), \"1\");"}]}