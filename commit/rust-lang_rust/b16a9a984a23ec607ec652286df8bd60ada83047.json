{"sha": "b16a9a984a23ec607ec652286df8bd60ada83047", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxNmE5YTk4NGEyM2VjNjA3ZWM2NTIyODZkZjhiZDYwYWRhODMwNDc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-29T22:25:59Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-29T22:27:55Z"}, "message": "rt: Don't dereference a null pointer when traversing a function with no environment", "tree": {"sha": "0c1e6d0bdf31c9f50924a6cd8d169e6f2ef920f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c1e6d0bdf31c9f50924a6cd8d169e6f2ef920f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b16a9a984a23ec607ec652286df8bd60ada83047", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b16a9a984a23ec607ec652286df8bd60ada83047", "html_url": "https://github.com/rust-lang/rust/commit/b16a9a984a23ec607ec652286df8bd60ada83047", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b16a9a984a23ec607ec652286df8bd60ada83047/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b623ddfb7e2fb4f90faad454a5c9e6cc072cd0fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/b623ddfb7e2fb4f90faad454a5c9e6cc072cd0fe", "html_url": "https://github.com/rust-lang/rust/commit/b623ddfb7e2fb4f90faad454a5c9e6cc072cd0fe"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "e568d480164208b269224375ea149269e38ec84f", "filename": "src/rt/rust_shape.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b16a9a984a23ec607ec652286df8bd60ada83047/src%2Frt%2Frust_shape.h", "raw_url": "https://github.com/rust-lang/rust/raw/b16a9a984a23ec607ec652286df8bd60ada83047/src%2Frt%2Frust_shape.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.h?ref=b16a9a984a23ec607ec652286df8bd60ada83047", "patch": "@@ -868,11 +868,12 @@ data<T,U>::walk_fn_contents(bool align, ptr &dp) {\n     dp += sizeof(void *);   // Skip over the code pointer.\n \n     uint8_t *box_ptr = bump_dp<uint8_t *>(dp);\n+    if (!box_ptr)\n+        return;\n+\n     type_desc *subtydesc =\n         *reinterpret_cast<type_desc **>(box_ptr + sizeof(void *));\n     ptr closure_dp(box_ptr + sizeof(void *));\n-    if (!box_ptr)\n-        return;\n \n     arena arena;\n     type_param *params = type_param::from_fn_shape(subtydesc->shape,"}]}