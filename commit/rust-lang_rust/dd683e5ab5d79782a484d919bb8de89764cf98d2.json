{"sha": "dd683e5ab5d79782a484d919bb8de89764cf98d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNjgzZTVhYjVkNzk3ODJhNDg0ZDkxOWJiOGRlODk3NjRjZjk4ZDI=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-10-18T20:32:25Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-10-24T20:00:04Z"}, "message": "MIR validation should check `SwitchInt` values are valid for the type", "tree": {"sha": "1b3ada1c8ea4b0027d37858db469dab048917f01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b3ada1c8ea4b0027d37858db469dab048917f01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd683e5ab5d79782a484d919bb8de89764cf98d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd683e5ab5d79782a484d919bb8de89764cf98d2", "html_url": "https://github.com/rust-lang/rust/commit/dd683e5ab5d79782a484d919bb8de89764cf98d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd683e5ab5d79782a484d919bb8de89764cf98d2/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89fdb30892dbe330730ad1a1c1fe45b9046c2973", "url": "https://api.github.com/repos/rust-lang/rust/commits/89fdb30892dbe330730ad1a1c1fe45b9046c2973", "html_url": "https://github.com/rust-lang/rust/commit/89fdb30892dbe330730ad1a1c1fe45b9046c2973"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "7b22d643ab646c9e193d28ca2824a748d49b22fd", "filename": "compiler/rustc_mir/src/transform/validate.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/dd683e5ab5d79782a484d919bb8de89764cf98d2/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd683e5ab5d79782a484d919bb8de89764cf98d2/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fvalidate.rs?ref=dd683e5ab5d79782a484d919bb8de89764cf98d2", "patch": "@@ -5,13 +5,17 @@ use crate::dataflow::{Analysis, ResultsCursor};\n use crate::util::storage::AlwaysLiveLocals;\n \n use super::MirPass;\n-use rustc_middle::mir::visit::{PlaceContext, Visitor};\n+use rustc_middle::mir::{\n+    interpret::Scalar,\n+    visit::{PlaceContext, Visitor},\n+};\n use rustc_middle::mir::{\n     AggregateKind, BasicBlock, Body, BorrowKind, Local, Location, MirPhase, Operand, Rvalue,\n     SourceScope, Statement, StatementKind, Terminator, TerminatorKind, VarDebugInfo,\n };\n use rustc_middle::ty::relate::{Relate, RelateResult, TypeRelation};\n use rustc_middle::ty::{self, ParamEnv, Ty, TyCtxt};\n+use rustc_target::abi::Size;\n \n #[derive(Copy, Clone, Debug)]\n enum EdgeKind {\n@@ -346,7 +350,25 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n                         ),\n                     );\n                 }\n-                for (_, target) in targets.iter() {\n+\n+                let target_width = self.tcx.sess.target.pointer_width;\n+\n+                let size = Size::from_bits(match switch_ty.kind() {\n+                    ty::Uint(uint) => uint.normalize(target_width).bit_width().unwrap(),\n+                    ty::Int(int) => int.normalize(target_width).bit_width().unwrap(),\n+                    ty::Char => 32,\n+                    ty::Bool => 1,\n+                    other => bug!(\"unhandled type: {:?}\", other),\n+                });\n+\n+                for (value, target) in targets.iter() {\n+                    if Scalar::<()>::try_from_uint(value, size).is_none() {\n+                        self.fail(\n+                            location,\n+                            format!(\"the value {:#x} is not a proper {:?}\", value, switch_ty),\n+                        )\n+                    }\n+\n                     self.check_edge(location, target, EdgeKind::Normal);\n                 }\n                 self.check_edge(location, targets.otherwise(), EdgeKind::Normal);"}]}