{"sha": "ef854c9b04cf916241587ea1764b86027e380e8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmODU0YzliMDRjZjkxNjI0MTU4N2VhMTc2NGI4NjAyN2UzODBlOGY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2013-08-12T22:30:27Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2013-08-15T02:06:17Z"}, "message": "Switch main borrowck to <V:Visitor> trait API.\n\nfix borrowck/mod.rs to deal with fn_kind enum fallout.", "tree": {"sha": "cc847a1b80c2993e633ec4a14dea8703ca316354", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc847a1b80c2993e633ec4a14dea8703ca316354"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef854c9b04cf916241587ea1764b86027e380e8f", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef854c9b04cf916241587ea1764b86027e380e8f", "html_url": "https://github.com/rust-lang/rust/commit/ef854c9b04cf916241587ea1764b86027e380e8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef854c9b04cf916241587ea1764b86027e380e8f/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d85928e37dec4795cf288e9f0bbe23d7a100b7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d85928e37dec4795cf288e9f0bbe23d7a100b7a", "html_url": "https://github.com/rust-lang/rust/commit/0d85928e37dec4795cf288e9f0bbe23d7a100b7a"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "95eae32922b7f7afe7a35969aab1a83796aa5004", "filename": "src/librustc/middle/borrowck/mod.rs", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/ef854c9b04cf916241587ea1764b86027e380e8f/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef854c9b04cf916241587ea1764b86027e380e8f/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs?ref=ef854c9b04cf916241587ea1764b86027e380e8f", "patch": "@@ -26,9 +26,11 @@ use std::ops::{BitOr, BitAnd};\n use std::result::{Result};\n use syntax::ast;\n use syntax::ast_map;\n-use syntax::oldvisit;\n use syntax::codemap::span;\n use syntax::parse::token;\n+use syntax::visit;\n+use syntax::visit::{Visitor,fn_kind};\n+use syntax::ast::{fn_decl,Block,NodeId};\n \n macro_rules! if_ok(\n     ($inp: expr) => (\n@@ -59,6 +61,15 @@ impl Clone for LoanDataFlowOperator {\n \n pub type LoanDataFlow = DataFlowContext<LoanDataFlowOperator>;\n \n+struct BorrowckVisitor;\n+\n+impl Visitor<@BorrowckCtxt> for BorrowckVisitor {\n+    fn visit_fn(&mut self, fk:&fn_kind, fd:&fn_decl,\n+                b:&Block, s:span, n:NodeId, e:@BorrowckCtxt) {\n+        borrowck_fn(self, fk, fd, b, s, n, e);\n+    }\n+}\n+\n pub fn check_crate(\n     tcx: ty::ctxt,\n     method_map: typeck::method_map,\n@@ -86,9 +97,8 @@ pub fn check_crate(\n         }\n     };\n \n-    let v = oldvisit::mk_vt(@oldvisit::Visitor {visit_fn: borrowck_fn,\n-                                          ..*oldvisit::default_visitor()});\n-    oldvisit::visit_crate(crate, (bccx, v));\n+    let mut v = BorrowckVisitor;\n+    visit::walk_crate(&mut v, crate, bccx);\n \n     if tcx.sess.borrowck_stats() {\n         io::println(\"--- borrowck stats ---\");\n@@ -113,21 +123,21 @@ pub fn check_crate(\n     }\n }\n \n-fn borrowck_fn(fk: &oldvisit::fn_kind,\n+fn borrowck_fn(v: &mut BorrowckVisitor,\n+               fk: &visit::fn_kind,\n                decl: &ast::fn_decl,\n                body: &ast::Block,\n                sp: span,\n                id: ast::NodeId,\n-               (this, v): (@BorrowckCtxt,\n-                           oldvisit::vt<@BorrowckCtxt>)) {\n+               this: @BorrowckCtxt) {\n     match fk {\n-        &oldvisit::fk_anon(*) |\n-        &oldvisit::fk_fn_block(*) => {\n+        &visit::fk_anon(*) |\n+        &visit::fk_fn_block(*) => {\n             // Closures are checked as part of their containing fn item.\n         }\n \n-        &oldvisit::fk_item_fn(*) |\n-        &oldvisit::fk_method(*) => {\n+        &visit::fk_item_fn(*) |\n+        &visit::fk_method(*) => {\n             debug!(\"borrowck_fn(id=%?)\", id);\n \n             // Check the body of fn items.\n@@ -156,7 +166,7 @@ fn borrowck_fn(fk: &oldvisit::fn_kind,\n         }\n     }\n \n-    oldvisit::visit_fn(fk, decl, body, sp, id, (this, v));\n+    visit::walk_fn(v, fk, decl, body, sp, id, this);\n }\n \n // ----------------------------------------------------------------------"}]}