{"sha": "a54bbac99af8240d78e161ac68653726c4ff27cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NGJiYWM5OWFmODI0MGQ3OGUxNjFhYzY4NjUzNzI2YzRmZjI3Y2M=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-06-15T05:58:10Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-06-15T06:10:49Z"}, "message": "save-analysis: fix a couple of span bugs", "tree": {"sha": "574d4820751b779ed3a648ef5cb390c2fdb34edf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/574d4820751b779ed3a648ef5cb390c2fdb34edf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a54bbac99af8240d78e161ac68653726c4ff27cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a54bbac99af8240d78e161ac68653726c4ff27cc", "html_url": "https://github.com/rust-lang/rust/commit/a54bbac99af8240d78e161ac68653726c4ff27cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a54bbac99af8240d78e161ac68653726c4ff27cc/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "718268398e312b02775e946af31d77fe35fb5550", "url": "https://api.github.com/repos/rust-lang/rust/commits/718268398e312b02775e946af31d77fe35fb5550", "html_url": "https://github.com/rust-lang/rust/commit/718268398e312b02775e946af31d77fe35fb5550"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "3ea628704ebc6790beffacd37993412e5927ff35", "filename": "src/librustc_trans/save/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a54bbac99af8240d78e161ac68653726c4ff27cc/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a54bbac99af8240d78e161ac68653726c4ff27cc/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fmod.rs?ref=a54bbac99af8240d78e161ac68653726c4ff27cc", "patch": "@@ -255,16 +255,17 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                 match typ.node {\n                     // Common case impl for a struct or something basic.\n                     ast::TyPath(None, ref path) => {\n-                        sub_span = self.span_utils.sub_span_for_type_name(path.span);\n+                        sub_span = self.span_utils.sub_span_for_type_name(path.span).unwrap();\n                         type_data = self.lookup_ref_id(typ.id).map(|id| TypeRefData {\n-                            span: sub_span.unwrap(),\n+                            span: sub_span,\n                             scope: parent,\n                             ref_id: id,\n                         });\n                     },\n                     _ => {\n                         // Less useful case, impl for a compound type.\n-                        sub_span = self.span_utils.sub_span_for_type_name(typ.span);\n+                        let span = typ.span;\n+                        sub_span = self.span_utils.sub_span_for_type_name(span).unwrap_or(span);\n                     }\n                 }\n \n@@ -273,7 +274,7 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n \n                 Data::ImplData(ImplData {\n                     id: item.id,\n-                    span: sub_span.unwrap(),\n+                    span: sub_span,\n                     scope: parent,\n                     trait_ref: trait_data,\n                     self_ref: type_data,\n@@ -320,9 +321,10 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                               parent: NodeId)\n                               -> Option<TypeRefData> {\n         self.lookup_ref_id(trait_ref.ref_id).map(|def_id| {\n-            let sub_span = self.span_utils.sub_span_for_type_name(trait_ref.path.span);\n+            let span = trait_ref.path.span;\n+            let sub_span = self.span_utils.sub_span_for_type_name(span).unwrap_or(span);\n             TypeRefData {\n-                span: sub_span.unwrap(),\n+                span: sub_span,\n                 scope: parent,\n                 ref_id: def_id,\n             }"}]}