{"sha": "7dfdd64433b07239fbac50b8227b6e03a0ba8f30", "node_id": "C_kwDOAAsO6NoAKDdkZmRkNjQ0MzNiMDcyMzlmYmFjNTBiODIyN2I2ZTAzYTBiYThmMzA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-29T07:11:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-29T07:11:50Z"}, "message": "Auto merge of #99667 - ouz-a:some_branch, r=oli-obk\n\nOptimize `UnDerefer`\n\nAddresses the performance [issues](https://github.com/rust-lang/rust/pull/98145#issuecomment-1183548597) faced here.\n\nr? `@oli-obk`", "tree": {"sha": "e8e6a57c31f957d3df90aac8cc738c772e75b791", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8e6a57c31f957d3df90aac8cc738c772e75b791"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dfdd64433b07239fbac50b8227b6e03a0ba8f30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dfdd64433b07239fbac50b8227b6e03a0ba8f30", "html_url": "https://github.com/rust-lang/rust/commit/7dfdd64433b07239fbac50b8227b6e03a0ba8f30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea6ab1bd845790fb31ba790d2c7aec898f89fe62", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea6ab1bd845790fb31ba790d2c7aec898f89fe62", "html_url": "https://github.com/rust-lang/rust/commit/ea6ab1bd845790fb31ba790d2c7aec898f89fe62"}, {"sha": "bd24b4006c98425aa994763acf7f7e18607c7df1", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd24b4006c98425aa994763acf7f7e18607c7df1", "html_url": "https://github.com/rust-lang/rust/commit/bd24b4006c98425aa994763acf7f7e18607c7df1"}], "stats": {"total": 50, "additions": 22, "deletions": 28}, "files": [{"sha": "3e2d57ae00c405c49f850f63aa8a4c14ac3b9a03", "filename": "compiler/rustc_borrowck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs?ref=7dfdd64433b07239fbac50b8227b6e03a0ba8f30", "patch": "@@ -215,7 +215,7 @@ fn do_mir_borrowck<'a, 'tcx>(\n \n     let (move_data, move_errors): (MoveData<'tcx>, Vec<(Place<'tcx>, MoveError<'tcx>)>) =\n         match MoveData::gather_moves(&body, tcx, param_env) {\n-            Ok(move_data) => (move_data, Vec::new()),\n+            Ok((_, move_data)) => (move_data, Vec::new()),\n             Err((move_data, move_errors)) => (move_data, move_errors),\n         };\n     let promoted_errors = promoted"}, {"sha": "116e5c1f3ce0a0d276756a088642aad472ba5226", "filename": "compiler/rustc_mir_dataflow/src/move_paths/builder.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/compiler%2Frustc_mir_dataflow%2Fsrc%2Fmove_paths%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/compiler%2Frustc_mir_dataflow%2Fsrc%2Fmove_paths%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fmove_paths%2Fbuilder.rs?ref=7dfdd64433b07239fbac50b8227b6e03a0ba8f30", "patch": "@@ -1,3 +1,4 @@\n+use crate::move_paths::FxHashMap;\n use crate::un_derefer::UnDerefer;\n use rustc_index::vec::IndexVec;\n use rustc_middle::mir::tcx::RvalueInitializationState;\n@@ -206,10 +207,13 @@ impl<'b, 'a, 'tcx> Gatherer<'b, 'a, 'tcx> {\n     }\n }\n \n+pub type MoveDat<'tcx> = Result<\n+    (FxHashMap<Local, Place<'tcx>>, MoveData<'tcx>),\n+    (MoveData<'tcx>, Vec<(Place<'tcx>, MoveError<'tcx>)>),\n+>;\n+\n impl<'a, 'tcx> MoveDataBuilder<'a, 'tcx> {\n-    fn finalize(\n-        self,\n-    ) -> Result<MoveData<'tcx>, (MoveData<'tcx>, Vec<(Place<'tcx>, MoveError<'tcx>)>)> {\n+    fn finalize(self) -> MoveDat<'tcx> {\n         debug!(\"{}\", {\n             debug!(\"moves for {:?}:\", self.body.span);\n             for (j, mo) in self.data.moves.iter_enumerated() {\n@@ -222,15 +226,19 @@ impl<'a, 'tcx> MoveDataBuilder<'a, 'tcx> {\n             \"done dumping moves\"\n         });\n \n-        if !self.errors.is_empty() { Err((self.data, self.errors)) } else { Ok(self.data) }\n+        if self.errors.is_empty() {\n+            Ok((self.un_derefer.derefer_sidetable, self.data))\n+        } else {\n+            Err((self.data, self.errors))\n+        }\n     }\n }\n \n pub(super) fn gather_moves<'tcx>(\n     body: &Body<'tcx>,\n     tcx: TyCtxt<'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n-) -> Result<MoveData<'tcx>, (MoveData<'tcx>, Vec<(Place<'tcx>, MoveError<'tcx>)>)> {\n+) -> MoveDat<'tcx> {\n     let mut builder = MoveDataBuilder::new(body, tcx, param_env);\n \n     builder.gather_args();"}, {"sha": "a951c5b0b1c94a5258ccf1cb03cb4bb15b6fd7a3", "filename": "compiler/rustc_mir_dataflow/src/move_paths/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/compiler%2Frustc_mir_dataflow%2Fsrc%2Fmove_paths%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/compiler%2Frustc_mir_dataflow%2Fsrc%2Fmove_paths%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fmove_paths%2Fmod.rs?ref=7dfdd64433b07239fbac50b8227b6e03a0ba8f30", "patch": "@@ -1,3 +1,4 @@\n+use crate::move_paths::builder::MoveDat;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_index::vec::IndexVec;\n use rustc_middle::mir::*;\n@@ -386,7 +387,7 @@ impl<'tcx> MoveData<'tcx> {\n         body: &Body<'tcx>,\n         tcx: TyCtxt<'tcx>,\n         param_env: ParamEnv<'tcx>,\n-    ) -> Result<Self, (Self, Vec<(Place<'tcx>, MoveError<'tcx>)>)> {\n+    ) -> MoveDat<'tcx> {\n         builder::gather_moves(body, tcx, param_env)\n     }\n "}, {"sha": "f2471f37a5266b744c4fe1d30ce36e16bd7f3f69", "filename": "compiler/rustc_mir_dataflow/src/rustc_peek.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/compiler%2Frustc_mir_dataflow%2Fsrc%2Frustc_peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/compiler%2Frustc_mir_dataflow%2Fsrc%2Frustc_peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Frustc_peek.rs?ref=7dfdd64433b07239fbac50b8227b6e03a0ba8f30", "patch": "@@ -30,7 +30,7 @@ impl<'tcx> MirPass<'tcx> for SanityCheck {\n         }\n \n         let param_env = tcx.param_env(def_id);\n-        let move_data = MoveData::gather_moves(body, tcx, param_env).unwrap();\n+        let (_, move_data) = MoveData::gather_moves(body, tcx, param_env).unwrap();\n         let mdpe = MoveDataParamEnv { move_data, param_env };\n \n         if has_rustc_mir_with(tcx, def_id, sym::rustc_peek_maybe_init).is_some() {"}, {"sha": "7e6e25cc603ec7ffbb40bbf1bac909f87200eb2f", "filename": "compiler/rustc_mir_dataflow/src/un_derefer.rs", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/compiler%2Frustc_mir_dataflow%2Fsrc%2Fun_derefer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/compiler%2Frustc_mir_dataflow%2Fsrc%2Fun_derefer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fun_derefer.rs?ref=7dfdd64433b07239fbac50b8227b6e03a0ba8f30", "patch": "@@ -9,6 +9,7 @@ pub struct UnDerefer<'tcx> {\n }\n \n impl<'tcx> UnDerefer<'tcx> {\n+    #[inline]\n     pub fn derefer(&self, place: PlaceRef<'tcx>, body: &Body<'tcx>) -> Option<Place<'tcx>> {\n         let reffed = self.derefer_sidetable.get(&place.local)?;\n \n@@ -18,19 +19,4 @@ impl<'tcx> UnDerefer<'tcx> {\n         }\n         Some(new_place)\n     }\n-\n-    pub fn ref_finder(&mut self, body: &Body<'tcx>) {\n-        for (_bb, data) in body.basic_blocks().iter_enumerated() {\n-            for stmt in data.statements.iter() {\n-                match stmt.kind {\n-                    StatementKind::Assign(box (place, Rvalue::CopyForDeref(reffed))) => {\n-                        if body.local_decls[place.local].is_deref_temp() {\n-                            self.derefer_sidetable.insert(place.local, reffed);\n-                        }\n-                    }\n-                    _ => (),\n-                }\n-            }\n-        }\n-    }\n }"}, {"sha": "9c1fcbaa69d6b45f523c8071b31053c18b1bafed", "filename": "compiler/rustc_mir_transform/src/elaborate_drops.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_drops.rs?ref=7dfdd64433b07239fbac50b8227b6e03a0ba8f30", "patch": "@@ -28,20 +28,19 @@ impl<'tcx> MirPass<'tcx> for ElaborateDrops {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n         debug!(\"elaborate_drops({:?} @ {:?})\", body.source, body.span);\n \n-        let mut un_derefer = UnDerefer { tcx: tcx, derefer_sidetable: Default::default() };\n-        un_derefer.ref_finder(body);\n         let def_id = body.source.def_id();\n         let param_env = tcx.param_env_reveal_all_normalized(def_id);\n-        let move_data = match MoveData::gather_moves(body, tcx, param_env) {\n+        let (side_table, move_data) = match MoveData::gather_moves(body, tcx, param_env) {\n             Ok(move_data) => move_data,\n             Err((move_data, _)) => {\n                 tcx.sess.delay_span_bug(\n                     body.span,\n                     \"No `move_errors` should be allowed in MIR borrowck\",\n                 );\n-                move_data\n+                (Default::default(), move_data)\n             }\n         };\n+        let un_derefer = UnDerefer { tcx: tcx, derefer_sidetable: side_table };\n         let elaborate_patch = {\n             let body = &*body;\n             let env = MoveDataParamEnv { move_data, param_env };"}, {"sha": "96b715402e772389a42864a9f398aa1066bde4ad", "filename": "compiler/rustc_mir_transform/src/remove_uninit_drops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_uninit_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dfdd64433b07239fbac50b8227b6e03a0ba8f30/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_uninit_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_uninit_drops.rs?ref=7dfdd64433b07239fbac50b8227b6e03a0ba8f30", "patch": "@@ -21,7 +21,7 @@ pub struct RemoveUninitDrops;\n impl<'tcx> MirPass<'tcx> for RemoveUninitDrops {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n         let param_env = tcx.param_env(body.source.def_id());\n-        let Ok(move_data) = MoveData::gather_moves(body, tcx, param_env) else {\n+        let Ok((_,move_data)) = MoveData::gather_moves(body, tcx, param_env) else {\n             // We could continue if there are move errors, but there's not much point since our\n             // init data isn't complete.\n             return;"}]}