{"sha": "003c892f9f5bdb8b19f27e75e9d89d148ce030e8", "node_id": "C_kwDOAAsO6NoAKDAwM2M4OTJmOWY1YmRiOGIxOWYyN2U3NWU5ZDg5ZDE0OGNlMDMwZTg", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-01-19T12:11:26Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-03-02T18:26:53Z"}, "message": "Fix Ok(()) suggestion when desugaring is involved.", "tree": {"sha": "ff30a96fdf41fe5a7026b657f47036e53e2a04aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff30a96fdf41fe5a7026b657f47036e53e2a04aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/003c892f9f5bdb8b19f27e75e9d89d148ce030e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/003c892f9f5bdb8b19f27e75e9d89d148ce030e8", "html_url": "https://github.com/rust-lang/rust/commit/003c892f9f5bdb8b19f27e75e9d89d148ce030e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/003c892f9f5bdb8b19f27e75e9d89d148ce030e8/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c42d846add941a26bd254911e16f02c4a3f9346f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c42d846add941a26bd254911e16f02c4a3f9346f", "html_url": "https://github.com/rust-lang/rust/commit/c42d846add941a26bd254911e16f02c4a3f9346f"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "501ff2e3850be89ce9262dd6441764a6e481b5a0", "filename": "compiler/rustc_typeck/src/check/demand.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/003c892f9f5bdb8b19f27e75e9d89d148ce030e8/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/003c892f9f5bdb8b19f27e75e9d89d148ce030e8/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs?ref=003c892f9f5bdb8b19f27e75e9d89d148ce030e8", "patch": "@@ -276,11 +276,28 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             // we suggest adding a separate return expression instead.\n             // (To avoid things like suggesting `Ok(while .. { .. })`.)\n             if expr_ty.is_unit() {\n+                let mut id = expr.hir_id;\n+                let mut parent;\n+\n+                // Unroll desugaring, to make sure this works for `for` loops etc.\n+                loop {\n+                    parent = self.tcx.hir().get_parent_node(id);\n+                    if let Some(parent_span) = self.tcx.hir().opt_span(parent) {\n+                        if parent_span.find_ancestor_inside(expr.span).is_some() {\n+                            // The parent node is part of the same span, so is the result of the\n+                            // same expansion/desugaring and not the 'real' parent node.\n+                            id = parent;\n+                            continue;\n+                        }\n+                    }\n+                    break;\n+                }\n+\n                 if let Some(hir::Node::Block(&hir::Block {\n                     span: block_span, expr: Some(e), ..\n-                })) = self.tcx.hir().find(self.tcx.hir().get_parent_node(expr.hir_id))\n+                })) = self.tcx.hir().find(parent)\n                 {\n-                    if e.hir_id == expr.hir_id {\n+                    if e.hir_id == id {\n                         if let Some(span) = expr.span.find_ancestor_inside(block_span) {\n                             let return_suggestions =\n                                 if self.tcx.is_diagnostic_item(sym::Result, expected_adt.did) {"}]}