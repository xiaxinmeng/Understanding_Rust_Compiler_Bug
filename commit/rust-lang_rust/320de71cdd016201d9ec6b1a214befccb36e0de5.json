{"sha": "320de71cdd016201d9ec6b1a214befccb36e0de5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMGRlNzFjZGQwMTYyMDFkOWVjNmIxYTIxNGJlZmNjYjM2ZTBkZTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-30T21:08:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-30T21:08:49Z"}, "message": "Rollup merge of #72657 - flip1995:impl_lint_pass-ty, r=matthewjasper\n\nAllow types (with lifetimes/generics) in impl_lint_pass\n\ncc https://github.com/rust-lang/rust-clippy/pull/5279#discussion_r430790267\n\nThis allows to implement `LintPass` for types with lifetimes and/or generics. The only thing, I'm not sure of is the `LintPass::name` function, which now includes the lifetime(s) (which will be `'_` most of the time) in the name returned for the lint pass, if it exists. But I don't think that this should be a problem, since the `LintPass::name` is never used for output for the user (?).", "tree": {"sha": "94d62744ec76cca7e83797fad3d56754e7195099", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94d62744ec76cca7e83797fad3d56754e7195099"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/320de71cdd016201d9ec6b1a214befccb36e0de5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe0stiCRBK7hj4Ov3rIwAAdHIIAKvSXqOh+hsCmFzSBhdFx/fC\nVeN3a/4b+IbH/C13oKKyL218W/EGSlkviqA8MgHmE2n8MOyNCjqxzcUaE8g5p+Mj\nDXvMWGvPYSWwIYJ/4ibspjilKGtOGrM5LBDme00pvhXm4LemnCguyN9/Svv5d9E5\n7tSMQxEdAVfNU/hkduOhZZMePLuxhtPz43Sj6yKikTLKnVekCqvw4I2xjdDbzhRe\nodjn+2eQW05Yf+IXqs7wmPYT++wetpMetr8Z8+bxGC1yp2BGo7EIBLEyq+ZrKoPP\ndXjmIdLHQzGaNue/tr47fYjTL5APKmDN4r3HYP0PZXyCT0a0zSEzkEjXtWWdTwk=\n=SFKJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 94d62744ec76cca7e83797fad3d56754e7195099\nparent 5f0aefda49581aae96882552592a4881d2c099df\nparent b12489248084f1ea33008e9b77ad2bbd41ee0f7f\nauthor Ralf Jung <post@ralfj.de> 1590872929 +0200\ncommitter GitHub <noreply@github.com> 1590872929 +0200\n\nRollup merge of #72657 - flip1995:impl_lint_pass-ty, r=matthewjasper\n\nAllow types (with lifetimes/generics) in impl_lint_pass\n\ncc https://github.com/rust-lang/rust-clippy/pull/5279#discussion_r430790267\n\nThis allows to implement `LintPass` for types with lifetimes and/or generics. The only thing, I'm not sure of is the `LintPass::name` function, which now includes the lifetime(s) (which will be `'_` most of the time) in the name returned for the lint pass, if it exists. But I don't think that this should be a problem, since the `LintPass::name` is never used for output for the user (?).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/320de71cdd016201d9ec6b1a214befccb36e0de5", "html_url": "https://github.com/rust-lang/rust/commit/320de71cdd016201d9ec6b1a214befccb36e0de5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/320de71cdd016201d9ec6b1a214befccb36e0de5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f0aefda49581aae96882552592a4881d2c099df", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f0aefda49581aae96882552592a4881d2c099df", "html_url": "https://github.com/rust-lang/rust/commit/5f0aefda49581aae96882552592a4881d2c099df"}, {"sha": "b12489248084f1ea33008e9b77ad2bbd41ee0f7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b12489248084f1ea33008e9b77ad2bbd41ee0f7f", "html_url": "https://github.com/rust-lang/rust/commit/b12489248084f1ea33008e9b77ad2bbd41ee0f7f"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "8a66fac1e3634e3b9f317a36f5497dc2edd0592d", "filename": "src/librustc_session/lint.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/320de71cdd016201d9ec6b1a214befccb36e0de5/src%2Flibrustc_session%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/320de71cdd016201d9ec6b1a214befccb36e0de5/src%2Flibrustc_session%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Flint.rs?ref=320de71cdd016201d9ec6b1a214befccb36e0de5", "patch": "@@ -347,14 +347,14 @@ pub trait LintPass {\n     fn name(&self) -> &'static str;\n }\n \n-/// Implements `LintPass for $name` with the given list of `Lint` statics.\n+/// Implements `LintPass for $ty` with the given list of `Lint` statics.\n #[macro_export]\n macro_rules! impl_lint_pass {\n-    ($name:ident => [$($lint:expr),* $(,)?]) => {\n-        impl $crate::lint::LintPass for $name {\n-            fn name(&self) -> &'static str { stringify!($name) }\n+    ($ty:ty => [$($lint:expr),* $(,)?]) => {\n+        impl $crate::lint::LintPass for $ty {\n+            fn name(&self) -> &'static str { stringify!($ty) }\n         }\n-        impl $name {\n+        impl $ty {\n             pub fn get_lints() -> $crate::lint::LintArray { $crate::lint_array!($($lint),*) }\n         }\n     };"}, {"sha": "b3c2a542792f0efa85ee9a4df8035f37bcaaa01c", "filename": "src/test/ui-fulldeps/lint-pass-macros.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/320de71cdd016201d9ec6b1a214befccb36e0de5/src%2Ftest%2Fui-fulldeps%2Flint-pass-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/320de71cdd016201d9ec6b1a214befccb36e0de5/src%2Ftest%2Fui-fulldeps%2Flint-pass-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-pass-macros.rs?ref=320de71cdd016201d9ec6b1a214befccb36e0de5", "patch": "@@ -0,0 +1,26 @@\n+// compile-flags: -Z unstable-options\n+// check-pass\n+\n+#![feature(rustc_private)]\n+\n+extern crate rustc_session;\n+\n+use rustc_session::lint::{LintArray, LintPass};\n+use rustc_session::{declare_lint, declare_lint_pass, impl_lint_pass};\n+\n+declare_lint! {\n+    pub TEST_LINT,\n+    Allow,\n+    \"test\"\n+}\n+\n+struct Foo;\n+\n+struct Bar<'a>(&'a u32);\n+\n+impl_lint_pass!(Foo => [TEST_LINT]);\n+impl_lint_pass!(Bar<'_> => [TEST_LINT]);\n+\n+declare_lint_pass!(Baz => [TEST_LINT]);\n+\n+fn main() {}"}]}