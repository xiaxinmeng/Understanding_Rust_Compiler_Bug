{"sha": "05121a22e61c02933ea1c619e4126b4dafe2a2d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1MTIxYTIyZTYxYzAyOTMzZWExYzYxOWU0MTI2YjRkYWZlMmEyZDE=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-04-20T23:10:00Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-04-20T23:10:00Z"}, "message": "fix is_module check", "tree": {"sha": "85e3ef8c4f76bce8a793c3c21b6dc34dff4c7449", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85e3ef8c4f76bce8a793c3c21b6dc34dff4c7449"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05121a22e61c02933ea1c619e4126b4dafe2a2d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05121a22e61c02933ea1c619e4126b4dafe2a2d1", "html_url": "https://github.com/rust-lang/rust/commit/05121a22e61c02933ea1c619e4126b4dafe2a2d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05121a22e61c02933ea1c619e4126b4dafe2a2d1/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9ff7ac9c3e583e7723722319d48caf35bdc0efb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9ff7ac9c3e583e7723722319d48caf35bdc0efb", "html_url": "https://github.com/rust-lang/rust/commit/a9ff7ac9c3e583e7723722319d48caf35bdc0efb"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "0aa7aa763c2afa7139497d67c04a704ff66e3e69", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/05121a22e61c02933ea1c619e4126b4dafe2a2d1/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05121a22e61c02933ea1c619e4126b4dafe2a2d1/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=05121a22e61c02933ea1c619e4126b4dafe2a2d1", "patch": "@@ -169,11 +169,11 @@ impl<'tcx> Context<'tcx> {\n \n     fn render_item(&self, it: &clean::Item, is_module: bool) -> String {\n         let mut title = String::new();\n-        if is_module {\n+        if !is_module {\n             title.push_str(&it.name.unwrap().as_str());\n         }\n         if !it.is_primitive() && !it.is_keyword() {\n-            if is_module {\n+            if !is_module {\n                 title.push_str(\" in \");\n             }\n             // No need to include the namespace for primitive types and keywords\n@@ -597,7 +597,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n \n         info!(\"Recursing into {}\", self.dst.display());\n \n-        let buf = self.render_item(item, false);\n+        let buf = self.render_item(item, true);\n         // buf will be empty if the module is stripped and there is no redirect for it\n         if !buf.is_empty() {\n             self.shared.ensure_dir(&self.dst)?;\n@@ -640,7 +640,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             self.render_redirect_pages = item.is_stripped();\n         }\n \n-        let buf = self.render_item(&item, true);\n+        let buf = self.render_item(&item, false);\n         // buf will be empty if the item is stripped and there is no redirect for it\n         if !buf.is_empty() {\n             let name = item.name.as_ref().unwrap();"}]}