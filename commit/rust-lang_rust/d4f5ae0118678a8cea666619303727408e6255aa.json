{"sha": "d4f5ae0118678a8cea666619303727408e6255aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0ZjVhZTAxMTg2NzhhOGNlYTY2NjYxOTMwMzcyNzQwOGU2MjU1YWE=", "commit": {"author": {"name": "Chris Morgan", "email": "me@chrismorgan.info", "date": "2013-12-11T03:46:16Z"}, "committer": {"name": "Chris Morgan", "email": "me@chrismorgan.info", "date": "2013-12-11T03:46:16Z"}, "message": "Remove the following unused special identifiers:\n\n- underscore           (\"_\")\n- unary                (\"unary\")\n- not_fn               (\"!\")\n- idx_fn               (\"[]\")\n- unary_minus_fn       (\"unary-\")\n- item                 (\"item\")\n- block                (\"block\")\n- stmt                 (\"stmt\")\n- pat                  (\"pat\")\n- expr                 (\"expr\")\n- ty                   (\"ty\")\n- ident                (\"ident\")\n- path                 (\"path\")\n- descrim              (\"descrim\")\n- clownshoe_stack_shim (\"__rust_stack_shim\")\n- blk                  (\"blk\")\n- c_abi                (\"C\")\n\n(And, of course, renumber everything to match.)", "tree": {"sha": "9c5248c650aabfab167a770db2f1561016b6a830", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c5248c650aabfab167a770db2f1561016b6a830"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4f5ae0118678a8cea666619303727408e6255aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4f5ae0118678a8cea666619303727408e6255aa", "html_url": "https://github.com/rust-lang/rust/commit/d4f5ae0118678a8cea666619303727408e6255aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4f5ae0118678a8cea666619303727408e6255aa/comments", "author": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "267ac45f410e29a8fa52843c9afa58e56cc33479", "url": "https://api.github.com/repos/rust-lang/rust/commits/267ac45f410e29a8fa52843c9afa58e56cc33479", "html_url": "https://github.com/rust-lang/rust/commit/267ac45f410e29a8fa52843c9afa58e56cc33479"}], "stats": {"total": 174, "additions": 67, "deletions": 107}, "files": [{"sha": "eb32efbec0f2a435572ab78fec79f0e9c753d69a", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 67, "deletions": 107, "changes": 174, "blob_url": "https://github.com/rust-lang/rust/blob/d4f5ae0118678a8cea666619303727408e6255aa/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4f5ae0118678a8cea666619303727408e6255aa/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=d4f5ae0118678a8cea666619303727408e6255aa", "patch": "@@ -374,128 +374,88 @@ macro_rules! declare_special_idents_and_keywords {(\n }}\n \n // If modifying the numbers below, remember to modify these as appropriate\n-static SELF_KEYWORD_NAME: Name = 8;\n-static STATIC_KEYWORD_NAME: Name = 27;\n-static STRICT_KEYWORD_START: Name = 32;\n-static STRICT_KEYWORD_FINAL: Name = 65;\n-static RESERVED_KEYWORD_START: Name = 66;\n-static RESERVED_KEYWORD_FINAL: Name = 72;\n+static SELF_KEYWORD_NAME: Name = 3;\n+static STATIC_KEYWORD_NAME: Name = 10;\n+static STRICT_KEYWORD_START: Name = 14;\n+static STRICT_KEYWORD_FINAL: Name = 47;\n+static RESERVED_KEYWORD_START: Name = 48;\n+static RESERVED_KEYWORD_FINAL: Name = 54;\n \n declare_special_idents_and_keywords! {\n     pub mod special_idents {\n         // These ones are statics\n-        (0,                          underscore,             \"_\");      // apparently unused?\n-        (1,                          anon,                   \"anon\");\n-        (2,                          invalid,                \"\");       // ''\n-        (3,                          unary,                  \"unary\");  // apparently unused?\n-        (4,                          not_fn,                 \"!\");      // apparently unused?\n-        (5,                          idx_fn,                 \"[]\");     // apparently unused?\n-        (6,                          unary_minus_fn,         \"unary-\"); // apparently unused?\n-        (7,                          clownshoes_extensions,  \"__extensions__\");\n+\n+        (0,                          anon,                   \"anon\");\n+        (1,                          invalid,                \"\");       // ''\n+        (2,                          clownshoes_extensions,  \"__extensions__\");\n \n         (super::SELF_KEYWORD_NAME,   self_,                  \"self\"); // 'self'\n \n-        /* for matcher NTs */\n-        // none of these appear to be used, but perhaps references to\n-        // these are artificially fabricated by the macro system....\n-        (9,                          item,                   \"item\");\n-        (10,                         block,                  \"block\");\n-        (11,                         stmt,                   \"stmt\");\n-        (12,                         pat,                    \"pat\");\n-        (13,                         expr,                   \"expr\");\n-        (14,                         ty,                     \"ty\");\n-        (15,                         ident,                  \"ident\");\n-        (16,                         path,                   \"path\");\n-        (17,                         tt,                     \"tt\");\n-        (18,                         matchers,               \"matchers\");\n-\n-        // for the type // apparently unused?\n-        (19,                         str,                    \"str\");\n-\n-        /* outside of libsyntax */\n-        (20,                         arg,                    \"arg\");\n-        (21,                         descrim,                \"descrim\");\n-        (22,                         clownshoe_abi,          \"__rust_abi\");\n-        (23,                         clownshoe_stack_shim,   \"__rust_stack_shim\");\n-        (24,                         main,                   \"main\");\n-        (25,                         opaque,                 \"<opaque>\");\n-        (26,                         blk,                    \"blk\");\n+        // for matcher NTs\n+        (4,                          tt,                     \"tt\");\n+        (5,                          matchers,               \"matchers\");\n+\n+        // outside of libsyntax\n+        (6,                          arg,                    \"arg\");\n+        (7,                          clownshoe_abi,          \"__rust_abi\");\n+        (8,                          main,                   \"main\");\n+        (9,                          opaque,                 \"<opaque>\");\n         (super::STATIC_KEYWORD_NAME, statik,                 \"static\");\n-        (28,                         clownshoes_foreign_mod, \"__foreign_mod__\");\n-        (29,                         unnamed_field,          \"<unnamed_field>\");\n-        (30,                         c_abi,                  \"C\"); // apparently unused?\n-        (31,                         type_self,              \"Self\"); // `Self`\n-\n-        // here are the ones that actually occur in the source. Maybe the rest\n-        // should be removed?\n-        /*\n-        special_idents::anon\n-        special_idents::arg\n-        special_idents::blk\n-        special_idents::clownshoe_abi\n-        special_idents::clownshoe_stack_shim\n-        special_idents::clownshoes_extensions\n-        special_idents::clownshoes_foreign_mod\n-        special_idents::descrim\n-        special_idents::invalid\n-        special_idents::main\n-        special_idents::matchers\n-        special_idents::opaque\n-        special_idents::self_\n-        special_idents::statik\n-        special_idents::tt\n-        special_idents::type_self\n-        special_idents::unnamed_field\n-        */\n+        (11,                         clownshoes_foreign_mod, \"__foreign_mod__\");\n+        (12,                         unnamed_field,          \"<unnamed_field>\");\n+        (13,                         type_self,              \"Self\"); // `Self`\n     }\n \n     pub mod keywords {\n         // These ones are variants of the Keyword enum\n-        (32,                         As,         \"as\");\n-        (33,                         Break,      \"break\");\n-        (34,                         Const,      \"const\");\n-        (35,                         Do,         \"do\");\n-        (36,                         Else,       \"else\");\n-        (37,                         Enum,       \"enum\");\n-        (38,                         Extern,     \"extern\");\n-        (39,                         False,      \"false\");\n-        (40,                         Fn,         \"fn\");\n-        (41,                         For,        \"for\");\n-        (42,                         If,         \"if\");\n-        (43,                         Impl,       \"impl\");\n-        (44,                         In,         \"in\");\n-        (45,                         Let,        \"let\");\n-        (46,                         __LogLevel, \"__log_level\");\n-        (47,                         Loop,       \"loop\");\n-        (48,                         Match,      \"match\");\n-        (49,                         Mod,        \"mod\");\n-        (50,                         Mut,        \"mut\");\n-        (51,                         Once,       \"once\");\n-        (52,                         Priv,       \"priv\");\n-        (53,                         Pub,        \"pub\");\n-        (54,                         Ref,        \"ref\");\n-        (55,                         Return,     \"return\");\n+\n+        // Strict keywords\n+        (14,                         As,         \"as\");\n+        (15,                         Break,      \"break\");\n+        (16,                         Const,      \"const\");\n+        (17,                         Do,         \"do\");\n+        (18,                         Else,       \"else\");\n+        (19,                         Enum,       \"enum\");\n+        (20,                         Extern,     \"extern\");\n+        (21,                         False,      \"false\");\n+        (22,                         Fn,         \"fn\");\n+        (23,                         For,        \"for\");\n+        (24,                         If,         \"if\");\n+        (25,                         Impl,       \"impl\");\n+        (26,                         In,         \"in\");\n+        (27,                         Let,        \"let\");\n+        (28,                         __LogLevel, \"__log_level\");\n+        (29,                         Loop,       \"loop\");\n+        (30,                         Match,      \"match\");\n+        (31,                         Mod,        \"mod\");\n+        (32,                         Mut,        \"mut\");\n+        (33,                         Once,       \"once\");\n+        (34,                         Priv,       \"priv\");\n+        (35,                         Pub,        \"pub\");\n+        (36,                         Ref,        \"ref\");\n+        (37,                         Return,     \"return\");\n         // Static and Self are also special idents (prefill de-dupes)\n         (super::STATIC_KEYWORD_NAME, Static,     \"static\");\n         (super::SELF_KEYWORD_NAME,   Self,       \"self\");\n-        (56,                         Struct,     \"struct\");\n-        (57,                         Super,      \"super\");\n-        (58,                         True,       \"true\");\n-        (59,                         Trait,      \"trait\");\n-        (60,                         Type,       \"type\");\n-        (61,                         Unsafe,     \"unsafe\");\n-        (62,                         Use,        \"use\");\n-        (63,                         While,      \"while\");\n-        (64,                         Continue,   \"continue\");\n-        (65,                         Proc,       \"proc\");\n-\n-        (66,                         Alignof,    \"alignof\");\n-        (67,                         Be,         \"be\");\n-        (68,                         Offsetof,   \"offsetof\");\n-        (69,                         Pure,       \"pure\");\n-        (70,                         Sizeof,     \"sizeof\");\n-        (71,                         Typeof,     \"typeof\");\n-        (72,                         Yield,      \"yield\");\n+        (38,                         Struct,     \"struct\");\n+        (39,                         Super,      \"super\");\n+        (40,                         True,       \"true\");\n+        (41,                         Trait,      \"trait\");\n+        (42,                         Type,       \"type\");\n+        (43,                         Unsafe,     \"unsafe\");\n+        (44,                         Use,        \"use\");\n+        (45,                         While,      \"while\");\n+        (46,                         Continue,   \"continue\");\n+        (47,                         Proc,       \"proc\");\n+\n+        // Reserved keywords\n+        (48,                         Alignof,    \"alignof\");\n+        (49,                         Be,         \"be\");\n+        (50,                         Offsetof,   \"offsetof\");\n+        (51,                         Pure,       \"pure\");\n+        (52,                         Sizeof,     \"sizeof\");\n+        (53,                         Typeof,     \"typeof\");\n+        (54,                         Yield,      \"yield\");\n     }\n }\n "}]}