{"sha": "d365742bc62f78b00275504229bdbe8b88e3db3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNjU3NDJiYzYyZjc4YjAwMjc1NTA0MjI5YmRiZThiODhlM2RiM2U=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-10-07T10:18:40Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-10-07T10:50:36Z"}, "message": "Fix FP in `fn_to_numeric_cast_with_truncation`\n\nWe only want this lint to check casts to numeric, as per the lint title.\nRust already has a built-in check for all other casts\n[here][rust_check].\n\n[rust_check]: https://github.com/rust-lang/rust/blob/5472b0718f286266ab89acdf234c3552de7e973c/src/librustc_typeck/check/cast.rs#L430-L433", "tree": {"sha": "3304dfd4ed83b6962dd114016babfa2c4aff85b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3304dfd4ed83b6962dd114016babfa2c4aff85b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d365742bc62f78b00275504229bdbe8b88e3db3e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlu55P0ACgkQtvoGpuDi\nZlvZ5Q//Z818axUOWt7WzhPhk0HeYRzZItkmS83bUaGMUC7/isfKQdqdjTN0QRrn\n1MSMlqJYBilFn72kikoOLntu9FPsQy85YQBmMVEgO75yaOhXTMus/cPKIyBwh/1n\n5ABhUuA4A5j+4gqNIjigoBG3+gEKBpqoSMjEZ2iB2zBuLwqn5bciLmY0xfk3yYNB\niVfPwPsa5yUM7jz7y+flrS56+DiCwOmbMaj2wS0fDf9x9i/X3QdACKPVxEMjJ2gc\n55VWfa4IPdWoSNXW5q3tzb7S5Om3Dtj5qESdw23RC6islCypCT63u8tryPr+3CdV\nGJhaPFVcdRK+0A3/zvYKI5SxAiGYU9r1r1BE6rBWC5hIeyXZ6hiK7RJkJmEziFgD\nhkbgB/qKVbXWS3zqvpGISwxFKw6wM+Q2JIXqFSftLhpOanWzqvS3lcgku3UlcsG7\nSahbWZD7cwmVP2GVck7H0HT94T6OX8w+PZIgZxX8fHjqo6l6Xo1rOd24HSRkNGDF\n/3gMgHEO5aPo+Ik+OiGmTsS54iWUX41wN6AmXcOU+YZ7K5c3WmU0Gv/eonBxuF8A\nF8Fx571qcss8PV2CEuz+zicRJwt4GrWZsqm/rrmrorLQj2DJtAxjv+19Den1Cd6N\nEG6cUgWvx5suSYVAIEh01JHHZaIFCUw1vCNgVnQFT2wEtTt5A+Y=\n=LYDj\n-----END PGP SIGNATURE-----", "payload": "tree 3304dfd4ed83b6962dd114016babfa2c4aff85b1\nparent 1e0729d48a2c062042f9587bca8e9078bb8ef619\nauthor Philipp Hansch <dev@phansch.net> 1538907520 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1538909436 +0200\n\nFix FP in `fn_to_numeric_cast_with_truncation`\n\nWe only want this lint to check casts to numeric, as per the lint title.\nRust already has a built-in check for all other casts\n[here][rust_check].\n\n[rust_check]: https://github.com/rust-lang/rust/blob/5472b0718f286266ab89acdf234c3552de7e973c/src/librustc_typeck/check/cast.rs#L430-L433\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d365742bc62f78b00275504229bdbe8b88e3db3e", "html_url": "https://github.com/rust-lang/rust/commit/d365742bc62f78b00275504229bdbe8b88e3db3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d365742bc62f78b00275504229bdbe8b88e3db3e/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e0729d48a2c062042f9587bca8e9078bb8ef619", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e0729d48a2c062042f9587bca8e9078bb8ef619", "html_url": "https://github.com/rust-lang/rust/commit/1e0729d48a2c062042f9587bca8e9078bb8ef619"}], "stats": {"total": 57, "additions": 33, "deletions": 24}, "files": [{"sha": "f43b1fe7abe08c9132af974bee613b4fb543fb89", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d365742bc62f78b00275504229bdbe8b88e3db3e/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d365742bc62f78b00275504229bdbe8b88e3db3e/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=d365742bc62f78b00275504229bdbe8b88e3db3e", "patch": "@@ -1088,6 +1088,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for CastPass {\n }\n \n fn lint_fn_to_numeric_cast(cx: &LateContext<'_, '_>, expr: &Expr, cast_expr: &Expr, cast_from: Ty<'_>, cast_to: Ty<'_>) {\n+    // We only want to check casts to `ty::Uint` or `ty::Int`\n+    match cast_to.sty {\n+        ty::Uint(_) | ty::Int(..) => { /* continue on */ },\n+        _ => return\n+    }\n     match cast_from.sty {\n         ty::FnDef(..) | ty::FnPtr(_) => {\n             let from_snippet = snippet(cx, cast_expr.span, \"x\");"}, {"sha": "9bd0ad7687fad5640d532fb021ed3446b2d0e409", "filename": "tests/ui/fn_to_numeric_cast.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d365742bc62f78b00275504229bdbe8b88e3db3e/tests%2Fui%2Ffn_to_numeric_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d365742bc62f78b00275504229bdbe8b88e3db3e/tests%2Fui%2Ffn_to_numeric_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffn_to_numeric_cast.rs?ref=d365742bc62f78b00275504229bdbe8b88e3db3e", "patch": "@@ -31,6 +31,10 @@ fn test_function_to_numeric_cast() {\n \n     // Casting to usize is OK and should not warn\n     let _ = foo as usize;\n+\n+    // Cast `f` (a `FnDef`) to `fn()` should not warn\n+    fn f() {}\n+    let _ = f as fn();\n }\n \n fn test_function_var_to_numeric_cast() {"}, {"sha": "27eeb9091544682e9fff9e1668710a0d96cabd79", "filename": "tests/ui/fn_to_numeric_cast.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/d365742bc62f78b00275504229bdbe8b88e3db3e/tests%2Fui%2Ffn_to_numeric_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d365742bc62f78b00275504229bdbe8b88e3db3e/tests%2Fui%2Ffn_to_numeric_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffn_to_numeric_cast.stderr?ref=d365742bc62f78b00275504229bdbe8b88e3db3e", "patch": "@@ -69,75 +69,75 @@ error: casting function pointer `foo` to `u128`\n    |             ^^^^^^^^^^^ help: try: `foo as usize`\n \n error: casting function pointer `abc` to `i8`, which truncates the value\n-  --> $DIR/fn_to_numeric_cast.rs:39:13\n+  --> $DIR/fn_to_numeric_cast.rs:43:13\n    |\n-39 |     let _ = abc as i8;\n+43 |     let _ = abc as i8;\n    |             ^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `i16`, which truncates the value\n-  --> $DIR/fn_to_numeric_cast.rs:40:13\n+  --> $DIR/fn_to_numeric_cast.rs:44:13\n    |\n-40 |     let _ = abc as i16;\n+44 |     let _ = abc as i16;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `i32`, which truncates the value\n-  --> $DIR/fn_to_numeric_cast.rs:41:13\n+  --> $DIR/fn_to_numeric_cast.rs:45:13\n    |\n-41 |     let _ = abc as i32;\n+45 |     let _ = abc as i32;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `i64`\n-  --> $DIR/fn_to_numeric_cast.rs:42:13\n+  --> $DIR/fn_to_numeric_cast.rs:46:13\n    |\n-42 |     let _ = abc as i64;\n+46 |     let _ = abc as i64;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `i128`\n-  --> $DIR/fn_to_numeric_cast.rs:43:13\n+  --> $DIR/fn_to_numeric_cast.rs:47:13\n    |\n-43 |     let _ = abc as i128;\n+47 |     let _ = abc as i128;\n    |             ^^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `isize`\n-  --> $DIR/fn_to_numeric_cast.rs:44:13\n+  --> $DIR/fn_to_numeric_cast.rs:48:13\n    |\n-44 |     let _ = abc as isize;\n+48 |     let _ = abc as isize;\n    |             ^^^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u8`, which truncates the value\n-  --> $DIR/fn_to_numeric_cast.rs:46:13\n+  --> $DIR/fn_to_numeric_cast.rs:50:13\n    |\n-46 |     let _ = abc as u8;\n+50 |     let _ = abc as u8;\n    |             ^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u16`, which truncates the value\n-  --> $DIR/fn_to_numeric_cast.rs:47:13\n+  --> $DIR/fn_to_numeric_cast.rs:51:13\n    |\n-47 |     let _ = abc as u16;\n+51 |     let _ = abc as u16;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u32`, which truncates the value\n-  --> $DIR/fn_to_numeric_cast.rs:48:13\n+  --> $DIR/fn_to_numeric_cast.rs:52:13\n    |\n-48 |     let _ = abc as u32;\n+52 |     let _ = abc as u32;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u64`\n-  --> $DIR/fn_to_numeric_cast.rs:49:13\n+  --> $DIR/fn_to_numeric_cast.rs:53:13\n    |\n-49 |     let _ = abc as u64;\n+53 |     let _ = abc as u64;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u128`\n-  --> $DIR/fn_to_numeric_cast.rs:50:13\n+  --> $DIR/fn_to_numeric_cast.rs:54:13\n    |\n-50 |     let _ = abc as u128;\n+54 |     let _ = abc as u128;\n    |             ^^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `f` to `i32`, which truncates the value\n-  --> $DIR/fn_to_numeric_cast.rs:57:5\n+  --> $DIR/fn_to_numeric_cast.rs:61:5\n    |\n-57 |     f as i32\n+61 |     f as i32\n    |     ^^^^^^^^ help: try: `f as usize`\n \n error: aborting due to 23 previous errors"}]}