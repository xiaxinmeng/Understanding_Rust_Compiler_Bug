{"sha": "4acb8ac46c9ae4e28b4f9328202c4fdb93a6c6ea", "node_id": "C_kwDOAAsO6NoAKDRhY2I4YWM0NmM5YWU0ZTI4YjRmOTMyODIwMmM0ZmRiOTNhNmM2ZWE", "commit": {"author": {"name": "Thomas de Zeeuw", "email": "thomasdezeeuw@gmail.com", "date": "2022-01-27T08:54:28Z"}, "committer": {"name": "Thomas de Zeeuw", "email": "thomasdezeeuw@gmail.com", "date": "2022-01-27T08:54:28Z"}, "message": "Use sockaddr_un in unix SocketAddr::from_path", "tree": {"sha": "e3120ca0a437d76ad771871e4833764e3b3828f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3120ca0a437d76ad771871e4833764e3b3828f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4acb8ac46c9ae4e28b4f9328202c4fdb93a6c6ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4acb8ac46c9ae4e28b4f9328202c4fdb93a6c6ea", "html_url": "https://github.com/rust-lang/rust/commit/4acb8ac46c9ae4e28b4f9328202c4fdb93a6c6ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4acb8ac46c9ae4e28b4f9328202c4fdb93a6c6ea/comments", "author": {"login": "Thomasdezeeuw", "id": 3159064, "node_id": "MDQ6VXNlcjMxNTkwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3159064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thomasdezeeuw", "html_url": "https://github.com/Thomasdezeeuw", "followers_url": "https://api.github.com/users/Thomasdezeeuw/followers", "following_url": "https://api.github.com/users/Thomasdezeeuw/following{/other_user}", "gists_url": "https://api.github.com/users/Thomasdezeeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thomasdezeeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thomasdezeeuw/subscriptions", "organizations_url": "https://api.github.com/users/Thomasdezeeuw/orgs", "repos_url": "https://api.github.com/users/Thomasdezeeuw/repos", "events_url": "https://api.github.com/users/Thomasdezeeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/Thomasdezeeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Thomasdezeeuw", "id": 3159064, "node_id": "MDQ6VXNlcjMxNTkwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3159064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thomasdezeeuw", "html_url": "https://github.com/Thomasdezeeuw", "followers_url": "https://api.github.com/users/Thomasdezeeuw/followers", "following_url": "https://api.github.com/users/Thomasdezeeuw/following{/other_user}", "gists_url": "https://api.github.com/users/Thomasdezeeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thomasdezeeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thomasdezeeuw/subscriptions", "organizations_url": "https://api.github.com/users/Thomasdezeeuw/orgs", "repos_url": "https://api.github.com/users/Thomasdezeeuw/repos", "events_url": "https://api.github.com/users/Thomasdezeeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/Thomasdezeeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca9a3c9a9fc7ec854919b2b932a21fc8c5c76d7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca9a3c9a9fc7ec854919b2b932a21fc8c5c76d7f", "html_url": "https://github.com/rust-lang/rust/commit/ca9a3c9a9fc7ec854919b2b932a21fc8c5c76d7f"}], "stats": {"total": 36, "additions": 1, "deletions": 35}, "files": [{"sha": "40ee8833bbf4635d9327e6302063ed737ae8b52b", "filename": "library/std/src/os/unix/net/addr.rs", "status": "modified", "additions": 1, "deletions": 35, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/4acb8ac46c9ae4e28b4f9328202c4fdb93a6c6ea/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4acb8ac46c9ae4e28b4f9328202c4fdb93a6c6ea/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs?ref=4acb8ac46c9ae4e28b4f9328202c4fdb93a6c6ea", "patch": "@@ -164,41 +164,7 @@ impl SocketAddr {\n     where\n         P: AsRef<Path>,\n     {\n-        // SAFETY: All zeros is a valid representation for `sockaddr_un`.\n-        let mut storage: libc::sockaddr_un = unsafe { mem::zeroed() };\n-\n-        let bytes = path.as_ref().as_os_str().as_bytes();\n-        if bytes.contains(&b'\\0') {\n-            return Err(io::Error::new(\n-                io::ErrorKind::InvalidInput,\n-                \"path can't contain null bytes\",\n-            ));\n-        } else if bytes.len() >= storage.sun_path.len() {\n-            return Err(io::Error::new(\n-                io::ErrorKind::InvalidInput,\n-                \"path must be shorter than SUN_LEN\",\n-            ));\n-        }\n-\n-        storage.sun_family = libc::AF_UNIX as _;\n-        // SAFETY: `bytes` and `addr.sun_path` are not overlapping and\n-        // both point to valid memory.\n-        // NOTE: We zeroed the memory above, so the path is already null\n-        // terminated.\n-        unsafe {\n-            ptr::copy_nonoverlapping(\n-                bytes.as_ptr(),\n-                storage.sun_path.as_mut_ptr().cast(),\n-                bytes.len(),\n-            )\n-        };\n-\n-        let base = &storage as *const _ as usize;\n-        let path = &storage.sun_path as *const _ as usize;\n-        let sun_path_offset = path - base;\n-        let length = sun_path_offset + bytes.len() + 1;\n-\n-        Ok(SocketAddr { addr: storage, len: length as _ })\n+        sockaddr_un(path.as_ref()).map(|(addr, len)| SocketAddr { addr, len })\n     }\n \n     /// Returns `true` if the address is unnamed."}]}