{"sha": "2f25e4cd17e0f97d4da9547c9b2201b5918c34b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMjVlNGNkMTdlMGY5N2Q0ZGE5NTQ3YzliMjIwMWI1OTE4YzM0YjU=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-01-30T01:04:18Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-01-30T01:04:18Z"}, "message": "Error with EINVAL on unsupported `whence` argument", "tree": {"sha": "24b5f652720e9dffab3dc69bc073cd36d6808161", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24b5f652720e9dffab3dc69bc073cd36d6808161"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f25e4cd17e0f97d4da9547c9b2201b5918c34b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f25e4cd17e0f97d4da9547c9b2201b5918c34b5", "html_url": "https://github.com/rust-lang/rust/commit/2f25e4cd17e0f97d4da9547c9b2201b5918c34b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f25e4cd17e0f97d4da9547c9b2201b5918c34b5/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d0902a1e131f57995e705c362b46d59bbf63234", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d0902a1e131f57995e705c362b46d59bbf63234", "html_url": "https://github.com/rust-lang/rust/commit/0d0902a1e131f57995e705c362b46d59bbf63234"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "388117daee6bb2b4da86020648383456acae1b49", "filename": "src/shims/fs.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2f25e4cd17e0f97d4da9547c9b2201b5918c34b5/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f25e4cd17e0f97d4da9547c9b2201b5918c34b5/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=2f25e4cd17e0f97d4da9547c9b2201b5918c34b5", "patch": "@@ -285,7 +285,9 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         } else if whence == this.eval_libc_i32(\"SEEK_END\")? {\n             SeekFrom::End(offset)\n         } else {\n-            throw_unsup_format!(\"Unsupported whence argument to lseek64: {}\", whence)\n+            let einval = this.eval_libc(\"EINVAL\")?;\n+            this.set_last_error(einval)?;\n+            return Ok(-1);\n         };\n \n         if let Some(handle) = this.machine.file_handler.handles.get_mut(&fd) {"}]}