{"sha": "3a3c3630a25bdd08db0869022e31f9f380f895f6", "node_id": "C_kwDOAAsO6NoAKDNhM2MzNjMwYTI1YmRkMDhkYjA4NjkwMjJlMzFmOWYzODBmODk1ZjY", "commit": {"author": {"name": "hkalbasi", "email": "hamidrezakalbasi@protonmail.com", "date": "2023-05-01T22:58:14Z"}, "committer": {"name": "hkalbasi", "email": "hamidrezakalbasi@protonmail.com", "date": "2023-05-01T23:41:56Z"}, "message": "fix break-outside-of-loop false positive in try block", "tree": {"sha": "b3b9003fdeb1902f330b56ec86a1f247ea3bd622", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3b9003fdeb1902f330b56ec86a1f247ea3bd622"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a3c3630a25bdd08db0869022e31f9f380f895f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a3c3630a25bdd08db0869022e31f9f380f895f6", "html_url": "https://github.com/rust-lang/rust/commit/3a3c3630a25bdd08db0869022e31f9f380f895f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a3c3630a25bdd08db0869022e31f9f380f895f6/comments", "author": {"login": "HKalbasi", "id": 45197576, "node_id": "MDQ6VXNlcjQ1MTk3NTc2", "avatar_url": "https://avatars.githubusercontent.com/u/45197576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HKalbasi", "html_url": "https://github.com/HKalbasi", "followers_url": "https://api.github.com/users/HKalbasi/followers", "following_url": "https://api.github.com/users/HKalbasi/following{/other_user}", "gists_url": "https://api.github.com/users/HKalbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/HKalbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HKalbasi/subscriptions", "organizations_url": "https://api.github.com/users/HKalbasi/orgs", "repos_url": "https://api.github.com/users/HKalbasi/repos", "events_url": "https://api.github.com/users/HKalbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/HKalbasi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HKalbasi", "id": 45197576, "node_id": "MDQ6VXNlcjQ1MTk3NTc2", "avatar_url": "https://avatars.githubusercontent.com/u/45197576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HKalbasi", "html_url": "https://github.com/HKalbasi", "followers_url": "https://api.github.com/users/HKalbasi/followers", "following_url": "https://api.github.com/users/HKalbasi/following{/other_user}", "gists_url": "https://api.github.com/users/HKalbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/HKalbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HKalbasi/subscriptions", "organizations_url": "https://api.github.com/users/HKalbasi/orgs", "repos_url": "https://api.github.com/users/HKalbasi/repos", "events_url": "https://api.github.com/users/HKalbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/HKalbasi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6312fbf521e42e5a5ff193ceee6a8c7735be3a45", "url": "https://api.github.com/repos/rust-lang/rust/commits/6312fbf521e42e5a5ff193ceee6a8c7735be3a45", "html_url": "https://github.com/rust-lang/rust/commit/6312fbf521e42e5a5ff193ceee6a8c7735be3a45"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "611031eb8c41b877e241690191dbf2e52c3953b0", "filename": "crates/hir-def/src/body/lower.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a3c3630a25bdd08db0869022e31f9f380f895f6/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a3c3630a25bdd08db0869022e31f9f380f895f6/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs?ref=3a3c3630a25bdd08db0869022e31f9f380f895f6", "patch": "@@ -505,6 +505,7 @@ impl ExprCollector<'_> {\n                     .map(|it| Interned::new(TypeRef::from_ast(&this.ctx(), it)));\n \n                 let prev_is_lowering_generator = mem::take(&mut this.is_lowering_generator);\n+                let prev_try_block_label = this.current_try_block_label.take();\n \n                 let body = this.collect_expr_opt(e.body());\n \n@@ -520,11 +521,11 @@ impl ExprCollector<'_> {\n                 } else {\n                     ClosureKind::Closure\n                 };\n-                this.is_lowering_generator = prev_is_lowering_generator;\n                 let capture_by =\n                     if e.move_token().is_some() { CaptureBy::Value } else { CaptureBy::Ref };\n                 this.is_lowering_generator = prev_is_lowering_generator;\n                 this.current_binding_owner = prev_binding_owner;\n+                this.current_try_block_label = prev_try_block_label;\n                 this.body.exprs[result_expr_id] = Expr::Closure {\n                     args: args.into(),\n                     arg_types: arg_types.into(),"}, {"sha": "7baa7b64268217c165d063aa7c0947a1ddcef2ad", "filename": "crates/ide-diagnostics/src/handlers/break_outside_of_loop.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3a3c3630a25bdd08db0869022e31f9f380f895f6/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fbreak_outside_of_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a3c3630a25bdd08db0869022e31f9f380f895f6/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fbreak_outside_of_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fbreak_outside_of_loop.rs?ref=3a3c3630a25bdd08db0869022e31f9f380f895f6", "patch": "@@ -132,6 +132,24 @@ fn test() {\n      // ^^^^^^^ error: can't break with a value in this position\n     }\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn try_block_desugaring_inside_closure() {\n+        // regression test for #14701\n+        check_diagnostics(\n+            r#\"\n+//- minicore: option, try\n+fn test() {\n+    try {\n+        || {\n+            let x = Some(2);\n+            Some(x?)\n+        };\n+    };\n+}\n \"#,\n         );\n     }"}]}