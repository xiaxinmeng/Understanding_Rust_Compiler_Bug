{"sha": "d82c1c546df10f07b854a2e5b088404d80ec22c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MmMxYzU0NmRmMTBmMDdiODU0YTJlNWIwODg0MDRkODBlYzIyYzk=", "commit": {"author": {"name": "Giles Cope", "email": "gilescope@gmail.com", "date": "2019-10-15T17:05:13Z"}, "committer": {"name": "Giles Cope", "email": "gilescope@gmail.com", "date": "2019-10-15T17:05:13Z"}, "message": "Avoid unused lifetime warning for lifetimes introduced when desugering async.", "tree": {"sha": "cfacda2ef46e70beb95fa487e903bf6c236daa4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfacda2ef46e70beb95fa487e903bf6c236daa4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d82c1c546df10f07b854a2e5b088404d80ec22c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d82c1c546df10f07b854a2e5b088404d80ec22c9", "html_url": "https://github.com/rust-lang/rust/commit/d82c1c546df10f07b854a2e5b088404d80ec22c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d82c1c546df10f07b854a2e5b088404d80ec22c9/comments", "author": {"login": "gilescope", "id": 803976, "node_id": "MDQ6VXNlcjgwMzk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/803976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilescope", "html_url": "https://github.com/gilescope", "followers_url": "https://api.github.com/users/gilescope/followers", "following_url": "https://api.github.com/users/gilescope/following{/other_user}", "gists_url": "https://api.github.com/users/gilescope/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilescope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilescope/subscriptions", "organizations_url": "https://api.github.com/users/gilescope/orgs", "repos_url": "https://api.github.com/users/gilescope/repos", "events_url": "https://api.github.com/users/gilescope/events{/privacy}", "received_events_url": "https://api.github.com/users/gilescope/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gilescope", "id": 803976, "node_id": "MDQ6VXNlcjgwMzk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/803976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilescope", "html_url": "https://github.com/gilescope", "followers_url": "https://api.github.com/users/gilescope/followers", "following_url": "https://api.github.com/users/gilescope/following{/other_user}", "gists_url": "https://api.github.com/users/gilescope/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilescope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilescope/subscriptions", "organizations_url": "https://api.github.com/users/gilescope/orgs", "repos_url": "https://api.github.com/users/gilescope/repos", "events_url": "https://api.github.com/users/gilescope/events{/privacy}", "received_events_url": "https://api.github.com/users/gilescope/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b50520835f3b14409797139eca23f401a529e711", "url": "https://api.github.com/repos/rust-lang/rust/commits/b50520835f3b14409797139eca23f401a529e711", "html_url": "https://github.com/rust-lang/rust/commit/b50520835f3b14409797139eca23f401a529e711"}], "stats": {"total": 82, "additions": 81, "deletions": 1}, "files": [{"sha": "86afde16dc8044e5019aeb2b23953efdfa7927fa", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d82c1c546df10f07b854a2e5b088404d80ec22c9/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d82c1c546df10f07b854a2e5b088404d80ec22c9/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=d82c1c546df10f07b854a2e5b088404d80ec22c9", "patch": "@@ -709,15 +709,22 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n                     match param.kind {\n                         GenericParamKind::Lifetime { .. } => {\n                             let (name, reg) = Region::early(&self.tcx.hir(), &mut index, &param);\n+                            let def_id = if let Region::EarlyBound(_ ,def_id , _) = reg {\n+                                def_id\n+                            } else {\n+                                bug!();\n+                            };\n                             if let hir::ParamName::Plain(param_name) = name {\n                                 if param_name.name == kw::UnderscoreLifetime {\n                                     // Pick the elided lifetime \"definition\" if one exists\n                                     // and use it to make an elision scope.\n+                                    self.lifetime_uses.insert(def_id.clone(), LifetimeUseSet::Many);\n                                     elision = Some(reg);\n                                 } else {\n                                     lifetimes.insert(name, reg);\n                                 }\n                             } else {\n+                                self.lifetime_uses.insert(def_id.clone(), LifetimeUseSet::Many);\n                                 lifetimes.insert(name, reg);\n                             }\n                         }\n@@ -1623,7 +1630,6 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                         _ => None,\n                     } {\n                         debug!(\"id = {:?} span = {:?} name = {:?}\", id, span, name);\n-\n                         if name.name == kw::UnderscoreLifetime {\n                             continue;\n                         }"}, {"sha": "1cf546bcb4266e0bf5d45f91991f842bcd5ed1cf", "filename": "src/test/ui/async-await/unused-lifetime.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/d82c1c546df10f07b854a2e5b088404d80ec22c9/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d82c1c546df10f07b854a2e5b088404d80ec22c9/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.rs?ref=d82c1c546df10f07b854a2e5b088404d80ec22c9", "patch": "@@ -0,0 +1,42 @@\n+// edition:2018\n+\n+// Avoid spurious warnings of unused lifetime. The below async functions\n+// are desugered to have an unused lifetime\n+// but we don't want to warn about that as there's nothing they can do about it.\n+\n+#![deny(unused_lifetimes)]\n+#![allow(dead_code)]\n+\n+pub async fn october(s: &str) {\n+    println!(\"{}\", s);\n+}\n+\n+pub async fn async_fn(&mut ref s: &mut[i32]) {\n+    println!(\"{:?}\", s);\n+}\n+\n+macro_rules! foo_macro {\n+    () => {\n+        pub async fn async_fn_in_macro(&mut ref _s: &mut[i32]) {}\n+    };\n+}\n+\n+foo_macro!();\n+\n+pub async fn func_with_unused_lifetime<'a>(s: &'a str) {\n+    //~^ ERROR lifetime parameter `'a` never used\n+    println!(\"{}\", s);\n+}\n+\n+pub async fn func_with_two_unused_lifetime<'a, 'b>(s: &'a str, t: &'b str) {\n+    //~^ ERROR lifetime parameter `'a` never used\n+    //~^^ ERROR lifetime parameter `'b` never used\n+    println!(\"{}\", s);\n+}\n+\n+pub async fn func_with_unused_lifetime_in_two_params<'c>(s: &'c str, t: &'c str) {\n+    //~^ ERROR lifetime parameter `'c` never used\n+    println!(\"{}\", s);\n+}\n+\n+fn main() {}"}, {"sha": "885cdc04cfa4c2892e8ec242b1b00e07242eea5a", "filename": "src/test/ui/async-await/unused-lifetime.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d82c1c546df10f07b854a2e5b088404d80ec22c9/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82c1c546df10f07b854a2e5b088404d80ec22c9/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Funused-lifetime.stderr?ref=d82c1c546df10f07b854a2e5b088404d80ec22c9", "patch": "@@ -0,0 +1,32 @@\n+error: lifetime parameter `'a` never used\n+  --> $DIR/unused-lifetime.rs:26:40\n+   |\n+LL | pub async fn func_with_unused_lifetime<'a>(s: &'a str) {\n+   |                                        ^^\n+   |\n+note: lint level defined here\n+  --> $DIR/unused-lifetime.rs:7:9\n+   |\n+LL | #![deny(unused_lifetimes)]\n+   |         ^^^^^^^^^^^^^^^^\n+\n+error: lifetime parameter `'a` never used\n+  --> $DIR/unused-lifetime.rs:31:44\n+   |\n+LL | pub async fn func_with_two_unused_lifetime<'a, 'b>(s: &'a str, t: &'b str) {\n+   |                                            ^^\n+\n+error: lifetime parameter `'b` never used\n+  --> $DIR/unused-lifetime.rs:31:48\n+   |\n+LL | pub async fn func_with_two_unused_lifetime<'a, 'b>(s: &'a str, t: &'b str) {\n+   |                                                ^^\n+\n+error: lifetime parameter `'c` never used\n+  --> $DIR/unused-lifetime.rs:37:54\n+   |\n+LL | pub async fn func_with_unused_lifetime_in_two_params<'c>(s: &'c str, t: &'c str) {\n+   |                                                      ^^\n+\n+error: aborting due to 4 previous errors\n+"}]}