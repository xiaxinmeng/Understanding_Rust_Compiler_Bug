{"sha": "48f2f711857c3797978f1a4e300a1375672cef84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ZjJmNzExODU3YzM3OTc5NzhmMWE0ZTMwMGExMzc1NjcyY2VmODQ=", "commit": {"author": {"name": "Sebastian Dr\u00f6ge", "email": "sebastian@centricular.com", "date": "2018-01-02T22:58:56Z"}, "committer": {"name": "Sebastian Dr\u00f6ge", "email": "sebastian@centricular.com", "date": "2018-01-03T13:05:18Z"}, "message": "Implement TrustedRandomAccess for slice::{Chunks, ChunksMut, Windows}", "tree": {"sha": "fbad54c3879e1c5ec47fd02c35ebf7b68270646c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbad54c3879e1c5ec47fd02c35ebf7b68270646c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48f2f711857c3797978f1a4e300a1375672cef84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48f2f711857c3797978f1a4e300a1375672cef84", "html_url": "https://github.com/rust-lang/rust/commit/48f2f711857c3797978f1a4e300a1375672cef84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48f2f711857c3797978f1a4e300a1375672cef84/comments", "author": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b107f720e5422bff4fa0671e54ff5458f682f603", "url": "https://api.github.com/repos/rust-lang/rust/commits/b107f720e5422bff4fa0671e54ff5458f682f603", "html_url": "https://github.com/rust-lang/rust/commit/b107f720e5422bff4fa0671e54ff5458f682f603"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "ebb1660593137b3139cbd43276a993e18c753a1e", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/48f2f711857c3797978f1a4e300a1375672cef84/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48f2f711857c3797978f1a4e300a1375672cef84/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=48f2f711857c3797978f1a4e300a1375672cef84", "patch": "@@ -2117,6 +2117,14 @@ impl<'a, T> ExactSizeIterator for Windows<'a, T> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, T> FusedIterator for Windows<'a, T> {}\n \n+#[doc(hidden)]\n+unsafe impl<'a, T> TrustedRandomAccess for Windows<'a, T> {\n+    unsafe fn get_unchecked(&mut self, i: usize) -> &'a [T] {\n+        from_raw_parts(self.v.as_ptr().offset(i as isize), self.size)\n+    }\n+    fn may_have_side_effect() -> bool { false }\n+}\n+\n /// An iterator over a slice in (non-overlapping) chunks (`chunk_size` elements at a\n /// time).\n ///\n@@ -2228,6 +2236,16 @@ impl<'a, T> ExactSizeIterator for Chunks<'a, T> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, T> FusedIterator for Chunks<'a, T> {}\n \n+#[doc(hidden)]\n+unsafe impl<'a, T> TrustedRandomAccess for Chunks<'a, T> {\n+    unsafe fn get_unchecked(&mut self, i: usize) -> &'a [T] {\n+        let start = i * self.size;\n+        let end = cmp::min(start + self.size, self.v.len());\n+        from_raw_parts(self.v.as_ptr().offset(start as isize), end - start)\n+    }\n+    fn may_have_side_effect() -> bool { false }\n+}\n+\n /// An iterator over a slice in (non-overlapping) mutable chunks (`chunk_size`\n /// elements at a time). When the slice len is not evenly divided by the chunk\n /// size, the last slice of the iteration will be the remainder.\n@@ -2331,6 +2349,16 @@ impl<'a, T> ExactSizeIterator for ChunksMut<'a, T> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, T> FusedIterator for ChunksMut<'a, T> {}\n \n+#[doc(hidden)]\n+unsafe impl<'a, T> TrustedRandomAccess for ChunksMut<'a, T> {\n+    unsafe fn get_unchecked(&mut self, i: usize) -> &'a mut [T] {\n+        let start = i * self.chunk_size;\n+        let end = cmp::min(start + self.chunk_size, self.v.len());\n+        from_raw_parts_mut(self.v.as_mut_ptr().offset(start as isize), end - start)\n+    }\n+    fn may_have_side_effect() -> bool { false }\n+}\n+\n //\n // Free functions\n //"}]}