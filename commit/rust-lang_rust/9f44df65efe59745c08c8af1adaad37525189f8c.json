{"sha": "9f44df65efe59745c08c8af1adaad37525189f8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmNDRkZjY1ZWZlNTk3NDVjMDhjOGFmMWFkYWFkMzc1MjUxODlmOGM=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-08-24T12:01:56Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-08-24T12:01:56Z"}, "message": "Ensure values created in an alt guard are cleaned up properly", "tree": {"sha": "b9cb5ce22ce2d693f1cf04737c2e8af92d13ddae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9cb5ce22ce2d693f1cf04737c2e8af92d13ddae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f44df65efe59745c08c8af1adaad37525189f8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f44df65efe59745c08c8af1adaad37525189f8c", "html_url": "https://github.com/rust-lang/rust/commit/9f44df65efe59745c08c8af1adaad37525189f8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f44df65efe59745c08c8af1adaad37525189f8c/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "054914712e40ecd908b21ac7f0943de8738e033a", "url": "https://api.github.com/repos/rust-lang/rust/commits/054914712e40ecd908b21ac7f0943de8738e033a", "html_url": "https://github.com/rust-lang/rust/commit/054914712e40ecd908b21ac7f0943de8738e033a"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "108e3acf12e2a547f4a045c3e3bd2963987f3e70", "filename": "src/comp/middle/trans_alt.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9f44df65efe59745c08c8af1adaad37525189f8c/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f44df65efe59745c08c8af1adaad37525189f8c/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs?ref=9f44df65efe59745c08c8af1adaad37525189f8c", "patch": "@@ -304,9 +304,10 @@ fn compile_submatch(bcx: @block_ctxt, m: &match, vals: [ValueRef],\n                 bcx.fcx.lllocals.insert\n                     (val, option::get(assoc(key, m[0].bound)));\n             }\n-            let {bcx: guard_cx, val: guard_val} =\n+            let {bcx: guard_bcx, val: guard_val} =\n                 trans::trans_expr(guard_cx, e);\n-            guard_cx.build.CondBr(guard_val, next_cx.llbb, else_cx.llbb);\n+            guard_bcx = trans::trans_block_cleanups(guard_bcx, guard_cx);\n+            guard_bcx.build.CondBr(guard_val, next_cx.llbb, else_cx.llbb);\n             compile_submatch(else_cx, vec::slice(m, 1u, vec::len(m)),\n                              vals, f, exits);\n             bcx = next_cx;"}]}