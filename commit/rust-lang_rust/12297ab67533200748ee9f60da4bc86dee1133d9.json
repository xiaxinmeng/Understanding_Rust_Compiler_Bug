{"sha": "12297ab67533200748ee9f60da4bc86dee1133d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMjk3YWI2NzUzMzIwMDc0OGVlOWY2MGRhNGJjODZkZWUxMTMzZDk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-28T12:19:05Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-30T09:33:01Z"}, "message": "Fix race in the tests", "tree": {"sha": "2f46877e85c6a10b810dd6ff2a0e0c680c800bda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f46877e85c6a10b810dd6ff2a0e0c680c800bda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12297ab67533200748ee9f60da4bc86dee1133d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12297ab67533200748ee9f60da4bc86dee1133d9", "html_url": "https://github.com/rust-lang/rust/commit/12297ab67533200748ee9f60da4bc86dee1133d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12297ab67533200748ee9f60da4bc86dee1133d9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7df0b56a76360419b31d8030c5c250bd54d8b6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7df0b56a76360419b31d8030c5c250bd54d8b6d", "html_url": "https://github.com/rust-lang/rust/commit/f7df0b56a76360419b31d8030c5c250bd54d8b6d"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "1cac954c393a11efc5bb4ebdf8a95f103cbfad1a", "filename": "crates/ra_cargo_watch/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12297ab67533200748ee9f60da4bc86dee1133d9/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12297ab67533200748ee9f60da4bc86dee1133d9/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs?ref=12297ab67533200748ee9f60da4bc86dee1133d9", "patch": "@@ -35,10 +35,10 @@ pub struct CheckOptions {\n /// The spawned thread is shut down when this struct is dropped.\n #[derive(Debug)]\n pub struct CheckWatcher {\n-    pub task_recv: Receiver<CheckTask>,\n     // XXX: drop order is significant\n     cmd_send: Option<Sender<CheckCommand>>,\n     handle: Option<jod_thread::JoinHandle<()>>,\n+    pub task_recv: Receiver<CheckTask>,\n }\n \n impl CheckWatcher {"}, {"sha": "00ea3a9b067efa97fe01f47b81646cbb30275918", "filename": "crates/ra_prof/src/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/12297ab67533200748ee9f60da4bc86dee1133d9/crates%2Fra_prof%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12297ab67533200748ee9f60da4bc86dee1133d9/crates%2Fra_prof%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Flib.rs?ref=12297ab67533200748ee9f60da4bc86dee1133d9", "patch": "@@ -339,6 +339,14 @@ pub fn print_backtrace() {\n     let bt = backtrace::Backtrace::new();\n     eprintln!(\"{:?}\", bt);\n }\n+#[cfg(not(feature = \"backtrace\"))]\n+pub fn print_backtrace() {\n+    eprintln!(\n+        r#\"enable the backtrace feature:\n+    ra_prof = {{ path = \"../ra_prof\", features = [ \"backtrace\"] }}\n+\"#\n+    );\n+}\n \n thread_local!(static IN_SCOPE: RefCell<bool> = RefCell::new(false));\n "}, {"sha": "67f3c9332e652cfcc07ad0aa7dc76a00e1ce820b", "filename": "crates/rust-analyzer/tests/heavy_tests/support.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/12297ab67533200748ee9f60da4bc86dee1133d9/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fsupport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12297ab67533200748ee9f60da4bc86dee1133d9/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fsupport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fsupport.rs?ref=12297ab67533200748ee9f60da4bc86dee1133d9", "patch": "@@ -83,9 +83,10 @@ pub fn project(fixture: &str) -> Server {\n pub struct Server {\n     req_id: Cell<u64>,\n     messages: RefCell<Vec<Message>>,\n-    dir: TempDir,\n     _thread: jod_thread::JoinHandle<()>,\n     client: Connection,\n+    /// XXX: remove the tempdir last\n+    dir: TempDir,\n }\n \n impl Server {"}]}