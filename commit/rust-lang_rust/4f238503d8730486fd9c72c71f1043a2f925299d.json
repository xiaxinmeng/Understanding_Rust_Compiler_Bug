{"sha": "4f238503d8730486fd9c72c71f1043a2f925299d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmMjM4NTAzZDg3MzA0ODZmZDljNzJjNzFmMTA0M2EyZjkyNTI5OWQ=", "commit": {"author": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2013-03-14T06:39:36Z"}, "committer": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2013-03-14T06:43:17Z"}, "message": "rustdoc: Document explicit self in methods. Closes #5254", "tree": {"sha": "1e3539e7d09b52cf6eca714f7f77986c79e83fd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e3539e7d09b52cf6eca714f7f77986c79e83fd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f238503d8730486fd9c72c71f1043a2f925299d", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f238503d8730486fd9c72c71f1043a2f925299d", "html_url": "https://github.com/rust-lang/rust/commit/4f238503d8730486fd9c72c71f1043a2f925299d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f238503d8730486fd9c72c71f1043a2f925299d/comments", "author": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58f248d9234f2a6b10b1537e4075d303ed60b605", "url": "https://api.github.com/repos/rust-lang/rust/commits/58f248d9234f2a6b10b1537e4075d303ed60b605", "html_url": "https://github.com/rust-lang/rust/commit/58f248d9234f2a6b10b1537e4075d303ed60b605"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "916101709fed97bbca350ff61dc384162e2df302", "filename": "src/librustdoc/tystr_pass.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4f238503d8730486fd9c72c71f1043a2f925299d/src%2Flibrustdoc%2Ftystr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f238503d8730486fd9c72c71f1043a2f925299d/src%2Flibrustdoc%2Ftystr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftystr_pass.rs?ref=4f238503d8730486fd9c72c71f1043a2f925299d", "patch": "@@ -75,7 +75,7 @@ fn get_fn_sig(srv: astsrv::Srv, fn_id: doc::AstId) -> Option<~str> {\n             ident: ident,\n             node: ast::foreign_item_fn(ref decl, _, ref tys), _\n           }, _, _) => {\n-            Some(pprust::fun_to_str(decl, ident, tys,\n+            Some(pprust::fun_to_str(decl, ident, None, tys,\n                                     extract::interner()))\n           }\n           _ => fail!(~\"get_fn_sig: fn_id not bound to a fn item\")\n@@ -215,6 +215,7 @@ fn get_method_sig(\n                       Some(pprust::fun_to_str(\n                           &ty_m.decl,\n                           ty_m.ident,\n+                          Some(ty_m.self_ty.node),\n                           &ty_m.generics,\n                           extract::interner()\n                       ))\n@@ -223,6 +224,7 @@ fn get_method_sig(\n                       Some(pprust::fun_to_str(\n                           &m.decl,\n                           m.ident,\n+                          Some(m.self_ty.node),\n                           &m.generics,\n                           extract::interner()\n                       ))\n@@ -242,6 +244,7 @@ fn get_method_sig(\n                     Some(pprust::fun_to_str(\n                         &method.decl,\n                         method.ident,\n+                        Some(method.self_ty.node),\n                         &method.generics,\n                         extract::interner()\n                     ))"}, {"sha": "f74b8eb42b860ed6a8c3c08da98aa1a0e4f297aa", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4f238503d8730486fd9c72c71f1043a2f925299d/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f238503d8730486fd9c72c71f1043a2f925299d/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=4f238503d8730486fd9c72c71f1043a2f925299d", "patch": "@@ -181,10 +181,11 @@ pub fn path_to_str(&&p: @ast::path, intr: @ident_interner) -> ~str {\n }\n \n pub fn fun_to_str(decl: &ast::fn_decl, name: ast::ident,\n+                  opt_self_ty: Option<ast::self_ty_>,\n                   generics: &ast::Generics, intr: @ident_interner) -> ~str {\n     do io::with_str_writer |wr| {\n         let s = rust_printer(wr, intr);\n-        print_fn(s, decl, None, name, generics, None, ast::inherited);\n+        print_fn(s, decl, None, name, generics, opt_self_ty, ast::inherited);\n         end(s); // Close the head box\n         end(s); // Close the outer box\n         eof(s.s);"}]}