{"sha": "12bc90d457594cca77edd430478e88c4a13ff201", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyYmM5MGQ0NTc1OTRjY2E3N2VkZDQzMDQ3OGU4OGM0YTEzZmYyMDE=", "commit": {"author": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2016-06-16T21:30:05Z"}, "committer": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2016-06-16T21:39:29Z"}, "message": "Add tests for extend-iter-nth", "tree": {"sha": "808f569d09dbcd03c4ff5ca960593e717d9834b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/808f569d09dbcd03c4ff5ca960593e717d9834b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12bc90d457594cca77edd430478e88c4a13ff201", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12bc90d457594cca77edd430478e88c4a13ff201", "html_url": "https://github.com/rust-lang/rust/commit/12bc90d457594cca77edd430478e88c4a13ff201", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12bc90d457594cca77edd430478e88c4a13ff201/comments", "author": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3397afacbedaf8c8c8d8928b7c146ed000d3a2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3397afacbedaf8c8c8d8928b7c146ed000d3a2c", "html_url": "https://github.com/rust-lang/rust/commit/f3397afacbedaf8c8c8d8928b7c146ed000d3a2c"}], "stats": {"total": 39, "additions": 33, "deletions": 6}, "files": [{"sha": "647cca5a39cc4d93c3ffd7ef1b6fc84dd216cf3d", "filename": "tests/compile-fail/methods.rs", "status": "modified", "additions": 33, "deletions": 6, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/12bc90d457594cca77edd430478e88c4a13ff201/tests%2Fcompile-fail%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12bc90d457594cca77edd430478e88c4a13ff201/tests%2Fcompile-fail%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmethods.rs?ref=12bc90d457594cca77edd430478e88c4a13ff201", "patch": "@@ -8,6 +8,7 @@\n use std::collections::BTreeMap;\n use std::collections::HashMap;\n use std::collections::HashSet;\n+use std::collections::VecDeque;\n use std::ops::Mul;\n \n struct T;\n@@ -136,6 +137,10 @@ impl HasIter {\n     fn iter(self) -> IteratorFalsePositives {\n         IteratorFalsePositives { foo: 0 }\n     }\n+\n+    fn iter_mut(self) -> IteratorFalsePositives {\n+        IteratorFalsePositives { foo: 0 }\n+    }\n }\n \n /// Struct to generate false positive for Iterator-based lints\n@@ -325,15 +330,37 @@ fn or_fun_call() {\n \n /// Checks implementation of `ITER_NTH` lint\n fn iter_nth() {\n-    let some_vec = vec![0, 1, 2, 3];\n-    let bad_vec = some_vec.iter().nth(3);\n-    //~^ERROR called `.iter().nth()` on a Vec.\n-    let bad_slice = &some_vec[..].iter().nth(3);\n-    //~^ERROR called `.iter().nth()` on a slice.\n+    let mut some_vec = vec![0, 1, 2, 3];\n+    let mut some_vec_deque: VecDeque<_> = some_vec.iter().cloned().collect();\n+\n+    {\n+        // Make sure we lint `.iter()` for relevant types\n+        let bad_vec = some_vec.iter().nth(3);\n+        //~^ERROR called `.iter().nth()` on a Vec. Calling `.get()` is both faster and more readable\n+        let bad_slice = &some_vec[..].iter().nth(3);\n+        //~^ERROR called `.iter().nth()` on a slice. Calling `.get()` is both faster and more readable\n+        let bad_vec_deque = some_vec_deque.iter().nth(3);\n+        //~^ERROR called `.iter().nth()` on a VecDeque. Calling `.get()` is both faster and more readable\n+    }\n+\n+    {\n+        // Make sure we lint `.iter_mut()` for relevant types\n+        let bad_vec = some_vec.iter_mut().nth(3);\n+        //~^ERROR called `.iter_mut().nth()` on a Vec. Calling `.get_mut()` is both faster and more readable\n+    }\n+    {\n+        let bad_slice = &some_vec[..].iter_mut().nth(3);\n+        //~^ERROR called `.iter_mut().nth()` on a slice. Calling `.get_mut()` is both faster and more readable\n+    }\n+    {\n+        let bad_vec_deque = some_vec_deque.iter_mut().nth(3);\n+        //~^ERROR called `.iter_mut().nth()` on a VecDeque. Calling `.get_mut()` is both faster and more readable\n+    }\n \n+    // Make sure we don't lint for non-relevant types\n     let false_positive = HasIter;\n     let ok = false_positive.iter().nth(3);\n-    // ^This should be okay, because false_positive is not a slice or Vec\n+    let ok_mut = false_positive.iter_mut().nth(3);\n }\n \n #[allow(similar_names)]"}]}