{"sha": "ec3638adb93ea425f825cc976bcae816f7e5c50b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMzYzOGFkYjkzZWE0MjVmODI1Y2M5NzZiY2FlODE2ZjdlNWM1MGI=", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-10-28T14:42:51Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-10-28T14:42:51Z"}, "message": "do not use associated types placeholder for inlay hint\n\nSigned-off-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "eb83b9378279e21411890bb073ea77303f844f88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb83b9378279e21411890bb073ea77303f844f88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec3638adb93ea425f825cc976bcae816f7e5c50b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec3638adb93ea425f825cc976bcae816f7e5c50b", "html_url": "https://github.com/rust-lang/rust/commit/ec3638adb93ea425f825cc976bcae816f7e5c50b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec3638adb93ea425f825cc976bcae816f7e5c50b/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aca7b78de234526e1d85a4dfd23fb4f374908ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/0aca7b78de234526e1d85a4dfd23fb4f374908ea", "html_url": "https://github.com/rust-lang/rust/commit/0aca7b78de234526e1d85a4dfd23fb4f374908ea"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "822ef4477ebb45989aef72ed1ef7b84f80bac5cc", "filename": "crates/hir_ty/src/display.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ec3638adb93ea425f825cc976bcae816f7e5c50b/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec3638adb93ea425f825cc976bcae816f7e5c50b/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs?ref=ec3638adb93ea425f825cc976bcae816f7e5c50b", "patch": "@@ -332,7 +332,11 @@ impl HirDisplay for ApplicationTy {\n                     let ret_display = if f.omit_verbose_types() {\n                         ret.display_truncated(f.db, f.max_size)\n                     } else {\n-                        ret.display(f.db)\n+                        if f.display_target.is_test() {\n+                            ret.display_test(f.db)\n+                        } else {\n+                            ret.display(f.db)\n+                        }\n                     };\n                     write!(f, \" -> {}\", ret_display)?;\n                 }\n@@ -472,7 +476,11 @@ impl HirDisplay for ApplicationTy {\n                     let ret_display = if f.omit_verbose_types() {\n                         sig.ret().display_truncated(f.db, f.max_size)\n                     } else {\n-                        sig.ret().display(f.db)\n+                        if f.display_target.is_test() {\n+                            sig.ret().display_test(f.db)\n+                        } else {\n+                            sig.ret().display(f.db)\n+                        }\n                     };\n                     write!(f, \" -> {}\", ret_display)?;\n                 } else {"}, {"sha": "104ef334c6897deb729185e81dd3e85f18963d0b", "filename": "crates/hir_ty/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec3638adb93ea425f825cc976bcae816f7e5c50b/crates%2Fhir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec3638adb93ea425f825cc976bcae816f7e5c50b/crates%2Fhir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests.rs?ref=ec3638adb93ea425f825cc976bcae816f7e5c50b", "patch": "@@ -74,7 +74,7 @@ fn check_types_impl(ra_fixture: &str, display_source: bool) {\n                 let module = db.module_for_file(file_id);\n                 ty.display_source_code(&db, module).unwrap()\n             } else {\n-                ty.display(&db).to_string()\n+                ty.display_test(&db).to_string()\n             };\n             assert_eq!(expected, actual);\n             checked_one = true;"}, {"sha": "94d86b0d1f232a292616d933697ddecacbedccc9", "filename": "crates/hir_ty/src/tests/regression.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec3638adb93ea425f825cc976bcae816f7e5c50b/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec3638adb93ea425f825cc976bcae816f7e5c50b/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs?ref=ec3638adb93ea425f825cc976bcae816f7e5c50b", "patch": "@@ -832,7 +832,7 @@ fn issue_4966() {\n             365..390 'Repeat...nner }': Repeat<Map<|&f64| -> f64>>\n             383..388 'inner': Map<|&f64| -> f64>\n             401..404 'vec': Vec<IntoIterator::Item<Repeat<Map<|&f64| -> f64>>>>\n-            407..416 'from_iter': fn from_iter<IntoIterator::Item<Repeat<Map<|&f64| -> f64>>>, Repeat<Map<|&f64| -> f64>>>(Repeat<Map<|&f64| -> f64>>) -> Vec<<Repeat<Map<|&f64| -> f64>> as IntoIterator>::Item>\n+            407..416 'from_iter': fn from_iter<IntoIterator::Item<Repeat<Map<|&f64| -> f64>>>, Repeat<Map<|&f64| -> f64>>>(Repeat<Map<|&f64| -> f64>>) -> Vec<IntoIterator::Item<Repeat<Map<|&f64| -> f64>>>>\n             407..424 'from_i...epeat)': Vec<IntoIterator::Item<Repeat<Map<|&f64| -> f64>>>>\n             417..423 'repeat': Repeat<Map<|&f64| -> f64>>\n             431..434 'vec': Vec<IntoIterator::Item<Repeat<Map<|&f64| -> f64>>>>"}, {"sha": "41d0975197beb5c7c6d09b09e0326ed4e20150ae", "filename": "crates/hir_ty/src/tests/traits.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ec3638adb93ea425f825cc976bcae816f7e5c50b/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec3638adb93ea425f825cc976bcae816f7e5c50b/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=ec3638adb93ea425f825cc976bcae816f7e5c50b", "patch": "@@ -907,7 +907,8 @@ fn test<T: Trait>(t: T) { (*t); }\n }\n \n #[test]\n-fn associated_type_inlay_hints() {\n+fn associated_type_placeholder() {\n+    // inside the generic function, the associated type gets normalized to a placeholder `ApplL::Out<T>` [https://rust-lang.github.io/rustc-guide/traits/associated-types.html#placeholder-associated-types].\n     check_types(\n         r#\"\n pub trait ApplyL {\n@@ -923,13 +924,13 @@ impl<T> ApplyL for RefMutL<T> {\n fn test<T: ApplyL>() {\n     let y: <RefMutL<T> as ApplyL>::Out = no_matter;\n     y;\n-} //^ <T as ApplyL>::Out\n+} //^ ApplyL::Out<T>\n \"#,\n     );\n }\n \n #[test]\n-fn associated_type_inlay_hints_2() {\n+fn associated_type_placeholder_2() {\n     check_types(\n         r#\"\n pub trait ApplyL {\n@@ -940,7 +941,7 @@ fn foo<T: ApplyL>(t: T) -> <T as ApplyL>::Out;\n fn test<T: ApplyL>(t: T) {\n     let y = foo(t);\n     y;\n-} //^ <T as ApplyL>::Out\n+} //^ ApplyL::Out<T>\n \"#,\n     );\n }"}]}