{"sha": "c46570e694f3d4f23c66c0424f7483c3b20d58f1", "node_id": "C_kwDOAAsO6NoAKGM0NjU3MGU2OTRmM2Q0ZjIzYzY2YzA0MjRmNzQ4M2MzYjIwZDU4ZjE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-06T17:57:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-06T17:57:00Z"}, "message": "Auto merge of #12704 - jonas-schievink:smol-paths, r=jonas-schievink\n\ninternal: Use `SmallVec` to slightly shrink `ModPath` size\n\nSaves like a megabyte on r-a itself.", "tree": {"sha": "e5e3501935e7ba02917d1efc4a962cb313c927a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5e3501935e7ba02917d1efc4a962cb313c927a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c46570e694f3d4f23c66c0424f7483c3b20d58f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c46570e694f3d4f23c66c0424f7483c3b20d58f1", "html_url": "https://github.com/rust-lang/rust/commit/c46570e694f3d4f23c66c0424f7483c3b20d58f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c46570e694f3d4f23c66c0424f7483c3b20d58f1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00194ade760caebed8e992d2b2931d6bae688438", "url": "https://api.github.com/repos/rust-lang/rust/commits/00194ade760caebed8e992d2b2931d6bae688438", "html_url": "https://github.com/rust-lang/rust/commit/00194ade760caebed8e992d2b2931d6bae688438"}, {"sha": "d2fd137252236d71bd5c8983e6ab2af6ff59e8e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2fd137252236d71bd5c8983e6ab2af6ff59e8e2", "html_url": "https://github.com/rust-lang/rust/commit/d2fd137252236d71bd5c8983e6ab2af6ff59e8e2"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "fceaa0797c464e314967f1deef80ce17e82b7d78", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c46570e694f3d4f23c66c0424f7483c3b20d58f1/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/c46570e694f3d4f23c66c0424f7483c3b20d58f1/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=c46570e694f3d4f23c66c0424f7483c3b20d58f1", "patch": "@@ -532,6 +532,7 @@ dependencies = [\n  \"mbe\",\n  \"profile\",\n  \"rustc-hash\",\n+ \"smallvec\",\n  \"stdx\",\n  \"syntax\",\n  \"tracing\","}, {"sha": "1fcc8287ed6ed535384639b9b3d6e7ff5ab70114", "filename": "crates/hir-expand/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c46570e694f3d4f23c66c0424f7483c3b20d58f1/crates%2Fhir-expand%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c46570e694f3d4f23c66c0424f7483c3b20d58f1/crates%2Fhir-expand%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2FCargo.toml?ref=c46570e694f3d4f23c66c0424f7483c3b20d58f1", "patch": "@@ -19,6 +19,7 @@ itertools = \"0.10.3\"\n hashbrown = { version = \"0.12.1\", features = [\n     \"inline-more\",\n ], default-features = false }\n+smallvec = { version = \"1.9.0\", features = [\"const_new\"] }\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n base-db = { path = \"../base-db\", version = \"0.0.0\" }"}, {"sha": "05e8c585c98323147ba93f365e11394bcab0b40d", "filename": "crates/hir-expand/src/mod_path.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c46570e694f3d4f23c66c0424f7483c3b20d58f1/crates%2Fhir-expand%2Fsrc%2Fmod_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c46570e694f3d4f23c66c0424f7483c3b20d58f1/crates%2Fhir-expand%2Fsrc%2Fmod_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Fmod_path.rs?ref=c46570e694f3d4f23c66c0424f7483c3b20d58f1", "patch": "@@ -12,12 +12,13 @@ use crate::{\n };\n use base_db::CrateId;\n use either::Either;\n+use smallvec::SmallVec;\n use syntax::{ast, AstNode};\n \n #[derive(Debug, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct ModPath {\n     pub kind: PathKind,\n-    segments: Vec<Name>,\n+    segments: SmallVec<[Name; 1]>,\n }\n \n #[derive(Debug, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n@@ -41,13 +42,13 @@ impl ModPath {\n     }\n \n     pub fn from_segments(kind: PathKind, segments: impl IntoIterator<Item = Name>) -> ModPath {\n-        let segments = segments.into_iter().collect::<Vec<_>>();\n+        let segments = segments.into_iter().collect();\n         ModPath { kind, segments }\n     }\n \n     /// Creates a `ModPath` from a `PathKind`, with no extra path segments.\n     pub const fn from_kind(kind: PathKind) -> ModPath {\n-        ModPath { kind, segments: Vec::new() }\n+        ModPath { kind, segments: SmallVec::new_const() }\n     }\n \n     pub fn segments(&self) -> &[Name] {"}]}