{"sha": "23b9f46fff4453fb90611c2fb554e004f1cec096", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzYjlmNDZmZmY0NDUzZmI5MDYxMWMyZmI1NTRlMDA0ZjFjZWMwOTY=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2020-04-22T05:47:31Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2020-04-22T05:57:56Z"}, "message": "More diagnostic items for Clippy usage\n\nThis adds a couple of more diagnostic items to be used in Clippy.\nI chose these particular ones because they were the types which we seem\nto check for the most in Clippy. I'm not sure if the\n`cfg_attr(not(test))` is needed, but it was also used for `Vec` and a\nfew other types.", "tree": {"sha": "4b8df569f90c5be69d0f10e84686489faa4c3500", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b8df569f90c5be69d0f10e84686489faa4c3500"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23b9f46fff4453fb90611c2fb554e004f1cec096", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE6VFioMHrom999LRAK0OZxL9Ny94FAl6f3UYACgkQK0OZxL9N\ny95UJw//bgaOrx4KdmkRBiza6Cov7dD3lA9Owli8Em9R5XALiFdBFA5hg0UqrGNI\n0lCwbXrt78FAKwGEn1uHAM52am/kyB9AXGKfJhS1EDvn8HS5KtMqZlyM7+U9AbFo\n0SKsc1dsHciInQUydfSF0NxTbxeLhDDteyQAS5PQRHdNpIo3mYD8IN49BiKVijpb\nb11Y+rQbbk7ZcjL6uqwOQjhOlhY/odleWVfisPdx5ywvtXhH6a0DUC7npmepKq1l\nppvGNzLkdWyyVS6/l4Dpk25t9Cn6+vdN7syAaX9Paq5A2/07+fJpT6nDG+BTGcuG\nF2byursYGRMFcfqc1Wsv6yIuJn7XFUBZ9S+BwwSNE7rqhraWoJgP6bccksUakOm8\nyErbBVcaXQ3afTc6TC76vPMmfkoqD40tmdO83W+eNAKc/9GncG9xrXVX8ErtKRPh\nigL3PSB6CRecHMDuP/jsmCFamra/cmz11TzurgCw/KX8FP2EbqYL6GXQs12ojMn9\n7WxDUPOaRYAY91W4/OG+OH+8WmwS+zyjFRZWb6blIaTkYNoXBQ2fktnsrg9NzoMF\nOFfW+qmy9EiK37P7wazE2VMeynEZNpnCq3nt+3pUKDXIbz/ff+Bx3s2ubJhd18Y7\n+mMRSRa/F8VJBa1Jw81Ej/wtB46CrBZtlocv5K+ModhHpXN3TVA=\n=jsxa\n-----END PGP SIGNATURE-----", "payload": "tree 4b8df569f90c5be69d0f10e84686489faa4c3500\nparent 8ce3f840ae9b735a66531996c32330f24b877cb0\nauthor Philipp Hansch <dev@phansch.net> 1587534451 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1587535076 +0200\n\nMore diagnostic items for Clippy usage\n\nThis adds a couple of more diagnostic items to be used in Clippy.\nI chose these particular ones because they were the types which we seem\nto check for the most in Clippy. I'm not sure if the\n`cfg_attr(not(test))` is needed, but it was also used for `Vec` and a\nfew other types.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23b9f46fff4453fb90611c2fb554e004f1cec096", "html_url": "https://github.com/rust-lang/rust/commit/23b9f46fff4453fb90611c2fb554e004f1cec096", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23b9f46fff4453fb90611c2fb554e004f1cec096/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ce3f840ae9b735a66531996c32330f24b877cb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ce3f840ae9b735a66531996c32330f24b877cb0", "html_url": "https://github.com/rust-lang/rust/commit/8ce3f840ae9b735a66531996c32330f24b877cb0"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "a3b61f1f4a5892fa436fcde9d34d96a4b611a579", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23b9f46fff4453fb90611c2fb554e004f1cec096/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23b9f46fff4453fb90611c2fb554e004f1cec096/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=23b9f46fff4453fb90611c2fb554e004f1cec096", "patch": "@@ -50,6 +50,7 @@ const MAXIMUM_ZST_CAPACITY: usize = 1 << (64 - 1); // Largest possible power of\n /// [`pop_front`]: #method.pop_front\n /// [`extend`]: #method.extend\n /// [`append`]: #method.append\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"vecdeque_type\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct VecDeque<T> {\n     // tail and head are pointers into the buffer. Tail always points"}, {"sha": "f3fe1adebb141d4dd3c1b91b2c42e304825e3112", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23b9f46fff4453fb90611c2fb554e004f1cec096/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23b9f46fff4453fb90611c2fb554e004f1cec096/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=23b9f46fff4453fb90611c2fb554e004f1cec096", "patch": "@@ -278,6 +278,7 @@ use crate::vec::Vec;\n /// [`Deref`]: ../../std/ops/trait.Deref.html\n /// [`as_str()`]: struct.String.html#method.as_str\n #[derive(PartialOrd, Eq, Ord)]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"string_type\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct String {\n     vec: Vec<u8>,"}, {"sha": "e6da7426eb4afc08a88d7a2d12572ef17986a367", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23b9f46fff4453fb90611c2fb554e004f1cec096/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23b9f46fff4453fb90611c2fb554e004f1cec096/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=23b9f46fff4453fb90611c2fb554e004f1cec096", "patch": "@@ -198,6 +198,7 @@ use crate::sys;\n /// ```\n \n #[derive(Clone)]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"hashmap_type\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct HashMap<K, V, S = RandomState> {\n     base: base::HashMap<K, V, S>,"}, {"sha": "c1a57f2ce6129b27b74426136ee7afeee210ca4b", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23b9f46fff4453fb90611c2fb554e004f1cec096/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23b9f46fff4453fb90611c2fb554e004f1cec096/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=23b9f46fff4453fb90611c2fb554e004f1cec096", "patch": "@@ -105,6 +105,7 @@ use super::map::{self, HashMap, Keys, RandomState};\n /// [`PartialEq`]: ../../std/cmp/trait.PartialEq.html\n /// [`RefCell`]: ../../std/cell/struct.RefCell.html\n #[derive(Clone)]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"hashset_type\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct HashSet<T, S = RandomState> {\n     map: HashMap<T, (), S>,"}, {"sha": "797b22fdd1279ca931234284192bac2e2e4ddc02", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23b9f46fff4453fb90611c2fb554e004f1cec096/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23b9f46fff4453fb90611c2fb554e004f1cec096/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=23b9f46fff4453fb90611c2fb554e004f1cec096", "patch": "@@ -108,6 +108,7 @@ use crate::sys_common::poison::{self, LockResult, TryLockError, TryLockResult};\n /// *guard += 1;\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"mutex_type\")]\n pub struct Mutex<T: ?Sized> {\n     // Note that this mutex is in a *box*, not inlined into the struct itself.\n     // Once a native mutex has been used once, its address can never change (it"}]}