{"sha": "aedc34c6e5ee8d675212bb60d54e1394e9ee9964", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZGMzNGM2ZTVlZThkNjc1MjEyYmI2MGQ1NGUxMzk0ZTllZTk5NjQ=", "commit": {"author": {"name": "Christian Poveda", "email": "git@christianpoveda.xyz", "date": "2020-03-06T14:38:16Z"}, "committer": {"name": "Christian Poveda", "email": "git@christianpoveda.xyz", "date": "2020-03-06T23:11:05Z"}, "message": "deallocate old environ", "tree": {"sha": "65b40b3182e3df6ec4d6cfb2d8432bf0ac4a2f6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65b40b3182e3df6ec4d6cfb2d8432bf0ac4a2f6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aedc34c6e5ee8d675212bb60d54e1394e9ee9964", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQRsB8A/3NrzTlMMjT0nUl7150IKUAUCXmLYigAKCRAnUl7150IK\nUD2dAP9rY3+dNvJhbQZ0bHQveiHmJ8x994QfrgM1KKAfFAU6BwEAvHrqTIsU0/lC\n5vS53M4T32QHDEioBIjPeAJwA8lPGAQ=\n=3PlU\n-----END PGP SIGNATURE-----", "payload": "tree 65b40b3182e3df6ec4d6cfb2d8432bf0ac4a2f6f\nparent 7882dfb3f599df93d1e0d0a643e41072c6bf5683\nauthor Christian Poveda <git@christianpoveda.xyz> 1583505496 -0500\ncommitter Christian Poveda <git@christianpoveda.xyz> 1583536265 -0500\n\ndeallocate old environ\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aedc34c6e5ee8d675212bb60d54e1394e9ee9964", "html_url": "https://github.com/rust-lang/rust/commit/aedc34c6e5ee8d675212bb60d54e1394e9ee9964", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aedc34c6e5ee8d675212bb60d54e1394e9ee9964/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7882dfb3f599df93d1e0d0a643e41072c6bf5683", "url": "https://api.github.com/repos/rust-lang/rust/commits/7882dfb3f599df93d1e0d0a643e41072c6bf5683", "html_url": "https://github.com/rust-lang/rust/commit/7882dfb3f599df93d1e0d0a643e41072c6bf5683"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "188001c170abffc74c12c7f49b469439b82695d8", "filename": "src/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aedc34c6e5ee8d675212bb60d54e1394e9ee9964/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aedc34c6e5ee8d675212bb60d54e1394e9ee9964/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=aedc34c6e5ee8d675212bb60d54e1394e9ee9964", "patch": "@@ -85,7 +85,7 @@ pub struct MemoryExtra<'tcx> {\n     /// (helps for debugging memory leaks).\n     tracked_alloc_id: Option<AllocId>,\n \n-    /// Place where the `environ` static is stored.\n+    /// Place where the `environ` static is stored. Its value should not change after initialization.\n     pub(crate) environ: Option<MPlaceTy<'tcx, Tag>>,\n }\n "}, {"sha": "0408741cf2a68ac6077e05913a99dc58687ba46b", "filename": "src/shims/env.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aedc34c6e5ee8d675212bb60d54e1394e9ee9964/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aedc34c6e5ee8d675212bb60d54e1394e9ee9964/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=aedc34c6e5ee8d675212bb60d54e1394e9ee9964", "patch": "@@ -155,8 +155,17 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         }\n     }\n \n+    /// Updates the `environ` static. It should not be called before\n+    /// `MemoryExtra::init_extern_statics`.\n     fn update_environ(&mut self) -> InterpResult<'tcx> {\n         let this = self.eval_context_mut();\n+        // Deallocate the old environ value.\n+        let old_vars_ptr = this.read_scalar(this.memory.extra.environ.unwrap().into())?.not_undef()?;\n+        // The pointer itself can be null because `MemoryExtra::init_extern_statics` only\n+        // initializes the place for the static but not the static itself.\n+        if !this.is_null(old_vars_ptr)? {\n+            this.memory.deallocate(this.force_ptr(old_vars_ptr)?, None, MiriMemoryKind::Machine.into())?;\n+        }\n         // Collect all the pointers to each variable in a vector.\n         let mut vars: Vec<Scalar<Tag>> = this.machine.env_vars.map.values().map(|&ptr| ptr.into()).collect();\n         // Add the trailing null pointer.\n@@ -170,7 +179,6 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             let place = this.mplace_field(vars_place, idx as u64)?;\n             this.write_scalar(var, place.into())?;\n         }\n-\n         this.write_scalar(\n             vars_place.ptr,\n             this.memory.extra.environ.unwrap().into(),"}]}