{"sha": "bebd3ff6666d3e3f9bf458c5fab6c71c038db54f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYmQzZmY2NjY2ZDNlM2Y5YmY0NThjNWZhYjZjNzFjMDM4ZGI1NGY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-08T13:34:31Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-26T14:49:24Z"}, "message": "extract a helper for `make_query_result` that skips canonicalization", "tree": {"sha": "825b4da15552638797c538dbcdda2c009cb2bca0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/825b4da15552638797c538dbcdda2c009cb2bca0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bebd3ff6666d3e3f9bf458c5fab6c71c038db54f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bebd3ff6666d3e3f9bf458c5fab6c71c038db54f", "html_url": "https://github.com/rust-lang/rust/commit/bebd3ff6666d3e3f9bf458c5fab6c71c038db54f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bebd3ff6666d3e3f9bf458c5fab6c71c038db54f/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfd33f593218aa47030e3d9abc12bf19c3c7525d", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfd33f593218aa47030e3d9abc12bf19c3c7525d", "html_url": "https://github.com/rust-lang/rust/commit/dfd33f593218aa47030e3d9abc12bf19c3c7525d"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "190a6c18ff8403b450e81802f00510bc85a9397c", "filename": "src/librustc/infer/canonical/query_result.rs", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/bebd3ff6666d3e3f9bf458c5fab6c71c038db54f/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bebd3ff6666d3e3f9bf458c5fab6c71c038db54f/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_result.rs?ref=bebd3ff6666d3e3f9bf458c5fab6c71c038db54f", "patch": "@@ -63,14 +63,37 @@ impl<'cx, 'gcx, 'tcx> InferCtxt<'cx, 'gcx, 'tcx> {\n         answer: T,\n         fulfill_cx: &mut FulfillmentContext<'tcx>,\n     ) -> Result<CanonicalizedQueryResult<'gcx, 'tcx, T>, NoSolution>\n+    where\n+        T: Debug,\n+        QueryResult<'tcx, T>: Canonicalize<'gcx, 'tcx>,\n+    {\n+        let query_result = self.make_query_result(inference_vars, answer, fulfill_cx)?;\n+        let (canonical_result, _) = self.canonicalize_response(&query_result);\n+\n+        debug!(\n+            \"make_canonicalized_query_result: canonical_result = {:#?}\",\n+            canonical_result\n+        );\n+\n+        Ok(canonical_result)\n+    }\n+\n+    /// Helper for `make_canonicalized_query_result` that does\n+    /// everything up until the final canonicalization.\n+    fn make_query_result<T>(\n+        &self,\n+        inference_vars: CanonicalVarValues<'tcx>,\n+        answer: T,\n+        fulfill_cx: &mut FulfillmentContext<'tcx>,\n+    ) -> Result<QueryResult<'tcx, T>, NoSolution>\n     where\n         T: Debug,\n         QueryResult<'tcx, T>: Canonicalize<'gcx, 'tcx>,\n     {\n         let tcx = self.tcx;\n \n         debug!(\n-            \"make_query_response(\\\n+            \"make_query_result(\\\n              inference_vars={:?}, \\\n              answer={:?})\",\n             inference_vars, answer,\n@@ -85,7 +108,7 @@ impl<'cx, 'gcx, 'tcx> InferCtxt<'cx, 'gcx, 'tcx> {\n \n         if !true_errors.is_empty() {\n             // FIXME -- we don't indicate *why* we failed to solve\n-            debug!(\"make_query_response: true_errors={:#?}\", true_errors);\n+            debug!(\"make_query_result: true_errors={:#?}\", true_errors);\n             return Err(NoSolution);\n         }\n \n@@ -144,19 +167,12 @@ impl<'cx, 'gcx, 'tcx> InferCtxt<'cx, 'gcx, 'tcx> {\n             Certainty::Ambiguous\n         };\n \n-        let (canonical_result, _) = self.canonicalize_response(&QueryResult {\n+        Ok(QueryResult {\n             var_values: inference_vars,\n             region_constraints,\n             certainty,\n             value: answer,\n-        });\n-\n-        debug!(\n-            \"make_query_response: canonical_result = {:#?}\",\n-            canonical_result\n-        );\n-\n-        Ok(canonical_result)\n+        })\n     }\n \n     /// Given the (canonicalized) result to a canonical query,"}]}