{"sha": "ffb6291cd032e3b0577bf67a2b6d932d6ba0787c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmYjYyOTFjZDAzMmUzYjA1NzdiZjY3YTJiNmQ5MzJkNmJhMDc4N2M=", "commit": {"author": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-02-27T01:45:52Z"}, "committer": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-02-27T01:45:52Z"}, "message": "Improve --help performance for x.py\n\nSince compiling the bootstrap command doesn't require any submodules,\nwe can skip updating submodules when a --help command is passed in.\nOn my machine, this saves 1 minute if the submodules are already\ndownloaded, and 10 minutes if run on a clean repo.\n\nThis commit also adds a message before compiling/downloading anything\nwhen a --help command is passed in, to tell the user WHY --help\ntakes so long to complete. It also points the user to the bootstrap\nREADME.md for faster help.\n\nFinally, this fixes one warning message that still referenced using\nmake instead of x.py, even though x.py is now the standard way of\nbuilding rust.", "tree": {"sha": "ea6decc8c2196858d2fce67783cd901b47064330", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea6decc8c2196858d2fce67783cd901b47064330"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffb6291cd032e3b0577bf67a2b6d932d6ba0787c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffb6291cd032e3b0577bf67a2b6d932d6ba0787c", "html_url": "https://github.com/rust-lang/rust/commit/ffb6291cd032e3b0577bf67a2b6d932d6ba0787c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffb6291cd032e3b0577bf67a2b6d932d6ba0787c/comments", "author": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6070d3e47e5e9f15575a3bd33583358b52bc6eda", "url": "https://api.github.com/repos/rust-lang/rust/commits/6070d3e47e5e9f15575a3bd33583358b52bc6eda", "html_url": "https://github.com/rust-lang/rust/commit/6070d3e47e5e9f15575a3bd33583358b52bc6eda"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "f5fcf4ba0f560af3b6a30b0f6ea33a4aa96b481d", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ffb6291cd032e3b0577bf67a2b6d932d6ba0787c/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/ffb6291cd032e3b0577bf67a2b6d932d6ba0787c/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=ffb6291cd032e3b0577bf67a2b6d932d6ba0787c", "patch": "@@ -670,7 +670,7 @@ def set_dev_environment(self):\n         self._download_url = 'https://dev-static.rust-lang.org'\n \n \n-def bootstrap():\n+def bootstrap(help_triggered):\n     \"\"\"Configure, fetch, build and run the initial bootstrap\"\"\"\n     parser = argparse.ArgumentParser(description='Build rust')\n     parser.add_argument('--config')\n@@ -708,7 +708,7 @@ def bootstrap():\n             print('      and so in order to preserve your $HOME this will now')\n             print('      use vendored sources by default. Note that if this')\n             print('      does not work you should run a normal build first')\n-            print('      before running a command like `sudo make install`')\n+            print('      before running a command like `sudo ./x.py install`')\n \n     if build.use_vendored_sources:\n         if not os.path.exists('.cargo'):\n@@ -734,7 +734,10 @@ def bootstrap():\n     if 'dev' in data:\n         build.set_dev_environment()\n \n-    build.update_submodules()\n+    # No help text depends on submodules. This check saves ~1 minute of git commands, even if\n+    # all the submodules are present and downloaded!\n+    if not help_triggered:\n+        build.update_submodules()\n \n     # Fetch/build the bootstrap\n     build.build = args.build or build.build_triple()\n@@ -760,7 +763,13 @@ def main():\n     help_triggered = (\n         '-h' in sys.argv) or ('--help' in sys.argv) or (len(sys.argv) == 1)\n     try:\n-        bootstrap()\n+        # If the user is asking for help, let them know that the whole download-and-build\n+        # process has to happen before anything is printed out.\n+        if help_triggered:\n+            print(\"NOTE: Downloading and compiling bootstrap requirements before processing\")\n+            print(\"      --help command. See src/bootstrap/README.md for help with common\")\n+            print(\"      commands.\")\n+        bootstrap(help_triggered)\n         if not help_triggered:\n             print(\"Build completed successfully in {}\".format(\n                 format_build_time(time() - start_time)))"}]}