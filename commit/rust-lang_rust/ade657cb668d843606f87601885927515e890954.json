{"sha": "ade657cb668d843606f87601885927515e890954", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkZTY1N2NiNjY4ZDg0MzYwNmY4NzYwMTg4NTkyNzUxNWU4OTA5NTQ=", "commit": {"author": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2020-01-15T14:53:08Z"}, "committer": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2020-01-15T14:53:08Z"}, "message": "Tweak naming slightly", "tree": {"sha": "77da053930f8087cedd59c969c811bd31200afec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77da053930f8087cedd59c969c811bd31200afec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ade657cb668d843606f87601885927515e890954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ade657cb668d843606f87601885927515e890954", "html_url": "https://github.com/rust-lang/rust/commit/ade657cb668d843606f87601885927515e890954", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ade657cb668d843606f87601885927515e890954/comments", "author": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "478ba65f8da6ffd4a3fea09c6a4a1f0fb92e1c85", "url": "https://api.github.com/repos/rust-lang/rust/commits/478ba65f8da6ffd4a3fea09c6a4a1f0fb92e1c85", "html_url": "https://github.com/rust-lang/rust/commit/478ba65f8da6ffd4a3fea09c6a4a1f0fb92e1c85"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "7f4c9280cb3eb65e54d7f6ef078c3a45915012cd", "filename": "crates/ra_cargo_watch/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ade657cb668d843606f87601885927515e890954/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ade657cb668d843606f87601885927515e890954/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs?ref=ade657cb668d843606f87601885927515e890954", "patch": "@@ -51,7 +51,7 @@ impl CheckWatcher {\n         let (task_send, task_recv) = unbounded::<CheckTask>();\n         let (cmd_send, cmd_recv) = unbounded::<CheckCommand>();\n         let handle = std::thread::spawn(move || {\n-            let mut check = CheckWatcherState::new(options, workspace_root);\n+            let mut check = CheckWatcherThread::new(options, workspace_root);\n             check.run(&task_send, &cmd_recv);\n         });\n         CheckWatcher { task_recv, cmd_send: Some(cmd_send), handle: Some(handle), state }\n@@ -175,16 +175,16 @@ pub enum CheckCommand {\n     Update,\n }\n \n-struct CheckWatcherState {\n+struct CheckWatcherThread {\n     options: CheckOptions,\n     workspace_root: PathBuf,\n     watcher: WatchThread,\n     last_update_req: Option<Instant>,\n }\n \n-impl CheckWatcherState {\n-    fn new(options: CheckOptions, workspace_root: PathBuf) -> CheckWatcherState {\n-        CheckWatcherState {\n+impl CheckWatcherThread {\n+    fn new(options: CheckOptions, workspace_root: PathBuf) -> CheckWatcherThread {\n+        CheckWatcherThread {\n             options,\n             workspace_root,\n             watcher: WatchThread::dummy(),"}]}