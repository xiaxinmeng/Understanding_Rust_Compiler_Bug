{"sha": "8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1MTkxMzlhYjQyZjgzMTE1YmI5ZjRlYWIxZjVjZTRhNWE0YmFmZTY=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2016-06-06T08:02:19Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2016-06-06T08:02:19Z"}, "message": "Merge pull request #34102 from eddyb/rollup\n\nRollup of 12 pull requests", "tree": {"sha": "de9de0233599984785f8e35b5e44a9dbb320550e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de9de0233599984785f8e35b5e44a9dbb320550e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "html_url": "https://github.com/rust-lang/rust/commit/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b1e914b913e93f0fe182a42c897b759824a5e44", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b1e914b913e93f0fe182a42c897b759824a5e44", "html_url": "https://github.com/rust-lang/rust/commit/5b1e914b913e93f0fe182a42c897b759824a5e44"}, {"sha": "c77076074c3a99e58d357275c2c8542171eeec86", "url": "https://api.github.com/repos/rust-lang/rust/commits/c77076074c3a99e58d357275c2c8542171eeec86", "html_url": "https://github.com/rust-lang/rust/commit/c77076074c3a99e58d357275c2c8542171eeec86"}], "stats": {"total": 87, "additions": 57, "deletions": 30}, "files": [{"sha": "a36362e0ada71aff5e4451befbe56999c10e90ba", "filename": "configure", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/configure", "raw_url": "https://github.com/rust-lang/rust/raw/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "patch": "@@ -133,12 +133,13 @@ probe() {\n }\n \n probe_need() {\n-    local V=$1\n     probe $*\n+    local V=$1\n+    shift\n     eval VV=\\$$V\n     if [ -z \"$VV\" ]\n     then\n-        err \"needed, but unable to find any of: $*\"\n+        err \"$V needed, but unable to find any of: $*\"\n     fi\n }\n \n@@ -725,7 +726,7 @@ if [ -n \"$CFG_ENABLE_ORBIT\" ]; then putvar CFG_ENABLE_ORBIT; fi\n \n step_msg \"looking for build programs\"\n \n-probe_need CFG_CURLORWGET  curl wget\n+probe_need CFG_CURL curl\n if [ -z \"$CFG_PYTHON_PROVIDED\" ]; then\n     probe_need CFG_PYTHON      python2.7 python2 python\n fi"}, {"sha": "3b406ac0447f22f7c8a164c337886dddac6468a4", "filename": "src/libcore/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibcore%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibcore%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2FCargo.toml?ref=8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "patch": "@@ -2,7 +2,6 @@\n authors = [\"The Rust Project Developers\"]\n name = \"core\"\n version = \"0.0.0\"\n-build = \"build.rs\"\n \n [lib]\n name = \"core\""}, {"sha": "94baf188bcaeea9d28f582e6071fed9eb30c8afc", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "patch": "@@ -10,7 +10,7 @@\n \n //! rustc compiler intrinsics.\n //!\n-//! The corresponding definitions are in librustc_trans/trans/intrinsic.rs.\n+//! The corresponding definitions are in librustc_trans/intrinsic.rs.\n //!\n //! # Volatiles\n //!"}, {"sha": "97b57f231b907b5b7446ad72bdbf3c48cf62bfc3", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "patch": "@@ -1029,6 +1029,30 @@ struct Bar2; // ok!\n ```\n \"##,\n \n+E0429: r##\"\n+The `self` keyword cannot appear alone as the last segment in a `use`\n+declaration.\n+\n+Example of erroneous code:\n+\n+```compile_fail\n+use std::fmt::self; // error: `self` imports are only allowed within a { } list\n+```\n+\n+To use a namespace itself in addition to some of its members, `self` may appear\n+as part of a brace-enclosed list of imports:\n+\n+```\n+use std::fmt::{self, Debug};\n+```\n+\n+If you only want to import the namespace, do so directly:\n+\n+```\n+use std::fmt;\n+```\n+\"##,\n+\n E0430: r##\"\n The `self` import appears more than once in the list. Erroneous code example:\n \n@@ -1235,5 +1259,4 @@ register_diagnostics! {\n     E0420, // is not an associated const\n     E0421, // unresolved associated const\n     E0427, // cannot use `ref` binding mode with ...\n-    E0429, // `self` imports are only allowed within a { } list\n }"}, {"sha": "77de51b32e2269841691e3dc3df3498b562d757d", "filename": "src/librustc_unicode/char.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibrustc_unicode%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibrustc_unicode%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_unicode%2Fchar.rs?ref=8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "patch": "@@ -30,13 +30,13 @@\n \n use core::char::CharExt as C;\n use core::fmt;\n-use tables::{derived_property, property, general_category, conversions};\n+use tables::{conversions, derived_property, general_category, property};\n \n // stable reexports\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use core::char::{MAX, from_u32, from_u32_unchecked, from_digit};\n+pub use core::char::{MAX, from_digit, from_u32, from_u32_unchecked};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use core::char::{EscapeUnicode, EscapeDefault, EncodeUtf8, EncodeUtf16};\n+pub use core::char::{EncodeUtf16, EncodeUtf8, EscapeDefault, EscapeUnicode};\n \n // unstable reexports\n #[unstable(feature = \"unicode\", issue = \"27783\")]\n@@ -808,16 +808,18 @@ pub fn decode_utf16<I: IntoIterator<Item = u16>>(iter: I) -> DecodeUtf16<I::Into\n }\n \n #[stable(feature = \"decode_utf16\", since = \"1.9.0\")]\n-impl<I: Iterator<Item=u16>> Iterator for DecodeUtf16<I> {\n+impl<I: Iterator<Item = u16>> Iterator for DecodeUtf16<I> {\n     type Item = Result<char, DecodeUtf16Error>;\n \n     fn next(&mut self) -> Option<Result<char, DecodeUtf16Error>> {\n         let u = match self.buf.take() {\n             Some(buf) => buf,\n-            None => match self.iter.next() {\n-                Some(u) => u,\n-                None => return None,\n-            },\n+            None => {\n+                match self.iter.next() {\n+                    Some(u) => u,\n+                    None => return None,\n+                }\n+            }\n         };\n \n         if u < 0xD800 || 0xDFFF < u {"}, {"sha": "b03d7ee79e89c3d8d6f4777e6da40792f023cad6", "filename": "src/librustc_unicode/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibrustc_unicode%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibrustc_unicode%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_unicode%2Flib.rs?ref=8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "patch": "@@ -43,14 +43,14 @@ pub mod char;\n \n #[allow(deprecated)]\n pub mod str {\n-    pub use u_str::{UnicodeStr, SplitWhitespace};\n-    pub use u_str::{utf8_char_width, is_utf16};\n-    pub use u_str::{Utf16Encoder};\n+    pub use u_str::{SplitWhitespace, UnicodeStr};\n+    pub use u_str::{is_utf16, utf8_char_width};\n+    pub use u_str::Utf16Encoder;\n }\n \n // For use in libcollections, not re-exported in libstd.\n pub mod derived_property {\n-    pub use tables::derived_property::{Cased, Case_Ignorable};\n+    pub use tables::derived_property::{Case_Ignorable, Cased};\n }\n \n // For use in libsyntax"}, {"sha": "0bac44b837ff247dc80743994b5fe58daff5d3d9", "filename": "src/librustc_unicode/u_str.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibrustc_unicode%2Fu_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibrustc_unicode%2Fu_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_unicode%2Fu_str.rs?ref=8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "patch": "@@ -144,7 +144,9 @@ impl<I> Utf16Encoder<I> {\n     }\n }\n \n-impl<I> Iterator for Utf16Encoder<I> where I: Iterator<Item=char> {\n+impl<I> Iterator for Utf16Encoder<I>\n+    where I: Iterator<Item = char>\n+{\n     type Item = u16;\n \n     #[inline]"}, {"sha": "45dacb68e91a6d69ce6268f8a0b86abf09e9e057", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "patch": "@@ -409,8 +409,8 @@ a {\n \n .content span.enum, .content a.enum, .block a.current.enum { color: #5e9766; }\n .content span.struct, .content a.struct, .block a.current.struct { color: #df3600; }\n-.content a.type { color: #e57300; }\n-.content a.macro { color: #068000; }\n+.content span.type, .content a.type, .block a.current.type { color: #e57300; }\n+.content span.macro, .content a.macro, .block a.current.macro { color: #068000; }\n .block a.current.crate { font-weight: 500; }\n \n .search-input {\n@@ -453,7 +453,7 @@ a {\n .content .search-results td:first-child { padding-right: 0; }\n .content .search-results td:first-child a { padding-right: 10px; }\n \n-tr.result span.primitive::after { content: ' (primitive type)'; font-style: italic; }\n+tr.result span.primitive::after { content: ' (primitive type)'; font-style: italic; color: black}\n \n body.blur > :not(#help) {\n     filter: blur(8px);"}, {"sha": "aee6d15b7ca37084fb45d70b45efae85b3d5bdc2", "filename": "src/librustdoc/html/static/styles/main.css", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css", "raw_url": "https://github.com/rust-lang/rust/raw/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css?ref=8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "patch": "@@ -88,8 +88,9 @@ pre {\n     border-bottom-color: #ddd;\n }\n \n-.content a.primitive { color: #39a7bf; }\n-.content span.externcrate, span.mod, .content a.mod, block a.current.mod { color: #4d76ae; }\n+.content span.primitive, .content a.primitive, .block a.current.primitive { color: #39a7bf; }\n+.content span.externcrate,\n+.content span.mod, .content a.mod, .block a.current.mod { color: #4d76ae; }\n .content span.fn, .content a.fn, .block a.current.fn,\n .content span.method, .content a.method, .block a.current.method,\n .content span.tymethod, .content a.tymethod, .block a.current.tymethod,"}, {"sha": "1883f0aba23eb940acc0b97a08a95e047be4040a", "filename": "src/libtest/stats.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibtest%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Flibtest%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Fstats.rs?ref=8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "patch": "@@ -11,7 +11,7 @@\n #![allow(missing_docs)]\n #![allow(deprecated)] // Float\n \n-use std::cmp::Ordering::{self, Less, Greater, Equal};\n+use std::cmp::Ordering::{self, Equal, Greater, Less};\n use std::mem;\n \n fn local_cmp(x: f64, y: f64) -> Ordering {\n@@ -35,7 +35,6 @@ fn local_sort(v: &mut [f64]) {\n \n /// Trait that provides simple descriptive statistics on a univariate set of numeric samples.\n pub trait Stats {\n-\n     /// Sum of the samples.\n     ///\n     /// Note: this method sacrifices performance at the altar of accuracy"}, {"sha": "9ac70882ca28ca283f69020da61fd5b0b054770e", "filename": "src/test/compile-fail/issue-32829.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Ftest%2Fcompile-fail%2Fissue-32829.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Ftest%2Fcompile-fail%2Fissue-32829.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32829.rs?ref=8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![deny(warnings)]\n+// error-pattern: calls in statics are limited\n+\n+static S : u64 = { { panic!(\"foo\"); 0 } };\n \n fn main() {\n-    // Remove this whenever snapshots and rustbuild nightlies are synced.\n-    println!(\"cargo:rustc-cfg=cargobuild\");\n-    println!(\"cargo:rerun-if-changed=build.rs\")\n+    println!(\"{:?}\", S);\n }", "previous_filename": "src/libcore/build.rs"}, {"sha": "5f1c79a3c1542bdd139705adffd475977962ea5a", "filename": "src/test/run-pass/issue-23958.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Ftest%2Frun-pass%2Fissue-23958.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6/src%2Ftest%2Frun-pass%2Fissue-23958.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-23958.rs?ref=8519139ab42f83115bb9f4eab1f5ce4a5a4bafe6", "previous_filename": "src/test/run-pass/issue-23598.rs"}]}