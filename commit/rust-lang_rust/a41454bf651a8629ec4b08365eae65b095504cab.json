{"sha": "a41454bf651a8629ec4b08365eae65b095504cab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MTQ1NGJmNjUxYTg2MjllYzRiMDgzNjVlYWU2NWIwOTU1MDRjYWI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-08-03T01:19:06Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-08-16T22:30:39Z"}, "message": "rustdoc: add namespaces for items", "tree": {"sha": "4f73294bffafbc9a44a8824b5f52ab63dce05dc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f73294bffafbc9a44a8824b5f52ab63dce05dc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a41454bf651a8629ec4b08365eae65b095504cab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a41454bf651a8629ec4b08365eae65b095504cab", "html_url": "https://github.com/rust-lang/rust/commit/a41454bf651a8629ec4b08365eae65b095504cab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a41454bf651a8629ec4b08365eae65b095504cab/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a7cd644cbcf8f57a156a32c7e1312de86682b0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a7cd644cbcf8f57a156a32c7e1312de86682b0d", "html_url": "https://github.com/rust-lang/rust/commit/7a7cd644cbcf8f57a156a32c7e1312de86682b0d"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "039f385d7c564612e067098b3aa4e29df36de09c", "filename": "src/librustdoc/html/item_type.rs", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/a41454bf651a8629ec4b08365eae65b095504cab/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a41454bf651a8629ec4b08365eae65b095504cab/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs?ref=a41454bf651a8629ec4b08365eae65b095504cab", "patch": "@@ -42,6 +42,14 @@ pub enum ItemType {\n     AssociatedConst = 18,\n }\n \n+\n+#[derive(Copy, Eq, PartialEq, Clone)]\n+pub enum NameSpace {\n+    Type,\n+    Value,\n+    Macro,\n+}\n+\n impl ItemType {\n     pub fn from_item(item: &clean::Item) -> ItemType {\n         let inner = match item.inner {\n@@ -113,10 +121,50 @@ impl ItemType {\n             ItemType::AssociatedConst => \"associatedconstant\",\n         }\n     }\n+\n+    pub fn name_space(&self) -> NameSpace {\n+        match *self {\n+            ItemType::Struct |\n+            ItemType::Enum |\n+            ItemType::Module |\n+            ItemType::Typedef |\n+            ItemType::Trait |\n+            ItemType::Primitive |\n+            ItemType::AssociatedType => NameSpace::Type,\n+\n+            ItemType::ExternCrate |\n+            ItemType::Import |\n+            ItemType::Function |\n+            ItemType::Static |\n+            ItemType::Impl |\n+            ItemType::TyMethod |\n+            ItemType::Method |\n+            ItemType::StructField |\n+            ItemType::Variant |\n+            ItemType::Constant |\n+            ItemType::AssociatedConst => NameSpace::Value,\n+\n+            ItemType::Macro => NameSpace::Macro,\n+        }\n+    }\n }\n \n impl fmt::Display for ItemType {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         self.css_class().fmt(f)\n     }\n }\n+\n+pub const NAMESPACE_TYPE: &'static str = \"t\";\n+pub const NAMESPACE_VALUE: &'static str = \"v\";\n+pub const NAMESPACE_MACRO: &'static str = \"m\";\n+\n+impl NameSpace {\n+    pub fn to_static_str(&self) -> &'static str {\n+        match *self {\n+            NameSpace::Type => NAMESPACE_TYPE,\n+            NameSpace::Value => NAMESPACE_VALUE,\n+            NameSpace::Macro => NAMESPACE_MACRO,\n+        }\n+    }\n+}"}]}