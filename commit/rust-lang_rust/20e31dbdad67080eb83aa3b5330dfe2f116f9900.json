{"sha": "20e31dbdad67080eb83aa3b5330dfe2f116f9900", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwZTMxZGJkYWQ2NzA4MGViODNhYTNiNTMzMGRmZTJmMTE2Zjk5MDA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-04-04T09:41:04Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-04-04T09:41:04Z"}, "message": "fix newer getrandom on Windows", "tree": {"sha": "332c560ae20c0beaa43aac995bb59e3ba689c3ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/332c560ae20c0beaa43aac995bb59e3ba689c3ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20e31dbdad67080eb83aa3b5330dfe2f116f9900", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20e31dbdad67080eb83aa3b5330dfe2f116f9900", "html_url": "https://github.com/rust-lang/rust/commit/20e31dbdad67080eb83aa3b5330dfe2f116f9900", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20e31dbdad67080eb83aa3b5330dfe2f116f9900/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f7c01527af7ee5b39c279c99cef437ab5715580", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f7c01527af7ee5b39c279c99cef437ab5715580", "html_url": "https://github.com/rust-lang/rust/commit/0f7c01527af7ee5b39c279c99cef437ab5715580"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "47f9544066bc46f7154a9a2c696baf62a830c464", "filename": "src/shims/windows/foreign_items.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/20e31dbdad67080eb83aa3b5330dfe2f116f9900/src%2Fshims%2Fwindows%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20e31dbdad67080eb83aa3b5330dfe2f116f9900/src%2Fshims%2Fwindows%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fwindows%2Fforeign_items.rs?ref=20e31dbdad67080eb83aa3b5330dfe2f116f9900", "patch": "@@ -282,14 +282,30 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n             // Miscellaneous\n             \"SystemFunction036\" => {\n+                // This is really 'RtlGenRandom'.\n                 check_abi(abi, Abi::System { unwind: false })?;\n-                // The actual name of 'RtlGenRandom'\n                 let &[ref ptr, ref len] = check_arg_count(args)?;\n                 let ptr = this.read_scalar(ptr)?.check_init()?;\n                 let len = this.read_scalar(len)?.to_u32()?;\n                 this.gen_random(ptr, len.into())?;\n                 this.write_scalar(Scalar::from_bool(true), dest)?;\n             }\n+            \"BCryptGenRandom\" => {\n+                check_abi(abi, Abi::System { unwind: false })?;\n+                let &[ref algorithm, ref ptr, ref len, ref flags] = check_arg_count(args)?;\n+                let algorithm = this.read_scalar(algorithm)?;\n+                let ptr = this.read_scalar(ptr)?.check_init()?;\n+                let len = this.read_scalar(len)?.to_u32()?;\n+                let flags = this.read_scalar(flags)?.to_u32()?;\n+                if flags != 2 { // BCRYPT_USE_SYSTEM_PREFERRED_RNG\n+                    throw_unsup_format!(\"BCryptGenRandom is supported only with the BCRYPT_USE_SYSTEM_PREFERRED_RNG flag\");\n+                }\n+                if algorithm.to_machine_usize(this)? != 0 {\n+                    throw_unsup_format!(\"BCryptGenRandom algorithm must be NULL when the flag is BCRYPT_USE_SYSTEM_PREFERRED_RNG\");\n+                }\n+                this.gen_random(ptr, len.into())?;\n+                this.write_null(dest)?; // STATUS_SUCCESS\n+            }\n             \"GetConsoleScreenBufferInfo\" => {\n                 check_abi(abi, Abi::System { unwind: false })?;\n                 // `term` needs this, so we fake it."}]}