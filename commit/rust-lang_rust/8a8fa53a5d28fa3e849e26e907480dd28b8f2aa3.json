{"sha": "8a8fa53a5d28fa3e849e26e907480dd28b8f2aa3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhOGZhNTNhNWQyOGZhM2U4NDllMjZlOTA3NDgwZGQyOGI4ZjJhYTM=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-18T19:44:48Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-20T12:55:26Z"}, "message": "Transform the last error place to an immediate instead", "tree": {"sha": "e8f4ae1ed1ea5be2a578097dfa45fa1c3de1fe32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8f4ae1ed1ea5be2a578097dfa45fa1c3de1fe32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a8fa53a5d28fa3e849e26e907480dd28b8f2aa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a8fa53a5d28fa3e849e26e907480dd28b8f2aa3", "html_url": "https://github.com/rust-lang/rust/commit/8a8fa53a5d28fa3e849e26e907480dd28b8f2aa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a8fa53a5d28fa3e849e26e907480dd28b8f2aa3/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "619ccf3834d18eeef1aea4030e5c2bcf673e5688", "url": "https://api.github.com/repos/rust-lang/rust/commits/619ccf3834d18eeef1aea4030e5c2bcf673e5688", "html_url": "https://github.com/rust-lang/rust/commit/619ccf3834d18eeef1aea4030e5c2bcf673e5688"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "1933aee1151dc3b3b4cef7b8a5a610ca1ff55b90", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8a8fa53a5d28fa3e849e26e907480dd28b8f2aa3/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a8fa53a5d28fa3e849e26e907480dd28b8f2aa3/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=8a8fa53a5d28fa3e849e26e907480dd28b8f2aa3", "patch": "@@ -415,8 +415,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n             \"__errno_location\" | \"__error\" => {\n                 let errno_place = this.machine.last_error.unwrap();\n-                let errno_scalar: Scalar<Tag> = this.check_mplace_access(errno_place.into(), Some(Size::from_bits(32)))?.unwrap().into();\n-                this.write_scalar(errno_scalar, dest)?;\n+                this.write_scalar(errno_place.to_ref().to_scalar()?, dest)?;\n             }\n \n             \"getenv\" => {"}]}