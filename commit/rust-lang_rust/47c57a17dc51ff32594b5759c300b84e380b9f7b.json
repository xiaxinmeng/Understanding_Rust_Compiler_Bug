{"sha": "47c57a17dc51ff32594b5759c300b84e380b9f7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3YzU3YTE3ZGM1MWZmMzI1OTRiNTc1OWMzMDBiODRlMzgwYjlmN2I=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-02-01T11:36:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-02T05:56:53Z"}, "message": "Propagating unsafe::slice 1", "tree": {"sha": "74f1809f7f453a7c8465ab289e757c1f745c7706", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74f1809f7f453a7c8465ab289e757c1f745c7706"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47c57a17dc51ff32594b5759c300b84e380b9f7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47c57a17dc51ff32594b5759c300b84e380b9f7b", "html_url": "https://github.com/rust-lang/rust/commit/47c57a17dc51ff32594b5759c300b84e380b9f7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47c57a17dc51ff32594b5759c300b84e380b9f7b/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e406d7fdd55c6c499eb3af750c64292a88e4d9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e406d7fdd55c6c499eb3af750c64292a88e4d9f", "html_url": "https://github.com/rust-lang/rust/commit/4e406d7fdd55c6c499eb3af750c64292a88e4d9f"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "87e8be75787314fa24e0f6ee229a6b7412a767e5", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/47c57a17dc51ff32594b5759c300b84e380b9f7b/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c57a17dc51ff32594b5759c300b84e380b9f7b/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=47c57a17dc51ff32594b5759c300b84e380b9f7b", "patch": "@@ -573,7 +573,7 @@ fn install_named_specific(c: cargo, wd: str, src: str, name: str) {\n     error(\"Can't find package \" + src + \"/\" + name);\n }\n \n-fn cmd_install(c: cargo, argv: [str]) {\n+fn cmd_install(c: cargo, argv: [str]) unsafe {\n     // cargo install <pkg>\n     if vec::len(argv) < 3u {\n         cmd_usage();\n@@ -596,8 +596,9 @@ fn cmd_install(c: cargo, argv: [str]) {\n         let uuid = rest(target, 5u);\n         let idx = str::index(uuid, '/' as u8);\n         if idx != -1 {\n-            let source = str::slice(uuid, 0u, idx as uint);\n-            uuid = str::slice(uuid, idx as uint + 1u, str::byte_len(uuid));\n+            let source = str::unsafe::slice(uuid, 0u, idx as uint);\n+            uuid = str::unsafe::slice(uuid, idx as uint + 1u,\n+                                      str::byte_len(uuid));\n             install_uuid_specific(c, wd, source, uuid);\n         } else {\n             install_uuid(c, wd, uuid);\n@@ -606,8 +607,9 @@ fn cmd_install(c: cargo, argv: [str]) {\n         let name = target;\n         let idx = str::index(name, '/' as u8);\n         if idx != -1 {\n-            let source = str::slice(name, 0u, idx as uint);\n-            name = str::slice(name, idx as uint + 1u, str::byte_len(name));\n+            let source = str::unsafe::slice(name, 0u, idx as uint);\n+            name = str::unsafe::slice(name, idx as uint + 1u,\n+                                      str::byte_len(name));\n             install_named_specific(c, wd, source, name);\n         } else {\n             install_named(c, wd, name);"}, {"sha": "a6b1c13943a08d63d37524c78f775c09ad6200a5", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/47c57a17dc51ff32594b5759c300b84e380b9f7b/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c57a17dc51ff32594b5759c300b84e380b9f7b/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=47c57a17dc51ff32594b5759c300b84e380b9f7b", "patch": "@@ -283,10 +283,10 @@ fn check_variants_T<T: copy>(\n     }\n }\n \n-fn last_part(filename: str) -> str {\n+fn last_part(filename: str) -> str unsafe {\n   let ix = str::rindex(filename, 47u8 /* '/' */);\n   assert ix >= 0;\n-  str::slice(filename, ix as uint + 1u, str::byte_len(filename) - 3u)\n+  str::unsafe::slice(filename, ix as uint + 1u, str::byte_len(filename) - 3u)\n }\n \n enum happiness { passed, cleanly_rejected(str), known_bug(str), failed(str), }"}, {"sha": "cf0c236afeb73b4b12387756c1ef5ff7da2a5111", "filename": "src/libstd/json.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47c57a17dc51ff32594b5759c300b84e380b9f7b/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c57a17dc51ff32594b5759c300b84e380b9f7b/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=47c57a17dc51ff32594b5759c300b84e380b9f7b", "patch": "@@ -228,17 +228,17 @@ fn from_str_float(s: str) -> (option<json>, str) {\n \n fn from_str_bool(s: str) -> (option<json>, str) {\n     if (str::starts_with(s, \"true\")) {\n-        (some(boolean(true)), str::slice(s, 4u, str::byte_len(s)))\n+        (some(boolean(true)), str::char_slice(s, 4u, str::char_len(s)))\n     } else if (str::starts_with(s, \"false\")) {\n-        (some(boolean(false)), str::slice(s, 5u, str::byte_len(s)))\n+        (some(boolean(false)), str::char_slice(s, 5u, str::char_len(s)))\n     } else {\n         (none, s)\n     }\n }\n \n fn from_str_null(s: str) -> (option<json>, str) {\n     if (str::starts_with(s, \"null\")) {\n-        (some(null), str::slice(s, 4u, str::byte_len(s)))\n+        (some(null), str::char_slice(s, 4u, str::char_len(s)))\n     } else {\n         (none, s)\n     }"}]}