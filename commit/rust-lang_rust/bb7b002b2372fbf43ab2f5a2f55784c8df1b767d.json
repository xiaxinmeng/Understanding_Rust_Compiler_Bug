{"sha": "bb7b002b2372fbf43ab2f5a2f55784c8df1b767d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiN2IwMDJiMjM3MmZiZjQzYWIyZjVhMmY1NTc4NGM4ZGYxYjc2N2Q=", "commit": {"author": {"name": "Evgeny Duzhakov", "email": "diaevd@gmail.com", "date": "2017-04-18T11:31:53Z"}, "committer": {"name": "Evgeny Duzhakov", "email": "diaevd@gmail.com", "date": "2017-04-18T11:31:53Z"}, "message": "format_lines: fix line_len for config.max_width", "tree": {"sha": "9749c1d2e02334a118014902bc6eba9febfb988f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9749c1d2e02334a118014902bc6eba9febfb988f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb7b002b2372fbf43ab2f5a2f55784c8df1b767d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb7b002b2372fbf43ab2f5a2f55784c8df1b767d", "html_url": "https://github.com/rust-lang/rust/commit/bb7b002b2372fbf43ab2f5a2f55784c8df1b767d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb7b002b2372fbf43ab2f5a2f55784c8df1b767d/comments", "author": {"login": "diaevd", "id": 5489173, "node_id": "MDQ6VXNlcjU0ODkxNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/5489173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diaevd", "html_url": "https://github.com/diaevd", "followers_url": "https://api.github.com/users/diaevd/followers", "following_url": "https://api.github.com/users/diaevd/following{/other_user}", "gists_url": "https://api.github.com/users/diaevd/gists{/gist_id}", "starred_url": "https://api.github.com/users/diaevd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diaevd/subscriptions", "organizations_url": "https://api.github.com/users/diaevd/orgs", "repos_url": "https://api.github.com/users/diaevd/repos", "events_url": "https://api.github.com/users/diaevd/events{/privacy}", "received_events_url": "https://api.github.com/users/diaevd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "diaevd", "id": 5489173, "node_id": "MDQ6VXNlcjU0ODkxNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/5489173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diaevd", "html_url": "https://github.com/diaevd", "followers_url": "https://api.github.com/users/diaevd/followers", "following_url": "https://api.github.com/users/diaevd/following{/other_user}", "gists_url": "https://api.github.com/users/diaevd/gists{/gist_id}", "starred_url": "https://api.github.com/users/diaevd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diaevd/subscriptions", "organizations_url": "https://api.github.com/users/diaevd/orgs", "repos_url": "https://api.github.com/users/diaevd/repos", "events_url": "https://api.github.com/users/diaevd/events{/privacy}", "received_events_url": "https://api.github.com/users/diaevd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4833a8c581f92e87eeb0f5a6f11719f4eb94092", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4833a8c581f92e87eeb0f5a6f11719f4eb94092", "html_url": "https://github.com/rust-lang/rust/commit/b4833a8c581f92e87eeb0f5a6f11719f4eb94092"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8fddece49029a17d6542af88a83a6d1e6da8deda", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb7b002b2372fbf43ab2f5a2f55784c8df1b767d/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb7b002b2372fbf43ab2f5a2f55784c8df1b767d/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=bb7b002b2372fbf43ab2f5a2f55784c8df1b767d", "patch": "@@ -496,7 +496,7 @@ fn format_lines(text: &mut StringBuffer, name: &str, config: &Config, report: &m\n             // Check for (and record) trailing whitespace.\n             if let Some(lw) = last_wspace {\n                 trims.push((cur_line, lw, b));\n-                line_len -= b - lw;\n+                line_len -= 1;\n             }\n             // Check for any line width errors we couldn't correct.\n             if config.error_on_line_overflow && line_len > config.max_width {\n@@ -511,7 +511,7 @@ fn format_lines(text: &mut StringBuffer, name: &str, config: &Config, report: &m\n             last_wspace = None;\n         } else {\n             newline_count = 0;\n-            line_len += c.len_utf8();\n+            line_len += 1;\n             if c.is_whitespace() {\n                 if last_wspace.is_none() {\n                     last_wspace = Some(b);"}]}