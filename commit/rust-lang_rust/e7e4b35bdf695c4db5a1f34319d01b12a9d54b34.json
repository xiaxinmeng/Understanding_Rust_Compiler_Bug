{"sha": "e7e4b35bdf695c4db5a1f34319d01b12a9d54b34", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ZTRiMzViZGY2OTVjNGRiNWExZjM0MzE5ZDAxYjEyYTlkNTRiMzQ=", "commit": {"author": {"name": "cgm616", "email": "cgm616@me.com", "date": "2020-10-25T13:34:46Z"}, "committer": {"name": "cgm616", "email": "cgm616@me.com", "date": "2020-10-25T13:34:46Z"}, "message": "Fix logic mistake", "tree": {"sha": "fd20e1af7b447067bd2e22d57da9a98b39b34a98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd20e1af7b447067bd2e22d57da9a98b39b34a98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7e4b35bdf695c4db5a1f34319d01b12a9d54b34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7e4b35bdf695c4db5a1f34319d01b12a9d54b34", "html_url": "https://github.com/rust-lang/rust/commit/e7e4b35bdf695c4db5a1f34319d01b12a9d54b34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7e4b35bdf695c4db5a1f34319d01b12a9d54b34/comments", "author": {"login": "cgm616", "id": 2502394, "node_id": "MDQ6VXNlcjI1MDIzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2502394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgm616", "html_url": "https://github.com/cgm616", "followers_url": "https://api.github.com/users/cgm616/followers", "following_url": "https://api.github.com/users/cgm616/following{/other_user}", "gists_url": "https://api.github.com/users/cgm616/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgm616/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgm616/subscriptions", "organizations_url": "https://api.github.com/users/cgm616/orgs", "repos_url": "https://api.github.com/users/cgm616/repos", "events_url": "https://api.github.com/users/cgm616/events{/privacy}", "received_events_url": "https://api.github.com/users/cgm616/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cgm616", "id": 2502394, "node_id": "MDQ6VXNlcjI1MDIzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2502394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgm616", "html_url": "https://github.com/cgm616", "followers_url": "https://api.github.com/users/cgm616/followers", "following_url": "https://api.github.com/users/cgm616/following{/other_user}", "gists_url": "https://api.github.com/users/cgm616/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgm616/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgm616/subscriptions", "organizations_url": "https://api.github.com/users/cgm616/orgs", "repos_url": "https://api.github.com/users/cgm616/repos", "events_url": "https://api.github.com/users/cgm616/events{/privacy}", "received_events_url": "https://api.github.com/users/cgm616/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c0f8db347e406682875fcd08d2bc483e93f710f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c0f8db347e406682875fcd08d2bc483e93f710f", "html_url": "https://github.com/rust-lang/rust/commit/0c0f8db347e406682875fcd08d2bc483e93f710f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f51a0edc9c5c1cc3d66f3474225781961f8a9b45", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7e4b35bdf695c4db5a1f34319d01b12a9d54b34/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7e4b35bdf695c4db5a1f34319d01b12a9d54b34/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=e7e4b35bdf695c4db5a1f34319d01b12a9d54b34", "patch": "@@ -368,7 +368,7 @@ impl LiteralDigitGrouping {\n \n         let first = groups.next().expect(\"At least one group\");\n \n-        if (radix == Radix::Binary || radix == Radix::Hexadecimal) && groups.any(|i| i != 4 || i != 2) {\n+        if (radix == Radix::Binary || radix == Radix::Hexadecimal) && groups.any(|i| i != 4 && i != 2) {\n             return Err(WarningType::UnusualByteGrouping);\n         }\n "}]}