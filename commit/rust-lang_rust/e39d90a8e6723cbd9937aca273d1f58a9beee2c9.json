{"sha": "e39d90a8e6723cbd9937aca273d1f58a9beee2c9", "node_id": "C_kwDOAAsO6NoAKGUzOWQ5MGE4ZTY3MjNjYmQ5OTM3YWNhMjczZDFmNThhOWJlZWUyYzk", "commit": {"author": {"name": "ZZzzaaKK", "email": "66885975+ZZzzaaKK@users.noreply.github.com", "date": "2022-11-20T00:58:16Z"}, "committer": {"name": "ZZzzaaKK", "email": "66885975+ZZzzaaKK@users.noreply.github.com", "date": "2022-11-20T00:58:16Z"}, "message": "Improve grammar of architecture.md", "tree": {"sha": "bc5c3ca80c7d4e71d27f199ce59af534e565cfc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc5c3ca80c7d4e71d27f199ce59af534e565cfc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e39d90a8e6723cbd9937aca273d1f58a9beee2c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e39d90a8e6723cbd9937aca273d1f58a9beee2c9", "html_url": "https://github.com/rust-lang/rust/commit/e39d90a8e6723cbd9937aca273d1f58a9beee2c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e39d90a8e6723cbd9937aca273d1f58a9beee2c9/comments", "author": {"login": "ZZzzaaKK", "id": 66885975, "node_id": "MDQ6VXNlcjY2ODg1OTc1", "avatar_url": "https://avatars.githubusercontent.com/u/66885975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZZzzaaKK", "html_url": "https://github.com/ZZzzaaKK", "followers_url": "https://api.github.com/users/ZZzzaaKK/followers", "following_url": "https://api.github.com/users/ZZzzaaKK/following{/other_user}", "gists_url": "https://api.github.com/users/ZZzzaaKK/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZZzzaaKK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZZzzaaKK/subscriptions", "organizations_url": "https://api.github.com/users/ZZzzaaKK/orgs", "repos_url": "https://api.github.com/users/ZZzzaaKK/repos", "events_url": "https://api.github.com/users/ZZzzaaKK/events{/privacy}", "received_events_url": "https://api.github.com/users/ZZzzaaKK/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ZZzzaaKK", "id": 66885975, "node_id": "MDQ6VXNlcjY2ODg1OTc1", "avatar_url": "https://avatars.githubusercontent.com/u/66885975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZZzzaaKK", "html_url": "https://github.com/ZZzzaaKK", "followers_url": "https://api.github.com/users/ZZzzaaKK/followers", "following_url": "https://api.github.com/users/ZZzzaaKK/following{/other_user}", "gists_url": "https://api.github.com/users/ZZzzaaKK/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZZzzaaKK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZZzzaaKK/subscriptions", "organizations_url": "https://api.github.com/users/ZZzzaaKK/orgs", "repos_url": "https://api.github.com/users/ZZzzaaKK/repos", "events_url": "https://api.github.com/users/ZZzzaaKK/events{/privacy}", "received_events_url": "https://api.github.com/users/ZZzzaaKK/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38fa47fd79b38d3ca7665943a93c577d3a9166a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/38fa47fd79b38d3ca7665943a93c577d3a9166a8", "html_url": "https://github.com/rust-lang/rust/commit/38fa47fd79b38d3ca7665943a93c577d3a9166a8"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a07cf036e0604de89140018332f6deb362cc3035", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e39d90a8e6723cbd9937aca273d1f58a9beee2c9/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/e39d90a8e6723cbd9937aca273d1f58a9beee2c9/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=e39d90a8e6723cbd9937aca273d1f58a9beee2c9", "patch": "@@ -481,7 +481,7 @@ It is not cheap enough to enable in prod, and this is a bug which should be fixe\n rust-analyzer strives to be as configurable as possible while offering reasonable defaults where no configuration exists yet.\n The rule of thumb is to enable most features by default unless they are buggy or degrade performance too much.\n There will always be features that some people find more annoying than helpful, so giving the users the ability to tweak or disable these is a big part of offering a good user experience.\n-Enabling them by default is a matter of discoverability, as many users end up don't know about some features even though they are presented in the manual.\n+Enabling them by default is a matter of discoverability, as many users don't know about some features even though they are presented in the manual.\n Mind the code--architecture gap: at the moment, we are using fewer feature flags than we really should.\n \n ### Serialization\n@@ -492,8 +492,8 @@ If a type is serializable, then it is a part of some IPC boundary.\n You often don't control the other side of this boundary, so changing serializable types is hard.\n \n For this reason, the types in `ide`, `base_db` and below are not serializable by design.\n-If such types need to cross an IPC boundary, then the client of rust-analyzer needs to provide custom, client-specific serialization format.\n+If such types need to cross an IPC boundary, then the client of rust-analyzer needs to provide a custom, client-specific serialization format.\n This isolates backwards compatibility and migration concerns to a specific client.\n \n-For example, `rust-project.json` is it's own format -- it doesn't include `CrateGraph` as is.\n+For example, `rust-project.json` is its own format -- it doesn't include `CrateGraph` as is.\n Instead, it creates a `CrateGraph` by calling appropriate constructing functions."}]}