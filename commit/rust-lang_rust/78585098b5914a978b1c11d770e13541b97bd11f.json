{"sha": "78585098b5914a978b1c11d770e13541b97bd11f", "node_id": "C_kwDOAAsO6NoAKDc4NTg1MDk4YjU5MTRhOTc4YjFjMTFkNzcwZTEzNTQxYjk3YmQxMWY", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-03T20:06:30Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-04T14:26:58Z"}, "message": "Add comments about lifetime collect and create lifetime defs for RPITs", "tree": {"sha": "a18b5abe3ad32050c5210861a1c844dfd659ecc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a18b5abe3ad32050c5210861a1c844dfd659ecc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78585098b5914a978b1c11d770e13541b97bd11f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmLr1zIACgkQgTGiTgx5\n769dTA//UeOYzcHvHa5+sYa3LkL44fUazQPwDmuGC1tYO3ZCpV6T1OWDvZj5OBb9\na80LUDorfycvm24xgX2xFcbjVghJI4nZSK+FdDt6knw6eiSqiQXyEZSJlWcAcngV\nrRff6MEoFrtxcvGhR5Y4tRbx9l5XbPqXnpMzmNcG/rDZfp7/6SKDtXnNMOtFjdUS\nH5FQuL3DiDKEN4WMmVQd+jf2gG4vzbOSe80/uL170r/qSflk8jAdCs4lD6YrlNoJ\nX/RXAPhRTW6BzSJ+Ai/lFXFtvYUKvpOS/rxpVUqJRNCxjIcqHwUgQ3NBIDcol9AF\naKn5h+KJh0/70PKJ7HRksx2fEgQGka0XMtzZ8k2xoJ5JpESkenn1AVNiqQlaOBiz\n120JWBe0hSqjtFHrxFEWZxZgoYKFmmvbkeT7VZ8cFQT/4xUbVBFgaOg65R+lf78Y\nfiR67E+QyUrDK+pmYadSQltuhK84tEWOEjc+jqO7BfiWgoMTegZRFJplLmosT7DG\nMVEJsFV/GGFAjN6WeSL982cM2Z0Q05IdzZZsDS4a5DoFJU8WuCAQssHmbiSxeMr+\naiKQDbx12pzVspzDHHvWwaZQ9yaQfl932qYlJg37GAwz+ULTi2aYkshN9gT9myqi\n4b3s2s4/EpLY91It1xV5LaJHAAtICAglKUpCEZN+hoXJEBMUEmc=\n=rXHr\n-----END PGP SIGNATURE-----", "payload": "tree a18b5abe3ad32050c5210861a1c844dfd659ecc2\nparent 40bcbed3c7809fe779734d6a5c93e4b5e5d4b420\nauthor Santiago Pastorino <spastorino@gmail.com> 1659557190 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1659623218 -0300\n\nAdd comments about lifetime collect and create lifetime defs for RPITs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78585098b5914a978b1c11d770e13541b97bd11f", "html_url": "https://github.com/rust-lang/rust/commit/78585098b5914a978b1c11d770e13541b97bd11f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78585098b5914a978b1c11d770e13541b97bd11f/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40bcbed3c7809fe779734d6a5c93e4b5e5d4b420", "url": "https://api.github.com/repos/rust-lang/rust/commits/40bcbed3c7809fe779734d6a5c93e4b5e5d4b420", "html_url": "https://github.com/rust-lang/rust/commit/40bcbed3c7809fe779734d6a5c93e4b5e5d4b420"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "e7a2065110790b7078a7055c8af7e668f2fbfff6", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/78585098b5914a978b1c11d770e13541b97bd11f/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78585098b5914a978b1c11d770e13541b97bd11f/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=78585098b5914a978b1c11d770e13541b97bd11f", "patch": "@@ -1345,10 +1345,16 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n \n         self.with_hir_id_owner(opaque_ty_node_id, |lctx| {\n             if origin != hir::OpaqueTyOrigin::TyAlias {\n+                // When lowering `fn foo<'a>() -> impl Debug + 'a`, the `lifetime_collector` finds\n+                // the set of lifetimes that appear in the bounds (in this case, 'a) and returns\n+                // that set in the variable lifetimes_in_bounds.\n                 let lifetimes_in_bounds =\n                     lifetime_collector::lifetimes_in_bounds(&lctx.resolver, bounds);\n                 debug!(?lifetimes_in_bounds);\n \n+                // For each captured lifetime (e.g., 'a), we create a new lifetime parameter that\n+                // is a generic defined on the TAIT, so we have type Foo<'a1> = ... and we\n+                // establish a mapping from the original parameter 'a to the new parameter 'a1.\n                 collected_lifetimes = lctx.create_lifetime_defs(\n                     opaque_ty_def_id,\n                     &lifetimes_in_bounds,\n@@ -1359,6 +1365,8 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n             debug!(?collected_lifetimes);\n \n             lctx.with_remapping(new_remapping, |lctx| {\n+                // Then when we lower the param bounds, references to 'a are remapped to 'a1, so we\n+                // get back Debug + 'a1, which is suitable for use on the TAIT.\n                 let hir_bounds = lctx.lower_param_bounds(bounds, itctx);\n \n                 let lifetime_defs = lctx.arena.alloc_from_iter(collected_lifetimes.iter().map("}]}