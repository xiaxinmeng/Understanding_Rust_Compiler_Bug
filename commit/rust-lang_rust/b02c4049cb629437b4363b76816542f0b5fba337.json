{"sha": "b02c4049cb629437b4363b76816542f0b5fba337", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMmM0MDQ5Y2I2Mjk0MzdiNDM2M2I3NjgxNjU0MmYwYjVmYmEzMzc=", "commit": {"author": {"name": "Camelid", "email": "37223377+camelid@users.noreply.github.com", "date": "2020-08-15T16:31:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-15T16:31:14Z"}, "message": "Fix link\n\nIntra-doc links don't work yet in this case: #74489", "tree": {"sha": "ed6555aa988b0e911ac115e9f4b549346374aff9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed6555aa988b0e911ac115e9f4b549346374aff9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b02c4049cb629437b4363b76816542f0b5fba337", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfOA3SCRBK7hj4Ov3rIwAAdHIIAEb9sHz5aySEy7xRpsXx4ZiP\nXST/I2qUgOD0GBSXuhCi2iELbPyuEt8XEIwg4U2RWz1+Ge+xkHfGfDK3RHLwTRjI\nqgIDTQHfFX8LpYVaOVtJyb90FEFLvLQ/bSbkR1/05zAsY2yl1+X14KngEQh4p4hh\nb8SNx3VCOGF4FiUIiOCRlEYCROlpWBvMNlyI3q0vuh6r4H4Ka/CzCHvwObxqmslu\n2Uc7Pgc/IAqXEs4CG2JrwuMwq5dOw3QTBgsNKjp3WW+wBrrLDFkjHgqWulqgbTnX\ndbPpdKSgBfXpTpKwVkvcgNJo1x2wEY8RESk4LMt9XvGbKhIY1AyXzFYcndzbe/4=\n=IxMm\n-----END PGP SIGNATURE-----\n", "payload": "tree ed6555aa988b0e911ac115e9f4b549346374aff9\nparent b1c05c5c2bded24b6945a35b9321400996b6d891\nauthor Camelid <37223377+camelid@users.noreply.github.com> 1597509074 -0700\ncommitter GitHub <noreply@github.com> 1597509074 -0700\n\nFix link\n\nIntra-doc links don't work yet in this case: #74489"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b02c4049cb629437b4363b76816542f0b5fba337", "html_url": "https://github.com/rust-lang/rust/commit/b02c4049cb629437b4363b76816542f0b5fba337", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b02c4049cb629437b4363b76816542f0b5fba337/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1c05c5c2bded24b6945a35b9321400996b6d891", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1c05c5c2bded24b6945a35b9321400996b6d891", "html_url": "https://github.com/rust-lang/rust/commit/b1c05c5c2bded24b6945a35b9321400996b6d891"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "a8a88df1320db18637ebf248800e3568676f1b71", "filename": "library/core/src/option.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b02c4049cb629437b4363b76816542f0b5fba337/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b02c4049cb629437b4363b76816542f0b5fba337/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=b02c4049cb629437b4363b76816542f0b5fba337", "patch": "@@ -1501,6 +1501,8 @@ unsafe impl<A> TrustedLen for IterMut<'_, A> {}\n /// The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.\n ///\n /// This `struct` is created by the [`Option::into_iter`] function.\n+///\n+/// [`Option::into_iter`]: enum.Option.html#method.into_iter\n #[derive(Clone, Debug)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct IntoIter<A> {"}]}