{"sha": "154a3fdf4427ad3de7dc7a5a1a1fe7ee737dc99c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1NGEzZmRmNDQyN2FkM2RlN2RjN2E1YTFhMWZlN2VlNzM3ZGM5OWM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-16T23:49:11Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-17T00:06:15Z"}, "message": "rustc: Unify impl self types in the opposite order so variance is correct", "tree": {"sha": "53c0d1ef30a3cf754bd8662816b777becce28458", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53c0d1ef30a3cf754bd8662816b777becce28458"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/154a3fdf4427ad3de7dc7a5a1a1fe7ee737dc99c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/154a3fdf4427ad3de7dc7a5a1a1fe7ee737dc99c", "html_url": "https://github.com/rust-lang/rust/commit/154a3fdf4427ad3de7dc7a5a1a1fe7ee737dc99c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/154a3fdf4427ad3de7dc7a5a1a1fe7ee737dc99c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3445454e792bc4b770a99e227fc18b5c90f8ed8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3445454e792bc4b770a99e227fc18b5c90f8ed8a", "html_url": "https://github.com/rust-lang/rust/commit/3445454e792bc4b770a99e227fc18b5c90f8ed8a"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "4b656bb5725a939d7a10b2c50951d939e2c5dbfa", "filename": "src/libcore/str.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/154a3fdf4427ad3de7dc7a5a1a1fe7ee737dc99c/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/154a3fdf4427ad3de7dc7a5a1a1fe7ee737dc99c/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=154a3fdf4427ad3de7dc7a5a1a1fe7ee737dc99c", "patch": "@@ -1162,7 +1162,7 @@ fn is_utf8(v: [const u8]) -> bool {\n \n #[doc = \"Determines if a vector of `u16` contains valid UTF-16\"]\n fn is_utf16(v: [const u16]) -> bool {\n-    let len = v.len();\n+    let len = vec::len(v);\n     let mut i = 0u;\n     while (i < len) {\n         let u = v[i];\n@@ -1205,7 +1205,7 @@ fn to_utf16(s: str) -> [u16] {\n }\n \n fn utf16_chars(v: [const u16], f: fn(char)) {\n-    let len = v.len();\n+    let len = vec::len(v);\n     let mut i = 0u;\n     while (i < len && v[i] != 0u16) {\n         let mut u = v[i];\n@@ -1231,7 +1231,7 @@ fn utf16_chars(v: [const u16], f: fn(char)) {\n \n fn from_utf16(v: [const u16]) -> str {\n     let mut buf = \"\";\n-    reserve(buf, v.len());\n+    reserve(buf, vec::len(v));\n     utf16_chars(v) {|ch| push_char(buf, ch); }\n     ret buf;\n }"}, {"sha": "cc52283dc073b287e54644550512f41d13b93d5a", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/154a3fdf4427ad3de7dc7a5a1a1fe7ee737dc99c/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/154a3fdf4427ad3de7dc7a5a1a1fe7ee737dc99c/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=154a3fdf4427ad3de7dc7a5a1a1fe7ee737dc99c", "patch": "@@ -1909,7 +1909,7 @@ fn lookup_method_inner(fcx: @fn_ctxt, expr: @ast::expr,\n \n                 let ty = universally_quantify_regions(tcx, ty);\n \n-                alt unify::unify(fcx, ty, self_ty) {\n+                alt unify::unify(fcx, self_ty, ty) {\n                   result::ok(_) {\n                     if option::is_some(result) {\n                         // FIXME[impl] score specificity to resolve ambiguity?"}, {"sha": "5e0b7b262683d21cbb4fbf79c581896431b0e10a", "filename": "src/test/run-pass/impl-variance.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/154a3fdf4427ad3de7dc7a5a1a1fe7ee737dc99c/src%2Ftest%2Frun-pass%2Fimpl-variance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/154a3fdf4427ad3de7dc7a5a1a1fe7ee737dc99c/src%2Ftest%2Frun-pass%2Fimpl-variance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-variance.rs?ref=154a3fdf4427ad3de7dc7a5a1a1fe7ee737dc99c", "patch": "@@ -0,0 +1,12 @@\n+impl extensions<T> for [const T] {\n+    fn foo() -> uint { vec::len(self) }\n+}\n+\n+fn main() {\n+    let v = [const 0];\n+    assert v.foo() == 1u;\n+    let v = [0];\n+    assert v.foo() == 1u;\n+    let v = [mut 0];\n+    assert v.foo() == 1u;\n+}\n\\ No newline at end of file"}]}