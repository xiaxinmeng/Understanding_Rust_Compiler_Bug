{"sha": "2c1ca98abaf6756d3246841cc3cf4ca3f617efca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMWNhOThhYmFmNjc1NmQzMjQ2ODQxY2MzY2Y0Y2EzZjYxN2VmY2E=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-06-09T20:55:50Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-06-10T12:06:35Z"}, "message": "Make `MemoryUsage` work on Windows", "tree": {"sha": "c95c2fda453144a93f77f04cce316fb52f611d73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c95c2fda453144a93f77f04cce316fb52f611d73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c1ca98abaf6756d3246841cc3cf4ca3f617efca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c1ca98abaf6756d3246841cc3cf4ca3f617efca", "html_url": "https://github.com/rust-lang/rust/commit/2c1ca98abaf6756d3246841cc3cf4ca3f617efca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c1ca98abaf6756d3246841cc3cf4ca3f617efca/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85056423e3d14fc59bca06d3b2e0c44041653945", "url": "https://api.github.com/repos/rust-lang/rust/commits/85056423e3d14fc59bca06d3b2e0c44041653945", "html_url": "https://github.com/rust-lang/rust/commit/85056423e3d14fc59bca06d3b2e0c44041653945"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "2bd8897f05cc538b7d608a825c66a5c7c2ce00c4", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c1ca98abaf6756d3246841cc3cf4ca3f617efca/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/2c1ca98abaf6756d3246841cc3cf4ca3f617efca/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=2c1ca98abaf6756d3246841cc3cf4ca3f617efca", "patch": "@@ -1170,6 +1170,7 @@ dependencies = [\n  \"once_cell\",\n  \"perf-event\",\n  \"tikv-jemalloc-ctl\",\n+ \"winapi\",\n ]\n \n [[package]]"}, {"sha": "653d3d98399e3b10654d5cd7679c11ec2f53082b", "filename": "crates/profile/Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2c1ca98abaf6756d3246841cc3cf4ca3f617efca/crates%2Fprofile%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/2c1ca98abaf6756d3246841cc3cf4ca3f617efca/crates%2Fprofile%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fprofile%2FCargo.toml?ref=2c1ca98abaf6756d3246841cc3cf4ca3f617efca", "patch": "@@ -20,6 +20,9 @@ jemalloc-ctl = { version = \"0.4.1\", package = \"tikv-jemalloc-ctl\", optional = tr\n [target.'cfg(target_os = \"linux\")'.dependencies]\n perf-event = \"0.4\"\n \n+[target.'cfg(windows)'.dependencies]\n+winapi = { version = \"0.3.8\", features = [\"psapi\"] }\n+\n [features]\n cpu_profiler = []\n jemalloc = [\"jemalloc-ctl\"]"}, {"sha": "6ef58c9c14e9b05096980a165b35c13664961e52", "filename": "crates/profile/src/memory_usage.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2c1ca98abaf6756d3246841cc3cf4ca3f617efca/crates%2Fprofile%2Fsrc%2Fmemory_usage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c1ca98abaf6756d3246841cc3cf4ca3f617efca/crates%2Fprofile%2Fsrc%2Fmemory_usage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fprofile%2Fsrc%2Fmemory_usage.rs?ref=2c1ca98abaf6756d3246841cc3cf4ca3f617efca", "patch": "@@ -35,6 +35,22 @@ impl MemoryUsage {\n                 // Note: This is incredibly slow.\n                 let alloc = unsafe { libc::mallinfo() }.uordblks as isize;\n                 MemoryUsage { allocated: Bytes(alloc) }\n+            } else if #[cfg(windows)] {\n+                // There doesn't seem to be an API for determining heap usage, so we try to\n+                // approximate that by using the Commit Charge value.\n+\n+                use winapi::um::processthreadsapi::*;\n+                use winapi::um::psapi::*;\n+                use std::mem::{MaybeUninit, size_of};\n+\n+                let proc = unsafe { GetCurrentProcess() };\n+                let mut mem_counters = MaybeUninit::uninit();\n+                let cb = size_of::<PROCESS_MEMORY_COUNTERS>();\n+                let ret = unsafe { GetProcessMemoryInfo(proc, mem_counters.as_mut_ptr(), cb as u32) };\n+                assert!(ret != 0);\n+\n+                let usage = unsafe { mem_counters.assume_init().PagefileUsage };\n+                MemoryUsage { allocated: Bytes(usage as isize) }\n             } else {\n                 MemoryUsage { allocated: Bytes(0) }\n             }"}]}