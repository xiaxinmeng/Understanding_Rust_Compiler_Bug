{"sha": "412dcc70a2fa8edc042b83af762c3741b54c61a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMmRjYzcwYTJmYThlZGMwNDJiODNhZjc2MmMzNzQxYjU0YzYxYTA=", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2019-02-13T23:11:25Z"}, "committer": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2019-02-13T23:11:25Z"}, "message": "point unstable options to tracking issues", "tree": {"sha": "5b1bfb3f391e658507d63995a14a80ca6f3dae0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b1bfb3f391e658507d63995a14a80ca6f3dae0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/412dcc70a2fa8edc042b83af762c3741b54c61a0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEipi5pnt+pUplKNfibVYg2QghATMFAlxkpB0ACgkQbVYg2Qgh\nATOEGwf/UkozGfJpJNalBlyjCmldYvt8FuB6k6HQVtoYSw925P3tJDCaleHyV83z\ngTM6Ro3zcdUgGZXbkJbq0DRQyXN56/qD/MAlEOSifj2vXblGVa8sYXlpexqmIM6S\nI82O2usOS3GZ0VhWBp/HLnSfZGSkkYZD0j1rZxxDqiz0Ivgd2hMueenolOt3WdIi\n20+S3zEyN3Gox0zuNxnooAiuSG+L/WCZrrTIzUr6aMn0RfUq0w/98K4D2738Talh\nwD9Nci4KOFA/wkHyZ95HwxramTLvy9oUp6os3RmHYZ1FNu1QT4gBqYBClFTcz3dx\nCkThLrvNimjng+dNm8uAU0W8ck017w==\n=k4Qh\n-----END PGP SIGNATURE-----", "payload": "tree 5b1bfb3f391e658507d63995a14a80ca6f3dae0c\nparent 6108cb6b03195c16c72a9cffe15f920f29081928\nauthor St\u00e9phane Campinas <stephane.campinas@gmail.com> 1550099485 +0100\ncommitter St\u00e9phane Campinas <stephane.campinas@gmail.com> 1550099485 +0100\n\npoint unstable options to tracking issues\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/412dcc70a2fa8edc042b83af762c3741b54c61a0", "html_url": "https://github.com/rust-lang/rust/commit/412dcc70a2fa8edc042b83af762c3741b54c61a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/412dcc70a2fa8edc042b83af762c3741b54c61a0/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6108cb6b03195c16c72a9cffe15f920f29081928", "url": "https://api.github.com/repos/rust-lang/rust/commits/6108cb6b03195c16c72a9cffe15f920f29081928", "html_url": "https://github.com/rust-lang/rust/commit/6108cb6b03195c16c72a9cffe15f920f29081928"}], "stats": {"total": 104, "additions": 52, "deletions": 52}, "files": [{"sha": "a07ec11d8edd559303b6db13598a5ad9f2ad92cd", "filename": "Configurations.md", "status": "modified", "additions": 52, "deletions": 52, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/412dcc70a2fa8edc042b83af762c3741b54c61a0/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/412dcc70a2fa8edc042b83af762c3741b54c61a0/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=412dcc70a2fa8edc042b83af762c3741b54c61a0", "patch": "@@ -18,7 +18,7 @@ To enable unstable options, set `unstable_features = true` in `rustfmt.toml` or\n Below you find a detailed visual guide on all the supported configuration options of rustfmt:\n \n \n-## `indent_style`\n+## `indent_style` (tracking issue #3346)\n \n Indent on expressions or items.\n \n@@ -355,7 +355,7 @@ fn main() {\n }\n ```\n \n-## `binop_separator`\n+## `binop_separator` (tracking issue #3368)\n \n Where to put a binary operator when a binary expression goes multiline.\n \n@@ -395,7 +395,7 @@ fn main() {\n }\n ```\n \n-## `combine_control_expr`\n+## `combine_control_expr` (tracking issue #3369)\n \n Combine control expressions with function calls.\n \n@@ -503,7 +503,7 @@ fn example() {\n }\n ```\n \n-## `comment_width`\n+## `comment_width` (tracking issue #3349)\n \n Maximum length of comments. No effect unless`wrap_comments = true`.\n \n@@ -526,7 +526,7 @@ Maximum length of comments. No effect unless`wrap_comments = true`.\n \n See also [`wrap_comments`](#wrap_comments).\n \n-## `condense_wildcard_suffixes`\n+## `condense_wildcard_suffixes` (tracking issue #3384)\n \n Replace strings of _ wildcards by a single .. in tuple patterns\n \n@@ -551,7 +551,7 @@ fn main() {\n }\n ```\n \n-## `control_brace_style`\n+## `control_brace_style` (tracking issue #3377)\n \n Brace style for control flow constructs\n \n@@ -599,15 +599,15 @@ fn main() {\n }\n ```\n \n-## `disable_all_formatting`\n+## `disable_all_formatting` (tracking issue #3388)\n \n Don't reformat anything\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n - **Stable**: No\n \n-## `error_on_line_overflow`\n+## `error_on_line_overflow` (tracking issue #3391)\n \n Error if Rustfmt is unable to get all lines within `max_width`, except for comments and string\n literals. If this happens, then it is a bug in Rustfmt. You might be able to work around the bug by\n@@ -620,7 +620,7 @@ using a shorter name.\n \n See also [`max_width`](#max_width).\n \n-## `error_on_unformatted`\n+## `error_on_unformatted` (tracking issue #3392)\n \n Error if unable to get comments or string literals within `max_width`, or they are left with\n trailing whitespaces.\n@@ -629,7 +629,7 @@ trailing whitespaces.\n - **Possible values**: `true`, `false`\n - **Stable**: No\n \n-## `fn_args_density`\n+## `fn_args_density` (tracking issue #3375)\n \n Argument density in functions\n \n@@ -740,7 +740,7 @@ trait Lorem {\n ```\n \n \n-## `brace_style`\n+## `brace_style` (tracking issue #3376)\n \n Brace style for items\n \n@@ -856,7 +856,7 @@ where\n ```\n \n \n-## `empty_item_single_line`\n+## `empty_item_single_line` (tracking issue #3356)\n \n Put empty-body functions and impls on a single line\n \n@@ -885,7 +885,7 @@ impl Lorem {\n See also [`brace_style`](#brace_style), [`control_brace_style`](#control_brace_style).\n \n \n-## `enum_discrim_align_threshold`\n+## `enum_discrim_align_threshold` (tracking issue #3372)\n \n The maximum length of enum variant having discriminant, that gets vertically aligned with others.\n Variants without discriminants would be ignored for the purpose of alignment.\n@@ -932,7 +932,7 @@ enum Bar {\n ```\n \n \n-## `fn_single_line`\n+## `fn_single_line` (tracking issue #3358)\n \n Put single-expression functions on a single line\n \n@@ -967,7 +967,7 @@ fn lorem() -> usize {\n See also [`control_brace_style`](#control_brace_style).\n \n \n-## `where_single_line`\n+## `where_single_line` (tracking issue #3359)\n \n Forces the `where` clause to be laid out on a single line.\n \n@@ -1025,7 +1025,7 @@ extern {\n }\n ```\n \n-## `format_strings`\n+## `format_strings` (tracking issue #3353)\n \n Format string literals where necessary\n \n@@ -1052,7 +1052,7 @@ fn main() {\n \n See also [`max_width`](#max_width).\n \n-## `format_macro_matchers`\n+## `format_macro_matchers` (tracking issue #3354)\n \n Format the metavariable matching patterns in macros.\n \n@@ -1089,7 +1089,7 @@ macro_rules! foo {\n See also [`format_macro_bodies`](#format_macro_bodies).\n \n \n-## `format_macro_bodies`\n+## `format_macro_bodies` (tracking issue #3355)\n \n Format the bodies of macros.\n \n@@ -1149,7 +1149,7 @@ fn lorem() -> usize {\n See also: [`tab_spaces`](#tab_spaces).\n \n \n-## `imports_indent`\n+## `imports_indent` (tracking issue #3360)\n \n Indent style of imports\n \n@@ -1175,7 +1175,7 @@ use foo::{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n \n See also: [`imports_layout`](#imports_layout).\n \n-## `imports_layout`\n+## `imports_layout` (tracking issue #3361)\n \n Item layout inside a imports block\n \n@@ -1238,7 +1238,7 @@ use foo::{\n };\n ```\n \n-## `merge_imports`\n+## `merge_imports` (tracking issue #3362)\n \n Merge multiple imports into a single nested import.\n \n@@ -1261,7 +1261,7 @@ use foo::{a, b, c, d, e, f, g};\n ```\n \n \n-## `match_block_trailing_comma`\n+## `match_block_trailing_comma` (tracking issue #3380)\n \n Put a trailing comma after a block based match arm (non-block arms are not affected)\n \n@@ -1331,7 +1331,7 @@ pub enum Foo {}\n pub enum Foo {}\n ```\n \n-## `force_multiline_blocks`\n+## `force_multiline_blocks` (tracking issue #3374)\n \n Force multiline closure and match arm bodies to be wrapped in a block\n \n@@ -1407,7 +1407,7 @@ Line endings will be converted to `\\n`.\n \n Line endings will be converted to `\\r\\n`.\n \n-## `normalize_comments`\n+## `normalize_comments` (tracking issue #3350)\n \n Convert /* */ comments to // comments where possible\n \n@@ -1522,7 +1522,7 @@ mod sit;\n **Note** `mod` with `#[macro_export]` will not be reordered since that could change the semantics\n of the original source code.\n \n-## `reorder_impl_items`\n+## `reorder_impl_items` (tracking issue #3363)\n \n Reorder impl items. `type` and `const` are put first, then macros and methods.\n \n@@ -1558,7 +1558,7 @@ impl Iterator for Dummy {\n }\n ```\n \n-## `report_todo`\n+## `report_todo` (tracking issue #3393)\n \n Report `TODO` items in comments.\n \n@@ -1572,7 +1572,7 @@ it contains a `#X` (with `X` being a number) in parentheses following the\n \n See also [`report_fixme`](#report_fixme).\n \n-## `report_fixme`\n+## `report_fixme` (tracking issue #3394)\n \n Report `FIXME` items in comments.\n \n@@ -1587,15 +1587,15 @@ it contains a `#X` (with `X` being a number) in parentheses following the\n See also [`report_todo`](#report_todo).\n \n \n-## `skip_children`\n+## `skip_children` (tracking issue #3389)\n \n Don't reformat out of line modules\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n - **Stable**: No\n \n-## `space_after_colon`\n+## `space_after_colon` (tracking issue #3366)\n \n Leave a space after the colon.\n \n@@ -1627,7 +1627,7 @@ fn lorem<T:Eq>(t:T) {\n \n See also: [`space_before_colon`](#space_before_colon).\n \n-## `space_before_colon`\n+## `space_before_colon` (tracking issue #3365)\n \n Leave a space before the colon.\n \n@@ -1659,7 +1659,7 @@ fn lorem<T : Eq>(t : T) {\n \n See also: [`space_after_colon`](#space_after_colon).\n \n-## `struct_field_align_threshold`\n+## `struct_field_align_threshold` (tracking issue #3371)\n \n The maximum diff of width between struct fields to be aligned with each other.\n \n@@ -1687,7 +1687,7 @@ struct Foo {\n }\n ```\n \n-## `spaces_around_ranges`\n+## `spaces_around_ranges` (tracking issue #3367)\n \n Put spaces around the .., ..=, and ... range operators\n \n@@ -1743,7 +1743,7 @@ fn main() {\n }\n ```\n \n-## `struct_lit_single_line`\n+## `struct_lit_single_line` (tracking issue #3357)\n \n Put small struct literals on a single line\n \n@@ -1808,7 +1808,7 @@ fn lorem() {\n See also: [`hard_tabs`](#hard_tabs).\n \n \n-## `trailing_comma`\n+## `trailing_comma` (tracking issue #3379)\n \n How to handle trailing commas for lists\n \n@@ -1866,7 +1866,7 @@ fn main() {\n \n See also: [`match_block_trailing_comma`](#match_block_trailing_comma).\n \n-## `trailing_semicolon`\n+## `trailing_semicolon` (tracking issue #3378)\n \n Add trailing semicolon after break, continue and return\n \n@@ -1888,7 +1888,7 @@ fn foo() -> usize {\n }\n ```\n \n-## `type_punctuation_density`\n+## `type_punctuation_density` (tracking issue #3364)\n \n Determines if `+` or `=` are wrapped in spaces in the punctuation of types\n \n@@ -1978,7 +1978,7 @@ fn main() {\n }\n ```\n \n-## `format_doc_comments`\n+## `format_doc_comments` (tracking issue #3348)\n \n Format doc comments.\n \n@@ -2029,7 +2029,7 @@ fn add_one(x: i32) -> i32 {\n }\n ```\n \n-## `wrap_comments`\n+## `wrap_comments` (tracking issue #3347)\n \n Break comments to fit on the line\n \n@@ -2053,7 +2053,7 @@ Break comments to fit on the line\n // commodo consequat.\n ```\n \n-## `match_arm_blocks`\n+## `match_arm_blocks`` (tracking issue #3373)\n \n Wrap the body of arms in blocks when it does not fit on the same line with the pattern of arms\n \n@@ -2088,7 +2088,7 @@ fn main() {\n \n See also: [`match_block_trailing_comma`](#match_block_trailing_comma).\n \n-## `overflow_delimited_expr`\n+## `overflow_delimited_expr` (tracking issue #3370)\n \n When structs, slices, arrays, and block/array-like macros are used as the last\n argument in an expression list, allow them to overflow (like blocks/closures)\n@@ -2171,7 +2171,7 @@ fn example() {\n }\n ```\n \n-## `blank_lines_upper_bound`\n+## `blank_lines_upper_bound` (tracking issue #3381)\n \n Maximum number of blank lines which can be put between items. If more than this number of consecutive empty\n lines are found, they are trimmed down to match this integer.\n@@ -2230,7 +2230,7 @@ fn bar() {\n \n See also: [`blank_lines_lower_bound`](#blank_lines_lower_bound)\n \n-## `blank_lines_lower_bound`\n+## `blank_lines_lower_bound` (tracking issue #3382)\n \n Minimum number of blank lines which must be put between items. If two items have fewer blank lines between\n them, additional blank lines are inserted.\n@@ -2270,7 +2270,7 @@ fn bar() {\n ```\n \n \n-## `required_version`\n+## `required_version` (tracking issue #3386)\n \n Require a specific version of rustfmt. If you want to make sure that the\n specific version of rustfmt is used in your CI, use this option.\n@@ -2279,31 +2279,31 @@ specific version of rustfmt is used in your CI, use this option.\n - **Possible values**: any published version (e.g. `\"0.3.8\"`)\n - **Stable**: No\n \n-## `hide_parse_errors`\n+## `hide_parse_errors` (tracking issue #3390)\n \n Do not show parse errors if the parser failed to parse files.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n - **Stable**: No\n \n-## `color`\n+## `color` (tracking issue #3385)\n \n Whether to use colored output or not.\n \n - **Default value**: `\"Auto\"`\n - **Possible values**: \"Auto\", \"Always\", \"Never\"\n - **Stable**: No\n \n-## `unstable_features`\n+## `unstable_features` (tracking issue #3387)\n \n Enable unstable features on the unstable channel.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n - **Stable**: No\n \n-## `license_template_path`\n+## `license_template_path` (tracking issue #3352)\n \n Check whether beginnings of files match a license template.\n \n@@ -2323,7 +2323,7 @@ Copyright 2018 The Rust Project Developers.`, etc.:\n \n `\\{`, `\\}` and `\\\\` match literal braces / backslashes.\n \n-## `ignore`\n+## `ignore` (tracking issue #3395)\n \n Skip formatting the specified files and directories.\n \n@@ -2366,7 +2366,7 @@ If you want to format code that requires edition 2018, add the following to your\n edition = \"2018\"\n ```\n \n-## `version`\n+## `version` (tracking issue #3383)\n \n Which version of the formatting rules to use. `Version::One` is backwards-compatible\n with Rustfmt 1.0. Other versions are only backwards compatible within a major\n@@ -2382,7 +2382,7 @@ version number.\n version = \"Two\"\n ```\n \n-## `normalize_doc_attributes`\n+## `normalize_doc_attributes` (tracking issue #3351)\n \n Convert `#![doc]` and `#[doc]` attributes to `//!` and `///` doc comments.\n \n@@ -2408,10 +2408,10 @@ pub enum Foo {}\n pub enum Foo {}\n ```\n \n-## `emit_mode`\n+## `emit_mode` (tracking issue #3399)\n \n Internal option\n \n-## `make_backup`\n+## `make_backup` (tracking issue #3400)\n \n Internal option, use `--backup`"}]}