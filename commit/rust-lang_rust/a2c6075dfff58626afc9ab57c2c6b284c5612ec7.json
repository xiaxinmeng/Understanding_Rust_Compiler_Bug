{"sha": "a2c6075dfff58626afc9ab57c2c6b284c5612ec7", "node_id": "C_kwDOAAsO6NoAKGEyYzYwNzVkZmZmNTg2MjZhZmM5YWI1N2MyYzZiMjg0YzU2MTJlYzc", "commit": {"author": {"name": "Jubilee", "email": "46493976+workingjubilee@users.noreply.github.com", "date": "2021-10-04T20:58:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-04T20:58:07Z"}, "message": "Rollup merge of #88451 - theo-lw:issue-87771, r=jackh726\n\nFix an ICE caused by type mismatch errors being ignored\n\nThis PR fixes #87771. It turns out that the check on `compiler/rustc_typeck/src/check/demand.rs:148` leads to the ICE. I removed it because the early return in [`check_expr_assign`](https://github.com/theo-lw/rust/blob/dec7fc3ced5bc3c18d0e5d29921d087f93189cb8/compiler/rustc_typeck/src/check/expr.rs#L928) already prevents unnecessary error messages from the call to `check_expr_coercable_to_type`.", "tree": {"sha": "619e022e6ab1858b2f6b4f3bdb17d7de206ae44f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/619e022e6ab1858b2f6b4f3bdb17d7de206ae44f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2c6075dfff58626afc9ab57c2c6b284c5612ec7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhW2rgCRBK7hj4Ov3rIwAAEkoIABXK15OVEYkOg51LYaF0waFc\nhidUAW9pSjHf7DXStf9h7E5svNUBY0Sx5Qocqz2BNfv5wYyHSzV/ZyCbQW1bUz9p\nxxUH6ly9kzMND+HZ+EGfQuczISUTHAf+oyyKh9LHu0iiU/OAyH0ASB+eYCPyc1nN\nMI8tTxESdPipKtWqpTS3JPPny8s5Qr5MHbk1PLsUECBTOrATXYFjaRZi6cWD/OxU\n4s6sOckUThdFuJosrLd4FjPup1ZorFy8jGDoDbAFup6oVAl4n6f/ZGMEhoih8v4+\n1Xo+uLInffhzwE/l3let9mMXx4ra96RrpdI/NdiZHqhD0Pk+VniHuMvY9Qkh7co=\n=tCfK\n-----END PGP SIGNATURE-----\n", "payload": "tree 619e022e6ab1858b2f6b4f3bdb17d7de206ae44f\nparent ca8a10845f42fcb3e01f21a8f874a507d0512447\nparent 09d55d516bdd3e89bef4cb1cabc598a16d9ad401\nauthor Jubilee <46493976+workingjubilee@users.noreply.github.com> 1633381087 -0700\ncommitter GitHub <noreply@github.com> 1633381087 -0700\n\nRollup merge of #88451 - theo-lw:issue-87771, r=jackh726\n\nFix an ICE caused by type mismatch errors being ignored\n\nThis PR fixes #87771. It turns out that the check on `compiler/rustc_typeck/src/check/demand.rs:148` leads to the ICE. I removed it because the early return in [`check_expr_assign`](https://github.com/theo-lw/rust/blob/dec7fc3ced5bc3c18d0e5d29921d087f93189cb8/compiler/rustc_typeck/src/check/expr.rs#L928) already prevents unnecessary error messages from the call to `check_expr_coercable_to_type`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2c6075dfff58626afc9ab57c2c6b284c5612ec7", "html_url": "https://github.com/rust-lang/rust/commit/a2c6075dfff58626afc9ab57c2c6b284c5612ec7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2c6075dfff58626afc9ab57c2c6b284c5612ec7/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca8a10845f42fcb3e01f21a8f874a507d0512447", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca8a10845f42fcb3e01f21a8f874a507d0512447", "html_url": "https://github.com/rust-lang/rust/commit/ca8a10845f42fcb3e01f21a8f874a507d0512447"}, {"sha": "09d55d516bdd3e89bef4cb1cabc598a16d9ad401", "url": "https://api.github.com/repos/rust-lang/rust/commits/09d55d516bdd3e89bef4cb1cabc598a16d9ad401", "html_url": "https://github.com/rust-lang/rust/commit/09d55d516bdd3e89bef4cb1cabc598a16d9ad401"}], "stats": {"total": 46, "additions": 15, "deletions": 31}, "files": [{"sha": "07e542b70b90c80ed8eb086e4d0f511c594af8b9", "filename": "compiler/rustc_typeck/src/check/coercion.rs", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a2c6075dfff58626afc9ab57c2c6b284c5612ec7/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2c6075dfff58626afc9ab57c2c6b284c5612ec7/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs?ref=a2c6075dfff58626afc9ab57c2c6b284c5612ec7", "patch": "@@ -1484,21 +1484,7 @@ impl<'tcx, 'exprs, E: AsCoercionSite> CoerceMany<'tcx, 'exprs, E> {\n                     fcx.emit_coerce_suggestions(&mut err, expr, found, expected, None);\n                 }\n \n-                // Error possibly reported in `check_assign` so avoid emitting error again.\n-                let assign_to_bool = expression\n-                    // #67273: Use initial expected type as opposed to `expected`.\n-                    // Otherwise we end up using prior coercions in e.g. a `match` expression:\n-                    // ```\n-                    // match i {\n-                    //     0 => true, // Because of this...\n-                    //     1 => i = 1, // ...`expected == bool` now, but not when checking `i = 1`.\n-                    //     _ => (),\n-                    // };\n-                    // ```\n-                    .filter(|e| fcx.is_assign_to_bool(e, self.expected_ty()))\n-                    .is_some();\n-\n-                err.emit_unless(assign_to_bool || unsized_return);\n+                err.emit_unless(unsized_return);\n \n                 self.final_ty = Some(fcx.tcx.ty_error());\n             }"}, {"sha": "1a2931b9377cec421da8686b8396e7f747a71ed4", "filename": "compiler/rustc_typeck/src/check/demand.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a2c6075dfff58626afc9ab57c2c6b284c5612ec7/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2c6075dfff58626afc9ab57c2c6b284c5612ec7/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs?ref=a2c6075dfff58626afc9ab57c2c6b284c5612ec7", "patch": "@@ -145,12 +145,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let expr_ty = self.resolve_vars_with_obligations(checked_ty);\n         let mut err = self.report_mismatched_types(&cause, expected, expr_ty, e);\n \n-        if self.is_assign_to_bool(expr, expected) {\n-            // Error reported in `check_assign` so avoid emitting error again.\n-            err.delay_as_bug();\n-            return (expected, None);\n-        }\n-\n         self.emit_coerce_suggestions(&mut err, expr, expr_ty, expected, expected_ty_expr);\n \n         (expected, Some(err))\n@@ -172,14 +166,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n     }\n \n-    /// Returns whether the expected type is `bool` and the expression is `x = y`.\n-    pub fn is_assign_to_bool(&self, expr: &hir::Expr<'_>, expected: Ty<'tcx>) -> bool {\n-        if let hir::ExprKind::Assign(..) = expr.kind {\n-            return expected == self.tcx.types.bool;\n-        }\n-        false\n-    }\n-\n     /// If the expected type is an enum (Issue #55250) with any variants whose\n     /// sole field is of the found type, suggest such variants. (Issue #42764)\n     fn suggest_compatible_variants("}, {"sha": "676e751376a6ce6dafc03430f63bfc793209ab70", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a2c6075dfff58626afc9ab57c2c6b284c5612ec7/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2c6075dfff58626afc9ab57c2c6b284c5612ec7/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=a2c6075dfff58626afc9ab57c2c6b284c5612ec7", "patch": "@@ -92,8 +92,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             let expr = expr.peel_drop_temps();\n             self.suggest_deref_ref_or_into(&mut err, expr, expected_ty, ty, None);\n             extend_err(&mut err);\n-            // Error possibly reported in `check_assign` so avoid emitting error again.\n-            err.emit_unless(self.is_assign_to_bool(expr, expected_ty));\n+            err.emit();\n         }\n         ty\n     }"}, {"sha": "751dc8719cf33769b96e62909094fa39a0bf2b31", "filename": "src/test/ui/typeck/issue-87771-ice-assign-assign-to-bool.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2c6075dfff58626afc9ab57c2c6b284c5612ec7/src%2Ftest%2Fui%2Ftypeck%2Fissue-87771-ice-assign-assign-to-bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2c6075dfff58626afc9ab57c2c6b284c5612ec7/src%2Ftest%2Fui%2Ftypeck%2Fissue-87771-ice-assign-assign-to-bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-87771-ice-assign-assign-to-bool.rs?ref=a2c6075dfff58626afc9ab57c2c6b284c5612ec7", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let mut a;\n+    a = a = true; //~ ERROR mismatched types\n+}"}, {"sha": "fe10fa733d23808c9e6c18f77f3515fe2bb12678", "filename": "src/test/ui/typeck/issue-87771-ice-assign-assign-to-bool.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a2c6075dfff58626afc9ab57c2c6b284c5612ec7/src%2Ftest%2Fui%2Ftypeck%2Fissue-87771-ice-assign-assign-to-bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a2c6075dfff58626afc9ab57c2c6b284c5612ec7/src%2Ftest%2Fui%2Ftypeck%2Fissue-87771-ice-assign-assign-to-bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-87771-ice-assign-assign-to-bool.stderr?ref=a2c6075dfff58626afc9ab57c2c6b284c5612ec7", "patch": "@@ -0,0 +1,9 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-87771-ice-assign-assign-to-bool.rs:3:9\n+   |\n+LL |     a = a = true;\n+   |         ^^^^^^^^ expected `bool`, found `()`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}