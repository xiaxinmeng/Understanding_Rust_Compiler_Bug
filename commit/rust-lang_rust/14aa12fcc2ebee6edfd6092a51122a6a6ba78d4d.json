{"sha": "14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YWExMmZjYzJlYmVlNmVkZmQ2MDkyYTUxMTIyYTZhNmJhNzhkNGQ=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-01-22T05:57:33Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-01-24T00:56:54Z"}, "message": "Replace version_check dependency with own version parsing code\n\nThis gives compiler maintainers a better degree of control\nover how the version gets parsed and is a good way to ensure\nthat there are no changes of behaviour in the future.\n\nAlso, issue a warning if the version is invalid instead of erroring\nso that we stay forwards compatible with possible future changes\nof the versioning scheme.\n\nLast, this improves the present test a little.", "tree": {"sha": "baa736c03f2345d7ab829b8ee159e7e4db087355", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/baa736c03f2345d7ab829b8ee159e7e4db087355"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d", "html_url": "https://github.com/rust-lang/rust/commit/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "202720bf483088dbdb343f78c0aa77067fdd8156", "url": "https://api.github.com/repos/rust-lang/rust/commits/202720bf483088dbdb343f78c0aa77067fdd8156", "html_url": "https://github.com/rust-lang/rust/commit/202720bf483088dbdb343f78c0aa77067fdd8156"}], "stats": {"total": 174, "additions": 138, "deletions": 36}, "files": [{"sha": "ee52e34163bddac871d0bbe33345a3c2576fa122", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d", "patch": "@@ -3568,7 +3568,6 @@ dependencies = [\n  \"rustc_serialize\",\n  \"rustc_session\",\n  \"rustc_span\",\n- \"version_check\",\n ]\n \n [[package]]"}, {"sha": "dc0711a5b0f30d0bef88695991e61d59f4864ea3", "filename": "compiler/rustc_attr/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d/compiler%2Frustc_attr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d/compiler%2Frustc_attr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2FCargo.toml?ref=14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d", "patch": "@@ -18,4 +18,3 @@ rustc_lexer = { path = \"../rustc_lexer\" }\n rustc_macros = { path = \"../rustc_macros\" }\n rustc_session = { path = \"../rustc_session\" }\n rustc_ast = { path = \"../rustc_ast\" }\n-version_check = \"0.9\""}, {"sha": "26baaf07880f1ff3985253beda4b93b53f2ea288", "filename": "compiler/rustc_attr/src/builtin.rs", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs?ref=14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d", "patch": "@@ -10,7 +10,6 @@ use rustc_session::Session;\n use rustc_span::hygiene::Transparency;\n use rustc_span::{symbol::sym, symbol::Symbol, Span};\n use std::num::NonZeroU32;\n-use version_check::Version;\n \n pub fn is_builtin_attr(attr: &Attribute) -> bool {\n     attr.is_doc_comment() || attr.ident().filter(|ident| is_builtin_attr_name(ident.name)).is_some()\n@@ -526,6 +525,26 @@ fn gate_cfg(gated_cfg: &GatedCfg, cfg_span: Span, sess: &ParseSess, features: &F\n     }\n }\n \n+#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+struct Version {\n+    major: u16,\n+    minor: u16,\n+    patch: u16,\n+}\n+\n+fn parse_version(s: &str, allow_appendix: bool) -> Option<Version> {\n+    let mut components = s.split('-');\n+    let d = components.next()?;\n+    if !allow_appendix && components.next().is_some() {\n+        return None;\n+    }\n+    let mut digits = d.splitn(3, '.');\n+    let major = digits.next()?.parse().ok()?;\n+    let minor = digits.next()?.parse().ok()?;\n+    let patch = digits.next().unwrap_or(\"0\").parse().ok()?;\n+    Some(Version { major, minor, patch })\n+}\n+\n /// Evaluate a cfg-like condition (with `any` and `all`), using `eval` to\n /// evaluate individual items.\n pub fn eval_condition(\n@@ -555,16 +574,21 @@ pub fn eval_condition(\n                     return false;\n                 }\n             };\n-            let min_version = match Version::parse(&min_version.as_str()) {\n+            let min_version = match parse_version(&min_version.as_str(), false) {\n                 Some(ver) => ver,\n                 None => {\n-                    sess.span_diagnostic.struct_span_err(*span, \"invalid version literal\").emit();\n+                    sess.span_diagnostic\n+                        .struct_span_warn(\n+                            *span,\n+                            \"unknown version literal format, assuming it refers to a future version\",\n+                        )\n+                        .emit();\n                     return false;\n                 }\n             };\n             let channel = env!(\"CFG_RELEASE_CHANNEL\");\n             let nightly = channel == \"nightly\" || channel == \"dev\";\n-            let rustc_version = Version::parse(env!(\"CFG_RELEASE\")).unwrap();\n+            let rustc_version = parse_version(env!(\"CFG_RELEASE\"), true).unwrap();\n \n             // See https://github.com/rust-lang/rust/issues/64796#issuecomment-625474439 for details\n             if nightly { rustc_version > min_version } else { rustc_version >= min_version }"}, {"sha": "e35784a68d101a6af270893fb5ca7b83ec52c478", "filename": "src/test/ui/feature-gates/feature-gate-cfg-version.rs", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-version.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-version.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-version.rs?ref=14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d", "patch": "@@ -1,3 +1,9 @@\n+#[cfg(version(42))] //~ ERROR: expected a version literal\n+//~^ ERROR `cfg(version)` is experimental and subject to change\n+fn foo() {}\n+#[cfg(version(1.20))] //~ ERROR: expected a version literal\n+//~^ ERROR `cfg(version)` is experimental and subject to change\n+fn foo() -> bool { true }\n #[cfg(version(\"1.44\"))]\n //~^ ERROR `cfg(version)` is experimental and subject to change\n fn foo() -> bool { true }\n@@ -11,30 +17,32 @@ fn bar() -> bool  { false }\n #[cfg(version(false))] //~ ERROR: expected a version literal\n //~^ ERROR `cfg(version)` is experimental and subject to change\n fn bar() -> bool  { false }\n-#[cfg(version(\"foo\"))] //~ ERROR: invalid version literal\n+#[cfg(version(\"foo\"))] //~ WARNING: unknown version literal format\n //~^ ERROR `cfg(version)` is experimental and subject to change\n fn bar() -> bool  { false }\n-#[cfg(version(\"999\"))]\n+#[cfg(version(\"999\"))] //~ WARNING: unknown version literal format\n //~^ ERROR `cfg(version)` is experimental and subject to change\n fn bar() -> bool  { false }\n-#[cfg(version(\"-1\"))] //~ ERROR: invalid version literal\n+#[cfg(version(\"-1\"))] //~ WARNING: unknown version literal format\n //~^ ERROR `cfg(version)` is experimental and subject to change\n fn bar() -> bool  { false }\n-#[cfg(version(\"65536\"))] //~ ERROR: invalid version literal\n+#[cfg(version(\"65536\"))] //~ WARNING: unknown version literal format\n //~^ ERROR `cfg(version)` is experimental and subject to change\n fn bar() -> bool  { false }\n-#[cfg(version(\"0\"))]\n+#[cfg(version(\"0\"))] //~ WARNING: unknown version literal format\n //~^ ERROR `cfg(version)` is experimental and subject to change\n fn bar() -> bool { true }\n-\n-#[cfg(version(\"1.65536.2\"))]\n+#[cfg(version(\"1.0\"))]\n+//~^ ERROR `cfg(version)` is experimental and subject to change\n+fn bar() -> bool { true }\n+#[cfg(version(\"1.65536.2\"))] //~ WARNING: unknown version literal format\n+//~^ ERROR `cfg(version)` is experimental and subject to change\n+fn bar() -> bool  { false }\n+#[cfg(version(\"1.20.0-stable\"))] //~ WARNING: unknown version literal format\n //~^ ERROR `cfg(version)` is experimental and subject to change\n-fn version_check_bug() {}\n+fn bar() {}\n \n fn main() {\n-    // This should fail but due to a bug in version_check `1.65536.2` is interpreted as `1.2`.\n-    // See https://github.com/SergioBenitez/version_check/issues/11\n-    version_check_bug();\n     assert!(foo());\n     assert!(bar());\n     assert!(cfg!(version(\"1.42\"))); //~ ERROR `cfg(version)` is experimental and subject to change"}, {"sha": "ae899d409ecf9e899cba05bfb7f3b29a9f4b916c", "filename": "src/test/ui/feature-gates/feature-gate-cfg-version.stderr", "status": "modified", "additions": 91, "deletions": 19, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-version.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-version.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-version.stderr?ref=14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d", "patch": "@@ -1,14 +1,44 @@\n error[E0658]: `cfg(version)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-version.rs:1:7\n    |\n+LL | #[cfg(version(42))]\n+   |       ^^^^^^^^^^^\n+   |\n+   = note: see issue #64796 <https://github.com/rust-lang/rust/issues/64796> for more information\n+   = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n+\n+error: expected a version literal\n+  --> $DIR/feature-gate-cfg-version.rs:1:15\n+   |\n+LL | #[cfg(version(42))]\n+   |               ^^\n+\n+error[E0658]: `cfg(version)` is experimental and subject to change\n+  --> $DIR/feature-gate-cfg-version.rs:4:7\n+   |\n+LL | #[cfg(version(1.20))]\n+   |       ^^^^^^^^^^^^^\n+   |\n+   = note: see issue #64796 <https://github.com/rust-lang/rust/issues/64796> for more information\n+   = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n+\n+error: expected a version literal\n+  --> $DIR/feature-gate-cfg-version.rs:4:15\n+   |\n+LL | #[cfg(version(1.20))]\n+   |               ^^^^\n+\n+error[E0658]: `cfg(version)` is experimental and subject to change\n+  --> $DIR/feature-gate-cfg-version.rs:7:7\n+   |\n LL | #[cfg(version(\"1.44\"))]\n    |       ^^^^^^^^^^^^^^^\n    |\n    = note: see issue #64796 <https://github.com/rust-lang/rust/issues/64796> for more information\n    = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n \n error[E0658]: `cfg(version)` is experimental and subject to change\n-  --> $DIR/feature-gate-cfg-version.rs:4:11\n+  --> $DIR/feature-gate-cfg-version.rs:10:11\n    |\n LL | #[cfg(not(version(\"1.44\")))]\n    |           ^^^^^^^^^^^^^^^\n@@ -17,7 +47,7 @@ LL | #[cfg(not(version(\"1.44\")))]\n    = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n \n error[E0658]: `cfg(version)` is experimental and subject to change\n-  --> $DIR/feature-gate-cfg-version.rs:8:7\n+  --> $DIR/feature-gate-cfg-version.rs:14:7\n    |\n LL | #[cfg(version(\"1.43\", \"1.44\", \"1.45\"))]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -26,13 +56,13 @@ LL | #[cfg(version(\"1.43\", \"1.44\", \"1.45\"))]\n    = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n \n error: expected single version literal\n-  --> $DIR/feature-gate-cfg-version.rs:8:7\n+  --> $DIR/feature-gate-cfg-version.rs:14:7\n    |\n LL | #[cfg(version(\"1.43\", \"1.44\", \"1.45\"))]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0658]: `cfg(version)` is experimental and subject to change\n-  --> $DIR/feature-gate-cfg-version.rs:11:7\n+  --> $DIR/feature-gate-cfg-version.rs:17:7\n    |\n LL | #[cfg(version(false))]\n    |       ^^^^^^^^^^^^^^\n@@ -41,92 +71,134 @@ LL | #[cfg(version(false))]\n    = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n \n error: expected a version literal\n-  --> $DIR/feature-gate-cfg-version.rs:11:15\n+  --> $DIR/feature-gate-cfg-version.rs:17:15\n    |\n LL | #[cfg(version(false))]\n    |               ^^^^^\n \n error[E0658]: `cfg(version)` is experimental and subject to change\n-  --> $DIR/feature-gate-cfg-version.rs:14:7\n+  --> $DIR/feature-gate-cfg-version.rs:20:7\n    |\n LL | #[cfg(version(\"foo\"))]\n    |       ^^^^^^^^^^^^^^\n    |\n    = note: see issue #64796 <https://github.com/rust-lang/rust/issues/64796> for more information\n    = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n \n-error: invalid version literal\n-  --> $DIR/feature-gate-cfg-version.rs:14:15\n+warning: unknown version literal format, assuming it refers to a future version\n+  --> $DIR/feature-gate-cfg-version.rs:20:15\n    |\n LL | #[cfg(version(\"foo\"))]\n    |               ^^^^^\n \n error[E0658]: `cfg(version)` is experimental and subject to change\n-  --> $DIR/feature-gate-cfg-version.rs:17:7\n+  --> $DIR/feature-gate-cfg-version.rs:23:7\n    |\n LL | #[cfg(version(\"999\"))]\n    |       ^^^^^^^^^^^^^^\n    |\n    = note: see issue #64796 <https://github.com/rust-lang/rust/issues/64796> for more information\n    = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n \n+warning: unknown version literal format, assuming it refers to a future version\n+  --> $DIR/feature-gate-cfg-version.rs:23:15\n+   |\n+LL | #[cfg(version(\"999\"))]\n+   |               ^^^^^\n+\n error[E0658]: `cfg(version)` is experimental and subject to change\n-  --> $DIR/feature-gate-cfg-version.rs:20:7\n+  --> $DIR/feature-gate-cfg-version.rs:26:7\n    |\n LL | #[cfg(version(\"-1\"))]\n    |       ^^^^^^^^^^^^^\n    |\n    = note: see issue #64796 <https://github.com/rust-lang/rust/issues/64796> for more information\n    = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n \n-error: invalid version literal\n-  --> $DIR/feature-gate-cfg-version.rs:20:15\n+warning: unknown version literal format, assuming it refers to a future version\n+  --> $DIR/feature-gate-cfg-version.rs:26:15\n    |\n LL | #[cfg(version(\"-1\"))]\n    |               ^^^^\n \n error[E0658]: `cfg(version)` is experimental and subject to change\n-  --> $DIR/feature-gate-cfg-version.rs:23:7\n+  --> $DIR/feature-gate-cfg-version.rs:29:7\n    |\n LL | #[cfg(version(\"65536\"))]\n    |       ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #64796 <https://github.com/rust-lang/rust/issues/64796> for more information\n    = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n \n-error: invalid version literal\n-  --> $DIR/feature-gate-cfg-version.rs:23:15\n+warning: unknown version literal format, assuming it refers to a future version\n+  --> $DIR/feature-gate-cfg-version.rs:29:15\n    |\n LL | #[cfg(version(\"65536\"))]\n    |               ^^^^^^^\n \n error[E0658]: `cfg(version)` is experimental and subject to change\n-  --> $DIR/feature-gate-cfg-version.rs:26:7\n+  --> $DIR/feature-gate-cfg-version.rs:32:7\n    |\n LL | #[cfg(version(\"0\"))]\n    |       ^^^^^^^^^^^^\n    |\n    = note: see issue #64796 <https://github.com/rust-lang/rust/issues/64796> for more information\n    = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n \n+warning: unknown version literal format, assuming it refers to a future version\n+  --> $DIR/feature-gate-cfg-version.rs:32:15\n+   |\n+LL | #[cfg(version(\"0\"))]\n+   |               ^^^\n+\n+error[E0658]: `cfg(version)` is experimental and subject to change\n+  --> $DIR/feature-gate-cfg-version.rs:35:7\n+   |\n+LL | #[cfg(version(\"1.0\"))]\n+   |       ^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #64796 <https://github.com/rust-lang/rust/issues/64796> for more information\n+   = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n+\n error[E0658]: `cfg(version)` is experimental and subject to change\n-  --> $DIR/feature-gate-cfg-version.rs:30:7\n+  --> $DIR/feature-gate-cfg-version.rs:38:7\n    |\n LL | #[cfg(version(\"1.65536.2\"))]\n    |       ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #64796 <https://github.com/rust-lang/rust/issues/64796> for more information\n    = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n \n+warning: unknown version literal format, assuming it refers to a future version\n+  --> $DIR/feature-gate-cfg-version.rs:38:15\n+   |\n+LL | #[cfg(version(\"1.65536.2\"))]\n+   |               ^^^^^^^^^^^\n+\n+error[E0658]: `cfg(version)` is experimental and subject to change\n+  --> $DIR/feature-gate-cfg-version.rs:41:7\n+   |\n+LL | #[cfg(version(\"1.20.0-stable\"))]\n+   |       ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #64796 <https://github.com/rust-lang/rust/issues/64796> for more information\n+   = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n+\n+warning: unknown version literal format, assuming it refers to a future version\n+  --> $DIR/feature-gate-cfg-version.rs:41:15\n+   |\n+LL | #[cfg(version(\"1.20.0-stable\"))]\n+   |               ^^^^^^^^^^^^^^^\n+\n error[E0658]: `cfg(version)` is experimental and subject to change\n-  --> $DIR/feature-gate-cfg-version.rs:40:18\n+  --> $DIR/feature-gate-cfg-version.rs:48:18\n    |\n LL |     assert!(cfg!(version(\"1.42\")));\n    |                  ^^^^^^^^^^^^^^^\n    |\n    = note: see issue #64796 <https://github.com/rust-lang/rust/issues/64796> for more information\n    = help: add `#![feature(cfg_version)]` to the crate attributes to enable\n \n-error: aborting due to 16 previous errors\n+error: aborting due to 19 previous errors; 7 warnings emitted\n \n For more information about this error, try `rustc --explain E0658`."}]}