{"sha": "cccf4b2fc3199f9647f8a4602964e0021d90eeea", "node_id": "C_kwDOAAsO6NoAKGNjY2Y0YjJmYzMxOTlmOTY0N2Y4YTQ2MDI5NjRlMDAyMWQ5MGVlZWE", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-01-28T08:59:06Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-02-12T08:24:43Z"}, "message": "Adapt new change", "tree": {"sha": "9849b75a504c636b6c5d938b0b3788afd01d2543", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9849b75a504c636b6c5d938b0b3788afd01d2543"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cccf4b2fc3199f9647f8a4602964e0021d90eeea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmIHbssACgkQbQF6ltjm\nwvlzsBAAuSgLppFZoM53CwOKr232l7uhV0FlzeiRNY4Kcx9Cqlt8c0vYjig9R4p4\ncBiFq5kCCgrPLPj6xLI6Y/WXXrsDhT8Ljnb7YKOnPkKYO0JoG08oCe77g841GDNL\nAibbITfh1XDTMSYfmIbndzh8KJDf7UAxWB20F+ET+m6avFnFC7j0T7mX7Dn/RbYL\nVtKxvM37aA+1C7MKM0hHJ94gWlr8RsARCFC1+QY8M4lE60t9fr3kAGKYZLcoyyET\nBq9pNRE0n8Gb6HbXtW+OWL+4Jq27ePgh6t7Zm1/7s8SItg+YSOhFNC6xPLqlwUnZ\n5ayYxjIHCMyuKBwft161aoiF0V6lrmy7Hp0wpYSiXrQJVB+mSdtdtBagpq2H7gmn\ni1fs5XYbH26r/y6azMlxF9XfROiA5mePNhRcm+easbGUc1zwLZySPbwSciSELv6A\nBG/dOyi+HWo3M1pUpVAAfitF5Ie7KO96jVGmEsQZqnmtz4cwalQYwDNCITgbicsc\n6YmdADlaScTHns2vYh2ZNoUqZwYro6I9y4hC3UmQHGJ5zFcnD3/21E5RAL/1munp\nXEO1J8PgdQygy6aSb+76Q/jlPAqGb2+/iBlQUrGHEMAWGgTTFMofWxFVIIqKV/y5\n7fF4umvA9RjvN0tG6K1KrpFd9Vdb5nnbZNENp9xXt1+52EAROgQ=\n=9//V\n-----END PGP SIGNATURE-----", "payload": "tree 9849b75a504c636b6c5d938b0b3788afd01d2543\nparent d3acb9d00e64d68d8c91c9d9925b92cd79b33379\nauthor Deadbeef <ent3rm4n@gmail.com> 1643360346 +1100\ncommitter Deadbeef <ent3rm4n@gmail.com> 1644654283 +1100\n\nAdapt new change\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cccf4b2fc3199f9647f8a4602964e0021d90eeea", "html_url": "https://github.com/rust-lang/rust/commit/cccf4b2fc3199f9647f8a4602964e0021d90eeea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cccf4b2fc3199f9647f8a4602964e0021d90eeea/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3acb9d00e64d68d8c91c9d9925b92cd79b33379", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3acb9d00e64d68d8c91c9d9925b92cd79b33379", "html_url": "https://github.com/rust-lang/rust/commit/d3acb9d00e64d68d8c91c9d9925b92cd79b33379"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "2fd814c129c2a1d5bb7d4888bd8faf87aee7a8f0", "filename": "compiler/rustc_const_eval/src/transform/check_consts/check.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cccf4b2fc3199f9647f8a4602964e0021d90eeea/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cccf4b2fc3199f9647f8a4602964e0021d90eeea/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs?ref=cccf4b2fc3199f9647f8a4602964e0021d90eeea", "patch": "@@ -832,10 +832,6 @@ impl<'tcx> Visitor<'tcx> for Checker<'_, 'tcx> {\n                             return;\n                         }\n                         Ok(Some(ImplSource::UserDefined(data))) => {\n-                            if let hir::Constness::NotConst = tcx.impl_constness(data.impl_def_id) {\n-                                self.check_op(ops::FnCallNonConst(None));\n-                                return;\n-                            }\n                             let callee_name = tcx.item_name(callee);\n                             if let Some(&did) = tcx\n                                 .associated_item_def_ids(data.impl_def_id)\n@@ -847,6 +843,17 @@ impl<'tcx> Visitor<'tcx> for Checker<'_, 'tcx> {\n                                 substs = InternalSubsts::identity_for_item(tcx, did);\n                                 callee = did;\n                             }\n+\n+                            if let hir::Constness::NotConst = tcx.impl_constness(data.impl_def_id) {\n+                                self.check_op(ops::FnCallNonConst {\n+                                    caller,\n+                                    callee,\n+                                    substs,\n+                                    span: *fn_span,\n+                                    from_hir_call: *from_hir_call,\n+                                });\n+                                return;\n+                            }\n                         }\n                         _ if !tcx.is_const_fn_raw(callee) => {\n                             // At this point, it is only legal when the caller is marked with"}]}