{"sha": "2423ea2c5f430616f593fcffe43f17a3f669d881", "node_id": "C_kwDOAAsO6NoAKDI0MjNlYTJjNWY0MzA2MTZmNTkzZmNmZmU0M2YxN2EzZjY2OWQ4ODE", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-12-08T07:55:57Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-12-08T07:55:57Z"}, "message": "add a test for #103095", "tree": {"sha": "f3a7868a1cfd54e7034417e1ee0c798ba7c684d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3a7868a1cfd54e7034417e1ee0c798ba7c684d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2423ea2c5f430616f593fcffe43f17a3f669d881", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2423ea2c5f430616f593fcffe43f17a3f669d881", "html_url": "https://github.com/rust-lang/rust/commit/2423ea2c5f430616f593fcffe43f17a3f669d881", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2423ea2c5f430616f593fcffe43f17a3f669d881/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed61c139c2bc778ebb91f5dd6a5393aa20467f78", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed61c139c2bc778ebb91f5dd6a5393aa20467f78", "html_url": "https://github.com/rust-lang/rust/commit/ed61c139c2bc778ebb91f5dd6a5393aa20467f78"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "0340f39243fa8ec379e7d832ae933dd48a787b5c", "filename": "src/test/ui/borrowck/issue-103095.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2423ea2c5f430616f593fcffe43f17a3f669d881/src%2Ftest%2Fui%2Fborrowck%2Fissue-103095.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2423ea2c5f430616f593fcffe43f17a3f669d881/src%2Ftest%2Fui%2Fborrowck%2Fissue-103095.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-103095.rs?ref=2423ea2c5f430616f593fcffe43f17a3f669d881", "patch": "@@ -0,0 +1,30 @@\n+// check-pass\n+\n+trait FnOnceForGenericRef<T>: FnOnce(&T) -> Self::FnOutput {\n+    type FnOutput;\n+}\n+\n+impl<T, R, F: FnOnce(&T) -> R> FnOnceForGenericRef<T> for F {\n+    type FnOutput = R;\n+}\n+\n+struct Data<T, D: FnOnceForGenericRef<T>> {\n+    value: Option<T>,\n+    output: Option<D::FnOutput>,\n+}\n+\n+impl<T, D: FnOnceForGenericRef<T>> Data<T, D> {\n+    fn new(value: T, f: D) -> Self {\n+        let output = f(&value);\n+        Self {\n+            value: Some(value),\n+            output: Some(output),\n+        }\n+    }\n+}\n+\n+fn test() {\n+    Data::new(String::new(), |_| {});\n+}\n+\n+fn main() {}"}]}