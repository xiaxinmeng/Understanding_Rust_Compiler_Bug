{"sha": "d9c441c5abfbe9052a2d682c1ae644513a68b767", "node_id": "C_kwDOAAsO6NoAKGQ5YzQ0MWM1YWJmYmU5MDUyYTJkNjgyYzFhZTY0NDUxM2E2OGI3Njc", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-02T22:33:03Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-02T22:38:07Z"}, "message": "put call to stacked borrows end_call in a more sensible place", "tree": {"sha": "30d7c3dc01fc6d3df682960e8bf39cb496104481", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30d7c3dc01fc6d3df682960e8bf39cb496104481"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9c441c5abfbe9052a2d682c1ae644513a68b767", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9c441c5abfbe9052a2d682c1ae644513a68b767", "html_url": "https://github.com/rust-lang/rust/commit/d9c441c5abfbe9052a2d682c1ae644513a68b767", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9c441c5abfbe9052a2d682c1ae644513a68b767/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9925ff7f490ba04424c228f2c43eb59d33c1389", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9925ff7f490ba04424c228f2c43eb59d33c1389", "html_url": "https://github.com/rust-lang/rust/commit/c9925ff7f490ba04424c228f2c43eb59d33c1389"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "716d4bd5b90c3bdb39a10b6833f70dc6a313ecf3", "filename": "src/machine.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d9c441c5abfbe9052a2d682c1ae644513a68b767/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9c441c5abfbe9052a2d682c1ae644513a68b767/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=d9c441c5abfbe9052a2d682c1ae644513a68b767", "patch": "@@ -930,7 +930,10 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n         unwinding: bool,\n     ) -> InterpResult<'tcx, StackPopJump> {\n         let timing = frame.extra.timing.take();\n-        let res = ecx.handle_stack_pop(frame.extra, unwinding);\n+        if let Some(stacked_borrows) = &ecx.machine.stacked_borrows {\n+            stacked_borrows.borrow_mut().end_call(frame.extra.call_id);\n+        }\n+        let res = ecx.handle_stack_pop_unwind(frame.extra, unwinding);\n         if let Some(profiler) = ecx.machine.profiler.as_ref() {\n             profiler.finish_recording_interval_event(timing.unwrap());\n         }"}, {"sha": "2ef0a741d52fb53c41d00e488319315a7dfac710", "filename": "src/shims/panic.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d9c441c5abfbe9052a2d682c1ae644513a68b767/src%2Fshims%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9c441c5abfbe9052a2d682c1ae644513a68b767/src%2Fshims%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fpanic.rs?ref=d9c441c5abfbe9052a2d682c1ae644513a68b767", "patch": "@@ -115,17 +115,13 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         Ok(())\n     }\n \n-    fn handle_stack_pop(\n+    fn handle_stack_pop_unwind(\n         &mut self,\n         mut extra: FrameData<'tcx>,\n         unwinding: bool,\n     ) -> InterpResult<'tcx, StackPopJump> {\n         let this = self.eval_context_mut();\n-\n-        trace!(\"handle_stack_pop(extra = {:?}, unwinding = {})\", extra, unwinding);\n-        if let Some(stacked_borrows) = &this.machine.stacked_borrows {\n-            stacked_borrows.borrow_mut().end_call(extra.call_id);\n-        }\n+        trace!(\"handle_stack_pop_unwind(extra = {:?}, unwinding = {})\", extra, unwinding);\n \n         // We only care about `catch_panic` if we're unwinding - if we're doing a normal\n         // return, then we don't need to do anything special."}]}