{"sha": "e632dafba2782ce8f51c2e414290d36cf983896f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MzJkYWZiYTI3ODJjZThmNTFjMmU0MTQyOTBkMzZjZjk4Mzg5NmY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-16T16:22:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-16T16:22:20Z"}, "message": "Rollup merge of #60492 - acrrd:issues/54054_chain, r=SimonSapin\n\nAdd custom nth_back for Chain\n\nImplementation of nth_back for Chain.\nPart of #54054", "tree": {"sha": "3b5067e8e048f9ce95f6d3bfaab7f68d709968c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b5067e8e048f9ce95f6d3bfaab7f68d709968c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e632dafba2782ce8f51c2e414290d36cf983896f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdVtg8CRBK7hj4Ov3rIwAAdHIIACbt/RJj9s0FMg15Q1tqUXsg\ndxFpdZhwpMQf7QEQ5iMz3VOACn/+JEfuuD+RAohOeLcbuvC6LCTSMr81OxfrCslu\n9yk7laoyqn87Bfa+WmK9evZTOFZXR0mTKN8V5Scs0cN5g2XeZM1k/EOmB7xWtWX3\n7Ts+vrC2wui3K4rEArSDydGBhEV/do6JbFbKwCle9LEUQ5aEN/no+zuyZsNCkkYh\nYMxmLzs+tA0X0WNuX25V32VCtpsrsRaU7FMjHzT3ihsxLou4+KI3QaaqSshvh7U0\nhybKvOli3aytxSOXLx/YzCyfCPep110LV2q5HfRixLkUyITtwFJUhsZI2JtP6cY=\n=HVEp\n-----END PGP SIGNATURE-----\n", "payload": "tree 3b5067e8e048f9ce95f6d3bfaab7f68d709968c5\nparent 9dd5c191993aab6c2f1538eb8ab69afdc4b6e67a\nparent 7b6ad606723d29b7b7f7316a019cb55c7ee48b5c\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565972540 +0200\ncommitter GitHub <noreply@github.com> 1565972540 +0200\n\nRollup merge of #60492 - acrrd:issues/54054_chain, r=SimonSapin\n\nAdd custom nth_back for Chain\n\nImplementation of nth_back for Chain.\nPart of #54054\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e632dafba2782ce8f51c2e414290d36cf983896f", "html_url": "https://github.com/rust-lang/rust/commit/e632dafba2782ce8f51c2e414290d36cf983896f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e632dafba2782ce8f51c2e414290d36cf983896f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9dd5c191993aab6c2f1538eb8ab69afdc4b6e67a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dd5c191993aab6c2f1538eb8ab69afdc4b6e67a", "html_url": "https://github.com/rust-lang/rust/commit/9dd5c191993aab6c2f1538eb8ab69afdc4b6e67a"}, {"sha": "7b6ad606723d29b7b7f7316a019cb55c7ee48b5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b6ad606723d29b7b7f7316a019cb55c7ee48b5c", "html_url": "https://github.com/rust-lang/rust/commit/7b6ad606723d29b7b7f7316a019cb55c7ee48b5c"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "0b9f7f6b609e7cee770fca3167c5417fc9816613", "filename": "src/libcore/iter/adapters/chain.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e632dafba2782ce8f51c2e414290d36cf983896f/src%2Flibcore%2Fiter%2Fadapters%2Fchain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e632dafba2782ce8f51c2e414290d36cf983896f/src%2Flibcore%2Fiter%2Fadapters%2Fchain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fchain.rs?ref=e632dafba2782ce8f51c2e414290d36cf983896f", "patch": "@@ -207,6 +207,29 @@ impl<A, B> DoubleEndedIterator for Chain<A, B> where\n         }\n     }\n \n+    #[inline]\n+    fn nth_back(&mut self, mut n: usize) -> Option<A::Item> {\n+        match self.state {\n+            ChainState::Both | ChainState::Back => {\n+                for x in self.b.by_ref().rev() {\n+                    if n == 0 {\n+                        return Some(x)\n+                    }\n+                    n -= 1;\n+                }\n+                if let ChainState::Both = self.state {\n+                    self.state = ChainState::Front;\n+                }\n+            }\n+            ChainState::Front => {}\n+        }\n+        if let ChainState::Front = self.state {\n+            self.a.nth_back(n)\n+        } else {\n+            None\n+        }\n+    }\n+\n     fn try_rfold<Acc, F, R>(&mut self, init: Acc, mut f: F) -> R where\n         Self: Sized, F: FnMut(Acc, Self::Item) -> R, R: Try<Ok=Acc>\n     {"}, {"sha": "bff781373046347b128c161702b003a9460d5cae", "filename": "src/libcore/tests/iter.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e632dafba2782ce8f51c2e414290d36cf983896f/src%2Flibcore%2Ftests%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e632dafba2782ce8f51c2e414290d36cf983896f/src%2Flibcore%2Ftests%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fiter.rs?ref=e632dafba2782ce8f51c2e414290d36cf983896f", "patch": "@@ -103,6 +103,22 @@ fn test_iterator_chain_nth() {\n     assert_eq!(it.next(), None);\n }\n \n+#[test]\n+fn test_iterator_chain_nth_back() {\n+    let xs = [0, 1, 2, 3, 4, 5];\n+    let ys = [30, 40, 50, 60];\n+    let zs = [];\n+    let expected = [0, 1, 2, 3, 4, 5, 30, 40, 50, 60];\n+    for (i, x) in expected.iter().rev().enumerate() {\n+        assert_eq!(Some(x), xs.iter().chain(&ys).nth_back(i));\n+    }\n+    assert_eq!(zs.iter().chain(&xs).nth_back(0), Some(&5));\n+\n+    let mut it = xs.iter().chain(&zs);\n+    assert_eq!(it.nth_back(5), Some(&0));\n+    assert_eq!(it.next(), None);\n+}\n+\n #[test]\n fn test_iterator_chain_last() {\n     let xs = [0, 1, 2, 3, 4, 5];"}]}