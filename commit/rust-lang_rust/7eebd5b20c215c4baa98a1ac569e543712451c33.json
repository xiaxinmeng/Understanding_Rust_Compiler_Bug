{"sha": "7eebd5b20c215c4baa98a1ac569e543712451c33", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlZWJkNWIyMGMyMTVjNGJhYTk4YTFhYzU2OWU1NDM3MTI0NTFjMzM=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2018-10-02T21:55:25Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2018-10-02T21:57:22Z"}, "message": "Ignore `format!` with precision in `USELESS_FORMAT`", "tree": {"sha": "4cd88805d7540e9ed3919fa2b5e0dd089a4a5e69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cd88805d7540e9ed3919fa2b5e0dd089a4a5e69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7eebd5b20c215c4baa98a1ac569e543712451c33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7eebd5b20c215c4baa98a1ac569e543712451c33", "html_url": "https://github.com/rust-lang/rust/commit/7eebd5b20c215c4baa98a1ac569e543712451c33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7eebd5b20c215c4baa98a1ac569e543712451c33/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d18c7b272245f41cea9303ca62beb9ca64615251", "url": "https://api.github.com/repos/rust-lang/rust/commits/d18c7b272245f41cea9303ca62beb9ca64615251", "html_url": "https://github.com/rust-lang/rust/commit/d18c7b272245f41cea9303ca62beb9ca64615251"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "2d40150bc8e829f5005c5e6ebec0f9e868bc3be0", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7eebd5b20c215c4baa98a1ac569e543712451c33/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7eebd5b20c215c4baa98a1ac569e543712451c33/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=7eebd5b20c215c4baa98a1ac569e543712451c33", "patch": "@@ -47,7 +47,6 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                 return;\n             }\n             match expr.node {\n-\n                 // `format!(\"{}\", foo)` expansion\n                 ExprKind::Call(ref fun, ref args) => {\n                     if_chain! {\n@@ -162,9 +161,12 @@ fn check_unformatted(expr: &Expr) -> bool {\n         if let ExprKind::Struct(_, ref fields, _) = exprs[0].node;\n         if let Some(format_field) = fields.iter().find(|f| f.ident.name == \"format\");\n         if let ExprKind::Struct(_, ref fields, _) = format_field.expr.node;\n-        if let Some(align_field) = fields.iter().find(|f| f.ident.name == \"width\");\n-        if let ExprKind::Path(ref qpath) = align_field.expr.node;\n-        if last_path_segment(qpath).ident.name == \"Implied\";\n+        if let Some(width_field) = fields.iter().find(|f| f.ident.name == \"width\");\n+        if let ExprKind::Path(ref width_qpath) = width_field.expr.node;\n+        if last_path_segment(width_qpath).ident.name == \"Implied\";\n+        if let Some(precision_field) = fields.iter().find(|f| f.ident.name == \"precision\");\n+        if let ExprKind::Path(ref precision_path) = precision_field.expr.node;\n+        if last_path_segment(precision_path).ident.name == \"Implied\";\n         then {\n             return true;\n         }"}, {"sha": "0162f34c085be3a67652efe1d0fdea414e6f75ef", "filename": "tests/ui/format.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7eebd5b20c215c4baa98a1ac569e543712451c33/tests%2Fui%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7eebd5b20c215c4baa98a1ac569e543712451c33/tests%2Fui%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.rs?ref=7eebd5b20c215c4baa98a1ac569e543712451c33", "patch": "@@ -46,4 +46,10 @@ fn main() {\n \n     // A format! inside a macro should not trigger a warning\n     foo!(\"should not warn\");\n+\n+    // precision on string means slicing without panicking on size:\n+    format!(\"{:.1}\", \"foo\"); // could be \"foo\"[..1]\n+    format!(\"{:.10}\", \"foo\"); // could not be \"foo\"[..10]\n+    format!(\"{:.prec$}\", \"foo\", prec = 1);\n+    format!(\"{:.prec$}\", \"foo\", prec = 10);\n }"}]}