{"sha": "5e2de79b3054a815a45b9f4c641d7f1356f2291b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMmRlNzliMzA1NGE4MTVhNDViOWY0YzY0MWQ3ZjEzNTZmMjI5MWI=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-08T01:12:47Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-08T01:13:28Z"}, "message": "rustc: load bools as unsigned numbers.\n\nApparently loading them signed will break if/when they become i1.", "tree": {"sha": "4bf62a843842016b734dfab3f2c791282cf27d96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bf62a843842016b734dfab3f2c791282cf27d96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e2de79b3054a815a45b9f4c641d7f1356f2291b", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e2de79b3054a815a45b9f4c641d7f1356f2291b", "html_url": "https://github.com/rust-lang/rust/commit/5e2de79b3054a815a45b9f4c641d7f1356f2291b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e2de79b3054a815a45b9f4c641d7f1356f2291b/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "285c25f7f4fd5e824da6b6d670a141535f948750", "url": "https://api.github.com/repos/rust-lang/rust/commits/285c25f7f4fd5e824da6b6d670a141535f948750", "html_url": "https://github.com/rust-lang/rust/commit/285c25f7f4fd5e824da6b6d670a141535f948750"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e7ebc2ef526c4bf5d77b483065185dddf4e2b4b5", "filename": "src/librustc/middle/trans/datum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e2de79b3054a815a45b9f4c641d7f1356f2291b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e2de79b3054a815a45b9f4c641d7f1356f2291b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs?ref=5e2de79b3054a815a45b9f4c641d7f1356f2291b", "patch": "@@ -545,7 +545,7 @@ fn load<'a>(bcx: &'a Block<'a>, llptr: ValueRef, ty: ty::t) -> ValueRef {\n     if type_is_zero_size(bcx.ccx(), ty) {\n         C_undef(type_of::type_of(bcx.ccx(), ty))\n     } else if ty::type_is_bool(ty) {\n-        LoadRangeAssert(bcx, llptr, 0, 2, lib::llvm::True)\n+        LoadRangeAssert(bcx, llptr, 0, 2, lib::llvm::False)\n     } else if ty::type_is_char(ty) {\n         // a char is a unicode codepoint, and so takes values from 0\n         // to 0x10FFFF inclusive only."}]}