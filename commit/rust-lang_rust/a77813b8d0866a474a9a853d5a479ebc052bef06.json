{"sha": "a77813b8d0866a474a9a853d5a479ebc052bef06", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3NzgxM2I4ZDA4NjZhNDc0YTlhODUzZDVhNDc5ZWJjMDUyYmVmMDY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-16T07:01:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-16T07:01:13Z"}, "message": "Rollup merge of #74381 - mbrubeck:docs, r=Mark-Simulacrum\n\nUpdate docs for str::as_bytes_mut.\n\n* Add \"Safety\" section describing UTF-8 invariant.\n\n* Remove mention of `from_utf8_mut`.  It is not necessary to call\n  a function to convert the byte slice back to a string slice.  The\n  original string becomes accessible again after the byte slice is\n  no longer used (as shown in the example code).", "tree": {"sha": "b47df8dd7e6cd3c15ea3dc06e71037ddf1c32e42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b47df8dd7e6cd3c15ea3dc06e71037ddf1c32e42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a77813b8d0866a474a9a853d5a479ebc052bef06", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfD/s5CRBK7hj4Ov3rIwAAdHIIAAIVYfsreof3qOmzk/mI3//n\nFRYq7xOSOhVDd6OIfJK9DpoFsCO6K0AyLK7qsCttT4Fj/HTQUgoYRV8NnIeLtxlr\nL5X1M7jma/3pRw2vmmo23aD65JFSbY77ELvDNWEbaiYeZUbWcH37q6YSPv7q1Bmt\np0LWG9dCwDoC7YXSb4zB7NSY5oFMfC+ayQpHhTX9QUl0AMNeYeVnN3wLadAOiSP4\nVLTwXMNJsy1qRA0VmuMLES8BDMR8JXkYzaBMAO4Rn0gNW7zDr7nb9XvPA0NDqA3d\nYSZWlKdhA9HvZ6rDVbIijn7Tq0YpNjyWY1fR1FFZ3RYZlDQwk1uYxnIH+NNIOQ8=\n=Tv5A\n-----END PGP SIGNATURE-----\n", "payload": "tree b47df8dd7e6cd3c15ea3dc06e71037ddf1c32e42\nparent 4b4ea686ff3a0f44b5b2fef04a34ad27832617af\nparent 6da69ec08c4ba0c166d28a65196832f8de877149\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594882873 -0700\ncommitter GitHub <noreply@github.com> 1594882873 -0700\n\nRollup merge of #74381 - mbrubeck:docs, r=Mark-Simulacrum\n\nUpdate docs for str::as_bytes_mut.\n\n* Add \"Safety\" section describing UTF-8 invariant.\n\n* Remove mention of `from_utf8_mut`.  It is not necessary to call\n  a function to convert the byte slice back to a string slice.  The\n  original string becomes accessible again after the byte slice is\n  no longer used (as shown in the example code).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a77813b8d0866a474a9a853d5a479ebc052bef06", "html_url": "https://github.com/rust-lang/rust/commit/a77813b8d0866a474a9a853d5a479ebc052bef06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a77813b8d0866a474a9a853d5a479ebc052bef06/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b4ea686ff3a0f44b5b2fef04a34ad27832617af", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b4ea686ff3a0f44b5b2fef04a34ad27832617af", "html_url": "https://github.com/rust-lang/rust/commit/4b4ea686ff3a0f44b5b2fef04a34ad27832617af"}, {"sha": "6da69ec08c4ba0c166d28a65196832f8de877149", "url": "https://api.github.com/repos/rust-lang/rust/commits/6da69ec08c4ba0c166d28a65196832f8de877149", "html_url": "https://github.com/rust-lang/rust/commit/6da69ec08c4ba0c166d28a65196832f8de877149"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "86e8d5c42b7adae3c150099d87a0eac112ea6372", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a77813b8d0866a474a9a853d5a479ebc052bef06/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a77813b8d0866a474a9a853d5a479ebc052bef06/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=a77813b8d0866a474a9a853d5a479ebc052bef06", "patch": "@@ -2374,11 +2374,14 @@ impl str {\n         unsafe { Slices { str: self }.slice }\n     }\n \n-    /// Converts a mutable string slice to a mutable byte slice. To convert the\n-    /// mutable byte slice back into a mutable string slice, use the\n-    /// [`str::from_utf8_mut`] function.\n+    /// Converts a mutable string slice to a mutable byte slice.\n     ///\n-    /// [`str::from_utf8_mut`]: ./str/fn.from_utf8_mut.html\n+    /// # Safety\n+    ///\n+    /// The caller must ensure that the content of the slice is valid UTF-8\n+    /// before the borrow ends and the underlying `str` is used.\n+    ///\n+    /// Use of a `str` whose contents are not valid UTF-8 is undefined behavior.\n     ///\n     /// # Examples\n     ///"}]}