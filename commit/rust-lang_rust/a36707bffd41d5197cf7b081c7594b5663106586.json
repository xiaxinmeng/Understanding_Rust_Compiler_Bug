{"sha": "a36707bffd41d5197cf7b081c7594b5663106586", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNjcwN2JmZmQ0MWQ1MTk3Y2Y3YjA4MWM3NTk0YjU2NjMxMDY1ODY=", "commit": {"author": {"name": "Florian Hartwig", "email": "florian.j.hartwig@gmail.com", "date": "2015-11-19T19:19:19Z"}, "committer": {"name": "Florian Hartwig", "email": "florian.j.hartwig@gmail.com", "date": "2015-11-19T19:19:19Z"}, "message": "Appease clippy by not shadowing variables", "tree": {"sha": "a8ba359251c9394ebc0799cbd93ff47c4a5944dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8ba359251c9394ebc0799cbd93ff47c4a5944dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a36707bffd41d5197cf7b081c7594b5663106586", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a36707bffd41d5197cf7b081c7594b5663106586", "html_url": "https://github.com/rust-lang/rust/commit/a36707bffd41d5197cf7b081c7594b5663106586", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a36707bffd41d5197cf7b081c7594b5663106586/comments", "author": {"login": "fhartwig", "id": 83271, "node_id": "MDQ6VXNlcjgzMjcx", "avatar_url": "https://avatars.githubusercontent.com/u/83271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhartwig", "html_url": "https://github.com/fhartwig", "followers_url": "https://api.github.com/users/fhartwig/followers", "following_url": "https://api.github.com/users/fhartwig/following{/other_user}", "gists_url": "https://api.github.com/users/fhartwig/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhartwig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhartwig/subscriptions", "organizations_url": "https://api.github.com/users/fhartwig/orgs", "repos_url": "https://api.github.com/users/fhartwig/repos", "events_url": "https://api.github.com/users/fhartwig/events{/privacy}", "received_events_url": "https://api.github.com/users/fhartwig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhartwig", "id": 83271, "node_id": "MDQ6VXNlcjgzMjcx", "avatar_url": "https://avatars.githubusercontent.com/u/83271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhartwig", "html_url": "https://github.com/fhartwig", "followers_url": "https://api.github.com/users/fhartwig/followers", "following_url": "https://api.github.com/users/fhartwig/following{/other_user}", "gists_url": "https://api.github.com/users/fhartwig/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhartwig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhartwig/subscriptions", "organizations_url": "https://api.github.com/users/fhartwig/orgs", "repos_url": "https://api.github.com/users/fhartwig/repos", "events_url": "https://api.github.com/users/fhartwig/events{/privacy}", "received_events_url": "https://api.github.com/users/fhartwig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "096c064d4374daf6292cb54f7cf4fac4a8eda718", "url": "https://api.github.com/repos/rust-lang/rust/commits/096c064d4374daf6292cb54f7cf4fac4a8eda718", "html_url": "https://github.com/rust-lang/rust/commit/096c064d4374daf6292cb54f7cf4fac4a8eda718"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "b8c6402544d696d28d8526b8675757ac5ec9b27d", "filename": "src/methods.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a36707bffd41d5197cf7b081c7594b5663106586/src%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a36707bffd41d5197cf7b081c7594b5663106586/src%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmethods.rs?ref=a36707bffd41d5197cf7b081c7594b5663106586", "patch": "@@ -154,14 +154,14 @@ fn get_error_type<'a>(cx: &LateContext, ty: ty::Ty<'a>) -> Option<ty::Ty<'a>> {\n // conservative, i.e. it should not return false positives, but will return\n // false negatives.\n fn has_debug_impl<'a, 'b>(ty: ty::Ty<'a>, cx: &LateContext<'b, 'a>) -> bool {\n-    let ty = walk_ptrs_ty(ty);\n+    let no_ref_ty = walk_ptrs_ty(ty);\n     let debug = match cx.tcx.lang_items.debug_trait() {\n         Some(debug) => debug,\n         None => return false\n     };\n     let debug_def = cx.tcx.lookup_trait_def(debug);\n     let mut debug_impl_exists = false;\n-    debug_def.for_each_relevant_impl(cx.tcx, ty, |d| {\n+    debug_def.for_each_relevant_impl(cx.tcx, no_ref_ty, |d| {\n         let self_ty = &cx.tcx.impl_trait_ref(d).and_then(|im| im.substs.self_ty());\n         if let Some(self_ty) = *self_ty {\n             if !self_ty.flags.get().contains(ty::TypeFlags::HAS_PARAMS) {"}]}