{"sha": "4fec5ef81a24481dbe6f9637e772c0cc6c53568e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZWM1ZWY4MWEyNDQ4MWRiZTZmOTYzN2U3NzJjMGNjNmM1MzU2OGU=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-05-10T09:39:50Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-05-16T11:11:02Z"}, "message": "rustc_mir: promote borrows' underlying temps, and project at runtime.", "tree": {"sha": "c9bb7d38d39ed387e06f9ba78324052e71aa3205", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9bb7d38d39ed387e06f9ba78324052e71aa3205"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fec5ef81a24481dbe6f9637e772c0cc6c53568e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fec5ef81a24481dbe6f9637e772c0cc6c53568e", "html_url": "https://github.com/rust-lang/rust/commit/4fec5ef81a24481dbe6f9637e772c0cc6c53568e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fec5ef81a24481dbe6f9637e772c0cc6c53568e/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d79dee0b62fb33bcb2febac60ced71f28dccc602", "url": "https://api.github.com/repos/rust-lang/rust/commits/d79dee0b62fb33bcb2febac60ced71f28dccc602", "html_url": "https://github.com/rust-lang/rust/commit/d79dee0b62fb33bcb2febac60ced71f28dccc602"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "5af19ab36469677e2a01a3e56adc3d25d634ac45", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4fec5ef81a24481dbe6f9637e772c0cc6c53568e/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fec5ef81a24481dbe6f9637e772c0cc6c53568e/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=4fec5ef81a24481dbe6f9637e772c0cc6c53568e", "patch": "@@ -309,6 +309,18 @@ impl<'a, 'tcx> Promoter<'a, 'tcx> {\n                     let ref mut statement = blocks[loc.block].statements[loc.statement_index];\n                     match statement.kind {\n                         StatementKind::Assign(_, Rvalue::Ref(r, bk, ref mut place)) => {\n+                            // Find the underlying local for this (necessarilly interior) borrow.\n+                            // HACK(eddyb) using a recursive function because of mutable borrows.\n+                            fn interior_base<'a, 'tcx>(place: &'a mut Place<'tcx>)\n+                                                       -> &'a mut Place<'tcx> {\n+                                if let Place::Projection(ref mut proj) = *place {\n+                                    assert_ne!(proj.elem, ProjectionElem::Deref);\n+                                    return interior_base(&mut proj.base);\n+                                }\n+                                place\n+                            }\n+                            let place = interior_base(place);\n+\n                             let ty = place.ty(local_decls, self.tcx).to_ty(self.tcx);\n                             let ref_ty = self.tcx.mk_ref(r,\n                                 ty::TypeAndMut {"}]}