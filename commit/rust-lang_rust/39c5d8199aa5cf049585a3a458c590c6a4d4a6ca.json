{"sha": "39c5d8199aa5cf049585a3a458c590c6a4d4a6ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5YzVkODE5OWFhNWNmMDQ5NTg1YTNhNDU4YzU5MGM2YTRkNGE2Y2E=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-15T04:57:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-15T04:57:22Z"}, "message": "Rollup merge of #67267 - alexcrichton:update-wasi-libc, r=Dylan-DPC\n\nFix signature of `__wasilibc_find_relpath`\n\nLooks like this function changed upstream, so it needs to be adjusted\nfor when used by libstd.", "tree": {"sha": "c42e35416ecabf475a7ba49d65c0ce2fa8d1ee1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c42e35416ecabf475a7ba49d65c0ce2fa8d1ee1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39c5d8199aa5cf049585a3a458c590c6a4d4a6ca", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd9b0yCRBK7hj4Ov3rIwAAdHIIAJ4uOgeEBHSBIJYBTNHHyMxI\nPilW9S3T2Q6u9DwZgkujoWbS759ibLzj1dqIrdw1w5UzwRRiUdUo7DhkT7BWz6tE\nWvLyvKbTS+eolyW8/J8avZ+Nuq70/KN5yGRXt0fMykYRd0FwAeiKd+jJYqmjzgVR\n4ExGsZ0fyVA0YVSN42Z/GYpJ4M4e7d95Df2N0dAIjPsOhBuj9P5CCuULEeus7vTp\nzvuNG4Gpj6BJBxlXjHdi9awH+eRMBlmAsGudfhMi65/tfCTOcI2YjSj6Imu7zCJe\nwnBveqnkKnFnj5sPLgNghoS7cC79EzcPEXkACHZCuNWZURWLAyLRDEycfDXibPw=\n=Nt5q\n-----END PGP SIGNATURE-----\n", "payload": "tree c42e35416ecabf475a7ba49d65c0ce2fa8d1ee1a\nparent 009585ab299ec70326306d2aa6e7c63308ee7c30\nparent 641ccd58c168a296f5c36a191660ef63a32a98b9\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1576385842 +0100\ncommitter GitHub <noreply@github.com> 1576385842 +0100\n\nRollup merge of #67267 - alexcrichton:update-wasi-libc, r=Dylan-DPC\n\nFix signature of `__wasilibc_find_relpath`\n\nLooks like this function changed upstream, so it needs to be adjusted\nfor when used by libstd.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39c5d8199aa5cf049585a3a458c590c6a4d4a6ca", "html_url": "https://github.com/rust-lang/rust/commit/39c5d8199aa5cf049585a3a458c590c6a4d4a6ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39c5d8199aa5cf049585a3a458c590c6a4d4a6ca/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "009585ab299ec70326306d2aa6e7c63308ee7c30", "url": "https://api.github.com/repos/rust-lang/rust/commits/009585ab299ec70326306d2aa6e7c63308ee7c30", "html_url": "https://github.com/rust-lang/rust/commit/009585ab299ec70326306d2aa6e7c63308ee7c30"}, {"sha": "641ccd58c168a296f5c36a191660ef63a32a98b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/641ccd58c168a296f5c36a191660ef63a32a98b9", "html_url": "https://github.com/rust-lang/rust/commit/641ccd58c168a296f5c36a191660ef63a32a98b9"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "04bfdf67e12d28b416ce43d5e89d59503fbe3c05", "filename": "src/libstd/sys/wasi/fs.rs", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/39c5d8199aa5cf049585a3a458c590c6a4d4a6ca/src%2Flibstd%2Fsys%2Fwasi%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39c5d8199aa5cf049585a3a458c590c6a4d4a6ca/src%2Flibstd%2Fsys%2Fwasi%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Ffs.rs?ref=39c5d8199aa5cf049585a3a458c590c6a4d4a6ca", "patch": "@@ -364,7 +364,7 @@ impl OpenOptions {\n \n impl File {\n     pub fn open(path: &Path, opts: &OpenOptions) -> io::Result<File> {\n-        let (dir, file) = open_parent(path, wasi::RIGHTS_PATH_OPEN)?;\n+        let (dir, file) = open_parent(path)?;\n         open_at(&dir, &file, opts)\n     }\n \n@@ -452,7 +452,7 @@ impl DirBuilder {\n     }\n \n     pub fn mkdir(&self, p: &Path) -> io::Result<()> {\n-        let (dir, file) = open_parent(p, wasi::RIGHTS_PATH_CREATE_DIRECTORY)?;\n+        let (dir, file) = open_parent(p)?;\n         dir.create_directory(osstr2str(file.as_ref())?)\n     }\n }\n@@ -478,13 +478,13 @@ pub fn readdir(p: &Path) -> io::Result<ReadDir> {\n }\n \n pub fn unlink(p: &Path) -> io::Result<()> {\n-    let (dir, file) = open_parent(p, wasi::RIGHTS_PATH_UNLINK_FILE)?;\n+    let (dir, file) = open_parent(p)?;\n     dir.unlink_file(osstr2str(file.as_ref())?)\n }\n \n pub fn rename(old: &Path, new: &Path) -> io::Result<()> {\n-    let (old, old_file) = open_parent(old, wasi::RIGHTS_PATH_RENAME_SOURCE)?;\n-    let (new, new_file) = open_parent(new, wasi::RIGHTS_PATH_RENAME_TARGET)?;\n+    let (old, old_file) = open_parent(old)?;\n+    let (new, new_file) = open_parent(new)?;\n     old.rename(osstr2str(old_file.as_ref())?, &new, osstr2str(new_file.as_ref())?)\n }\n \n@@ -495,12 +495,12 @@ pub fn set_perm(_p: &Path, _perm: FilePermissions) -> io::Result<()> {\n }\n \n pub fn rmdir(p: &Path) -> io::Result<()> {\n-    let (dir, file) = open_parent(p, wasi::RIGHTS_PATH_REMOVE_DIRECTORY)?;\n+    let (dir, file) = open_parent(p)?;\n     dir.remove_directory(osstr2str(file.as_ref())?)\n }\n \n pub fn readlink(p: &Path) -> io::Result<PathBuf> {\n-    let (dir, file) = open_parent(p, wasi::RIGHTS_PATH_READLINK)?;\n+    let (dir, file) = open_parent(p)?;\n     read_link(&dir, &file)\n }\n \n@@ -536,13 +536,13 @@ fn read_link(fd: &WasiFd, file: &Path) -> io::Result<PathBuf> {\n }\n \n pub fn symlink(src: &Path, dst: &Path) -> io::Result<()> {\n-    let (dst, dst_file) = open_parent(dst, wasi::RIGHTS_PATH_SYMLINK)?;\n+    let (dst, dst_file) = open_parent(dst)?;\n     dst.symlink(osstr2str(src.as_ref())?, osstr2str(dst_file.as_ref())?)\n }\n \n pub fn link(src: &Path, dst: &Path) -> io::Result<()> {\n-    let (src, src_file) = open_parent(src, wasi::RIGHTS_PATH_LINK_SOURCE)?;\n-    let (dst, dst_file) = open_parent(dst, wasi::RIGHTS_PATH_LINK_TARGET)?;\n+    let (src, src_file) = open_parent(src)?;\n+    let (dst, dst_file) = open_parent(dst)?;\n     src.link(\n         wasi::LOOKUPFLAGS_SYMLINK_FOLLOW,\n         osstr2str(src_file.as_ref())?,\n@@ -552,12 +552,12 @@ pub fn link(src: &Path, dst: &Path) -> io::Result<()> {\n }\n \n pub fn stat(p: &Path) -> io::Result<FileAttr> {\n-    let (dir, file) = open_parent(p, wasi::RIGHTS_PATH_FILESTAT_GET)?;\n+    let (dir, file) = open_parent(p)?;\n     metadata_at(&dir, wasi::LOOKUPFLAGS_SYMLINK_FOLLOW, &file)\n }\n \n pub fn lstat(p: &Path) -> io::Result<FileAttr> {\n-    let (dir, file) = open_parent(p, wasi::RIGHTS_PATH_FILESTAT_GET)?;\n+    let (dir, file) = open_parent(p)?;\n     metadata_at(&dir, 0, &file)\n }\n \n@@ -611,11 +611,11 @@ fn open_at(fd: &WasiFd, path: &Path, opts: &OpenOptions) -> io::Result<File> {\n ///\n /// Note that this can fail if `p` doesn't look like it can be opened relative\n /// to any preopened file descriptor.\n-fn open_parent(p: &Path, rights: wasi::Rights) -> io::Result<(ManuallyDrop<WasiFd>, PathBuf)> {\n+fn open_parent(p: &Path) -> io::Result<(ManuallyDrop<WasiFd>, PathBuf)> {\n     let p = CString::new(p.as_os_str().as_bytes())?;\n     unsafe {\n         let mut ret = ptr::null();\n-        let fd = libc::__wasilibc_find_relpath(p.as_ptr(), rights, 0, &mut ret);\n+        let fd = __wasilibc_find_relpath(p.as_ptr(), &mut ret);\n         if fd == -1 {\n             let msg = format!(\n                 \"failed to find a preopened file descriptor \\\n@@ -635,6 +635,13 @@ fn open_parent(p: &Path, rights: wasi::Rights) -> io::Result<(ManuallyDrop<WasiF\n \n         return Ok((ManuallyDrop::new(WasiFd::from_raw(fd as u32)), path));\n     }\n+\n+    extern \"C\" {\n+        pub fn __wasilibc_find_relpath(\n+            path: *const libc::c_char,\n+            relative_path: *mut *const libc::c_char,\n+        ) -> libc::c_int;\n+    }\n }\n \n pub fn osstr2str(f: &OsStr) -> io::Result<&str> {"}]}