{"sha": "3531c52bfe4a1b7c2c284c03f8eefec146698687", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MzFjNTJiZmU0YTFiN2MyYzI4NGMwM2Y4ZWVmZWMxNDY2OTg2ODc=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-07T18:06:48Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-15T16:14:32Z"}, "message": "Factor out range construction in `all_constructors`", "tree": {"sha": "c599b0e4719f4643ea9054f6b5c666a0aa58db2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c599b0e4719f4643ea9054f6b5c666a0aa58db2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3531c52bfe4a1b7c2c284c03f8eefec146698687", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3531c52bfe4a1b7c2c284c03f8eefec146698687", "html_url": "https://github.com/rust-lang/rust/commit/3531c52bfe4a1b7c2c284c03f8eefec146698687", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3531c52bfe4a1b7c2c284c03f8eefec146698687/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f7ba7a05864d9828e13433aca27f8baa43054fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f7ba7a05864d9828e13433aca27f8baa43054fd", "html_url": "https://github.com/rust-lang/rust/commit/8f7ba7a05864d9828e13433aca27f8baa43054fd"}], "stats": {"total": 21, "additions": 5, "deletions": 16}, "files": [{"sha": "bd97ff032f546ab7d1fcbd29f9daa2b879016ee7", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3531c52bfe4a1b7c2c284c03f8eefec146698687/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3531c52bfe4a1b7c2c284c03f8eefec146698687/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=3531c52bfe4a1b7c2c284c03f8eefec146698687", "patch": "@@ -1156,6 +1156,7 @@ fn all_constructors<'a, 'tcx>(\n     pcx: PatCtxt<'tcx>,\n ) -> Vec<Constructor<'tcx>> {\n     debug!(\"all_constructors({:?})\", pcx.ty);\n+    let make_range = |start, end| ConstantRange(start, end, pcx.ty, RangeEnd::Included, pcx.span);\n     match pcx.ty.kind {\n         ty::Bool => [true, false]\n             .iter()\n@@ -1219,20 +1220,8 @@ fn all_constructors<'a, 'tcx>(\n         ty::Char => {\n             vec![\n                 // The valid Unicode Scalar Value ranges.\n-                ConstantRange(\n-                    '\\u{0000}' as u128,\n-                    '\\u{D7FF}' as u128,\n-                    cx.tcx.types.char,\n-                    RangeEnd::Included,\n-                    pcx.span,\n-                ),\n-                ConstantRange(\n-                    '\\u{E000}' as u128,\n-                    '\\u{10FFFF}' as u128,\n-                    cx.tcx.types.char,\n-                    RangeEnd::Included,\n-                    pcx.span,\n-                ),\n+                make_range('\\u{0000}' as u128, '\\u{D7FF}' as u128),\n+                make_range('\\u{E000}' as u128, '\\u{10FFFF}' as u128),\n             ]\n         }\n         ty::Int(_) | ty::Uint(_)\n@@ -1248,12 +1237,12 @@ fn all_constructors<'a, 'tcx>(\n             let bits = Integer::from_attr(&cx.tcx, SignedInt(ity)).size().bits() as u128;\n             let min = 1u128 << (bits - 1);\n             let max = min - 1;\n-            vec![ConstantRange(min, max, pcx.ty, RangeEnd::Included, pcx.span)]\n+            vec![make_range(min, max)]\n         }\n         ty::Uint(uty) => {\n             let size = Integer::from_attr(&cx.tcx, UnsignedInt(uty)).size();\n             let max = truncate(u128::max_value(), size);\n-            vec![ConstantRange(0, max, pcx.ty, RangeEnd::Included, pcx.span)]\n+            vec![make_range(0, max)]\n         }\n         _ => {\n             if cx.is_uninhabited(pcx.ty) {"}]}