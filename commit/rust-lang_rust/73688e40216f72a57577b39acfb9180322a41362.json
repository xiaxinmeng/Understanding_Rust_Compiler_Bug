{"sha": "73688e40216f72a57577b39acfb9180322a41362", "node_id": "C_kwDOAAsO6NoAKDczNjg4ZTQwMjE2ZjcyYTU3NTc3YjM5YWNmYjkxODAzMjJhNDEzNjI", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-05-01T19:22:38Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-05-01T19:22:38Z"}, "message": "* Add documentation for settings page rendering functions.\n* Improve code.\n* Fix some documentation argument types.\n* Make settings order the same as before this PR.\n* Change timeout to 0 so that browser will render it as fast as possible.", "tree": {"sha": "4217c2204898ebf0529b8428e5284ba353f18428", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4217c2204898ebf0529b8428e5284ba353f18428"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73688e40216f72a57577b39acfb9180322a41362", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73688e40216f72a57577b39acfb9180322a41362", "html_url": "https://github.com/rust-lang/rust/commit/73688e40216f72a57577b39acfb9180322a41362", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73688e40216f72a57577b39acfb9180322a41362/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f074dee428889cbe3aa3cad7de8e87949b5c1fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f074dee428889cbe3aa3cad7de8e87949b5c1fb", "html_url": "https://github.com/rust-lang/rust/commit/2f074dee428889cbe3aa3cad7de8e87949b5c1fb"}], "stats": {"total": 120, "additions": 65, "deletions": 55}, "files": [{"sha": "f20061c65dd1b6f94cdfd37d2f371ef819ffaeb9", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/73688e40216f72a57577b39acfb9180322a41362/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/73688e40216f72a57577b39acfb9180322a41362/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=73688e40216f72a57577b39acfb9180322a41362", "patch": "@@ -206,8 +206,8 @@ window.hideSettings = function() {\n  * This function inserts `newNode` after `referenceNode`. It doesn't work if `referenceNode`\n  * doesn't have a parent node.\n  *\n- * @param {DOM} newNode\n- * @param {DOM} referenceNode\n+ * @param {HTMLElement} newNode\n+ * @param {HTMLElement} referenceNode\n  */\n function insertAfter(newNode, referenceNode) {\n     referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n@@ -237,7 +237,7 @@ function getOrCreateSection(id, classes) {\n /**\n  * Returns the `<section>` element which contains the displayed element.\n  *\n- * @return {DOM}\n+ * @return {HTMLElement}\n  */\n function getAlternativeDisplayElem() {\n     return getOrCreateSection(ALTERNATIVE_DISPLAY_ID, \"content hidden\");\n@@ -246,7 +246,7 @@ function getAlternativeDisplayElem() {\n /**\n  * Returns the `<section>` element which contains the not-displayed elements.\n  *\n- * @return {DOM}\n+ * @return {HTMLElement}\n  */\n function getNotDisplayedElem() {\n     return getOrCreateSection(NOT_DISPLAYED_ID, \"hidden\");\n@@ -255,11 +255,11 @@ function getNotDisplayedElem() {\n /**\n  * To nicely switch between displayed \"extra\" elements (such as search results or settings menu)\n  * and to alternate between the displayed and not displayed elements, we hold them in two different\n- * `<section>` elements. They work in pair: one hold the not displayed elements while the other\n+ * `<section>` elements. They work in pair: one holds the hidden elements while the other\n  * contains the displayed element (there can be only one at the same time!). So basically, we switch\n  * elements between the two `<section>` elements.\n  *\n- * @param {DOM} elemToDisplay\n+ * @param {HTMLElement} elemToDisplay\n  */\n function switchDisplayedElement(elemToDisplay) {\n     const el = getAlternativeDisplayElem();"}, {"sha": "a2f8d56fb320b8b3fa8198eecbea0bd1bca7477e", "filename": "src/librustdoc/html/static/js/settings.js", "status": "modified", "additions": 59, "deletions": 49, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/73688e40216f72a57577b39acfb9180322a41362/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "raw_url": "https://github.com/rust-lang/rust/raw/73688e40216f72a57577b39acfb9180322a41362/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js?ref=73688e40216f72a57577b39acfb9180322a41362", "patch": "@@ -96,10 +96,19 @@\n         });\n     }\n \n-    function buildSettings(settings) {\n+    /**\n+     * This function builds the sections inside the \"settings page\". It takes a `settings` list\n+     * as argument which describes each setting and how to render it. It returns a string\n+     * representing the raw HTML.\n+     *\n+     * @param {Array<Object>} settings\n+     *\n+     * @return {string}\n+     */\n+    function buildSettingsPageSections(settings) {\n         let output = \"\";\n \n-        onEach(settings, function(setting) {\n+        for (const setting of settings) {\n             output += `<div class=\"setting-line\">`;\n             const js_data_name = setting[\"js_name\"];\n             const setting_name = setting[\"name\"];\n@@ -130,47 +139,16 @@\n                     <div>${setting_name}</div>`;\n             }\n             output += \"</div>\";\n-        });\n-        return output;\n-    }\n-\n-    function buildSettingsPage(settings) {\n-        // First, we add the settings.css file.\n-        loadCss(\"settings\");\n-\n-        // Then we build the DOM.\n-        const el = document.createElement(\"section\");\n-        el.id = \"settings\";\n-        let innerHTML = `\n-            <div class=\"main-heading\">\n-                <h1 class=\"fqn\">\n-                    <span class=\"in-band\">Rustdoc settings</span>\n-                </h1>\n-                <span class=\"out-of-band\">`;\n-\n-        if (isSettingsPage) {\n-            innerHTML +=\n-                `<a id=\"back\" href=\"javascript:void(0)\" onclick=\"history.back();\">Back</a>`;\n-        } else {\n-            innerHTML +=\n-                `<a id=\"back\" href=\"javascript:void(0)\" onclick=\"switchDisplayedElement(null);\">\\\n-                    Back</a>`;\n-        }\n-        innerHTML += `</span>\n-            </div>\n-            <div class=\"settings\">${buildSettings(settings)}</div>`;\n-\n-        el.innerHTML = innerHTML;\n-\n-        if (isSettingsPage) {\n-            document.getElementById(MAIN_ID).appendChild(el);\n-        } else {\n-            getNotDisplayedElem().appendChild(el);\n         }\n-        return el;\n+        return output;\n     }\n \n-    function createSettingsPage() {\n+    /**\n+     * This function builds the \"settings page\" and returns the generated HTML element.\n+     *\n+     * @return {HTMLElement}\n+     */\n+    function buildSettingsPage() {\n         const themes = getVar(\"themes\").split(\",\");\n         const settings = [\n             {\n@@ -184,18 +162,18 @@\n                 \"default\": \"light\",\n                 \"options\": themes,\n             },\n-            {\n-                \"name\": \"Preferred dark theme\",\n-                \"js_name\": \"preferred-dark-theme\",\n-                \"default\": \"dark\",\n-                \"options\": themes,\n-            },\n             {\n                 \"name\": \"Preferred light theme\",\n                 \"js_name\": \"preferred-light-theme\",\n                 \"default\": \"light\",\n                 \"options\": themes,\n             },\n+            {\n+                \"name\": \"Preferred dark theme\",\n+                \"js_name\": \"preferred-dark-theme\",\n+                \"default\": \"dark\",\n+                \"options\": themes,\n+            },\n             {\n                 \"name\": \"Auto-hide item contents for large items\",\n                 \"js_name\": \"auto-hide-large-items\",\n@@ -228,10 +206,42 @@\n             },\n         ];\n \n-        return buildSettingsPage(settings);\n+        // First, we add the settings.css file.\n+        loadCss(\"settings\");\n+\n+        // Then we build the DOM.\n+        const el = document.createElement(\"section\");\n+        el.id = \"settings\";\n+        let innerHTML = `\n+            <div class=\"main-heading\">\n+                <h1 class=\"fqn\">\n+                    <span class=\"in-band\">Rustdoc settings</span>\n+                </h1>\n+                <span class=\"out-of-band\">`;\n+\n+        if (isSettingsPage) {\n+            innerHTML +=\n+                `<a id=\"back\" href=\"javascript:void(0)\" onclick=\"history.back();\">Back</a>`;\n+        } else {\n+            innerHTML +=\n+                `<a id=\"back\" href=\"javascript:void(0)\" onclick=\"switchDisplayedElement(null);\">\\\n+                    Back</a>`;\n+        }\n+        innerHTML += `</span>\n+            </div>\n+            <div class=\"settings\">${buildSettingsPageSections(settings)}</div>`;\n+\n+        el.innerHTML = innerHTML;\n+\n+        if (isSettingsPage) {\n+            document.getElementById(MAIN_ID).appendChild(el);\n+        } else {\n+            getNotDisplayedElem().appendChild(el);\n+        }\n+        return el;\n     }\n \n-    const settingsMenu = createSettingsPage();\n+    const settingsMenu = buildSettingsPage();\n \n     if (isSettingsPage) {\n         // We replace the existing \"onclick\" callback to do nothing if clicked.\n@@ -261,5 +271,5 @@\n         if (!isSettingsPage) {\n             switchDisplayedElement(settingsMenu);\n         }\n-    }, 10);\n+    }, 0);\n })();"}]}