{"sha": "672d370764862272735466346e9291dbf3163aeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3MmQzNzA3NjQ4NjIyNzI3MzU0NjYzNDZlOTI5MWRiZjMxNjNhZWI=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-08-27T23:28:22Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-08-27T23:28:22Z"}, "message": "Remove `Session.if_let_suggestions`\n\nWe can instead if either the LHS or RHS types contain\n`TyKind::Error`. In addition to covering the case where\nwe would have previously updated `if_let_suggestions`, this might\nalso prevent redundant errors in other cases as well.", "tree": {"sha": "59454261ccd266109afdaff35abe1464184df7d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59454261ccd266109afdaff35abe1464184df7d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/672d370764862272735466346e9291dbf3163aeb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmEpdWoACgkQtAh+UQ6Y\nsWQRkxAAqCeFvh6PpQVM5hNp8T3gbmNL65d45y9C3b/eGLSSaKrSOGhi9qs3lGIw\nAsG7Su0R9stsYgGr8SrR8CQuwwHCNEBU+DNZ/YtlZ85dqGs9Sz6+KiM/nMfytQCF\nWVAHPUeoB1BxnLXPF5h72TQiTDAGqO806m3njVAHSAWR7fKyIdEdJ0MRX11itaeZ\n8wGLwaXXlkDBKXd5vihQu0dSZef5QATyKWO3s6h6zGbGH13LXFPsR7P54F4nG9qO\nwXxTnEGVHADXpQUj1lYZBKFrFxlAiZYNAtKwvyqdfknXqJKQDlOiCJbEtw6f8rDs\nWKwRJuHJRlm45P+jVqMzpoQzoAF5GZcmeLL1/Tl8qNw9D0VMpITNLn+r+6CG9QoW\ne0ZBun/Ap1GINxPIYVfHVWAAKbRuCb63J5+baOJ6C6dbLc7cQ86/SqvAkqpufrcU\nf7VpqLt6Q8vSSUKl15+bl62PGDvZFP8I+8Jyr2WWJvWdnKadWZiqCnWx7XeupSYG\nOmWSfAjeY/2Dqh4Qo9zby6hqSu8sUDC8eri+YWdpKyWYCAy2P861ooghdbS/7MKf\nxqxdKBp3urxvxIiAAqrRYpIMrWS1uCTxFMwfuOwRFHHYiJyot8II5TZRtAzQ8/y8\nZFrphPdXvVk3PlTX0irKvgBTf3PvdzTfjlmdYi/q2K3J8ClG35s=\n=zyGs\n-----END PGP SIGNATURE-----", "payload": "tree 59454261ccd266109afdaff35abe1464184df7d0\nparent dfd84729d6b7060edcb66694e6e44aae9e2ac57d\nauthor Aaron Hill <aa1ronham@gmail.com> 1630106902 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1630106902 -0500\n\nRemove `Session.if_let_suggestions`\n\nWe can instead if either the LHS or RHS types contain\n`TyKind::Error`. In addition to covering the case where\nwe would have previously updated `if_let_suggestions`, this might\nalso prevent redundant errors in other cases as well.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/672d370764862272735466346e9291dbf3163aeb", "html_url": "https://github.com/rust-lang/rust/commit/672d370764862272735466346e9291dbf3163aeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/672d370764862272735466346e9291dbf3163aeb/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfd84729d6b7060edcb66694e6e44aae9e2ac57d", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfd84729d6b7060edcb66694e6e44aae9e2ac57d", "html_url": "https://github.com/rust-lang/rust/commit/dfd84729d6b7060edcb66694e6e44aae9e2ac57d"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "b3601ecf1d3ac79438a48f81191b1999bf4d3875", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/672d370764862272735466346e9291dbf3163aeb/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/672d370764862272735466346e9291dbf3163aeb/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=672d370764862272735466346e9291dbf3163aeb", "patch": "@@ -215,7 +215,6 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                     \"let \".to_string(),\n                     Applicability::MaybeIncorrect,\n                 );\n-                self.r.session.if_let_suggestions.borrow_mut().insert(*span);\n             }\n             _ => {}\n         }"}, {"sha": "18b9339558797bc2b39228eb637a5085b992d008", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/672d370764862272735466346e9291dbf3163aeb/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/672d370764862272735466346e9291dbf3163aeb/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=672d370764862272735466346e9291dbf3163aeb", "patch": "@@ -209,9 +209,6 @@ pub struct Session {\n \n     /// Set of enabled features for the current target.\n     pub target_features: FxHashSet<Symbol>,\n-\n-    /// `Span`s for `if` conditions that we have suggested turning into `if let`.\n-    pub if_let_suggestions: Lock<FxHashSet<Span>>,\n }\n \n pub struct PerfStats {\n@@ -1328,7 +1325,6 @@ pub fn build_session(\n         miri_unleashed_features: Lock::new(Default::default()),\n         asm_arch,\n         target_features: FxHashSet::default(),\n-        if_let_suggestions: Default::default(),\n     };\n \n     validate_commandline_args_with_session_available(&sess);"}, {"sha": "51c646e500ca3850e89eba5f9cc989386303f506", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/672d370764862272735466346e9291dbf3163aeb/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/672d370764862272735466346e9291dbf3163aeb/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=672d370764862272735466346e9291dbf3163aeb", "patch": "@@ -919,9 +919,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 );\n             }\n \n-            if self.sess().if_let_suggestions.borrow().get(&expr.span).is_some() {\n-                // We already emitted an `if let` suggestion due to an identifier not found.\n-                err.delay_as_bug();\n+            // If the assignment expression itself is ill-formed, don't\n+            // bother emitting another error\n+            if lhs_ty.references_error() || rhs_ty.references_error() {\n+                err.delay_as_bug()\n             } else {\n                 err.emit();\n             }"}, {"sha": "b9714b67e58881d1e251f660d8580a9087988725", "filename": "src/test/ui/suggestions/if-let-typo.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/672d370764862272735466346e9291dbf3163aeb/src%2Ftest%2Fui%2Fsuggestions%2Fif-let-typo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/672d370764862272735466346e9291dbf3163aeb/src%2Ftest%2Fui%2Fsuggestions%2Fif-let-typo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fif-let-typo.rs?ref=672d370764862272735466346e9291dbf3163aeb", "patch": "@@ -10,4 +10,5 @@ fn main() {\n     if Some(3) = foo {} //~ ERROR mismatched types\n     //~^ ERROR destructuring assignments are unstable\n     //~^^ ERROR invalid left-hand side of assignment\n+    if x = 5 {}  //~ ERROR cannot find value `x` in this scope\n }"}, {"sha": "7f71cb485815fc75949fd94f3b29a27d591a7b04", "filename": "src/test/ui/suggestions/if-let-typo.stderr", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/672d370764862272735466346e9291dbf3163aeb/src%2Ftest%2Fui%2Fsuggestions%2Fif-let-typo.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/672d370764862272735466346e9291dbf3163aeb/src%2Ftest%2Fui%2Fsuggestions%2Fif-let-typo.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fif-let-typo.stderr?ref=672d370764862272735466346e9291dbf3163aeb", "patch": "@@ -9,6 +9,17 @@ help: you might have meant to use pattern matching\n LL |     if let Some(x) = foo {}\n    |        +++\n \n+error[E0425]: cannot find value `x` in this scope\n+  --> $DIR/if-let-typo.rs:13:8\n+   |\n+LL |     if x = 5 {}\n+   |        ^ not found in this scope\n+   |\n+help: you might have meant to use pattern matching\n+   |\n+LL |     if let x = 5 {}\n+   |        +++\n+\n error[E0658]: destructuring assignments are unstable\n   --> $DIR/if-let-typo.rs:4:16\n    |\n@@ -79,7 +90,7 @@ error[E0308]: mismatched types\n LL |     if Some(3) = foo {}\n    |        ^^^^^^^^^^^^^ expected `bool`, found `()`\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 10 previous errors\n \n Some errors have detailed explanations: E0070, E0308, E0425, E0658.\n For more information about an error, try `rustc --explain E0070`."}]}