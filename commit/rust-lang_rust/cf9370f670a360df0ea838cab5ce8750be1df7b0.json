{"sha": "cf9370f670a360df0ea838cab5ce8750be1df7b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmOTM3MGY2NzBhMzYwZGYwZWE4MzhjYWI1Y2U4NzUwYmUxZGY3YjA=", "commit": {"author": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T11:41:35Z"}, "committer": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T15:22:32Z"}, "message": "clean tests/ui/lifetimes.rs\n\nCleaning the empty lines for clarity.", "tree": {"sha": "a1a5e271d2f9a312883fa5dbbf0b82391b5dcc6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1a5e271d2f9a312883fa5dbbf0b82391b5dcc6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf9370f670a360df0ea838cab5ce8750be1df7b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf9370f670a360df0ea838cab5ce8750be1df7b0", "html_url": "https://github.com/rust-lang/rust/commit/cf9370f670a360df0ea838cab5ce8750be1df7b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf9370f670a360df0ea838cab5ce8750be1df7b0/comments", "author": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2df0161973ee47095b4082c6869760fa489b556b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2df0161973ee47095b4082c6869760fa489b556b", "html_url": "https://github.com/rust-lang/rust/commit/2df0161973ee47095b4082c6869760fa489b556b"}], "stats": {"total": 68, "additions": 30, "deletions": 38}, "files": [{"sha": "e10fd590e6c14fdb28a162867535e2d5ec82590a", "filename": "tests/ui/lifetimes.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cf9370f670a360df0ea838cab5ce8750be1df7b0/tests%2Fui%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf9370f670a360df0ea838cab5ce8750be1df7b0/tests%2Fui%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.rs?ref=cf9370f670a360df0ea838cab5ce8750be1df7b0", "patch": "@@ -6,10 +6,8 @@\n \n fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) { }\n \n-\n fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) { }\n \n-\n fn same_lifetime_on_input<'a>(_x: &'a u8, _y: &'a u8) { } // no error, same lifetime on two params\n \n fn only_static_on_input(_x: &u8, _y: &u8, _z: &'static u8) { } // no error, static involved\n@@ -18,7 +16,6 @@ fn mut_and_static_input(_x: &mut u8, _y: &'static str) { }\n \n fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 { x }\n \n-\n fn multiple_in_and_out_1<'a>(x: &'a u8, _y: &'a u8) -> &'a u8 { x } // no error, multiple input refs\n \n fn multiple_in_and_out_2<'a, 'b>(x: &'a u8, _y: &'b u8) -> &'a u8 { x } // no error, multiple input refs\n@@ -31,18 +28,15 @@ fn deep_reference_2<'a>(x: Result<&'a u8, &'a u8>) -> &'a u8 { x.unwrap() } // n\n \n fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> { Ok(x) }\n \n-\n // where clause, but without lifetimes\n fn where_clause_without_lt<'a, T>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> where T: Copy { Ok(x) }\n \n-\n type Ref<'r> = &'r u8;\n \n fn lifetime_param_1<'a>(_x: Ref<'a>, _y: &'a u8) { } // no error, same lifetime on two params\n \n fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) { }\n \n-\n fn lifetime_param_3<'a, 'b: 'a>(_x: Ref<'a>, _y: &'b u8) { } // no error, bounded lifetime\n \n fn lifetime_param_4<'a, 'b>(_x: Ref<'a>, _y: &'b u8) where 'b: 'a { } // no error, bounded lifetime\n@@ -66,12 +60,10 @@ struct X {\n impl X {\n     fn self_and_out<'s>(&'s self) -> &'s u8 { &self.x }\n \n-\n     fn self_and_in_out<'s, 't>(&'s self, _x: &'t u8) -> &'s u8 { &self.x } // no error, multiple input refs\n \n     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) { }\n \n-\n     fn self_and_same_in<'s>(&'s self, _x: &'s u8) { } // no error, same lifetimes on two params\n }\n "}, {"sha": "f80335af5634fd78331a67f4d13bde1f27a71b12", "filename": "tests/ui/lifetimes.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/cf9370f670a360df0ea838cab5ce8750be1df7b0/tests%2Fui%2Flifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cf9370f670a360df0ea838cab5ce8750be1df7b0/tests%2Fui%2Flifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.stderr?ref=cf9370f670a360df0ea838cab5ce8750be1df7b0", "patch": "@@ -11,83 +11,83 @@ note: lint level defined here\n   |         ^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:10:1\n-   |\n-10 | fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+ --> $DIR/lifetimes.rs:9:1\n+  |\n+9 | fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) { }\n+  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:19:1\n+  --> $DIR/lifetimes.rs:17:1\n    |\n-19 | fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 { x }\n+17 | fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 { x }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:32:1\n+  --> $DIR/lifetimes.rs:29:1\n    |\n-32 | fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> { Ok(x) }\n+29 | fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> { Ok(x) }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:36:1\n+  --> $DIR/lifetimes.rs:32:1\n    |\n-36 | fn where_clause_without_lt<'a, T>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> where T: Copy { Ok(x) }\n+32 | fn where_clause_without_lt<'a, T>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> where T: Copy { Ok(x) }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:43:1\n+  --> $DIR/lifetimes.rs:38:1\n    |\n-43 | fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) { }\n+38 | fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:58:1\n+  --> $DIR/lifetimes.rs:52:1\n    |\n-58 | / fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n-59 | |     where for<'x> F: Fn(Lt<'x, I>) -> Lt<'x, I>\n-60 | | { unreachable!() }\n+52 | / fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n+53 | |     where for<'x> F: Fn(Lt<'x, I>) -> Lt<'x, I>\n+54 | | { unreachable!() }\n    | |__________________^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:67:5\n+  --> $DIR/lifetimes.rs:61:5\n    |\n-67 |     fn self_and_out<'s>(&'s self) -> &'s u8 { &self.x }\n+61 |     fn self_and_out<'s>(&'s self) -> &'s u8 { &self.x }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:72:5\n+  --> $DIR/lifetimes.rs:65:5\n    |\n-72 |     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) { }\n+65 |     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:89:1\n+  --> $DIR/lifetimes.rs:81:1\n    |\n-89 | fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str { unimplemented!() }\n+81 | fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str { unimplemented!() }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:109:1\n+   --> $DIR/lifetimes.rs:101:1\n     |\n-109 | fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str { unimplemented!() }\n+101 | fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:113:1\n+   --> $DIR/lifetimes.rs:105:1\n     |\n-113 | fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str { unimplemented!() }\n+105 | fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:124:1\n+   --> $DIR/lifetimes.rs:116:1\n     |\n-124 | fn named_input_elided_output<'a>(_arg: &'a str) -> &str { unimplemented!() }\n+116 | fn named_input_elided_output<'a>(_arg: &'a str) -> &str { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:128:1\n+   --> $DIR/lifetimes.rs:120:1\n     |\n-128 | fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) { unimplemented!() }\n+120 | fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 14 previous errors"}]}