{"sha": "3a5a93595f92d9df7fcb7e70ae26eadafb148f1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNWE5MzU5NWY5MmQ5ZGY3ZmNiN2U3MGFlMjZlYWRhZmIxNDhmMWY=", "commit": {"author": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-08-22T12:31:37Z"}, "committer": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-08-22T12:31:37Z"}, "message": "Fix typos \u201ca\u201d\u2192\u201can\u201d", "tree": {"sha": "c53eaa22fe5fdb3990333a62d9d9aa5e824e3d31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c53eaa22fe5fdb3990333a62d9d9aa5e824e3d31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a5a93595f92d9df7fcb7e70ae26eadafb148f1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a5a93595f92d9df7fcb7e70ae26eadafb148f1f", "html_url": "https://github.com/rust-lang/rust/commit/3a5a93595f92d9df7fcb7e70ae26eadafb148f1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a5a93595f92d9df7fcb7e70ae26eadafb148f1f/comments", "author": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e535791756e4ca8b5b610afa9c0cc1dc5fde9906", "url": "https://api.github.com/repos/rust-lang/rust/commits/e535791756e4ca8b5b610afa9c0cc1dc5fde9906", "html_url": "https://github.com/rust-lang/rust/commit/e535791756e4ca8b5b610afa9c0cc1dc5fde9906"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "000daf76c25edcd83f9caae0f2e931cad2d3aebb", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a5a93595f92d9df7fcb7e70ae26eadafb148f1f/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a5a93595f92d9df7fcb7e70ae26eadafb148f1f/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=3a5a93595f92d9df7fcb7e70ae26eadafb148f1f", "patch": "@@ -203,7 +203,7 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         self.imp.ancestors_at_offset_with_macros(node, offset)\n     }\n \n-    /// Find a AstNode by offset inside SyntaxNode, if it is inside *Macrofile*,\n+    /// Find an AstNode by offset inside SyntaxNode, if it is inside *Macrofile*,\n     /// search up until it is of the target AstNode type\n     pub fn find_node_at_offset_with_macros<N: AstNode>(\n         &self,\n@@ -213,7 +213,7 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         self.imp.ancestors_at_offset_with_macros(node, offset).find_map(N::cast)\n     }\n \n-    /// Find a AstNode by offset inside SyntaxNode, if it is inside *MacroCall*,\n+    /// Find an AstNode by offset inside SyntaxNode, if it is inside *MacroCall*,\n     /// descend it and find again\n     pub fn find_node_at_offset_with_descend<N: AstNode>(\n         &self,"}, {"sha": "899a8b793db5c70616480e78c9a298b37e2bd2ae", "filename": "crates/hir_ty/src/diagnostics/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a5a93595f92d9df7fcb7e70ae26eadafb148f1f/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a5a93595f92d9df7fcb7e70ae26eadafb148f1f/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs?ref=3a5a93595f92d9df7fcb7e70ae26eadafb148f1f", "patch": "@@ -280,7 +280,7 @@ impl ExprValidator {\n         for arm in arms {\n             if let Some(pat_ty) = infer.type_of_pat.get(arm.pat) {\n                 // We only include patterns whose type matches the type\n-                // of the match expression. If we had a InvalidMatchArmPattern\n+                // of the match expression. If we had an InvalidMatchArmPattern\n                 // diagnostic or similar we could raise that in an else\n                 // block here.\n                 //"}, {"sha": "9e22dae072ce39dc7b261298758c2e8ad1b9b5b5", "filename": "crates/ide_completion/src/completions/trait_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a5a93595f92d9df7fcb7e70ae26eadafb148f1f/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a5a93595f92d9df7fcb7e70ae26eadafb148f1f/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs?ref=3a5a93595f92d9df7fcb7e70ae26eadafb148f1f", "patch": "@@ -1,7 +1,7 @@\n //! Completion for associated items in a trait implementation.\n //!\n //! This module adds the completion items related to implementing associated\n-//! items within a `impl Trait for Struct` block. The current context node\n+//! items within an `impl Trait for Struct` block. The current context node\n //! must be within either a `FN`, `TYPE_ALIAS`, or `CONST` node\n //! and an direct child of an `IMPL`.\n //!"}, {"sha": "14747cc72f9e3983a0ef576c7741ac3694b4767f", "filename": "crates/paths/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a5a93595f92d9df7fcb7e70ae26eadafb148f1f/crates%2Fpaths%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a5a93595f92d9df7fcb7e70ae26eadafb148f1f/crates%2Fpaths%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fpaths%2Fsrc%2Flib.rs?ref=3a5a93595f92d9df7fcb7e70ae26eadafb148f1f", "patch": "@@ -98,7 +98,7 @@ impl AbsPathBuf {\n             .unwrap_or_else(|path| panic!(\"expected absolute path, got {}\", path.display()))\n     }\n \n-    /// Coerces to a `AbsPath` slice.\n+    /// Coerces to an `AbsPath` slice.\n     ///\n     /// Equivalent of [`PathBuf::as_path`] for `AbsPathBuf`.\n     pub fn as_path(&self) -> &AbsPath {"}]}