{"sha": "83acbc06bd01cd7045566170148e2150f568f77c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzYWNiYzA2YmQwMWNkNzA0NTU2NjE3MDE0OGUyMTUwZjU2OGY3N2M=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-29T23:39:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-29T23:39:26Z"}, "message": "No need to Arc reds, they are rooted anyways", "tree": {"sha": "4a9430802ea3786c8f1820a57637d24618ae0f43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a9430802ea3786c8f1820a57637d24618ae0f43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83acbc06bd01cd7045566170148e2150f568f77c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83acbc06bd01cd7045566170148e2150f568f77c", "html_url": "https://github.com/rust-lang/rust/commit/83acbc06bd01cd7045566170148e2150f568f77c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83acbc06bd01cd7045566170148e2150f568f77c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e79073e3872df718eb189dd5301ffc000f87d58", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e79073e3872df718eb189dd5301ffc000f87d58", "html_url": "https://github.com/rust-lang/rust/commit/4e79073e3872df718eb189dd5301ffc000f87d58"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "3002153ca39c327511dc6bf1270ce10def96ee62", "filename": "src/yellow/red.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/83acbc06bd01cd7045566170148e2150f568f77c/src%2Fyellow%2Fred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83acbc06bd01cd7045566170148e2150f568f77c/src%2Fyellow%2Fred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fyellow%2Fred.rs?ref=83acbc06bd01cd7045566170148e2150f568f77c", "patch": "@@ -1,4 +1,7 @@\n-use std::sync::{Arc, RwLock};\n+use std::{\n+    ptr,\n+    sync::RwLock,\n+};\n use {\n     TextUnit,\n     yellow::GreenNode,\n@@ -8,7 +11,7 @@ use {\n pub(crate) struct RedNode {\n     green: GreenNode,\n     parent: Option<ParentData>,\n-    children: RwLock<Vec<Option<Arc<RedNode>>>>,\n+    children: RwLock<Vec<Option<Box<RedNode>>>>,\n }\n \n #[derive(Debug)]\n@@ -43,7 +46,8 @@ impl RedNode {\n         green: GreenNode,\n         parent: Option<ParentData>,\n     ) -> RedNode {\n-        let children = vec![None; green.children().len()];\n+        let n_children = green.children().len();\n+        let children = (0..n_children).map(|_| None).collect();\n         RedNode { green, parent, children: RwLock::new(children) }\n     }\n \n@@ -62,9 +66,9 @@ impl RedNode {\n         self.green.children().len()\n     }\n \n-    pub(crate) fn nth_child(&self, idx: usize) -> Arc<RedNode> {\n+    pub(crate) fn nth_child(&self, idx: usize) -> ptr::NonNull<RedNode> {\n         match &self.children.read().unwrap()[idx] {\n-            Some(child) => return child.clone(),\n+            Some(child) => return ptr::NonNull::from(&**child),\n             None => (),\n         }\n         let mut children = self.children.write().unwrap();\n@@ -73,8 +77,9 @@ impl RedNode {\n             let start_offset = self.start_offset()\n                 + green_children[..idx].iter().map(|x| x.text_len()).sum::<TextUnit>();\n             let child = RedNode::new_child(green_children[idx].clone(), self, start_offset, idx);\n-            children[idx] = Some(Arc::new(child))\n+            children[idx] = Some(Box::new(child))\n         }\n-        children[idx].as_ref().unwrap().clone()\n+        let child = children[idx].as_ref().unwrap();\n+        ptr::NonNull::from(&**child)\n     }\n }"}, {"sha": "cc61226899f416ea0b84a3ac3c16f35115ff0289", "filename": "src/yellow/syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83acbc06bd01cd7045566170148e2150f568f77c/src%2Fyellow%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83acbc06bd01cd7045566170148e2150f568f77c/src%2Fyellow%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fyellow%2Fsyntax.rs?ref=83acbc06bd01cd7045566170148e2150f568f77c", "patch": "@@ -60,7 +60,7 @@ impl SyntaxNode {\n         for i in 0..n_children {\n             res.push(SyntaxNode {\n                 root: self.root.clone(),\n-                red: (&*red.nth_child(i)).into(),\n+                red: red.nth_child(i),\n             });\n         }\n         res"}]}