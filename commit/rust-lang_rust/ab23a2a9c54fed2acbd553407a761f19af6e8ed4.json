{"sha": "ab23a2a9c54fed2acbd553407a761f19af6e8ed4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiMjNhMmE5YzU0ZmVkMmFjYmQ1NTM0MDdhNzYxZjE5YWY2ZThlZDQ=", "commit": {"author": {"name": "Kristofer Rye", "email": "kristofer.rye@gmail.com", "date": "2020-07-16T18:32:46Z"}, "committer": {"name": "Kristofer Rye", "email": "kristofer.rye@gmail.com", "date": "2020-07-16T23:06:31Z"}, "message": "ci: Set `shell: bash` as a default, remove duplicates\n\nA follow-up to #74406, this commit merely removes the `shell: bash`\nlines where they are explicitly added in favor of setting defaults for\n*all* \"run\" steps.\n\nSigned-off-by: Kristofer Rye <kristofer.rye@gmail.com>", "tree": {"sha": "24d08215d6c1b183ecd51d4b34b3659ff48832a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24d08215d6c1b183ecd51d4b34b3659ff48832a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab23a2a9c54fed2acbd553407a761f19af6e8ed4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEU6YNMqS+Li/ArfueKVTGmH5nroQFAl8Q3XcACgkQKVTGmH5n\nroTkVgf/QWePQP0yteHvbXfbAM4r4b+ReWimYnp2B0B8vEyB70F0JEGeVDXCfD/Q\nBdQsDKyoyQcBKeVaDf6TW2EoNGOHYFgkip3vLDSRJmftM6dCGpnUAm36E7oRyu+m\n+wrVb7OBUTsjNhE86yoZPa+FJBgtNrCjBC9KXBzA5u8zRce7Jq2B62Q6jma1EmlU\n91sqegdWICaJd9N8c93ji13DdlxvKJ9dQ1iC6WAKsK5EFYjlcs7B/Qv34R7RHSsY\nCbzfWxwgF9TZ6ocIrXrVUOPVk7Lv6UBQ8s7YeMIY2BVveuIG+3IuLMpVSgvsIty/\nTJqDfQ/tZ6utKcisIHSnaUqGp99H9A==\n=fyuI\n-----END PGP SIGNATURE-----", "payload": "tree 24d08215d6c1b183ecd51d4b34b3659ff48832a4\nparent 5c9e5df3a097e094641f16dab501ab1c4da10e9f\nauthor Kristofer Rye <kristofer.rye@gmail.com> 1594924366 -0500\ncommitter Kristofer Rye <kristofer.rye@gmail.com> 1594940791 -0500\n\nci: Set `shell: bash` as a default, remove duplicates\n\nA follow-up to #74406, this commit merely removes the `shell: bash`\nlines where they are explicitly added in favor of setting defaults for\n*all* \"run\" steps.\n\nSigned-off-by: Kristofer Rye <kristofer.rye@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab23a2a9c54fed2acbd553407a761f19af6e8ed4", "html_url": "https://github.com/rust-lang/rust/commit/ab23a2a9c54fed2acbd553407a761f19af6e8ed4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab23a2a9c54fed2acbd553407a761f19af6e8ed4/comments", "author": {"login": "rye", "id": 1566689, "node_id": "MDQ6VXNlcjE1NjY2ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/1566689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rye", "html_url": "https://github.com/rye", "followers_url": "https://api.github.com/users/rye/followers", "following_url": "https://api.github.com/users/rye/following{/other_user}", "gists_url": "https://api.github.com/users/rye/gists{/gist_id}", "starred_url": "https://api.github.com/users/rye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rye/subscriptions", "organizations_url": "https://api.github.com/users/rye/orgs", "repos_url": "https://api.github.com/users/rye/repos", "events_url": "https://api.github.com/users/rye/events{/privacy}", "received_events_url": "https://api.github.com/users/rye/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rye", "id": 1566689, "node_id": "MDQ6VXNlcjE1NjY2ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/1566689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rye", "html_url": "https://github.com/rye", "followers_url": "https://api.github.com/users/rye/followers", "following_url": "https://api.github.com/users/rye/following{/other_user}", "gists_url": "https://api.github.com/users/rye/gists{/gist_id}", "starred_url": "https://api.github.com/users/rye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rye/subscriptions", "organizations_url": "https://api.github.com/users/rye/orgs", "repos_url": "https://api.github.com/users/rye/repos", "events_url": "https://api.github.com/users/rye/events{/privacy}", "received_events_url": "https://api.github.com/users/rye/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c9e5df3a097e094641f16dab501ab1c4da10e9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c9e5df3a097e094641f16dab501ab1c4da10e9f", "html_url": "https://github.com/rust-lang/rust/commit/5c9e5df3a097e094641f16dab501ab1c4da10e9f"}], "stats": {"total": 115, "additions": 15, "deletions": 100}, "files": [{"sha": "9cf0f4dbd1e4cdc71e23735908a4e5e32ecd03f7", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 12, "deletions": 80, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/ab23a2a9c54fed2acbd553407a761f19af6e8ed4/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/ab23a2a9c54fed2acbd553407a761f19af6e8ed4/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=ab23a2a9c54fed2acbd553407a761f19af6e8ed4", "patch": "@@ -51,10 +51,12 @@ jobs:\n             os: ubuntu-latest-xl\n     timeout-minutes: 600\n     runs-on: \"${{ matrix.os }}\"\n+    defaults:\n+      run:\n+        shell: bash\n     steps:\n       - name: disable git crlf conversion\n         run: git config --global core.autocrlf false\n-        shell: bash\n       - name: checkout the source code\n         uses: actions/checkout@v1\n         with:\n@@ -66,85 +68,66 @@ jobs:\n         if: \"success() && !env.SKIP_JOB && github.ref != 'refs/heads/try'\"\n       - name: add extra environment variables\n         run: src/ci/scripts/setup-environment.sh\n-        shell: bash\n         env:\n           EXTRA_VARIABLES: \"${{ toJson(matrix.env) }}\"\n         if: success() && !env.SKIP_JOB\n       - name: decide whether to skip this job\n         run: src/ci/scripts/should-skip-this.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: collect CPU statistics\n         run: src/ci/scripts/collect-cpu-stats.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: show the current environment\n         run: src/ci/scripts/dump-environment.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install awscli\n         run: src/ci/scripts/install-awscli.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MSYS2\n         run: src/ci/scripts/install-msys2.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MinGW\n         run: src/ci/scripts/install-mingw.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install ninja\n         run: src/ci/scripts/install-ninja.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: enable ipv6 on Docker\n         run: src/ci/scripts/enable-docker-ipv6.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: checkout submodules\n         run: src/ci/scripts/checkout-submodules.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure line endings are correct\n         run: src/ci/scripts/verify-line-endings.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: run the build\n         run: src/ci/scripts/run-build-from-ci.sh\n-        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.CACHES_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n         if: success() && !env.SKIP_JOB\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n-        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n@@ -170,10 +153,12 @@ jobs:\n             env: {}\n     timeout-minutes: 600\n     runs-on: \"${{ matrix.os }}\"\n+    defaults:\n+      run:\n+        shell: bash\n     steps:\n       - name: disable git crlf conversion\n         run: git config --global core.autocrlf false\n-        shell: bash\n       - name: checkout the source code\n         uses: actions/checkout@v1\n         with:\n@@ -185,85 +170,66 @@ jobs:\n         if: \"success() && !env.SKIP_JOB && github.ref != 'refs/heads/try'\"\n       - name: add extra environment variables\n         run: src/ci/scripts/setup-environment.sh\n-        shell: bash\n         env:\n           EXTRA_VARIABLES: \"${{ toJson(matrix.env) }}\"\n         if: success() && !env.SKIP_JOB\n       - name: decide whether to skip this job\n         run: src/ci/scripts/should-skip-this.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: collect CPU statistics\n         run: src/ci/scripts/collect-cpu-stats.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: show the current environment\n         run: src/ci/scripts/dump-environment.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install awscli\n         run: src/ci/scripts/install-awscli.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MSYS2\n         run: src/ci/scripts/install-msys2.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MinGW\n         run: src/ci/scripts/install-mingw.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install ninja\n         run: src/ci/scripts/install-ninja.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: enable ipv6 on Docker\n         run: src/ci/scripts/enable-docker-ipv6.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: checkout submodules\n         run: src/ci/scripts/checkout-submodules.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure line endings are correct\n         run: src/ci/scripts/verify-line-endings.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: run the build\n         run: src/ci/scripts/run-build-from-ci.sh\n-        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.CACHES_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n         if: success() && !env.SKIP_JOB\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n-        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n@@ -507,10 +473,12 @@ jobs:\n             os: windows-latest-xl\n     timeout-minutes: 600\n     runs-on: \"${{ matrix.os }}\"\n+    defaults:\n+      run:\n+        shell: bash\n     steps:\n       - name: disable git crlf conversion\n         run: git config --global core.autocrlf false\n-        shell: bash\n       - name: checkout the source code\n         uses: actions/checkout@v1\n         with:\n@@ -522,85 +490,66 @@ jobs:\n         if: \"success() && !env.SKIP_JOB && github.ref != 'refs/heads/try'\"\n       - name: add extra environment variables\n         run: src/ci/scripts/setup-environment.sh\n-        shell: bash\n         env:\n           EXTRA_VARIABLES: \"${{ toJson(matrix.env) }}\"\n         if: success() && !env.SKIP_JOB\n       - name: decide whether to skip this job\n         run: src/ci/scripts/should-skip-this.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: collect CPU statistics\n         run: src/ci/scripts/collect-cpu-stats.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: show the current environment\n         run: src/ci/scripts/dump-environment.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install awscli\n         run: src/ci/scripts/install-awscli.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MSYS2\n         run: src/ci/scripts/install-msys2.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MinGW\n         run: src/ci/scripts/install-mingw.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install ninja\n         run: src/ci/scripts/install-ninja.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: enable ipv6 on Docker\n         run: src/ci/scripts/enable-docker-ipv6.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: checkout submodules\n         run: src/ci/scripts/checkout-submodules.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure line endings are correct\n         run: src/ci/scripts/verify-line-endings.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: run the build\n         run: src/ci/scripts/run-build-from-ci.sh\n-        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.CACHES_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n         if: success() && !env.SKIP_JOB\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n-        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n@@ -652,10 +601,12 @@ jobs:\n             os: macos-latest\n     timeout-minutes: 600\n     runs-on: \"${{ matrix.os }}\"\n+    defaults:\n+      run:\n+        shell: bash\n     steps:\n       - name: disable git crlf conversion\n         run: git config --global core.autocrlf false\n-        shell: bash\n       - name: checkout the source code\n         uses: actions/checkout@v1\n         with:\n@@ -667,85 +618,66 @@ jobs:\n         if: \"success() && !env.SKIP_JOB && github.ref != 'refs/heads/try'\"\n       - name: add extra environment variables\n         run: src/ci/scripts/setup-environment.sh\n-        shell: bash\n         env:\n           EXTRA_VARIABLES: \"${{ toJson(matrix.env) }}\"\n         if: success() && !env.SKIP_JOB\n       - name: decide whether to skip this job\n         run: src/ci/scripts/should-skip-this.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: collect CPU statistics\n         run: src/ci/scripts/collect-cpu-stats.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: show the current environment\n         run: src/ci/scripts/dump-environment.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install awscli\n         run: src/ci/scripts/install-awscli.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MSYS2\n         run: src/ci/scripts/install-msys2.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MinGW\n         run: src/ci/scripts/install-mingw.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install ninja\n         run: src/ci/scripts/install-ninja.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: enable ipv6 on Docker\n         run: src/ci/scripts/enable-docker-ipv6.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: checkout submodules\n         run: src/ci/scripts/checkout-submodules.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure line endings are correct\n         run: src/ci/scripts/verify-line-endings.sh\n-        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: run the build\n         run: src/ci/scripts/run-build-from-ci.sh\n-        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.CACHES_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n         if: success() && !env.SKIP_JOB\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n-        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\""}, {"sha": "e8036b8c1207593b7ca1cd67781904ae7e3cda2e", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 3, "deletions": 20, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ab23a2a9c54fed2acbd553407a761f19af6e8ed4/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/ab23a2a9c54fed2acbd553407a761f19af6e8ed4/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=ab23a2a9c54fed2acbd553407a761f19af6e8ed4", "patch": "@@ -75,11 +75,13 @@ x--expand-yaml-anchors--remove:\n   - &base-ci-job\n     timeout-minutes: 600\n     runs-on: \"${{ matrix.os }}\"\n+    defaults:\n+      run:\n+        shell: bash\n     env: *shared-ci-variables\n     steps:\n       - name: disable git crlf conversion\n         run: git config --global core.autocrlf false\n-        shell: bash\n \n       - name: checkout the source code\n         uses: actions/checkout@v1\n@@ -95,7 +97,6 @@ x--expand-yaml-anchors--remove:\n \n       - name: add extra environment variables\n         run: src/ci/scripts/setup-environment.sh\n-        shell: bash\n         env:\n           # Since it's not possible to merge `${{ matrix.env }}` with the other\n           # variables in `job.<name>.env`, the variables defined in the matrix\n@@ -106,67 +107,54 @@ x--expand-yaml-anchors--remove:\n \n       - name: decide whether to skip this job\n         run: src/ci/scripts/should-skip-this.sh\n-        shell: bash\n         <<: *step\n \n       - name: collect CPU statistics\n         run: src/ci/scripts/collect-cpu-stats.sh\n-        shell: bash\n         <<: *step\n \n       - name: show the current environment\n         run: src/ci/scripts/dump-environment.sh\n-        shell: bash\n         <<: *step\n \n       - name: install awscli\n         run: src/ci/scripts/install-awscli.sh\n-        shell: bash\n         <<: *step\n \n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n-        shell: bash\n         <<: *step\n \n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n-        shell: bash\n         <<: *step\n \n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n-        shell: bash\n         <<: *step\n \n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n-        shell: bash\n         <<: *step\n \n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: bash\n         <<: *step\n \n       - name: install MSYS2\n         run: src/ci/scripts/install-msys2.sh\n-        shell: bash\n         <<: *step\n \n       - name: install MinGW\n         run: src/ci/scripts/install-mingw.sh\n-        shell: bash\n         <<: *step\n \n       - name: install ninja\n         run: src/ci/scripts/install-ninja.sh\n-        shell: bash\n         <<: *step\n \n       - name: enable ipv6 on Docker\n         run: src/ci/scripts/enable-docker-ipv6.sh\n-        shell: bash\n         <<: *step\n \n       # Disable automatic line ending conversion (again). On Windows, when we're\n@@ -176,22 +164,18 @@ x--expand-yaml-anchors--remove:\n       # appropriate line endings.\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: bash\n         <<: *step\n \n       - name: checkout submodules\n         run: src/ci/scripts/checkout-submodules.sh\n-        shell: bash\n         <<: *step\n \n       - name: ensure line endings are correct\n         run: src/ci/scripts/verify-line-endings.sh\n-        shell: bash\n         <<: *step\n \n       - name: run the build\n         run: src/ci/scripts/run-build-from-ci.sh\n-        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: ${{ env.CACHES_AWS_ACCESS_KEY_ID }}\n           AWS_SECRET_ACCESS_KEY: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\n@@ -200,7 +184,6 @@ x--expand-yaml-anchors--remove:\n \n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n-        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: ${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\n           AWS_SECRET_ACCESS_KEY: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}"}]}