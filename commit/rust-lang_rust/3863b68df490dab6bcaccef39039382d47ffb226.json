{"sha": "3863b68df490dab6bcaccef39039382d47ffb226", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4NjNiNjhkZjQ5MGRhYjZiY2FjY2VmMzkwMzkzODJkNDdmZmIyMjY=", "commit": {"author": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-09-16T02:06:27Z"}, "committer": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-09-17T02:21:42Z"}, "message": "Propagate restrictions against struct literals to the RHS of assignments\n\nThis prevents confusing errors when accidentally using an assignment\nin an `if` expression.  For example:\n\n```rust\nfn main() {\n    let x = 1u;\n    if x = x {\n        println!(\"{}\", x);\n    }\n}\n```\n\nPreviously, this yielded:\n\n```\ntest.rs:4:16: 4:17 error: expected `:`, found `!`\ntest.rs:4         println!(\"{}\", x);\n                         ^\n```\n\nWith this change, it now yields:\n\n```\ntest.rs:3:8: 3:13 error: mismatched types: expected `bool`, found `()` (expected bool, found ())\ntest.rs:3     if x = x {\n                 ^~~~~\n```\n\nCloses issue #17283", "tree": {"sha": "91bf44046d8205bb4837fe75d4ecd74a6c138263", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91bf44046d8205bb4837fe75d4ecd74a6c138263"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3863b68df490dab6bcaccef39039382d47ffb226", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3863b68df490dab6bcaccef39039382d47ffb226", "html_url": "https://github.com/rust-lang/rust/commit/3863b68df490dab6bcaccef39039382d47ffb226", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3863b68df490dab6bcaccef39039382d47ffb226/comments", "author": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99293b16e46a14e4fb49ab2ebd02a521634c2b44", "url": "https://api.github.com/repos/rust-lang/rust/commits/99293b16e46a14e4fb49ab2ebd02a521634c2b44", "html_url": "https://github.com/rust-lang/rust/commit/99293b16e46a14e4fb49ab2ebd02a521634c2b44"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "c5efb6e5571db94938b370547e310e802bd6d5ca", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3863b68df490dab6bcaccef39039382d47ffb226/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3863b68df490dab6bcaccef39039382d47ffb226/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=3863b68df490dab6bcaccef39039382d47ffb226", "patch": "@@ -2692,15 +2692,16 @@ impl<'a> Parser<'a> {\n     pub fn parse_assign_expr(&mut self) -> P<Expr> {\n         let lo = self.span.lo;\n         let lhs = self.parse_binops();\n+        let restrictions = self.restrictions & RestrictionNoStructLiteral;\n         match self.token {\n           token::EQ => {\n               self.bump();\n-              let rhs = self.parse_expr();\n+              let rhs = self.parse_expr_res(restrictions);\n               self.mk_expr(lo, rhs.span.hi, ExprAssign(lhs, rhs))\n           }\n           token::BINOPEQ(op) => {\n               self.bump();\n-              let rhs = self.parse_expr();\n+              let rhs = self.parse_expr_res(restrictions);\n               let aop = match op {\n                   token::PLUS =>    BiAdd,\n                   token::MINUS =>   BiSub,"}]}