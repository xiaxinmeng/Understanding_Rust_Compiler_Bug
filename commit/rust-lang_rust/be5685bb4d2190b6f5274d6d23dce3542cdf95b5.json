{"sha": "be5685bb4d2190b6f5274d6d23dce3542cdf95b5", "node_id": "C_kwDOAAsO6NoAKGJlNTY4NWJiNGQyMTkwYjZmNTI3NGQ2ZDIzZGNlMzU0MmNkZjk1YjU", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-12-16T20:38:32Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-12-16T20:58:05Z"}, "message": "add simulated non-regression test for issue 105637", "tree": {"sha": "a242206b22ad8e8c03a7629db371bbb3e19c5882", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a242206b22ad8e8c03a7629db371bbb3e19c5882"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be5685bb4d2190b6f5274d6d23dce3542cdf95b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be5685bb4d2190b6f5274d6d23dce3542cdf95b5", "html_url": "https://github.com/rust-lang/rust/commit/be5685bb4d2190b6f5274d6d23dce3542cdf95b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be5685bb4d2190b6f5274d6d23dce3542cdf95b5/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2f4a9ca25a198fd3d7580d7c14fd94a447269a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2f4a9ca25a198fd3d7580d7c14fd94a447269a4", "html_url": "https://github.com/rust-lang/rust/commit/d2f4a9ca25a198fd3d7580d7c14fd94a447269a4"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "9d17c35dafc25cfe3168ca4054cc72c5773a8e81", "filename": "src/test/ui/lto/auxiliary/thinlto-dylib.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/be5685bb4d2190b6f5274d6d23dce3542cdf95b5/src%2Ftest%2Fui%2Flto%2Fauxiliary%2Fthinlto-dylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be5685bb4d2190b6f5274d6d23dce3542cdf95b5/src%2Ftest%2Fui%2Flto%2Fauxiliary%2Fthinlto-dylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flto%2Fauxiliary%2Fthinlto-dylib.rs?ref=be5685bb4d2190b6f5274d6d23dce3542cdf95b5", "patch": "@@ -0,0 +1,23 @@\n+// Auxiliary crate for test issue-105637: the LTOed dylib which had duplicate symbols from libstd,\n+// breaking the panic hook feature.\n+//\n+// This simulates the `rustc_driver` crate, and the main crate simulates rustc's main binary hooking\n+// into this driver.\n+\n+// compile-flags: -Zdylib-lto -C lto=thin\n+\n+use std::panic;\n+\n+pub fn main() {\n+    // Install the hook we want to see executed\n+    panic::set_hook(Box::new(|_| {\n+        eprintln!(\"LTOed auxiliary crate panic hook\");\n+    }));\n+\n+    // Trigger the panic hook with an ICE\n+    run_compiler();\n+}\n+\n+fn run_compiler() {\n+    panic!(\"ICEing\");\n+}"}, {"sha": "0d9f0bec00fd3bac79667b4333b7969b0639df3c", "filename": "src/test/ui/lto/issue-105637.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/be5685bb4d2190b6f5274d6d23dce3542cdf95b5/src%2Ftest%2Fui%2Flto%2Fissue-105637.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be5685bb4d2190b6f5274d6d23dce3542cdf95b5/src%2Ftest%2Fui%2Flto%2Fissue-105637.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flto%2Fissue-105637.rs?ref=be5685bb4d2190b6f5274d6d23dce3542cdf95b5", "patch": "@@ -0,0 +1,28 @@\n+// Regression test for issue #105637: `-Zdylib-lto` with LTO duplicated symbols from other dylibs,\n+// in this case from libstd.\n+//\n+// That manifested as both `rustc_driver` and rustc's \"main\" (`compiler/rustc`) having their own\n+// `std::panicking::HOOK` static, and the hook in rustc's main (the default stdlib's) being executed\n+// when rustc ICEs, instead of the overriden hook from `rustc_driver` (which also displays the query\n+// stack and information on how to open a GH issue for the encountered ICE).\n+//\n+// In this test, we reproduce this setup by installing a panic hook in both the main and an LTOed\n+// dylib: the last hook set should be the one being executed, the dylib's.\n+\n+// aux-build: thinlto-dylib.rs\n+// run-fail\n+// check-run-results\n+\n+extern crate thinlto_dylib;\n+\n+use std::panic;\n+\n+fn main() {\n+    // We don't want to see this panic hook executed\n+    std::panic::set_hook(Box::new(|_| {\n+        eprintln!(\"main crate panic hook\");\n+    }));\n+\n+    // Have the LTOed dylib install its own hook and panic, we want to see its hook executed.\n+    thinlto_dylib::main();\n+}"}, {"sha": "43388e7763ee282da9f9fbcda7a4414c04a59de3", "filename": "src/test/ui/lto/issue-105637.run.stderr", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be5685bb4d2190b6f5274d6d23dce3542cdf95b5/src%2Ftest%2Fui%2Flto%2Fissue-105637.run.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/be5685bb4d2190b6f5274d6d23dce3542cdf95b5/src%2Ftest%2Fui%2Flto%2Fissue-105637.run.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flto%2Fissue-105637.run.stderr?ref=be5685bb4d2190b6f5274d6d23dce3542cdf95b5", "patch": "@@ -0,0 +1 @@\n+LTOed auxiliary crate panic hook"}]}