{"sha": "294f041f13cf78fb03c3da3b7e07aae8c03b19c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NGYwNDFmMTNjZjc4ZmIwM2MzZGEzYjdlMDdhYWU4YzAzYjE5Yzg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-28T15:55:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-28T15:55:13Z"}, "message": "Rollup merge of #49428 - cuviper:llvm6-target_feature, r=alexcrichton\n\nEnable target_feature on any LLVM 6+\n\nIn `LLVMRustHasFeature()`, rather than using `MCInfo->getFeatureTable()`\nthat is specific to Rust's LLVM fork, we can use this in LLVM 6:\n\n    /// Check whether the subtarget features are enabled/disabled as per\n    /// the provided string, ignoring all other features.\n    bool checkFeatures(StringRef FS) const;\n\nNow rustc using external LLVM can also have `target_feature`.\n\nr? @alexcrichton", "tree": {"sha": "0fc8fc11329c439b869ff1e89e39a1040883736b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fc8fc11329c439b869ff1e89e39a1040883736b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/294f041f13cf78fb03c3da3b7e07aae8c03b19c8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJau7rhCRBK7hj4Ov3rIwAAdHIIAKo5+PZgVqGHG1dJvqDPmvb9\n0ii5TXSQEWM/U5LUqwp+cPgnGPQLagQNCAjGnuE24XqWcKx8vb/hpnE9KD+WqgrC\ny1kO1PrL4sHA+EjGUeHJsV6YoP/fr6zuyHjtkzTrwEfcVDgWrDV5e3YpwDqcI+Il\n9zMoKqR9hErtaDP+Cn/o/I1zFygot+nDVPUm2wKJbsCqdVQAPxLDv36EiPRycJ0g\nIVfC2wppBHIM9x6Ot3gOXJqc1i5ISL3zzQxuNxWa9dFt2oQ60JMJQ48oVOYSKKwb\nEsdarbvAhEXew8lqihcqOWDj1VHovbdhaek6kMzTstC/rEM7m5rm3d+jGOMUeXc=\n=ye5O\n-----END PGP SIGNATURE-----\n", "payload": "tree 0fc8fc11329c439b869ff1e89e39a1040883736b\nparent 6ca14660affb3a8eace557f8dfb27a520be38fd8\nparent a93a4d259ae3670d748859f430aba94f065ea6df\nauthor kennytm <kennytm@gmail.com> 1522252513 +0200\ncommitter GitHub <noreply@github.com> 1522252513 +0200\n\nRollup merge of #49428 - cuviper:llvm6-target_feature, r=alexcrichton\n\nEnable target_feature on any LLVM 6+\n\nIn `LLVMRustHasFeature()`, rather than using `MCInfo->getFeatureTable()`\nthat is specific to Rust's LLVM fork, we can use this in LLVM 6:\n\n    /// Check whether the subtarget features are enabled/disabled as per\n    /// the provided string, ignoring all other features.\n    bool checkFeatures(StringRef FS) const;\n\nNow rustc using external LLVM can also have `target_feature`.\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/294f041f13cf78fb03c3da3b7e07aae8c03b19c8", "html_url": "https://github.com/rust-lang/rust/commit/294f041f13cf78fb03c3da3b7e07aae8c03b19c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/294f041f13cf78fb03c3da3b7e07aae8c03b19c8/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ca14660affb3a8eace557f8dfb27a520be38fd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ca14660affb3a8eace557f8dfb27a520be38fd8", "html_url": "https://github.com/rust-lang/rust/commit/6ca14660affb3a8eace557f8dfb27a520be38fd8"}, {"sha": "a93a4d259ae3670d748859f430aba94f065ea6df", "url": "https://api.github.com/repos/rust-lang/rust/commits/a93a4d259ae3670d748859f430aba94f065ea6df", "html_url": "https://github.com/rust-lang/rust/commit/a93a4d259ae3670d748859f430aba94f065ea6df"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "382ef2cc407dd93ba704457c5fee7a58073fde86", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/294f041f13cf78fb03c3da3b7e07aae8c03b19c8/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/294f041f13cf78fb03c3da3b7e07aae8c03b19c8/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=294f041f13cf78fb03c3da3b7e07aae8c03b19c8", "patch": "@@ -205,17 +205,13 @@ GEN_SUBTARGETS\n \n extern \"C\" bool LLVMRustHasFeature(LLVMTargetMachineRef TM,\n                                    const char *Feature) {\n-#if LLVM_RUSTLLVM\n+#if LLVM_VERSION_GE(6, 0)\n   TargetMachine *Target = unwrap(TM);\n   const MCSubtargetInfo *MCInfo = Target->getMCSubtargetInfo();\n-  const FeatureBitset &Bits = MCInfo->getFeatureBits();\n-  const ArrayRef<SubtargetFeatureKV> FeatTable = MCInfo->getFeatureTable();\n-\n-  for (auto &FeatureEntry : FeatTable)\n-    if (!strcmp(FeatureEntry.Key, Feature))\n-      return (Bits & FeatureEntry.Value) == FeatureEntry.Value;\n-#endif\n+  return MCInfo->checkFeatures(std::string(\"+\") + Feature);\n+#else\n   return false;\n+#endif\n }\n \n enum class LLVMRustCodeModel {"}, {"sha": "b1d7e5435c4cb9b33d905aa3b78cb234a6c7a38b", "filename": "src/test/run-pass/sse2.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/294f041f13cf78fb03c3da3b7e07aae8c03b19c8/src%2Ftest%2Frun-pass%2Fsse2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/294f041f13cf78fb03c3da3b7e07aae8c03b19c8/src%2Ftest%2Frun-pass%2Fsse2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsse2.rs?ref=294f041f13cf78fb03c3da3b7e07aae8c03b19c8", "patch": "@@ -8,7 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// no-system-llvm -- needs MCSubtargetInfo::getFeatureTable()\n+// min-llvm-version 6.0\n+// ^ needs MCSubtargetInfo::checkFeatures()\n // ignore-cloudabi no std::env\n \n #![feature(cfg_target_feature)]\n@@ -29,4 +30,7 @@ fn main() {\n         assert!(cfg!(target_feature = \"sse2\"),\n                 \"SSE2 was not detected as available on an x86 platform\");\n     }\n+    // check a negative case too -- whitelisted on x86, but not enabled by default\n+    assert!(cfg!(not(target_feature = \"avx2\")),\n+            \"AVX2 shouldn't be detected as available by default on any platform\");\n }"}]}