{"sha": "254a10b318b69cc1e564168b66511658261e76a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NGExMGIzMThiNjljYzFlNTY0MTY4YjY2NTExNjU4MjYxZTc2YTY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-10-11T20:49:29Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-10-11T20:49:29Z"}, "message": "Properly set the MatchSource for for loops", "tree": {"sha": "b7b4e5fcb29066e385e3dc67e8c283136eef25c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7b4e5fcb29066e385e3dc67e8c283136eef25c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/254a10b318b69cc1e564168b66511658261e76a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/254a10b318b69cc1e564168b66511658261e76a6", "html_url": "https://github.com/rust-lang/rust/commit/254a10b318b69cc1e564168b66511658261e76a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/254a10b318b69cc1e564168b66511658261e76a6/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9dafceb1f9df02bb0273af5f71b1824d6ce71f68", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dafceb1f9df02bb0273af5f71b1824d6ce71f68", "html_url": "https://github.com/rust-lang/rust/commit/9dafceb1f9df02bb0273af5f71b1824d6ce71f68"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "5bd188020a33c93a47f83ea9379bc19deb4ebf7b", "filename": "src/librustc_front/lowering.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/254a10b318b69cc1e564168b66511658261e76a6/src%2Flibrustc_front%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/254a10b318b69cc1e564168b66511658261e76a6/src%2Flibrustc_front%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Flowering.rs?ref=254a10b318b69cc1e564168b66511658261e76a6", "patch": "@@ -1422,7 +1422,11 @@ pub fn lower_expr(lctx: &LoweringContext, e: &Expr) -> P<hir::Expr> {\n                               vec![head])\n                 };\n \n-                let match_expr = expr_match(lctx, e.span, into_iter_expr, vec![iter_arm]);\n+                let match_expr = expr_match(lctx,\n+                                            e.span,\n+                                            into_iter_expr,\n+                                            vec![iter_arm],\n+                                            hir::MatchSource::ForLoopDesugar);\n \n                 // `{ let result = ...; result }`\n                 let result_ident = lctx.str_to_ident(\"result\");\n@@ -1574,11 +1578,12 @@ fn expr_path(lctx: &LoweringContext, path: hir::Path) -> P<hir::Expr> {\n fn expr_match(lctx: &LoweringContext,\n               span: Span,\n               arg: P<hir::Expr>,\n-              arms: Vec<hir::Arm>)\n+              arms: Vec<hir::Arm>,\n+              source: hir::MatchSource)\n               -> P<hir::Expr> {\n     expr(lctx,\n          span,\n-         hir::ExprMatch(arg, arms, hir::MatchSource::Normal))\n+         hir::ExprMatch(arg, arms, source))\n }\n \n fn expr_block(lctx: &LoweringContext, b: P<hir::Block>) -> P<hir::Expr> {"}]}