{"sha": "d6caf737b30f94f4e734f59cde88e7d5295dc4a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2Y2FmNzM3YjMwZjk0ZjRlNzM0ZjU5Y2RlODhlN2Q1Mjk1ZGM0YTE=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-10-11T10:46:47Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-10-11T20:42:29Z"}, "message": "Added `revisions: ast mir` template to tests that this PR sync'ed ast+mir borrowcks.\n\n(There are other tests that this PR also improves, but were not\ncompletely synchronized. I chose to wait until later to pull those\ninto the `revisions: ast mir` testing pattern; later being either when\nthey *are* synchronized, or in some PR where we migrate all borrowck\ntests, regardless of whether MIR-borrowck is \"finished\" for them or\nnot.)", "tree": {"sha": "72ccbb3f13e574186d491a4ff5fd9ff9485ac4f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72ccbb3f13e574186d491a4ff5fd9ff9485ac4f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6caf737b30f94f4e734f59cde88e7d5295dc4a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6caf737b30f94f4e734f59cde88e7d5295dc4a1", "html_url": "https://github.com/rust-lang/rust/commit/d6caf737b30f94f4e734f59cde88e7d5295dc4a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6caf737b30f94f4e734f59cde88e7d5295dc4a1/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b62b67a7323a5f58b0d8e001fc4be9cbdde1760a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b62b67a7323a5f58b0d8e001fc4be9cbdde1760a", "html_url": "https://github.com/rust-lang/rust/commit/b62b67a7323a5f58b0d8e001fc4be9cbdde1760a"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "017318b6b217300f75d66d24e7a42ea6cdc108dc", "filename": "src/test/compile-fail/borrowck/borrowck-init-in-fru.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6caf737b30f94f4e734f59cde88e7d5295dc4a1/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-init-in-fru.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6caf737b30f94f4e734f59cde88e7d5295dc4a1/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-init-in-fru.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-init-in-fru.rs?ref=d6caf737b30f94f4e734f59cde88e7d5295dc4a1", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// revisions: ast mir\n+//[mir]compile-flags: -Z emit-end-regions -Z borrowck-mir\n+\n #[derive(Clone)]\n struct point {\n     x: isize,\n@@ -16,6 +19,9 @@ struct point {\n \n fn main() {\n     let mut origin: point;\n-    origin = point {x: 10,.. origin}; //~ ERROR use of possibly uninitialized variable: `origin.y`\n+    origin = point {x: 10,.. origin};\n+    //[ast]~^ ERROR use of possibly uninitialized variable: `origin.y` [E0381]\n+    //[mir]~^^ ERROR (Ast) [E0381]\n+    //[mir]~|  ERROR (Mir) [E0381]\n     origin.clone();\n }"}, {"sha": "2b567ebd2dba5582b6de0aa69eb76d30f39be0f2", "filename": "src/test/compile-fail/borrowck/borrowck-use-in-index-lvalue.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d6caf737b30f94f4e734f59cde88e7d5295dc4a1/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-use-in-index-lvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6caf737b30f94f4e734f59cde88e7d5295dc4a1/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-use-in-index-lvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-use-in-index-lvalue.rs?ref=d6caf737b30f94f4e734f59cde88e7d5295dc4a1", "patch": "@@ -8,12 +8,19 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// revisions: ast mir\n+//[mir]compile-flags: -Z emit-end-regions -Z borrowck-mir\n+\n fn test() {\n     let w: &mut [isize];\n-    w[5] = 0; //~ ERROR use of possibly uninitialized variable: `*w`\n+    w[5] = 0; //[ast]~ ERROR use of possibly uninitialized variable: `*w` [E0381]\n+              //[mir]~^ ERROR (Ast) [E0381]\n+              //[mir]~| ERROR (Mir) [E0381]\n \n     let mut w: &mut [isize];\n-    w[5] = 0; //~ ERROR use of possibly uninitialized variable: `*w`\n+    w[5] = 0; //[ast]~ ERROR use of possibly uninitialized variable: `*w` [E0381]\n+              //[mir]~^ ERROR (Ast) [E0381]\n+              //[mir]~| ERROR (Mir) [E0381]\n }\n \n fn main() { test(); }"}, {"sha": "a48d09b195a5e89827b5d70352d290b3eaeab5f4", "filename": "src/test/compile-fail/borrowck/borrowck-use-uninitialized-in-cast-trait.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d6caf737b30f94f4e734f59cde88e7d5295dc4a1/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-use-uninitialized-in-cast-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6caf737b30f94f4e734f59cde88e7d5295dc4a1/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-use-uninitialized-in-cast-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-use-uninitialized-in-cast-trait.rs?ref=d6caf737b30f94f4e734f59cde88e7d5295dc4a1", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// revisions: ast mir\n+//[mir]compile-flags: -Z emit-end-regions -Z borrowck-mir\n+\n // Variation on `borrowck-use-uninitialized-in-cast` in which we do a\n // trait cast from an uninitialized source. Issue #20791.\n \n@@ -16,5 +19,7 @@ impl Foo for i32 { }\n \n fn main() {\n     let x: &i32;\n-    let y = x as *const Foo; //~ ERROR use of possibly uninitialized variable: `*x`\n+    let y = x as *const Foo; //[ast]~ ERROR use of possibly uninitialized variable: `*x`\n+                             //[mir]~^ ERROR (Ast) [E0381]\n+                             //[mir]~| ERROR (Mir) [E0381]\n }"}, {"sha": "bdd90a3ce1ec2394dc7cbcdae50949d434b43c19", "filename": "src/test/compile-fail/borrowck/borrowck-use-uninitialized-in-cast.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d6caf737b30f94f4e734f59cde88e7d5295dc4a1/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-use-uninitialized-in-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6caf737b30f94f4e734f59cde88e7d5295dc4a1/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-use-uninitialized-in-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-use-uninitialized-in-cast.rs?ref=d6caf737b30f94f4e734f59cde88e7d5295dc4a1", "patch": "@@ -8,11 +8,16 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// revisions: ast mir\n+//[mir]compile-flags: -Z emit-end-regions -Z borrowck-mir\n+\n // Check that we detect unused values that are cast to other things.\n // The problem was specified to casting to `*`, as creating unsafe\n // pointers was not being fully checked. Issue #20791.\n \n fn main() {\n     let x: &i32;\n-    let y = x as *const i32; //~ ERROR use of possibly uninitialized variable: `*x`\n+    let y = x as *const i32; //[ast]~ ERROR use of possibly uninitialized variable: `*x` [E0381]\n+                             //[mir]~^ ERROR (Ast) [E0381]\n+                             //[mir]~| ERROR (Mir) [E0381]\n }"}]}