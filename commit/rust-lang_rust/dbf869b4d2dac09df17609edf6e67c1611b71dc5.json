{"sha": "dbf869b4d2dac09df17609edf6e67c1611b71dc5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZjg2OWI0ZDJkYWMwOWRmMTc2MDllZGY2ZTY3YzE2MTFiNzFkYzU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-10-05T09:09:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-05T09:09:38Z"}, "message": "Merge #1952\n\n1952: Create an assist for applying De Morgan's Law r=matklad a=cronokirby\n\nFixes #1807\r\n\r\nThis assist can transform expressions of the form `!x || !y` into\r\n`!(x && y)`. This also works with `&&`.\r\n\r\nThis assist will only trigger if the cursor is on the central logical\r\noperator.\r\n\r\nThe main limitation of this current implementation is that both operands\r\nneed to be an explicit negation, either of the form `!x`, or `x != y`.\r\nMore operands could be accepted, but this would complicate the implementation\r\nquite a bit.\n\nCo-authored-by: L\u00fac\u00e1s Meier <cronokirby@gmail.com>", "tree": {"sha": "8ca4f0a4865acc8b67798951e3a5c76cb5a6956c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ca4f0a4865acc8b67798951e3a5c76cb5a6956c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbf869b4d2dac09df17609edf6e67c1611b71dc5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdmF3SCRBK7hj4Ov3rIwAAdHIIABA8h9yt8k3QCV/NSAwCqZHb\nbHIEjJ6CoUTyskfWX/OVQtViBVgKMCaJ2yI9wL1TyeMXl0hPUw5tzOIrWuhtfuP9\nLAvDh0z8tN3pIQjkQ5gtJU8wDtO65LHOb7yqhmrsAOLg31yY+FXpZJSfBPIeQlDa\ncBkN+Z+fqjvDzJoh0IDbQlDjsGur3+NWnEs4qtT2Akxuge8DhdVkEwZcH32aFurt\n7MqjYCPoN+lumKOEQT9GnhQVYMdMgNBut5FZ8Lb3bONYHfNI/qNk0eWgJgjpf/7H\nQ5Eb9ZoVyihrZbf058s4TrNG+SCr7uWv0GAhANw7OxKM6A76gQxJ62fdHcR8tww=\n=88rW\n-----END PGP SIGNATURE-----\n", "payload": "tree 8ca4f0a4865acc8b67798951e3a5c76cb5a6956c\nparent cce32719cf140550350c84aa7f006080615a31d6\nparent e06ad80d49f63c0c18a6447f39415a9ce900d9fa\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1570266578 +0000\ncommitter GitHub <noreply@github.com> 1570266578 +0000\n\nMerge #1952\n\n1952: Create an assist for applying De Morgan's Law r=matklad a=cronokirby\n\nFixes #1807\r\n\r\nThis assist can transform expressions of the form `!x || !y` into\r\n`!(x && y)`. This also works with `&&`.\r\n\r\nThis assist will only trigger if the cursor is on the central logical\r\noperator.\r\n\r\nThe main limitation of this current implementation is that both operands\r\nneed to be an explicit negation, either of the form `!x`, or `x != y`.\r\nMore operands could be accepted, but this would complicate the implementation\r\nquite a bit.\n\nCo-authored-by: L\u00fac\u00e1s Meier <cronokirby@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbf869b4d2dac09df17609edf6e67c1611b71dc5", "html_url": "https://github.com/rust-lang/rust/commit/dbf869b4d2dac09df17609edf6e67c1611b71dc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbf869b4d2dac09df17609edf6e67c1611b71dc5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cce32719cf140550350c84aa7f006080615a31d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cce32719cf140550350c84aa7f006080615a31d6", "html_url": "https://github.com/rust-lang/rust/commit/cce32719cf140550350c84aa7f006080615a31d6"}, {"sha": "e06ad80d49f63c0c18a6447f39415a9ce900d9fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/e06ad80d49f63c0c18a6447f39415a9ce900d9fa", "html_url": "https://github.com/rust-lang/rust/commit/e06ad80d49f63c0c18a6447f39415a9ce900d9fa"}], "stats": {"total": 118, "additions": 118, "deletions": 0}, "files": [{"sha": "5f2b0dd189b3b054169a4d7af441733f97613949", "filename": "crates/ra_assists/src/assists/apply_demorgan.rs", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/dbf869b4d2dac09df17609edf6e67c1611b71dc5/crates%2Fra_assists%2Fsrc%2Fassists%2Fapply_demorgan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbf869b4d2dac09df17609edf6e67c1611b71dc5/crates%2Fra_assists%2Fsrc%2Fassists%2Fapply_demorgan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fapply_demorgan.rs?ref=dbf869b4d2dac09df17609edf6e67c1611b71dc5", "patch": "@@ -0,0 +1,102 @@\n+//! This contains the functions associated with the demorgan assist.\n+//! This assist transforms boolean expressions of the form `!a || !b` into\n+//! `!(a && b)`.\n+use hir::db::HirDatabase;\n+use ra_syntax::ast::{self, AstNode};\n+use ra_syntax::SyntaxNode;\n+\n+use crate::{Assist, AssistCtx, AssistId};\n+\n+/// Assist for applying demorgan's law\n+///\n+/// This transforms expressions of the form `!l || !r` into `!(l && r)`.\n+/// This also works with `&&`. This assist can only be applied with the cursor\n+/// on either `||` or `&&`, with both operands being a negation of some kind.\n+/// This means something of the form `!x` or `x != y`.\n+pub(crate) fn apply_demorgan(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n+    let expr = ctx.node_at_offset::<ast::BinExpr>()?;\n+    let op = expr.op_kind()?;\n+    let op_range = expr.op_token()?.text_range();\n+    let opposite_op = opposite_logic_op(op)?;\n+    let cursor_in_range = ctx.frange.range.is_subrange(&op_range);\n+    if !cursor_in_range {\n+        return None;\n+    }\n+    let lhs = expr.lhs()?.syntax().clone();\n+    let lhs_range = lhs.text_range();\n+    let rhs = expr.rhs()?.syntax().clone();\n+    let rhs_range = rhs.text_range();\n+    let not_lhs = undo_negation(lhs)?;\n+    let not_rhs = undo_negation(rhs)?;\n+\n+    ctx.add_action(AssistId(\"apply_demorgan\"), \"apply demorgan's law\", |edit| {\n+        edit.target(op_range);\n+        edit.replace(op_range, opposite_op);\n+        edit.replace(lhs_range, format!(\"!({}\", not_lhs));\n+        edit.replace(rhs_range, format!(\"{})\", not_rhs));\n+    });\n+    ctx.build()\n+}\n+\n+// Return the opposite text for a given logical operator, if it makes sense\n+fn opposite_logic_op(kind: ast::BinOp) -> Option<&'static str> {\n+    match kind {\n+        ast::BinOp::BooleanOr => Some(\"&&\"),\n+        ast::BinOp::BooleanAnd => Some(\"||\"),\n+        _ => None,\n+    }\n+}\n+\n+// This function tries to undo unary negation, or inequality\n+fn undo_negation(node: SyntaxNode) -> Option<String> {\n+    match ast::Expr::cast(node)? {\n+        ast::Expr::BinExpr(bin) => match bin.op_kind()? {\n+            ast::BinOp::NegatedEqualityTest => {\n+                let lhs = bin.lhs()?.syntax().text();\n+                let rhs = bin.rhs()?.syntax().text();\n+                Some(format!(\"{} == {}\", lhs, rhs))\n+            }\n+            _ => None,\n+        },\n+        ast::Expr::PrefixExpr(pe) => match pe.op_kind()? {\n+            ast::PrefixOp::Not => {\n+                let child = pe.expr()?.syntax().text();\n+                Some(String::from(child))\n+            }\n+            _ => None,\n+        },\n+        _ => None,\n+    }\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use super::*;\n+\n+    use crate::helpers::{check_assist, check_assist_not_applicable};\n+\n+    #[test]\n+    fn demorgan_turns_and_into_or() {\n+        check_assist(apply_demorgan, \"fn f() { !x &&<|> !x }\", \"fn f() { !(x ||<|> x) }\")\n+    }\n+\n+    #[test]\n+    fn demorgan_turns_or_into_and() {\n+        check_assist(apply_demorgan, \"fn f() { !x ||<|> !x }\", \"fn f() { !(x &&<|> x) }\")\n+    }\n+\n+    #[test]\n+    fn demorgan_removes_inequality() {\n+        check_assist(apply_demorgan, \"fn f() { x != x ||<|> !x }\", \"fn f() { !(x == x &&<|> x) }\")\n+    }\n+\n+    #[test]\n+    fn demorgan_doesnt_apply_with_cursor_not_on_op() {\n+        check_assist_not_applicable(apply_demorgan, \"fn f() { <|> !x || !x }\")\n+    }\n+\n+    #[test]\n+    fn demorgan_doesnt_apply_when_operands_arent_negated_already() {\n+        check_assist_not_applicable(apply_demorgan, \"fn f() { x ||<|> x }\")\n+    }\n+}"}, {"sha": "d2376c475cb8346fb5157bff6728323e801024b2", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbf869b4d2dac09df17609edf6e67c1611b71dc5/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbf869b4d2dac09df17609edf6e67c1611b71dc5/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=dbf869b4d2dac09df17609edf6e67c1611b71dc5", "patch": "@@ -92,6 +92,7 @@ mod assists {\n     mod add_derive;\n     mod add_explicit_type;\n     mod add_impl;\n+    mod apply_demorgan;\n     mod flip_comma;\n     mod flip_binexpr;\n     mod change_visibility;\n@@ -113,6 +114,7 @@ mod assists {\n             add_derive::add_derive,\n             add_explicit_type::add_explicit_type,\n             add_impl::add_impl,\n+            apply_demorgan::apply_demorgan,\n             change_visibility::change_visibility,\n             fill_match_arms::fill_match_arms,\n             merge_match_arms::merge_match_arms,"}, {"sha": "0ce8f577b398ed370582a2571725e43ed224ad56", "filename": "docs/user/features.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dbf869b4d2dac09df17609edf6e67c1611b71dc5/docs%2Fuser%2Ffeatures.md", "raw_url": "https://github.com/rust-lang/rust/raw/dbf869b4d2dac09df17609edf6e67c1611b71dc5/docs%2Fuser%2Ffeatures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Ffeatures.md?ref=dbf869b4d2dac09df17609edf6e67c1611b71dc5", "patch": "@@ -166,6 +166,20 @@ impl Foo for S {\n }\n ```\n \n+- Apply [De Morgan's law](https://en.wikipedia.org/wiki/De_Morgan%27s_laws)\n+\n+```rust\n+// before:\n+fn example(x: bool) -> bool {\n+    !x || !x\n+}\n+\n+// after:\n+fn example(x: bool) -> bool {\n+    !(x && x)\n+}\n+```\n+\n - Import path\n \n ```rust"}]}