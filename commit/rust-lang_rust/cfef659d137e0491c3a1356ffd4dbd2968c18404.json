{"sha": "cfef659d137e0491c3a1356ffd4dbd2968c18404", "node_id": "C_kwDOAAsO6NoAKGNmZWY2NTlkMTM3ZTA0OTFjM2ExMzU2ZmZkNGRiZDI5NjhjMTg0MDQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-09-16T05:47:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-16T05:47:02Z"}, "message": "Rollup merge of #101802 - chriss0612:const_fn_trait_ref_impls, r=fee1-dead\n\nConstify impl Fn* &(mut) Fn*\n\nTracking Issue: [101803](https://github.com/rust-lang/rust/issues/101803)\n\nFeature gate: `#![feature(const_fn_trait_ref_impls)]`\n\nThis feature allows using references to Fn* Items as Fn* Items themself in a const context.", "tree": {"sha": "766e2d048e79ce3fdda2a8efaf6d91095c5889d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/766e2d048e79ce3fdda2a8efaf6d91095c5889d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfef659d137e0491c3a1356ffd4dbd2968c18404", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjJA3WCRBK7hj4Ov3rIwAA33YIAE7u9bnDX48xzhzpzAhvYLVM\nf/vY2bw5xW4AeQx0CYTZQ8e0bj/RZX23wWFbIONYN13RQ+AvzEnWWuRb+JkdQDoh\n/ZZPqe9CWnkR82wG4OPfJgMlGL9UseZLMm0jnthnG91GxkWAzqWhMmS8T/rAoCek\n/83ghzkVfmwnmSBHfLfiUBpk2qWQWDkhK/BmmYEWlDVsjNy4478prnCLcff9vBvF\nwjDKKU+5lNi9NhxdhNWku9iHwqW1lhQjjKUeM9xBCT1qZw8g2E6rhWLKZqRjH1xI\nI6Tn0HR4dJA5O5wI1+Q8KG4KgEINyoKbGhDt4VuLUHry6L1GCDBQd6myHNdlLCk=\n=mQHV\n-----END PGP SIGNATURE-----\n", "payload": "tree 766e2d048e79ce3fdda2a8efaf6d91095c5889d3\nparent 28b4c62382988b895e505698289939f71248626f\nparent 478c471ce8aabb07e115f4caa18f4f1ca9acbc49\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1663307222 +0530\ncommitter GitHub <noreply@github.com> 1663307222 +0530\n\nRollup merge of #101802 - chriss0612:const_fn_trait_ref_impls, r=fee1-dead\n\nConstify impl Fn* &(mut) Fn*\n\nTracking Issue: [101803](https://github.com/rust-lang/rust/issues/101803)\n\nFeature gate: `#![feature(const_fn_trait_ref_impls)]`\n\nThis feature allows using references to Fn* Items as Fn* Items themself in a const context.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfef659d137e0491c3a1356ffd4dbd2968c18404", "html_url": "https://github.com/rust-lang/rust/commit/cfef659d137e0491c3a1356ffd4dbd2968c18404", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfef659d137e0491c3a1356ffd4dbd2968c18404/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28b4c62382988b895e505698289939f71248626f", "url": "https://api.github.com/repos/rust-lang/rust/commits/28b4c62382988b895e505698289939f71248626f", "html_url": "https://github.com/rust-lang/rust/commit/28b4c62382988b895e505698289939f71248626f"}, {"sha": "478c471ce8aabb07e115f4caa18f4f1ca9acbc49", "url": "https://api.github.com/repos/rust-lang/rust/commits/478c471ce8aabb07e115f4caa18f4f1ca9acbc49", "html_url": "https://github.com/rust-lang/rust/commit/478c471ce8aabb07e115f4caa18f4f1ca9acbc49"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "8fdf22cf6f2c873a46c5681528519d2ca73e7acc", "filename": "library/core/src/ops/function.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/cfef659d137e0491c3a1356ffd4dbd2968c18404/library%2Fcore%2Fsrc%2Fops%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfef659d137e0491c3a1356ffd4dbd2968c18404/library%2Fcore%2Fsrc%2Fops%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Ffunction.rs?ref=cfef659d137e0491c3a1356ffd4dbd2968c18404", "patch": "@@ -250,29 +250,32 @@ pub trait FnOnce<Args> {\n \n mod impls {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A, F: ?Sized> Fn<A> for &F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A, F: ?Sized> const Fn<A> for &F\n     where\n-        F: Fn<A>,\n+        F: ~const Fn<A>,\n     {\n         extern \"rust-call\" fn call(&self, args: A) -> F::Output {\n             (**self).call(args)\n         }\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A, F: ?Sized> FnMut<A> for &F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A, F: ?Sized> const FnMut<A> for &F\n     where\n-        F: Fn<A>,\n+        F: ~const Fn<A>,\n     {\n         extern \"rust-call\" fn call_mut(&mut self, args: A) -> F::Output {\n             (**self).call(args)\n         }\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A, F: ?Sized> FnOnce<A> for &F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A, F: ?Sized> const FnOnce<A> for &F\n     where\n-        F: Fn<A>,\n+        F: ~const Fn<A>,\n     {\n         type Output = F::Output;\n \n@@ -282,19 +285,21 @@ mod impls {\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A, F: ?Sized> FnMut<A> for &mut F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A, F: ?Sized> const FnMut<A> for &mut F\n     where\n-        F: FnMut<A>,\n+        F: ~const FnMut<A>,\n     {\n         extern \"rust-call\" fn call_mut(&mut self, args: A) -> F::Output {\n             (*self).call_mut(args)\n         }\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A, F: ?Sized> FnOnce<A> for &mut F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A, F: ?Sized> const FnOnce<A> for &mut F\n     where\n-        F: FnMut<A>,\n+        F: ~const FnMut<A>,\n     {\n         type Output = F::Output;\n         extern \"rust-call\" fn call_once(self, args: A) -> F::Output {"}]}