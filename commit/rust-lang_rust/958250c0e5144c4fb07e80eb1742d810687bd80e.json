{"sha": "958250c0e5144c4fb07e80eb1742d810687bd80e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1ODI1MGMwZTUxNDRjNGZiMDdlODBlYjE3NDJkODEwNjg3YmQ4MGU=", "commit": {"author": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2014-08-17T18:28:20Z"}, "committer": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2014-08-17T18:28:20Z"}, "message": "rustdoc: Fix and improve line break hints with the <wbr> tag\n\nPrevents zero-width spaces from appearing in copy-pasted paths.\n\nPuts line breaks after `::`.\n\nFixes #16555", "tree": {"sha": "03a9b8d163376dc4515087a51982c39240da1c53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03a9b8d163376dc4515087a51982c39240da1c53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/958250c0e5144c4fb07e80eb1742d810687bd80e", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/958250c0e5144c4fb07e80eb1742d810687bd80e", "html_url": "https://github.com/rust-lang/rust/commit/958250c0e5144c4fb07e80eb1742d810687bd80e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/958250c0e5144c4fb07e80eb1742d810687bd80e/comments", "author": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec9476cd63af58d55e552532d14040d972392bd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec9476cd63af58d55e552532d14040d972392bd6", "html_url": "https://github.com/rust-lang/rust/commit/ec9476cd63af58d55e552532d14040d972392bd6"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "be62b1cc36f409dfbda0c52f1b124e582cfba9fc", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/958250c0e5144c4fb07e80eb1742d810687bd80e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958250c0e5144c4fb07e80eb1742d810687bd80e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=958250c0e5144c4fb07e80eb1742d810687bd80e", "patch": "@@ -1316,7 +1316,7 @@ impl<'a> fmt::Show for Item<'a> {\n             let cur = self.cx.current.as_slice();\n             let amt = if self.ismodule() { cur.len() - 1 } else { cur.len() };\n             for (i, component) in cur.iter().enumerate().take(amt) {\n-                try!(write!(fmt, \"<a href='{}index.html'>{}</a>&#8203;::\",\n+                try!(write!(fmt, \"<a href='{}index.html'>{}</a>::<wbr>\",\n                             \"../\".repeat(cur.len() - i - 1),\n                             component.as_slice()));\n             }\n@@ -1325,7 +1325,7 @@ impl<'a> fmt::Show for Item<'a> {\n                     shortty(self.item), self.item.name.get_ref().as_slice()));\n \n         // Write stability level\n-        try!(write!(fmt, \"&#8203;{}\", Stability(&self.item.stability)));\n+        try!(write!(fmt, \"<wbr>{}\", Stability(&self.item.stability)));\n \n         // Links to out-of-band information, i.e. src and stability dashboard\n         try!(write!(fmt, \"</div><div class='out-of-band'>\"));\n@@ -2078,7 +2078,7 @@ impl<'a> fmt::Show for Sidebar<'a> {\n         let len = cx.current.len() - if it.is_mod() {1} else {0};\n         for (i, name) in cx.current.iter().take(len).enumerate() {\n             if i > 0 {\n-                try!(write!(fmt, \"&#8203;::\"));\n+                try!(write!(fmt, \"::<wbr>\"));\n             }\n             try!(write!(fmt, \"<a href='{}index.html'>{}</a>\",\n                           cx.root_path"}]}