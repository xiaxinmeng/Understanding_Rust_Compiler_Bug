{"sha": "6c9bdc341031b276c6d48d986530b86c7f64bd4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjOWJkYzM0MTAzMWIyNzZjNmQ0OGQ5ODY1MzBiODZjN2Y2NGJkNGQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-13T02:33:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-13T02:33:49Z"}, "message": "Rollup merge of #59101 - kenta7777:reduce-code-repetition, r=oli-obk\n\nReduces Code Repetitions like `!n >> amt`\n\nFixes #49937 .\nThis PR contains defining a function which operates bit inversion and reducing bit operation like `!0u128 >> (128 - size.bits())`.", "tree": {"sha": "73e5456ef3c41350010e1f093776a944cda86e91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73e5456ef3c41350010e1f093776a944cda86e91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c9bdc341031b276c6d48d986530b86c7f64bd4d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJciGwNCRBK7hj4Ov3rIwAAdHIIAH89pG+58JDBZ/gctaThOpwA\n+aQ9G0xRiVegrcbnIHNKLsn/a10pdlvVSlmJjpd2rMzBAceSayMACMJM7j5Q7RG/\n9F2Vm3bXKvb5pNrb8BRA/6boRtUrb1UWOTfPMBXAiiOdbXviWNVYHCTMsf3r5zb/\npiSMXo2d3GZyQ4O1o5H7qDRMhzwiXmqxUJxWryf5LDn8ZaFnlzg57felWX4HGzS4\nUYFqSdm2pUodpCA3yPU887LXrIOW2LYX/1ABcCrF+7b+1h4AeeO+QZaAjaPLwvY6\noYBGDyWSfgJeEXgVMiCuuUktGykray4qRxB6F57nuz6CaxJ4vnz6Ty47tk1/RgY=\n=FjdA\n-----END PGP SIGNATURE-----\n", "payload": "tree 73e5456ef3c41350010e1f093776a944cda86e91\nparent f95bbf3da398fa68370a832c9b0492399ff43241\nparent 18b40c64136aedb78a494c0c7e44273353198b0e\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1552444429 +0100\ncommitter GitHub <noreply@github.com> 1552444429 +0100\n\nRollup merge of #59101 - kenta7777:reduce-code-repetition, r=oli-obk\n\nReduces Code Repetitions like `!n >> amt`\n\nFixes #49937 .\nThis PR contains defining a function which operates bit inversion and reducing bit operation like `!0u128 >> (128 - size.bits())`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c9bdc341031b276c6d48d986530b86c7f64bd4d", "html_url": "https://github.com/rust-lang/rust/commit/6c9bdc341031b276c6d48d986530b86c7f64bd4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c9bdc341031b276c6d48d986530b86c7f64bd4d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f95bbf3da398fa68370a832c9b0492399ff43241", "url": "https://api.github.com/repos/rust-lang/rust/commits/f95bbf3da398fa68370a832c9b0492399ff43241", "html_url": "https://github.com/rust-lang/rust/commit/f95bbf3da398fa68370a832c9b0492399ff43241"}, {"sha": "18b40c64136aedb78a494c0c7e44273353198b0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/18b40c64136aedb78a494c0c7e44273353198b0e", "html_url": "https://github.com/rust-lang/rust/commit/18b40c64136aedb78a494c0c7e44273353198b0e"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "d60a0941b5979048653a32b293a469049daf40a9", "filename": "src/librustc_mir/build/matches/simplify.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6c9bdc341031b276c6d48d986530b86c7f64bd4d/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c9bdc341031b276c6d48d986530b86c7f64bd4d/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fsimplify.rs?ref=6c9bdc341031b276c6d48d986530b86c7f64bd4d", "patch": "@@ -19,6 +19,7 @@ use rustc::ty;\n use rustc::ty::layout::{Integer, IntegerExt, Size};\n use syntax::attr::{SignedInt, UnsignedInt};\n use rustc::hir::RangeEnd;\n+use rustc::mir::interpret::truncate;\n \n use std::mem;\n \n@@ -115,14 +116,14 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                     ty::Int(ity) => {\n                         // FIXME(49937): refactor these bit manipulations into interpret.\n                         let size = Integer::from_attr(&tcx, SignedInt(ity)).size();\n-                        let max = !0u128 >> (128 - size.bits());\n+                        let max = truncate(u128::max_value(), size);\n                         let bias = 1u128 << (size.bits() - 1);\n                         (Some((0, max, size)), bias)\n                     }\n                     ty::Uint(uty) => {\n                         // FIXME(49937): refactor these bit manipulations into interpret.\n                         let size = Integer::from_attr(&tcx, UnsignedInt(uty)).size();\n-                        let max = !0u128 >> (128 - size.bits());\n+                        let max = truncate(u128::max_value(), size);\n                         (Some((0, max, size)), 0)\n                     }\n                     _ => (None, 0),"}]}