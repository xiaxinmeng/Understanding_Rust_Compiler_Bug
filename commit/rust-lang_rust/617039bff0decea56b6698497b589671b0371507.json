{"sha": "617039bff0decea56b6698497b589671b0371507", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNzAzOWJmZjBkZWNlYTU2YjY2OTg0OTdiNTg5NjcxYjAzNzE1MDc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-07-13T05:43:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-13T05:43:31Z"}, "message": "Auto merge of #34756 - habnabit:mutex-refunwindsafe, r=alexcrichton\n\nMutex and RwLock need RefUnwindSafe too\n\nIncomplete, because I don't know what the appropriate stability annotation is here, but this is an attempt to bring the documentation for `std::panic` in line with reality. Right now, it says:\n\n>Types like `&Mutex<T>`, however, are unwind safe because they implement poisoning by default.\n\nBut only `Mutex<T>`, not `&Mutex<T>`, is unwind-safe.", "tree": {"sha": "87e9400d10662277520a45b4ff42bfc62a4da549", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87e9400d10662277520a45b4ff42bfc62a4da549"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/617039bff0decea56b6698497b589671b0371507", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/617039bff0decea56b6698497b589671b0371507", "html_url": "https://github.com/rust-lang/rust/commit/617039bff0decea56b6698497b589671b0371507", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/617039bff0decea56b6698497b589671b0371507/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bbb1c5c9960f221259f6d3b1906999361c9258c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bbb1c5c9960f221259f6d3b1906999361c9258c", "html_url": "https://github.com/rust-lang/rust/commit/4bbb1c5c9960f221259f6d3b1906999361c9258c"}, {"sha": "fbec232df1de37fce9badfe56c4a1d7c0050f3d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbec232df1de37fce9badfe56c4a1d7c0050f3d5", "html_url": "https://github.com/rust-lang/rust/commit/fbec232df1de37fce9badfe56c4a1d7c0050f3d5"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "ba18d15f5c4e384a8be0eeb0c0d83f7442d5ba01", "filename": "src/libstd/panic.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/617039bff0decea56b6698497b589671b0371507/src%2Flibstd%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/617039bff0decea56b6698497b589671b0371507/src%2Flibstd%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanic.rs?ref=617039bff0decea56b6698497b589671b0371507", "patch": "@@ -227,6 +227,11 @@ impl<T: ?Sized> !RefUnwindSafe for UnsafeCell<T> {}\n #[stable(feature = \"catch_unwind\", since = \"1.9.0\")]\n impl<T> RefUnwindSafe for AssertUnwindSafe<T> {}\n \n+#[stable(feature = \"unwind_safe_lock_refs\", since = \"1.12.0\")]\n+impl<T: ?Sized> RefUnwindSafe for Mutex<T> {}\n+#[stable(feature = \"unwind_safe_lock_refs\", since = \"1.12.0\")]\n+impl<T: ?Sized> RefUnwindSafe for RwLock<T> {}\n+\n #[stable(feature = \"catch_unwind\", since = \"1.9.0\")]\n impl<T> Deref for AssertUnwindSafe<T> {\n     type Target = T;"}, {"sha": "493a00ac5d00d947123391101f6ebd60da2c830c", "filename": "src/test/run-pass/panic-safe.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/617039bff0decea56b6698497b589671b0371507/src%2Ftest%2Frun-pass%2Fpanic-safe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/617039bff0decea56b6698497b589671b0371507/src%2Ftest%2Frun-pass%2Fpanic-safe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-safe.rs?ref=617039bff0decea56b6698497b589671b0371507", "patch": "@@ -36,6 +36,8 @@ fn main() {\n     assert::<Box<i32>>();\n     assert::<Mutex<i32>>();\n     assert::<RwLock<i32>>();\n+    assert::<&Mutex<i32>>();\n+    assert::<&RwLock<i32>>();\n     assert::<Rc<i32>>();\n     assert::<Arc<i32>>();\n "}]}