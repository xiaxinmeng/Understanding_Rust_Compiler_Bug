{"sha": "bc3e84250868dff44ce0ea0919d9db8549dddf32", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjM2U4NDI1MDg2OGRmZjQ0Y2UwZWEwOTE5ZDlkYjg1NDlkZGRmMzI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-10-29T15:19:28Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-11-09T00:47:57Z"}, "message": "Update FIXMEs with issue numbers", "tree": {"sha": "de50c82d335472edd5758dc56afdb2cfa2863882", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de50c82d335472edd5758dc56afdb2cfa2863882"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc3e84250868dff44ce0ea0919d9db8549dddf32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc3e84250868dff44ce0ea0919d9db8549dddf32", "html_url": "https://github.com/rust-lang/rust/commit/bc3e84250868dff44ce0ea0919d9db8549dddf32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc3e84250868dff44ce0ea0919d9db8549dddf32/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "195f1d77bd6bdd8988d5cbd107cb0c4cfa4694cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/195f1d77bd6bdd8988d5cbd107cb0c4cfa4694cc", "html_url": "https://github.com/rust-lang/rust/commit/195f1d77bd6bdd8988d5cbd107cb0c4cfa4694cc"}], "stats": {"total": 25, "additions": 9, "deletions": 16}, "files": [{"sha": "95b811f6765cf66d0425da440d933c2d5165b9ca", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc3e84250868dff44ce0ea0919d9db8549dddf32/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc3e84250868dff44ce0ea0919d9db8549dddf32/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=bc3e84250868dff44ce0ea0919d9db8549dddf32", "patch": "@@ -583,9 +583,7 @@ pub fn check_item(ccx: @mut CrateCtxt, it: @ast::item) {\n       ast::item_fn(ref decl, _, _, _, ref body) => {\n         let fn_tpt = ty::lookup_item_type(ccx.tcx, ast_util::local_def(it.id));\n \n-            // FIXME -- this won't fly for the case where people reference\n-            // a lifetime from within a type parameter. That's actually fairly\n-            // tricky.\n+        // FIXME(#5121) -- won't work for lifetimes that appear in type bounds\n         let param_env = ty::construct_parameter_environment(\n                 ccx.tcx,\n                 None,"}, {"sha": "ec11adbfa3dabb35192ea1b313d629126e205ce3", "filename": "src/librustc/middle/typeck/check/regionmanip.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bc3e84250868dff44ce0ea0919d9db8549dddf32/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionmanip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc3e84250868dff44ce0ea0919d9db8549dddf32/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionmanip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionmanip.rs?ref=bc3e84250868dff44ce0ea0919d9db8549dddf32", "patch": "@@ -94,15 +94,9 @@ pub fn relate_nested_regions(\n         relate_op: &'self fn(ty::Region, ty::Region),\n     }\n \n-    // FIXME we should define more precisely when a\n-    //       region is considered \"nested\" and take variance into account.\n-    //\n-    //       I can't decide whether skipping closure parameter types and\n-    //       so on is necessary or not. What is the difference, after all,\n-    //       between `&'a |&'b T|` and `&'a Fn<&'b T>`? And yet in the\n-    //       latter case I'm inclined to think we should probably track\n-    //       the relationship (but then again maybe we should just skip\n-    //       all such cases until it \"proves necessary\")\n+    // FIXME(#10151) -- Define more precisely when a region is\n+    // considered \"nested\". Consider taking variance into account as\n+    // well.\n \n     impl<'self> TypeFolder for RegionRelator<'self> {\n         fn tcx(&self) -> ty::ctxt {"}, {"sha": "2a55a681290e06433fc4529dadc4c24c3af24d0d", "filename": "src/librustc/middle/typeck/collect.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bc3e84250868dff44ce0ea0919d9db8549dddf32/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc3e84250868dff44ce0ea0919d9db8549dddf32/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=bc3e84250868dff44ce0ea0919d9db8549dddf32", "patch": "@@ -359,7 +359,7 @@ pub fn ensure_trait_methods(ccx: &CrateCtxt,\n         let num_trait_type_params = trait_generics.type_param_defs.len();\n         ty::Method::new(\n             *m_ident,\n-            // FIXME -- what about lifetime parameters here?\n+            // FIXME(#5121) -- distinguish early vs late lifetime params\n             ty_generics(this, m_generics, num_trait_type_params),\n             transformed_self_ty,\n             fty,\n@@ -486,7 +486,7 @@ fn convert_methods(ccx: &CrateCtxt,\n         let num_rcvr_type_params = rcvr_generics.ty_params.len();\n         ty::Method::new(\n             m.ident,\n-            // FIXME region param\n+            // FIXME(#5121) -- distinguish early vs late lifetime params\n             ty_generics(ccx, &m.generics, num_rcvr_type_params),\n             transformed_self_ty,\n             fty,\n@@ -683,7 +683,8 @@ pub fn instantiate_trait_ref(ccx: &CrateCtxt,\n      * trait. Fails if the type is a type other than an trait type.\n      */\n \n-    let rscope = ExplicitRscope; // FIXME\n+    // FIXME(#5121) -- distinguish early vs late lifetime params\n+    let rscope = ExplicitRscope;\n \n     match lookup_def_tcx(ccx.tcx, ast_trait_ref.path.span, ast_trait_ref.ref_id) {\n         ast::DefTrait(trait_did) => {"}, {"sha": "7b02d036511aa957d608193e710198237072541b", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc3e84250868dff44ce0ea0919d9db8549dddf32/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc3e84250868dff44ce0ea0919d9db8549dddf32/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=bc3e84250868dff44ce0ea0919d9db8549dddf32", "patch": "@@ -1905,7 +1905,7 @@ pub fn print_meta_item(s: @ps, item: &ast::MetaItem) {\n pub fn print_view_path(s: @ps, vp: &ast::view_path) {\n     match vp.node {\n       ast::view_path_simple(ident, ref path, _) => {\n-            // FIXME can't compare identifiers directly here\n+        // FIXME(#6993) can't compare identifiers directly here\n         if path.segments.last().identifier.name != ident.name {\n             print_ident(s, ident);\n             space(s.s);"}]}