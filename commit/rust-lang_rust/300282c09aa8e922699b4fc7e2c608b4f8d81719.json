{"sha": "300282c09aa8e922699b4fc7e2c608b4f8d81719", "node_id": "C_kwDOAAsO6NoAKDMwMDI4MmMwOWFhOGU5MjI2OTliNGZjN2UyYzYwOGI0ZjhkODE3MTk", "commit": {"author": {"name": "togami2864", "email": "tuabobo123@gmail.com", "date": "2021-11-15T17:53:35Z"}, "committer": {"name": "togami2864", "email": "tuabobo123@gmail.com", "date": "2021-11-15T17:53:35Z"}, "message": "fix fmt", "tree": {"sha": "ba0a17185eced81b5bfb8ca70138f1ad2c3b5069", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba0a17185eced81b5bfb8ca70138f1ad2c3b5069"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/300282c09aa8e922699b4fc7e2c608b4f8d81719", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/300282c09aa8e922699b4fc7e2c608b4f8d81719", "html_url": "https://github.com/rust-lang/rust/commit/300282c09aa8e922699b4fc7e2c608b4f8d81719", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/300282c09aa8e922699b4fc7e2c608b4f8d81719/comments", "author": {"login": "togami2864", "id": 62130798, "node_id": "MDQ6VXNlcjYyMTMwNzk4", "avatar_url": "https://avatars.githubusercontent.com/u/62130798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/togami2864", "html_url": "https://github.com/togami2864", "followers_url": "https://api.github.com/users/togami2864/followers", "following_url": "https://api.github.com/users/togami2864/following{/other_user}", "gists_url": "https://api.github.com/users/togami2864/gists{/gist_id}", "starred_url": "https://api.github.com/users/togami2864/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/togami2864/subscriptions", "organizations_url": "https://api.github.com/users/togami2864/orgs", "repos_url": "https://api.github.com/users/togami2864/repos", "events_url": "https://api.github.com/users/togami2864/events{/privacy}", "received_events_url": "https://api.github.com/users/togami2864/received_events", "type": "User", "site_admin": false}, "committer": {"login": "togami2864", "id": 62130798, "node_id": "MDQ6VXNlcjYyMTMwNzk4", "avatar_url": "https://avatars.githubusercontent.com/u/62130798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/togami2864", "html_url": "https://github.com/togami2864", "followers_url": "https://api.github.com/users/togami2864/followers", "following_url": "https://api.github.com/users/togami2864/following{/other_user}", "gists_url": "https://api.github.com/users/togami2864/gists{/gist_id}", "starred_url": "https://api.github.com/users/togami2864/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/togami2864/subscriptions", "organizations_url": "https://api.github.com/users/togami2864/orgs", "repos_url": "https://api.github.com/users/togami2864/repos", "events_url": "https://api.github.com/users/togami2864/events{/privacy}", "received_events_url": "https://api.github.com/users/togami2864/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd5781648a93ca851459c8397c2bb1dfa3dd393b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd5781648a93ca851459c8397c2bb1dfa3dd393b", "html_url": "https://github.com/rust-lang/rust/commit/cd5781648a93ca851459c8397c2bb1dfa3dd393b"}], "stats": {"total": 35, "additions": 16, "deletions": 19}, "files": [{"sha": "3a93d912e8c75c1af63cb523c28982828cc9e7c0", "filename": "clippy_lints/src/methods/option_map_or_none.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/300282c09aa8e922699b4fc7e2c608b4f8d81719/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300282c09aa8e922699b4fc7e2c608b4f8d81719/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs?ref=300282c09aa8e922699b4fc7e2c608b4f8d81719", "patch": "@@ -11,7 +11,8 @@ use rustc_span::symbol::sym;\n use super::OPTION_MAP_OR_NONE;\n use super::RESULT_MAP_OR_INTO_OPTION;\n \n-/// The expression inside a closure may or may not have surrounding braces\n+// The expression inside a closure may or may not have surrounding braces\n+// which causes problems when generating a suggestion.\n fn reduce_unit_expression<'a>(\n     cx: &LateContext<'_>,\n     expr: &'a hir::Expr<'_>,"}, {"sha": "abaf88be8cae6b4749d20aa1184b06f966adbea7", "filename": "tests/ui/option_map_or_none.fixed", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/300282c09aa8e922699b4fc7e2c608b4f8d81719/tests%2Fui%2Foption_map_or_none.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/300282c09aa8e922699b4fc7e2c608b4f8d81719/tests%2Fui%2Foption_map_or_none.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_or_none.fixed?ref=300282c09aa8e922699b4fc7e2c608b4f8d81719", "patch": "@@ -4,16 +4,14 @@\n \n fn main() {\n     let opt = Some(1);\n-    let bar = |_| {\n-        Some(1)\n-    };\n+    let bar = |_| Some(1);\n \n     // Check `OPTION_MAP_OR_NONE`.\n     // Single line case.\n-    let _ :Option<i32> = opt.map(|x| x + 1);\n+    let _: Option<i32> = opt.map(|x| x + 1);\n     // Multi-line case.\n     #[rustfmt::skip]\n-    let _ :Option<i32> = opt.map(|x| x + 1);\n+    let _: Option<i32> = opt.map(|x| x + 1);\n     // function returning `Option`\n-    let _ :Option<i32> = opt.and_then(bar);\n+    let _: Option<i32> = opt.and_then(bar);\n }"}, {"sha": "a63b63c4dc0d8b8be0f6e0be5c531785d645c75e", "filename": "tests/ui/option_map_or_none.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/300282c09aa8e922699b4fc7e2c608b4f8d81719/tests%2Fui%2Foption_map_or_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300282c09aa8e922699b4fc7e2c608b4f8d81719/tests%2Fui%2Foption_map_or_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_or_none.rs?ref=300282c09aa8e922699b4fc7e2c608b4f8d81719", "patch": "@@ -4,18 +4,16 @@\n \n fn main() {\n     let opt = Some(1);\n-    let bar = |_| {\n-        Some(1)\n-    };\n+    let bar = |_| Some(1);\n \n     // Check `OPTION_MAP_OR_NONE`.\n     // Single line case.\n-    let _ :Option<i32> = opt.map_or(None, |x| Some(x + 1));\n+    let _: Option<i32> = opt.map_or(None, |x| Some(x + 1));\n     // Multi-line case.\n     #[rustfmt::skip]\n-    let _ :Option<i32> = opt.map_or(None, |x| {\n+    let _: Option<i32> = opt.map_or(None, |x| {\n                         Some(x + 1)\n                        });\n     // function returning `Option`\n-    let _ :Option<i32> = opt.map_or(None, bar);\n+    let _: Option<i32> = opt.map_or(None, bar);\n }"}, {"sha": "aec46cb005f473d718501746f2a03ca7ec39b255", "filename": "tests/ui/option_map_or_none.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/300282c09aa8e922699b4fc7e2c608b4f8d81719/tests%2Fui%2Foption_map_or_none.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/300282c09aa8e922699b4fc7e2c608b4f8d81719/tests%2Fui%2Foption_map_or_none.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_or_none.stderr?ref=300282c09aa8e922699b4fc7e2c608b4f8d81719", "patch": "@@ -1,24 +1,24 @@\n error: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `map(..)` instead\n-  --> $DIR/option_map_or_none.rs:13:26\n+  --> $DIR/option_map_or_none.rs:11:26\n    |\n-LL |     let _ :Option<i32> = opt.map_or(None, |x| Some(x + 1));\n+LL |     let _: Option<i32> = opt.map_or(None, |x| Some(x + 1));\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `map` instead: `opt.map(|x| x + 1)`\n    |\n    = note: `-D clippy::option-map-or-none` implied by `-D warnings`\n \n error: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `map(..)` instead\n-  --> $DIR/option_map_or_none.rs:16:26\n+  --> $DIR/option_map_or_none.rs:14:26\n    |\n-LL |       let _ :Option<i32> = opt.map_or(None, |x| {\n+LL |       let _: Option<i32> = opt.map_or(None, |x| {\n    |  __________________________^\n LL | |                         Some(x + 1)\n LL | |                        });\n    | |_________________________^ help: try using `map` instead: `opt.map(|x| x + 1)`\n \n error: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n-  --> $DIR/option_map_or_none.rs:20:26\n+  --> $DIR/option_map_or_none.rs:18:26\n    |\n-LL |     let _ :Option<i32> = opt.map_or(None, bar);\n+LL |     let _: Option<i32> = opt.map_or(None, bar);\n    |                          ^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `opt.and_then(bar)`\n \n error: aborting due to 3 previous errors"}]}