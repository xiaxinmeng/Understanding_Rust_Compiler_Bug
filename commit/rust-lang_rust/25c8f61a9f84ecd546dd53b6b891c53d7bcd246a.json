{"sha": "25c8f61a9f84ecd546dd53b6b891c53d7bcd246a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1YzhmNjFhOWY4NGVjZDU0NmRkNTNiNmI4OTFjNTNkN2JjZDI0NmE=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-03-04T17:04:08Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-03-19T12:58:48Z"}, "message": "Move black_box back to rust-lang/libtest and use explicit imports", "tree": {"sha": "5c98f89d10699a5d31de488e3b1417c5fcb8742f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c98f89d10699a5d31de488e3b1417c5fcb8742f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25c8f61a9f84ecd546dd53b6b891c53d7bcd246a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25c8f61a9f84ecd546dd53b6b891c53d7bcd246a", "html_url": "https://github.com/rust-lang/rust/commit/25c8f61a9f84ecd546dd53b6b891c53d7bcd246a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25c8f61a9f84ecd546dd53b6b891c53d7bcd246a/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "008ce9902828eb3cad0b2b1019ab1960fbb9300a", "url": "https://api.github.com/repos/rust-lang/rust/commits/008ce9902828eb3cad0b2b1019ab1960fbb9300a", "html_url": "https://github.com/rust-lang/rust/commit/008ce9902828eb3cad0b2b1019ab1960fbb9300a"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "c15ed308ff0d4189771846f28e6d193ea60b4658", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/25c8f61a9f84ecd546dd53b6b891c53d7bcd246a/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25c8f61a9f84ecd546dd53b6b891c53d7bcd246a/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=25c8f61a9f84ecd546dd53b6b891c53d7bcd246a", "patch": "@@ -12,8 +12,27 @@\n #![unstable(feature = \"test\", issue = \"27812\")]\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        test(attr(deny(warnings))))]\n+#![feature(asm)]\n #![feature(staged_api)]\n #![feature(test)]\n \n extern crate libtest;\n-pub use libtest::*;\n+pub use libtest::{test_main_static, TestDescAndFn, StaticTestFn, StaticBenchFn, Options};\n+\n+/// A function that is opaque to the optimizer, to allow benchmarks to\n+/// pretend to use outputs to assist in avoiding dead-code\n+/// elimination.\n+///\n+/// This function is a no-op, and does not even read from `dummy`.\n+#[cfg(not(any(target_arch = \"asmjs\", target_arch = \"wasm32\")))]\n+pub fn black_box<T>(dummy: T) -> T {\n+    // we need to \"use\" the argument in some way LLVM can't\n+    // introspect.\n+    unsafe { asm!(\"\" : : \"r\"(&dummy)) }\n+    dummy\n+}\n+#[cfg(any(target_arch = \"asmjs\", target_arch = \"wasm32\"))]\n+#[inline(never)]\n+pub fn black_box<T>(dummy: T) -> T {\n+    dummy\n+}"}]}