{"sha": "f663a21c8f51db58ff73e2e0d9852d03e8916a5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NjNhMjFjOGY1MWRiNThmZjczZTJlMGQ5ODUyZDAzZTg5MTZhNWU=", "commit": {"author": {"name": "Iain Brandram-Adams", "email": "ijijnj@gmail.com", "date": "2020-06-13T13:24:36Z"}, "committer": {"name": "Iain Brandram-Adams", "email": "ijijnj@gmail.com", "date": "2020-06-13T13:24:36Z"}, "message": "Remove `bar` from blacklisted names", "tree": {"sha": "8dceb01e42dc0230d2489d417451f32eca80dce9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dceb01e42dc0230d2489d417451f32eca80dce9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f663a21c8f51db58ff73e2e0d9852d03e8916a5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f663a21c8f51db58ff73e2e0d9852d03e8916a5e", "html_url": "https://github.com/rust-lang/rust/commit/f663a21c8f51db58ff73e2e0d9852d03e8916a5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f663a21c8f51db58ff73e2e0d9852d03e8916a5e/comments", "author": null, "committer": null, "parents": [{"sha": "742706511c9f33c6a0d4380392e513e5249057e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/742706511c9f33c6a0d4380392e513e5249057e3", "html_url": "https://github.com/rust-lang/rust/commit/742706511c9f33c6a0d4380392e513e5249057e3"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "418c4ded544c0489ab159ecc40b9f270319d29ee", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f663a21c8f51db58ff73e2e0d9852d03e8916a5e/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f663a21c8f51db58ff73e2e0d9852d03e8916a5e/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=f663a21c8f51db58ff73e2e0d9852d03e8916a5e", "patch": "@@ -107,7 +107,7 @@ macro_rules! define_Conf {\n pub use self::helpers::Conf;\n define_Conf! {\n     /// Lint: BLACKLISTED_NAME. The list of blacklisted names to lint about\n-    (blacklisted_names, \"blacklisted_names\": Vec<String>, [\"foo\", \"bar\", \"baz\", \"quux\"].iter().map(ToString::to_string).collect()),\n+    (blacklisted_names, \"blacklisted_names\": Vec<String>, [\"foo\", \"baz\", \"quux\"].iter().map(ToString::to_string).collect()),\n     /// Lint: COGNITIVE_COMPLEXITY. The maximum cognitive complexity a function can have\n     (cognitive_complexity_threshold, \"cognitive_complexity_threshold\": u64, 25),\n     /// DEPRECATED LINT: CYCLOMATIC_COMPLEXITY. Use the Cognitive Complexity lint instead."}, {"sha": "3d87eb0618157b47714e5653568965de51ac752f", "filename": "tests/ui/blacklisted_name.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f663a21c8f51db58ff73e2e0d9852d03e8916a5e/tests%2Fui%2Fblacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f663a21c8f51db58ff73e2e0d9852d03e8916a5e/tests%2Fui%2Fblacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblacklisted_name.rs?ref=f663a21c8f51db58ff73e2e0d9852d03e8916a5e", "patch": "@@ -12,29 +12,32 @@ fn test(foo: ()) {}\n \n fn main() {\n     let foo = 42;\n-    let bar = 42;\n     let baz = 42;\n+    let quux = 42;\n+    // Unlike these others, `bar` is considered an acceptable name to use.\n+    // See https://github.com/rust-lang/rust-clippy/issues/5225.\n \n-    let barb = 42;\n-    let barbaric = 42;\n+    let food = 42;\n+    let foodstuffs = 42;\n+    let bazaar = 42;\n \n     match (42, Some(1337), Some(0)) {\n-        (foo, Some(bar), baz @ Some(_)) => (),\n+        (foo, Some(baz), quux @ Some(_)) => (),\n         _ => (),\n     }\n }\n \n fn issue_1647(mut foo: u8) {\n-    let mut bar = 0;\n-    if let Some(mut baz) = Some(42) {}\n+    let mut baz = 0;\n+    if let Some(mut quux) = Some(42) {}\n }\n \n fn issue_1647_ref() {\n-    let ref bar = 0;\n-    if let Some(ref baz) = Some(42) {}\n+    let ref baz = 0;\n+    if let Some(ref quux) = Some(42) {}\n }\n \n fn issue_1647_ref_mut() {\n-    let ref mut bar = 0;\n-    if let Some(ref mut baz) = Some(42) {}\n+    let ref mut baz = 0;\n+    if let Some(ref mut quux) = Some(42) {}\n }"}]}