{"sha": "8ec13a90aa026a8b6a4c5fc987816ec7a805b898", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlYzEzYTkwYWEwMjZhOGI2YTRjNWZjOTg3ODE2ZWM3YTgwNWI4OTg=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-12-23T21:48:31Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-12-23T21:48:31Z"}, "message": "Merge pull request #4239 from tedhorst/mandpipe\n\nupdate mandelbrot to pipes, a few other updates", "tree": {"sha": "e5d9e0a7a6cf56f9fac62e59f6ec9989245046a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5d9e0a7a6cf56f9fac62e59f6ec9989245046a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ec13a90aa026a8b6a4c5fc987816ec7a805b898", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ec13a90aa026a8b6a4c5fc987816ec7a805b898", "html_url": "https://github.com/rust-lang/rust/commit/8ec13a90aa026a8b6a4c5fc987816ec7a805b898", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ec13a90aa026a8b6a4c5fc987816ec7a805b898/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1b0c297a4d8841cc1f3ad24b1025d115b6ce7ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1b0c297a4d8841cc1f3ad24b1025d115b6ce7ae", "html_url": "https://github.com/rust-lang/rust/commit/b1b0c297a4d8841cc1f3ad24b1025d115b6ce7ae"}, {"sha": "2452ee11abd1aab42adbf4e8e6455dd74e2a5aa9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2452ee11abd1aab42adbf4e8e6455dd74e2a5aa9", "html_url": "https://github.com/rust-lang/rust/commit/2452ee11abd1aab42adbf4e8e6455dd74e2a5aa9"}], "stats": {"total": 33, "additions": 11, "deletions": 22}, "files": [{"sha": "b6c1baac4125030fa7fc2d865f6c330c0ef66904", "filename": "src/test/bench/shootout-mandelbrot.rs", "status": "modified", "additions": 11, "deletions": 22, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/8ec13a90aa026a8b6a4c5fc987816ec7a805b898/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec13a90aa026a8b6a4c5fc987816ec7a805b898/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs?ref=8ec13a90aa026a8b6a4c5fc987816ec7a805b898", "patch": "@@ -12,18 +12,14 @@\n //  http://shootout.alioth.debian.org/\n //   u64q/program.php?test=mandelbrot&lang=python3&id=2\n //\n-//  takes 3 optional args:\n+//  takes 2 optional args:\n //   square image size, defaults to 80_u\n-//   yield frequency, defaults to 10_u (yield every 10 spawns)\n //   output path, default is \"\" (no output), \"-\" means stdout\n //\n //  in the shootout, they use 16000 as image size\n-//  yield frequency doesn't seem to have much effect\n //\n //  writes pbm image to output path\n \n-#[legacy_modes];\n-\n extern mod std;\n use io::WriterUtil;\n use std::map::HashMap;\n@@ -51,7 +47,7 @@ impl cmplx : ops::Add<cmplx,cmplx> {\n     }\n }\n \n-type line = {i: uint, b: ~[u8]};\n+struct Line {i: uint, b: ~[u8]}\n \n pure fn cabs(x: cmplx) -> f64\n {\n@@ -87,7 +83,7 @@ fn fillbyte(x: cmplx, incr: f64) -> u8 {\n     rv\n }\n \n-fn chanmb(i: uint, size: uint, ch: oldcomm::Chan<line>) -> ()\n+fn chanmb(i: uint, size: uint, ch: oldcomm::Chan<Line>) -> ()\n {\n     let mut crv = ~[];\n     let incr = 2f64/(size as f64);\n@@ -97,22 +93,22 @@ fn chanmb(i: uint, size: uint, ch: oldcomm::Chan<line>) -> ()\n         let x = cmplx {re: xincr*(j as f64) - 1.5f64, im: y};\n         crv.push(fillbyte(x, incr));\n     };\n-    oldcomm::send(ch, {i:i, b:crv});\n+    oldcomm::send(ch, Line {i:i, b: move crv});\n }\n \n type devnull = {dn: int};\n \n impl devnull: io::Writer {\n     fn write(_b: &[const u8]) {}\n-    fn seek(+_i: int, +_s: io::SeekStyle) {}\n+    fn seek(_i: int, _s: io::SeekStyle) {}\n     fn tell() -> uint {0_u}\n     fn flush() -> int {0}\n     fn get_type() -> io::WriterType { io::File }\n }\n \n-fn writer(path: ~str, writech: oldcomm::Chan<oldcomm::Chan<line>>, size: uint)\n+fn writer(path: ~str, writech: oldcomm::Chan<oldcomm::Chan<Line>>, size: uint)\n {\n-    let p: oldcomm::Port<line> = oldcomm::Port();\n+    let p: oldcomm::Port<Line> = oldcomm::Port();\n     let ch = oldcomm::Chan(&p);\n     oldcomm::send(writech, ch);\n     let cout: io::Writer = match path {\n@@ -164,16 +160,13 @@ fn writer(path: ~str, writech: oldcomm::Chan<oldcomm::Chan<line>>, size: uint)\n fn main() {\n     let args = os::args();\n     let args = if os::getenv(~\"RUST_BENCH\").is_some() {\n-        ~[~\"\", ~\"4000\", ~\"10\"]\n+        ~[~\"\", ~\"4000\"]\n     } else {\n         args\n     };\n \n-    let path = if vec::len(args) < 4_u { ~\"\" }\n-    else { copy args[3] };  // FIXME: bad for perf\n-\n-    let yieldevery = if vec::len(args) < 3_u { 10_u }\n-    else { uint::from_str(args[2]).get() };\n+    let path = if vec::len(args) < 3_u { ~\"\" }\n+    else { copy args[2] };  // FIXME: bad for perf\n \n     let size = if vec::len(args) < 2_u { 80_u }\n     else { uint::from_str(args[1]).get() };\n@@ -185,10 +178,6 @@ fn main() {\n     };\n     let ch = oldcomm::recv(writep);\n     for uint::range(0_u, size) |j| {\n-        task::spawn(|| chanmb(j, size, ch) );\n-        if j % yieldevery == 0_u {\n-            debug!(\"Y %u\", j);\n-            task::yield();\n-        };\n+        do task::spawn { chanmb(j, size, ch) };\n     };\n }"}]}