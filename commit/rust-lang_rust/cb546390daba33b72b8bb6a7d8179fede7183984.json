{"sha": "cb546390daba33b72b8bb6a7d8179fede7183984", "node_id": "C_kwDOAAsO6NoAKGNiNTQ2MzkwZGFiYTMzYjcyYjhiYjZhN2Q4MTc5ZmVkZTcxODM5ODQ", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-03-30T11:41:31Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-03-30T11:42:15Z"}, "message": "fix: Recover from `pub()` visibility modifier", "tree": {"sha": "17ba470358e31a72c5f3f8b91e4e10cbe64cdb61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17ba470358e31a72c5f3f8b91e4e10cbe64cdb61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb546390daba33b72b8bb6a7d8179fede7183984", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb546390daba33b72b8bb6a7d8179fede7183984", "html_url": "https://github.com/rust-lang/rust/commit/cb546390daba33b72b8bb6a7d8179fede7183984", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb546390daba33b72b8bb6a7d8179fede7183984/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b915eb32fafd465ed02b27f1ba03c2d9b35dc87d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b915eb32fafd465ed02b27f1ba03c2d9b35dc87d", "html_url": "https://github.com/rust-lang/rust/commit/b915eb32fafd465ed02b27f1ba03c2d9b35dc87d"}], "stats": {"total": 71, "additions": 68, "deletions": 3}, "files": [{"sha": "e2fb1d1aced10c9f806891b93a27f36fcf2decb6", "filename": "crates/parser/src/grammar.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cb546390daba33b72b8bb6a7d8179fede7183984/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb546390daba33b72b8bb6a7d8179fede7183984/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=cb546390daba33b72b8bb6a7d8179fede7183984", "patch": "@@ -218,17 +218,22 @@ fn opt_visibility(p: &mut Parser<'_>, in_tuple_field: bool) -> bool {\n                     // pub(self) struct S;\n                     // pub(super) struct S;\n \n+                    // test_err crate_visibility_empty_recover\n+                    // pub() struct S;\n+\n                     // test pub_parens_typepath\n                     // struct B(pub (super::A));\n                     // struct B(pub (crate::A,));\n-                    T![crate] | T![self] | T![super] | T![ident] if p.nth(2) != T![:] => {\n+                    T![crate] | T![self] | T![super] | T![ident] | T![')'] if p.nth(2) != T![:] => {\n                         // If we are in a tuple struct, then the parens following `pub`\n                         // might be an tuple field, not part of the visibility. So in that\n                         // case we don't want to consume an identifier.\n \n                         // test pub_tuple_field\n                         // struct MyStruct(pub (u32, u32));\n-                        if !(in_tuple_field && matches!(p.nth(1), T![ident])) {\n+                        // struct MyStruct(pub (u32));\n+                        // struct MyStruct(pub ());\n+                        if !(in_tuple_field && matches!(p.nth(1), T![ident] | T![')'])) {\n                             p.bump(T!['(']);\n                             paths::use_path(p);\n                             p.expect(T![')']);\n@@ -243,7 +248,7 @@ fn opt_visibility(p: &mut Parser<'_>, in_tuple_field: bool) -> bool {\n                         paths::use_path(p);\n                         p.expect(T![')']);\n                     }\n-                    _ => (),\n+                    _ => {}\n                 }\n             }\n             m.complete(p, VISIBILITY);"}, {"sha": "0fe4ca42d79ddcdf5e54d00feb6aa2544e9e04b2", "filename": "crates/parser/test_data/parser/inline/err/0018_crate_visibility_empty_recover.rast", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cb546390daba33b72b8bb6a7d8179fede7183984/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Ferr%2F0018_crate_visibility_empty_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/cb546390daba33b72b8bb6a7d8179fede7183984/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Ferr%2F0018_crate_visibility_empty_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Ferr%2F0018_crate_visibility_empty_recover.rast?ref=cb546390daba33b72b8bb6a7d8179fede7183984", "patch": "@@ -0,0 +1,18 @@\n+SOURCE_FILE\n+  STRUCT\n+    VISIBILITY\n+      PUB_KW \"pub\"\n+      L_PAREN \"(\"\n+      PATH\n+        PATH_SEGMENT\n+          ERROR\n+            R_PAREN \")\"\n+    WHITESPACE \" \"\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+error 4: expected identifier\n+error 5: expected R_PAREN"}, {"sha": "e8cf9e6696d1aa27357c118089559bdd8f0469ef", "filename": "crates/parser/test_data/parser/inline/err/0018_crate_visibility_empty_recover.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cb546390daba33b72b8bb6a7d8179fede7183984/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Ferr%2F0018_crate_visibility_empty_recover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb546390daba33b72b8bb6a7d8179fede7183984/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Ferr%2F0018_crate_visibility_empty_recover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Ferr%2F0018_crate_visibility_empty_recover.rs?ref=cb546390daba33b72b8bb6a7d8179fede7183984", "patch": "@@ -0,0 +1 @@\n+pub() struct S;"}, {"sha": "c78d16f064c4add2abd6b99536adde5cb4474c72", "filename": "crates/parser/test_data/parser/inline/ok/0196_pub_tuple_field.rast", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/cb546390daba33b72b8bb6a7d8179fede7183984/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0196_pub_tuple_field.rast", "raw_url": "https://github.com/rust-lang/rust/raw/cb546390daba33b72b8bb6a7d8179fede7183984/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0196_pub_tuple_field.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0196_pub_tuple_field.rast?ref=cb546390daba33b72b8bb6a7d8179fede7183984", "patch": "@@ -28,3 +28,42 @@ SOURCE_FILE\n       R_PAREN \")\"\n     SEMICOLON \";\"\n   WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"MyStruct\"\n+    TUPLE_FIELD_LIST\n+      L_PAREN \"(\"\n+      TUPLE_FIELD\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        PAREN_TYPE\n+          L_PAREN \"(\"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"u32\"\n+          R_PAREN \")\"\n+      R_PAREN \")\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"MyStruct\"\n+    TUPLE_FIELD_LIST\n+      L_PAREN \"(\"\n+      TUPLE_FIELD\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        TUPLE_TYPE\n+          L_PAREN \"(\"\n+          R_PAREN \")\"\n+      R_PAREN \")\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\""}, {"sha": "6f725fb7b983a90244432175fb09201a87949c61", "filename": "crates/parser/test_data/parser/inline/ok/0196_pub_tuple_field.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb546390daba33b72b8bb6a7d8179fede7183984/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0196_pub_tuple_field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb546390daba33b72b8bb6a7d8179fede7183984/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0196_pub_tuple_field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0196_pub_tuple_field.rs?ref=cb546390daba33b72b8bb6a7d8179fede7183984", "patch": "@@ -1 +1,3 @@\n struct MyStruct(pub (u32, u32));\n+struct MyStruct(pub (u32));\n+struct MyStruct(pub ());"}]}