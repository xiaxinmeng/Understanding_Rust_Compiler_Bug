{"sha": "81c00e66f564ca67c391a5f24f2ad43189245d75", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxYzAwZTY2ZjU2NGNhNjdjMzkxYTVmMjRmMmFkNDMxODkyNDVkNzU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-05T10:36:53Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-05T16:29:15Z"}, "message": "Better debug printouts", "tree": {"sha": "e9acec65360cc9dab4f245394838251b78e21dc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9acec65360cc9dab4f245394838251b78e21dc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81c00e66f564ca67c391a5f24f2ad43189245d75", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81c00e66f564ca67c391a5f24f2ad43189245d75", "html_url": "https://github.com/rust-lang/rust/commit/81c00e66f564ca67c391a5f24f2ad43189245d75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81c00e66f564ca67c391a5f24f2ad43189245d75/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfe840245bf0ac42ae2b15176e21cece41c9f7b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfe840245bf0ac42ae2b15176e21cece41c9f7b7", "html_url": "https://github.com/rust-lang/rust/commit/dfe840245bf0ac42ae2b15176e21cece41c9f7b7"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "76caa42b850230ef07a398c1fd8bda8d9161a54a", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/81c00e66f564ca67c391a5f24f2ad43189245d75/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81c00e66f564ca67c391a5f24f2ad43189245d75/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=81c00e66f564ca67c391a5f24f2ad43189245d75", "patch": "@@ -1167,25 +1167,25 @@ impl cmp::PartialEq for InferRegion {\n \n impl fmt::Show for TyVid {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result{\n-        write!(f, \"<generic #{}>\", self.index)\n+        write!(f, \"_#{}t\", self.index)\n     }\n }\n \n impl fmt::Show for IntVid {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"<generic integer #{}>\", self.index)\n+        write!(f, \"_#{}i\", self.index)\n     }\n }\n \n impl fmt::Show for FloatVid {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"<generic float #{}>\", self.index)\n+        write!(f, \"_#{}f\", self.index)\n     }\n }\n \n impl fmt::Show for RegionVid {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"'<generic lifetime #{}>\", self.index)\n+        write!(f, \"'_#{}r\", self.index)\n     }\n }\n "}, {"sha": "cdc45890c09ea71d9df79ea44fe2572639970760", "filename": "src/librustc/middle/typeck/infer/region_inference/mod.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/81c00e66f564ca67c391a5f24f2ad43189245d75/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81c00e66f564ca67c391a5f24f2ad43189245d75/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference%2Fmod.rs?ref=81c00e66f564ca67c391a5f24f2ad43189245d75", "patch": "@@ -952,6 +952,11 @@ impl<'a, 'tcx> RegionVarBindings<'a, 'tcx> {\n                              -> Vec<VarValue>\n     {\n         let mut var_data = self.construct_var_data();\n+\n+        // Dorky hack to cause `dump_constraints` to only get called\n+        // if debug mode is enabled:\n+        debug!(\"----() End constraint listing {}---\", self.dump_constraints());\n+\n         self.expansion(var_data.as_mut_slice());\n         self.contraction(var_data.as_mut_slice());\n         let values =\n@@ -974,6 +979,13 @@ impl<'a, 'tcx> RegionVarBindings<'a, 'tcx> {\n         })\n     }\n \n+    fn dump_constraints(&self) {\n+        debug!(\"----() Start constraint listing ()----\");\n+        for (idx, (constraint, _)) in self.constraints.borrow().iter().enumerate() {\n+            debug!(\"Constraint {} => {}\", idx, constraint.repr(self.tcx));\n+        }\n+    }\n+\n     fn expansion(&self, var_data: &mut [VarData]) {\n         self.iterate_until_fixed_point(\"Expansion\", |constraint| {\n             debug!(\"expansion: constraint={} origin={}\","}, {"sha": "33e1419753249453245ad72a3fa9adc5edd23b8f", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/81c00e66f564ca67c391a5f24f2ad43189245d75/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81c00e66f564ca67c391a5f24f2ad43189245d75/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=81c00e66f564ca67c391a5f24f2ad43189245d75", "patch": "@@ -373,14 +373,10 @@ pub fn ty_to_string(cx: &ctxt, typ: t) -> String {\n     fn infer_ty_to_string(cx: &ctxt, ty: ty::InferTy) -> String {\n         let print_var_ids = cx.sess.verbose();\n         match ty {\n-            ty::TyVar(ty::TyVid { index: vid }) if print_var_ids =>\n-                format!(\"_#{}\", vid),\n-            ty::IntVar(ty::IntVid { index: vid }) if print_var_ids =>\n-                format!(\"_#{}i\", vid),\n-            ty::FloatVar(ty::FloatVid { index: vid }) if print_var_ids =>\n-                format!(\"_#{}f\", vid),\n-            ty::TyVar(_) | ty::IntVar(_) | ty::FloatVar(_) =>\n-                \"_\".to_string(),\n+            ty::TyVar(ref vid) if print_var_ids => vid.repr(cx),\n+            ty::IntVar(ref vid) if print_var_ids => vid.repr(cx),\n+            ty::FloatVar(ref vid) if print_var_ids => vid.repr(cx),\n+            ty::TyVar(_) | ty::IntVar(_) | ty::FloatVar(_) => format!(\"_\"),\n             ty::SkolemizedTy(v) => format!(\"SkolemizedTy({})\", v),\n             ty::SkolemizedIntTy(v) => format!(\"SkolemizedIntTy({})\", v)\n         }\n@@ -858,7 +854,7 @@ impl Repr for ty::Region {\n             }\n \n             ty::ReInfer(ReVar(ref vid)) => {\n-                format!(\"ReInfer({})\", vid.index)\n+                format!(\"{}\", vid)\n             }\n \n             ty::ReInfer(ReSkolemized(id, ref bound_region)) => {"}]}