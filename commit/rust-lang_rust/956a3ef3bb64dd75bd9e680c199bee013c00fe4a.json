{"sha": "956a3ef3bb64dd75bd9e680c199bee013c00fe4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1NmEzZWYzYmI2NGRkNzViZDllNjgwYzE5OWJlZTAxM2MwMGZlNGE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-02T08:48:51Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-04T08:39:05Z"}, "message": "more inlining", "tree": {"sha": "5ce0d7dd9a75b3c0c3cf0487fb7871b39bdda47e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ce0d7dd9a75b3c0c3cf0487fb7871b39bdda47e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/956a3ef3bb64dd75bd9e680c199bee013c00fe4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/956a3ef3bb64dd75bd9e680c199bee013c00fe4a", "html_url": "https://github.com/rust-lang/rust/commit/956a3ef3bb64dd75bd9e680c199bee013c00fe4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/956a3ef3bb64dd75bd9e680c199bee013c00fe4a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "127610b7c4d4c4bd2c2e4dd4b62640a2cdc41f14", "url": "https://api.github.com/repos/rust-lang/rust/commits/127610b7c4d4c4bd2c2e4dd4b62640a2cdc41f14", "html_url": "https://github.com/rust-lang/rust/commit/127610b7c4d4c4bd2c2e4dd4b62640a2cdc41f14"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "24d882b8b4640ec976a10aa1be0c13a04a5801d1", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/956a3ef3bb64dd75bd9e680c199bee013c00fe4a/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956a3ef3bb64dd75bd9e680c199bee013c00fe4a/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=956a3ef3bb64dd75bd9e680c199bee013c00fe4a", "patch": "@@ -10,8 +10,8 @@ use rustc::mir;\n use rustc::ty::{self, TyCtxt};\n \n use super::{\n-    Allocation, AllocId, InterpResult, Scalar, AllocationExtra,\n-    InterpCx, PlaceTy, OpTy, ImmTy, MemoryKind, Pointer, Memory\n+    Allocation, AllocId, InterpResult, InterpError, Scalar, AllocationExtra,\n+    InterpCx, PlaceTy, OpTy, ImmTy, MemoryKind, Pointer, Memory,\n };\n \n /// Whether this kind of memory is allowed to leak\n@@ -209,17 +209,19 @@ pub trait Machine<'mir, 'tcx>: Sized {\n         extra: Self::FrameExtra,\n     ) -> InterpResult<'tcx>;\n \n+    #[inline(always)]\n     fn int_to_ptr(\n         _mem: &Memory<'mir, 'tcx, Self>,\n         int: u64,\n     ) -> InterpResult<'tcx, Pointer<Self::PointerTag>> {\n-        if int == 0 {\n-            err!(InvalidNullPointerUsage)\n+        Err((if int == 0 {\n+            InterpError::InvalidNullPointerUsage\n         } else {\n-            err!(ReadBytesAsPointer)\n-        }\n+            InterpError::ReadBytesAsPointer\n+        }).into())\n     }\n \n+    #[inline(always)]\n     fn ptr_to_int(\n         _mem: &Memory<'mir, 'tcx, Self>,\n         _ptr: Pointer<Self::PointerTag>,"}]}