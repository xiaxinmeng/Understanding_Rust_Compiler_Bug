{"sha": "1660c3be932ff7beff5f025a708bf3ee0ff2ebd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2NjBjM2JlOTMyZmY3YmVmZjVmMDI1YTcwOGJmM2VlMGZmMmViZDQ=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2014-08-25T20:30:49Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2014-08-25T20:30:49Z"}, "message": "librustc: Use Typer's node_ty method instead of free function in ExprUseVisitor.", "tree": {"sha": "1881fb5b46e68f9fbf73b9e2c04800c4614daf8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1881fb5b46e68f9fbf73b9e2c04800c4614daf8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1660c3be932ff7beff5f025a708bf3ee0ff2ebd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1660c3be932ff7beff5f025a708bf3ee0ff2ebd4", "html_url": "https://github.com/rust-lang/rust/commit/1660c3be932ff7beff5f025a708bf3ee0ff2ebd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1660c3be932ff7beff5f025a708bf3ee0ff2ebd4/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fb2dfaa200f2cb32e77c54ae8a5e0f4823b65c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fb2dfaa200f2cb32e77c54ae8a5e0f4823b65c8", "html_url": "https://github.com/rust-lang/rust/commit/5fb2dfaa200f2cb32e77c54ae8a5e0f4823b65c8"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "0b71c35d2f8873178ef6e04f9c4a35e687589e7d", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1660c3be932ff7beff5f025a708bf3ee0ff2ebd4/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1660c3be932ff7beff5f025a708bf3ee0ff2ebd4/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=1660c3be932ff7beff5f025a708bf3ee0ff2ebd4", "patch": "@@ -234,7 +234,7 @@ impl<'d,'t,TYPER:mc::Typer> ExprUseVisitor<'d,'t,TYPER> {\n                          decl: &ast::FnDecl,\n                          body: &ast::Block) {\n         for arg in decl.inputs.iter() {\n-            let arg_ty = ty::node_id_to_type(self.tcx(), arg.pat.id);\n+            let arg_ty = return_if_err!(self.typer.node_ty(arg.pat.id));\n \n             let arg_cmt = self.mc.cat_rvalue(\n                 arg.id,\n@@ -414,7 +414,7 @@ impl<'d,'t,TYPER:mc::Typer> ExprUseVisitor<'d,'t,TYPER> {\n \n                 // Fetch the type of the value that the iteration yields to\n                 // produce the pattern's categorized mutable type.\n-                let pattern_type = ty::node_id_to_type(self.tcx(), pat.id);\n+                let pattern_type = return_if_err!(self.typer.node_ty(pat.id));\n                 let pat_cmt = self.mc.cat_rvalue(pat.id,\n                                                  pat.span,\n                                                  ty::ReScope(blk.id),\n@@ -828,7 +828,7 @@ impl<'d,'t,TYPER:mc::Typer> ExprUseVisitor<'d,'t,TYPER> {\n                        pat.repr(tcx));\n \n                 // pat_ty: the type of the binding being produced.\n-                let pat_ty = ty::node_id_to_type(tcx, pat.id);\n+                let pat_ty = return_if_err!(typer.node_ty(pat.id));\n \n                 // Each match binding is effectively an assignment to the\n                 // binding being produced.\n@@ -971,7 +971,7 @@ impl<'d,'t,TYPER:mc::Typer> ExprUseVisitor<'d,'t,TYPER> {\n         // Create the cmt for the variable being borrowed, from the\n         // caller's perspective\n         let var_id = upvar_def.def_id().node;\n-        let var_ty = ty::node_id_to_type(self.tcx(), var_id);\n+        let var_ty = try!(self.typer.node_ty(var_id));\n         self.mc.cat_def(closure_id, closure_span, var_ty, upvar_def)\n     }\n }"}]}