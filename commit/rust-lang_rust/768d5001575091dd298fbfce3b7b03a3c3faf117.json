{"sha": "768d5001575091dd298fbfce3b7b03a3c3faf117", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2OGQ1MDAxNTc1MDkxZGQyOThmYmZjZTNiN2IwM2EzYzNmYWYxMTc=", "commit": {"author": {"name": "Jeremy Fitzhardinge", "email": "jsgf@fb.com", "date": "2019-06-27T00:22:39Z"}, "committer": {"name": "Jeremy Fitzhardinge", "email": "jsgf@fb.com", "date": "2019-06-27T00:22:39Z"}, "message": "save-analysis: use buffered writes\n\nOtherwise it ends up writing the file byte at a time, which can be very slow for large outputs.", "tree": {"sha": "917f8e88d909474c5a1d1de5527536668f404e13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/917f8e88d909474c5a1d1de5527536668f404e13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/768d5001575091dd298fbfce3b7b03a3c3faf117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/768d5001575091dd298fbfce3b7b03a3c3faf117", "html_url": "https://github.com/rust-lang/rust/commit/768d5001575091dd298fbfce3b7b03a3c3faf117", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/768d5001575091dd298fbfce3b7b03a3c3faf117/comments", "author": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3e2cec29225a46298ec4ebf082f34ebd7cfeecf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3e2cec29225a46298ec4ebf082f34ebd7cfeecf", "html_url": "https://github.com/rust-lang/rust/commit/d3e2cec29225a46298ec4ebf082f34ebd7cfeecf"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "ab82f75f74f4b26e3083c23de3c5c2de62e43b7f", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/768d5001575091dd298fbfce3b7b03a3c3faf117/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768d5001575091dd298fbfce3b7b03a3c3faf117/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=768d5001575091dd298fbfce3b7b03a3c3faf117", "patch": "@@ -29,6 +29,7 @@ use std::cell::Cell;\n use std::default::Default;\n use std::env;\n use std::fs::File;\n+use std::io::BufWriter;\n use std::path::{Path, PathBuf};\n \n use syntax::ast::{self, Attribute, DUMMY_NODE_ID, NodeId, PatKind};\n@@ -1025,7 +1026,7 @@ impl<'a> DumpHandler<'a> {\n         }\n     }\n \n-    fn output_file(&self, ctx: &SaveContext<'_, '_>) -> (File, PathBuf) {\n+    fn output_file(&self, ctx: &SaveContext<'_, '_>) -> (BufWriter<File>, PathBuf) {\n         let sess = &ctx.tcx.sess;\n         let file_name = match ctx.config.output_file {\n             Some(ref s) => PathBuf::from(s),\n@@ -1059,9 +1060,9 @@ impl<'a> DumpHandler<'a> {\n \n         info!(\"Writing output to {}\", file_name.display());\n \n-        let output_file = File::create(&file_name).unwrap_or_else(\n+        let output_file = BufWriter::new(File::create(&file_name).unwrap_or_else(\n             |e| sess.fatal(&format!(\"Could not open {}: {}\", file_name.display(), e)),\n-        );\n+        ));\n \n         (output_file, file_name)\n     }"}]}