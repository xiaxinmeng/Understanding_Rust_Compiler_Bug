{"sha": "1de93a78147126dcb864e070734532a02dde56cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkZTkzYTc4MTQ3MTI2ZGNiODY0ZTA3MDczNDUzMmEwMmRkZTU2Y2M=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-05-20T09:43:38Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-05-27T12:32:03Z"}, "message": "Add a smoketest for combining PGO with xLTO.", "tree": {"sha": "311c381471abdf997cb9f9aff63902e3e1c7ba5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/311c381471abdf997cb9f9aff63902e3e1c7ba5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1de93a78147126dcb864e070734532a02dde56cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1de93a78147126dcb864e070734532a02dde56cc", "html_url": "https://github.com/rust-lang/rust/commit/1de93a78147126dcb864e070734532a02dde56cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1de93a78147126dcb864e070734532a02dde56cc/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30a3fad31614496e902289f88e78c8e9cab6af4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/30a3fad31614496e902289f88e78c8e9cab6af4f", "html_url": "https://github.com/rust-lang/rust/commit/30a3fad31614496e902289f88e78c8e9cab6af4f"}], "stats": {"total": 131, "additions": 131, "deletions": 0}, "files": [{"sha": "59a7d61892ffbe0ea6631f400d6f6c40ac4275b7", "filename": "src/test/run-make-fulldeps/cross-lang-lto-pgo-smoketest/Makefile", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/1de93a78147126dcb864e070734532a02dde56cc/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/1de93a78147126dcb864e070734532a02dde56cc/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2FMakefile?ref=1de93a78147126dcb864e070734532a02dde56cc", "patch": "@@ -0,0 +1,87 @@\n+# needs-matching-clang\n+\n+# This test makes sure that cross-language inlining can be used in conjunction\n+# with profile-guided optimization. The test only tests that the whole workflow\n+# can be executed without anything crashing. It does not test whether PGO or\n+# xLTO have any specific effect on the generated code.\n+\n+-include ../tools.mk\n+\n+COMMON_FLAGS=-Copt-level=3 -Ccodegen-units=1\n+\n+# LLVM doesn't support instrumenting binaries that use SEH:\n+# https://bugs.llvm.org/show_bug.cgi?id=41279\n+#\n+# Things work fine with -Cpanic=abort though.\n+ifdef IS_MSVC\n+COMMON_FLAGS+= -Cpanic=abort\n+endif\n+\n+all: cpp-executable rust-executable\n+\n+cpp-executable:\n+\t$(RUSTC) -Clinker-plugin-lto=on \\\n+\t         -Zpgo-gen=\"$(TMPDIR)\"/cpp-profdata \\\n+\t         -o \"$(TMPDIR)\"/librustlib-xlto.a \\\n+\t         $(COMMON_FLAGS) \\\n+\t         ./rustlib.rs\n+\t$(CLANG) -flto=thin \\\n+\t         -fprofile-generate=\"$(TMPDIR)\"/cpp-profdata \\\n+\t         -fuse-ld=lld \\\n+\t         -L \"$(TMPDIR)\" \\\n+\t         -lrustlib-xlto \\\n+\t         -o \"$(TMPDIR)\"/cmain \\\n+\t         -O3 \\\n+\t         ./cmain.c\n+\t$(TMPDIR)/cmain\n+\t# Postprocess the profiling data so it can be used by the compiler\n+\t\"$(LLVM_BIN_DIR)\"/llvm-profdata merge \\\n+\t\t-o \"$(TMPDIR)\"/cpp-profdata/merged.profdata \\\n+\t\t\"$(TMPDIR)\"/cpp-profdata/default_*.profraw\n+\t$(RUSTC) -Clinker-plugin-lto=on \\\n+\t         -Zpgo-use=\"$(TMPDIR)\"/cpp-profdata/merged.profdata \\\n+\t         -o \"$(TMPDIR)\"/librustlib-xlto.a \\\n+\t         $(COMMON_FLAGS) \\\n+\t         ./rustlib.rs\n+\t$(CLANG) -flto=thin \\\n+\t         -fprofile-use=\"$(TMPDIR)\"/cpp-profdata/merged.profdata \\\n+\t         -fuse-ld=lld \\\n+\t         -L \"$(TMPDIR)\" \\\n+\t         -lrustlib-xlto \\\n+\t         -o \"$(TMPDIR)\"/cmain \\\n+\t         -O3 \\\n+\t         ./cmain.c\n+\n+rust-executable:\n+\texit\n+\t$(CLANG) ./clib.c -fprofile-generate=\"$(TMPDIR)\"/rs-profdata -flto=thin -c -o $(TMPDIR)/clib.o -O3\n+\t(cd $(TMPDIR); $(AR) crus ./libxyz.a ./clib.o)\n+\t$(RUSTC) -Clinker-plugin-lto=on \\\n+\t         -Zpgo-gen=\"$(TMPDIR)\"/rs-profdata \\\n+\t         -L$(TMPDIR) \\\n+\t         $(COMMON_FLAGS) \\\n+\t         -Clinker=$(CLANG) \\\n+\t         -Clink-arg=-fuse-ld=lld \\\n+\t         -o $(TMPDIR)/rsmain \\\n+\t         ./main.rs\n+\t$(TMPDIR)/rsmain\n+\t# Postprocess the profiling data so it can be used by the compiler\n+\t\"$(LLVM_BIN_DIR)\"/llvm-profdata merge \\\n+\t\t-o \"$(TMPDIR)\"/rs-profdata/merged.profdata \\\n+\t\t\"$(TMPDIR)\"/rs-profdata/default_*.profraw\n+\t$(CLANG) ./clib.c \\\n+\t         -fprofile-use=\"$(TMPDIR)\"/rs-profdata/merged.profdata \\\n+\t         -flto=thin \\\n+\t         -c \\\n+\t         -o $(TMPDIR)/clib.o \\\n+\t         -O3\n+\trm \"$(TMPDIR)\"/libxyz.a\n+\t(cd $(TMPDIR); $(AR) crus ./libxyz.a ./clib.o)\n+\t$(RUSTC) -Clinker-plugin-lto=on \\\n+\t         -Zpgo-use=\"$(TMPDIR)\"/rs-profdata/merged.profdata \\\n+\t         -L$(TMPDIR) \\\n+\t         $(COMMON_FLAGS) \\\n+\t         -Clinker=$(CLANG) \\\n+\t         -Clink-arg=-fuse-ld=lld \\\n+\t         -o $(TMPDIR)/rsmain \\\n+\t         ./main.rs"}, {"sha": "90f33f24dc42425b38b394c08354c4ef3ecd9d9a", "filename": "src/test/run-make-fulldeps/cross-lang-lto-pgo-smoketest/clib.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1de93a78147126dcb864e070734532a02dde56cc/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2Fclib.c", "raw_url": "https://github.com/rust-lang/rust/raw/1de93a78147126dcb864e070734532a02dde56cc/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2Fclib.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2Fclib.c?ref=1de93a78147126dcb864e070734532a02dde56cc", "patch": "@@ -0,0 +1,9 @@\n+#include <stdint.h>\n+\n+uint32_t c_always_inlined() {\n+    return 1234;\n+}\n+\n+__attribute__((noinline)) uint32_t c_never_inlined() {\n+    return 12345;\n+}"}, {"sha": "e3f24828be371c3828bece6ed9ad0b58715be781", "filename": "src/test/run-make-fulldeps/cross-lang-lto-pgo-smoketest/cmain.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1de93a78147126dcb864e070734532a02dde56cc/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2Fcmain.c", "raw_url": "https://github.com/rust-lang/rust/raw/1de93a78147126dcb864e070734532a02dde56cc/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2Fcmain.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2Fcmain.c?ref=1de93a78147126dcb864e070734532a02dde56cc", "patch": "@@ -0,0 +1,12 @@\n+#include <stdint.h>\n+\n+// A trivial function defined in Rust, returning a constant value. This should\n+// always be inlined.\n+uint32_t rust_always_inlined();\n+\n+\n+uint32_t rust_never_inlined();\n+\n+int main(int argc, char** argv) {\n+    return (rust_never_inlined() + rust_always_inlined()) * 0;\n+}"}, {"sha": "8129dcb85d96a0442f390f86a63154f3ff580377", "filename": "src/test/run-make-fulldeps/cross-lang-lto-pgo-smoketest/main.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1de93a78147126dcb864e070734532a02dde56cc/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1de93a78147126dcb864e070734532a02dde56cc/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2Fmain.rs?ref=1de93a78147126dcb864e070734532a02dde56cc", "patch": "@@ -0,0 +1,11 @@\n+#[link(name = \"xyz\")]\n+extern \"C\" {\n+    fn c_always_inlined() -> u32;\n+    fn c_never_inlined() -> u32;\n+}\n+\n+fn main() {\n+    unsafe {\n+        println!(\"blub: {}\", c_always_inlined() + c_never_inlined());\n+    }\n+}"}, {"sha": "8a74d74a420bd556056268d427ca26493d02f447", "filename": "src/test/run-make-fulldeps/cross-lang-lto-pgo-smoketest/rustlib.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1de93a78147126dcb864e070734532a02dde56cc/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2Frustlib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1de93a78147126dcb864e070734532a02dde56cc/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2Frustlib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcross-lang-lto-pgo-smoketest%2Frustlib.rs?ref=1de93a78147126dcb864e070734532a02dde56cc", "patch": "@@ -0,0 +1,12 @@\n+#![crate_type=\"staticlib\"]\n+\n+#[no_mangle]\n+pub extern \"C\" fn rust_always_inlined() -> u32 {\n+    42\n+}\n+\n+#[no_mangle]\n+#[inline(never)]\n+pub extern \"C\" fn rust_never_inlined() -> u32 {\n+    421\n+}"}]}