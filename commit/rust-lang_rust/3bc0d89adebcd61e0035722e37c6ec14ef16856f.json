{"sha": "3bc0d89adebcd61e0035722e37c6ec14ef16856f", "node_id": "C_kwDOAAsO6NoAKDNiYzBkODlhZGViY2Q2MWUwMDM1NzIyZTM3YzZlYzE0ZWYxNjg1NmY", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-10-01T11:28:05Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-10-01T11:28:05Z"}, "message": "Fix format highlighting with `concat!`", "tree": {"sha": "457c9d7a22e6d7d9a53f26262a80733c3f3245db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/457c9d7a22e6d7d9a53f26262a80733c3f3245db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bc0d89adebcd61e0035722e37c6ec14ef16856f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bc0d89adebcd61e0035722e37c6ec14ef16856f", "html_url": "https://github.com/rust-lang/rust/commit/3bc0d89adebcd61e0035722e37c6ec14ef16856f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bc0d89adebcd61e0035722e37c6ec14ef16856f/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2", "html_url": "https://github.com/rust-lang/rust/commit/bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "6f6671f8ca7925b31badd68fba1040d773e1a7ea", "filename": "crates/ide/src/syntax_highlighting/format.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3bc0d89adebcd61e0035722e37c6ec14ef16856f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bc0d89adebcd61e0035722e37c6ec14ef16856f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fformat.rs?ref=3bc0d89adebcd61e0035722e37c6ec14ef16856f", "patch": "@@ -28,9 +28,18 @@ pub(super) fn highlight_format_string(\n }\n \n fn is_format_string(string: &ast::String) -> Option<()> {\n-    let parent = string.syntax().parent()?;\n+    // Check if `string` is a format string argument of a macro invocation.\n+    // `string` is a string literal, mapped down into the innermost macro expansion.\n+    // Since `format_args!` etc. remove the format string when expanding, but place all arguments\n+    // in the expanded output, we know that the string token is (part of) the format string if it\n+    // appears in `format_args!` (otherwise it would have been mapped down further).\n+    //\n+    // This setup lets us correctly highlight the components of `concat!(\"{}\", \"bla\")` format\n+    // strings. It still fails for `concat!(\"{\", \"}\")`, but that is rare.\n+\n+    let macro_call = string.syntax().ancestors().find_map(ast::MacroCall::cast)?;\n+    let name = macro_call.path()?.segment()?.name_ref()?;\n \n-    let name = parent.parent().and_then(ast::MacroCall::cast)?.path()?.segment()?.name_ref()?;\n     if !matches!(\n         name.text().as_str(),\n         \"format_args\" | \"format_args_nl\" | \"const_format_args\" | \"panic_2015\" | \"panic_2021\"\n@@ -41,13 +50,6 @@ fn is_format_string(string: &ast::String) -> Option<()> {\n     // NB: we match against `panic_2015`/`panic_2021` here because they have a special-cased arm for\n     // `\"{}\"`, which otherwise wouldn't get highlighted.\n \n-    let first_literal = parent\n-        .children_with_tokens()\n-        .find_map(|it| it.as_token().cloned().and_then(ast::String::cast))?;\n-    if &first_literal != string {\n-        return None;\n-    }\n-\n     Some(())\n }\n "}, {"sha": "893094b24a47da7f21b5e889d676f1f2d93b7f43", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_strings.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3bc0d89adebcd61e0035722e37c6ec14ef16856f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/3bc0d89adebcd61e0035722e37c6ec14ef16856f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html?ref=3bc0d89adebcd61e0035722e37c6ec14ef16856f", "patch": "@@ -145,4 +145,5 @@\n     <span class=\"macro\">assert!</span><span class=\"parenthesis\">(</span><span class=\"bool_literal\">true</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> asdasd\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"macro\">toho!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">fmt\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">0</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"macro\">asm!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"mov eax, </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">format_args!</span><span class=\"parenthesis\">(</span>concat<span class=\"punctuation\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"{}\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "18f562f0b1bb985dbbe77aebf14b12a7959e9389", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3bc0d89adebcd61e0035722e37c6ec14ef16856f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bc0d89adebcd61e0035722e37c6ec14ef16856f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=3bc0d89adebcd61e0035722e37c6ec14ef16856f", "patch": "@@ -540,6 +540,7 @@ fn main() {\n     assert!(true, \"{} asdasd\", 1);\n     toho!(\"{}fmt\", 0);\n     asm!(\"mov eax, {0}\");\n+    format_args!(concat!(\"{}\"), \"{}\");\n }\"#\n         .trim(),\n         expect_file![\"./test_data/highlight_strings.html\"],"}]}