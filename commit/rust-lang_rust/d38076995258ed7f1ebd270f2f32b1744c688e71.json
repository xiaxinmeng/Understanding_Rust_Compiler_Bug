{"sha": "d38076995258ed7f1ebd270f2f32b1744c688e71", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzODA3Njk5NTI1OGVkN2YxZWJkMjcwZjJmMzJiMTc0NGM2ODhlNzE=", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-17T04:22:25Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-17T15:58:35Z"}, "message": "extract conditions for `from_iter_instead_of_collect`  into its own module", "tree": {"sha": "4ae49174e6c39108c95ed0777f05fece366b0ae9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ae49174e6c39108c95ed0777f05fece366b0ae9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d38076995258ed7f1ebd270f2f32b1744c688e71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d38076995258ed7f1ebd270f2f32b1744c688e71", "html_url": "https://github.com/rust-lang/rust/commit/d38076995258ed7f1ebd270f2f32b1744c688e71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d38076995258ed7f1ebd270f2f32b1744c688e71/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62490c41af1a5dab806e45dd2bc0b8d56a3c3c23", "url": "https://api.github.com/repos/rust-lang/rust/commits/62490c41af1a5dab806e45dd2bc0b8d56a3c3c23", "html_url": "https://github.com/rust-lang/rust/commit/62490c41af1a5dab806e45dd2bc0b8d56a3c3c23"}], "stats": {"total": 32, "additions": 14, "deletions": 18}, "files": [{"sha": "c668fe52781dc32a5c0e0dcac0f1e59818ab7bcf", "filename": "clippy_lints/src/methods/chars_cmp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d38076995258ed7f1ebd270f2f32b1744c688e71/clippy_lints%2Fsrc%2Fmethods%2Fchars_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d38076995258ed7f1ebd270f2f32b1744c688e71/clippy_lints%2Fsrc%2Fmethods%2Fchars_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fchars_cmp.rs?ref=d38076995258ed7f1ebd270f2f32b1744c688e71", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{method_chain_args, single_segment_path};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::{method_chain_args, single_segment_path};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "4275857757fee4552ee56536a9622261a78a86e5", "filename": "clippy_lints/src/methods/chars_cmp_with_unwrap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d38076995258ed7f1ebd270f2f32b1744c688e71/clippy_lints%2Fsrc%2Fmethods%2Fchars_cmp_with_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d38076995258ed7f1ebd270f2f32b1744c688e71/clippy_lints%2Fsrc%2Fmethods%2Fchars_cmp_with_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fchars_cmp_with_unwrap.rs?ref=d38076995258ed7f1ebd270f2f32b1744c688e71", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::method_chain_args;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::method_chain_args;\n use clippy_utils::source::snippet_with_applicability;\n use if_chain::if_chain;\n use rustc_ast::ast;"}, {"sha": "15cf567431387c3e0c57aefb9fac3679a174cd64", "filename": "clippy_lints/src/methods/from_iter_instead_of_collect.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d38076995258ed7f1ebd270f2f32b1744c688e71/clippy_lints%2Fsrc%2Fmethods%2Ffrom_iter_instead_of_collect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d38076995258ed7f1ebd270f2f32b1744c688e71/clippy_lints%2Fsrc%2Fmethods%2Ffrom_iter_instead_of_collect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffrom_iter_instead_of_collect.rs?ref=d38076995258ed7f1ebd270f2f32b1744c688e71", "patch": "@@ -1,20 +1,22 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::ty::implements_trait;\n-use clippy_utils::{get_trait_def_id, paths, sugg};\n+use clippy_utils::{get_trait_def_id, match_qpath, paths, sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n+use rustc_hir::ExprKind;\n use rustc_lint::{LateContext, LintContext};\n use rustc_middle::ty::Ty;\n use rustc_span::sym;\n \n use super::FROM_ITER_INSTEAD_OF_COLLECT;\n \n-pub(super) fn check(cx: &LateContext<'_>, expr: &hir::Expr<'_>, args: &[hir::Expr<'_>]) {\n-    let ty = cx.typeck_results().expr_ty(expr);\n-    let arg_ty = cx.typeck_results().expr_ty(&args[0]);\n-\n+pub(super) fn check(cx: &LateContext<'_>, expr: &hir::Expr<'_>, args: &[hir::Expr<'_>], func_kind: &ExprKind<'_>) {\n     if_chain! {\n+        if let hir::ExprKind::Path(path) = func_kind;\n+        if match_qpath(path, &[\"from_iter\"]);\n+        let ty = cx.typeck_results().expr_ty(expr);\n+        let arg_ty = cx.typeck_results().expr_ty(&args[0]);\n         if let Some(from_iter_id) = get_trait_def_id(cx, &paths::FROM_ITERATOR);\n         if let Some(iter_id) = cx.tcx.get_diagnostic_item(sym::Iterator);\n "}, {"sha": "808b64d9493f4b4cbd2678a339b8ec83facc6372", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d38076995258ed7f1ebd270f2f32b1744c688e71/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d38076995258ed7f1ebd270f2f32b1744c688e71/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=d38076995258ed7f1ebd270f2f32b1744c688e71", "patch": "@@ -63,8 +63,8 @@ use clippy_utils::diagnostics::{span_lint, span_lint_and_help};\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::{contains_ty, implements_trait, is_copy, is_type_diagnostic_item};\n use clippy_utils::{\n-    contains_return, get_trait_def_id, in_macro, iter_input_pats, match_def_path, match_qpath, method_calls,\n-    method_chain_args, paths, return_ty, single_segment_path, SpanlessEq,\n+    contains_return, get_trait_def_id, in_macro, iter_input_pats, match_qpath, method_calls, paths, return_ty,\n+    SpanlessEq,\n };\n use if_chain::if_chain;\n use rustc_ast::ast;\n@@ -1777,22 +1777,17 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n \n         match expr.kind {\n             hir::ExprKind::Call(ref func, ref args) => {\n-                if let hir::ExprKind::Path(path) = &func.kind {\n-                    if match_qpath(path, &[\"from_iter\"]) {\n-                        from_iter_instead_of_collect::check(cx, expr, args);\n-                    }\n-                }\n+                from_iter_instead_of_collect::check(cx, expr, args, &func.kind);\n             },\n             hir::ExprKind::MethodCall(ref method_call, ref method_span, ref args, _) => {\n                 or_fun_call::check(cx, expr, *method_span, &method_call.ident.as_str(), args);\n                 expect_fun_call::check(cx, expr, *method_span, &method_call.ident.as_str(), args);\n                 clone_on_copy::check(cx, expr, method_call.ident.name, args);\n                 clone_on_ref_ptr::check(cx, expr, method_call.ident.name, args);\n-\n-                let self_ty = cx.typeck_results().expr_ty_adjusted(&args[0]);\n                 inefficient_to_string::check(cx, expr, method_call.ident.name, args);\n                 single_char_add_str::check(cx, expr, args);\n \n+                let self_ty = cx.typeck_results().expr_ty_adjusted(&args[0]);\n                 match self_ty.kind() {\n                     ty::Ref(_, ty, _) if *ty.kind() == ty::Str => {\n                         for &(method, pos) in &PATTERN_METHODS {"}, {"sha": "9a5fabcf7cd5064e9ef86af014f83882ae6e5d09", "filename": "clippy_lints/src/methods/single_char_add_str.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d38076995258ed7f1ebd270f2f32b1744c688e71/clippy_lints%2Fsrc%2Fmethods%2Fsingle_char_add_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d38076995258ed7f1ebd270f2f32b1744c688e71/clippy_lints%2Fsrc%2Fmethods%2Fsingle_char_add_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fsingle_char_add_str.rs?ref=d38076995258ed7f1ebd270f2f32b1744c688e71", "patch": "@@ -1,6 +1,5 @@\n use crate::methods::{single_char_insert_string, single_char_push_string};\n-use crate::utils::match_def_path;\n-use crate::utils::paths;\n+use clippy_utils::{match_def_path, paths};\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n "}]}