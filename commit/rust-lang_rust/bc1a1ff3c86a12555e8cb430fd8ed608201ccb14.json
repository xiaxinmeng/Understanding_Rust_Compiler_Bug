{"sha": "bc1a1ff3c86a12555e8cb430fd8ed608201ccb14", "node_id": "C_kwDOAAsO6NoAKGJjMWExZmYzYzg2YTEyNTU1ZThjYjQzMGZkOGVkNjA4MjAxY2NiMTQ", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-29T20:51:10Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-29T21:02:14Z"}, "message": "Fix whitespace in pretty printed PatKind::Range", "tree": {"sha": "500949216a295eaef390c62bfb3af9702829693b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/500949216a295eaef390c62bfb3af9702829693b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmHMzNYACgkQ+boUO5X/\nbYKDgQ/9F8VupqiY9+4NWEOWJ3fBUq4hnAEo5piJPAV6QYyMNTI/Gvoih9+QYV4S\nAylBtFLneJNru7579BoQstqaiXH/5wVjAKVivjGJWfnbkgKr+J2/TVW+ft2XwTSO\n3OULwFGc1wUkw1znpYqQ/7AVxTktsWEUpdxJx1RKaVRJIivctqwfszbb+GR5oxyA\nHVdLcKchCJ8sgX4VV/erlcXsTidyWDrYNd7MPlfcLZ4sel+LriVJulvqMB7hCNK7\nByagBUM7gOhwpJcNTFdI1rox4XHHJfaZjOtn7ik9PJDgsEpl8aKdSLih8tRAEXfK\n/BOwTwUolFI1QgvJpjTmB+TbJ7hGG7tAW0HsVwJ3W3fw8RkvW9ijOHmlxrTCd9xR\nd6pEQAXds47U/Xc4rQv0EJW+xTtQbcuLpn1BsyAbdO+tRY0aPkD8zDki1LN10pdt\nTRnBnukFtkWKcGQ1yBGaicx7FqMHi2v5PNExUrtzNPb0XciGxg1utz3+iEwNMJTB\nrryJVcx9SKmFULAu/sPBS21HbLhC3br9KVVLPIqplKsYo3t42S0Ol1bD3N/Z+MjW\nha7iQUZ3jXLrO0CGgwrY7n1gwCwhniad585jIOwMPaW/WNQKLf+QawqZt0UNVsf0\nfW+vYTJZf5TJ7BubjOMnciJUTC8dCDMEj2yeAjQJNXP5BMKrIoI=\n=lH7D\n-----END PGP SIGNATURE-----", "payload": "tree 500949216a295eaef390c62bfb3af9702829693b\nparent df96fb166f59431e3de443835e50d5b8a7a4adb0\nauthor David Tolnay <dtolnay@gmail.com> 1640811070 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1640811734 -0800\n\nFix whitespace in pretty printed PatKind::Range\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14", "html_url": "https://github.com/rust-lang/rust/commit/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df96fb166f59431e3de443835e50d5b8a7a4adb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/df96fb166f59431e3de443835e50d5b8a7a4adb0", "html_url": "https://github.com/rust-lang/rust/commit/df96fb166f59431e3de443835e50d5b8a7a4adb0"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "949766a46590649e1d8ecdbbc610922656e846ba", "filename": "compiler/rustc_ast_pretty/src/pprust/state.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs?ref=bc1a1ff3c86a12555e8cb430fd8ed608201ccb14", "patch": "@@ -2515,7 +2515,6 @@ impl<'a> State<'a> {\n             PatKind::Range(ref begin, ref end, Spanned { node: ref end_kind, .. }) => {\n                 if let Some(e) = begin {\n                     self.print_expr(e);\n-                    self.space();\n                 }\n                 match *end_kind {\n                     RangeEnd::Included(RangeSyntax::DotDotDot) => self.word(\"...\"),"}, {"sha": "fb11aaf24c4b8d15804de10ab819e2036a29ef29", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=bc1a1ff3c86a12555e8cb430fd8ed608201ccb14", "patch": "@@ -1948,7 +1948,6 @@ impl<'a> State<'a> {\n             PatKind::Range(ref begin, ref end, ref end_kind) => {\n                 if let Some(expr) = begin {\n                     self.print_expr(expr);\n-                    self.space();\n                 }\n                 match *end_kind {\n                     RangeEnd::Included => self.word(\"...\"),"}, {"sha": "93b73c57e9b4d364099996f648f651f9eb81a211", "filename": "src/test/ui/half-open-range-patterns/half-open-range-pats-ref-ambiguous-interp.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fhalf-open-range-pats-ref-ambiguous-interp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fhalf-open-range-pats-ref-ambiguous-interp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fhalf-open-range-pats-ref-ambiguous-interp.stderr?ref=bc1a1ff3c86a12555e8cb430fd8ed608201ccb14", "patch": "@@ -2,7 +2,7 @@ error: the range pattern here has ambiguous interpretation\n   --> $DIR/half-open-range-pats-ref-ambiguous-interp.rs:8:10\n    |\n LL |         &0.. | _ => {}\n-   |          ^^^ help: add parentheses to clarify the precedence: `(0 ..)`\n+   |          ^^^ help: add parentheses to clarify the precedence: `(0..)`\n \n error[E0586]: inclusive range with no end\n   --> $DIR/half-open-range-pats-ref-ambiguous-interp.rs:10:11\n@@ -16,7 +16,7 @@ error: the range pattern here has ambiguous interpretation\n   --> $DIR/half-open-range-pats-ref-ambiguous-interp.rs:10:10\n    |\n LL |         &0..= | _ => {}\n-   |          ^^^^ help: add parentheses to clarify the precedence: `(0 ..=)`\n+   |          ^^^^ help: add parentheses to clarify the precedence: `(0..=)`\n \n error[E0586]: inclusive range with no end\n   --> $DIR/half-open-range-pats-ref-ambiguous-interp.rs:13:11"}, {"sha": "d3dcb0986f426f8e338685aa7385be6b60717a9c", "filename": "src/test/ui/macros/stringify.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs?ref=bc1a1ff3c86a12555e8cb430fd8ed608201ccb14", "patch": "@@ -712,10 +712,10 @@ fn test_pat() {\n \n     // PatKind::Range\n     assert_eq!(stringify_pat!(..1), \"..1\");\n-    assert_eq!(stringify_pat!(0..), \"0 ..\"); // FIXME\n-    assert_eq!(stringify_pat!(0..1), \"0 ..1\");\n-    assert_eq!(stringify_pat!(0..=1), \"0 ..=1\");\n-    assert_eq!(stringify_pat!(-2..=-1), \"-2 ..=-1\");\n+    assert_eq!(stringify_pat!(0..), \"0..\");\n+    assert_eq!(stringify_pat!(0..1), \"0..1\");\n+    assert_eq!(stringify_pat!(0..=1), \"0..=1\");\n+    assert_eq!(stringify_pat!(-2..=-1), \"-2..=-1\");\n \n     // PatKind::Slice\n     assert_eq!(stringify_pat!([]), \"[]\");"}, {"sha": "a6d27aab4f6af0269d477a1497ccac643cefc38d", "filename": "src/test/ui/parser/intersection-patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Fparser%2Fintersection-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Fparser%2Fintersection-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fintersection-patterns.rs?ref=bc1a1ff3c86a12555e8cb430fd8ed608201ccb14", "patch": "@@ -34,7 +34,7 @@ fn main() {\n         //~| pattern on the left, should be on the right\n         //~| binding on the right, should be on the left\n         //~| HELP switch the order\n-        //~| SUGGESTION e @ 1 ..=5\n+        //~| SUGGESTION e @ 1..=5\n         _ => {}\n     }\n }"}, {"sha": "9dc4c469a60720258ee9eebab4c6284716f946e3", "filename": "src/test/ui/parser/intersection-patterns.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Fparser%2Fintersection-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Fparser%2Fintersection-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fintersection-patterns.stderr?ref=bc1a1ff3c86a12555e8cb430fd8ed608201ccb14", "patch": "@@ -27,7 +27,7 @@ LL |         1 ..= 5 @ e => {}\n    |         |         |\n    |         |         binding on the right, should be on the left\n    |         pattern on the left, should be on the right\n-   |         help: switch the order: `e @ 1 ..=5`\n+   |         help: switch the order: `e @ 1..=5`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "38104bab7c8ee77762f1a309412e360dc9f3ea6a", "filename": "src/test/ui/range/range-inclusive-pattern-precedence.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence.fixed?ref=bc1a1ff3c86a12555e8cb430fd8ed608201ccb14", "patch": "@@ -12,7 +12,7 @@ pub fn main() {\n         //~^ WARN `...` range patterns are deprecated\n         //~| WARN this is accepted in the current edition\n         //~| HELP use `..=` for an inclusive range\n-        &(10 ..=15) => {}\n+        &(10..=15) => {}\n         //~^ ERROR the range pattern here has ambiguous interpretation\n         //~| HELP add parentheses to clarify the precedence\n         &(16..=20) => {}"}, {"sha": "10513374cf8087f8e2ec0b656f734fe45feeacd9", "filename": "src/test/ui/range/range-inclusive-pattern-precedence.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence.stderr?ref=bc1a1ff3c86a12555e8cb430fd8ed608201ccb14", "patch": "@@ -2,7 +2,7 @@ error: the range pattern here has ambiguous interpretation\n   --> $DIR/range-inclusive-pattern-precedence.rs:15:10\n    |\n LL |         &10..=15 => {}\n-   |          ^^^^^^^ help: add parentheses to clarify the precedence: `(10 ..=15)`\n+   |          ^^^^^^^ help: add parentheses to clarify the precedence: `(10..=15)`\n \n warning: `...` range patterns are deprecated\n   --> $DIR/range-inclusive-pattern-precedence.rs:11:9"}, {"sha": "cdec41d7f75d57a99d09d7d808f61a5b1d22f9b6", "filename": "src/test/ui/range/range-inclusive-pattern-precedence2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frange%2Frange-inclusive-pattern-precedence2.stderr?ref=bc1a1ff3c86a12555e8cb430fd8ed608201ccb14", "patch": "@@ -2,7 +2,7 @@ error: the range pattern here has ambiguous interpretation\n   --> $DIR/range-inclusive-pattern-precedence2.rs:14:13\n    |\n LL |         box 10..=15 => {}\n-   |             ^^^^^^^ help: add parentheses to clarify the precedence: `(10 ..=15)`\n+   |             ^^^^^^^ help: add parentheses to clarify the precedence: `(10..=15)`\n \n warning: `...` range patterns are deprecated\n   --> $DIR/range-inclusive-pattern-precedence2.rs:10:14"}, {"sha": "b745b988631693bcb54a88dce0959e1456cd8537", "filename": "src/test/ui/unpretty-expr-fn-arg.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Funpretty-expr-fn-arg.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/bc1a1ff3c86a12555e8cb430fd8ed608201ccb14/src%2Ftest%2Fui%2Funpretty-expr-fn-arg.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funpretty-expr-fn-arg.stdout?ref=bc1a1ff3c86a12555e8cb430fd8ed608201ccb14", "patch": "@@ -14,4 +14,4 @@ extern crate std;\n \n fn main() ({ } as ())\n \n-fn foo((-(128 as i8) as i8) ...(127 as i8): i8) ({ } as ())\n+fn foo((-(128 as i8) as i8)...(127 as i8): i8) ({ } as ())"}]}