{"sha": "31cf26a953fe69c23de49f98676a746fea5dcefb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxY2YyNmE5NTNmZTY5YzIzZGU0OWY5ODY3NmE3NDZmZWE1ZGNlZmI=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2017-09-18T19:24:33Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2017-09-18T19:56:58Z"}, "message": "core: Implement fold / rfold for Rev\n\nWith both in place, we can cross them over in rev, and we give rfold\nbehaviour to .rev().fold() and so on.", "tree": {"sha": "5f680ced86c69460c8c86ad6a620a553099d3e06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f680ced86c69460c8c86ad6a620a553099d3e06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31cf26a953fe69c23de49f98676a746fea5dcefb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31cf26a953fe69c23de49f98676a746fea5dcefb", "html_url": "https://github.com/rust-lang/rust/commit/31cf26a953fe69c23de49f98676a746fea5dcefb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31cf26a953fe69c23de49f98676a746fea5dcefb/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91318c8cab25504472deb5cd89e6a11fed60fe13", "url": "https://api.github.com/repos/rust-lang/rust/commits/91318c8cab25504472deb5cd89e6a11fed60fe13", "html_url": "https://github.com/rust-lang/rust/commit/91318c8cab25504472deb5cd89e6a11fed60fe13"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "65cd28b499e11e5b4458cf9b26d1d53d12cc0a5a", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/31cf26a953fe69c23de49f98676a746fea5dcefb/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31cf26a953fe69c23de49f98676a746fea5dcefb/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=31cf26a953fe69c23de49f98676a746fea5dcefb", "patch": "@@ -359,6 +359,12 @@ impl<I> Iterator for Rev<I> where I: DoubleEndedIterator {\n     #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) { self.iter.size_hint() }\n \n+    fn fold<Acc, F>(self, init: Acc, f: F) -> Acc\n+        where F: FnMut(Acc, Self::Item) -> Acc,\n+    {\n+        self.iter.rfold(init, f)\n+    }\n+\n     #[inline]\n     fn find<P>(&mut self, predicate: P) -> Option<Self::Item>\n         where P: FnMut(&Self::Item) -> bool\n@@ -379,6 +385,12 @@ impl<I> DoubleEndedIterator for Rev<I> where I: DoubleEndedIterator {\n     #[inline]\n     fn next_back(&mut self) -> Option<<I as Iterator>::Item> { self.iter.next() }\n \n+    fn rfold<Acc, F>(self, init: Acc, f: F) -> Acc\n+        where F: FnMut(Acc, Self::Item) -> Acc,\n+    {\n+        self.iter.fold(init, f)\n+    }\n+\n     fn rfind<P>(&mut self, predicate: P) -> Option<Self::Item>\n         where P: FnMut(&Self::Item) -> bool\n     {"}]}