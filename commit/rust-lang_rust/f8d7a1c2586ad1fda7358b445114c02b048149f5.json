{"sha": "f8d7a1c2586ad1fda7358b445114c02b048149f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ZDdhMWMyNTg2YWQxZmRhNzM1OGI0NDUxMTRjMDJiMDQ4MTQ5ZjU=", "commit": {"author": {"name": "Lenny222", "email": "github@kudling.de", "date": "2012-01-01T16:30:12Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-01T21:15:30Z"}, "message": "\"str\": extract to_upper/lower_case() into \"char\"", "tree": {"sha": "2febfffebe45d538c0fb0cd78e60d1a59bb7c601", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2febfffebe45d538c0fb0cd78e60d1a59bb7c601"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8d7a1c2586ad1fda7358b445114c02b048149f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8d7a1c2586ad1fda7358b445114c02b048149f5", "html_url": "https://github.com/rust-lang/rust/commit/f8d7a1c2586ad1fda7358b445114c02b048149f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8d7a1c2586ad1fda7358b445114c02b048149f5/comments", "author": null, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8319b5a252c39716f74c96cea22b3024fb707097", "url": "https://api.github.com/repos/rust-lang/rust/commits/8319b5a252c39716f74c96cea22b3024fb707097", "html_url": "https://github.com/rust-lang/rust/commit/8319b5a252c39716f74c96cea22b3024fb707097"}], "stats": {"total": 78, "additions": 63, "deletions": 15}, "files": [{"sha": "815637b1a4238a156bfb32bcff1405b687e2ef36", "filename": "src/libcore/char.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f8d7a1c2586ad1fda7358b445114c02b048149f5/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8d7a1c2586ad1fda7358b445114c02b048149f5/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=f8d7a1c2586ad1fda7358b445114c02b048149f5", "patch": "@@ -41,7 +41,7 @@ export is_alphabetic,\n        is_XID_start, is_XID_continue,\n        is_lowercase, is_uppercase,\n        is_whitespace, is_alphanumeric,\n-       to_digit, maybe_digit, cmp;\n+       to_digit, to_lowercase, to_uppercase, maybe_digit, cmp;\n \n import is_alphabetic = unicode::derived_property::Alphabetic;\n import is_XID_start = unicode::derived_property::XID_Start;\n@@ -136,6 +136,34 @@ pure fn maybe_digit(c: char) -> option::t<u8> {\n     }\n }\n \n+/*\n+ Function: to_lowercase\n+\n+ Convert a char to the corresponding lower case.\n+\n+ FIXME: works only on ASCII\n+*/\n+pure fn to_lowercase(c: char) -> char {\n+    alt c {\n+      'A' to 'Z' { ((c as u8) + 32u8) as char }\n+      _ { c }\n+    }\n+}\n+\n+/*\n+ Function: to_uppercase\n+\n+ Convert a char to the corresponding upper case.\n+\n+ FIXME: works only on ASCII\n+*/\n+pure fn to_uppercase(c: char) -> char {\n+    alt c {\n+      'a' to 'z' { ((c as u8) - 32u8) as char }\n+      _ { c }\n+    }\n+}\n+\n /*\n  Function: cmp\n "}, {"sha": "449cc95aa214c63dfdf2fbc9864e641f77e7e79f", "filename": "src/libcore/str.rs", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f8d7a1c2586ad1fda7358b445114c02b048149f5/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8d7a1c2586ad1fda7358b445114c02b048149f5/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=f8d7a1c2586ad1fda7358b445114c02b048149f5", "patch": "@@ -7,10 +7,10 @@ String manipulation.\n export eq, lteq, hash, is_empty, is_not_empty, is_whitespace, byte_len,\n        byte_len_range, index,\n        rindex, find, starts_with, ends_with, substr, slice, split, splitn,\n-       split_str, concat, connect, to_upper, replace, char_slice, trim_left,\n-       trim_right, trim, unshift_char, shift_char, pop_char, push_char,\n-       is_utf8, from_chars, to_chars, char_len, char_len_range, char_at,\n-       bytes, is_ascii, shift_byte, pop_byte,\n+       split_str, concat, connect, to_lower, to_upper, replace, char_slice,\n+       trim_left, trim_right, trim, unshift_char, shift_char, pop_char,\n+       push_char, is_utf8, from_chars, to_chars, char_len, char_len_range,\n+       char_at, bytes, is_ascii, shift_byte, pop_byte,\n        unsafe_from_byte, unsafe_from_bytes, from_char, char_range_at,\n        str_from_cstr, sbuf, as_buf, push_byte, utf8_char_width, safe_slice,\n        contains, iter_chars, loop_chars, loop_chars_sub,\n@@ -832,23 +832,27 @@ fn connect(v: [str], sep: str) -> str {\n     ret s;\n }\n \n-// FIXME: This only handles ASCII\n+/*\n+Function: to_lower\n+\n+Convert a string to lowercase\n+*/\n+fn to_lower(s: str) -> str {\n+    let outstr = \"\";\n+    iter_chars(s) { |c|\n+        push_char(outstr, char::to_lowercase(c));\n+    }\n+    ret outstr;\n+}\n /*\n Function: to_upper\n \n Convert a string to uppercase\n */\n fn to_upper(s: str) -> str {\n     let outstr = \"\";\n-    let ascii_a = 'a' as u8;\n-    let ascii_z = 'z' as u8;\n-    let diff = 32u8;\n-    for byte: u8 in s {\n-        let next;\n-        if ascii_a <= byte && byte <= ascii_z {\n-            next = byte - diff;\n-        } else { next = byte; }\n-        push_byte(outstr, next);\n+    iter_chars(s) { |c|\n+        push_char(outstr, char::to_uppercase(c));\n     }\n     ret outstr;\n }"}, {"sha": "23101ee34bdd2ed2aee1b8a0210f0e769814820b", "filename": "src/test/stdtest/char.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f8d7a1c2586ad1fda7358b445114c02b048149f5/src%2Ftest%2Fstdtest%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8d7a1c2586ad1fda7358b445114c02b048149f5/src%2Ftest%2Fstdtest%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fchar.rs?ref=f8d7a1c2586ad1fda7358b445114c02b048149f5", "patch": "@@ -60,3 +60,19 @@ fn test_to_digit_fail_1() {\n fn test_to_digit_fail_2() {\n     char::to_digit('$');\n }\n+\n+#[test]\n+fn test_to_lowercase() {\n+    assert (char::to_lowercase('H') == 'h');\n+    assert (char::to_lowercase('e') == 'e');\n+    //assert (char::to_lowercase('\u00d6') == '\u00f6');\n+    assert (char::to_lowercase('\u00df') == '\u00df');\n+}\n+\n+#[test]\n+fn test_to_uppercase() {\n+    assert (char::to_uppercase('l') == 'L');\n+    assert (char::to_uppercase('Q') == 'Q');\n+    //assert (char::to_uppercase('\u00fc') == '\u00dc');\n+    assert (char::to_uppercase('\u00df') == '\u00df');\n+}"}]}