{"sha": "2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNDVlMmQ4NzhmYjNiOGZmY2FhNGFiMDg1OGNhYjNhN2E0MzI0ZTA=", "commit": {"author": {"name": "Leander Tentrup", "email": "leander.tentrup@gmail.com", "date": "2020-06-17T13:27:13Z"}, "committer": {"name": "Leander Tentrup", "email": "leander.tentrup@gmail.com", "date": "2020-06-17T13:27:13Z"}, "message": "Syntax highlighting for escape sequences in strings", "tree": {"sha": "2b1931cadd7400a09e6d10f0cb9ae4cc6646e93d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b1931cadd7400a09e6d10f0cb9ae4cc6646e93d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "html_url": "https://github.com/rust-lang/rust/commit/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/comments", "author": {"login": "ltentrup", "id": 201808, "node_id": "MDQ6VXNlcjIwMTgwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/201808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ltentrup", "html_url": "https://github.com/ltentrup", "followers_url": "https://api.github.com/users/ltentrup/followers", "following_url": "https://api.github.com/users/ltentrup/following{/other_user}", "gists_url": "https://api.github.com/users/ltentrup/gists{/gist_id}", "starred_url": "https://api.github.com/users/ltentrup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ltentrup/subscriptions", "organizations_url": "https://api.github.com/users/ltentrup/orgs", "repos_url": "https://api.github.com/users/ltentrup/repos", "events_url": "https://api.github.com/users/ltentrup/events{/privacy}", "received_events_url": "https://api.github.com/users/ltentrup/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ltentrup", "id": 201808, "node_id": "MDQ6VXNlcjIwMTgwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/201808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ltentrup", "html_url": "https://github.com/ltentrup", "followers_url": "https://api.github.com/users/ltentrup/followers", "following_url": "https://api.github.com/users/ltentrup/following{/other_user}", "gists_url": "https://api.github.com/users/ltentrup/gists{/gist_id}", "starred_url": "https://api.github.com/users/ltentrup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ltentrup/subscriptions", "organizations_url": "https://api.github.com/users/ltentrup/orgs", "repos_url": "https://api.github.com/users/ltentrup/repos", "events_url": "https://api.github.com/users/ltentrup/events{/privacy}", "received_events_url": "https://api.github.com/users/ltentrup/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "931f3173992df6ac6b728fa9fa9a94d15781027e", "url": "https://api.github.com/repos/rust-lang/rust/commits/931f3173992df6ac6b728fa9fa9a94d15781027e", "html_url": "https://github.com/rust-lang/rust/commit/931f3173992df6ac6b728fa9fa9a94d15781027e"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "f92a0aba5eba971bef12698b9962f26cb0e525a9", "filename": "crates/ra_ide/src/snapshots/highlight_doctest.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_doctest.html?ref=2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "patch": "@@ -26,6 +26,7 @@\n .format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n .unresolved_reference { color: #FC5555; }\n+.escape_sequence    { color: #94BFF3; }\n \n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }"}, {"sha": "47dbd7bc8a3d8cf57320a572ee9df7acaee91be2", "filename": "crates/ra_ide/src/snapshots/highlight_injection.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html?ref=2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "patch": "@@ -26,6 +26,7 @@\n .format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n .unresolved_reference { color: #FC5555; }\n+.escape_sequence    { color: #94BFF3; }\n \n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }"}, {"sha": "b46fa44c6a479a4a0a276526c95defbef7992c41", "filename": "crates/ra_ide/src/snapshots/highlight_strings.html", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html?ref=2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "patch": "@@ -26,6 +26,7 @@\n .format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n .unresolved_reference { color: #FC5555; }\n+.escape_sequence    { color: #94BFF3; }\n \n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n@@ -83,6 +84,10 @@\n \n     <span class=\"macro\">println!</span>(<span class=\"string_literal\">r\"Hello, </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"world\"</span>);\n \n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">\\x41</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, A = <span class=\"numeric_literal\">92</span>);\n+    <span class=\"comment\">// escape sequences</span>\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello</span><span class=\"escape_sequence\">\\n</span><span class=\"string_literal\">World\"</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"escape_sequence\">\\u{48}</span><span class=\"escape_sequence\">\\x65</span><span class=\"escape_sequence\">\\x6C</span><span class=\"escape_sequence\">\\x6C</span><span class=\"escape_sequence\">\\x6F</span><span class=\"string_literal\"> World\"</span>);\n+\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"escape_sequence\">\\x41</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, A = <span class=\"numeric_literal\">92</span>);\n     <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">\u043d\u0438\u0447\u043e\u0441\u0438</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, \u043d\u0438\u0447\u043e\u0441\u0438 = <span class=\"numeric_literal\">92</span>);\n }</code></pre>\n\\ No newline at end of file"}, {"sha": "73438fbb4c08bfa0ba33f7b0729702bf3f3b134c", "filename": "crates/ra_ide/src/snapshots/highlight_unsafe.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_unsafe.html?ref=2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "patch": "@@ -26,6 +26,7 @@\n .format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n .unresolved_reference { color: #FC5555; }\n+.escape_sequence    { color: #94BFF3; }\n \n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }"}, {"sha": "0c4f0a018769d68153ef85778147373bfef8c4fe", "filename": "crates/ra_ide/src/snapshots/highlighting.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html?ref=2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "patch": "@@ -26,6 +26,7 @@\n .format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n .unresolved_reference { color: #FC5555; }\n+.escape_sequence    { color: #94BFF3; }\n \n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }"}, {"sha": "a74a70069dd812b77ad772f087a38dea782b849e", "filename": "crates/ra_ide/src/snapshots/rainbow_highlighting.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html?ref=2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "patch": "@@ -26,6 +26,7 @@\n .format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n .unresolved_reference { color: #FC5555; }\n+.escape_sequence    { color: #94BFF3; }\n \n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }"}, {"sha": "854b6cc6d618412b050df7914e2749e0f80313ee", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "patch": "@@ -212,8 +212,8 @@ pub(crate) fn highlight(\n             if let Some(string) =\n                 element_to_highlight.as_token().cloned().and_then(ast::String::cast)\n             {\n-                stack.push();\n                 if is_format_string {\n+                    stack.push();\n                     string.lex_format_specifier(|piece_range, kind| {\n                         if let Some(highlight) = highlight_format_specifier(kind) {\n                             stack.add(HighlightedRange {\n@@ -223,13 +223,27 @@ pub(crate) fn highlight(\n                             });\n                         }\n                     });\n+                    stack.pop();\n+                }\n+                // Highlight escape sequences\n+                if let Some(char_ranges) = string.char_ranges() {\n+                    stack.push();\n+                    for (piece_range, _) in char_ranges.iter().filter(|(_, char)| char.is_ok()) {\n+                        if string.text()[piece_range.start().into()..].starts_with('\\\\') {\n+                            stack.add(HighlightedRange {\n+                                range: piece_range + range.start(),\n+                                highlight: HighlightTag::EscapeSequence.into(),\n+                                binding_hash: None,\n+                            });\n+                        }\n+                    }\n+                    stack.pop_and_inject(false);\n                 }\n-                stack.pop();\n             } else if let Some(string) =\n                 element_to_highlight.as_token().cloned().and_then(ast::RawString::cast)\n             {\n-                stack.push();\n                 if is_format_string {\n+                    stack.push();\n                     string.lex_format_specifier(|piece_range, kind| {\n                         if let Some(highlight) = highlight_format_specifier(kind) {\n                             stack.add(HighlightedRange {\n@@ -239,8 +253,8 @@ pub(crate) fn highlight(\n                             });\n                         }\n                     });\n+                    stack.pop();\n                 }\n-                stack.pop();\n             }\n         }\n     }"}, {"sha": "99b6b25ab9caffa499d7ca0c50678b060a8af1c3", "filename": "crates/ra_ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "patch": "@@ -85,6 +85,7 @@ pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padd\n .format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n .unresolved_reference { color: #FC5555; }\n+.escape_sequence    { color: #94BFF3; }\n \n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }"}, {"sha": "400d22fb641694184fabef7446d7cfcc6233b498", "filename": "crates/ra_ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "patch": "@@ -23,6 +23,7 @@ pub enum HighlightTag {\n     Constant,\n     Enum,\n     EnumVariant,\n+    EscapeSequence,\n     Field,\n     FormatSpecifier,\n     Function,\n@@ -71,6 +72,7 @@ impl HighlightTag {\n             HighlightTag::Constant => \"constant\",\n             HighlightTag::Enum => \"enum\",\n             HighlightTag::EnumVariant => \"enum_variant\",\n+            HighlightTag::EscapeSequence => \"escape_sequence\",\n             HighlightTag::Field => \"field\",\n             HighlightTag::FormatSpecifier => \"format_specifier\",\n             HighlightTag::Function => \"function\","}, {"sha": "b4d56a7a06d42b79ce0732fc46d5a32845c21fe1", "filename": "crates/ra_ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "patch": "@@ -246,6 +246,10 @@ fn main() {\n \n     println!(r\"Hello, {}!\", \"world\");\n \n+    // escape sequences\n+    println!(\"Hello\\nWorld\");\n+    println!(\"\\u{48}\\x65\\x6C\\x6C\\x6F World\");\n+\n     println!(\"{\\x41}\", A = 92);\n     println!(\"{\u043d\u0438\u0447\u043e\u0441\u0438}\", \u043d\u0438\u0447\u043e\u0441\u0438 = 92);\n }\"#"}, {"sha": "2ea63d33b152ef09ee287ef7a902e82d3bc79b86", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "patch": "@@ -45,6 +45,7 @@ define_semantic_token_types![\n     (UNION, \"union\"),\n     (UNRESOLVED_REFERENCE, \"unresolvedReference\"),\n     (FORMAT_SPECIFIER, \"formatSpecifier\"),\n+    (ESCAPE_SEQUENCE, \"escapeSequence\"),\n ];\n \n macro_rules! define_semantic_token_modifiers {"}, {"sha": "055c9745577a0e4be21e81ae646b190c56f2eb60", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=2145e2d878fb3b8ffcaa4ab0858cab3a7a4324e0", "patch": "@@ -324,6 +324,7 @@ fn semantic_token_type_and_modifiers(\n         HighlightTag::UnresolvedReference => semantic_tokens::UNRESOLVED_REFERENCE,\n         HighlightTag::FormatSpecifier => semantic_tokens::FORMAT_SPECIFIER,\n         HighlightTag::Operator => lsp_types::SemanticTokenType::OPERATOR,\n+        HighlightTag::EscapeSequence => semantic_tokens::ESCAPE_SEQUENCE,\n     };\n \n     for modifier in highlight.modifiers.iter() {"}]}