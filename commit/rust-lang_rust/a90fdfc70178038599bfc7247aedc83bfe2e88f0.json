{"sha": "a90fdfc70178038599bfc7247aedc83bfe2e88f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MGZkZmM3MDE3ODAzODU5OWJmYzcyNDdhZWRjODNiZmUyZTg4ZjA=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-11-29T15:57:55Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-11-29T15:57:55Z"}, "message": "lint-docs: Use strip-prefix to simplify.", "tree": {"sha": "d4bb042949ea88b53846e86f578faf2df3f5b540", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4bb042949ea88b53846e86f578faf2df3f5b540"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a90fdfc70178038599bfc7247aedc83bfe2e88f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a90fdfc70178038599bfc7247aedc83bfe2e88f0", "html_url": "https://github.com/rust-lang/rust/commit/a90fdfc70178038599bfc7247aedc83bfe2e88f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a90fdfc70178038599bfc7247aedc83bfe2e88f0/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "228510b0ec9447df6ee84450f8e3fc9b5a018745", "url": "https://api.github.com/repos/rust-lang/rust/commits/228510b0ec9447df6ee84450f8e3fc9b5a018745", "html_url": "https://github.com/rust-lang/rust/commit/228510b0ec9447df6ee84450f8e3fc9b5a018745"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "326b7948098540ea7a1ef3bbc36f3b81573e698c", "filename": "src/tools/lint-docs/src/lib.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a90fdfc70178038599bfc7247aedc83bfe2e88f0/src%2Ftools%2Flint-docs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a90fdfc70178038599bfc7247aedc83bfe2e88f0/src%2Ftools%2Flint-docs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flint-docs%2Fsrc%2Flib.rs?ref=a90fdfc70178038599bfc7247aedc83bfe2e88f0", "patch": "@@ -142,8 +142,8 @@ impl<'a> LintExtractor<'a> {\n                 match lines.next() {\n                     Some((lineno, line)) => {\n                         let line = line.trim();\n-                        if line.starts_with(\"/// \") {\n-                            doc_lines.push(line.trim()[4..].to_string());\n+                        if let Some(text) = line.strip_prefix(\"/// \") {\n+                            doc_lines.push(text.trim().to_string());\n                         } else if line.starts_with(\"///\") {\n                             doc_lines.push(\"\".to_string());\n                         } else if line.starts_with(\"// \") {\n@@ -347,8 +347,7 @@ impl<'a> LintExtractor<'a> {\n         let mut source = String::new();\n         let needs_main = !example.iter().any(|line| line.contains(\"fn main\"));\n         // Remove `# ` prefix for hidden lines.\n-        let unhidden =\n-            example.iter().map(|line| if line.starts_with(\"# \") { &line[2..] } else { line });\n+        let unhidden = example.iter().map(|line| line.strip_prefix(\"# \").unwrap_or(line));\n         let mut lines = unhidden.peekable();\n         while let Some(line) = lines.peek() {\n             if line.starts_with(\"#!\") {"}]}