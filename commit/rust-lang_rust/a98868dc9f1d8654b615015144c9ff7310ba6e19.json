{"sha": "a98868dc9f1d8654b615015144c9ff7310ba6e19", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5ODg2OGRjOWYxZDg2NTRiNjE1MDE1MTQ0YzlmZjczMTBiYTZlMTk=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-06-21T17:43:01Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-06-21T23:22:23Z"}, "message": "Update asm! documentation", "tree": {"sha": "799dc133518de926d49f1fb0e0d52d6985a4ed01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/799dc133518de926d49f1fb0e0d52d6985a4ed01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a98868dc9f1d8654b615015144c9ff7310ba6e19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a98868dc9f1d8654b615015144c9ff7310ba6e19", "html_url": "https://github.com/rust-lang/rust/commit/a98868dc9f1d8654b615015144c9ff7310ba6e19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a98868dc9f1d8654b615015144c9ff7310ba6e19/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d0e8820659fdf8473f7ff8f2fe0d234d16965d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d0e8820659fdf8473f7ff8f2fe0d234d16965d7", "html_url": "https://github.com/rust-lang/rust/commit/8d0e8820659fdf8473f7ff8f2fe0d234d16965d7"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "c4c985dd134ba375dc23c4fc7438fc48373f6293", "filename": "src/doc/unstable-book/src/library-features/asm.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a98868dc9f1d8654b615015144c9ff7310ba6e19/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "raw_url": "https://github.com/rust-lang/rust/raw/a98868dc9f1d8654b615015144c9ff7310ba6e19/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md?ref=a98868dc9f1d8654b615015144c9ff7310ba6e19", "patch": "@@ -474,7 +474,7 @@ Here is the list of currently supported register classes:\n | AArch64 | `reg` | `x[0-28]`, `x30` | `r` |\n | AArch64 | `vreg` | `v[0-31]` | `w` |\n | AArch64 | `vreg_low16` | `v[0-15]` | `x` |\n-| ARM | `reg` | `r[0-r10]`, `r12`, `r14` | `r` |\n+| ARM | `reg` | `r[0-5]` `r7`\\*, `r[8-10]`, `r11`\\*, `r12`, `r14` | `r` |\n | ARM (Thumb) | `reg_thumb` | `r[0-r7]` | `l` |\n | ARM (ARM) | `reg_thumb` | `r[0-r10]`, `r12`, `r14` | `l` |\n | ARM | `sreg` | `s[0-31]` | `t` |\n@@ -497,6 +497,8 @@ Here is the list of currently supported register classes:\n > Note #2: On x86-64 the high byte registers (e.g. `ah`) are only available when used as an explicit register. Specifying the `reg_byte` register class for an operand will always allocate a low byte register.\n >\n > Note #3: NVPTX doesn't have a fixed register set, so named registers are not supported.\n+>\n+> Note #4: On ARM the frame pointer is either `r7` or `r11` depending on the platform.\n \n Additional register classes may be added in the future based on demand (e.g. MMX, x87, etc).\n \n@@ -591,7 +593,9 @@ Some registers cannot be used for input or output operands:\n | Architecture | Unsupported register | Reason |\n | ------------ | -------------------- | ------ |\n | All | `sp` | The stack pointer must be restored to its original value at the end of an asm code block. |\n-| All | `bp` (x86), `r11` (ARM), `x29` (AArch64), `x8` (RISC-V), `fr` (Hexagon) | The frame pointer cannot be used as an input or output. |\n+| All | `bp` (x86), `x29` (AArch64), `x8` (RISC-V), `fr` (Hexagon) | The frame pointer cannot be used as an input or output. |\n+| ARM | `r7` or `r11` | On ARM the frame pointer can be either `r7` or `r11` depending on the target. The frame pointer cannot be used as an input or output. |\n+| ARM | `r6` | `r6` is used internally by LLVM as a base pointer and therefore cannot be used as an input or output. |\n | x86 | `k0` | This is a constant zero register which can't be modified. |\n | x86 | `ip` | This is the program counter, not a real register. |\n | x86 | `mm[0-7]` | MMX registers are not currently supported (but may be in the future). |"}]}