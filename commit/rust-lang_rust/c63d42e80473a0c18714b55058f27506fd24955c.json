{"sha": "c63d42e80473a0c18714b55058f27506fd24955c", "node_id": "C_kwDOAAsO6NoAKGM2M2Q0MmU4MDQ3M2EwYzE4NzE0YjU1MDU4ZjI3NTA2ZmQyNDk1NWM", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-02-01T19:39:01Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-02-16T01:44:53Z"}, "message": "Use cargo-fmt in self_tests", "tree": {"sha": "444c65259b9074976e89656c24d14d7cb72a4257", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/444c65259b9074976e89656c24d14d7cb72a4257"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c63d42e80473a0c18714b55058f27506fd24955c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c63d42e80473a0c18714b55058f27506fd24955c", "html_url": "https://github.com/rust-lang/rust/commit/c63d42e80473a0c18714b55058f27506fd24955c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c63d42e80473a0c18714b55058f27506fd24955c/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5aabccfebc645d9fce62f91512b03ca0fa1fb6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5aabccfebc645d9fce62f91512b03ca0fa1fb6d", "html_url": "https://github.com/rust-lang/rust/commit/d5aabccfebc645d9fce62f91512b03ca0fa1fb6d"}], "stats": {"total": 46, "additions": 12, "deletions": 34}, "files": [{"sha": "4191e3e96b0a8f04f6637cc894f0a42cd26a9e17", "filename": "src/test/mod.rs", "status": "modified", "additions": 12, "deletions": 34, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/c63d42e80473a0c18714b55058f27506fd24955c/src%2Ftest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c63d42e80473a0c18714b55058f27506fd24955c/src%2Ftest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmod.rs?ref=c63d42e80473a0c18714b55058f27506fd24955c", "patch": "@@ -375,43 +375,21 @@ fn idempotence_tests() {\n     });\n }\n \n-// Run rustfmt on itself. This operation must be idempotent. We also check that\n-// no warnings are emitted.\n-// Issue-3443: these tests require nightly\n #[nightly_only_test]\n #[test]\n fn self_tests() {\n-    init_log();\n-    let mut files = get_test_files(Path::new(\"tests\"), false);\n-    let bin_directories = vec![\"cargo-fmt\", \"git-rustfmt\", \"bin\", \"format-diff\"];\n-    for dir in bin_directories {\n-        let mut path = PathBuf::from(\"src\");\n-        path.push(dir);\n-        path.push(\"main.rs\");\n-        files.push(path);\n-    }\n-    files.push(PathBuf::from(\"src/lib.rs\"));\n-\n-    let (reports, count, fails) = check_files(files, &Some(PathBuf::from(\"rustfmt.toml\")));\n-    let mut warnings = 0;\n-\n-    // Display results.\n-    println!(\"Ran {} self tests.\", count);\n-    assert_eq!(fails, 0, \"{} self tests failed\", fails);\n-\n-    for format_report in reports {\n-        println!(\n-            \"{}\",\n-            FormatReportFormatterBuilder::new(&format_report).build()\n-        );\n-        warnings += format_report.warning_count();\n-    }\n-\n-    assert_eq!(\n-        warnings, 0,\n-        \"Rustfmt's code generated {} warnings\",\n-        warnings\n-    );\n+    let get_exe_path = |name| {\n+        let mut path = env::current_exe().unwrap();\n+        path.pop();\n+        path.set_file_name(format!(\"{name}{}\", env::consts::EXE_SUFFIX));\n+        path\n+    };\n+    let status = Command::new(get_exe_path(\"cargo-fmt\"))\n+        .args([\"--check\", \"--all\"])\n+        .env(\"RUSTFMT\", get_exe_path(\"rustfmt\"))\n+        .status()\n+        .unwrap();\n+    assert!(status.success());\n }\n \n #[test]"}]}