{"sha": "6fa61b810dc95ca3e8bbda1681229f855f214fc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmYTYxYjgxMGRjOTVjYTNlOGJiZGExNjgxMjI5Zjg1NWYyMTRmYzQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-16T03:26:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-16T03:26:19Z"}, "message": "Auto merge of #32785 - tbu-:pr_more_defaults, r=alexcrichton\n\nImplement `Default` for more types in the standard library\n\nAlso add `Hash` to `std::cmp::Ordering` and most possible traits to\n`fmt::Error`.", "tree": {"sha": "b8adce9739d902adb0c0a62ed9f2918cae502412", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8adce9739d902adb0c0a62ed9f2918cae502412"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fa61b810dc95ca3e8bbda1681229f855f214fc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fa61b810dc95ca3e8bbda1681229f855f214fc4", "html_url": "https://github.com/rust-lang/rust/commit/6fa61b810dc95ca3e8bbda1681229f855f214fc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fa61b810dc95ca3e8bbda1681229f855f214fc4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fef6c64a8020c357dda902593f1065864564c079", "url": "https://api.github.com/repos/rust-lang/rust/commits/fef6c64a8020c357dda902593f1065864564c079", "html_url": "https://github.com/rust-lang/rust/commit/fef6c64a8020c357dda902593f1065864564c079"}, {"sha": "3df35a01e9825bbdebb986f980095e468357975f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3df35a01e9825bbdebb986f980095e468357975f", "html_url": "https://github.com/rust-lang/rust/commit/3df35a01e9825bbdebb986f980095e468357975f"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "257027dad5ed26f14cc9a03a9983e4f1527c661c", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6fa61b810dc95ca3e8bbda1681229f855f214fc4/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fa61b810dc95ca3e8bbda1681229f855f214fc4/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=6fa61b810dc95ca3e8bbda1681229f855f214fc4", "patch": "@@ -859,3 +859,10 @@ impl<T: ?Sized> UnsafeCell<T> {\n         &self.value as *const T as *mut T\n     }\n }\n+\n+#[stable(feature = \"unsafe_cell_default\", since = \"1.9.0\")]\n+impl<T: Default> Default for UnsafeCell<T> {\n+    fn default() -> UnsafeCell<T> {\n+        UnsafeCell::new(Default::default())\n+    }\n+}"}, {"sha": "d3481ba3f0523079270fb21ebea95f2416383992", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fa61b810dc95ca3e8bbda1681229f855f214fc4/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fa61b810dc95ca3e8bbda1681229f855f214fc4/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=6fa61b810dc95ca3e8bbda1681229f855f214fc4", "patch": "@@ -128,7 +128,7 @@ pub trait Eq: PartialEq<Self> {\n /// let result = 2.cmp(&1);\n /// assert_eq!(Ordering::Greater, result);\n /// ```\n-#[derive(Clone, Copy, PartialEq, Debug)]\n+#[derive(Clone, Copy, PartialEq, Debug, Hash)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub enum Ordering {\n     /// An ordering where a compared value is less [than another]."}, {"sha": "0c824b5a8e69a0df1283bb4b317e74551400c216", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fa61b810dc95ca3e8bbda1681229f855f214fc4/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fa61b810dc95ca3e8bbda1681229f855f214fc4/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=6fa61b810dc95ca3e8bbda1681229f855f214fc4", "patch": "@@ -60,7 +60,7 @@ pub type Result = result::Result<(), Error>;\n /// occurred. Any extra information must be arranged to be transmitted through\n /// some other means.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[derive(Copy, Clone, Debug)]\n+#[derive(Copy, Clone, Debug, Default, Eq, Hash, Ord, PartialEq, PartialOrd)]\n pub struct Error;\n \n /// A collection of methods that are required to format a message into a stream."}, {"sha": "57932f0379683dd6bc63519a9693912a8a6f678e", "filename": "src/libstd/sync/condvar.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6fa61b810dc95ca3e8bbda1681229f855f214fc4/src%2Flibstd%2Fsync%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fa61b810dc95ca3e8bbda1681229f855f214fc4/src%2Flibstd%2Fsync%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fcondvar.rs?ref=6fa61b810dc95ca3e8bbda1681229f855f214fc4", "patch": "@@ -220,6 +220,13 @@ impl Condvar {\n     pub fn notify_all(&self) { unsafe { self.inner.inner.notify_all() } }\n }\n \n+#[stable(feature = \"condvar_default\", since = \"1.9.0\")]\n+impl Default for Condvar {\n+    fn default() -> Condvar {\n+        Condvar::new()\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Drop for Condvar {\n     fn drop(&mut self) {"}, {"sha": "857a4cba9c7ad2f6f76fd0bf13989b96cd33f329", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6fa61b810dc95ca3e8bbda1681229f855f214fc4/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fa61b810dc95ca3e8bbda1681229f855f214fc4/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=6fa61b810dc95ca3e8bbda1681229f855f214fc4", "patch": "@@ -310,6 +310,13 @@ impl<T: ?Sized> Drop for Mutex<T> {\n     }\n }\n \n+#[stable(feature = \"mutex_default\", since = \"1.9.0\")]\n+impl<T: ?Sized + Default> Default for Mutex<T> {\n+    fn default() -> Mutex<T> {\n+        Mutex::new(Default::default())\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized + fmt::Debug> fmt::Debug for Mutex<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {"}, {"sha": "09b1b0a939dcdad2bcebcfb9b2bfdcfaff3188b5", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6fa61b810dc95ca3e8bbda1681229f855f214fc4/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fa61b810dc95ca3e8bbda1681229f855f214fc4/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=6fa61b810dc95ca3e8bbda1681229f855f214fc4", "patch": "@@ -346,6 +346,13 @@ impl<T: ?Sized + fmt::Debug> fmt::Debug for RwLock<T> {\n     }\n }\n \n+#[stable(feature = \"rw_lock_default\", since = \"1.9.0\")]\n+impl<T: Default> Default for RwLock<T> {\n+    fn default() -> RwLock<T> {\n+        RwLock::new(Default::default())\n+    }\n+}\n+\n struct Dummy(UnsafeCell<()>);\n unsafe impl Sync for Dummy {}\n static DUMMY: Dummy = Dummy(UnsafeCell::new(()));"}]}