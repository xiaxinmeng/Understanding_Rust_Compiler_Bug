{"sha": "d5ea0e9f8def9a3ec0eb2dd88f0465d4d1a81c21", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ZWEwZTlmOGRlZjlhM2VjMGViMmRkODhmMDQ2NWQ0ZDFhODFjMjE=", "commit": {"author": {"name": "oddg", "email": "odegevigney@gmail.com", "date": "2020-05-15T02:58:43Z"}, "committer": {"name": "oddg", "email": "odegevigney@gmail.com", "date": "2020-06-14T00:35:31Z"}, "message": "Report error when casting an C-like enum implementing Drop", "tree": {"sha": "5a45f946c1a71c435de04f6a7dcc0119271cc46b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a45f946c1a71c435de04f6a7dcc0119271cc46b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5ea0e9f8def9a3ec0eb2dd88f0465d4d1a81c21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5ea0e9f8def9a3ec0eb2dd88f0465d4d1a81c21", "html_url": "https://github.com/rust-lang/rust/commit/d5ea0e9f8def9a3ec0eb2dd88f0465d4d1a81c21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5ea0e9f8def9a3ec0eb2dd88f0465d4d1a81c21/comments", "author": {"login": "oddg", "id": 2709441, "node_id": "MDQ6VXNlcjI3MDk0NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/2709441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oddg", "html_url": "https://github.com/oddg", "followers_url": "https://api.github.com/users/oddg/followers", "following_url": "https://api.github.com/users/oddg/following{/other_user}", "gists_url": "https://api.github.com/users/oddg/gists{/gist_id}", "starred_url": "https://api.github.com/users/oddg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oddg/subscriptions", "organizations_url": "https://api.github.com/users/oddg/orgs", "repos_url": "https://api.github.com/users/oddg/repos", "events_url": "https://api.github.com/users/oddg/events{/privacy}", "received_events_url": "https://api.github.com/users/oddg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oddg", "id": 2709441, "node_id": "MDQ6VXNlcjI3MDk0NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/2709441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oddg", "html_url": "https://github.com/oddg", "followers_url": "https://api.github.com/users/oddg/followers", "following_url": "https://api.github.com/users/oddg/following{/other_user}", "gists_url": "https://api.github.com/users/oddg/gists{/gist_id}", "starred_url": "https://api.github.com/users/oddg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oddg/subscriptions", "organizations_url": "https://api.github.com/users/oddg/orgs", "repos_url": "https://api.github.com/users/oddg/repos", "events_url": "https://api.github.com/users/oddg/events{/privacy}", "received_events_url": "https://api.github.com/users/oddg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fb612bd15bb3ef098fd24c20d0727de573b4410", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fb612bd15bb3ef098fd24c20d0727de573b4410", "html_url": "https://github.com/rust-lang/rust/commit/1fb612bd15bb3ef098fd24c20d0727de573b4410"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "5a8f5c1b9fbca8685a1caf87f5c12624ab1fcdcc", "filename": "src/librustc_session/lint/builtin.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d5ea0e9f8def9a3ec0eb2dd88f0465d4d1a81c21/src%2Flibrustc_session%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ea0e9f8def9a3ec0eb2dd88f0465d4d1a81c21/src%2Flibrustc_session%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Flint%2Fbuiltin.rs?ref=d5ea0e9f8def9a3ec0eb2dd88f0465d4d1a81c21", "patch": "@@ -534,6 +534,16 @@ declare_lint! {\n     @feature_gate = sym::unsafe_block_in_unsafe_fn;\n }\n \n+declare_lint! {\n+    pub CENUM_IMPL_DROP_CAST,\n+    Warn,\n+    \"a C-like enum implementing Drop is cast\",\n+    @future_incompatible = FutureIncompatibleInfo {\n+        reference: \"issue #73333 <https://github.com/rust-lang/rust/issues/73333>\",\n+        edition: None,\n+    };\n+}\n+\n declare_lint_pass! {\n     /// Does nothing as a lint pass, but registers some `Lint`s\n     /// that are used by other parts of the compiler.\n@@ -607,6 +617,7 @@ declare_lint_pass! {\n         ASM_SUB_REGISTER,\n         UNSAFE_OP_IN_UNSAFE_FN,\n         INCOMPLETE_INCLUDE,\n+        CENUM_IMPL_DROP_CAST,\n     ]\n }\n "}, {"sha": "bea5e0e9966588da007a26f7fa8d724b8d520b0b", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d5ea0e9f8def9a3ec0eb2dd88f0465d4d1a81c21/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ea0e9f8def9a3ec0eb2dd88f0465d4d1a81c21/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=d5ea0e9f8def9a3ec0eb2dd88f0465d4d1a81c21", "patch": "@@ -609,7 +609,10 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n             (FnPtr, Ptr(mt)) => self.check_fptr_ptr_cast(fcx, mt),\n \n             // prim -> prim\n-            (Int(CEnum), Int(_)) => Ok(CastKind::EnumCast),\n+            (Int(CEnum), Int(_)) => {\n+                self.cenum_impl_drop_lint(fcx);\n+                Ok(CastKind::EnumCast)\n+            }\n             (Int(Char) | Int(Bool), Int(_)) => Ok(CastKind::PrimIntCast),\n \n             (Int(_) | Float, Int(_) | Float) => Ok(CastKind::NumericCast),\n@@ -706,11 +709,13 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n                 // Coerce to a raw pointer so that we generate AddressOf in MIR.\n                 let array_ptr_type = fcx.tcx.mk_ptr(m_expr);\n                 fcx.try_coerce(self.expr, self.expr_ty, array_ptr_type, AllowTwoPhase::No)\n-                    .unwrap_or_else(|_| bug!(\n+                    .unwrap_or_else(|_| {\n+                        bug!(\n                         \"could not cast from reference to array to pointer to array ({:?} to {:?})\",\n                         self.expr_ty,\n                         array_ptr_type,\n-                    ));\n+                    )\n+                    });\n \n                 // this will report a type mismatch if needed\n                 fcx.demand_eqtype(self.span, ety, m_cast.ty);\n@@ -740,6 +745,25 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n             Err(err) => Err(err),\n         }\n     }\n+\n+    fn cenum_impl_drop_lint(&self, fcx: &FnCtxt<'a, 'tcx>) {\n+        if let ty::Adt(d, _) = self.expr_ty.kind {\n+            if d.has_dtor(fcx.tcx) {\n+                fcx.tcx.struct_span_lint_hir(\n+                    lint::builtin::CENUM_IMPL_DROP_CAST,\n+                    self.expr.hir_id,\n+                    self.span,\n+                    |err| {\n+                        err.build(&format!(\n+                            \"Cast `enum` implementing `Drop` `{}` to integer `{}`\",\n+                            self.expr_ty, self.cast_ty\n+                        ))\n+                        .emit();\n+                    },\n+                );\n+            }\n+        }\n+    }\n }\n \n impl<'a, 'tcx> FnCtxt<'a, 'tcx> {"}]}