{"sha": "a72aeef9f7f1baa059e26c9eb35204aa65bafb7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MmFlZWY5ZjdmMWJhYTA1OWUyNmM5ZWIzNTIwNGFhNjViYWZiN2Q=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-01-29T03:32:02Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-01-29T03:32:02Z"}, "message": "Revert readline optimization and add test", "tree": {"sha": "059770ffa8740b774ebf404cee36ca6caa073b60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/059770ffa8740b774ebf404cee36ca6caa073b60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a72aeef9f7f1baa059e26c9eb35204aa65bafb7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a72aeef9f7f1baa059e26c9eb35204aa65bafb7d", "html_url": "https://github.com/rust-lang/rust/commit/a72aeef9f7f1baa059e26c9eb35204aa65bafb7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a72aeef9f7f1baa059e26c9eb35204aa65bafb7d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a6849f36b84f7387e08ecbb1adda811aaa9587a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a6849f36b84f7387e08ecbb1adda811aaa9587a", "html_url": "https://github.com/rust-lang/rust/commit/3a6849f36b84f7387e08ecbb1adda811aaa9587a"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "cf49ee0becc47b13df002bc0a86be32ae68b1637", "filename": "src/libcore/io.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a72aeef9f7f1baa059e26c9eb35204aa65bafb7d/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a72aeef9f7f1baa059e26c9eb35204aa65bafb7d/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=a72aeef9f7f1baa059e26c9eb35204aa65bafb7d", "patch": "@@ -185,13 +185,13 @@ impl<T: Reader> T : ReaderUtil {\n     }\n \n     fn read_line(&self) -> ~str {\n-        let mut line = ~\"\";\n+        let mut bytes = ~[];\n         loop {\n             let ch = self.read_byte();\n             if ch == -1 || ch == 10 { break; }\n-            str::push_char(&mut line, ch as char);\n+            bytes.push(ch as u8);\n         }\n-        line\n+        str::from_bytes(bytes)\n     }\n \n     fn read_chars(&self, n: uint) -> ~[char] {\n@@ -1221,6 +1221,14 @@ mod tests {\n         }\n     }\n \n+    #[test]\n+    fn test_read_line_utf8() {\n+        do io::with_str_reader(~\"\u751f\u9508\u7684\u6c64\u5319\u5207\u8089\u6c64hello\u751f\u9508\u7684\u6c64\u5319\u5207\u8089\u6c64\") |inp| {\n+            let line = inp.read_line();\n+            assert line == ~\"\u751f\u9508\u7684\u6c64\u5319\u5207\u8089\u6c64hello\u751f\u9508\u7684\u6c64\u5319\u5207\u8089\u6c64\";\n+        }\n+    }\n+\n     #[test]\n     fn test_readchars_wide() {\n         let wide_test = ~\"\u751f\u9508\u7684\u6c64\u5319\u5207\u8089\u6c64hello\u751f\u9508\u7684\u6c64\u5319\u5207\u8089\u6c64\";"}]}