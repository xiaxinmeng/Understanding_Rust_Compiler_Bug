{"sha": "c3e9fb183bc287d83b97b776edc87c54d18d1a73", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzZTlmYjE4M2JjMjg3ZDgzYjk3Yjc3NmVkYzg3YzU0ZDE4ZDFhNzM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-07T12:07:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-07T12:07:49Z"}, "message": "Merge #7192\n\n7192: Use american spelling for config r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "d81cef123586950822b88581454f3bf1a86f8349", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d81cef123586950822b88581454f3bf1a86f8349"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3e9fb183bc287d83b97b776edc87c54d18d1a73", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf9vmVCRBK7hj4Ov3rIwAAdHIIAK+hUwVmy0fzEfFm7RV5AnU1\nMyei7yr5+V0HE0z2dKzffcUUrrXyLkIJ24fA7DCmW9eKMHv7E4/jkU0UnlMpm3SB\nGNbQzkooUAKYEuP5NyfdtiD9sKtP1H7+u0IKYkmZps7a3QrJxl1D+qxnz6J4yDxO\nF4t4LLVJroYCHTerrv4/f5ECQHQhPri66Flpb5TuPfBzlWMlP8BfIJz1/Q25Gl1X\nnRfYq4EF6SDIviPkzTK7apPGAbZtqTcf8DFQqOElZw4bJHGx7XXkviGxUaDb1jsd\nXWo3ynY7oXGNBlpt0p4auPcMJGg1lcQA6o8BxwKptycNpg2Vo5QjuBAQnLoqXqA=\n=5BGe\n-----END PGP SIGNATURE-----\n", "payload": "tree d81cef123586950822b88581454f3bf1a86f8349\nparent 171c3c08fe245938fb25321394233de5fe2abc7c\nparent 037caec62c881e11325f93627d9bfd44fb374d51\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1610021269 +0000\ncommitter GitHub <noreply@github.com> 1610021269 +0000\n\nMerge #7192\n\n7192: Use american spelling for config r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3e9fb183bc287d83b97b776edc87c54d18d1a73", "html_url": "https://github.com/rust-lang/rust/commit/c3e9fb183bc287d83b97b776edc87c54d18d1a73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3e9fb183bc287d83b97b776edc87c54d18d1a73/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "171c3c08fe245938fb25321394233de5fe2abc7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/171c3c08fe245938fb25321394233de5fe2abc7c", "html_url": "https://github.com/rust-lang/rust/commit/171c3c08fe245938fb25321394233de5fe2abc7c"}, {"sha": "037caec62c881e11325f93627d9bfd44fb374d51", "url": "https://api.github.com/repos/rust-lang/rust/commits/037caec62c881e11325f93627d9bfd44fb374d51", "html_url": "https://github.com/rust-lang/rust/commit/037caec62c881e11325f93627d9bfd44fb374d51"}], "stats": {"total": 35, "additions": 24, "deletions": 11}, "files": [{"sha": "2d3e25cbf2a1f19411384fc41f5308cdf76e3ac8", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/c3e9fb183bc287d83b97b776edc87c54d18d1a73/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e9fb183bc287d83b97b776edc87c54d18d1a73/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=c3e9fb183bc287d83b97b776edc87c54d18d1a73", "patch": "@@ -7,7 +7,7 @@\n //! configure the server itself, feature flags are passed into analysis, and\n //! tweak things like automatic insertion of `()` in completions.\n \n-use std::{convert::TryFrom, ffi::OsString, path::PathBuf};\n+use std::{convert::TryFrom, ffi::OsString, iter, path::PathBuf};\n \n use flycheck::FlycheckConfig;\n use hir::PrefixKind;\n@@ -28,7 +28,8 @@ use crate::{caps::completion_item_edit_resolve, diagnostics::DiagnosticsMapConfi\n config_data! {\n     struct ConfigData {\n         /// The strategy to use when inserting new imports or merging imports.\n-        assist_importMergeBehaviour: MergeBehaviorDef = \"\\\"full\\\"\",\n+        assist_importMergeBehavior |\n+        assist_importMergeBehaviour: MergeBehaviorDef  = \"\\\"full\\\"\",\n         /// The path structure for newly inserted paths to use.\n         assist_importPrefix: ImportPrefixDef           = \"\\\"plain\\\"\",\n \n@@ -530,7 +531,7 @@ impl Config {\n         }\n     }\n     fn merge_behavior(&self) -> Option<MergeBehavior> {\n-        match self.data.assist_importMergeBehaviour {\n+        match self.data.assist_importMergeBehavior {\n             MergeBehaviorDef::None => None,\n             MergeBehaviorDef::Full => Some(MergeBehavior::Full),\n             MergeBehaviorDef::Last => Some(MergeBehavior::Last),\n@@ -639,7 +640,7 @@ macro_rules! _config_data {\n     (struct $name:ident {\n         $(\n             $(#[doc=$doc:literal])*\n-            $field:ident: $ty:ty = $default:expr,\n+            $field:ident $(| $alias:ident)?: $ty:ty = $default:expr,\n         )*\n     }) => {\n         #[allow(non_snake_case)]\n@@ -648,7 +649,12 @@ macro_rules! _config_data {\n         impl $name {\n             fn from_json(mut json: serde_json::Value) -> $name {\n                 $name {$(\n-                    $field: get_field(&mut json, stringify!($field), $default),\n+                    $field: get_field(\n+                        &mut json,\n+                        stringify!($field),\n+                        None$(.or(Some(stringify!($alias))))?,\n+                        $default,\n+                    ),\n                 )*}\n             }\n \n@@ -680,14 +686,21 @@ use _config_data as config_data;\n fn get_field<T: DeserializeOwned>(\n     json: &mut serde_json::Value,\n     field: &'static str,\n+    alias: Option<&'static str>,\n     default: &str,\n ) -> T {\n     let default = serde_json::from_str(default).unwrap();\n \n-    let mut pointer = field.replace('_', \"/\");\n-    pointer.insert(0, '/');\n-    json.pointer_mut(&pointer)\n-        .and_then(|it| serde_json::from_value(it.take()).ok())\n+    // XXX: check alias first, to work-around the VS Code where it pre-fills the\n+    // defaults instead of sending an empty object.\n+    alias\n+        .into_iter()\n+        .chain(iter::once(field))\n+        .find_map(move |field| {\n+            let mut pointer = field.replace('_', \"/\");\n+            pointer.insert(0, '/');\n+            json.pointer_mut(&pointer).and_then(|it| serde_json::from_value(it.take()).ok())\n+        })\n         .unwrap_or(default)\n }\n "}, {"sha": "a76c99d1e4b1a3efaa4046febcab7f8d0101eb4a", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3e9fb183bc287d83b97b776edc87c54d18d1a73/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/c3e9fb183bc287d83b97b776edc87c54d18d1a73/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=c3e9fb183bc287d83b97b776edc87c54d18d1a73", "patch": "@@ -1,4 +1,4 @@\n-[[rust-analyzer.assist.importMergeBehaviour]]rust-analyzer.assist.importMergeBehaviour (default: `\"full\"`)::\n+[[rust-analyzer.assist.importMergeBehavior]]rust-analyzer.assist.importMergeBehavior (default: `\"full\"`)::\n  The strategy to use when inserting new imports or merging imports.\n [[rust-analyzer.assist.importPrefix]]rust-analyzer.assist.importPrefix (default: `\"plain\"`)::\n  The path structure for newly inserted paths to use."}, {"sha": "3e6ebd7ed64cfb1fc01b0a319e35b914b4a6e656", "filename": "editors/code/package.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3e9fb183bc287d83b97b776edc87c54d18d1a73/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/c3e9fb183bc287d83b97b776edc87c54d18d1a73/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=c3e9fb183bc287d83b97b776edc87c54d18d1a73", "patch": "@@ -349,7 +349,7 @@\n                     \"default\": {},\n                     \"markdownDescription\": \"Optional settings passed to the debug engine. Example: `{ \\\"lldb\\\": { \\\"terminal\\\":\\\"external\\\"} }`\"\n                 },\n-                \"rust-analyzer.assist.importMergeBehaviour\": {\n+                \"rust-analyzer.assist.importMergeBehavior\": {\n                     \"markdownDescription\": \"The strategy to use when inserting new imports or merging imports.\",\n                     \"default\": \"full\",\n                     \"type\": \"string\","}]}