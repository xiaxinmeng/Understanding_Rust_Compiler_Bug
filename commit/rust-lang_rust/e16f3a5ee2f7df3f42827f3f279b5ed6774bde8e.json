{"sha": "e16f3a5ee2f7df3f42827f3f279b5ed6774bde8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNmYzYTVlZTJmN2RmM2Y0MjgyN2YzZjI3OWI1ZWQ2Nzc0YmRlOGU=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-12-13T19:39:15Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-12-18T03:20:23Z"}, "message": "Add test for token map", "tree": {"sha": "1466ff09d968e384bc286555cfe1b98c29560dde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1466ff09d968e384bc286555cfe1b98c29560dde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e16f3a5ee2f7df3f42827f3f279b5ed6774bde8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e16f3a5ee2f7df3f42827f3f279b5ed6774bde8e", "html_url": "https://github.com/rust-lang/rust/commit/e16f3a5ee2f7df3f42827f3f279b5ed6774bde8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e16f3a5ee2f7df3f42827f3f279b5ed6774bde8e/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "325532d11960733bebdd38b19a6f33a891872803", "url": "https://api.github.com/repos/rust-lang/rust/commits/325532d11960733bebdd38b19a6f33a891872803", "html_url": "https://github.com/rust-lang/rust/commit/325532d11960733bebdd38b19a6f33a891872803"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "ae7f3dfd40f968d2ed1e67f8700ea544a303c580", "filename": "crates/ra_mbe/src/tests.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/e16f3a5ee2f7df3f42827f3f279b5ed6774bde8e/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e16f3a5ee2f7df3f42827f3f279b5ed6774bde8e/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Ftests.rs?ref=e16f3a5ee2f7df3f42827f3f279b5ed6774bde8e", "patch": "@@ -88,6 +88,32 @@ macro_rules! foobar {\n     assert_eq!(get_id(&expansion.token_trees[2]), Some(14));\n }\n \n+#[test]\n+fn test_token_map() {\n+    use ra_parser::SyntaxKind::*;\n+    use ra_syntax::T;\n+\n+    let macro_definition = r#\"\n+macro_rules! foobar {\n+    ($e:ident) => { fn $e() {} }\n+}\n+\"#;\n+    let rules = create_rules(macro_definition);\n+    let (expansion, (token_map, content)) = expand_and_map(&rules, \"foobar!(baz);\");\n+\n+    let get_text = |id, kind| -> String {\n+        content[token_map.range_by_token(id).unwrap().range(kind).unwrap()].to_string()\n+    };\n+\n+    assert_eq!(expansion.token_trees.len(), 4);\n+    // {($e:ident) => { fn $e() {} }}\n+    // 012345      67 8 9  T12  3\n+\n+    assert_eq!(get_text(tt::TokenId(9), IDENT), \"fn\");\n+    assert_eq!(get_text(tt::TokenId(12), T!['(']), \"(\");\n+    assert_eq!(get_text(tt::TokenId(13), T!['{']), \"{\");\n+}\n+\n #[test]\n fn test_convert_tt() {\n     let macro_definition = r#\"\n@@ -1443,6 +1469,23 @@ pub(crate) fn expand(rules: &MacroRules, invocation: &str) -> tt::Subtree {\n     rules.expand(&invocation_tt).unwrap()\n }\n \n+pub(crate) fn expand_and_map(\n+    rules: &MacroRules,\n+    invocation: &str,\n+) -> (tt::Subtree, (TokenMap, String)) {\n+    let source_file = ast::SourceFile::parse(invocation).ok().unwrap();\n+    let macro_invocation =\n+        source_file.syntax().descendants().find_map(ast::MacroCall::cast).unwrap();\n+\n+    let (invocation_tt, _) = ast_to_token_tree(&macro_invocation.token_tree().unwrap()).unwrap();\n+    let expanded = rules.expand(&invocation_tt).unwrap();\n+\n+    let (node, expanded_token_tree) =\n+        token_tree_to_syntax_node(&expanded, FragmentKind::Items).unwrap();\n+\n+    (expanded, (expanded_token_tree, node.syntax_node().to_string()))\n+}\n+\n pub(crate) enum MacroKind {\n     Items,\n     Stmts,"}]}