{"sha": "83e4eed16ef7adb54a802e3b684427e0e912c2b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZTRlZWQxNmVmN2FkYjU0YTgwMmUzYjY4NDQyN2UwZTkxMmMyYjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-14T17:29:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-14T17:29:17Z"}, "message": "Auto merge of #62638 - estebank:issue-62554, r=petrochenkov\n\nUse snippet instead of pprinting statement\n\nFix #62554.", "tree": {"sha": "281f9f4554f0d794245deca9f34876e4ab3cb928", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/281f9f4554f0d794245deca9f34876e4ab3cb928"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83e4eed16ef7adb54a802e3b684427e0e912c2b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83e4eed16ef7adb54a802e3b684427e0e912c2b7", "html_url": "https://github.com/rust-lang/rust/commit/83e4eed16ef7adb54a802e3b684427e0e912c2b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83e4eed16ef7adb54a802e3b684427e0e912c2b7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85a360e0ea2f1629b8851e7c9b2903bbdbab42bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/85a360e0ea2f1629b8851e7c9b2903bbdbab42bf", "html_url": "https://github.com/rust-lang/rust/commit/85a360e0ea2f1629b8851e7c9b2903bbdbab42bf"}, {"sha": "a86aac1a672de83eae167f3cba30b5c607eca1ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/a86aac1a672de83eae167f3cba30b5c607eca1ac", "html_url": "https://github.com/rust-lang/rust/commit/a86aac1a672de83eae167f3cba30b5c607eca1ac"}], "stats": {"total": 74, "additions": 52, "deletions": 22}, "files": [{"sha": "2666cd519f9c3b0e1700fe0b795d783028da4526", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 13, "deletions": 17, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/83e4eed16ef7adb54a802e3b684427e0e912c2b7/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e4eed16ef7adb54a802e3b684427e0e912c2b7/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=83e4eed16ef7adb54a802e3b684427e0e912c2b7", "patch": "@@ -4378,9 +4378,10 @@ impl<'a> Parser<'a> {\n         Ok(Some(self.mk_item(span, ident, ItemKind::MacroDef(def), vis.clone(), attrs.to_vec())))\n     }\n \n-    fn parse_stmt_without_recovery(&mut self,\n-                                   macro_legacy_warnings: bool)\n-                                   -> PResult<'a, Option<Stmt>> {\n+    fn parse_stmt_without_recovery(\n+        &mut self,\n+        macro_legacy_warnings: bool,\n+    ) -> PResult<'a, Option<Stmt>> {\n         maybe_whole!(self, NtStmt, |x| Some(x));\n \n         let attrs = self.parse_outer_attributes()?;\n@@ -4586,20 +4587,15 @@ impl<'a> Parser<'a> {\n                     if self.eat(&token::Semi) {\n                         stmt_span = stmt_span.with_hi(self.prev_span.hi());\n                     }\n-                    let sugg = pprust::to_string(|s| {\n-                        use crate::print::pprust::INDENT_UNIT;\n-                        s.ibox(INDENT_UNIT);\n-                        s.bopen();\n-                        s.print_stmt(&stmt);\n-                        s.bclose_maybe_open(stmt.span, false)\n-                    });\n-                    e.span_suggestion(\n-                        stmt_span,\n-                        \"try placing this code inside a block\",\n-                        sugg,\n-                        // speculative, has been misleading in the past (closed Issue #46836)\n-                        Applicability::MaybeIncorrect\n-                    );\n+                    if let Ok(snippet) = self.sess.source_map().span_to_snippet(stmt_span) {\n+                        e.span_suggestion(\n+                            stmt_span,\n+                            \"try placing this code inside a block\",\n+                            format!(\"{{ {} }}\", snippet),\n+                            // speculative, has been misleading in the past (#46836)\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    }\n                 }\n                 Err(mut e) => {\n                     self.recover_stmt_(SemiColonMode::Break, BlockMode::Ignore);"}, {"sha": "0e3ce2787f3ed72399f4ec816cf617e5e9e120ae", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/83e4eed16ef7adb54a802e3b684427e0e912c2b7/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e4eed16ef7adb54a802e3b684427e0e912c2b7/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=83e4eed16ef7adb54a802e3b684427e0e912c2b7", "patch": "@@ -745,8 +745,7 @@ impl<'a> State<'a> {\n         self.bclose_maybe_open(span, true)\n     }\n \n-    crate fn break_offset_if_not_bol(&mut self, n: usize,\n-                                   off: isize) {\n+    crate fn break_offset_if_not_bol(&mut self, n: usize, off: isize) {\n         if !self.s.is_beginning_of_line() {\n             self.s.break_offset(n, off)\n         } else {"}, {"sha": "fa87967432df3483452124e17da8ff209f89797e", "filename": "src/test/ui/issues/issue-39848.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83e4eed16ef7adb54a802e3b684427e0e912c2b7/src%2Ftest%2Fui%2Fissues%2Fissue-39848.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83e4eed16ef7adb54a802e3b684427e0e912c2b7/src%2Ftest%2Fui%2Fissues%2Fissue-39848.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-39848.stderr?ref=83e4eed16ef7adb54a802e3b684427e0e912c2b7", "patch": "@@ -2,7 +2,7 @@ error: expected `{`, found `foo`\n   --> $DIR/issue-39848.rs:8:19\n    |\n LL |         if $tgt.has_$field() {}\n-   |         --                 - help: try placing this code inside a block: `{ foo(); }`\n+   |         --                 - help: try placing this code inside a block: `{ ) }`\n    |         |\n    |         this `if` statement has a condition, but no block\n ..."}, {"sha": "3d50674e624fff832c8b55ce9fcd68e7540abe05", "filename": "src/test/ui/issues/issue-62554.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/83e4eed16ef7adb54a802e3b684427e0e912c2b7/src%2Ftest%2Fui%2Fissues%2Fissue-62554.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e4eed16ef7adb54a802e3b684427e0e912c2b7/src%2Ftest%2Fui%2Fissues%2Fissue-62554.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-62554.rs?ref=83e4eed16ef7adb54a802e3b684427e0e912c2b7", "patch": "@@ -0,0 +1,5 @@\n+fn main() {}\n+\n+fn foo(u: u8) { if u8 macro_rules! u8 { (u6) => { fn uuuuuuuuuuu() { use s loo mod u8 {\n+//~^ ERROR expected `{`, found `macro_rules`\n+//~ ERROR this file contains an un-closed delimiter"}, {"sha": "9675d540e7299bb2b3750ca708c87f7310a2e358", "filename": "src/test/ui/issues/issue-62554.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/83e4eed16ef7adb54a802e3b684427e0e912c2b7/src%2Ftest%2Fui%2Fissues%2Fissue-62554.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83e4eed16ef7adb54a802e3b684427e0e912c2b7/src%2Ftest%2Fui%2Fissues%2Fissue-62554.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-62554.stderr?ref=83e4eed16ef7adb54a802e3b684427e0e912c2b7", "patch": "@@ -0,0 +1,30 @@\n+error: this file contains an un-closed delimiter\n+  --> $DIR/issue-62554.rs:5:53\n+   |\n+LL | fn foo(u: u8) { if u8 macro_rules! u8 { (u6) => { fn uuuuuuuuuuu() { use s loo mod u8 {\n+   |               -                       -         -                  -                  - un-closed delimiter\n+   |               |                       |         |                  |\n+   |               |                       |         |                  un-closed delimiter\n+   |               |                       |         un-closed delimiter\n+   |               un-closed delimiter     un-closed delimiter\n+LL |\n+LL |\n+   |                                                     ^\n+\n+error: expected `{`, found `macro_rules`\n+  --> $DIR/issue-62554.rs:3:23\n+   |\n+LL | fn foo(u: u8) { if u8 macro_rules! u8 { (u6) => { fn uuuuuuuuuuu() { use s loo mod u8 {\n+   |                 --    ^^^^^^^^^^^ expected `{`\n+   |                 |\n+   |                 this `if` statement has a condition, but no block\n+help: try placing this code inside a block\n+   |\n+LL | fn foo(u: u8) { if u8 { macro_rules! u8 { (u6) => { fn uuuuuuuuuuu() { use s loo mod u8 {\n+LL |\n+LL |\n+LL |  }\n+   |\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "80b4329ad40119edf3751f8bf0e827578a9797ff", "filename": "src/test/ui/label/label_break_value_illegal_uses.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83e4eed16ef7adb54a802e3b684427e0e912c2b7/src%2Ftest%2Fui%2Flabel%2Flabel_break_value_illegal_uses.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83e4eed16ef7adb54a802e3b684427e0e912c2b7/src%2Ftest%2Fui%2Flabel%2Flabel_break_value_illegal_uses.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel%2Flabel_break_value_illegal_uses.stderr?ref=83e4eed16ef7adb54a802e3b684427e0e912c2b7", "patch": "@@ -11,7 +11,7 @@ LL |     if true 'b: {}\n    |     --      ^^----\n    |     |       |\n    |     |       expected `{`\n-   |     |       help: try placing this code inside a block: `{ 'b: { } }`\n+   |     |       help: try placing this code inside a block: `{ 'b: {} }`\n    |     this `if` statement has a condition, but no block\n \n error: expected `{`, found `'b`\n@@ -21,7 +21,7 @@ LL |     if true {} else 'b: {}\n    |                     ^^----\n    |                     |\n    |                     expected `{`\n-   |                     help: try placing this code inside a block: `{ 'b: { } }`\n+   |                     help: try placing this code inside a block: `{ 'b: {} }`\n \n error: expected one of `.`, `?`, `{`, or an operator, found `'b`\n   --> $DIR/label_break_value_illegal_uses.rs:18:17"}]}