{"sha": "7c1e4054787f99dff36aa66318b7589f78dfc7d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjMWU0MDU0Nzg3Zjk5ZGZmMzZhYTY2MzE4Yjc1ODlmNzhkZmM3ZDk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-17T08:34:34Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-19T07:48:06Z"}, "message": "ONCE_INIT is deprecated-in-future only for bootstrap", "tree": {"sha": "9337c675fb418501463e94bc567a0c2b693d185b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9337c675fb418501463e94bc567a0c2b693d185b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c1e4054787f99dff36aa66318b7589f78dfc7d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c1e4054787f99dff36aa66318b7589f78dfc7d9", "html_url": "https://github.com/rust-lang/rust/commit/7c1e4054787f99dff36aa66318b7589f78dfc7d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c1e4054787f99dff36aa66318b7589f78dfc7d9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13ed0cf9e86a4fdbf75152849353050fea5d4461", "url": "https://api.github.com/repos/rust-lang/rust/commits/13ed0cf9e86a4fdbf75152849353050fea5d4461", "html_url": "https://github.com/rust-lang/rust/commit/13ed0cf9e86a4fdbf75152849353050fea5d4461"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "33cc87eb795554bf1945c186d4e72819fbe866ad", "filename": "src/libstd/io/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c1e4054787f99dff36aa66318b7589f78dfc7d9/src%2Flibstd%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c1e4054787f99dff36aa66318b7589f78dfc7d9/src%2Flibstd%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Futil.rs?ref=7c1e4054787f99dff36aa66318b7589f78dfc7d9", "patch": "@@ -48,7 +48,7 @@ pub fn copy<R: ?Sized, W: ?Sized>(reader: &mut R, writer: &mut W) -> io::Result<\n     // `MaybeUninit`. Revisit this once we decided whether that is valid or not.\n     // This is still technically undefined behavior due to creating a reference\n     // to uninitialized data, but within libstd we can rely on more guarantees\n-    // than if this code were in an external lib\n+    // than if this code were in an external lib.\n     unsafe { reader.initializer().initialize(buf.get_mut()); }\n \n     let mut written = 0;"}, {"sha": "e29faf18d83e5029ecb53b83a8000c8b47fe00cc", "filename": "src/libstd/sync/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7c1e4054787f99dff36aa66318b7589f78dfc7d9/src%2Flibstd%2Fsync%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c1e4054787f99dff36aa66318b7589f78dfc7d9/src%2Flibstd%2Fsync%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmod.rs?ref=7c1e4054787f99dff36aa66318b7589f78dfc7d9", "patch": "@@ -163,7 +163,8 @@ pub use self::condvar::{Condvar, WaitTimeoutResult};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::mutex::{Mutex, MutexGuard};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[allow(deprecated_in_future)]\n+#[cfg_attr(bootstrap, allow(deprecated_in_future))]\n+#[allow(deprecated)]\n pub use self::once::{Once, OnceState, ONCE_INIT};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use crate::sys_common::poison::{PoisonError, TryLockError, TryLockResult, LockResult};"}]}