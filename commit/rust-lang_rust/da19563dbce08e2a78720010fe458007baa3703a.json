{"sha": "da19563dbce08e2a78720010fe458007baa3703a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhMTk1NjNkYmNlMDhlMmE3ODcyMDAxMGZlNDU4MDA3YmFhMzcwM2E=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-03-06T22:33:46Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-03-12T06:51:49Z"}, "message": "Port partition method from ~[T] to Vec<T>, for use early-late lifetime code.", "tree": {"sha": "556c984d636e83eef92bdcd6c818831d10493005", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/556c984d636e83eef92bdcd6c818831d10493005"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da19563dbce08e2a78720010fe458007baa3703a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da19563dbce08e2a78720010fe458007baa3703a", "html_url": "https://github.com/rust-lang/rust/commit/da19563dbce08e2a78720010fe458007baa3703a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da19563dbce08e2a78720010fe458007baa3703a/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a32ee7444f9d9e3b8ea38ead0814cf13dd6e7cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a32ee7444f9d9e3b8ea38ead0814cf13dd6e7cc", "html_url": "https://github.com/rust-lang/rust/commit/8a32ee7444f9d9e3b8ea38ead0814cf13dd6e7cc"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "eed5143b7cff1bfff2b57a8ed63808a52b2f176b", "filename": "src/libstd/vec_ng.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/da19563dbce08e2a78720010fe458007baa3703a/src%2Flibstd%2Fvec_ng.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da19563dbce08e2a78720010fe458007baa3703a/src%2Flibstd%2Fvec_ng.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec_ng.rs?ref=da19563dbce08e2a78720010fe458007baa3703a", "patch": "@@ -64,6 +64,26 @@ impl<T> Vec<T> {\n             xs\n         }\n     }\n+\n+    /**\n+     * Partitions the vector into two vectors `(A,B)`, where all\n+     * elements of `A` satisfy `f` and all elements of `B` do not.\n+     */\n+    #[inline]\n+    pub fn partition(self, f: |&T| -> bool) -> (Vec<T>, Vec<T>) {\n+        let mut lefts  = Vec::new();\n+        let mut rights = Vec::new();\n+\n+        for elt in self.move_iter() {\n+            if f(&elt) {\n+                lefts.push(elt);\n+            } else {\n+                rights.push(elt);\n+            }\n+        }\n+\n+        (lefts, rights)\n+    }\n }\n \n impl<T: Clone> Vec<T> {"}]}