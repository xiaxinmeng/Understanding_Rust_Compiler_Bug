{"sha": "aa8e06458e07ddfe08085174ccdc2bd83debe876", "node_id": "C_kwDOAAsO6NoAKGFhOGUwNjQ1OGUwN2RkZmUwODA4NTE3NGNjZGMyYmQ4M2RlYmU4NzY", "commit": {"author": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-04-29T07:55:54Z"}, "committer": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-07-02T13:51:42Z"}, "message": "add Send to the argument type of encode_metadata", "tree": {"sha": "30a6115dcd8c47fb4d8242fa26c1a332b9833e52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30a6115dcd8c47fb4d8242fa26c1a332b9833e52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa8e06458e07ddfe08085174ccdc2bd83debe876", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa8e06458e07ddfe08085174ccdc2bd83debe876", "html_url": "https://github.com/rust-lang/rust/commit/aa8e06458e07ddfe08085174ccdc2bd83debe876", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa8e06458e07ddfe08085174ccdc2bd83debe876/comments", "author": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1be58056e18be6ecc576faa2957536c43156c11f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1be58056e18be6ecc576faa2957536c43156c11f", "html_url": "https://github.com/rust-lang/rust/commit/1be58056e18be6ecc576faa2957536c43156c11f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "96bc2b4f8f1de99bc920dc1f3da1fffd5fef2381", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa8e06458e07ddfe08085174ccdc2bd83debe876/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa8e06458e07ddfe08085174ccdc2bd83debe876/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=aa8e06458e07ddfe08085174ccdc2bd83debe876", "patch": "@@ -2189,7 +2189,7 @@ impl<D: Decoder> Decodable<D> for EncodedMetadata {\n     }\n }\n \n-pub fn encode_metadata(tcx: TyCtxt<'_>, path: impl AsRef<Path>) {\n+pub fn encode_metadata(tcx: TyCtxt<'_>, path: impl AsRef<Path> + Send) {\n     let _prof_timer = tcx.prof.verbose_generic_activity(\"generate_crate_metadata\");\n \n     // Since encoding metadata is not in a query, and nothing is cached,"}]}