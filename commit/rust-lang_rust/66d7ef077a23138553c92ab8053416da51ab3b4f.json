{"sha": "66d7ef077a23138553c92ab8053416da51ab3b4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZDdlZjA3N2EyMzEzODU1M2M5MmFiODA1MzQxNmRhNTFhYjNiNGY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-10-11T01:35:49Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-10-25T22:26:27Z"}, "message": "Emit warning for ignored #[inline] on foreign function prototypes", "tree": {"sha": "f48d2a2348db8f481271c1ba5d8310454e1c1c6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f48d2a2348db8f481271c1ba5d8310454e1c1c6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66d7ef077a23138553c92ab8053416da51ab3b4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66d7ef077a23138553c92ab8053416da51ab3b4f", "html_url": "https://github.com/rust-lang/rust/commit/66d7ef077a23138553c92ab8053416da51ab3b4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66d7ef077a23138553c92ab8053416da51ab3b4f/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94c4dd990296df030f0decffc9a4751105f3e603", "url": "https://api.github.com/repos/rust-lang/rust/commits/94c4dd990296df030f0decffc9a4751105f3e603", "html_url": "https://github.com/rust-lang/rust/commit/94c4dd990296df030f0decffc9a4751105f3e603"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "8777785859cd57b2befe6206e0d39a2b895e6034", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/66d7ef077a23138553c92ab8053416da51ab3b4f/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66d7ef077a23138553c92ab8053416da51ab3b4f/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=66d7ef077a23138553c92ab8053416da51ab3b4f", "patch": "@@ -40,6 +40,9 @@ pub(crate) enum Target {\n     AssocConst,\n     Method { body: bool },\n     AssocTy,\n+    ForeignFn,\n+    ForeignStatic,\n+    ForeignTy,\n }\n \n impl Display for Target {\n@@ -67,6 +70,9 @@ impl Display for Target {\n             Target::AssocConst => \"associated const\",\n             Target::Method { .. } => \"method\",\n             Target::AssocTy => \"associated type\",\n+            Target::ForeignFn => \"foreign function\",\n+            Target::ForeignStatic => \"foreign static item\",\n+            Target::ForeignTy => \"foreign type\",\n         })\n     }\n }\n@@ -105,6 +111,12 @@ impl Target {\n             TraitItemKind::Type(..) => Target::AssocTy,\n         }\n     }\n+\n+    fn from_foreign_item(foreign_item: &hir::ForeignItem) -> Target {\n+        match foreign_item.kind {\n+            hir::ForeignItemKind::Fn(..) => Target::ForeignFn,\n+            hir::ForeignItemKind::Static(..) => Target::ForeignStatic,\n+            hir::ForeignItemKind::Type => Target::ForeignTy,\n         }\n     }\n }\n@@ -427,6 +439,12 @@ impl Visitor<'tcx> for CheckAttrVisitor<'tcx> {\n         intravisit::walk_trait_item(self, trait_item)\n     }\n \n+    fn visit_foreign_item(&mut self, f_item: &'tcx hir::ForeignItem) {\n+        let target = Target::from_foreign_item(f_item);\n+        self.check_attributes(f_item.hir_id, &f_item.attrs, &f_item.span, target, None);\n+        intravisit::walk_foreign_item(self, f_item)\n+    }\n+\n     fn visit_stmt(&mut self, stmt: &'tcx hir::Stmt) {\n         self.check_stmt_attributes(stmt);\n         intravisit::walk_stmt(self, stmt)"}, {"sha": "21097197499ddb369a0c8579329e3e7a68e58264", "filename": "src/test/ui/lint/warn-unused-inline-on-fn-prototypes.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/66d7ef077a23138553c92ab8053416da51ab3b4f/src%2Ftest%2Fui%2Flint%2Fwarn-unused-inline-on-fn-prototypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66d7ef077a23138553c92ab8053416da51ab3b4f/src%2Ftest%2Fui%2Flint%2Fwarn-unused-inline-on-fn-prototypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fwarn-unused-inline-on-fn-prototypes.rs?ref=66d7ef077a23138553c92ab8053416da51ab3b4f", "patch": "@@ -5,4 +5,9 @@ trait Trait {\n     fn foo();\n }\n \n+extern {\n+    #[inline] //~ ERROR `#[inline]` is ignored on function prototypes\n+    fn foo();\n+}\n+\n fn main() {}"}, {"sha": "006cc6c80a64e9722d411c92337135155164bdd0", "filename": "src/test/ui/lint/warn-unused-inline-on-fn-prototypes.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66d7ef077a23138553c92ab8053416da51ab3b4f/src%2Ftest%2Fui%2Flint%2Fwarn-unused-inline-on-fn-prototypes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66d7ef077a23138553c92ab8053416da51ab3b4f/src%2Ftest%2Fui%2Flint%2Fwarn-unused-inline-on-fn-prototypes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fwarn-unused-inline-on-fn-prototypes.stderr?ref=66d7ef077a23138553c92ab8053416da51ab3b4f", "patch": "@@ -10,5 +10,11 @@ note: lint level defined here\n LL | #![deny(unused_attributes)]\n    |         ^^^^^^^^^^^^^^^^^\n \n+error: `#[inline]` is ignored on function prototypes\n+  --> $DIR/warn-unused-inline-on-fn-prototypes.rs:4:5\n+   |\n+LL |     #[inline]\n+   |     ^^^^^^^^^\n+\n error: aborting due to 2 previous errors\n "}]}