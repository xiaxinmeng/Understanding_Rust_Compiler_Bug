{"sha": "b56d47cc80a7df471c0e2f96fa62a3e3983972ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1NmQ0N2NjODBhN2RmNDcxYzBlMmY5NmZhNjJhM2UzOTgzOTcyZWM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-11T21:03:45Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-19T17:52:57Z"}, "message": "mk: Enable building LLVM targeting MSVC\n\nThis commit modifies the makefiles to enable building LLVM with cmake and Visual\nStudio to generate an LLVM that targets MSVC. Rust's configure script requires\ncmake to be installed when targeting MSVC and will configure LLVM with cmake\ninstead of the normal `./configure` script LLVM provides. The build will then\nrun cmake to execute the build instead of the normal `make`.\n\nCurrently `make clean-llvm` isn't supported on MSVC as I can't figure out how to\nrun a \"clean\" target for the Visual Studio files.", "tree": {"sha": "250de54bb1cabbefd20d59e40b571f3a5dbf031d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/250de54bb1cabbefd20d59e40b571f3a5dbf031d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b56d47cc80a7df471c0e2f96fa62a3e3983972ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b56d47cc80a7df471c0e2f96fa62a3e3983972ec", "html_url": "https://github.com/rust-lang/rust/commit/b56d47cc80a7df471c0e2f96fa62a3e3983972ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b56d47cc80a7df471c0e2f96fa62a3e3983972ec/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cf0b1798bddad33876258d6715b363896252e40", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cf0b1798bddad33876258d6715b363896252e40", "html_url": "https://github.com/rust-lang/rust/commit/7cf0b1798bddad33876258d6715b363896252e40"}], "stats": {"total": 77, "additions": 63, "deletions": 14}, "files": [{"sha": "29bddf687b2d2b082111cb2eb27ca77b187532c2", "filename": "configure", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/b56d47cc80a7df471c0e2f96fa62a3e3983972ec/configure", "raw_url": "https://github.com/rust-lang/rust/raw/b56d47cc80a7df471c0e2f96fa62a3e3983972ec/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=b56d47cc80a7df471c0e2f96fa62a3e3983972ec", "patch": "@@ -1348,7 +1348,39 @@ do\n         done\n     fi\n \n-    if [ ${do_reconfigure} -ne 0 ]\n+    use_cmake=0\n+    case \"$t\" in\n+        (*-msvc)\n+        use_cmake=1\n+        ;;\n+    esac\n+\n+    if [ ${do_reconfigure} -ne 0 ] && [ ${use_cmake} -ne 0 ]\n+    then\n+        msg \"configuring LLVM for $t with cmake\"\n+\n+        CMAKE_ARGS=\"-DLLVM_INCLUDE_TESTS=OFF\"\n+        if [ ! -z \"$CFG_DISABLE_OPTIMIZE_LLVM\" ]; then\n+            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_BUILD_TYPE=Debug\"\n+        else\n+            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_BUILD_TYPE=Release\"\n+        fi\n+        if [ -z \"$CFG_ENABLE_LLVM_ASSERTIONS\" ]\n+        then\n+            CMAKE_ARGS=\"$CMAKE_ARGS -DLLVM_ENABLE_ASSERTIONS=OFF\"\n+        else\n+            CMAKE_ARGS=\"$CMAKE_ARGS -DLLVM_ENABLE_ASSERTIONS=ON\"\n+        fi\n+\n+        msg \"configuring LLVM with:\"\n+        msg \"$CMAKE_ARGS\"\n+        (cd $LLVM_BUILD_DIR && \"$CFG_CMAKE\" $CFG_LLVM_SRC_DIR \\\n+                                            -G \"Visual Studio 12 2013 Win64\" \\\n+                                            $CMAKE_ARGS)\n+        need_ok \"LLVM cmake configure failed\"\n+    fi\n+\n+    if [ ${do_reconfigure} -ne 0 ] && [ ${use_cmake} -eq 0 ]\n     then\n         # LLVM's configure doesn't recognize the new Windows triples yet\n         gnu_t=$(to_gnu_triple $t)"}, {"sha": "c04ef89ebc58a658a9629d51670d618459901538", "filename": "mk/clean.mk", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b56d47cc80a7df471c0e2f96fa62a3e3983972ec/mk%2Fclean.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b56d47cc80a7df471c0e2f96fa62a3e3983972ec/mk%2Fclean.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fclean.mk?ref=b56d47cc80a7df471c0e2f96fa62a3e3983972ec", "patch": "@@ -118,16 +118,3 @@ $(foreach host, $(CFG_HOST), \\\n  $(eval $(foreach target, $(CFG_TARGET), \\\n   $(eval $(foreach stage, 0 1 2 3, \\\n    $(eval $(call CLEAN_TARGET_STAGE_N,$(stage),$(target),$(host))))))))\n-\n-define DEF_CLEAN_LLVM_HOST\n-ifeq ($(CFG_LLVM_ROOT),)\n-clean-llvm$(1):\n-\t$$(Q)$$(MAKE) -C $$(CFG_LLVM_BUILD_DIR_$(1)) clean\n-else\n-clean-llvm$(1): ;\n-\n-endif\n-endef\n-\n-$(foreach host, $(CFG_HOST), \\\n- $(eval $(call DEF_CLEAN_LLVM_HOST,$(host))))"}, {"sha": "356366bd5c6d7a89ea9b1eb5a0bc8a761de0e6e9", "filename": "mk/llvm.mk", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b56d47cc80a7df471c0e2f96fa62a3e3983972ec/mk%2Fllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b56d47cc80a7df471c0e2f96fa62a3e3983972ec/mk%2Fllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fllvm.mk?ref=b56d47cc80a7df471c0e2f96fa62a3e3983972ec", "patch": "@@ -19,17 +19,43 @@ LLVM_DEPS_INC=$(call rwildcard,$(CFG_LLVM_SRC_DIR)include,*cpp *hpp)\n LLVM_DEPS=$(LLVM_DEPS_SRC) $(LLVM_DEPS_INC)\n endif\n \n+ifdef CFG_DISABLE_OPTIMIZE_LLVM\n+LLVM_BUILD_CONFIG_MODE := Debug\n+else\n+LLVM_BUILD_CONFIG_MODE := Release\n+endif\n+\n define DEF_LLVM_RULES\n \n # If CFG_LLVM_ROOT is defined then we don't build LLVM ourselves\n ifeq ($(CFG_LLVM_ROOT),)\n \n LLVM_STAMP_$(1) = $$(CFG_LLVM_BUILD_DIR_$(1))/llvm-auto-clean-stamp\n \n+ifeq ($$(findstring msvc,$(1)),msvc)\n+\n+$$(LLVM_CONFIG_$(1)): $$(LLVM_DEPS) $$(LLVM_STAMP_$(1))\n+\t@$$(call E, cmake: llvm)\n+\t$$(Q)$$(CFG_CMAKE) --build $$(CFG_LLVM_BUILD_DIR_$(1)) \\\n+\t\t--config $$(LLVM_BUILD_CONFIG_MODE)\n+\t$$(Q)touch $$(LLVM_CONFIG_$(1))\n+\n+clean-llvm$(1):\n+\n+else\n+\n $$(LLVM_CONFIG_$(1)): $$(LLVM_DEPS) $$(LLVM_STAMP_$(1))\n \t@$$(call E, make: llvm)\n \t$$(Q)$$(MAKE) -C $$(CFG_LLVM_BUILD_DIR_$(1)) $$(CFG_LLVM_BUILD_ENV_$(1)) ONLY_TOOLS=\"$$(LLVM_TOOLS)\"\n \t$$(Q)touch $$(LLVM_CONFIG_$(1))\n+\n+clean-llvm$(1):\n+\t$$(Q)$$(MAKE) -C $$(CFG_LLVM_BUILD_DIR_$(1)) clean\n+\n+endif\n+\n+else\n+clean-llvm$(1):\n endif\n \n # This is used to independently force an LLVM clean rebuild"}, {"sha": "a70200e4d8a22a0a57a0f25cad086894f3fe6b3a", "filename": "mk/main.mk", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b56d47cc80a7df471c0e2f96fa62a3e3983972ec/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b56d47cc80a7df471c0e2f96fa62a3e3983972ec/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=b56d47cc80a7df471c0e2f96fa62a3e3983972ec", "patch": "@@ -299,9 +299,13 @@ LLVM_LIBDIR_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --libdir)\n LLVM_LIBDIR_RUSTFLAGS_$(1)=-L \"$$(LLVM_LIBDIR_$(1))\"\n LLVM_LIBS_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --libs $$(LLVM_COMPONENTS))\n LLVM_LDFLAGS_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --ldflags)\n+ifeq ($$(findstring freebsd,$(1)),freebsd)\n # On FreeBSD, it may search wrong headers (that are for pre-installed LLVM),\n # so we replace -I with -iquote to ensure that it searches bundled LLVM first.\n LLVM_CXXFLAGS_$(1)=$$(subst -I, -iquote , $$(shell \"$$(LLVM_CONFIG_$(1))\" --cxxflags))\n+else\n+LLVM_CXXFLAGS_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --cxxflags)\n+endif\n LLVM_HOST_TRIPLE_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --host-target)\n \n LLVM_AS_$(1)=$$(CFG_LLVM_INST_DIR_$(1))/bin/llvm-as$$(X_$(1))"}]}