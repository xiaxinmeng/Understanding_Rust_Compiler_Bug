{"sha": "43ad19b2506c4e4ce6204e3ecf8b35869bd76eff", "node_id": "C_kwDOAAsO6NoAKDQzYWQxOWIyNTA2YzRlNGNlNjIwNGUzZWNmOGIzNTg2OWJkNzZlZmY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-10T16:47:26Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-10T21:18:06Z"}, "message": "bless tests", "tree": {"sha": "3cf31eff255d92a082f6164c25380c011ffe2cd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cf31eff255d92a082f6164c25380c011ffe2cd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff", "html_url": "https://github.com/rust-lang/rust/commit/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ec6c84bb31f9b403b0b25bc4685ece5c744cb48", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ec6c84bb31f9b403b0b25bc4685ece5c744cb48", "html_url": "https://github.com/rust-lang/rust/commit/8ec6c84bb31f9b403b0b25bc4685ece5c744cb48"}], "stats": {"total": 93, "additions": 23, "deletions": 70}, "files": [{"sha": "d6e18010f3b271a42810d91a153c53695950cf7c", "filename": "src/test/ui/generic-associated-types/bugs/issue-80626.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-80626.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-80626.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-80626.rs?ref=43ad19b2506c4e4ce6204e3ecf8b35869bd76eff", "patch": "@@ -1,15 +1,12 @@\n-// check-fail\n-// known-bug: #80626\n-\n-// This should pass, but it requires `Sized` to be coinductive.\n+// check-pass\n \n trait Allocator {\n     type Allocated<T>;\n }\n \n enum LinkedList<A: Allocator> {\n     Head,\n-    Next(A::Allocated<Self>)\n+    Next(A::Allocated<Self>),\n }\n \n fn main() {}"}, {"sha": "9a0f332ed47360141760f8f697d340417855dde6", "filename": "src/test/ui/generic-associated-types/bugs/issue-80626.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8ec6c84bb31f9b403b0b25bc4685ece5c744cb48/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-80626.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8ec6c84bb31f9b403b0b25bc4685ece5c744cb48/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-80626.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-80626.stderr?ref=8ec6c84bb31f9b403b0b25bc4685ece5c744cb48", "patch": "@@ -1,15 +0,0 @@\n-error[E0275]: overflow evaluating the requirement `LinkedList<A>: Sized`\n-  --> $DIR/issue-80626.rs:12:10\n-   |\n-LL |     Next(A::Allocated<Self>)\n-   |          ^^^^^^^^^^^^^^^^^^\n-   |\n-note: required by a bound in `Allocator::Allocated`\n-  --> $DIR/issue-80626.rs:7:20\n-   |\n-LL |     type Allocated<T>;\n-   |                    ^ required by this bound in `Allocator::Allocated`\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0275`."}, {"sha": "b35657989efb96ddda749a38767a8c04edd723ba", "filename": "src/test/ui/generic-associated-types/issue-87750.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87750.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87750.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87750.rs?ref=43ad19b2506c4e4ce6204e3ecf8b35869bd76eff", "patch": "@@ -1,3 +1,5 @@\n+// check-pass\n+\n trait PointerFamily {\n     type Pointer<T>;\n }\n@@ -10,11 +12,13 @@ impl PointerFamily for RcFamily {\n }\n \n #[allow(dead_code)]\n-enum Node<T, P: PointerFamily> where P::Pointer<Node<T, P>>: Sized {\n+enum Node<T, P: PointerFamily>\n+where\n+    P::Pointer<Node<T, P>>: Sized,\n+{\n     Cons(P::Pointer<Node<T, P>>),\n }\n \n fn main() {\n     let _list: <RcFamily as PointerFamily>::Pointer<Node<i32, RcFamily>>;\n-    //~^ ERROR overflow evaluating the requirement `Node<i32, RcFamily>: Sized`\n }"}, {"sha": "b358ca273ca79c3854dc92bfbc3d02a22ea4737b", "filename": "src/test/ui/generic-associated-types/issue-87750.stderr", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8ec6c84bb31f9b403b0b25bc4685ece5c744cb48/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87750.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8ec6c84bb31f9b403b0b25bc4685ece5c744cb48/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87750.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87750.stderr?ref=8ec6c84bb31f9b403b0b25bc4685ece5c744cb48", "patch": "@@ -1,9 +0,0 @@\n-error[E0275]: overflow evaluating the requirement `Node<i32, RcFamily>: Sized`\n-  --> $DIR/issue-87750.rs:18:16\n-   |\n-LL |     let _list: <RcFamily as PointerFamily>::Pointer<Node<i32, RcFamily>>;\n-   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0275`."}, {"sha": "ecf6f69c9fa7ebca2426cf28e384f1790afdcb08", "filename": "src/test/ui/generic-associated-types/projection-bound-cycle-generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fprojection-bound-cycle-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fprojection-bound-cycle-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fprojection-bound-cycle-generic.rs?ref=43ad19b2506c4e4ce6204e3ecf8b35869bd76eff", "patch": "@@ -21,6 +21,7 @@ impl<T> Foo for Number<T> {\n     // ```\n     // which it is :)\n     type Item = [T] where [T]: Sized;\n+    //~^ ERROR overflow evaluating the requirement `<Number<T> as Foo>::Item == _`\n }\n \n struct OnlySized<T> where T: Sized { f: T }\n@@ -40,7 +41,6 @@ impl<T> Bar for T where T: Foo {\n     // can use the bound on `Foo::Item` for this, but that requires\n     // `wf(<T as Foo>::Item)`, which is an invalid cycle.\n     type Assoc = OnlySized<<T as Foo>::Item>;\n-    //~^ ERROR overflow evaluating the requirement `<T as Foo>::Item: Sized`\n }\n \n fn foo<T: Print>() {"}, {"sha": "aae9a56bb612878da03b2e46c2bdc74c3ff1c175", "filename": "src/test/ui/generic-associated-types/projection-bound-cycle-generic.stderr", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fprojection-bound-cycle-generic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fprojection-bound-cycle-generic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fprojection-bound-cycle-generic.stderr?ref=43ad19b2506c4e4ce6204e3ecf8b35869bd76eff", "patch": "@@ -1,14 +1,8 @@\n-error[E0275]: overflow evaluating the requirement `<T as Foo>::Item: Sized`\n-  --> $DIR/projection-bound-cycle-generic.rs:42:18\n+error[E0275]: overflow evaluating the requirement `<Number<T> as Foo>::Item == _`\n+  --> $DIR/projection-bound-cycle-generic.rs:23:5\n    |\n-LL |     type Assoc = OnlySized<<T as Foo>::Item>;\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-note: required by a bound in `OnlySized`\n-  --> $DIR/projection-bound-cycle-generic.rs:26:18\n-   |\n-LL | struct OnlySized<T> where T: Sized { f: T }\n-   |                  ^ required by this bound in `OnlySized`\n+LL |     type Item = [T] where [T]: Sized;\n+   |     ^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "b51ae7ef20186dcf07ad3725677657b81296ffaa", "filename": "src/test/ui/generic-associated-types/projection-bound-cycle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fprojection-bound-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fprojection-bound-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fprojection-bound-cycle.rs?ref=43ad19b2506c4e4ce6204e3ecf8b35869bd76eff", "patch": "@@ -24,6 +24,7 @@ impl Foo for Number {\n     // ```\n     // which it is :)\n     type Item = str where str: Sized;\n+    //~^ ERROR overflow evaluating the requirement `<Number as Foo>::Item == _`\n }\n \n struct OnlySized<T> where T: Sized { f: T }\n@@ -43,7 +44,6 @@ impl<T> Bar for T where T: Foo {\n     // can use the bound on `Foo::Item` for this, but that requires\n     // `wf(<T as Foo>::Item)`, which is an invalid cycle.\n     type Assoc = OnlySized<<T as Foo>::Item>;\n-    //~^ ERROR overflow evaluating the requirement `<T as Foo>::Item: Sized`\n }\n \n fn foo<T: Print>() {"}, {"sha": "b1b8afeecd02f51c65457461a4e7bd5f38e6abdb", "filename": "src/test/ui/generic-associated-types/projection-bound-cycle.stderr", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fprojection-bound-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fprojection-bound-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fprojection-bound-cycle.stderr?ref=43ad19b2506c4e4ce6204e3ecf8b35869bd76eff", "patch": "@@ -1,14 +1,8 @@\n-error[E0275]: overflow evaluating the requirement `<T as Foo>::Item: Sized`\n-  --> $DIR/projection-bound-cycle.rs:45:18\n+error[E0275]: overflow evaluating the requirement `<Number as Foo>::Item == _`\n+  --> $DIR/projection-bound-cycle.rs:26:5\n    |\n-LL |     type Assoc = OnlySized<<T as Foo>::Item>;\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-note: required by a bound in `OnlySized`\n-  --> $DIR/projection-bound-cycle.rs:29:18\n-   |\n-LL | struct OnlySized<T> where T: Sized { f: T }\n-   |                  ^ required by this bound in `OnlySized`\n+LL |     type Item = str where str: Sized;\n+   |     ^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "d0e6e9db07e9bfa6b970c68a35deae6d8ce63671", "filename": "src/test/ui/sized/recursive-type-2.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Fsized%2Frecursive-type-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Fsized%2Frecursive-type-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsized%2Frecursive-type-2.stderr?ref=43ad19b2506c4e4ce6204e3ecf8b35869bd76eff", "patch": "@@ -1,7 +1,8 @@\n error[E0391]: cycle detected when computing layout of `Foo<()>`\n    |\n+   = note: ...which requires computing layout of `<() as A>::Assoc`...\n    = note: ...which again requires computing layout of `Foo<()>`, completing the cycle\n-note: cycle used when optimizing MIR for `main`\n+note: cycle used when elaborating drops for `main`\n   --> $DIR/recursive-type-2.rs:11:1\n    |\n LL | fn main() {"}, {"sha": "37bae2e90a595a0252eabf1f907ff6b59857ce37", "filename": "src/test/ui/traits/issue-82830.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Ftraits%2Fissue-82830.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43ad19b2506c4e4ce6204e3ecf8b35869bd76eff/src%2Ftest%2Fui%2Ftraits%2Fissue-82830.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-82830.rs?ref=43ad19b2506c4e4ce6204e3ecf8b35869bd76eff", "patch": "@@ -1,10 +1,12 @@\n+// check-pass\n+\n trait A<Y, N> {\n     type B;\n }\n \n type MaybeBox<T> = <T as A<T, Box<T>>>::B;\n struct P {\n-    t: MaybeBox<P>, //~ ERROR: overflow evaluating the requirement `P: Sized`\n+    t: MaybeBox<P>,\n }\n \n impl<Y, N> A<Y, N> for P {"}, {"sha": "6a597a402156f1926912f3ac5bb958a4e53187ec", "filename": "src/test/ui/traits/issue-82830.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8ec6c84bb31f9b403b0b25bc4685ece5c744cb48/src%2Ftest%2Fui%2Ftraits%2Fissue-82830.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8ec6c84bb31f9b403b0b25bc4685ece5c744cb48/src%2Ftest%2Fui%2Ftraits%2Fissue-82830.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-82830.stderr?ref=8ec6c84bb31f9b403b0b25bc4685ece5c744cb48", "patch": "@@ -1,15 +0,0 @@\n-error[E0275]: overflow evaluating the requirement `P: Sized`\n-  --> $DIR/issue-82830.rs:7:8\n-   |\n-LL |     t: MaybeBox<P>,\n-   |        ^^^^^^^^^^^\n-   |\n-note: required for `P` to implement `A<P, Box<P>>`\n-  --> $DIR/issue-82830.rs:10:12\n-   |\n-LL | impl<Y, N> A<Y, N> for P {\n-   |            ^^^^^^^     ^\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0275`."}]}