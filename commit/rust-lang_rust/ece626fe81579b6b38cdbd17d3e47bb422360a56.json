{"sha": "ece626fe81579b6b38cdbd17d3e47bb422360a56", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjZTYyNmZlODE1NzliNmIzOGNkYmQxN2QzZTQ3YmI0MjIzNjBhNTY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-16T08:20:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-16T08:20:11Z"}, "message": "Merge #6894\n\n6894: Parenthesize composite if condition before inverting in invert-if assist r=matklad a=Jesse-Bakker\n\nFixes #6867\n\nCo-authored-by: Jesse Bakker <github@jessebakker.com>", "tree": {"sha": "3d7936e0c994fbf931085fd7e4dc1eb203d2cb54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d7936e0c994fbf931085fd7e4dc1eb203d2cb54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ece626fe81579b6b38cdbd17d3e47bb422360a56", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf2cM7CRBK7hj4Ov3rIwAAdHIIADDnnw3+uWZXzpSOsetIlLf4\n609s0AYVvpkjPRh6c3ZZqROW8V3/GrLYWINWlYyNcD4zVojQsXkoL9m5Jyi0CrWa\n62efuCBdatERk5CfrQfqyEfaji3IWnFrh9H0hnnuPlJ38Q87l6elGta6cNk/kaNP\nyF+P47WfX5uoG13cz9zRRvwnOGGdVh0mRlD+8rDUmx0MBiaabBvskuAj9LzMdln3\n5u42oVfK1/M8dzJ0jDRXQ3Gk3Y7PilWbVhsnS6h0f/rMPcPtsyGtVubH6VufSXwA\nIe8Cvx+P/6lKhsBmG/K7cL/LEuMNk1YNn5uPt12utPdrLSV6qeY4oQS+AxS2bfk=\n=is0c\n-----END PGP SIGNATURE-----\n", "payload": "tree 3d7936e0c994fbf931085fd7e4dc1eb203d2cb54\nparent eb9ba457b0126bd45c45ef751e92ccfdc5fdc206\nparent 0f42a71806ad62cd042dd40ab42501180fb72999\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1608106811 +0000\ncommitter GitHub <noreply@github.com> 1608106811 +0000\n\nMerge #6894\n\n6894: Parenthesize composite if condition before inverting in invert-if assist r=matklad a=Jesse-Bakker\n\nFixes #6867\n\nCo-authored-by: Jesse Bakker <github@jessebakker.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ece626fe81579b6b38cdbd17d3e47bb422360a56", "html_url": "https://github.com/rust-lang/rust/commit/ece626fe81579b6b38cdbd17d3e47bb422360a56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ece626fe81579b6b38cdbd17d3e47bb422360a56/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb9ba457b0126bd45c45ef751e92ccfdc5fdc206", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb9ba457b0126bd45c45ef751e92ccfdc5fdc206", "html_url": "https://github.com/rust-lang/rust/commit/eb9ba457b0126bd45c45ef751e92ccfdc5fdc206"}, {"sha": "0f42a71806ad62cd042dd40ab42501180fb72999", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f42a71806ad62cd042dd40ab42501180fb72999", "html_url": "https://github.com/rust-lang/rust/commit/0f42a71806ad62cd042dd40ab42501180fb72999"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "91e2f5c8cb33f93fe1088d48a0364214c18eb211", "filename": "crates/assists/src/handlers/invert_if.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ece626fe81579b6b38cdbd17d3e47bb422360a56/crates%2Fassists%2Fsrc%2Fhandlers%2Finvert_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ece626fe81579b6b38cdbd17d3e47bb422360a56/crates%2Fassists%2Fsrc%2Fhandlers%2Finvert_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Finvert_if.rs?ref=ece626fe81579b6b38cdbd17d3e47bb422360a56", "patch": "@@ -68,6 +68,15 @@ mod tests {\n \n     use crate::tests::{check_assist, check_assist_not_applicable};\n \n+    #[test]\n+    fn invert_if_composite_condition() {\n+        check_assist(\n+            invert_if,\n+            \"fn f() { i<|>f x == 3 || x == 4 || x == 5 { 1 } else { 3 * 2 } }\",\n+            \"fn f() { if !(x == 3 || x == 4 || x == 5) { 3 * 2 } else { 1 } }\",\n+        )\n+    }\n+\n     #[test]\n     fn invert_if_remove_inequality() {\n         check_assist("}, {"sha": "f2cacf7c80a4fe83e0b8ab2fbef07e32ffa54c24", "filename": "crates/assists/src/utils.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ece626fe81579b6b38cdbd17d3e47bb422360a56/crates%2Fassists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ece626fe81579b6b38cdbd17d3e47bb422360a56/crates%2Fassists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils.rs?ref=ece626fe81579b6b38cdbd17d3e47bb422360a56", "patch": "@@ -212,6 +212,10 @@ fn invert_special_case(expr: &ast::Expr) -> Option<ast::Expr> {\n         ast::Expr::BinExpr(bin) => match bin.op_kind()? {\n             ast::BinOp::NegatedEqualityTest => bin.replace_op(T![==]).map(|it| it.into()),\n             ast::BinOp::EqualityTest => bin.replace_op(T![!=]).map(|it| it.into()),\n+            // Parenthesize composite boolean expressions before prefixing `!`\n+            ast::BinOp::BooleanAnd | ast::BinOp::BooleanOr => {\n+                Some(make::expr_prefix(T![!], make::expr_paren(expr.clone())))\n+            }\n             _ => None,\n         },\n         ast::Expr::MethodCallExpr(mce) => {"}, {"sha": "16b079c42acf04a71d82a2c6fc02fbe6f6605c07", "filename": "crates/syntax/src/ast/make.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ece626fe81579b6b38cdbd17d3e47bb422360a56/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ece626fe81579b6b38cdbd17d3e47bb422360a56/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs?ref=ece626fe81579b6b38cdbd17d3e47bb422360a56", "patch": "@@ -196,6 +196,9 @@ pub fn expr_method_call(receiver: ast::Expr, method: &str, arg_list: ast::ArgLis\n pub fn expr_ref(expr: ast::Expr, exclusive: bool) -> ast::Expr {\n     expr_from_text(&if exclusive { format!(\"&mut {}\", expr) } else { format!(\"&{}\", expr) })\n }\n+pub fn expr_paren(expr: ast::Expr) -> ast::Expr {\n+    expr_from_text(&format!(\"({})\", expr))\n+}\n fn expr_from_text(text: &str) -> ast::Expr {\n     ast_from_text(&format!(\"const C: () = {};\", text))\n }"}]}