{"sha": "ea3c01e3374143912f048b22fda106ee8d5a1cd8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhM2MwMWUzMzc0MTQzOTEyZjA0OGIyMmZkYTEwNmVlOGQ1YTFjZDg=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-02-18T01:31:11Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-02-18T01:31:11Z"}, "message": "Format a match arm with the beginning vertical bar", "tree": {"sha": "a6941bc1ff386cc643e3c8a7f408b94b6123d324", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6941bc1ff386cc643e3c8a7f408b94b6123d324"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea3c01e3374143912f048b22fda106ee8d5a1cd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea3c01e3374143912f048b22fda106ee8d5a1cd8", "html_url": "https://github.com/rust-lang/rust/commit/ea3c01e3374143912f048b22fda106ee8d5a1cd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea3c01e3374143912f048b22fda106ee8d5a1cd8/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "197c3b4406f484f81ecbfef2548c842ac8e32a78", "url": "https://api.github.com/repos/rust-lang/rust/commits/197c3b4406f484f81ecbfef2548c842ac8e32a78", "html_url": "https://github.com/rust-lang/rust/commit/197c3b4406f484f81ecbfef2548c842ac8e32a78"}], "stats": {"total": 64, "additions": 50, "deletions": 14}, "files": [{"sha": "d21c272631039568f99150b21da1df611ff8cf31", "filename": "rustfmt-core/src/expr.rs", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ea3c01e3374143912f048b22fda106ee8d5a1cd8/rustfmt-core%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea3c01e3374143912f048b22fda106ee8d5a1cd8/rustfmt-core%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Fexpr.rs?ref=ea3c01e3374143912f048b22fda106ee8d5a1cd8", "patch": "@@ -1406,17 +1406,22 @@ fn rewrite_match_arm(\n     } else {\n         (mk_sp(arm.span().lo(), arm.span().lo()), String::new())\n     };\n-    let pats_str =\n-        rewrite_match_pattern(context, &arm.pats, &arm.guard, shape).and_then(|pats_str| {\n-            combine_strs_with_missing_comments(\n-                context,\n-                &attrs_str,\n-                &pats_str,\n-                missing_span,\n-                shape,\n-                false,\n-            )\n-        })?;\n+    let pats_str = rewrite_match_pattern(\n+        context,\n+        &arm.pats,\n+        &arm.guard,\n+        arm.beginning_vert.is_some(),\n+        shape,\n+    ).and_then(|pats_str| {\n+        combine_strs_with_missing_comments(\n+            context,\n+            &attrs_str,\n+            &pats_str,\n+            missing_span,\n+            shape,\n+            false,\n+        )\n+    })?;\n     rewrite_match_body(\n         context,\n         &arm.body,\n@@ -1463,11 +1468,15 @@ fn rewrite_match_pattern(\n     context: &RewriteContext,\n     pats: &[ptr::P<ast::Pat>],\n     guard: &Option<ptr::P<ast::Expr>>,\n+    has_beginning_vert: bool,\n     shape: Shape,\n ) -> Option<String> {\n     // Patterns\n     // 5 = ` => {`\n-    let pat_shape = shape.sub_width(5)?;\n+    // 2 = `| `\n+    let pat_shape = shape\n+        .sub_width(5)?\n+        .offset_left(if has_beginning_vert { 2 } else { 0 })?;\n \n     let pat_strs = pats.iter()\n         .map(|p| p.rewrite(context, pat_shape))\n@@ -1498,11 +1507,12 @@ fn rewrite_match_pattern(\n         config: context.config,\n     };\n     let pats_str = write_list(&items, &fmt)?;\n+    let beginning_vert = if has_beginning_vert { \"| \" } else { \"\" };\n \n     // Guard\n     let guard_str = rewrite_guard(context, guard, shape, trimmed_last_line_width(&pats_str))?;\n \n-    Some(format!(\"{}{}\", pats_str, guard_str))\n+    Some(format!(\"{}{}{}\", beginning_vert, pats_str, guard_str))\n }\n \n // (extend, body)"}, {"sha": "20dd843879860a2331e2bb9e8b1ef8ac8680ead0", "filename": "rustfmt-core/src/spanned.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ea3c01e3374143912f048b22fda106ee8d5a1cd8/rustfmt-core%2Fsrc%2Fspanned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea3c01e3374143912f048b22fda106ee8d5a1cd8/rustfmt-core%2Fsrc%2Fspanned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Fspanned.rs?ref=ea3c01e3374143912f048b22fda106ee8d5a1cd8", "patch": "@@ -89,7 +89,12 @@ impl Spanned for ast::Ty {\n \n impl Spanned for ast::Arm {\n     fn span(&self) -> Span {\n-        span_with_attrs_lo_hi!(self, self.pats[0].span.lo(), self.body.span.hi())\n+        let lo = if let Some(sp) = self.beginning_vert {\n+            sp.lo()\n+        } else {\n+            self.pats[0].span.lo()\n+        };\n+        span_with_attrs_lo_hi!(self, lo, self.body.span.hi())\n     }\n }\n "}, {"sha": "f38bf7cca977ced74331d40e721ebea011b95e55", "filename": "rustfmt-core/tests/source/match.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ea3c01e3374143912f048b22fda106ee8d5a1cd8/rustfmt-core%2Ftests%2Fsource%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea3c01e3374143912f048b22fda106ee8d5a1cd8/rustfmt-core%2Ftests%2Fsource%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Ftests%2Fsource%2Fmatch.rs?ref=ea3c01e3374143912f048b22fda106ee8d5a1cd8", "patch": "@@ -451,3 +451,14 @@ fn issue_2152() {\n         \"bind\" | \"writev\" | \"readv\" | \"sendmsg\" | \"recvmsg\" if android && (aarch64 || x86_64) => true,\n     }\n }\n+\n+// #2462\n+// Preserve a `|` at the beginning of a match arm.\n+fn match_with_beginning_vert() {\n+    let x = Foo::A;\n+    match x {\n+        | Foo::A\n+        | Foo::B => println!(\"AB\"),\n+        | Foo::C => println!(\"C\"),\n+    }\n+}"}, {"sha": "72ffa966c01d2dfdc65a7aba3167042aeda81aa8", "filename": "rustfmt-core/tests/target/match.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ea3c01e3374143912f048b22fda106ee8d5a1cd8/rustfmt-core%2Ftests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea3c01e3374143912f048b22fda106ee8d5a1cd8/rustfmt-core%2Ftests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Ftests%2Ftarget%2Fmatch.rs?ref=ea3c01e3374143912f048b22fda106ee8d5a1cd8", "patch": "@@ -483,3 +483,13 @@ fn issue_2152() {\n         }\n     }\n }\n+\n+// #2462\n+// Preserve a `|` at the beginning of a match arm.\n+fn match_with_beginning_vert() {\n+    let x = Foo::A;\n+    match x {\n+        | Foo::A | Foo::B => println!(\"AB\"),\n+        | Foo::C => println!(\"C\"),\n+    }\n+}"}]}