{"sha": "28b44d970c0b58a7e4d683580ecee4bf9c8cb073", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YjQ0ZDk3MGMwYjU4YTdlNGQ2ODM1ODBlY2VlNGJmOWM4Y2IwNzM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-05T10:53:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-07T20:48:51Z"}, "message": "test validation of uninit memory (used to ICE)", "tree": {"sha": "8d83a7cf2c2573c635b90d2d7b81cf23e4483b37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d83a7cf2c2573c635b90d2d7b81cf23e4483b37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28b44d970c0b58a7e4d683580ecee4bf9c8cb073", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28b44d970c0b58a7e4d683580ecee4bf9c8cb073", "html_url": "https://github.com/rust-lang/rust/commit/28b44d970c0b58a7e4d683580ecee4bf9c8cb073", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28b44d970c0b58a7e4d683580ecee4bf9c8cb073/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "975513728eb2a139a4dc435a9d8b0f7064d0ef54", "url": "https://api.github.com/repos/rust-lang/rust/commits/975513728eb2a139a4dc435a9d8b0f7064d0ef54", "html_url": "https://github.com/rust-lang/rust/commit/975513728eb2a139a4dc435a9d8b0f7064d0ef54"}], "stats": {"total": 300, "additions": 300, "deletions": 0}, "files": [{"sha": "89b57b2d50d107fb96e90695c5c980e4020b126f", "filename": "tests/compile-fail/validity/invalid_bool_uninit.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/28b44d970c0b58a7e4d683580ecee4bf9c8cb073/tests%2Fcompile-fail%2Fvalidity%2Finvalid_bool_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28b44d970c0b58a7e4d683580ecee4bf9c8cb073/tests%2Fcompile-fail%2Fvalidity%2Finvalid_bool_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Finvalid_bool_uninit.rs?ref=28b44d970c0b58a7e4d683580ecee4bf9c8cb073", "patch": "@@ -0,0 +1,10 @@\n+#![allow(invalid_value)]\n+\n+union MyUninit {\n+    init: (),\n+    uninit: bool,\n+}\n+\n+fn main() {\n+    let _b = unsafe { MyUninit { init: () }.uninit }; //~ ERROR encountered uninitialized bytes, but expected a boolean\n+}"}, {"sha": "34798dfbc65954008fb90e4969f8eec035db68f9", "filename": "tests/compile-fail/validity/invalid_char_uninit.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/28b44d970c0b58a7e4d683580ecee4bf9c8cb073/tests%2Fcompile-fail%2Fvalidity%2Finvalid_char_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28b44d970c0b58a7e4d683580ecee4bf9c8cb073/tests%2Fcompile-fail%2Fvalidity%2Finvalid_char_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Finvalid_char_uninit.rs?ref=28b44d970c0b58a7e4d683580ecee4bf9c8cb073", "patch": "@@ -0,0 +1,10 @@\n+#![allow(invalid_value)]\n+\n+union MyUninit {\n+    init: (),\n+    uninit: char,\n+}\n+\n+fn main() {\n+    let _b = unsafe { MyUninit { init: () }.uninit }; //~ ERROR encountered uninitialized bytes, but expected a valid unicode scalar value (in `0..=0x10FFFF` but not in `0xD800..=0xDFFF`)\n+}"}, {"sha": "c0f53d72a295083ced3bbd4f2793ed7a362bbae4", "filename": "tests/compile-fail/validity/invalid_enum_tag_256variants_uninit.rs", "status": "added", "additions": 270, "deletions": 0, "changes": 270, "blob_url": "https://github.com/rust-lang/rust/blob/28b44d970c0b58a7e4d683580ecee4bf9c8cb073/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28b44d970c0b58a7e4d683580ecee4bf9c8cb073/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.rs?ref=28b44d970c0b58a7e4d683580ecee4bf9c8cb073", "patch": "@@ -0,0 +1,270 @@\n+#![allow(unused, deprecated, invalid_value)]\n+\n+#[derive(Copy, Clone)]\n+enum A {\n+    A0,\n+    A1,\n+    A2,\n+    A3,\n+    A4,\n+    A5,\n+    A6,\n+    A7,\n+    A8,\n+    A9,\n+    A10,\n+    A11,\n+    A12,\n+    A13,\n+    A14,\n+    A15,\n+    A16,\n+    A17,\n+    A18,\n+    A19,\n+    A20,\n+    A21,\n+    A22,\n+    A23,\n+    A24,\n+    A25,\n+    A26,\n+    A27,\n+    A28,\n+    A29,\n+    A30,\n+    A31,\n+    A32,\n+    A33,\n+    A34,\n+    A35,\n+    A36,\n+    A37,\n+    A38,\n+    A39,\n+    A40,\n+    A41,\n+    A42,\n+    A43,\n+    A44,\n+    A45,\n+    A46,\n+    A47,\n+    A48,\n+    A49,\n+    A50,\n+    A51,\n+    A52,\n+    A53,\n+    A54,\n+    A55,\n+    A56,\n+    A57,\n+    A58,\n+    A59,\n+    A60,\n+    A61,\n+    A62,\n+    A63,\n+    A64,\n+    A65,\n+    A66,\n+    A67,\n+    A68,\n+    A69,\n+    A70,\n+    A71,\n+    A72,\n+    A73,\n+    A74,\n+    A75,\n+    A76,\n+    A77,\n+    A78,\n+    A79,\n+    A80,\n+    A81,\n+    A82,\n+    A83,\n+    A84,\n+    A85,\n+    A86,\n+    A87,\n+    A88,\n+    A89,\n+    A90,\n+    A91,\n+    A92,\n+    A93,\n+    A94,\n+    A95,\n+    A96,\n+    A97,\n+    A98,\n+    A99,\n+    A100,\n+    A101,\n+    A102,\n+    A103,\n+    A104,\n+    A105,\n+    A106,\n+    A107,\n+    A108,\n+    A109,\n+    A110,\n+    A111,\n+    A112,\n+    A113,\n+    A114,\n+    A115,\n+    A116,\n+    A117,\n+    A118,\n+    A119,\n+    A120,\n+    A121,\n+    A122,\n+    A123,\n+    A124,\n+    A125,\n+    A126,\n+    A127,\n+    A128,\n+    A129,\n+    A130,\n+    A131,\n+    A132,\n+    A133,\n+    A134,\n+    A135,\n+    A136,\n+    A137,\n+    A138,\n+    A139,\n+    A140,\n+    A141,\n+    A142,\n+    A143,\n+    A144,\n+    A145,\n+    A146,\n+    A147,\n+    A148,\n+    A149,\n+    A150,\n+    A151,\n+    A152,\n+    A153,\n+    A154,\n+    A155,\n+    A156,\n+    A157,\n+    A158,\n+    A159,\n+    A160,\n+    A161,\n+    A162,\n+    A163,\n+    A164,\n+    A165,\n+    A166,\n+    A167,\n+    A168,\n+    A169,\n+    A170,\n+    A171,\n+    A172,\n+    A173,\n+    A174,\n+    A175,\n+    A176,\n+    A177,\n+    A178,\n+    A179,\n+    A180,\n+    A181,\n+    A182,\n+    A183,\n+    A184,\n+    A185,\n+    A186,\n+    A187,\n+    A188,\n+    A189,\n+    A190,\n+    A191,\n+    A192,\n+    A193,\n+    A194,\n+    A195,\n+    A196,\n+    A197,\n+    A198,\n+    A199,\n+    A200,\n+    A201,\n+    A202,\n+    A203,\n+    A204,\n+    A205,\n+    A206,\n+    A207,\n+    A208,\n+    A209,\n+    A210,\n+    A211,\n+    A212,\n+    A213,\n+    A214,\n+    A215,\n+    A216,\n+    A217,\n+    A218,\n+    A219,\n+    A220,\n+    A221,\n+    A222,\n+    A223,\n+    A224,\n+    A225,\n+    A226,\n+    A227,\n+    A228,\n+    A229,\n+    A230,\n+    A231,\n+    A232,\n+    A233,\n+    A234,\n+    A235,\n+    A236,\n+    A237,\n+    A238,\n+    A239,\n+    A240,\n+    A241,\n+    A242,\n+    A243,\n+    A244,\n+    A245,\n+    A246,\n+    A247,\n+    A248,\n+    A249,\n+    A250,\n+    A251,\n+    A252,\n+    A253,\n+    A254,\n+    A255,\n+}\n+\n+union MyUninit {\n+    init: (),\n+    uninit: A,\n+}\n+\n+fn main() {\n+    let _a = unsafe { MyUninit { init: () }.uninit }; //~ ERROR encountered uninitialized bytes, but expected a valid enum tag\n+}"}, {"sha": "dbd6711dc65a4faeadac93faf4f3da559142b40e", "filename": "tests/compile-fail/validity/invalid_fnptr_uninit.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/28b44d970c0b58a7e4d683580ecee4bf9c8cb073/tests%2Fcompile-fail%2Fvalidity%2Finvalid_fnptr_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28b44d970c0b58a7e4d683580ecee4bf9c8cb073/tests%2Fcompile-fail%2Fvalidity%2Finvalid_fnptr_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Finvalid_fnptr_uninit.rs?ref=28b44d970c0b58a7e4d683580ecee4bf9c8cb073", "patch": "@@ -0,0 +1,10 @@\n+#![allow(invalid_value)]\n+\n+union MyUninit {\n+    init: (),\n+    uninit: fn(),\n+}\n+\n+fn main() {\n+    let _b = unsafe { MyUninit { init: () }.uninit }; //~ ERROR encountered uninitialized bytes, but expected a function pointer\n+}"}]}