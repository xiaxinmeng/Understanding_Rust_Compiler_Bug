{"sha": "fcf9b30f426fcf8fd0b6e0a044825fdfa4a1bfdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjZjliMzBmNDI2ZmNmOGZkMGI2ZTBhMDQ0ODI1ZmRmYTRhMWJmZGI=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-03-27T05:53:30Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-04-06T22:40:01Z"}, "message": "De-~[] IO utils", "tree": {"sha": "584fcc75bb4a71f38773c30a9d30dfac2f5672e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/584fcc75bb4a71f38773c30a9d30dfac2f5672e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcf9b30f426fcf8fd0b6e0a044825fdfa4a1bfdb", "comment_count": 13, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcf9b30f426fcf8fd0b6e0a044825fdfa4a1bfdb", "html_url": "https://github.com/rust-lang/rust/commit/fcf9b30f426fcf8fd0b6e0a044825fdfa4a1bfdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcf9b30f426fcf8fd0b6e0a044825fdfa4a1bfdb/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49a80810950a2f2ea12f5efd4cf188cb68cb1283", "url": "https://api.github.com/repos/rust-lang/rust/commits/49a80810950a2f2ea12f5efd4cf188cb68cb1283", "html_url": "https://github.com/rust-lang/rust/commit/49a80810950a2f2ea12f5efd4cf188cb68cb1283"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "cbe157633b20f2347cfb7a1972eea44524c6a6e9", "filename": "src/libstd/io/util.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fcf9b30f426fcf8fd0b6e0a044825fdfa4a1bfdb/src%2Flibstd%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcf9b30f426fcf8fd0b6e0a044825fdfa4a1bfdb/src%2Flibstd%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Futil.rs?ref=fcf9b30f426fcf8fd0b6e0a044825fdfa4a1bfdb", "patch": "@@ -85,12 +85,12 @@ impl Reader for NullReader {\n \n /// A `Writer` which multiplexes writes to a set of `Writers`.\n pub struct MultiWriter {\n-    writers: ~[~Writer]\n+    writers: Vec<~Writer>\n }\n \n impl MultiWriter {\n     /// Creates a new `MultiWriter`\n-    pub fn new(writers: ~[~Writer]) -> MultiWriter {\n+    pub fn new(writers: Vec<~Writer>) -> MultiWriter {\n         MultiWriter { writers: writers }\n     }\n }\n@@ -273,8 +273,8 @@ mod test {\n             }\n         }\n \n-        let mut multi = MultiWriter::new(~[~TestWriter as ~Writer,\n-                                           ~TestWriter as ~Writer]);\n+        let mut multi = MultiWriter::new(vec!(~TestWriter as ~Writer,\n+                                              ~TestWriter as ~Writer));\n         multi.write([1, 2, 3]).unwrap();\n         assert_eq!(2, unsafe { writes });\n         assert_eq!(0, unsafe { flushes });\n@@ -285,8 +285,8 @@ mod test {\n \n     #[test]\n     fn test_chained_reader() {\n-        let rs = ~[MemReader::new(vec!(0, 1)), MemReader::new(vec!()),\n-                   MemReader::new(vec!(2, 3))];\n+        let rs = vec!(MemReader::new(vec!(0, 1)), MemReader::new(vec!()),\n+                      MemReader::new(vec!(2, 3)));\n         let mut r = ChainedReader::new(rs.move_iter());\n         assert_eq!(vec!(0, 1, 2, 3), r.read_to_end().unwrap());\n     }"}]}