{"sha": "1bd331b7aaa24245f86868305ab64600683a41e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiZDMzMWI3YWFhMjQyNDVmODY4NjgzMDVhYjY0NjAwNjgzYTQxZTE=", "commit": {"author": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-09-15T18:56:45Z"}, "committer": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-09-16T07:51:03Z"}, "message": "Fixed deadlock caused by the message pump not being notified of new message sends.", "tree": {"sha": "1b088c433bc95ee416eefe502b0dca866b5dead6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b088c433bc95ee416eefe502b0dca866b5dead6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bd331b7aaa24245f86868305ab64600683a41e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bd331b7aaa24245f86868305ab64600683a41e1", "html_url": "https://github.com/rust-lang/rust/commit/1bd331b7aaa24245f86868305ab64600683a41e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bd331b7aaa24245f86868305ab64600683a41e1/comments", "author": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91b4a0c9f8ba7be56fc098ffc6182a888e3970bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/91b4a0c9f8ba7be56fc098ffc6182a888e3970bf", "html_url": "https://github.com/rust-lang/rust/commit/91b4a0c9f8ba7be56fc098ffc6182a888e3970bf"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "4527955176c7aca87f6f9d0e680738a6f3e12756", "filename": "src/rt/rust_dom.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1bd331b7aaa24245f86868305ab64600683a41e1/src%2Frt%2Frust_dom.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1bd331b7aaa24245f86868305ab64600683a41e1/src%2Frt%2Frust_dom.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_dom.cpp?ref=1bd331b7aaa24245f86868305ab64600683a41e1", "patch": "@@ -314,7 +314,7 @@ rust_dom::start_main_loop() {\n             }\n             log(rust_log::TASK,\n                 \"all tasks are blocked, scheduler yielding ...\");\n-            sync::yield();\n+            sync::sleep(100);\n             log(rust_log::TASK,\n                 \"scheduler resuming ...\");\n             continue;"}, {"sha": "0dc1369dca61eb081d7f2551a34ac30b720f6c60", "filename": "src/rt/rust_kernel.cpp", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1bd331b7aaa24245f86868305ab64600683a41e1/src%2Frt%2Frust_kernel.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1bd331b7aaa24245f86868305ab64600683a41e1/src%2Frt%2Frust_kernel.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.cpp?ref=1bd331b7aaa24245f86868305ab64600683a41e1", "patch": "@@ -164,9 +164,7 @@ void\n rust_kernel::terminate_kernel_loop() {\n     log(rust_log::KERN, \"terminating kernel loop\");\n     _interrupt_kernel_loop = true;\n-    _kernel_lock.lock();\n-    _kernel_lock.signal_all();\n-    _kernel_lock.unlock();\n+    signal_kernel_lock();\n     join();\n }\n \n@@ -217,6 +215,23 @@ rust_kernel::free_handles(hash_map<T*, rust_handle<T>* > &map) {\n     }\n }\n \n+void\n+rust_kernel::notify_message_enqueued(rust_message_queue *queue,\n+                                     rust_message *message) {\n+    // The message pump needs to handle this message if the queue is not\n+    // associated with a domain, therefore signal the message pump.\n+    if (queue->is_associated() == false) {\n+        signal_kernel_lock();\n+    }\n+}\n+\n+void\n+rust_kernel::signal_kernel_lock() {\n+    _kernel_lock.lock();\n+    _kernel_lock.signal_all();\n+    _kernel_lock.unlock();\n+}\n+\n //\n // Local Variables:\n // mode: C++"}, {"sha": "3ad7b396575c12a71ebfdb513534b5325d620008", "filename": "src/rt/rust_kernel.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1bd331b7aaa24245f86868305ab64600683a41e1/src%2Frt%2Frust_kernel.h", "raw_url": "https://github.com/rust-lang/rust/raw/1bd331b7aaa24245f86868305ab64600683a41e1/src%2Frt%2Frust_kernel.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.h?ref=1bd331b7aaa24245f86868305ab64600683a41e1", "patch": "@@ -9,6 +9,7 @@\n  */\n \n class rust_kernel;\n+class rust_message;\n \n template <typename T> class\n rust_handle :\n@@ -90,6 +91,16 @@ class rust_kernel : public rust_thread {\n \n     bool is_deadlocked();\n \n+    void signal_kernel_lock();\n+\n+    /**\n+     * Notifies the kernel whenever a message has been enqueued . This gives\n+     * the kernel the opportunity to wake up the message pump thread if the\n+     * message queue is not associated.\n+     */\n+    void\n+    notify_message_enqueued(rust_message_queue *queue, rust_message *message);\n+\n     /**\n      * Blocks until all domains have terminated.\n      */"}, {"sha": "e9ce94bfa9e1fa50442f75b01e2955e66ed79448", "filename": "src/rt/rust_message.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1bd331b7aaa24245f86868305ab64600683a41e1/src%2Frt%2Frust_message.h", "raw_url": "https://github.com/rust-lang/rust/raw/1bd331b7aaa24245f86868305ab64600683a41e1/src%2Frt%2Frust_message.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_message.h?ref=1bd331b7aaa24245f86868305ab64600683a41e1", "patch": "@@ -114,6 +114,11 @@ class rust_message_queue : public lock_free_queue<rust_message*>,\n     bool is_associated() {\n         return this->dom_handle != NULL;\n     }\n+\n+    void enqueue(rust_message* message) {\n+        lock_free_queue<rust_message*>::enqueue(message);\n+        kernel->notify_message_enqueued(this, message);\n+    }\n };\n \n //"}, {"sha": "1c760bff9d41f70033af67ea4540783e0925e8d9", "filename": "src/rt/sync/lock_free_queue.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1bd331b7aaa24245f86868305ab64600683a41e1/src%2Frt%2Fsync%2Flock_free_queue.h", "raw_url": "https://github.com/rust-lang/rust/raw/1bd331b7aaa24245f86868305ab64600683a41e1/src%2Frt%2Fsync%2Flock_free_queue.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fsync%2Flock_free_queue.h?ref=1bd331b7aaa24245f86868305ab64600683a41e1", "patch": "@@ -120,7 +120,7 @@ class lock_free_queue {\n         return head.node == tail.node;\n     }\n \n-    void enqueue(T value) {\n+    virtual void enqueue(T value) {\n \n         // Create a new node to be inserted in the linked list, and set the\n         // next node to NULL."}]}