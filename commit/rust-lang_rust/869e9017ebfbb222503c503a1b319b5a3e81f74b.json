{"sha": "869e9017ebfbb222503c503a1b319b5a3e81f74b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2OWU5MDE3ZWJmYmIyMjI1MDNjNTAzYTFiMzE5YjVhM2U4MWY3NGI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-11T00:49:53Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-11T00:50:39Z"}, "message": "rustc: Create mutable vectors in macos_OS.rs. Should put out Darwin tinderbox.", "tree": {"sha": "09d02ef156bfbaeec999729904cac3257710d275", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09d02ef156bfbaeec999729904cac3257710d275"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/869e9017ebfbb222503c503a1b319b5a3e81f74b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/869e9017ebfbb222503c503a1b319b5a3e81f74b", "html_url": "https://github.com/rust-lang/rust/commit/869e9017ebfbb222503c503a1b319b5a3e81f74b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/869e9017ebfbb222503c503a1b319b5a3e81f74b/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1448fc1a24eedc089f4fb8abc7607f9e1b06c114", "url": "https://api.github.com/repos/rust-lang/rust/commits/1448fc1a24eedc089f4fb8abc7607f9e1b06c114", "html_url": "https://github.com/rust-lang/rust/commit/1448fc1a24eedc089f4fb8abc7607f9e1b06c114"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "700ac17c7b66f034cf1895273018325d6abe35fa", "filename": "src/lib/macos_OS.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/869e9017ebfbb222503c503a1b319b5a3e81f74b/src%2Flib%2Fmacos_OS.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869e9017ebfbb222503c503a1b319b5a3e81f74b/src%2Flib%2Fmacos_OS.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmacos_OS.rs?ref=869e9017ebfbb222503c503a1b319b5a3e81f74b", "patch": "@@ -62,7 +62,7 @@ fn dylib_filename(str base) -> str {\n }\n \n fn pipe() -> tup(int, int) {\n-    let vec[mutable int] fds = vec(0, 0);\n+    let vec[mutable int] fds = vec(mutable 0, 0);\n     assert (OS.libc.pipe(Vec.buf[mutable int](fds)) == 0);\n     ret tup(fds.(0), fds.(1));\n }\n@@ -72,7 +72,7 @@ fn fd_FILE(int fd) -> libc.FILE {\n }\n \n fn waitpid(int pid) -> int {\n-    let vec[mutable int] status = vec(0);\n+    let vec[mutable int] status = vec(mutable 0);\n     assert (OS.libc.waitpid(pid, Vec.buf[mutable int](status), 0) != -1);\n     ret status.(0);\n }"}]}