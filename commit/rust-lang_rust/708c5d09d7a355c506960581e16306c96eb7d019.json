{"sha": "708c5d09d7a355c506960581e16306c96eb7d019", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwOGM1ZDA5ZDdhMzU1YzUwNjk2MDU4MWUxNjMwNmM5NmViN2QwMTk=", "commit": {"author": {"name": "Tang Chenglong", "email": "ideami@outlook.com", "date": "2016-03-27T09:59:33Z"}, "committer": {"name": "Tang Chenglong", "email": "ideami@outlook.com", "date": "2016-03-27T09:59:33Z"}, "message": "Update macros.md", "tree": {"sha": "17ec626de92872e4279ce64de01dad19912203f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17ec626de92872e4279ce64de01dad19912203f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/708c5d09d7a355c506960581e16306c96eb7d019", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/708c5d09d7a355c506960581e16306c96eb7d019", "html_url": "https://github.com/rust-lang/rust/commit/708c5d09d7a355c506960581e16306c96eb7d019", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/708c5d09d7a355c506960581e16306c96eb7d019/comments", "author": {"login": "tclfs", "id": 14888862, "node_id": "MDQ6VXNlcjE0ODg4ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/14888862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tclfs", "html_url": "https://github.com/tclfs", "followers_url": "https://api.github.com/users/tclfs/followers", "following_url": "https://api.github.com/users/tclfs/following{/other_user}", "gists_url": "https://api.github.com/users/tclfs/gists{/gist_id}", "starred_url": "https://api.github.com/users/tclfs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tclfs/subscriptions", "organizations_url": "https://api.github.com/users/tclfs/orgs", "repos_url": "https://api.github.com/users/tclfs/repos", "events_url": "https://api.github.com/users/tclfs/events{/privacy}", "received_events_url": "https://api.github.com/users/tclfs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tclfs", "id": 14888862, "node_id": "MDQ6VXNlcjE0ODg4ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/14888862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tclfs", "html_url": "https://github.com/tclfs", "followers_url": "https://api.github.com/users/tclfs/followers", "following_url": "https://api.github.com/users/tclfs/following{/other_user}", "gists_url": "https://api.github.com/users/tclfs/gists{/gist_id}", "starred_url": "https://api.github.com/users/tclfs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tclfs/subscriptions", "organizations_url": "https://api.github.com/users/tclfs/orgs", "repos_url": "https://api.github.com/users/tclfs/repos", "events_url": "https://api.github.com/users/tclfs/events{/privacy}", "received_events_url": "https://api.github.com/users/tclfs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbba872dde00b7947e75c6055dba5c82f2f7978a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbba872dde00b7947e75c6055dba5c82f2f7978a", "html_url": "https://github.com/rust-lang/rust/commit/bbba872dde00b7947e75c6055dba5c82f2f7978a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c16e2ea4535e9a0f4e34e74be56c3e2d5d6a0b64", "filename": "src/doc/book/macros.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/708c5d09d7a355c506960581e16306c96eb7d019/src%2Fdoc%2Fbook%2Fmacros.md", "raw_url": "https://github.com/rust-lang/rust/raw/708c5d09d7a355c506960581e16306c96eb7d019/src%2Fdoc%2Fbook%2Fmacros.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fmacros.md?ref=708c5d09d7a355c506960581e16306c96eb7d019", "patch": "@@ -470,7 +470,7 @@ which syntactic form it matches.\n * `ty`: a type. Examples: `i32`; `Vec<(char, String)>`; `&T`.\n * `pat`: a pattern. Examples: `Some(t)`; `(17, 'a')`; `_`.\n * `stmt`: a single statement. Example: `let x = 3`.\n-* `block`: a brace-delimited sequence of statements and optional an expression. Example:\n+* `block`: a brace-delimited sequence of statements and optionally an expression. Example:\n   `{ log(error, \"hi\"); return 12; }`.\n * `item`: an [item][item]. Examples: `fn foo() { }`; `struct Bar;`.\n * `meta`: a \"meta item\", as found in attributes. Example: `cfg(target_os = \"windows\")`.\n@@ -509,7 +509,7 @@ A macro defined within the body of a single `fn`, or anywhere else not at\n module scope, is visible only within that item.\n \n If a module has the `macro_use` attribute, its macros are also visible in its\n-parent module after its `mod` item. If the parent also has `macro_use`\n+parent module after the child\u2019s `mod` item. If the parent also has `macro_use`\n then the macros will be visible in the grandparent after the parent\u2019s `mod`\n item, and so forth.\n "}]}