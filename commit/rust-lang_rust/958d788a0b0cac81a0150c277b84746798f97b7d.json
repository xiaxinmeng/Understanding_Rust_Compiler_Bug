{"sha": "958d788a0b0cac81a0150c277b84746798f97b7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OGQ3ODhhMGIwY2FjODFhMDE1MGMyNzdiODQ3NDY3OThmOTdiN2Q=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-25T10:58:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-25T10:58:43Z"}, "message": "Auto merge of #85344 - cbeuw:remap-across-cwd, r=michaelwoerister\n\nCorrectly handle remapping from path containing the current directory with trailing paths\n\nIf we have a `auxiliary/lib.rs`, and we generate the metadata with `--remap-path-prefix $PWD/auxiliary=xyz`, the path to `$PWD/auxiliary/lib.rs` won't be correctly remapped in the metadata. This is because internally, path to the working directory itself and relative paths to files under the working directory are remapped separately (hence neither are affected since neither has `$PWD/auxiliary` as prefix), but the concatenation between the working directory and the relative path is not remapped. This PR fixes that.", "tree": {"sha": "3e308052e8bb27b6ff0f89b49c6d44630c425908", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e308052e8bb27b6ff0f89b49c6d44630c425908"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/958d788a0b0cac81a0150c277b84746798f97b7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/958d788a0b0cac81a0150c277b84746798f97b7d", "html_url": "https://github.com/rust-lang/rust/commit/958d788a0b0cac81a0150c277b84746798f97b7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/958d788a0b0cac81a0150c277b84746798f97b7d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9863bf51a52b8e61bcad312f81b5193d53099f9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9863bf51a52b8e61bcad312f81b5193d53099f9f", "html_url": "https://github.com/rust-lang/rust/commit/9863bf51a52b8e61bcad312f81b5193d53099f9f"}, {"sha": "7ed9f2e6aa1e38ff43c0fe56bd9afc7f8aec28ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ed9f2e6aa1e38ff43c0fe56bd9afc7f8aec28ba", "html_url": "https://github.com/rust-lang/rust/commit/7ed9f2e6aa1e38ff43c0fe56bd9afc7f8aec28ba"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "1c243f8bd514835d7d60ab2d319120e270eb68dc", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/958d788a0b0cac81a0150c277b84746798f97b7d/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958d788a0b0cac81a0150c277b84746798f97b7d/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=958d788a0b0cac81a0150c277b84746798f97b7d", "patch": "@@ -509,11 +509,20 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n                                 let working_dir = &self.tcx.sess.opts.working_dir;\n                                 match working_dir {\n                                     RealFileName::LocalPath(absolute) => {\n-                                        // If working_dir has not been remapped, then we emit a\n-                                        // LocalPath variant as it's likely to be a valid path\n-                                        RealFileName::LocalPath(\n-                                            Path::new(absolute).join(path_to_file),\n-                                        )\n+                                        // Although neither working_dir or the file name were subject\n+                                        // to path remapping, the concatenation between the two may\n+                                        // be. Hence we need to do a remapping here.\n+                                        let joined = Path::new(absolute).join(path_to_file);\n+                                        let (joined, remapped) =\n+                                            source_map.path_mapping().map_prefix(joined);\n+                                        if remapped {\n+                                            RealFileName::Remapped {\n+                                                local_path: None,\n+                                                virtual_name: joined,\n+                                            }\n+                                        } else {\n+                                            RealFileName::LocalPath(joined)\n+                                        }\n                                     }\n                                     RealFileName::Remapped { local_path: _, virtual_name } => {\n                                         // If working_dir has been remapped, then we emit"}, {"sha": "86785c59509df6fafffdaea9457400f02748ac33", "filename": "src/test/run-make-fulldeps/remap-path-prefix/Makefile", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/958d788a0b0cac81a0150c277b84746798f97b7d/src%2Ftest%2Frun-make-fulldeps%2Fremap-path-prefix%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/958d788a0b0cac81a0150c277b84746798f97b7d/src%2Ftest%2Frun-make-fulldeps%2Fremap-path-prefix%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fremap-path-prefix%2FMakefile?ref=958d788a0b0cac81a0150c277b84746798f97b7d", "patch": "@@ -0,0 +1,9 @@\n+-include ../tools.mk\n+\n+# ignore-windows\n+\n+# Checks if remapping works if the remap-from string contains path to the working directory plus more\n+all:\n+\t$(RUSTC) --remap-path-prefix $$PWD/auxiliary=/the/aux --crate-type=lib --emit=metadata auxiliary/lib.rs\n+\tgrep \"/the/aux/lib.rs\" $(TMPDIR)/liblib.rmeta || exit 1\n+\t! grep \"$$PWD/auxiliary\" $(TMPDIR)/liblib.rmeta || exit 1"}, {"sha": "019c786a9023e40fc85577d5cbc78bbcf483464b", "filename": "src/test/run-make-fulldeps/remap-path-prefix/auxiliary/lib.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/958d788a0b0cac81a0150c277b84746798f97b7d/src%2Ftest%2Frun-make-fulldeps%2Fremap-path-prefix%2Fauxiliary%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958d788a0b0cac81a0150c277b84746798f97b7d/src%2Ftest%2Frun-make-fulldeps%2Fremap-path-prefix%2Fauxiliary%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fremap-path-prefix%2Fauxiliary%2Flib.rs?ref=958d788a0b0cac81a0150c277b84746798f97b7d", "patch": "@@ -0,0 +1,3 @@\n+pub fn lib() {\n+    panic!(\"calm\");\n+}"}]}