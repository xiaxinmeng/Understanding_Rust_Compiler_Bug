{"sha": "dd5c3c30b6379a92d69e964327cf97963a6d6143", "node_id": "C_kwDOAAsO6NoAKGRkNWMzYzMwYjYzNzlhOTJkNjllOTY0MzI3Y2Y5Nzk2M2E2ZDYxNDM", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-04-13T06:40:14Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-04-13T06:40:14Z"}, "message": "internal: Warn when loading sysroot fails to find the core library", "tree": {"sha": "9a280be2b752aeb1817d6ff59ce7941c671a8b95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a280be2b752aeb1817d6ff59ce7941c671a8b95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd5c3c30b6379a92d69e964327cf97963a6d6143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd5c3c30b6379a92d69e964327cf97963a6d6143", "html_url": "https://github.com/rust-lang/rust/commit/dd5c3c30b6379a92d69e964327cf97963a6d6143", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd5c3c30b6379a92d69e964327cf97963a6d6143/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7501d3b721560637e27f904d9fce79182c41bef7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7501d3b721560637e27f904d9fce79182c41bef7", "html_url": "https://github.com/rust-lang/rust/commit/7501d3b721560637e27f904d9fce79182c41bef7"}], "stats": {"total": 50, "additions": 32, "deletions": 18}, "files": [{"sha": "6c468f5ee66a63970014059b8351c4424463db30", "filename": "crates/project-model/src/sysroot.rs", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/dd5c3c30b6379a92d69e964327cf97963a6d6143/crates%2Fproject-model%2Fsrc%2Fsysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd5c3c30b6379a92d69e964327cf97963a6d6143/crates%2Fproject-model%2Fsrc%2Fsysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Fsysroot.rs?ref=dd5c3c30b6379a92d69e964327cf97963a6d6143", "patch": "@@ -74,6 +74,23 @@ impl Sysroot {\n     pub fn is_empty(&self) -> bool {\n         self.crates.is_empty()\n     }\n+\n+    pub fn loading_warning(&self) -> Option<String> {\n+        if self.by_name(\"core\").is_none() {\n+            let var_note = if env::var_os(\"RUST_SRC_PATH\").is_some() {\n+                \" (`RUST_SRC_PATH` might be incorrect, try unsetting it)\"\n+            } else {\n+                \" try running `rustup component add rust-src` to possible fix this\"\n+            };\n+            Some(format!(\n+                \"could not find libcore in loaded sysroot at `{}`{}\",\n+                self.src_root.as_path().display(),\n+                var_note,\n+            ))\n+        } else {\n+            None\n+        }\n+    }\n }\n \n // FIXME: Expose a builder api as loading the sysroot got way too modular and complicated.\n@@ -103,7 +120,7 @@ impl Sysroot {\n \n     pub fn with_sysroot_dir(sysroot_dir: AbsPathBuf) -> Result<Sysroot> {\n         let sysroot_src_dir = discover_sysroot_src_dir(&sysroot_dir).ok_or_else(|| {\n-            format_err!(\"can't load standard library from sysroot {}\", sysroot_dir.display())\n+            format_err!(\"can't load standard library from sysroot path {}\", sysroot_dir.display())\n         })?;\n         Ok(Sysroot::load(sysroot_dir, sysroot_src_dir))\n     }\n@@ -153,19 +170,6 @@ impl Sysroot {\n             }\n         }\n \n-        if sysroot.by_name(\"core\").is_none() {\n-            let var_note = if env::var_os(\"RUST_SRC_PATH\").is_some() {\n-                \" (`RUST_SRC_PATH` might be incorrect, try unsetting it)\"\n-            } else {\n-                \"\"\n-            };\n-            tracing::error!(\n-                \"could not find libcore in sysroot path `{}`{}\",\n-                sysroot.src_root.as_path().display(),\n-                var_note,\n-            );\n-        }\n-\n         sysroot\n     }\n "}, {"sha": "00826754c3f66f59643e8929f28f26026d6ffa07", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/dd5c3c30b6379a92d69e964327cf97963a6d6143/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd5c3c30b6379a92d69e964327cf97963a6d6143/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=dd5c3c30b6379a92d69e964327cf97963a6d6143", "patch": "@@ -138,10 +138,20 @@ impl GlobalState {\n             let (ProjectWorkspace::Cargo { sysroot, .. }\n             | ProjectWorkspace::Json { sysroot, .. }\n             | ProjectWorkspace::DetachedFiles { sysroot, .. }) = ws;\n-            if let Err(Some(e)) = sysroot {\n-                status.health = lsp_ext::Health::Warning;\n-                message.push_str(e);\n-                message.push_str(\"\\n\\n\");\n+            match sysroot {\n+                Err(None) => (),\n+                Err(Some(e)) => {\n+                    status.health = lsp_ext::Health::Warning;\n+                    message.push_str(e);\n+                    message.push_str(\"\\n\\n\");\n+                }\n+                Ok(s) => {\n+                    if let Some(e) = s.loading_warning() {\n+                        status.health = lsp_ext::Health::Warning;\n+                        message.push_str(&e);\n+                        message.push_str(\"\\n\\n\");\n+                    }\n+                }\n             }\n             if let ProjectWorkspace::Cargo { rustc: Err(Some(e)), .. } = ws {\n                 status.health = lsp_ext::Health::Warning;"}]}