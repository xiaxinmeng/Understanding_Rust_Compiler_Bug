{"sha": "c12eb1d7a2b38eb3099496419ab1685857ccb6c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxMmViMWQ3YTJiMzhlYjMwOTk0OTY0MTlhYjE2ODU4NTdjY2I2YzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-26T02:24:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-26T02:24:29Z"}, "message": "Auto merge of #34468 - frewsxcv:doc-links, r=GuillaumeGomez\n\nAdd hyperlinks to `std::fs` functions from `std::path`.\n\nNone", "tree": {"sha": "9cee848676ee4cee7609cae2ae9a37a055b7485e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cee848676ee4cee7609cae2ae9a37a055b7485e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c12eb1d7a2b38eb3099496419ab1685857ccb6c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c12eb1d7a2b38eb3099496419ab1685857ccb6c3", "html_url": "https://github.com/rust-lang/rust/commit/c12eb1d7a2b38eb3099496419ab1685857ccb6c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c12eb1d7a2b38eb3099496419ab1685857ccb6c3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cfd91d0ceeeb82dfd65c8124007eda325897ac1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cfd91d0ceeeb82dfd65c8124007eda325897ac1", "html_url": "https://github.com/rust-lang/rust/commit/2cfd91d0ceeeb82dfd65c8124007eda325897ac1"}, {"sha": "c55f0922aa6df5be8c4ac00757ec691f9fd629d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c55f0922aa6df5be8c4ac00757ec691f9fd629d7", "html_url": "https://github.com/rust-lang/rust/commit/c55f0922aa6df5be8c4ac00757ec691f9fd629d7"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "a19d51fac3552130d7752041fc8de04b6e06efcc", "filename": "src/libstd/path.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c12eb1d7a2b38eb3099496419ab1685857ccb6c3/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c12eb1d7a2b38eb3099496419ab1685857ccb6c3/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=c12eb1d7a2b38eb3099496419ab1685857ccb6c3", "patch": "@@ -1781,15 +1781,19 @@ impl Path {\n     /// This function will traverse symbolic links to query information about the\n     /// destination file.\n     ///\n-    /// This is an alias to `fs::metadata`.\n+    /// This is an alias to [`fs::metadata`].\n+    ///\n+    /// [`fs::metadata`]: ../fs/fn.metadata.html\n     #[stable(feature = \"path_ext\", since = \"1.5.0\")]\n     pub fn metadata(&self) -> io::Result<fs::Metadata> {\n         fs::metadata(self)\n     }\n \n     /// Query the metadata about a file without following symlinks.\n     ///\n-    /// This is an alias to `fs::symlink_metadata`.\n+    /// This is an alias to [`fs::symlink_metadata`].\n+    ///\n+    /// [`fs::symlink_metadata`]: ../fs/fn.symlink_metadata.html\n     #[stable(feature = \"path_ext\", since = \"1.5.0\")]\n     pub fn symlink_metadata(&self) -> io::Result<fs::Metadata> {\n         fs::symlink_metadata(self)\n@@ -1798,15 +1802,19 @@ impl Path {\n     /// Returns the canonical form of the path with all intermediate components\n     /// normalized and symbolic links resolved.\n     ///\n-    /// This is an alias to `fs::canonicalize`.\n+    /// This is an alias to [`fs::canonicalize`].\n+    ///\n+    /// [`fs::canonicalize`]: ../fs/fn.canonicalize.html\n     #[stable(feature = \"path_ext\", since = \"1.5.0\")]\n     pub fn canonicalize(&self) -> io::Result<PathBuf> {\n         fs::canonicalize(self)\n     }\n \n     /// Reads a symbolic link, returning the file that the link points to.\n     ///\n-    /// This is an alias to `fs::read_link`.\n+    /// This is an alias to [`fs::read_link`].\n+    ///\n+    /// [`fs::read_link`]: ../fs/fn.read_link.html\n     #[stable(feature = \"path_ext\", since = \"1.5.0\")]\n     pub fn read_link(&self) -> io::Result<PathBuf> {\n         fs::read_link(self)\n@@ -1817,7 +1825,9 @@ impl Path {\n     /// The iterator will yield instances of `io::Result<DirEntry>`. New errors may\n     /// be encountered after an iterator is initially constructed.\n     ///\n-    /// This is an alias to `fs::read_dir`.\n+    /// This is an alias to [`fs::read_dir`].\n+    ///\n+    /// [`fs::read_dir`]: ../fs/fn.read_dir.html\n     #[stable(feature = \"path_ext\", since = \"1.5.0\")]\n     pub fn read_dir(&self) -> io::Result<fs::ReadDir> {\n         fs::read_dir(self)"}]}