{"sha": "0630f8110f998f937608cb2962875a896a0298ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MzBmODExMGY5OThmOTM3NjA4Y2IyOTYyODc1YTg5NmEwMjk4YWU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-17T15:03:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-17T15:03:15Z"}, "message": "Drop dead code", "tree": {"sha": "169a82bc7f95b9f8aa051e9c5b13f92d6e9b143d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/169a82bc7f95b9f8aa051e9c5b13f92d6e9b143d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0630f8110f998f937608cb2962875a896a0298ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0630f8110f998f937608cb2962875a896a0298ae", "html_url": "https://github.com/rust-lang/rust/commit/0630f8110f998f937608cb2962875a896a0298ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0630f8110f998f937608cb2962875a896a0298ae/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aca022f1d49a6d945f3ef4f8c781d7337120b68d", "url": "https://api.github.com/repos/rust-lang/rust/commits/aca022f1d49a6d945f3ef4f8c781d7337120b68d", "html_url": "https://github.com/rust-lang/rust/commit/aca022f1d49a6d945f3ef4f8c781d7337120b68d"}], "stats": {"total": 11, "additions": 0, "deletions": 11}, "files": [{"sha": "1dbc4f3715ec9786864cd47dda56708b850e5217", "filename": "crates/ra_hir_def/src/nameres/path_resolution.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0630f8110f998f937608cb2962875a896a0298ae/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0630f8110f998f937608cb2962875a896a0298ae/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs?ref=0630f8110f998f937608cb2962875a896a0298ae", "patch": "@@ -122,17 +122,6 @@ impl CrateDefMap {\n                 log::debug!(\"resolving {:?} in module\", segment);\n                 self.resolve_name_in_module(db, original_module, &segment, prefer_module(idx))\n             }\n-            // PathKind::Self_ => {\n-            //     PerNs::types(ModuleId { krate: self.krate, local_id: original_module }.into())\n-            // }\n-            // PathKind::Super => {\n-            //     if let Some(p) = self.modules[original_module].parent {\n-            //         PerNs::types(ModuleId { krate: self.krate, local_id: p }.into())\n-            //     } else {\n-            //         log::debug!(\"super path in root module\");\n-            //         return ResolvePathResult::empty(ReachedFixedPoint::Yes);\n-            //     }\n-            // }\n             PathKind::Super(lvl) => {\n                 let m = successors(Some(original_module), |m| self.modules[*m].parent)\n                     .nth(lvl as usize);"}]}