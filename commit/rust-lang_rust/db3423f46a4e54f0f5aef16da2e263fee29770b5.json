{"sha": "db3423f46a4e54f0f5aef16da2e263fee29770b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMzQyM2Y0NmE0ZTU0ZjBmNWFlZjE2ZGEyZTI2M2ZlZTI5NzcwYjU=", "commit": {"author": {"name": "Simon Farnsworth", "email": "simon@farnz.org.uk", "date": "2020-04-02T09:03:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-02T09:03:15Z"}, "message": "Improve docs for option_option\n\nHint about using tri-state enums to replace legitimate uses of `Option<Option<_>>`", "tree": {"sha": "7ceeac5ec5ac9b8683aef6e73cf7c5784b4213e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ceeac5ec5ac9b8683aef6e73cf7c5784b4213e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db3423f46a4e54f0f5aef16da2e263fee29770b5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJehapTCRBK7hj4Ov3rIwAAdHIIADVboPbOJNOF44COGhfniEU4\npuGcnrkX7ebHHHuhtpFmh5NX88aHUXrxEBWr3tINqIqJAbVfkS6/IBDjoRTX06Hu\nCWToK722ZBE2Fg8CcOxO88xSOaKk9rN7zgPKLIeTISTDkq2Yj2JemzlShWaiJAo2\nrmgatgENFNN5wGjqq4x7vGEqKG4d3oxsq863kpBc4mRPPYBJSVgoehAj6l1hS6T3\ndgWPhZp5zkRxxSIoRd9E/rcN3GsyjWMrB9WTXFsa4Z7nS/+2d5Q0zn4rTHkB9aVX\nhsm6nqJQI59yUaW6yfslfJ3q1TktkSunzvFXADzMnngjzxSbsA/e7PK5aOCJJSM=\n=dq22\n-----END PGP SIGNATURE-----\n", "payload": "tree 7ceeac5ec5ac9b8683aef6e73cf7c5784b4213e9\nparent a840d594cc6eee7cc926e0ddbfb59550891c1060\nauthor Simon Farnsworth <simon@farnz.org.uk> 1585818195 +0100\ncommitter GitHub <noreply@github.com> 1585818195 +0100\n\nImprove docs for option_option\n\nHint about using tri-state enums to replace legitimate uses of `Option<Option<_>>`"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db3423f46a4e54f0f5aef16da2e263fee29770b5", "html_url": "https://github.com/rust-lang/rust/commit/db3423f46a4e54f0f5aef16da2e263fee29770b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db3423f46a4e54f0f5aef16da2e263fee29770b5/comments", "author": {"login": "farnz", "id": 2284255, "node_id": "MDQ6VXNlcjIyODQyNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2284255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/farnz", "html_url": "https://github.com/farnz", "followers_url": "https://api.github.com/users/farnz/followers", "following_url": "https://api.github.com/users/farnz/following{/other_user}", "gists_url": "https://api.github.com/users/farnz/gists{/gist_id}", "starred_url": "https://api.github.com/users/farnz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/farnz/subscriptions", "organizations_url": "https://api.github.com/users/farnz/orgs", "repos_url": "https://api.github.com/users/farnz/repos", "events_url": "https://api.github.com/users/farnz/events{/privacy}", "received_events_url": "https://api.github.com/users/farnz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a840d594cc6eee7cc926e0ddbfb59550891c1060", "url": "https://api.github.com/repos/rust-lang/rust/commits/a840d594cc6eee7cc926e0ddbfb59550891c1060", "html_url": "https://github.com/rust-lang/rust/commit/a840d594cc6eee7cc926e0ddbfb59550891c1060"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "6b63f2b1f0a22241dbd9f2025796a45fe04a28b4", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/db3423f46a4e54f0f5aef16da2e263fee29770b5/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db3423f46a4e54f0f5aef16da2e263fee29770b5/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=db3423f46a4e54f0f5aef16da2e263fee29770b5", "patch": "@@ -99,14 +99,32 @@ declare_clippy_lint! {\n     /// represents an optional optional value which is logically the same thing as an optional\n     /// value but has an unneeded extra level of wrapping.\n     ///\n+    /// If you have a case where `Some(Some(_))`, `Some(None)` and `None` are distinct cases,\n+    /// consider a custom `enum` instead, with clear names for each case.\n+    ///\n     /// **Known problems:** None.\n     ///\n     /// **Example**\n-    /// ```rust\n-    /// fn x() -> Option<Option<u32>> {\n+    /// ```rust,ignore\n+    /// fn get_node_data(n: Node) -> Option<Option<u32>> {\n     ///     None\n     /// }\n     /// ```\n+    ///\n+    /// Better:\n+    ///\n+    /// ```rust,ignore\n+    /// pub enum Contents {\n+    ///     Data(Vec<u8>), // Was Some(Some(Vec<u8>))\n+    ///     NotYetFetched, // Was Some(None)\n+    ///     None,          // Was None\n+    /// }\n+    ///\n+    /// fn get_node_data(n: Node) -> Contents {\n+    ///     Contents::None\n+    /// }\n+    /// ```\n+    ///\n     pub OPTION_OPTION,\n     pedantic,\n     \"usage of `Option<Option<T>>`\""}]}