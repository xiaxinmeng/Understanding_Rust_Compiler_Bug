{"sha": "f5aede9c822875345eb7eb468ecd9bc4568ed112", "node_id": "C_kwDOAAsO6NoAKGY1YWVkZTljODIyODc1MzQ1ZWI3ZWI0NjhlY2Q5YmM0NTY4ZWQxMTI", "commit": {"author": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-05-11T08:53:16Z"}, "committer": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-05-11T09:03:07Z"}, "message": "Improve code around SGX waitqueue\n\nFollowed up of d36e390d8176babedcf326581959958d447170cd\nSee https://github.com/rust-lang/rust/pull/109732#issuecomment-1543574908\nfor more details.\n\nCo-authored-by: Jethro Beekman <jethro@fortanix.com>", "tree": {"sha": "4b22a22638fd9d469e921c01a730f0dc6803b9fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b22a22638fd9d469e921c01a730f0dc6803b9fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5aede9c822875345eb7eb468ecd9bc4568ed112", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5aede9c822875345eb7eb468ecd9bc4568ed112", "html_url": "https://github.com/rust-lang/rust/commit/f5aede9c822875345eb7eb468ecd9bc4568ed112", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5aede9c822875345eb7eb468ecd9bc4568ed112/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e280df556dbbe4d25c3a7f29f6e7fee44c543e0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e280df556dbbe4d25c3a7f29f6e7fee44c543e0b", "html_url": "https://github.com/rust-lang/rust/commit/e280df556dbbe4d25c3a7f29f6e7fee44c543e0b"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "5e1d859ee99c3dff556172da35c9e7c62fb060d8", "filename": "library/std/src/sys/sgx/waitqueue/mod.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f5aede9c822875345eb7eb468ecd9bc4568ed112/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aede9c822875345eb7eb468ecd9bc4568ed112/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Fmod.rs?ref=f5aede9c822875345eb7eb468ecd9bc4568ed112", "patch": "@@ -202,12 +202,18 @@ impl WaitQueue {\n     pub fn notify_one<T>(\n         mut guard: SpinMutexGuard<'_, WaitVariable<T>>,\n     ) -> Result<WaitGuard<'_, T>, SpinMutexGuard<'_, WaitVariable<T>>> {\n+        // SAFETY: lifetime of the pop() return value is limited to the map\n+        // closure (The closure return value is 'static). The underlying\n+        // stack frame won't be freed until after the WaitGuard created below\n+        // is dropped.\n         unsafe {\n-            if let Some(entry) = guard.queue.inner.pop() {\n+            let tcs = guard.queue.inner.pop().map(|entry| -> Tcs {\n                 let mut entry_guard = entry.lock();\n-                let tcs = entry_guard.tcs;\n                 entry_guard.wake = true;\n-                drop(entry_guard);\n+                entry_guard.tcs\n+            });\n+\n+            if let Some(tcs) = tcs {\n                 Ok(WaitGuard { mutex_guard: Some(guard), notified_tcs: NotifiedTcs::Single(tcs) })\n             } else {\n                 Err(guard)\n@@ -223,13 +229,17 @@ impl WaitQueue {\n     pub fn notify_all<T>(\n         mut guard: SpinMutexGuard<'_, WaitVariable<T>>,\n     ) -> Result<WaitGuard<'_, T>, SpinMutexGuard<'_, WaitVariable<T>>> {\n+        // SAFETY: lifetime of the pop() return values are limited to the\n+        // while loop body. The underlying stack frames won't be freed until\n+        // after the WaitGuard created below is dropped.\n         unsafe {\n             let mut count = 0;\n             while let Some(entry) = guard.queue.inner.pop() {\n                 count += 1;\n                 let mut entry_guard = entry.lock();\n                 entry_guard.wake = true;\n             }\n+\n             if let Some(count) = NonZeroUsize::new(count) {\n                 Ok(WaitGuard { mutex_guard: Some(guard), notified_tcs: NotifiedTcs::All { count } })\n             } else {"}]}