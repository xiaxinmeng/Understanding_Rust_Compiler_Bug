{"sha": "62a9e16cb20b070dba25fed585a14f9e3a62ac3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYTllMTZjYjIwYjA3MGRiYTI1ZmVkNTg1YTE0ZjllM2E2MmFjM2I=", "commit": {"author": {"name": "Daniel Patterson", "email": "dbp@riseup.net", "date": "2012-08-14T01:13:41Z"}, "committer": {"name": "Daniel Patterson", "email": "dbp@riseup.net", "date": "2012-08-14T13:40:56Z"}, "message": "syntax: fixing pretty printing of brackets in match arms", "tree": {"sha": "7a50a702bcfcfc2ed9eb4e39af84ad7569508de0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a50a702bcfcfc2ed9eb4e39af84ad7569508de0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62a9e16cb20b070dba25fed585a14f9e3a62ac3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62a9e16cb20b070dba25fed585a14f9e3a62ac3b", "html_url": "https://github.com/rust-lang/rust/commit/62a9e16cb20b070dba25fed585a14f9e3a62ac3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62a9e16cb20b070dba25fed585a14f9e3a62ac3b/comments", "author": null, "committer": null, "parents": [{"sha": "8271b3f0c89f052612c5bb8262f399995121e061", "url": "https://api.github.com/repos/rust-lang/rust/commits/8271b3f0c89f052612c5bb8262f399995121e061", "html_url": "https://github.com/rust-lang/rust/commit/8271b3f0c89f052612c5bb8262f399995121e061"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "f4b6b74d1b5e4f67ac18ec20eac70fb45363e9f9", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/62a9e16cb20b070dba25fed585a14f9e3a62ac3b/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62a9e16cb20b070dba25fed585a14f9e3a62ac3b/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=62a9e16cb20b070dba25fed585a14f9e3a62ac3b", "patch": "@@ -838,6 +838,11 @@ fn print_block_unclosed(s: ps, blk: ast::blk) {\n                                  false);\n }\n \n+fn print_block_unclosed_indent(s: ps, blk: ast::blk, indented: uint) {\n+    print_possibly_embedded_block_(s, blk, block_normal, indented, ~[],\n+                                   false);\n+}\n+\n fn print_block_with_attrs(s: ps, blk: ast::blk, attrs: ~[ast::attribute]) {\n     print_possibly_embedded_block_(s, blk, block_normal, indent_unit, attrs,\n                                   true);\n@@ -1178,8 +1183,16 @@ fn print_expr(s: ps, &&expr: @ast::expr) {\n             assert arm.body.node.rules == ast::default_blk;\n             match arm.body.node.expr {\n               some(expr) => {\n-                end(s); // close the ibox for the pattern\n-                print_expr(s, expr);\n+                match expr.node {\n+                  ast::expr_block(blk) => {\n+                    // the block will close the pattern's ibox\n+                    print_block_unclosed_indent(s, blk, alt_indent_unit);\n+                  }\n+                  _ => {\n+                    end(s); // close the ibox for the pattern\n+                    print_expr(s, expr);\n+                  }\n+                }\n                 if !expr_is_simple_block(expr)\n                     && i < len - 1 {\n                     word(s.s, ~\",\");"}]}