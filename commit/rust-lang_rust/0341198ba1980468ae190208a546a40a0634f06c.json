{"sha": "0341198ba1980468ae190208a546a40a0634f06c", "node_id": "C_kwDOAAsO6NoAKDAzNDExOThiYTE5ODA0NjhhZTE5MDIwOGE1NDZhNDBhMDYzNGYwNmM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-02T19:06:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-02T19:06:58Z"}, "message": "Auto merge of #9574 - Alexendoo:unused-fixed, r=Jarcho\n\nRemove unused `.fixed` files, only run asm_syntax doctests on x86\n\nTwo small changes, removes some unused `.fixed` and makes `clippy_lints` doctests pass on non x86 arches\n\nchangelog: none", "tree": {"sha": "35edd6b231eb581e093af4ef5f4609c663c8d58b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35edd6b231eb581e093af4ef5f4609c663c8d58b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0341198ba1980468ae190208a546a40a0634f06c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0341198ba1980468ae190208a546a40a0634f06c", "html_url": "https://github.com/rust-lang/rust/commit/0341198ba1980468ae190208a546a40a0634f06c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0341198ba1980468ae190208a546a40a0634f06c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8ba19287dc4710fef7e63b0c75071ff6ea7d642", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8ba19287dc4710fef7e63b0c75071ff6ea7d642", "html_url": "https://github.com/rust-lang/rust/commit/f8ba19287dc4710fef7e63b0c75071ff6ea7d642"}, {"sha": "a834ac980066a294537ba0787a01e943a1b7a308", "url": "https://api.github.com/repos/rust-lang/rust/commits/a834ac980066a294537ba0787a01e943a1b7a308", "html_url": "https://github.com/rust-lang/rust/commit/a834ac980066a294537ba0787a01e943a1b7a308"}], "stats": {"total": 64, "additions": 4, "deletions": 60}, "files": [{"sha": "9717aa9e981fbf41f30c4864f3ee19cd8ff6747d", "filename": "clippy_lints/src/asm_syntax.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0341198ba1980468ae190208a546a40a0634f06c/clippy_lints%2Fsrc%2Fasm_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0341198ba1980468ae190208a546a40a0634f06c/clippy_lints%2Fsrc%2Fasm_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fasm_syntax.rs?ref=0341198ba1980468ae190208a546a40a0634f06c", "patch": "@@ -64,6 +64,7 @@ declare_clippy_lint! {\n     ///\n     /// ```rust,no_run\n     /// # #![feature(asm)]\n+    /// # #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n     /// # unsafe { let ptr = \"\".as_ptr();\n     /// # use std::arch::asm;\n     /// asm!(\"lea {}, [{}]\", lateout(reg) _, in(reg) ptr);\n@@ -72,6 +73,7 @@ declare_clippy_lint! {\n     /// Use instead:\n     /// ```rust,no_run\n     /// # #![feature(asm)]\n+    /// # #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n     /// # unsafe { let ptr = \"\".as_ptr();\n     /// # use std::arch::asm;\n     /// asm!(\"lea ({}), {}\", in(reg) ptr, lateout(reg) _, options(att_syntax));\n@@ -103,6 +105,7 @@ declare_clippy_lint! {\n     ///\n     /// ```rust,no_run\n     /// # #![feature(asm)]\n+    /// # #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n     /// # unsafe { let ptr = \"\".as_ptr();\n     /// # use std::arch::asm;\n     /// asm!(\"lea ({}), {}\", in(reg) ptr, lateout(reg) _, options(att_syntax));\n@@ -111,6 +114,7 @@ declare_clippy_lint! {\n     /// Use instead:\n     /// ```rust,no_run\n     /// # #![feature(asm)]\n+    /// # #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n     /// # unsafe { let ptr = \"\".as_ptr();\n     /// # use std::arch::asm;\n     /// asm!(\"lea {}, [{}]\", lateout(reg) _, in(reg) ptr);"}, {"sha": "a2393674fe6129dae1a74fe21562dceb014dafd3", "filename": "tests/ui/manual_assert.fixed", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/f8ba19287dc4710fef7e63b0c75071ff6ea7d642/tests%2Fui%2Fmanual_assert.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f8ba19287dc4710fef7e63b0c75071ff6ea7d642/tests%2Fui%2Fmanual_assert.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.fixed?ref=f8ba19287dc4710fef7e63b0c75071ff6ea7d642", "patch": "@@ -1,45 +0,0 @@\n-// revisions: edition2018 edition2021\n-// [edition2018] edition:2018\n-// [edition2021] edition:2021\n-// run-rustfix\n-\n-#![warn(clippy::manual_assert)]\n-#![allow(clippy::nonminimal_bool)]\n-\n-fn main() {\n-    let a = vec![1, 2, 3];\n-    let c = Some(2);\n-    if !a.is_empty()\n-        && a.len() == 3\n-        && c.is_some()\n-        && !a.is_empty()\n-        && a.len() == 3\n-        && !a.is_empty()\n-        && a.len() == 3\n-        && !a.is_empty()\n-        && a.len() == 3\n-    {\n-        panic!(\"qaqaq{:?}\", a);\n-    }\n-    assert!(a.is_empty(), \"qaqaq{:?}\", a);\n-    assert!(a.is_empty(), \"qwqwq\");\n-    if a.len() == 3 {\n-        println!(\"qwq\");\n-        println!(\"qwq\");\n-        println!(\"qwq\");\n-    }\n-    if let Some(b) = c {\n-        panic!(\"orz {}\", b);\n-    }\n-    if a.len() == 3 {\n-        panic!(\"qaqaq\");\n-    } else {\n-        println!(\"qwq\");\n-    }\n-    let b = vec![1, 2, 3];\n-    assert!(!b.is_empty(), \"panic1\");\n-    assert!(!(b.is_empty() && a.is_empty()), \"panic2\");\n-    assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");\n-    assert!(!(b.is_empty() || a.is_empty()), \"panic4\");\n-    assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");\n-}"}, {"sha": "29691e81666f7797bc99428b961545f9249331d7", "filename": "tests/ui/option_take_on_temporary.fixed", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f8ba19287dc4710fef7e63b0c75071ff6ea7d642/tests%2Fui%2Foption_take_on_temporary.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f8ba19287dc4710fef7e63b0c75071ff6ea7d642/tests%2Fui%2Foption_take_on_temporary.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_take_on_temporary.fixed?ref=f8ba19287dc4710fef7e63b0c75071ff6ea7d642", "patch": "@@ -1,15 +0,0 @@\n-// run-rustfix\n-\n-fn main() {\n-    println!(\"Testing non erroneous option_take_on_temporary\");\n-    let mut option = Some(1);\n-    let _ = Box::new(move || option.take().unwrap());\n-\n-    println!(\"Testing non erroneous option_take_on_temporary\");\n-    let x = Some(3);\n-    x.as_ref();\n-\n-    println!(\"Testing erroneous option_take_on_temporary\");\n-    let x = Some(3);\n-    x.as_ref();\n-}"}]}