{"sha": "a55ad203888b5e43cf6cbf015d562d7bd1abe0bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NWFkMjAzODg4YjVlNDNjZjZjYmYwMTVkNTYyZDdiZDFhYmUwYmI=", "commit": {"author": {"name": "Fedor Sakharov", "email": "fedor.sakharov@gmail.com", "date": "2020-05-14T06:56:20Z"}, "committer": {"name": "Fedor Sakharov", "email": "fedor.sakharov@gmail.com", "date": "2020-05-14T06:56:20Z"}, "message": "Use generic_defaults and display_source_code", "tree": {"sha": "eda6928064d68ca69053de327ee74148ce8a64c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eda6928064d68ca69053de327ee74148ce8a64c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a55ad203888b5e43cf6cbf015d562d7bd1abe0bb", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEOrvX5g4uaJk/ZAnkk9Q25ma/D+4FAl6865QACgkQk9Q25ma/\nD+7EtQv+JDxqwufAozo18LkfGwjqLfRlhqbrwvv2n9xhdHLKrKJKz87VpijjtgKP\nDJIMcpF/dM6bi5JJjYHflJG8oIaBOtISIHsFblTUQ1Btz45Rbb99KlM1MKy50YVp\n+pIXFqps7QpS9SElJrVQPskGPQV8V+qUVXgrJLwZ8Y1fIIcLpqBPzkUyXGZ18uRf\nBQcXs1UOBEE9KYFZiP3kTW3RG5z8v/SGT43I3LHJqtQBKkdOxmDKPIpgSXEnbKJl\n2SRBHJE41rHg5Z592Urjf+eqZHVmK9ShfNZndXQV07WIPzJYTiGi+9572YGwamwI\nQyonOS3NXxXP8zA11s98Ty/DKxcvJIBPA1edXt2sFtmMApwL7p7Zh9jUla1nd4vz\nNUgaFUdKeviMtJY6U8p6Hp31IG62upSQ9TRHk342au9Kaf0qyiT0nwinAkW0U3kf\nLQTcm4zFKIQ9EJiC3/+Dza+JNu3ZK9WSHedKHozrDiXk5PvCIRJzISkSW2srpRPD\n7cWVlosB\n=jYSz\n-----END PGP SIGNATURE-----", "payload": "tree eda6928064d68ca69053de327ee74148ce8a64c0\nparent 00f3b6c59ae3df9a7bfb1cd8b694d5f9b6a78be4\nauthor Fedor Sakharov <fedor.sakharov@gmail.com> 1589439380 +0300\ncommitter Fedor Sakharov <fedor.sakharov@gmail.com> 1589439380 +0300\n\nUse generic_defaults and display_source_code\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a55ad203888b5e43cf6cbf015d562d7bd1abe0bb", "html_url": "https://github.com/rust-lang/rust/commit/a55ad203888b5e43cf6cbf015d562d7bd1abe0bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a55ad203888b5e43cf6cbf015d562d7bd1abe0bb/comments", "author": {"login": "montekki", "id": 56672, "node_id": "MDQ6VXNlcjU2Njcy", "avatar_url": "https://avatars.githubusercontent.com/u/56672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/montekki", "html_url": "https://github.com/montekki", "followers_url": "https://api.github.com/users/montekki/followers", "following_url": "https://api.github.com/users/montekki/following{/other_user}", "gists_url": "https://api.github.com/users/montekki/gists{/gist_id}", "starred_url": "https://api.github.com/users/montekki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/montekki/subscriptions", "organizations_url": "https://api.github.com/users/montekki/orgs", "repos_url": "https://api.github.com/users/montekki/repos", "events_url": "https://api.github.com/users/montekki/events{/privacy}", "received_events_url": "https://api.github.com/users/montekki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "montekki", "id": 56672, "node_id": "MDQ6VXNlcjU2Njcy", "avatar_url": "https://avatars.githubusercontent.com/u/56672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/montekki", "html_url": "https://github.com/montekki", "followers_url": "https://api.github.com/users/montekki/followers", "following_url": "https://api.github.com/users/montekki/following{/other_user}", "gists_url": "https://api.github.com/users/montekki/gists{/gist_id}", "starred_url": "https://api.github.com/users/montekki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/montekki/subscriptions", "organizations_url": "https://api.github.com/users/montekki/orgs", "repos_url": "https://api.github.com/users/montekki/repos", "events_url": "https://api.github.com/users/montekki/events{/privacy}", "received_events_url": "https://api.github.com/users/montekki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00f3b6c59ae3df9a7bfb1cd8b694d5f9b6a78be4", "url": "https://api.github.com/repos/rust-lang/rust/commits/00f3b6c59ae3df9a7bfb1cd8b694d5f9b6a78be4", "html_url": "https://github.com/rust-lang/rust/commit/00f3b6c59ae3df9a7bfb1cd8b694d5f9b6a78be4"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "3a34978b136684143b30589a6edf0d41ef7a5221", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a55ad203888b5e43cf6cbf015d562d7bd1abe0bb/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/a55ad203888b5e43cf6cbf015d562d7bd1abe0bb/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=a55ad203888b5e43cf6cbf015d562d7bd1abe0bb", "patch": "@@ -936,7 +936,6 @@ dependencies = [\n  \"ra_db\",\n  \"ra_fmt\",\n  \"ra_hir\",\n- \"ra_hir_def\",\n  \"ra_ide_db\",\n  \"ra_prof\",\n  \"ra_syntax\","}, {"sha": "3bcf58ba4b0962a2219d22b3d5d04168a9666bf2", "filename": "crates/ra_assists/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a55ad203888b5e43cf6cbf015d562d7bd1abe0bb/crates%2Fra_assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a55ad203888b5e43cf6cbf015d562d7bd1abe0bb/crates%2Fra_assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2FCargo.toml?ref=a55ad203888b5e43cf6cbf015d562d7bd1abe0bb", "patch": "@@ -21,5 +21,4 @@ ra_prof = { path = \"../ra_prof\" }\n ra_db = { path = \"../ra_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }\n hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n-hir_def = { path = \"../ra_hir_def\", package = \"ra_hir_def\" }\n test_utils = { path = \"../test_utils\" }"}, {"sha": "4001ca73c3e895444cc98a418ddffd578d83be2d", "filename": "crates/ra_assists/src/ast_transform.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a55ad203888b5e43cf6cbf015d562d7bd1abe0bb/crates%2Fra_assists%2Fsrc%2Fast_transform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55ad203888b5e43cf6cbf015d562d7bd1abe0bb/crates%2Fra_assists%2Fsrc%2Fast_transform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fast_transform.rs?ref=a55ad203888b5e43cf6cbf015d562d7bd1abe0bb", "patch": "@@ -1,8 +1,7 @@\n //! `AstTransformer`s are functions that replace nodes in an AST and can be easily combined.\n use rustc_hash::FxHashMap;\n \n-use hir::{PathResolution, SemanticsScope};\n-use hir_def::type_ref::TypeRef;\n+use hir::{HirDisplay, PathResolution, SemanticsScope};\n use ra_ide_db::RootDatabase;\n use ra_syntax::{\n     algo::SyntaxRewriter,\n@@ -61,14 +60,18 @@ impl<'a> SubstituteTypeParams<'a> {\n             .zip(substs.into_iter().map(Some).chain(std::iter::repeat(None)))\n             .filter_map(|(k, v)| match v {\n                 Some(v) => Some((k, v)),\n-                None => match k.default(source_scope.db)? {\n-                    TypeRef::Path(path) => Some((\n+                None => {\n+                    let default = k.default(source_scope.db)?;\n+                    Some((\n                         k,\n-                        ast::make::type_arg(&format!(\"{}\", path.mod_path().as_ident()?))\n-                            .type_ref()?,\n-                    )),\n-                    _ => None,\n-                },\n+                        ast::make::type_arg(\n+                            &default\n+                                .display_source_code(source_scope.db, source_scope.module()?.into())\n+                                .ok()?,\n+                        )\n+                        .type_ref()?,\n+                    ))\n+                }\n             })\n             .collect();\n         return SubstituteTypeParams {"}, {"sha": "3936f5aaa05eb941a1c2c2ad2bc1b0561380d630", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a55ad203888b5e43cf6cbf015d562d7bd1abe0bb/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55ad203888b5e43cf6cbf015d562d7bd1abe0bb/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=a55ad203888b5e43cf6cbf015d562d7bd1abe0bb", "patch": "@@ -990,9 +990,10 @@ impl TypeParam {\n         }\n     }\n \n-    pub fn default(self, db: &dyn HirDatabase) -> Option<TypeRef> {\n-        let params = db.generic_params(self.id.parent);\n-        params.types[self.id.local_id].default.clone()\n+    pub fn default(self, db: &dyn HirDatabase) -> Option<Ty> {\n+        let params = db.generic_defaults(self.id.parent);\n+        let local_idx: u32 = self.id.local_id.into_raw().into();\n+        params.get(local_idx as usize).map(|d| d.clone())\n     }\n }\n "}]}