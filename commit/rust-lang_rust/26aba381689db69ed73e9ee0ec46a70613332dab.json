{"sha": "26aba381689db69ed73e9ee0ec46a70613332dab", "node_id": "C_kwDOAAsO6NoAKDI2YWJhMzgxNjg5ZGI2OWVkNzNlOWVlMGVjNDZhNzA2MTMzMzJkYWI", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-12-04T13:08:43Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-12-04T13:08:43Z"}, "message": "Bump chalk", "tree": {"sha": "0232e334dbb31c04fdb859a9a0b0b16bf7f74643", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0232e334dbb31c04fdb859a9a0b0b16bf7f74643"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26aba381689db69ed73e9ee0ec46a70613332dab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26aba381689db69ed73e9ee0ec46a70613332dab", "html_url": "https://github.com/rust-lang/rust/commit/26aba381689db69ed73e9ee0ec46a70613332dab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26aba381689db69ed73e9ee0ec46a70613332dab/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89a1256f9ac64deb3bb72f9c3062330dcd9920fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/89a1256f9ac64deb3bb72f9c3062330dcd9920fc", "html_url": "https://github.com/rust-lang/rust/commit/89a1256f9ac64deb3bb72f9c3062330dcd9920fc"}], "stats": {"total": 58, "additions": 34, "deletions": 24}, "files": [{"sha": "98f9219ec20fd2470dd393250af024f4b367e3bf", "filename": "Cargo.lock", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/26aba381689db69ed73e9ee0ec46a70613332dab/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/26aba381689db69ed73e9ee0ec46a70613332dab/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=26aba381689db69ed73e9ee0ec46a70613332dab", "patch": "@@ -171,9 +171,9 @@ checksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n \n [[package]]\n name = \"chalk-derive\"\n-version = \"0.73.0\"\n+version = \"0.74.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"3f182e4c40ae0a36afff9904e46389df47d2f943bae70eab3d779c87aa5dd584\"\n+checksum = \"09d8c85134e234bead3fb78e4abd3ca2bdc228e5897b7f0fcd5265c4f4294375\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -183,9 +183,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-ir\"\n-version = \"0.73.0\"\n+version = \"0.74.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"5f998dcab9f6975ce5fe69c28acba246f75f82c1a8faa4455facac82ee61bc14\"\n+checksum = \"b08046b4a060d3fbf9df521a3aca331ff14d0a50c184b09a7b80edca1bf2aa79\"\n dependencies = [\n  \"bitflags\",\n  \"chalk-derive\",\n@@ -194,9 +194,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-recursive\"\n-version = \"0.73.0\"\n+version = \"0.74.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c56b019577ff31fc12748cbe2ddcec47d2b9e647f98cce146bfeb69ad2263fb4\"\n+checksum = \"a8d0190d6f86bdd3395fb4482879cda3e40a14a4c32241805301fb079fd7b62c\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\",\n@@ -207,9 +207,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-solve\"\n-version = \"0.73.0\"\n+version = \"0.74.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"296c92cae565a4000e3eea00ece09e14ce24e6bdc14a5807d140a4cc7652b8d4\"\n+checksum = \"2bb39cbb1887edb2e12513ad811bea9a70faf4f98f4de794c5899c2c2e43e1b4\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\","}, {"sha": "4ec8749f87f670d3862981755b5ef6e3755b47cd", "filename": "crates/hir_ty/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/26aba381689db69ed73e9ee0ec46a70613332dab/crates%2Fhir_ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/26aba381689db69ed73e9ee0ec46a70613332dab/crates%2Fhir_ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2FCargo.toml?ref=26aba381689db69ed73e9ee0ec46a70613332dab", "patch": "@@ -18,9 +18,9 @@ ena = \"0.14.0\"\n tracing = \"0.1\"\n rustc-hash = \"1.1.0\"\n scoped-tls = \"1\"\n-chalk-solve = { version = \"0.73\", default-features = false }\n-chalk-ir = \"0.73\"\n-chalk-recursive = { version = \"0.73\", default-features = false }\n+chalk-solve = { version = \"0.74\", default-features = false }\n+chalk-ir = \"0.74\"\n+chalk-recursive = { version = \"0.74\", default-features = false }\n la-arena = { version = \"0.3.0\", path = \"../../lib/arena\" }\n once_cell = { version = \"1.5.0\" }\n "}, {"sha": "88f9d6a31129b4cf85953ca6455c5ae7c3924e2a", "filename": "crates/hir_ty/src/infer/unify.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/26aba381689db69ed73e9ee0ec46a70613332dab/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26aba381689db69ed73e9ee0ec46a70613332dab/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs?ref=26aba381689db69ed73e9ee0ec46a70613332dab", "patch": "@@ -3,8 +3,8 @@\n use std::{fmt, mem, sync::Arc};\n \n use chalk_ir::{\n-    cast::Cast, fold::Fold, interner::HasInterner, zip::Zip, FloatTy, IntTy, TyVariableKind,\n-    UniverseIndex,\n+    cast::Cast, fold::Fold, interner::HasInterner, zip::Zip, FloatTy, IntTy, NoSolution,\n+    TyVariableKind, UniverseIndex,\n };\n use chalk_solve::infer::ParameterEnaVariableExt;\n use ena::unify::UnifyKey;\n@@ -412,7 +412,9 @@ impl<'a> InferenceTable<'a> {\n             highest_known_var: InferenceVar,\n         }\n         impl<'a, 'b> Folder<'static, Interner> for VarFudger<'a, 'b> {\n-            fn as_dyn(&mut self) -> &mut dyn Folder<'static, Interner> {\n+            type Error = NoSolution;\n+\n+            fn as_dyn(&mut self) -> &mut dyn Folder<'static, Interner, Error = Self::Error> {\n                 self\n             }\n \n@@ -538,7 +540,7 @@ mod resolve {\n     use chalk_ir::{\n         cast::Cast,\n         fold::{Fold, Folder},\n-        Fallible,\n+        Fallible, NoSolution,\n     };\n     use hir_def::type_ref::ConstScalar;\n \n@@ -551,7 +553,9 @@ mod resolve {\n     where\n         F: Fn(InferenceVar, VariableKind, GenericArg, DebruijnIndex) -> GenericArg + 'i,\n     {\n-        fn as_dyn(&mut self) -> &mut dyn Folder<'i, Interner> {\n+        type Error = NoSolution;\n+\n+        fn as_dyn(&mut self) -> &mut dyn Folder<'i, Interner, Error = Self::Error> {\n             self\n         }\n "}, {"sha": "320b170ee40f7cca139e2b4a084c01e443a06aa9", "filename": "crates/hir_ty/src/lib.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/26aba381689db69ed73e9ee0ec46a70613332dab/crates%2Fhir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26aba381689db69ed73e9ee0ec46a70613332dab/crates%2Fhir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flib.rs?ref=26aba381689db69ed73e9ee0ec46a70613332dab", "patch": "@@ -35,7 +35,7 @@ use std::sync::Arc;\n use chalk_ir::{\n     fold::{Fold, Shift},\n     interner::HasInterner,\n-    UintTy,\n+    NoSolution, UintTy,\n };\n use hir_def::{\n     expr::ExprId,\n@@ -228,11 +228,11 @@ impl CallableSig {\n impl Fold<Interner> for CallableSig {\n     type Result = CallableSig;\n \n-    fn fold_with<'i>(\n+    fn fold_with<'i, E>(\n         self,\n-        folder: &mut dyn chalk_ir::fold::Folder<'i, Interner>,\n+        folder: &mut dyn chalk_ir::fold::Folder<'i, Interner, Error = E>,\n         outer_binder: DebruijnIndex,\n-    ) -> chalk_ir::Fallible<Self::Result>\n+    ) -> Result<Self::Result, E>\n     where\n         Interner: 'i,\n     {\n@@ -282,7 +282,9 @@ pub(crate) fn fold_free_vars<T: HasInterner<Interner = Interner> + Fold<Interner\n     use chalk_ir::{fold::Folder, Fallible};\n     struct FreeVarFolder<F>(F);\n     impl<'i, F: FnMut(BoundVar, DebruijnIndex) -> Ty + 'i> Folder<'i, Interner> for FreeVarFolder<F> {\n-        fn as_dyn(&mut self) -> &mut dyn Folder<'i, Interner> {\n+        type Error = NoSolution;\n+\n+        fn as_dyn(&mut self) -> &mut dyn Folder<'i, Interner, Error = Self::Error> {\n             self\n         }\n \n@@ -312,7 +314,9 @@ pub(crate) fn fold_tys<T: HasInterner<Interner = Interner> + Fold<Interner>>(\n     };\n     struct TyFolder<F>(F);\n     impl<'i, F: FnMut(Ty, DebruijnIndex) -> Ty + 'i> Folder<'i, Interner> for TyFolder<F> {\n-        fn as_dyn(&mut self) -> &mut dyn Folder<'i, Interner> {\n+        type Error = NoSolution;\n+\n+        fn as_dyn(&mut self) -> &mut dyn Folder<'i, Interner, Error = Self::Error> {\n             self\n         }\n \n@@ -338,13 +342,15 @@ where\n {\n     use chalk_ir::{\n         fold::{Folder, SuperFold},\n-        Fallible, NoSolution,\n+        Fallible,\n     };\n     struct ErrorReplacer {\n         vars: usize,\n     }\n     impl<'i> Folder<'i, Interner> for ErrorReplacer {\n-        fn as_dyn(&mut self) -> &mut dyn Folder<'i, Interner> {\n+        type Error = NoSolution;\n+\n+        fn as_dyn(&mut self) -> &mut dyn Folder<'i, Interner, Error = Self::Error> {\n             self\n         }\n "}]}