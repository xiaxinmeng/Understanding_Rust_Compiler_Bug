{"sha": "8aeefbbfdd1c25b63bf0c7aa4b7bf56047d4a65a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhZWVmYmJmZGQxYzI1YjYzYmYwYzdhYTRiN2JmNTYwNDdkNGE2NWE=", "commit": {"author": {"name": "dan@daramos.com", "email": "dan@daramos.com", "date": "2015-01-01T06:22:43Z"}, "committer": {"name": "dan@daramos.com", "email": "dan@daramos.com", "date": "2015-01-01T06:22:43Z"}, "message": "Reimplement a minor optimization in String::from_utf8_lossy that avoids having to loop the slice from the begining.", "tree": {"sha": "343fce9462d2d11b804d1efa593afc0516a8c72a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/343fce9462d2d11b804d1efa593afc0516a8c72a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8aeefbbfdd1c25b63bf0c7aa4b7bf56047d4a65a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8aeefbbfdd1c25b63bf0c7aa4b7bf56047d4a65a", "html_url": "https://github.com/rust-lang/rust/commit/8aeefbbfdd1c25b63bf0c7aa4b7bf56047d4a65a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8aeefbbfdd1c25b63bf0c7aa4b7bf56047d4a65a/comments", "author": {"login": "daramos", "id": 1821444, "node_id": "MDQ6VXNlcjE4MjE0NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1821444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daramos", "html_url": "https://github.com/daramos", "followers_url": "https://api.github.com/users/daramos/followers", "following_url": "https://api.github.com/users/daramos/following{/other_user}", "gists_url": "https://api.github.com/users/daramos/gists{/gist_id}", "starred_url": "https://api.github.com/users/daramos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daramos/subscriptions", "organizations_url": "https://api.github.com/users/daramos/orgs", "repos_url": "https://api.github.com/users/daramos/repos", "events_url": "https://api.github.com/users/daramos/events{/privacy}", "received_events_url": "https://api.github.com/users/daramos/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daramos", "id": 1821444, "node_id": "MDQ6VXNlcjE4MjE0NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1821444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daramos", "html_url": "https://github.com/daramos", "followers_url": "https://api.github.com/users/daramos/followers", "following_url": "https://api.github.com/users/daramos/following{/other_user}", "gists_url": "https://api.github.com/users/daramos/gists{/gist_id}", "starred_url": "https://api.github.com/users/daramos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daramos/subscriptions", "organizations_url": "https://api.github.com/users/daramos/orgs", "repos_url": "https://api.github.com/users/daramos/repos", "events_url": "https://api.github.com/users/daramos/events{/privacy}", "received_events_url": "https://api.github.com/users/daramos/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d4f4876d65bddf101784230c0347adcb01e5c21", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d4f4876d65bddf101784230c0347adcb01e5c21", "html_url": "https://github.com/rust-lang/rust/commit/7d4f4876d65bddf101784230c0347adcb01e5c21"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "e3f0860d613028359e31914fe04e0bc276508e5d", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8aeefbbfdd1c25b63bf0c7aa4b7bf56047d4a65a/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aeefbbfdd1c25b63bf0c7aa4b7bf56047d4a65a/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=8aeefbbfdd1c25b63bf0c7aa4b7bf56047d4a65a", "patch": "@@ -141,14 +141,18 @@ impl String {\n     /// ```\n     #[stable]\n     pub fn from_utf8_lossy<'a>(v: &'a [u8]) -> CowString<'a> {\n+        let mut i = 0;\n         match str::from_utf8(v) {\n             Ok(s) => return Cow::Borrowed(s),\n-            Err(..) => {}\n+            Err(e) => {\n+                if let Utf8Error::InvalidByte(firstbad) = e {\n+                    i = firstbad;\n+                }\n+            }\n         }\n \n         static TAG_CONT_U8: u8 = 128u8;\n         static REPLACEMENT: &'static [u8] = b\"\\xEF\\xBF\\xBD\"; // U+FFFD in UTF-8\n-        let mut i = 0;\n         let total = v.len();\n         fn unsafe_get(xs: &[u8], i: uint) -> u8 {\n             unsafe { *xs.get_unchecked(i) }\n@@ -172,7 +176,7 @@ impl String {\n         // subseqidx is the index of the first byte of the subsequence we're looking at.\n         // It's used to copy a bunch of contiguous good codepoints at once instead of copying\n         // them one by one.\n-        let mut subseqidx = 0;\n+        let mut subseqidx = i;\n \n         while i < total {\n             let i_ = i;"}]}