{"sha": "87f4c153110743844e4b3a4bb9dcde31a5ef3eb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZjRjMTUzMTEwNzQzODQ0ZTRiM2E0YmI5ZGNkZTMxYTVlZjNlYjQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-13T23:06:21Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-13T23:07:12Z"}, "message": "rustc: Make functional record and struct update use \"..\" instead of \"with\".\n\n\"with\" is still accepted for backwards compatibility.", "tree": {"sha": "527389e5547b3e42a27dcf209d6ac6cf3d8ff6fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/527389e5547b3e42a27dcf209d6ac6cf3d8ff6fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87f4c153110743844e4b3a4bb9dcde31a5ef3eb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87f4c153110743844e4b3a4bb9dcde31a5ef3eb4", "html_url": "https://github.com/rust-lang/rust/commit/87f4c153110743844e4b3a4bb9dcde31a5ef3eb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87f4c153110743844e4b3a4bb9dcde31a5ef3eb4/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7ed9908d6023a278b2a53711abea50d186b71bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ed9908d6023a278b2a53711abea50d186b71bc", "html_url": "https://github.com/rust-lang/rust/commit/c7ed9908d6023a278b2a53711abea50d186b71bc"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "6ea5596fa2cd1469ba3e08f50d0bd5ede913f1ac", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/87f4c153110743844e4b3a4bb9dcde31a5ef3eb4/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87f4c153110743844e4b3a4bb9dcde31a5ef3eb4/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=87f4c153110743844e4b3a4bb9dcde31a5ef3eb4", "patch": "@@ -928,15 +928,16 @@ class parser {\n                             !self.is_keyword(~\"with\") {\n                         self.expect(token::COMMA);\n                         if self.token == token::RBRACE ||\n-                                self.is_keyword(~\"with\") {\n+                                self.is_keyword(~\"with\") ||\n+                                self.token == token::DOTDOT {\n                             // Accept an optional trailing comma.\n                             break;\n                         }\n                         vec::push(fields, self.parse_field(token::COLON));\n                     }\n \n                     let base;\n-                    if self.eat_keyword(~\"with\") {\n+                    if self.eat_keyword(~\"with\") || self.eat(token::DOTDOT) {\n                         base = some(self.parse_expr());\n                     } else {\n                         base = none;\n@@ -1548,6 +1549,16 @@ class parser {\n         let mut fields = ~[self.parse_field(token::COLON)];\n         let mut base = none;\n         while self.token != token::RBRACE {\n+            if self.token == token::COMMA\n+                && self.look_ahead(1) == token::DOTDOT {\n+                self.bump();\n+                self.bump();\n+                base = some(self.parse_expr()); break;\n+            }\n+\n+            // XXX: Remove \"with\" after all code is converted over and there's\n+            // a snapshot.\n+\n             // optional comma before \"with\"\n             if self.token == token::COMMA\n                 && self.token_is_keyword(~\"with\","}, {"sha": "15b0c66d6c821c7d56239184c10459c939e3e380", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/87f4c153110743844e4b3a4bb9dcde31a5ef3eb4/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87f4c153110743844e4b3a4bb9dcde31a5ef3eb4/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=87f4c153110743844e4b3a4bb9dcde31a5ef3eb4", "patch": "@@ -1039,7 +1039,9 @@ fn print_expr(s: ps, &&expr: @ast::expr) {\n           some(expr) => {\n             if vec::len(fields) > 0u { space(s.s); }\n             ibox(s, indent_unit);\n-            word_space(s, ~\"with\");\n+            word(s.s, ~\",\");\n+            space(s.s);\n+            word(s.s, ~\"..\");\n             print_expr(s, expr);\n             end(s);\n           }\n@@ -1055,7 +1057,9 @@ fn print_expr(s: ps, &&expr: @ast::expr) {\n             some(expr) => {\n                 if vec::len(fields) > 0u { space(s.s); }\n                 ibox(s, indent_unit);\n-                word_space(s, ~\"with\");\n+                word(s.s, ~\",\");\n+                space(s.s);\n+                word(s.s, ~\"..\");\n                 print_expr(s, expr);\n                 end(s);\n             }"}, {"sha": "c6e885a2911d0c0cd762953f5cefa7ced02264be", "filename": "src/test/run-pass/functional-struct-update.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/87f4c153110743844e4b3a4bb9dcde31a5ef3eb4/src%2Ftest%2Frun-pass%2Ffunctional-struct-update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87f4c153110743844e4b3a4bb9dcde31a5ef3eb4/src%2Ftest%2Frun-pass%2Ffunctional-struct-update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffunctional-struct-update.rs?ref=87f4c153110743844e4b3a4bb9dcde31a5ef3eb4", "patch": "@@ -5,8 +5,7 @@ struct Foo {\n \n fn main() {\n     let a = Foo { x: 1, y: 2 };\n-    let b = Foo { x: 3 with a };\n-    let c = Foo { x: 4, with a };\n-    io::println(fmt!(\"%? %?\", b, c));\n+    let c = Foo { x: 4, .. a };\n+    io::println(fmt!(\"%?\", c));\n }\n "}]}