{"sha": "7bbb039fbdd124cb6549eb67bbe7316f03ff40e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiYmIwMzlmYmRkMTI0Y2I2NTQ5ZWI2N2JiZTczMTZmMDNmZjQwZTg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-09-11T09:59:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-11T09:59:04Z"}, "message": "Merge #1797\n\n1797: Use VSCode fs API's in extension r=matklad a=LDSpits\n\nThis will close #1670.\r\n\r\nI've replaced the `CargoWatcher`s `Cargo.toml` check with a version that uses the `fs` API of vscode.\r\n\r\nWhile making this I've identified an issue with the detection of the `cargo.toml`, we can only load projects where the cargo.toml is in the root of the workspace. but that's a separate issue \ud83d\ude04 \n\nCo-authored-by: Lucas Spits <spits.lucas@gmail.com>", "tree": {"sha": "1826ee317c28a76b78f4020f9379c556339af803", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1826ee317c28a76b78f4020f9379c556339af803"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bbb039fbdd124cb6549eb67bbe7316f03ff40e8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdeMVoCRBK7hj4Ov3rIwAAdHIIAKjE1aruPUcCkjz4XYWC0K/3\nvnbdNBNkkXHY+VBSKw5OAi5ozACDTmQxlHhpRds6ofrs/IcTciMj59oBg0nBcAm/\noz6RSXBv8/GpKv/t4ksFfF2ibpm7tdZcTuZj3dPIkUQSfl7Svn4N22PUGUUBXtUo\nlYN+XcCVWcad/mr8q5BcG84WEftHFNYSAL13urXXvLDzmTxvH1u9ifwRwtQ8wckP\nxPI/49pkHCxkvq3Yh7KaQ877ebFaOi5DQqca3UbrHutDGa/u8d5Toi08V5FX/J7G\ntaua4i+PgNQjsqNJXx1eYap1ErbgJGd6F/VZRAvUHcd/+97FbRwRQd0fEmpN1c4=\n=8FLL\n-----END PGP SIGNATURE-----\n", "payload": "tree 1826ee317c28a76b78f4020f9379c556339af803\nparent 92800961a03501f24c661bbb093e5078f504214d\nparent 934d7990fd5bf87d858acb296c8f13909e770fda\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1568195944 +0000\ncommitter GitHub <noreply@github.com> 1568195944 +0000\n\nMerge #1797\n\n1797: Use VSCode fs API's in extension r=matklad a=LDSpits\n\nThis will close #1670.\r\n\r\nI've replaced the `CargoWatcher`s `Cargo.toml` check with a version that uses the `fs` API of vscode.\r\n\r\nWhile making this I've identified an issue with the detection of the `cargo.toml`, we can only load projects where the cargo.toml is in the root of the workspace. but that's a separate issue \ud83d\ude04 \n\nCo-authored-by: Lucas Spits <spits.lucas@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bbb039fbdd124cb6549eb67bbe7316f03ff40e8", "html_url": "https://github.com/rust-lang/rust/commit/7bbb039fbdd124cb6549eb67bbe7316f03ff40e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bbb039fbdd124cb6549eb67bbe7316f03ff40e8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92800961a03501f24c661bbb093e5078f504214d", "url": "https://api.github.com/repos/rust-lang/rust/commits/92800961a03501f24c661bbb093e5078f504214d", "html_url": "https://github.com/rust-lang/rust/commit/92800961a03501f24c661bbb093e5078f504214d"}, {"sha": "934d7990fd5bf87d858acb296c8f13909e770fda", "url": "https://api.github.com/repos/rust-lang/rust/commits/934d7990fd5bf87d858acb296c8f13909e770fda", "html_url": "https://github.com/rust-lang/rust/commit/934d7990fd5bf87d858acb296c8f13909e770fda"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "38824acb4512268c93b4fff999f351860667d96b", "filename": "editors/code/package.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bbb039fbdd124cb6549eb67bbe7316f03ff40e8/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/7bbb039fbdd124cb6549eb67bbe7316f03ff40e8/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=7bbb039fbdd124cb6549eb67bbe7316f03ff40e8", "patch": "@@ -13,7 +13,7 @@\n         \"Other\"\n     ],\n     \"engines\": {\n-        \"vscode\": \"^1.36.0\"\n+        \"vscode\": \"^1.37.0\"\n     },\n     \"scripts\": {\n         \"vscode:prepublish\": \"npm run compile\","}, {"sha": "00b24dbced4a68fae5c63c6ea0d839a68c7afdac", "filename": "editors/code/src/commands/cargo_watch.ts", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7bbb039fbdd124cb6549eb67bbe7316f03ff40e8/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts", "raw_url": "https://github.com/rust-lang/rust/raw/7bbb039fbdd124cb6549eb67bbe7316f03ff40e8/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts?ref=7bbb039fbdd124cb6549eb67bbe7316f03ff40e8", "patch": "@@ -1,5 +1,4 @@\n import * as child_process from 'child_process';\n-import * as fs from 'fs';\n import * as path from 'path';\n import * as vscode from 'vscode';\n \n@@ -15,23 +14,23 @@ import {\n import SuggestedFixCollection from '../utils/diagnostics/SuggestedFixCollection';\n import { areDiagnosticsEqual } from '../utils/diagnostics/vscode';\n \n-export function registerCargoWatchProvider(\n+export async function registerCargoWatchProvider(\n     subscriptions: vscode.Disposable[]\n-): CargoWatchProvider | undefined {\n+): Promise<CargoWatchProvider | undefined> {\n     let cargoExists = false;\n-    const cargoTomlFile = path.join(vscode.workspace.rootPath!, 'Cargo.toml');\n+\n     // Check if the working directory is valid cargo root path\n-    try {\n-        if (fs.existsSync(cargoTomlFile)) {\n-            cargoExists = true;\n-        }\n-    } catch (err) {\n-        cargoExists = false;\n+    const cargoTomlPath = path.join(vscode.workspace.rootPath!, 'Cargo.toml');\n+    const cargoTomlUri = vscode.Uri.file(cargoTomlPath);\n+    const cargoTomlFileInfo = await vscode.workspace.fs.stat(cargoTomlUri);\n+\n+    if (cargoTomlFileInfo) {\n+        cargoExists = true;\n     }\n \n     if (!cargoExists) {\n         vscode.window.showErrorMessage(\n-            `Couldn\\'t find \\'Cargo.toml\\' in ${cargoTomlFile}`\n+            `Couldn\\'t find \\'Cargo.toml\\' at ${cargoTomlPath}`\n         );\n         return;\n     }"}]}