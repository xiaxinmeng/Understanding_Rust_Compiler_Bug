{"sha": "55d725884b1fb62cbec038d8633bd40c39cc896f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZDcyNTg4NGIxZmI2MmNiZWMwMzhkODYzM2JkNDBjMzljYzg5NmY=", "commit": {"author": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-11-26T14:55:01Z"}, "committer": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-11-26T14:55:38Z"}, "message": "follow the same function order in the trait\n\nThis removes several warnings in IDE.", "tree": {"sha": "a95b1a51b76d540f7c6e1e448c59c743f7484596", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a95b1a51b76d540f7c6e1e448c59c743f7484596"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55d725884b1fb62cbec038d8633bd40c39cc896f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55d725884b1fb62cbec038d8633bd40c39cc896f", "html_url": "https://github.com/rust-lang/rust/commit/55d725884b1fb62cbec038d8633bd40c39cc896f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55d725884b1fb62cbec038d8633bd40c39cc896f/comments", "author": null, "committer": null, "parents": [{"sha": "0f6f66fcdc4abf110171ee06b1a72bdd2883b74f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f6f66fcdc4abf110171ee06b1a72bdd2883b74f", "html_url": "https://github.com/rust-lang/rust/commit/0f6f66fcdc4abf110171ee06b1a72bdd2883b74f"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "eea3dc39d345ea3ea6aa8c35b5aad8e2b5cd747b", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/55d725884b1fb62cbec038d8633bd40c39cc896f/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d725884b1fb62cbec038d8633bd40c39cc896f/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=55d725884b1fb62cbec038d8633bd40c39cc896f", "patch": "@@ -464,9 +464,9 @@ impl<T: PartialOrd> PartialOrd for Reverse<T> {\n     #[inline]\n     fn le(&self, other: &Self) -> bool { other.0 <= self.0 }\n     #[inline]\n-    fn ge(&self, other: &Self) -> bool { other.0 >= self.0 }\n-    #[inline]\n     fn gt(&self, other: &Self) -> bool { other.0 > self.0 }\n+    #[inline]\n+    fn ge(&self, other: &Self) -> bool { other.0 >= self.0 }\n }\n \n #[stable(feature = \"reverse_cmp_key\", since = \"1.19.0\")]\n@@ -1176,9 +1176,9 @@ mod impls {\n         #[inline]\n         fn le(&self, other: & &B) -> bool { PartialOrd::le(*self, *other) }\n         #[inline]\n-        fn ge(&self, other: & &B) -> bool { PartialOrd::ge(*self, *other) }\n-        #[inline]\n         fn gt(&self, other: & &B) -> bool { PartialOrd::gt(*self, *other) }\n+        #[inline]\n+        fn ge(&self, other: & &B) -> bool { PartialOrd::ge(*self, *other) }\n     }\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     impl<A: ?Sized> Ord for &A where A: Ord {\n@@ -1208,9 +1208,9 @@ mod impls {\n         #[inline]\n         fn le(&self, other: &&mut B) -> bool { PartialOrd::le(*self, *other) }\n         #[inline]\n-        fn ge(&self, other: &&mut B) -> bool { PartialOrd::ge(*self, *other) }\n-        #[inline]\n         fn gt(&self, other: &&mut B) -> bool { PartialOrd::gt(*self, *other) }\n+        #[inline]\n+        fn ge(&self, other: &&mut B) -> bool { PartialOrd::ge(*self, *other) }\n     }\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     impl<A: ?Sized> Ord for &mut A where A: Ord {"}]}