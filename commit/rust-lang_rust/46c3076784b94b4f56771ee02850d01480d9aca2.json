{"sha": "46c3076784b94b4f56771ee02850d01480d9aca2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2YzMwNzY3ODRiOTRiNGY1Njc3MWVlMDI4NTBkMDE0ODBkOWFjYTI=", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-09-09T15:37:18Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-09-13T04:29:24Z"}, "message": "Fix `needless_borrow` not linting mutable reference", "tree": {"sha": "ee056b27fafbfd95cfd1f52bb82be1f59cd1b43c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee056b27fafbfd95cfd1f52bb82be1f59cd1b43c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46c3076784b94b4f56771ee02850d01480d9aca2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46c3076784b94b4f56771ee02850d01480d9aca2", "html_url": "https://github.com/rust-lang/rust/commit/46c3076784b94b4f56771ee02850d01480d9aca2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46c3076784b94b4f56771ee02850d01480d9aca2/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b4b77aa4408d6c297e8270e79c3ad36a07b0f1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b4b77aa4408d6c297e8270e79c3ad36a07b0f1b", "html_url": "https://github.com/rust-lang/rust/commit/6b4b77aa4408d6c297e8270e79c3ad36a07b0f1b"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "1b2495d764d2a0c650f9f866a153252fa5288b5a", "filename": "clippy_lints/src/needless_borrow.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/46c3076784b94b4f56771ee02850d01480d9aca2/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c3076784b94b4f56771ee02850d01480d9aca2/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrow.rs?ref=46c3076784b94b4f56771ee02850d01480d9aca2", "patch": "@@ -104,7 +104,7 @@ impl<'tcx> LateLintPass<'tcx> for NeedlessBorrow {\n         if e.span.from_expansion() {\n             return;\n         }\n-        if let ExprKind::AddrOf(BorrowKind::Ref, Mutability::Not, inner) = e.kind {\n+        if let ExprKind::AddrOf(BorrowKind::Ref, mutability, inner) = e.kind {\n             if let ty::Ref(_, ty, _) = cx.typeck_results().expr_ty(inner).kind() {\n                 for adj3 in cx.typeck_results().expr_adjustments(e).windows(3) {\n                     if let [Adjustment {\n@@ -116,14 +116,20 @@ impl<'tcx> LateLintPass<'tcx> for NeedlessBorrow {\n                         ..\n                     }] = *adj3\n                     {\n+                        let help_msg_ty = if matches!(mutability, Mutability::Not) {\n+                            format!(\"&{}\", ty)\n+                        } else {\n+                            format!(\"&mut {}\", ty)\n+                        };\n+\n                         span_lint_and_then(\n                             cx,\n                             NEEDLESS_BORROW,\n                             e.span,\n                             &format!(\n-                                \"this expression borrows a reference (`&{}`) that is immediately dereferenced \\\n+                                \"this expression borrows a reference (`{}`) that is immediately dereferenced \\\n                              by the compiler\",\n-                                ty\n+                                help_msg_ty\n                             ),\n                             |diag| {\n                                 if let Some(snippet) = snippet_opt(cx, inner.span) {"}]}