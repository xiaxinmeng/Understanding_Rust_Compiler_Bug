{"sha": "55d6247f52051e897938e8f65a34c3cc661f5e24", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZDYyNDdmNTIwNTFlODk3OTM4ZThmNjVhMzRjM2NjNjYxZjVlMjQ=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-01-30T17:07:48Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-01-30T17:07:48Z"}, "message": "Clarify that guarantees extend to other advancing iterator methods.", "tree": {"sha": "c077520e874c5b523f30ad87e2de09071ddf54b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c077520e874c5b523f30ad87e2de09071ddf54b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55d6247f52051e897938e8f65a34c3cc661f5e24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55d6247f52051e897938e8f65a34c3cc661f5e24", "html_url": "https://github.com/rust-lang/rust/commit/55d6247f52051e897938e8f65a34c3cc661f5e24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55d6247f52051e897938e8f65a34c3cc661f5e24/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ce1b3b24491cbe10669cbe2b5733c2fe7cfe5b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ce1b3b24491cbe10669cbe2b5733c2fe7cfe5b7", "html_url": "https://github.com/rust-lang/rust/commit/7ce1b3b24491cbe10669cbe2b5733c2fe7cfe5b7"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "c4e21b84863df911e928571c69cd13b0d65e2bf5", "filename": "library/core/src/iter/traits/marker.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/55d6247f52051e897938e8f65a34c3cc661f5e24/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d6247f52051e897938e8f65a34c3cc661f5e24/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fmarker.rs?ref=55d6247f52051e897938e8f65a34c3cc661f5e24", "patch": "@@ -43,12 +43,14 @@ unsafe impl<I: TrustedLen + ?Sized> TrustedLen for &mut I {}\n /// An iterator that when yielding an item will have taken at least one element\n /// from its underlying [`SourceIter`].\n ///\n-/// Calling [`next()`] guarantees that at least one value of the iterator's underlying source\n-/// has been moved out and the result of the iterator chain could be inserted in its place,\n-/// assuming structural constraints of the source allow such an insertion.\n+/// Calling any method that advances the iterator, e.g.  [`next()`] or [`try_fold()`],\n+/// guarantees that for each step at least one value of the iterator's underlying source\n+/// has been moved out and the result of the iterator chain could be inserted\n+/// in its place, assuming structural constraints of the source allow such an insertion.\n /// In other words this trait indicates that an iterator pipeline can be collected in place.\n ///\n /// [`SourceIter`]: crate::iter::SourceIter\n /// [`next()`]: Iterator::next\n+/// [`try_fold()`]: Iterator::try_fold\n #[unstable(issue = \"none\", feature = \"inplace_iteration\")]\n pub unsafe trait InPlaceIterable: Iterator {}"}]}