{"sha": "7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354", "node_id": "C_kwDOAAsO6NoAKDdhYzk3YjY5ZmM4MWZjZDVjYmQyYTdjODYyMTg3ZjZhNmM2ZWEzNTQ", "commit": {"author": {"name": "TennyZhuang", "email": "zty0826@gmail.com", "date": "2022-10-16T08:02:23Z"}, "committer": {"name": "TennyZhuang", "email": "zty0826@gmail.com", "date": "2022-10-16T08:03:50Z"}, "message": "Add new lint `partial_pub_fields`\n\nSigned-off-by: TennyZhuang <zty0826@gmail.com>", "tree": {"sha": "cbb596de635702a984233c4ede7e2aba31a2fc6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbb596de635702a984233c4ede7e2aba31a2fc6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354", "html_url": "https://github.com/rust-lang/rust/commit/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/comments", "author": {"login": "TennyZhuang", "id": 9161438, "node_id": "MDQ6VXNlcjkxNjE0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/9161438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TennyZhuang", "html_url": "https://github.com/TennyZhuang", "followers_url": "https://api.github.com/users/TennyZhuang/followers", "following_url": "https://api.github.com/users/TennyZhuang/following{/other_user}", "gists_url": "https://api.github.com/users/TennyZhuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/TennyZhuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TennyZhuang/subscriptions", "organizations_url": "https://api.github.com/users/TennyZhuang/orgs", "repos_url": "https://api.github.com/users/TennyZhuang/repos", "events_url": "https://api.github.com/users/TennyZhuang/events{/privacy}", "received_events_url": "https://api.github.com/users/TennyZhuang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TennyZhuang", "id": 9161438, "node_id": "MDQ6VXNlcjkxNjE0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/9161438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TennyZhuang", "html_url": "https://github.com/TennyZhuang", "followers_url": "https://api.github.com/users/TennyZhuang/followers", "following_url": "https://api.github.com/users/TennyZhuang/following{/other_user}", "gists_url": "https://api.github.com/users/TennyZhuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/TennyZhuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TennyZhuang/subscriptions", "organizations_url": "https://api.github.com/users/TennyZhuang/orgs", "repos_url": "https://api.github.com/users/TennyZhuang/repos", "events_url": "https://api.github.com/users/TennyZhuang/events{/privacy}", "received_events_url": "https://api.github.com/users/TennyZhuang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff33d6e712ebf1068e8d6109e56f2f5d1e82054c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff33d6e712ebf1068e8d6109e56f2f5d1e82054c", "html_url": "https://github.com/rust-lang/rust/commit/ff33d6e712ebf1068e8d6109e56f2f5d1e82054c"}], "stats": {"total": 153, "additions": 153, "deletions": 0}, "files": [{"sha": "1e0ff5db0ee74f7702a1e54bebc83dc04521a706", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354", "patch": "@@ -4134,6 +4134,7 @@ Released 2018-09-13\n [`panic_in_result_fn`]: https://rust-lang.github.io/rust-clippy/master/index.html#panic_in_result_fn\n [`panic_params`]: https://rust-lang.github.io/rust-clippy/master/index.html#panic_params\n [`panicking_unwrap`]: https://rust-lang.github.io/rust-clippy/master/index.html#panicking_unwrap\n+[`partial_pub_fields`]: https://rust-lang.github.io/rust-clippy/master/index.html#partial_pub_fields\n [`partialeq_ne_impl`]: https://rust-lang.github.io/rust-clippy/master/index.html#partialeq_ne_impl\n [`partialeq_to_none`]: https://rust-lang.github.io/rust-clippy/master/index.html#partialeq_to_none\n [`path_buf_push_overwrite`]: https://rust-lang.github.io/rust-clippy/master/index.html#path_buf_push_overwrite"}, {"sha": "799c62743aaa95333a8f922750850761e8938331", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354", "patch": "@@ -479,6 +479,7 @@ store.register_lints(&[\n     panic_unimplemented::TODO,\n     panic_unimplemented::UNIMPLEMENTED,\n     panic_unimplemented::UNREACHABLE,\n+    partial_pub_fields::PARTIAL_PUB_FIELDS,\n     partialeq_ne_impl::PARTIALEQ_NE_IMPL,\n     partialeq_to_none::PARTIALEQ_TO_NONE,\n     pass_by_ref_or_value::LARGE_TYPES_PASSED_BY_VALUE,"}, {"sha": "9edced28408f16a12b666702ad3e74aa25b45e83", "filename": "clippy_lints/src/lib.register_restriction.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/clippy_lints%2Fsrc%2Flib.register_restriction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/clippy_lints%2Fsrc%2Flib.register_restriction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_restriction.rs?ref=7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354", "patch": "@@ -61,6 +61,7 @@ store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), ve\n     LintId::of(panic_unimplemented::TODO),\n     LintId::of(panic_unimplemented::UNIMPLEMENTED),\n     LintId::of(panic_unimplemented::UNREACHABLE),\n+    LintId::of(partial_pub_fields::PARTIAL_PUB_FIELDS),\n     LintId::of(pattern_type_mismatch::PATTERN_TYPE_MISMATCH),\n     LintId::of(pub_use::PUB_USE),\n     LintId::of(redundant_slicing::DEREF_BY_SLICING),"}, {"sha": "bf5688829e220460da87ef9ba7690618bae1149d", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354", "patch": "@@ -324,6 +324,7 @@ mod option_if_let_else;\n mod overflow_check_conditional;\n mod panic_in_result_fn;\n mod panic_unimplemented;\n+mod partial_pub_fields;\n mod partialeq_ne_impl;\n mod partialeq_to_none;\n mod pass_by_ref_or_value;\n@@ -908,6 +909,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|_| Box::new(bool_to_int_with_if::BoolToIntWithIf));\n     store.register_late_pass(|_| Box::new(box_default::BoxDefault));\n     store.register_late_pass(|_| Box::new(implicit_saturating_add::ImplicitSaturatingAdd));\n+    store.register_early_pass(|| Box::new(partial_pub_fields::PartialPubFields));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "085ee08afca9a3a2bd9d3cff9315513c43f51059", "filename": "clippy_lints/src/partial_pub_fields.rs", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/clippy_lints%2Fsrc%2Fpartial_pub_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/clippy_lints%2Fsrc%2Fpartial_pub_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpartial_pub_fields.rs?ref=7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354", "patch": "@@ -0,0 +1,81 @@\n+use clippy_utils::diagnostics::span_lint_and_help;\n+use rustc_ast::ast::*;\n+use rustc_lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks whether partial fields of a struct are public.\n+    ///\n+    /// Either make all fields of a type public, or make none of them public\n+    ///\n+    /// ### Why is this bad?\n+    /// Most types should either be:\n+    /// * Abstract data types: complex objects with opaque implementation which guard\n+    /// interior invariants and expose intentionally limited API to the outside world.\n+    /// * Data:\u2009relatively simple objects which group a bunch of related attributes together.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// pub struct Color {\n+    ///     pub r,\n+    ///     pub g,\n+    ///     b,\n+    /// }\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// pub struct Color {\n+    ///     pub r,\n+    ///     pub g,\n+    ///     pub b,\n+    /// }\n+    /// ```\n+    #[clippy::version = \"1.66.0\"]\n+    pub PARTIAL_PUB_FIELDS,\n+    restriction,\n+    \"partial fields of a struct are public\"\n+}\n+declare_lint_pass!(PartialPubFields => [PARTIAL_PUB_FIELDS]);\n+\n+impl EarlyLintPass for PartialPubFields {\n+    fn check_item(&mut self, cx: &EarlyContext<'_>, item: &Item) {\n+        let ItemKind::Struct(ref st, _) = item.kind else {\n+            return;\n+        };\n+\n+        let mut fields = st.fields().iter();\n+        let Some(first_field) = fields.next() else {\n+            // Empty struct.\n+            return;\n+        };\n+        let all_pub = first_field.vis.kind.is_pub();\n+        let all_priv = !all_pub;\n+\n+        let msg = \"mixed usage of pub and non-pub fields\";\n+\n+        for field in fields {\n+            if all_priv && field.vis.kind.is_pub() {\n+                span_lint_and_help(\n+                    cx,\n+                    &PARTIAL_PUB_FIELDS,\n+                    field.vis.span,\n+                    msg,\n+                    None,\n+                    \"consider using private field here\",\n+                );\n+                return;\n+            } else if all_pub && !field.vis.kind.is_pub() {\n+                span_lint_and_help(\n+                    cx,\n+                    &PARTIAL_PUB_FIELDS,\n+                    field.vis.span,\n+                    msg,\n+                    None,\n+                    \"consider using public field here\",\n+                );\n+                return;\n+            }\n+        }\n+    }\n+}"}, {"sha": "b8b4286b488a4a956951836c3bfa097e17c7bdf3", "filename": "src/docs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/src%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/src%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdocs.rs?ref=7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354", "patch": "@@ -395,6 +395,7 @@ docs! {\n     \"panic\",\n     \"panic_in_result_fn\",\n     \"panicking_unwrap\",\n+    \"partial_pub_fields\",\n     \"partialeq_ne_impl\",\n     \"partialeq_to_none\",\n     \"path_buf_push_overwrite\","}, {"sha": "a332ec8c28a667ccdc53e0fad7287c978d2a2947", "filename": "src/docs/partial_pub_fields.txt", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/src%2Fdocs%2Fpartial_pub_fields.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/src%2Fdocs%2Fpartial_pub_fields.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdocs%2Fpartial_pub_fields.txt?ref=7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354", "patch": "@@ -0,0 +1,27 @@\n+### What it does\n+Checks whether partial fields of a struct are public.\n+\n+Either make all fields of a type public, or make none of them public\n+\n+### Why is this bad?\n+Most types should either be:\n+* Abstract data types: complex objects with opaque implementation which guard\n+interior invariants and expose intentionally limited API to the outside world.\n+* Data:\u2009relatively simple objects which group a bunch of related attributes together.\n+\n+### Example\n+```\n+pub struct Color {\n+    pub r,\n+    pub g,\n+    b,\n+}\n+```\n+Use instead:\n+```\n+pub struct Color {\n+    pub r,\n+    pub g,\n+    pub b,\n+}\n+```\n\\ No newline at end of file"}, {"sha": "e1a4b4827991e74ba5a868f5bdf6891db2a135ff", "filename": "tests/ui/partial_pub_fields.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/tests%2Fui%2Fpartial_pub_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/tests%2Fui%2Fpartial_pub_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpartial_pub_fields.rs?ref=7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354", "patch": "@@ -0,0 +1,20 @@\n+#![allow(unused)]\n+#![warn(clippy::partial_pub_fields)]\n+\n+fn main() {\n+    // test code goes here\n+\n+    use std::collections::HashMap;\n+\n+    #[derive(Default)]\n+    pub struct FileSet {\n+        files: HashMap<String, u32>,\n+        pub paths: HashMap<u32, String>,\n+    }\n+\n+    pub struct Color {\n+        pub r: u8,\n+        pub g: u8,\n+        b: u8,\n+    }\n+}"}, {"sha": "f7f23c85a67e296ce845edc4bbdc29a7110aee6b", "filename": "tests/ui/partial_pub_fields.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/tests%2Fui%2Fpartial_pub_fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354/tests%2Fui%2Fpartial_pub_fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpartial_pub_fields.stderr?ref=7ac97b69fc81fcd5cbd2a7c862187f6a6c6ea354", "patch": "@@ -0,0 +1,19 @@\n+error: mixed usage of pub and non-pub fields\n+  --> $DIR/partial_pub_fields.rs:12:9\n+   |\n+LL |         pub paths: HashMap<u32, String>,\n+   |         ^^^\n+   |\n+   = help: consider using private field here\n+   = note: `-D clippy::partial-pub-fields` implied by `-D warnings`\n+\n+error: mixed usage of pub and non-pub fields\n+  --> $DIR/partial_pub_fields.rs:18:9\n+   |\n+LL |         b: u8,\n+   |         ^\n+   |\n+   = help: consider using public field here\n+\n+error: aborting due to 2 previous errors\n+"}]}