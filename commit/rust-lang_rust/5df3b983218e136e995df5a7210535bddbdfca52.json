{"sha": "5df3b983218e136e995df5a7210535bddbdfca52", "node_id": "C_kwDOAAsO6NoAKDVkZjNiOTgzMjE4ZTEzNmU5OTVkZjVhNzIxMDUzNWJkZGJkZmNhNTI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-22T06:23:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-22T06:23:43Z"}, "message": "Rollup merge of #99579 - CleanCut:expect-warning, r=joshtriplett\n\nAdd same warning to Result::expect as Result::unwrap\n\nI was reading a recent blog post by Jimmy Hartzell and [he noted](https://www.thecodedmessage.com/posts/2022-07-14-programming-unwrap/#context):\n\n> I will however note that the documentation of `unwrap` comes with [a warning not to use it](https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap). The warning is framed in terms of the fact that `unwrap` may panic, but the [documentation of `expect`](https://doc.rust-lang.org/std/result/enum.Result.html#method.expect), where this is equally true, does not come with such a warning.\n\nIt _is_ equally true. Let's add the same warning to `expect`. This PR is a copy-and-paste of the warning text from the docstring for `unwrap`.", "tree": {"sha": "f33a2c0b026c5ef7ac34d14e3453d729ea3dfbf3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f33a2c0b026c5ef7ac34d14e3453d729ea3dfbf3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5df3b983218e136e995df5a7210535bddbdfca52", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi2kJwCRBK7hj4Ov3rIwAA91AIAGt9DfMCr/qQuW8f/4mR8LHM\nVXxpe2q/fnvXjnwoPOB896KMrO6V3nPqlsdZCEGRxCZgO8aqmig/zuU7Scf8rcPQ\nDk+CGu3cA5R3eJzXM40h+OeCM/OJy9X4wQrOV03xX5pmG3yGbujBZhbLE4u/iD7a\nR12D6Gdzpj741DM5OJRbvXlGhaChYcEio8EaIOQOcRZFQNwf2Tl6pA6Gmdd8aOQO\nkaIE9Mg986u3sUc++bh6aP1r9LgVLbDXTIaU89e6SNmMLAb4Mr8FOjiX0O9A0FyT\nvkjjlrujJzZB9Mf4hx/cKnDZ3EUYMja4hRiOcRvI50ZOR+A0BrYVQr7gGAyA6ug=\n=8CzS\n-----END PGP SIGNATURE-----\n", "payload": "tree f33a2c0b026c5ef7ac34d14e3453d729ea3dfbf3\nparent 92bebac0b93011212c48a12f068a16b19376b55a\nparent 7ba0be832a0f9c7a22f4b9e2cb76b653d4010b30\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1658471023 +0530\ncommitter GitHub <noreply@github.com> 1658471023 +0530\n\nRollup merge of #99579 - CleanCut:expect-warning, r=joshtriplett\n\nAdd same warning to Result::expect as Result::unwrap\n\nI was reading a recent blog post by Jimmy Hartzell and [he noted](https://www.thecodedmessage.com/posts/2022-07-14-programming-unwrap/#context):\n\n> I will however note that the documentation of `unwrap` comes with [a warning not to use it](https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap). The warning is framed in terms of the fact that `unwrap` may panic, but the [documentation of `expect`](https://doc.rust-lang.org/std/result/enum.Result.html#method.expect), where this is equally true, does not come with such a warning.\n\nIt _is_ equally true. Let's add the same warning to `expect`. This PR is a copy-and-paste of the warning text from the docstring for `unwrap`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5df3b983218e136e995df5a7210535bddbdfca52", "html_url": "https://github.com/rust-lang/rust/commit/5df3b983218e136e995df5a7210535bddbdfca52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5df3b983218e136e995df5a7210535bddbdfca52/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92bebac0b93011212c48a12f068a16b19376b55a", "url": "https://api.github.com/repos/rust-lang/rust/commits/92bebac0b93011212c48a12f068a16b19376b55a", "html_url": "https://github.com/rust-lang/rust/commit/92bebac0b93011212c48a12f068a16b19376b55a"}, {"sha": "7ba0be832a0f9c7a22f4b9e2cb76b653d4010b30", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ba0be832a0f9c7a22f4b9e2cb76b653d4010b30", "html_url": "https://github.com/rust-lang/rust/commit/7ba0be832a0f9c7a22f4b9e2cb76b653d4010b30"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "45b052c824d315fe7dba344e615fab7aa9aef2d9", "filename": "library/core/src/result.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5df3b983218e136e995df5a7210535bddbdfca52/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df3b983218e136e995df5a7210535bddbdfca52/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=5df3b983218e136e995df5a7210535bddbdfca52", "patch": "@@ -1009,6 +1009,15 @@ impl<T, E> Result<T, E> {\n \n     /// Returns the contained [`Ok`] value, consuming the `self` value.\n     ///\n+    /// Because this function may panic, its use is generally discouraged.\n+    /// Instead, prefer to use pattern matching and handle the [`Err`]\n+    /// case explicitly, or call [`unwrap_or`], [`unwrap_or_else`], or\n+    /// [`unwrap_or_default`].\n+    ///\n+    /// [`unwrap_or`]: Result::unwrap_or\n+    /// [`unwrap_or_else`]: Result::unwrap_or_else\n+    /// [`unwrap_or_default`]: Result::unwrap_or_default\n+    ///\n     /// # Panics\n     ///\n     /// Panics if the value is an [`Err`], with a panic message including the"}]}