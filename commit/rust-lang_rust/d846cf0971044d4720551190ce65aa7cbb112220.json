{"sha": "d846cf0971044d4720551190ce65aa7cbb112220", "node_id": "C_kwDOAAsO6NoAKGQ4NDZjZjA5NzEwNDRkNDcyMDU1MTE5MGNlNjVhYTdjYmIxMTIyMjA", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-12-22T22:21:00Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-12-22T22:21:00Z"}, "message": "A few metadata nits", "tree": {"sha": "e7102263f9056e8b19fc41ef6f786f547b63430c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7102263f9056e8b19fc41ef6f786f547b63430c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d846cf0971044d4720551190ce65aa7cbb112220", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d846cf0971044d4720551190ce65aa7cbb112220", "html_url": "https://github.com/rust-lang/rust/commit/d846cf0971044d4720551190ce65aa7cbb112220", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d846cf0971044d4720551190ce65aa7cbb112220/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5e4eef02d443eae5089a330e59a69a4f350db81", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5e4eef02d443eae5089a330e59a69a4f350db81", "html_url": "https://github.com/rust-lang/rust/commit/e5e4eef02d443eae5089a330e59a69a4f350db81"}], "stats": {"total": 37, "additions": 11, "deletions": 26}, "files": [{"sha": "dda5f4bac4289310140abef18ff316f57bf44132", "filename": "compiler/rustc_metadata/src/locator.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d846cf0971044d4720551190ce65aa7cbb112220/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d846cf0971044d4720551190ce65aa7cbb112220/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs?ref=d846cf0971044d4720551190ce65aa7cbb112220", "patch": "@@ -1011,11 +1011,7 @@ impl CrateError {\n                 sess.emit_err(SymbolConflictsOthers { span, crate_name: root_name });\n             }\n             CrateError::StableCrateIdCollision(crate_name0, crate_name1) => {\n-                sess.emit_err(StableCrateIdCollision {\n-                    span,\n-                    crate_name0: crate_name0,\n-                    crate_name1: crate_name1,\n-                });\n+                sess.emit_err(StableCrateIdCollision { span, crate_name0, crate_name1 });\n             }\n             CrateError::DlOpen(s) | CrateError::DlSym(s) => {\n                 sess.emit_err(DlError { span, err: s });\n@@ -1074,7 +1070,7 @@ impl CrateError {\n                     }\n                     sess.emit_err(NoCrateWithTriple {\n                         span,\n-                        crate_name: crate_name,\n+                        crate_name,\n                         locator_triple: locator.triple.triple(),\n                         add_info,\n                         found_crates,"}, {"sha": "99d8225a4c391381075f18b736bdb816771ffebe", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d846cf0971044d4720551190ce65aa7cbb112220/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d846cf0971044d4720551190ce65aa7cbb112220/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=d846cf0971044d4720551190ce65aa7cbb112220", "patch": "@@ -78,10 +78,6 @@ pub(crate) struct CrateMetadata {\n     blob: MetadataBlob,\n \n     // --- Some data pre-decoded from the metadata blob, usually for performance ---\n-    /// NOTE(eddyb) we pass `'static` to a `'tcx` parameter because this\n-    /// lifetime is only used behind `LazyValue`, `LazyArray`, or `LazyTable`, and therefore acts like a\n-    /// universal (`for<'tcx>`), that is paired up with whichever `TyCtxt`\n-    /// is being used to decode those values.\n     root: CrateRoot,\n     /// Trait impl data.\n     /// FIXME: Used only from queries and can use query cache,\n@@ -688,10 +684,10 @@ impl MetadataBlob {\n     pub(crate) fn get_root(&self) -> CrateRoot {\n         let slice = &self.blob()[..];\n         let offset = METADATA_HEADER.len();\n-        let pos = (((slice[offset + 0] as u32) << 24)\n-            | ((slice[offset + 1] as u32) << 16)\n-            | ((slice[offset + 2] as u32) << 8)\n-            | ((slice[offset + 3] as u32) << 0)) as usize;\n+\n+        let pos_bytes = slice[offset..][..4].try_into().unwrap();\n+        let pos = u32::from_be_bytes(pos_bytes) as usize;\n+\n         LazyValue::<CrateRoot>::from_position(NonZeroUsize::new(pos).unwrap()).decode(self)\n     }\n \n@@ -702,16 +698,14 @@ impl MetadataBlob {\n         writeln!(out, \"hash {} stable_crate_id {:?}\", root.hash, root.stable_crate_id)?;\n         writeln!(out, \"proc_macro {:?}\", root.proc_macro_data.is_some())?;\n         writeln!(out, \"=External Dependencies=\")?;\n+\n         for (i, dep) in root.crate_deps.decode(self).enumerate() {\n+            let CrateDep { name, extra_filename, hash, host_hash, kind } = dep;\n+            let number = i + 1;\n+\n             writeln!(\n                 out,\n-                \"{} {}{} hash {} host_hash {:?} kind {:?}\",\n-                i + 1,\n-                dep.name,\n-                dep.extra_filename,\n-                dep.hash,\n-                dep.host_hash,\n-                dep.kind\n+                \"{number} {name}{extra_filename} hash {hash} host_hash {host_hash:?} kind {kind:?}\"\n             )?;\n         }\n         write!(out, \"\\n\")?;"}, {"sha": "26a41f633fffa460f861df4ef0f48de2513e21bc", "filename": "compiler/rustc_metadata/src/rmeta/mod.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d846cf0971044d4720551190ce65aa7cbb112220/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d846cf0971044d4720551190ce65aa7cbb112220/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs?ref=d846cf0971044d4720551190ce65aa7cbb112220", "patch": "@@ -416,11 +416,6 @@ struct VariantData {\n     is_non_exhaustive: bool,\n }\n \n-#[derive(TyEncodable, TyDecodable)]\n-struct GeneratorData<'tcx> {\n-    layout: mir::GeneratorLayout<'tcx>,\n-}\n-\n // Tags used for encoding Spans:\n const TAG_VALID_SPAN_LOCAL: u8 = 0;\n const TAG_VALID_SPAN_FOREIGN: u8 = 1;"}]}