{"sha": "93a02d35071910fb8ae7c824157b6d8c49e36433", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzYTAyZDM1MDcxOTEwZmI4YWU3YzgyNDE1N2I2ZDhjNDllMzY0MzM=", "commit": {"author": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-05-24T12:31:59Z"}, "committer": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-05-24T12:42:10Z"}, "message": "etc: py3 compat for featureck\n\nAlso rewrite most of the string formatting to be a bit more idiomatic", "tree": {"sha": "8dca75cc8edbef4c683207c6bf12934b190f7fbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dca75cc8edbef4c683207c6bf12934b190f7fbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93a02d35071910fb8ae7c824157b6d8c49e36433", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93a02d35071910fb8ae7c824157b6d8c49e36433", "html_url": "https://github.com/rust-lang/rust/commit/93a02d35071910fb8ae7c824157b6d8c49e36433", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93a02d35071910fb8ae7c824157b6d8c49e36433/comments", "author": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ecc5a95fc8e05561b66a86d22f23073cfbac5ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ecc5a95fc8e05561b66a86d22f23073cfbac5ba", "html_url": "https://github.com/rust-lang/rust/commit/9ecc5a95fc8e05561b66a86d22f23073cfbac5ba"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "da140e9317d841562b4f0f1341b89d3567540b15", "filename": "src/etc/featureck.py", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/93a02d35071910fb8ae7c824157b6d8c49e36433/src%2Fetc%2Ffeatureck.py", "raw_url": "https://github.com/rust-lang/rust/raw/93a02d35071910fb8ae7c824157b6d8c49e36433/src%2Fetc%2Ffeatureck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ffeatureck.py?ref=93a02d35071910fb8ae7c824157b6d8c49e36433", "patch": "@@ -21,7 +21,7 @@\n import sys, os, re\n \n if len(sys.argv) < 2:\n-    print \"usage: featurkck.py <src-dir>\"\n+    print(\"usage: featureck.py <src-dir>\")\n     sys.exit(1)\n \n src_dir = sys.argv[1]\n@@ -47,7 +47,7 @@\n             line = line.replace(\"(\", \"\").replace(\"),\", \"\").replace(\")\", \"\")\n             parts = line.split(\",\")\n             if len(parts) != 3:\n-                print \"error: unexpected number of components in line: \" + original_line\n+                print(\"error: unexpected number of components in line: \" + original_line)\n                 sys.exit(1)\n             feature_name = parts[0].strip().replace('\"', \"\")\n             since = parts[1].strip().replace('\"', \"\")\n@@ -107,9 +107,9 @@\n                         if not mm is None:\n                             since = mm.group(1)\n                         else:\n-                            print \"error: misformed stability attribute\"\n-                            print \"line \" + str(line_num) + \" of \" + path + \":\"\n-                            print line\n+                            print(\"error: misformed stability attribute\")\n+                            print(\"line %d of %:\" % (line_num, path))\n+                            print(line)\n                             errors = True\n \n                     lib_features[feature_name] = feature_name\n@@ -123,24 +123,24 @@\n                         (expected_since, source_path, source_line_num, source_line) = \\\n                             lib_features_and_level.get((feature_name, level))\n                         if since != expected_since:\n-                            print \"error: mismatch in \" + level + \" feature '\" + feature_name + \"'\"\n-                            print \"line \" + str(source_line_num) + \" of \" + source_path + \":\"\n-                            print source_line\n-                            print \"line \" + str(line_num) + \" of \" + path + \":\"\n-                            print line\n+                            print(\"error: mismatch in %s feature '%s'\" % (level, feature_name))\n+                            print(\"line %d of %s:\" % (source_line_num, source_path))\n+                            print(source_line)\n+                            print(\"line %d of %s:\" % (line_num, path))\n+                            print(line)\n                             errors = True\n \n                     # Verify that this lib feature doesn't duplicate a lang feature\n                     if feature_name in language_feature_names:\n-                        print \"error: lib feature '\" + feature_name + \"' duplicates a lang feature\"\n-                        print \"line \" + str(line_num) + \" of \" + path + \":\"\n-                        print line\n+                        print(\"error: lib feature '%s' duplicates a lang feature\" % (feature_name))\n+                        print(\"line %d of %s:\" % (line_num, path))\n+                        print(line)\n                         errors = True\n \n                 else:\n-                    print \"error: misformed stability attribute\"\n-                    print \"line \" + str(line_num) + \" of \" + path + \":\"\n-                    print line\n+                    print(\"error: misformed stability attribute\")\n+                    print(\"line %d of %s:\" % (line_num, path))\n+                    print(line)\n                     errors = True\n \n # Merge data about both lists\n@@ -175,7 +175,7 @@\n     is_unstable = lib_features_and_level.get((name, \"unstable\")) is not None\n \n     if is_stable and is_unstable:\n-        print \"error: feature '\" + name + \"' is both stable and unstable\"\n+        print(\"error: feature '%s' is both stable and unstable\" % (name))\n         errors = True\n \n     if is_stable:\n@@ -192,21 +192,21 @@\n for name in lib_feature_stats:\n     if language_feature_stats.get(name) is not None:\n         if not name in joint_features:\n-            print \"error: feature '\" + name + \"' is both a lang and lib feature but not whitelisted\"\n+            print(\"error: feature '%s' is both a lang and lib feature but not whitelisted\" % (name))\n             errors = True\n         lang_status = language_feature_stats[name][3]\n         lib_status = lib_feature_stats[name][3]\n         lang_stable_since = language_feature_stats[name][4]\n         lib_stable_since = lib_feature_stats[name][4]\n \n         if lang_status != lib_status and lib_status != \"deprecated\":\n-            print \"error: feature '\" + name + \"' has lang status \" + lang_status + \\\n-                  \" but lib status \" + lib_status\n+            print(\"error: feature '%s' has lang status %s \" +\n+                  \"but lib status %s\" % (name, lang_status, lib_status))\n             errors = True\n \n         if lang_stable_since != lib_stable_since:\n-            print \"error: feature '\" + name + \"' has lang stable since \" + lang_stable_since + \\\n-                  \" but lib stable since \" + lib_stable_since\n+            print(\"error: feature '%s' has lang stable since %s \" +\n+                  \"but lib stable since %s\" % (name, lang_stable_since, lib_stable_since))\n             errors = True\n \n         merged_stats[name] = (name, True, True, lang_status, lang_stable_since)\n@@ -240,5 +240,5 @@\n \n print\n for line in lines:\n-    print \"* \" + line\n+    print(\"* \" + line)\n print"}]}