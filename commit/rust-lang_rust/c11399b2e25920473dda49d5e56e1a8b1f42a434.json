{"sha": "c11399b2e25920473dda49d5e56e1a8b1f42a434", "node_id": "C_kwDOAAsO6NoAKGMxMTM5OWIyZTI1OTIwNDczZGRhNDlkNWU1NmUxYThiMWY0MmE0MzQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-03-15T12:21:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-15T12:21:31Z"}, "message": "Rollup merge of #108991 - ozkanonur:new-llvm-flag, r=albertlarsan68\n\nadd `enable-warnings` flag for llvm, and disable it by default.\n\nThis flag allows to turn off warnings of llvm compilation for people who are not interested on those warnings.", "tree": {"sha": "7077ba4171a9d0446bac44cf4bf5db3ccc24baa5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7077ba4171a9d0446bac44cf4bf5db3ccc24baa5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c11399b2e25920473dda49d5e56e1a8b1f42a434", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkEbhLCRBK7hj4Ov3rIwAApcoIABMC+ZLYG+iTs8y60uMXbN8k\nbae/eB6wy+j7dEjEEFai2AVI5BSYV/hn5rwxteRu7ZNaDOD0UYgKMBcYpo18IE46\n+WrZlmd/MI9LR93If1o463+VN2SVLiCxJnAyb7/EcjBufTsQfPsjPyW4E7ZN3SzM\nVq0Bndcz0K2/60xcFDWgj/5s4aFuFgOh9qGd5SwtVcu3fid8E0MvOLkYR1Mc0icB\n+QJzREfkfy/ckIt0mJV8olctKs1bqLdOCu2/FLNbw2wEU6mBhFBf/j/8bxOxOrog\njPwHTNJ+yz061bRVe37qtkIZ9Xn6Z9Jl9GF1tc62MTJm55J7FZ9r8fPi3CWdmMs=\n=vN3E\n-----END PGP SIGNATURE-----\n", "payload": "tree 7077ba4171a9d0446bac44cf4bf5db3ccc24baa5\nparent 992d154f3a84cc8abcefcf6e6cf3698e4821b506\nparent 2e7249fa0f4c276414b7905b1ad975bd98da0c55\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1678882891 +0530\ncommitter GitHub <noreply@github.com> 1678882891 +0530\n\nRollup merge of #108991 - ozkanonur:new-llvm-flag, r=albertlarsan68\n\nadd `enable-warnings` flag for llvm, and disable it by default.\n\nThis flag allows to turn off warnings of llvm compilation for people who are not interested on those warnings.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c11399b2e25920473dda49d5e56e1a8b1f42a434", "html_url": "https://github.com/rust-lang/rust/commit/c11399b2e25920473dda49d5e56e1a8b1f42a434", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c11399b2e25920473dda49d5e56e1a8b1f42a434/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "992d154f3a84cc8abcefcf6e6cf3698e4821b506", "url": "https://api.github.com/repos/rust-lang/rust/commits/992d154f3a84cc8abcefcf6e6cf3698e4821b506", "html_url": "https://github.com/rust-lang/rust/commit/992d154f3a84cc8abcefcf6e6cf3698e4821b506"}, {"sha": "2e7249fa0f4c276414b7905b1ad975bd98da0c55", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e7249fa0f4c276414b7905b1ad975bd98da0c55", "html_url": "https://github.com/rust-lang/rust/commit/2e7249fa0f4c276414b7905b1ad975bd98da0c55"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "7ae46203f972a8619ce8c93549fff6b591666e65", "filename": "config.example.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c11399b2e25920473dda49d5e56e1a8b1f42a434/config.example.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c11399b2e25920473dda49d5e56e1a8b1f42a434/config.example.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.example.toml?ref=c11399b2e25920473dda49d5e56e1a8b1f42a434", "patch": "@@ -146,6 +146,9 @@ changelog-seen = 2\n # Whether to build the clang compiler.\n #clang = false\n \n+# Whether to enable llvm compilation warnings.\n+#enable-warnings = false\n+\n # Custom CMake defines to set when building LLVM.\n #build-config = {}\n "}, {"sha": "654e03d0c3c7f5d222b700f105dc997f0d61f8e0", "filename": "src/bootstrap/CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c11399b2e25920473dda49d5e56e1a8b1f42a434/src%2Fbootstrap%2FCHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/c11399b2e25920473dda49d5e56e1a8b1f42a434/src%2Fbootstrap%2FCHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCHANGELOG.md?ref=c11399b2e25920473dda49d5e56e1a8b1f42a434", "patch": "@@ -25,6 +25,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n - If you have Rust already installed, `x.py` will now infer the host target\n   from the default rust toolchain. [#78513](https://github.com/rust-lang/rust/pull/78513)\n - Add options for enabling overflow checks, one for std (`overflow-checks-std`) and one for everything else (`overflow-checks`). Both default to false.\n+- Add llvm option `enable-warnings` to have control on llvm compilation warnings. Default to false.\n \n \n ## [Version 2] - 2020-09-25"}, {"sha": "58729f396f0b65a09519b3bd098e73c3098aa867", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c11399b2e25920473dda49d5e56e1a8b1f42a434/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c11399b2e25920473dda49d5e56e1a8b1f42a434/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=c11399b2e25920473dda49d5e56e1a8b1f42a434", "patch": "@@ -133,6 +133,7 @@ pub struct Config {\n     pub llvm_allow_old_toolchain: bool,\n     pub llvm_polly: bool,\n     pub llvm_clang: bool,\n+    pub llvm_enable_warnings: bool,\n     pub llvm_from_ci: bool,\n     pub llvm_build_config: HashMap<String, String>,\n \n@@ -688,6 +689,7 @@ define_config! {\n         allow_old_toolchain: Option<bool> = \"allow-old-toolchain\",\n         polly: Option<bool> = \"polly\",\n         clang: Option<bool> = \"clang\",\n+        enable_warnings: Option<bool> = \"enable-warnings\",\n         download_ci_llvm: Option<StringOrBool> = \"download-ci-llvm\",\n         build_config: Option<HashMap<String, String>> = \"build-config\",\n     }\n@@ -1184,6 +1186,7 @@ impl Config {\n             config.llvm_allow_old_toolchain = llvm.allow_old_toolchain.unwrap_or(false);\n             config.llvm_polly = llvm.polly.unwrap_or(false);\n             config.llvm_clang = llvm.clang.unwrap_or(false);\n+            config.llvm_enable_warnings = llvm.enable_warnings.unwrap_or(false);\n             config.llvm_build_config = llvm.build_config.clone().unwrap_or(Default::default());\n \n             let asserts = llvm_assertions.unwrap_or(false);"}, {"sha": "20b2699c761bf8c6ad89b0a6147154dadebc2221", "filename": "src/bootstrap/defaults/config.codegen.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c11399b2e25920473dda49d5e56e1a8b1f42a434/src%2Fbootstrap%2Fdefaults%2Fconfig.codegen.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c11399b2e25920473dda49d5e56e1a8b1f42a434/src%2Fbootstrap%2Fdefaults%2Fconfig.codegen.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdefaults%2Fconfig.codegen.toml?ref=c11399b2e25920473dda49d5e56e1a8b1f42a434", "patch": "@@ -7,6 +7,8 @@ compiler-docs = true\n # This enables debug-assertions in LLVM,\n # catching logic errors in codegen much earlier in the process.\n assertions = true\n+# enable warnings during the llvm compilation\n+enable-warnings = true\n \n [rust]\n # This enables `RUSTC_LOG=debug`, avoiding confusing situations"}, {"sha": "41ee509655326a02b7f54a764dcbdc4cd74b73a1", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c11399b2e25920473dda49d5e56e1a8b1f42a434/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c11399b2e25920473dda49d5e56e1a8b1f42a434/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=c11399b2e25920473dda49d5e56e1a8b1f42a434", "patch": "@@ -304,6 +304,7 @@ impl Step for Llvm {\n         let assertions = if builder.config.llvm_assertions { \"ON\" } else { \"OFF\" };\n         let plugins = if builder.config.llvm_plugins { \"ON\" } else { \"OFF\" };\n         let enable_tests = if builder.config.llvm_tests { \"ON\" } else { \"OFF\" };\n+        let enable_warnings = if builder.config.llvm_enable_warnings { \"ON\" } else { \"OFF\" };\n \n         cfg.out_dir(&out_dir)\n             .profile(profile)\n@@ -321,7 +322,8 @@ impl Step for Llvm {\n             .define(\"LLVM_ENABLE_Z3_SOLVER\", \"OFF\")\n             .define(\"LLVM_PARALLEL_COMPILE_JOBS\", builder.jobs().to_string())\n             .define(\"LLVM_TARGET_ARCH\", target_native.split('-').next().unwrap())\n-            .define(\"LLVM_DEFAULT_TARGET_TRIPLE\", target_native);\n+            .define(\"LLVM_DEFAULT_TARGET_TRIPLE\", target_native)\n+            .define(\"LLVM_ENABLE_WARNINGS\", enable_warnings);\n \n         // Parts of our test suite rely on the `FileCheck` tool, which is built by default in\n         // `build/$TARGET/llvm/build/bin` is but *not* then installed to `build/$TARGET/llvm/bin`.\n@@ -483,11 +485,6 @@ impl Step for Llvm {\n             cfg.define(key, val);\n         }\n \n-        // FIXME: we don't actually need to build all LLVM tools and all LLVM\n-        //        libraries here, e.g., we just want a few components and a few\n-        //        tools. Figure out how to filter them down and only build the right\n-        //        tools and libs on all platforms.\n-\n         if builder.config.dry_run() {\n             return res;\n         }"}]}