{"sha": "abb6b8f14c4d05cf344048263651d8192997b6cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiYjZiOGYxNGM0ZDA1Y2YzNDQwNDgyNjM2NTFkODE5Mjk5N2I2Y2Y=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-08T17:22:33Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-08T18:45:06Z"}, "message": "Use the same name in xtask and test utils", "tree": {"sha": "ee149a19239f97344687768481f73588447e902a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee149a19239f97344687768481f73588447e902a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abb6b8f14c4d05cf344048263651d8192997b6cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abb6b8f14c4d05cf344048263651d8192997b6cf", "html_url": "https://github.com/rust-lang/rust/commit/abb6b8f14c4d05cf344048263651d8192997b6cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abb6b8f14c4d05cf344048263651d8192997b6cf/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6ba0dec0c08dd2afcda951b09966b457f2c8bc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6ba0dec0c08dd2afcda951b09966b457f2c8bc3", "html_url": "https://github.com/rust-lang/rust/commit/b6ba0dec0c08dd2afcda951b09966b457f2c8bc3"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "bceca2b0fb468170d22b799c59c6d44c6447632c", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abb6b8f14c4d05cf344048263651d8192997b6cf/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abb6b8f14c4d05cf344048263651d8192997b6cf/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=abb6b8f14c4d05cf344048263651d8192997b6cf", "patch": "@@ -859,7 +859,7 @@ fn manual(fields: &[(&'static str, &'static str, &[&str], &str)]) -> String {\n mod tests {\n     use std::fs;\n \n-    use test_utils::{ensure_file_contents, project_dir};\n+    use test_utils::{ensure_file_contents, project_root};\n \n     use super::*;\n \n@@ -877,7 +877,7 @@ mod tests {\n             .to_string();\n         schema.push_str(\",\\n\");\n \n-        let package_json_path = project_dir().join(\"editors/code/package.json\");\n+        let package_json_path = project_root().join(\"editors/code/package.json\");\n         let mut package_json = fs::read_to_string(&package_json_path).unwrap();\n \n         let start_marker = \"                \\\"$generated-start\\\": false,\\n\";\n@@ -896,7 +896,7 @@ mod tests {\n \n     #[test]\n     fn schema_in_sync_with_docs() {\n-        let docs_path = project_dir().join(\"docs/user/generated_config.adoc\");\n+        let docs_path = project_root().join(\"docs/user/generated_config.adoc\");\n         let current = fs::read_to_string(&docs_path).unwrap();\n         let expected = ConfigData::manual();\n "}, {"sha": "ba0ccfaed1daaa28f45ca53e4637aa692a66ec85", "filename": "crates/syntax/src/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abb6b8f14c4d05cf344048263651d8192997b6cf/crates%2Fsyntax%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abb6b8f14c4d05cf344048263651d8192997b6cf/crates%2Fsyntax%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Ftests.rs?ref=abb6b8f14c4d05cf344048263651d8192997b6cf", "patch": "@@ -7,7 +7,7 @@ use std::{\n use ast::NameOwner;\n use expect_test::expect_file;\n use rayon::prelude::*;\n-use test_utils::{bench, bench_fixture, project_dir, skip_slow_tests};\n+use test_utils::{bench, bench_fixture, project_root, skip_slow_tests};\n \n use crate::{ast, fuzz, tokenize, AstNode, SourceFile, SyntaxError, TextRange, TextSize, Token};\n \n@@ -153,7 +153,7 @@ fn reparse_fuzz_tests() {\n /// Test that Rust-analyzer can parse and validate the rust-analyzer\n #[test]\n fn self_hosting_parsing() {\n-    let dir = project_dir().join(\"crates\");\n+    let dir = project_root().join(\"crates\");\n     let files = walkdir::WalkDir::new(dir)\n         .into_iter()\n         .filter_entry(|entry| {\n@@ -193,7 +193,7 @@ fn self_hosting_parsing() {\n }\n \n fn test_data_dir() -> PathBuf {\n-    project_dir().join(\"crates/syntax/test_data\")\n+    project_root().join(\"crates/syntax/test_data\")\n }\n \n fn assert_errors_are_present(errors: &[SyntaxError], path: &Path) {"}, {"sha": "3a37c4473cdb96533a8ae3496a4ea1c437b11bad", "filename": "crates/test_utils/src/bench_fixture.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abb6b8f14c4d05cf344048263651d8192997b6cf/crates%2Ftest_utils%2Fsrc%2Fbench_fixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abb6b8f14c4d05cf344048263651d8192997b6cf/crates%2Ftest_utils%2Fsrc%2Fbench_fixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Fbench_fixture.rs?ref=abb6b8f14c4d05cf344048263651d8192997b6cf", "patch": "@@ -4,7 +4,7 @@ use std::fs;\n \n use stdx::format_to;\n \n-use crate::project_dir;\n+use crate::project_root;\n \n pub fn big_struct() -> String {\n     let n = 1_000;\n@@ -32,11 +32,11 @@ struct S{} {{\n }\n \n pub fn glorious_old_parser() -> String {\n-    let path = project_dir().join(\"bench_data/glorious_old_parser\");\n+    let path = project_root().join(\"bench_data/glorious_old_parser\");\n     fs::read_to_string(&path).unwrap()\n }\n \n pub fn numerous_macro_rules() -> String {\n-    let path = project_dir().join(\"bench_data/numerous_macro_rules\");\n+    let path = project_root().join(\"bench_data/numerous_macro_rules\");\n     fs::read_to_string(&path).unwrap()\n }"}, {"sha": "097a541393398239de49b32862ccaf5cc2cc4c58", "filename": "crates/test_utils/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abb6b8f14c4d05cf344048263651d8192997b6cf/crates%2Ftest_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abb6b8f14c4d05cf344048263651d8192997b6cf/crates%2Ftest_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Flib.rs?ref=abb6b8f14c4d05cf344048263651d8192997b6cf", "patch": "@@ -288,14 +288,14 @@ pub fn skip_slow_tests() -> bool {\n     if should_skip {\n         eprintln!(\"ignoring slow test\")\n     } else {\n-        let path = project_dir().join(\"./target/.slow_tests_cookie\");\n+        let path = project_root().join(\"./target/.slow_tests_cookie\");\n         fs::write(&path, \".\").unwrap();\n     }\n     should_skip\n }\n \n /// Returns the path to the root directory of `rust-analyzer` project.\n-pub fn project_dir() -> PathBuf {\n+pub fn project_root() -> PathBuf {\n     let dir = env!(\"CARGO_MANIFEST_DIR\");\n     PathBuf::from(dir).parent().unwrap().parent().unwrap().to_owned()\n }\n@@ -371,7 +371,7 @@ pub fn try_ensure_file_contents(file: &Path, contents: &str) -> Result<(), ()> {\n         }\n         _ => (),\n     }\n-    let display_path = file.strip_prefix(&project_dir()).unwrap_or(file);\n+    let display_path = file.strip_prefix(&project_root()).unwrap_or(file);\n     eprintln!(\n         \"\\n\\x1b[31;1merror\\x1b[0m: {} was not up-to-date, updating\\n\",\n         display_path.display()"}]}