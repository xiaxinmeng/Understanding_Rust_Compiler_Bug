{"sha": "150b625a07f135d0a5e1693adf2b14315709779e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1MGI2MjVhMDdmMTM1ZDBhNWUxNjkzYWRmMmIxNDMxNTcwOTc3OWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-08T20:36:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-08T20:36:57Z"}, "message": "Auto merge of #45030 - raggi:zircon-handle-t, r=alexcrichton\n\nzircon: the type of zx_handle_t is now unsigned\n\nThis is a kernel ABI change that landed today. I noticed some other ABI\nissues and have left a note to cleanup once they are better defined.", "tree": {"sha": "87e4168424ab24537e16b52ecea06f12a88cda12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87e4168424ab24537e16b52ecea06f12a88cda12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/150b625a07f135d0a5e1693adf2b14315709779e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/150b625a07f135d0a5e1693adf2b14315709779e", "html_url": "https://github.com/rust-lang/rust/commit/150b625a07f135d0a5e1693adf2b14315709779e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/150b625a07f135d0a5e1693adf2b14315709779e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "650b1b1f3a41aa747da37dea3b32108b08146075", "url": "https://api.github.com/repos/rust-lang/rust/commits/650b1b1f3a41aa747da37dea3b32108b08146075", "html_url": "https://github.com/rust-lang/rust/commit/650b1b1f3a41aa747da37dea3b32108b08146075"}, {"sha": "fb03bb72b9c5e46d98726ba520ba08fe8ba2082f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb03bb72b9c5e46d98726ba520ba08fe8ba2082f", "html_url": "https://github.com/rust-lang/rust/commit/fb03bb72b9c5e46d98726ba520ba08fe8ba2082f"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "a7a67ed36e82363e5cf11182d7626e372adf8c1e", "filename": "src/libstd/sys/unix/process/process_fuchsia.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/150b625a07f135d0a5e1693adf2b14315709779e/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/150b625a07f135d0a5e1693adf2b14315709779e/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs?ref=150b625a07f135d0a5e1693adf2b14315709779e", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use io;\n-use libc;\n+use libc::{self, size_t};\n use mem;\n use ptr;\n \n@@ -148,8 +148,8 @@ impl Process {\n         use sys::process::zircon::*;\n \n         let mut proc_info: zx_info_process_t = Default::default();\n-        let mut actual: zx_size_t = 0;\n-        let mut avail: zx_size_t = 0;\n+        let mut actual: size_t = 0;\n+        let mut avail: size_t = 0;\n \n         unsafe {\n             zx_cvt(zx_object_wait_one(self.handle.raw(), ZX_TASK_TERMINATED,\n@@ -171,8 +171,8 @@ impl Process {\n         use sys::process::zircon::*;\n \n         let mut proc_info: zx_info_process_t = Default::default();\n-        let mut actual: zx_size_t = 0;\n-        let mut avail: zx_size_t = 0;\n+        let mut actual: size_t = 0;\n+        let mut avail: size_t = 0;\n \n         unsafe {\n             let status = zx_object_wait_one(self.handle.raw(), ZX_TASK_TERMINATED,"}, {"sha": "90864e6ef3ff28589fa835f0b9a6e6c48f2defec", "filename": "src/libstd/sys/unix/process/zircon.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/150b625a07f135d0a5e1693adf2b14315709779e/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fzircon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/150b625a07f135d0a5e1693adf2b14315709779e/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fzircon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fzircon.rs?ref=150b625a07f135d0a5e1693adf2b14315709779e", "patch": "@@ -15,15 +15,13 @@ use io;\n use os::raw::c_char;\n use u64;\n \n-use libc::{c_int, c_void};\n+use libc::{c_int, c_void, size_t};\n \n-pub type zx_handle_t = i32;\n+pub type zx_handle_t = u32;\n pub type zx_vaddr_t = usize;\n pub type zx_rights_t = u32;\n pub type zx_status_t = i32;\n \n-pub type zx_size_t = usize;\n-\n pub const ZX_HANDLE_INVALID: zx_handle_t = 0;\n \n pub type zx_time_t = u64;\n@@ -115,36 +113,37 @@ extern {\n                               pending: *mut zx_signals_t) -> zx_status_t;\n \n     pub fn zx_object_get_info(handle: zx_handle_t, topic: u32, buffer: *mut c_void,\n-                              buffer_size: zx_size_t, actual_size: *mut zx_size_t,\n-                              avail: *mut zx_size_t) -> zx_status_t;\n+                              buffer_size: size_t, actual_size: *mut size_t,\n+                              avail: *mut size_t) -> zx_status_t;\n }\n \n // From `enum special_handles` in system/ulib/launchpad/launchpad.c\n // HND_LOADER_SVC = 0\n // HND_EXEC_VMO = 1\n-pub const HND_SPECIAL_COUNT: usize = 2;\n+// HND_SEGMENTS_VMAR = 2\n+const HND_SPECIAL_COUNT: c_int = 3;\n \n #[repr(C)]\n pub struct launchpad_t {\n     argc: u32,\n     envc: u32,\n     args: *const c_char,\n-    args_len: usize,\n+    args_len: size_t,\n     env: *const c_char,\n-    env_len: usize,\n+    env_len: size_t,\n \n     handles: *mut zx_handle_t,\n     handles_info: *mut u32,\n-    handle_count: usize,\n-    handle_alloc: usize,\n+    handle_count: size_t,\n+    handle_alloc: size_t,\n \n     entry: zx_vaddr_t,\n     base: zx_vaddr_t,\n     vdso_base: zx_vaddr_t,\n \n-    stack_size: usize,\n+    stack_size: size_t,\n \n-    special_handles: [zx_handle_t; HND_SPECIAL_COUNT],\n+    special_handles: [zx_handle_t; HND_SPECIAL_COUNT as usize],\n     loader_message: bool,\n }\n "}]}