{"sha": "9159b1eef891d35c5153b6e4027a1dd7d158e61b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNTliMWVlZjg5MWQzNWM1MTUzYjZlNDAyN2ExZGQ3ZDE1OGU2MWI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-30T08:41:44Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-05T16:26:51Z"}, "message": "test some more vec ptr invalidation", "tree": {"sha": "72d630bb88d5b8064cfb6f73f6574f428125af87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72d630bb88d5b8064cfb6f73f6574f428125af87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9159b1eef891d35c5153b6e4027a1dd7d158e61b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9159b1eef891d35c5153b6e4027a1dd7d158e61b", "html_url": "https://github.com/rust-lang/rust/commit/9159b1eef891d35c5153b6e4027a1dd7d158e61b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9159b1eef891d35c5153b6e4027a1dd7d158e61b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8444deb64b1175152c98bd772a3fd445a77ac6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8444deb64b1175152c98bd772a3fd445a77ac6e", "html_url": "https://github.com/rust-lang/rust/commit/b8444deb64b1175152c98bd772a3fd445a77ac6e"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "5304e3ed71a8e2a5bb9b8717707bdcdd80daa13c", "filename": "tests/run-pass/vec.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9159b1eef891d35c5153b6e4027a1dd7d158e61b/tests%2Frun-pass%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9159b1eef891d35c5153b6e4027a1dd7d158e61b/tests%2Frun-pass%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fvec.rs?ref=9159b1eef891d35c5153b6e4027a1dd7d158e61b", "patch": "@@ -83,12 +83,25 @@ fn vec_extend_ptr_stable() {\n     let mut v = Vec::with_capacity(10);\n     v.push(0);\n     let v0 = unsafe { &*(&v[0] as *const _) }; // laundering the lifetime -- we take care that `v` does not reallocate, so that's okay.\n+    // `slice::Iter` (with `T: Copy`) specialization\n     v.extend(&[1]);\n     let _val = *v0;\n+    // `vec::IntoIter` specialization\n     v.extend(vec![2]);\n     let _val = *v0;\n+    // `TrustedLen` specialization\n     v.extend(std::iter::once(3));\n     let _val = *v0;\n+    // base case\n+    v.extend(std::iter::once(3).filter(|_| true));\n+    let _val = *v0;\n+}\n+\n+fn vec_truncate_ptr_stable() {\n+    let mut v = vec![0; 10];\n+    let v0 = unsafe { &*(&v[0] as *const _) }; // laundering the lifetime -- we take care that `v` does not reallocate, so that's okay.\n+    v.truncate(5);\n+    let _val = *v0;\n }\n \n fn main() {\n@@ -112,4 +125,5 @@ fn main() {\n \n     vec_push_ptr_stable();\n     vec_extend_ptr_stable();\n+    vec_truncate_ptr_stable();\n }"}]}