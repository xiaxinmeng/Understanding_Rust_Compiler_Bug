{"sha": "f474c0084a23207f89bd082b441bfb4701c8c2dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NzRjMDA4NGEyMzIwN2Y4OWJkMDgyYjQ0MWJmYjQ3MDFjOGMyZGM=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-01-01T23:48:58Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-01-01T23:50:52Z"}, "message": "Added test", "tree": {"sha": "eb05192ddbab7c70b6df1a670bfeeebe91cb5bce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb05192ddbab7c70b6df1a670bfeeebe91cb5bce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f474c0084a23207f89bd082b441bfb4701c8c2dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f474c0084a23207f89bd082b441bfb4701c8c2dc", "html_url": "https://github.com/rust-lang/rust/commit/f474c0084a23207f89bd082b441bfb4701c8c2dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f474c0084a23207f89bd082b441bfb4701c8c2dc/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f639854121261f55863dbf2a88c626abb07247a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f639854121261f55863dbf2a88c626abb07247a", "html_url": "https://github.com/rust-lang/rust/commit/4f639854121261f55863dbf2a88c626abb07247a"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "d106bf713412e3b8bcfadeb2391e543587997010", "filename": "src/test/ui/match/match-same-name-enum-variant.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f474c0084a23207f89bd082b441bfb4701c8c2dc/src%2Ftest%2Fui%2Fmatch%2Fmatch-same-name-enum-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f474c0084a23207f89bd082b441bfb4701c8c2dc/src%2Ftest%2Fui%2Fmatch%2Fmatch-same-name-enum-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-same-name-enum-variant.rs?ref=f474c0084a23207f89bd082b441bfb4701c8c2dc", "patch": "@@ -0,0 +1,33 @@\n+// Test for issue #67776: binding named the same as enum variant\n+// should report a warning even when matching against a borrow\n+\n+// check-pass\n+\n+#![allow(unused_variables)]\n+#![allow(non_snake_case)]\n+\n+enum Foo {\n+    Bar,\n+    Baz,\n+}\n+\n+\n+fn fn2(e: Foo) {\n+    match e {\n+        Bar => println!(\"A\"),\n+        //~^ WARNING named the same as one of the variants of the type `Foo`\n+        Baz => println!(\"B\"),\n+        //~^ WARNING named the same as one of the variants of the type `Foo`\n+    }\n+}\n+\n+fn fn1(e: &Foo) {\n+    match e {\n+        Bar => println!(\"A\"),\n+        //~^ WARNING named the same as one of the variants of the type `Foo`\n+        Baz => println!(\"B\"),\n+        //~^ WARNING named the same as one of the variants of the type `Foo`\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "cadf5e6cdeeab4d6a9aa9343f7d3fbc3eb75f9b6", "filename": "src/test/ui/match/match-same-name-enum-variant.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f474c0084a23207f89bd082b441bfb4701c8c2dc/src%2Ftest%2Fui%2Fmatch%2Fmatch-same-name-enum-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f474c0084a23207f89bd082b441bfb4701c8c2dc/src%2Ftest%2Fui%2Fmatch%2Fmatch-same-name-enum-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-same-name-enum-variant.stderr?ref=f474c0084a23207f89bd082b441bfb4701c8c2dc", "patch": "@@ -0,0 +1,24 @@\n+warning[E0170]: pattern binding `Bar` is named the same as one of the variants of the type `Foo`\n+  --> $DIR/match-same-name-enum-variant.rs:14:9\n+   |\n+LL |         Bar => println!(\"A\"),\n+   |         ^^^ help: to match on the variant, qualify the path: `Foo::Bar`\n+\n+warning[E0170]: pattern binding `Baz` is named the same as one of the variants of the type `Foo`\n+  --> $DIR/match-same-name-enum-variant.rs:16:9\n+   |\n+LL |         Baz => println!(\"B\"),\n+   |         ^^^ help: to match on the variant, qualify the path: `Foo::Baz`\n+\n+warning[E0170]: pattern binding `Bar` is named the same as one of the variants of the type `Foo`\n+  --> $DIR/match-same-name-enum-variant.rs:23:9\n+   |\n+LL |         Bar => println!(\"A\"),\n+   |         ^^^ help: to match on the variant, qualify the path: `Foo::Bar`\n+\n+warning[E0170]: pattern binding `Baz` is named the same as one of the variants of the type `Foo`\n+  --> $DIR/match-same-name-enum-variant.rs:25:9\n+   |\n+LL |         Baz => println!(\"B\"),\n+   |         ^^^ help: to match on the variant, qualify the path: `Foo::Baz`\n+"}]}