{"sha": "9d613c27b74e7192d21e52ba7f552ce9c542c585", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNjEzYzI3Yjc0ZTcxOTJkMjFlNTJiYTdmNTUyY2U5YzU0MmM1ODU=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-03T17:00:22Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-03T17:06:31Z"}, "message": "Do not promote union field accesses", "tree": {"sha": "610257c0c637c5932683218d0cacf631dc84d729", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/610257c0c637c5932683218d0cacf631dc84d729"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d613c27b74e7192d21e52ba7f552ce9c542c585", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d613c27b74e7192d21e52ba7f552ce9c542c585", "html_url": "https://github.com/rust-lang/rust/commit/9d613c27b74e7192d21e52ba7f552ce9c542c585", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d613c27b74e7192d21e52ba7f552ce9c542c585/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3575be60eab140e69e5a75fe5c3b4119c2a17179", "url": "https://api.github.com/repos/rust-lang/rust/commits/3575be60eab140e69e5a75fe5c3b4119c2a17179", "html_url": "https://github.com/rust-lang/rust/commit/3575be60eab140e69e5a75fe5c3b4119c2a17179"}], "stats": {"total": 57, "additions": 54, "deletions": 3}, "files": [{"sha": "f3fba5b47be14080d99de722ae123fc29a3ba1b8", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9d613c27b74e7192d21e52ba7f552ce9c542c585/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d613c27b74e7192d21e52ba7f552ce9c542c585/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=9d613c27b74e7192d21e52ba7f552ce9c542c585", "patch": "@@ -566,8 +566,14 @@ impl<'a, 'tcx> Visitor<'tcx> for Qualifier<'a, 'tcx, 'tcx> {\n \n                         ProjectionElem::Field(..) |\n                         ProjectionElem::Index(_) => {\n-                            if this.mode != Mode::Fn &&\n-                               this.qualif.intersects(Qualif::STATIC) {\n+                            if this.mode == Mode::Fn {\n+                                let base_ty = proj.base.ty(this.mir, this.tcx).to_ty(this.tcx);\n+                                if let Some(def) = base_ty.ty_adt_def() {\n+                                    if def.is_union() {\n+                                        this.not_const();\n+                                    }\n+                                }\n+                            } else if this.qualif.intersects(Qualif::STATIC) {\n                                 span_err!(this.tcx.sess, this.span, E0494,\n                                           \"cannot refer to the interior of another \\\n                                            static, use a constant instead\");"}, {"sha": "82ac112b534e9f5dd317633a0209cf903de0866a", "filename": "src/librustc_passes/rvalue_promotion.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9d613c27b74e7192d21e52ba7f552ce9c542c585/src%2Flibrustc_passes%2Frvalue_promotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d613c27b74e7192d21e52ba7f552ce9c542c585/src%2Flibrustc_passes%2Frvalue_promotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Frvalue_promotion.rs?ref=9d613c27b74e7192d21e52ba7f552ce9c542c585", "patch": "@@ -445,9 +445,16 @@ fn check_expr<'a, 'tcx>(v: &mut CheckCrateVisitor<'a, 'tcx>, e: &hir::Expr, node\n             }\n         }\n \n+        hir::ExprField(ref expr, _) => {\n+            if let Some(def) = v.tables.expr_ty(expr).ty_adt_def() {\n+                if def.is_union() {\n+                    v.promotable = false\n+                }\n+            }\n+        }\n+\n         hir::ExprBlock(..) |\n         hir::ExprIndex(..) |\n-        hir::ExprField(..) |\n         hir::ExprArray(_) |\n         hir::ExprType(..) |\n         hir::ExprTup(..) => {}"}, {"sha": "714d7a4fc8b27c26a20606783ad388ffe251556e", "filename": "src/test/ui/const-eval/union_promotion.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9d613c27b74e7192d21e52ba7f552ce9c542c585/src%2Ftest%2Fui%2Fconst-eval%2Funion_promotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d613c27b74e7192d21e52ba7f552ce9c542c585/src%2Ftest%2Fui%2Fconst-eval%2Funion_promotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Funion_promotion.rs?ref=9d613c27b74e7192d21e52ba7f552ce9c542c585", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(const_err)]\n+\n+union Foo {\n+    a: &'static u32,\n+    b: usize,\n+}\n+\n+fn main() {\n+    let x: &'static bool = &unsafe { //~ borrowed value does not live long enough\n+        Foo { a: &1 }.b == Foo { a: &2 }.b\n+    };\n+}"}, {"sha": "b4aa91f2de723696bd269df9d1b547d4579ef593", "filename": "src/test/ui/const-eval/union_promotion.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9d613c27b74e7192d21e52ba7f552ce9c542c585/src%2Ftest%2Fui%2Fconst-eval%2Funion_promotion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9d613c27b74e7192d21e52ba7f552ce9c542c585/src%2Ftest%2Fui%2Fconst-eval%2Funion_promotion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Funion_promotion.stderr?ref=9d613c27b74e7192d21e52ba7f552ce9c542c585", "patch": "@@ -0,0 +1,16 @@\n+error[E0597]: borrowed value does not live long enough\n+  --> $DIR/union_promotion.rs:19:29\n+   |\n+LL |       let x: &'static bool = &unsafe { //~ borrowed value does not live long enough\n+   |  _____________________________^\n+LL | |         Foo { a: &1 }.b == Foo { a: &2 }.b\n+LL | |     };\n+   | |_____^ temporary value does not live long enough\n+LL |   }\n+   |   - temporary value only lives until here\n+   |\n+   = note: borrowed value must be valid for the static lifetime...\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}]}