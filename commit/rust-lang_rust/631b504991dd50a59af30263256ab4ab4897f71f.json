{"sha": "631b504991dd50a59af30263256ab4ab4897f71f", "node_id": "C_kwDOAAsO6NoAKDYzMWI1MDQ5OTFkZDUwYTU5YWYzMDI2MzI1NmFiNGFiNDg5N2Y3MWY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-17T13:23:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-17T13:23:22Z"}, "message": "Merge #11741\n\n11741: Emit #[must_use] in Generate enum is_variant assist r=lnicola a=lnicola\n\nbors r+\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "74c98ef6984710b6c8638e9e795272409ddcde0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74c98ef6984710b6c8638e9e795272409ddcde0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/631b504991dd50a59af30263256ab4ab4897f71f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiMzZKCRBK7hj4Ov3rIwAABToIAJZ6aTYApnSMpYN+iGDCTZUG\nucdOU9Acvz3f3JKxIhebySP19R1yfOlCNv0kFPbMRIjxxl9QppPEHb68cQQ5RrJj\n40EjlFk0Pi6h9ITu5CCI5qgu+pbk8lt3SoBrs2DiVcoG/NBkrXmEIhlNzlRL/btx\nhxQJiO93Q1AySXUNkXOW7M49mJA6sgAZZ3pJPoMHevPaZwossj3zWYONWpa8kz30\nH+IgOhmKbrfBGA4rkuvMgmq9MZPW/Co/ksJfrmolYCCrPszWJPJmAsrpgxibcP/G\nWGf2u3EU2fxwAucIIJZJTjbePt8BbaTlDBX0f5LJUInE5jRwOGLYYARZHrIQEJY=\n=CaI4\n-----END PGP SIGNATURE-----\n", "payload": "tree 74c98ef6984710b6c8638e9e795272409ddcde0f\nparent 0a18e4355a38bd0657e2083a81198f47b76857b6\nparent de53232ada5138d44563ee13fb0fc36289449caa\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1647523402 +0000\ncommitter GitHub <noreply@github.com> 1647523402 +0000\n\nMerge #11741\n\n11741: Emit #[must_use] in Generate enum is_variant assist r=lnicola a=lnicola\n\nbors r+\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/631b504991dd50a59af30263256ab4ab4897f71f", "html_url": "https://github.com/rust-lang/rust/commit/631b504991dd50a59af30263256ab4ab4897f71f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/631b504991dd50a59af30263256ab4ab4897f71f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a18e4355a38bd0657e2083a81198f47b76857b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a18e4355a38bd0657e2083a81198f47b76857b6", "html_url": "https://github.com/rust-lang/rust/commit/0a18e4355a38bd0657e2083a81198f47b76857b6"}, {"sha": "de53232ada5138d44563ee13fb0fc36289449caa", "url": "https://api.github.com/repos/rust-lang/rust/commits/de53232ada5138d44563ee13fb0fc36289449caa", "html_url": "https://github.com/rust-lang/rust/commit/de53232ada5138d44563ee13fb0fc36289449caa"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "863ada79ba44c9020051a2f793365951da8b016c", "filename": "crates/ide_assists/src/handlers/generate_enum_is_method.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/631b504991dd50a59af30263256ab4ab4897f71f/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_is_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/631b504991dd50a59af30263256ab4ab4897f71f/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_is_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_is_method.rs?ref=631b504991dd50a59af30263256ab4ab4897f71f", "patch": "@@ -30,6 +30,7 @@ use crate::{\n //     /// Returns `true` if the version is [`Minor`].\n //     ///\n //     /// [`Minor`]: Version::Minor\n+//     #[must_use]\n //     fn is_minor(&self) -> bool {\n //         matches!(self, Self::Minor)\n //     }\n@@ -63,6 +64,7 @@ pub(crate) fn generate_enum_is_method(acc: &mut Assists, ctx: &AssistContext) ->\n                 \"    /// Returns `true` if the {} is [`{variant}`].\n     ///\n     /// [`{variant}`]: {}::{variant}\n+    #[must_use]\n     {}fn {}(&self) -> bool {{\n         matches!(self, Self::{variant}{})\n     }}\",\n@@ -105,6 +107,7 @@ impl Variant {\n     /// Returns `true` if the variant is [`Minor`].\n     ///\n     /// [`Minor`]: Variant::Minor\n+    #[must_use]\n     fn is_minor(&self) -> bool {\n         matches!(self, Self::Minor)\n     }\n@@ -151,6 +154,7 @@ impl Variant {\n     /// Returns `true` if the variant is [`Minor`].\n     ///\n     /// [`Minor`]: Variant::Minor\n+    #[must_use]\n     fn is_minor(&self) -> bool {\n         matches!(self, Self::Minor(..))\n     }\n@@ -178,6 +182,7 @@ impl Variant {\n     /// Returns `true` if the variant is [`Minor`].\n     ///\n     /// [`Minor`]: Variant::Minor\n+    #[must_use]\n     fn is_minor(&self) -> bool {\n         matches!(self, Self::Minor { .. })\n     }\n@@ -197,6 +202,7 @@ impl Variant {\n     /// Returns `true` if the variant is [`Undefined`].\n     ///\n     /// [`Undefined`]: Variant::Undefined\n+    #[must_use]\n     fn is_undefined(&self) -> bool {\n         matches!(self, Self::Undefined)\n     }\n@@ -224,6 +230,7 @@ impl Variant {\n     /// Returns `true` if the variant is [`Minor`].\n     ///\n     /// [`Minor`]: Variant::Minor\n+    #[must_use]\n     pub(crate) fn is_minor(&self) -> bool {\n         matches!(self, Self::Minor)\n     }\n@@ -246,6 +253,7 @@ impl Variant {\n     /// Returns `true` if the variant is [`Minor`].\n     ///\n     /// [`Minor`]: Variant::Minor\n+    #[must_use]\n     fn is_minor(&self) -> bool {\n         matches!(self, Self::Minor)\n     }\n@@ -260,13 +268,15 @@ impl Variant {\n     /// Returns `true` if the variant is [`Minor`].\n     ///\n     /// [`Minor`]: Variant::Minor\n+    #[must_use]\n     fn is_minor(&self) -> bool {\n         matches!(self, Self::Minor)\n     }\n \n     /// Returns `true` if the variant is [`Major`].\n     ///\n     /// [`Major`]: Variant::Major\n+    #[must_use]\n     fn is_major(&self) -> bool {\n         matches!(self, Self::Major)\n     }\n@@ -294,6 +304,7 @@ impl GeneratorState {\n     /// Returns `true` if the generator state is [`Complete`].\n     ///\n     /// [`Complete`]: GeneratorState::Complete\n+    #[must_use]\n     fn is_complete(&self) -> bool {\n         matches!(self, Self::Complete)\n     }"}, {"sha": "bf69a94c27124d512116665273e34c25947d354a", "filename": "crates/ide_assists/src/tests/generated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/631b504991dd50a59af30263256ab4ab4897f71f/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/631b504991dd50a59af30263256ab4ab4897f71f/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=631b504991dd50a59af30263256ab4ab4897f71f", "patch": "@@ -922,6 +922,7 @@ impl Version {\n     /// Returns `true` if the version is [`Minor`].\n     ///\n     /// [`Minor`]: Version::Minor\n+    #[must_use]\n     fn is_minor(&self) -> bool {\n         matches!(self, Self::Minor)\n     }"}]}