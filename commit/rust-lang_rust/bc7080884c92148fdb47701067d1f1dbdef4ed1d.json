{"sha": "bc7080884c92148fdb47701067d1f1dbdef4ed1d", "node_id": "C_kwDOAAsO6NoAKGJjNzA4MDg4NGM5MjE0OGZkYjQ3NzAxMDY3ZDFmMWRiZGVmNGVkMWQ", "commit": {"author": {"name": "btwotwo", "email": "10519967+btwotwo@users.noreply.github.com", "date": "2022-10-06T14:27:53Z"}, "committer": {"name": "btwotwo", "email": "10519967+btwotwo@users.noreply.github.com", "date": "2022-10-06T14:32:20Z"}, "message": "Add tests for env var completion", "tree": {"sha": "c52ab226ff13bc7264e8e3f7d89526c9077e4d63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c52ab226ff13bc7264e8e3f7d89526c9077e4d63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc7080884c92148fdb47701067d1f1dbdef4ed1d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE7WZLfNy5oeDQue2p1FagNJ1zoKMFAmM+5vQACgkQ1FagNJ1z\noKOAMQ//aQ3AZKDP8JwU3isMNYmVjwitjL4IS6vmW5kdc6kE3Rb3DC57pf8h2WiE\ngOm+ffRmWAgu2BoJDh04+YFsrxZpRybDVFQUK8dswnHVcvHfLek5AcQ1e+uBuuL6\nLir9xKJD38pOTqizU5/cegI5on9kG36BbWX7SNoatli2taRfVx/ZaYoXnxA2qN84\n30NMehykPTynave/U9ZXcrJrVlZkhGM6XLdJHi8OChGO/uqHj44mPgqFSGoUHYvE\nkBQzUd4IowvY+Xc/c6daFENSD+9VbevuqdS1Pg+KNP+BCemDx1BLv0GFr2yzDpeR\nyXs+IfQcdGuQBgtqhfmOc7m6CXBSAk8bxA1efyDFvceknKPWFR6CJ9jAXdjDPQG3\neELZllHCz9cv/fuD2sOqUY85UbubjWYZ6XpE5zK85I+Xa9PBUjkiJEIsqI2qgZc0\nWgStty7g6BLlx0MJ8Lj7GBKMldai7wj5MUgFrEz20iVeRpdYyajpeMLI7k+WQIip\nvND+yOlkbOht4fotqUXhlJOrQgM8PMj7x6mL0UmTAaw+DySCUMwBQmm39uqRM6yA\njoiySpKp/EfN0a27rA97roebl23XWuqCgoiPPDLgnUd+y9/wCTqIkXrzy6bskB7d\n2d67dCkeVFoyfFmLmMlWuwA3qH2ry7bCbbD4JTY+LqBtKvn4ZZo=\n=Oo8n\n-----END PGP SIGNATURE-----", "payload": "tree c52ab226ff13bc7264e8e3f7d89526c9077e4d63\nparent ddf68ea7c330ec4fef8564062af2a2e15dd5f45e\nauthor btwotwo <10519967+btwotwo@users.noreply.github.com> 1665066473 +0200\ncommitter btwotwo <10519967+btwotwo@users.noreply.github.com> 1665066740 +0200\n\nAdd tests for env var completion\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc7080884c92148fdb47701067d1f1dbdef4ed1d", "html_url": "https://github.com/rust-lang/rust/commit/bc7080884c92148fdb47701067d1f1dbdef4ed1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc7080884c92148fdb47701067d1f1dbdef4ed1d/comments", "author": {"login": "btwotwo", "id": 10519967, "node_id": "MDQ6VXNlcjEwNTE5OTY3", "avatar_url": "https://avatars.githubusercontent.com/u/10519967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btwotwo", "html_url": "https://github.com/btwotwo", "followers_url": "https://api.github.com/users/btwotwo/followers", "following_url": "https://api.github.com/users/btwotwo/following{/other_user}", "gists_url": "https://api.github.com/users/btwotwo/gists{/gist_id}", "starred_url": "https://api.github.com/users/btwotwo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btwotwo/subscriptions", "organizations_url": "https://api.github.com/users/btwotwo/orgs", "repos_url": "https://api.github.com/users/btwotwo/repos", "events_url": "https://api.github.com/users/btwotwo/events{/privacy}", "received_events_url": "https://api.github.com/users/btwotwo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "btwotwo", "id": 10519967, "node_id": "MDQ6VXNlcjEwNTE5OTY3", "avatar_url": "https://avatars.githubusercontent.com/u/10519967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btwotwo", "html_url": "https://github.com/btwotwo", "followers_url": "https://api.github.com/users/btwotwo/followers", "following_url": "https://api.github.com/users/btwotwo/following{/other_user}", "gists_url": "https://api.github.com/users/btwotwo/gists{/gist_id}", "starred_url": "https://api.github.com/users/btwotwo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btwotwo/subscriptions", "organizations_url": "https://api.github.com/users/btwotwo/orgs", "repos_url": "https://api.github.com/users/btwotwo/repos", "events_url": "https://api.github.com/users/btwotwo/events{/privacy}", "received_events_url": "https://api.github.com/users/btwotwo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddf68ea7c330ec4fef8564062af2a2e15dd5f45e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddf68ea7c330ec4fef8564062af2a2e15dd5f45e", "html_url": "https://github.com/rust-lang/rust/commit/ddf68ea7c330ec4fef8564062af2a2e15dd5f45e"}], "stats": {"total": 54, "additions": 44, "deletions": 10}, "files": [{"sha": "43d67f093e97700c0747d4b2fdaa7f0741fe6257", "filename": "crates/ide-completion/src/completions/env_vars.rs", "status": "modified", "additions": 44, "deletions": 10, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/bc7080884c92148fdb47701067d1f1dbdef4ed1d/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fenv_vars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc7080884c92148fdb47701067d1f1dbdef4ed1d/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fenv_vars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fenv_vars.rs?ref=bc7080884c92148fdb47701067d1f1dbdef4ed1d", "patch": "@@ -61,21 +61,55 @@ fn is_env_macro(string: &ast::String) -> bool {\n \n #[cfg(test)]\n mod tests {\n-    use expect_test::{expect, Expect};\n-    use crate::tests::{check_edit};\n+    use crate::tests::{check_edit, completion_list};\n+\n+    fn check(macro_name: &str) {\n+        check_edit(\"CARGO_BIN_NAME\",&format!(r#\"\n+            fn main() {{\n+                let foo = {}!(\"CAR$0\");\n+            }}\n+        \"#, macro_name), &format!(r#\"\n+            fn main() {{\n+                let foo = {}!(\"CARGO_BIN_NAME\");\n+            }}\n+        \"#, macro_name));\n+    }\n+    #[test]\n+    fn completes_env_variable_in_env() {\n+        check(\"env\")\n+    }\n \n     #[test]\n-    fn completes_env_variables() {\n-        check_edit(\"CARGO\", \n-        r#\"\n+    fn completes_env_variable_in_option_env() {\n+        check(\"option_env\");\n+    }\n+\n+    #[test]\n+    fn doesnt_complete_in_random_strings() {\n+        let fixture = r#\"\n             fn main() {\n-                let foo = env!(\"CA$0);\n+                let foo = \"CA$0\";\n             }\n-        \"#\n-        ,r#\"\n+        \"#;\n+\n+        let completions = completion_list(fixture);\n+        assert!(completions.is_empty(), \"Completions weren't empty: {}\", completions);\n+    }\n+\n+    #[test]\n+    fn doesnt_complete_in_random_macro() {\n+        let fixture = r#\"\n+            macro_rules! bar {\n+                ($($arg:tt)*) => { 0 }\n+            }\n+\n             fn main() {\n-                let foo = env!(\"CARGO);\n+                let foo = bar!(\"CA$0\");\n+\n             }\n-        \"#)\n+        \"#;\n+\n+        let completions = completion_list(fixture);\n+        assert!(completions.is_empty(), \"Completions weren't empty: {}\", completions);\n     }\n }\n\\ No newline at end of file"}]}