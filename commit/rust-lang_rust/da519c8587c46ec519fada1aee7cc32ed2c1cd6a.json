{"sha": "da519c8587c46ec519fada1aee7cc32ed2c1cd6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNTE5Yzg1ODdjNDZlYzUxOWZhZGExYWVlN2NjMzJlZDJjMWNkNmE=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-01-05T19:33:22Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-01-06T22:44:43Z"}, "message": "Eliminate a use of map::get in freevars\n\nmap::get is evil -- just say no!", "tree": {"sha": "f440787c47cef9da9612465485d0c47e2a09fd20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f440787c47cef9da9612465485d0c47e2a09fd20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da519c8587c46ec519fada1aee7cc32ed2c1cd6a", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da519c8587c46ec519fada1aee7cc32ed2c1cd6a", "html_url": "https://github.com/rust-lang/rust/commit/da519c8587c46ec519fada1aee7cc32ed2c1cd6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da519c8587c46ec519fada1aee7cc32ed2c1cd6a/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f3171ea8150953b30b79aed9a3f35f14b40c0ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f3171ea8150953b30b79aed9a3f35f14b40c0ba", "html_url": "https://github.com/rust-lang/rust/commit/4f3171ea8150953b30b79aed9a3f35f14b40c0ba"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "46ceb4257ff318ee97af2aa433d6ff424b41169e", "filename": "src/comp/middle/freevars.rs", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/da519c8587c46ec519fada1aee7cc32ed2c1cd6a/src%2Fcomp%2Fmiddle%2Ffreevars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da519c8587c46ec519fada1aee7cc32ed2c1cd6a/src%2Fcomp%2Fmiddle%2Ffreevars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffreevars.rs?ref=da519c8587c46ec519fada1aee7cc32ed2c1cd6a", "patch": "@@ -1,6 +1,7 @@\n // A pass that annotates for each loops and functions with the free\n // variables that they contain.\n \n+import syntax::print::pprust::path_to_str;\n import int;\n import std::map::*;\n import option::*;\n@@ -47,21 +48,27 @@ fn collect_freevars(def_map: resolve::def_map, blk: ast::blk)\n                 visit::visit_expr(expr, depth + 1, v);\n               }\n               ast::expr_path(path) {\n-                let def = def_map.get(expr.id), i = 0;\n-                while i < depth {\n-                    alt copy def {\n-                      ast::def_upvar(_, inner, _) { def = *inner; }\n-                      _ { break; }\n+                  let i = 0;\n+                  alt def_map.find(expr.id) {\n+                    none. { fail (\"Not found: \" + path_to_str(path)) }\n+                    some(df) {\n+                      let def = df;\n+                      while i < depth {\n+                        alt copy def {\n+                          ast::def_upvar(_, inner, _) { def = *inner; }\n+                          _ { break; }\n+                        }\n+                        i += 1;\n+                      }\n+                      if i == depth { // Made it to end of loop\n+                        let dnum = ast_util::def_id_of_def(def).node;\n+                        if !seen.contains_key(dnum) {\n+                           *refs += [@{def:def, span:expr.span}];\n+                           seen.insert(dnum, ());\n+                        }\n+                      }\n                     }\n-                    i += 1;\n-                }\n-                if i == depth { // Made it to end of loop\n-                    let dnum = ast_util::def_id_of_def(def).node;\n-                    if !seen.contains_key(dnum) {\n-                        *refs += [@{def:def, span:expr.span}];\n-                        seen.insert(dnum, ());\n-                    }\n-                }\n+                  }\n               }\n               _ { visit::visit_expr(expr, depth, v); }\n             }"}]}