{"sha": "5f808f6588c3e66d9e578d039dd77f0eb0ea053b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmODA4ZjY1ODhjM2U2NmQ5ZTU3OGQwMzlkZDc3ZjBlYjBlYTA1M2I=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-12-01T15:17:59Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-05-23T16:51:50Z"}, "message": "Update in_scope_traits_map", "tree": {"sha": "2b0c2fc165e237b9e6e245cda9cd2bf1fef9ef21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b0c2fc165e237b9e6e245cda9cd2bf1fef9ef21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f808f6588c3e66d9e578d039dd77f0eb0ea053b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f808f6588c3e66d9e578d039dd77f0eb0ea053b", "html_url": "https://github.com/rust-lang/rust/commit/5f808f6588c3e66d9e578d039dd77f0eb0ea053b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f808f6588c3e66d9e578d039dd77f0eb0ea053b/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb578794b0da323c963906555a5afe126f2d8644", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb578794b0da323c963906555a5afe126f2d8644", "html_url": "https://github.com/rust-lang/rust/commit/fb578794b0da323c963906555a5afe126f2d8644"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "99deadd9cb04057cf8acc1bf20c944dc767c8d68", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f808f6588c3e66d9e578d039dd77f0eb0ea053b/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f808f6588c3e66d9e578d039dd77f0eb0ea053b/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=5f808f6588c3e66d9e578d039dd77f0eb0ea053b", "patch": "@@ -637,7 +637,7 @@ rustc_queries! {\n             desc { \"computing whether impls specialize one another\" }\n         }\n         query in_scope_traits_map(_: DefIndex)\n-            -> Option<Lrc<FxHashMap<ItemLocalId, Lrc<StableVec<TraitCandidate>>>>> {\n+            -> Option<&'tcx FxHashMap<ItemLocalId, StableVec<TraitCandidate>>> {\n             eval_always\n             desc { \"traits in scope at a block\" }\n         }"}, {"sha": "2f3e35e081cc4f99ec650e464036e08bb9455b60", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5f808f6588c3e66d9e578d039dd77f0eb0ea053b/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f808f6588c3e66d9e578d039dd77f0eb0ea053b/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=5f808f6588c3e66d9e578d039dd77f0eb0ea053b", "patch": "@@ -1064,8 +1064,8 @@ pub struct GlobalCtxt<'tcx> {\n     /// Map indicating what traits are in scope for places where this\n     /// is relevant; generated by resolve.\n     trait_map: FxHashMap<DefIndex,\n-                         Lrc<FxHashMap<ItemLocalId,\n-                                       Lrc<StableVec<TraitCandidate>>>>>,\n+                         FxHashMap<ItemLocalId,\n+                                   StableVec<TraitCandidate>>>,\n \n     /// Export map produced by name resolution.\n     export_map: FxHashMap<DefId, Lrc<Vec<Export<hir::HirId>>>>,\n@@ -1305,13 +1305,11 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             None\n         };\n \n-        let mut trait_map: FxHashMap<_, Lrc<FxHashMap<_, _>>> = FxHashMap::default();\n+        let mut trait_map: FxHashMap<_, FxHashMap<_, _>> = FxHashMap::default();\n         for (k, v) in resolutions.trait_map {\n             let hir_id = hir.node_to_hir_id(k);\n             let map = trait_map.entry(hir_id.owner).or_default();\n-            Lrc::get_mut(map).unwrap()\n-                             .insert(hir_id.local_id,\n-                                     Lrc::new(StableVec::new(v)));\n+            map.insert(hir_id.local_id, StableVec::new(v));\n         }\n \n         GlobalCtxt {\n@@ -2979,9 +2977,9 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         lint::struct_lint_level(self.sess, lint, level, src, None, msg)\n     }\n \n-    pub fn in_scope_traits(self, id: HirId) -> Option<Lrc<StableVec<TraitCandidate>>> {\n+    pub fn in_scope_traits(self, id: HirId) -> Option<&'gcx StableVec<TraitCandidate>> {\n         self.in_scope_traits_map(id.owner)\n-            .and_then(|map| map.get(&id.local_id).cloned())\n+            .and_then(|map| map.get(&id.local_id))\n     }\n \n     pub fn named_region(self, id: HirId) -> Option<resolve_lifetime::Region> {\n@@ -3054,7 +3052,7 @@ fn ptr_eq<T, U>(t: *const T, u: *const U) -> bool {\n }\n \n pub fn provide(providers: &mut ty::query::Providers<'_>) {\n-    providers.in_scope_traits_map = |tcx, id| tcx.gcx.trait_map.get(&id).cloned();\n+    providers.in_scope_traits_map = |tcx, id| tcx.gcx.trait_map.get(&id);\n     providers.module_exports = |tcx, id| tcx.gcx.export_map.get(&id).cloned();\n     providers.crate_name = |tcx, id| {\n         assert_eq!(id, LOCAL_CRATE);"}]}