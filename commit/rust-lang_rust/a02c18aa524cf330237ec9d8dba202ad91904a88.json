{"sha": "a02c18aa524cf330237ec9d8dba202ad91904a88", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwMmMxOGFhNTI0Y2YzMzAyMzdlYzlkOGRiYTIwMmFkOTE5MDRhODg=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2017-02-21T12:04:45Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2017-03-03T02:15:39Z"}, "message": "Fix `token::Eof` spans.", "tree": {"sha": "4f918786ad827ea10df6696a8e7c4f670a311dd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f918786ad827ea10df6696a8e7c4f670a311dd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a02c18aa524cf330237ec9d8dba202ad91904a88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a02c18aa524cf330237ec9d8dba202ad91904a88", "html_url": "https://github.com/rust-lang/rust/commit/a02c18aa524cf330237ec9d8dba202ad91904a88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a02c18aa524cf330237ec9d8dba202ad91904a88/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6eaaf350ea683ae8b33b4a79422ad1a10ea0987", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6eaaf350ea683ae8b33b4a79422ad1a10ea0987", "html_url": "https://github.com/rust-lang/rust/commit/f6eaaf350ea683ae8b33b4a79422ad1a10ea0987"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "6e3724b5fd87b4ed33bbc27607ec101a084f5066", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a02c18aa524cf330237ec9d8dba202ad91904a88/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a02c18aa524cf330237ec9d8dba202ad91904a88/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=a02c18aa524cf330237ec9d8dba202ad91904a88", "patch": "@@ -223,7 +223,7 @@ impl TokenCursor {\n                 self.frame = frame;\n                 continue\n             } else {\n-                return TokenAndSpan { tok: token::Eof, sp: self.frame.span }\n+                return TokenAndSpan { tok: token::Eof, sp: syntax_pos::DUMMY_SP }\n             };\n \n             match tree {\n@@ -448,10 +448,14 @@ impl<'a> Parser<'a> {\n     }\n \n     fn next_tok(&mut self) -> TokenAndSpan {\n-        match self.desugar_doc_comments {\n+        let mut next = match self.desugar_doc_comments {\n             true => self.token_cursor.next_desugared(),\n             false => self.token_cursor.next(),\n+        };\n+        if next.sp == syntax_pos::DUMMY_SP {\n+            next.sp = self.prev_span;\n         }\n+        next\n     }\n \n     /// Convert a token to a string using self's reader"}]}