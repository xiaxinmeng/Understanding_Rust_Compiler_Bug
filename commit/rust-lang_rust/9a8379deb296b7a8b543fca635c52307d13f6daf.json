{"sha": "9a8379deb296b7a8b543fca635c52307d13f6daf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhODM3OWRlYjI5NmI3YThiNTQzZmNhNjM1YzUyMzA3ZDEzZjZkYWY=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-05-23T15:07:05Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-05-24T11:44:37Z"}, "message": "std: minor simplification to sync::deque.", "tree": {"sha": "2e955efff70c647d73beec50f46535904f564d6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e955efff70c647d73beec50f46535904f564d6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a8379deb296b7a8b543fca635c52307d13f6daf", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a8379deb296b7a8b543fca635c52307d13f6daf", "html_url": "https://github.com/rust-lang/rust/commit/9a8379deb296b7a8b543fca635c52307d13f6daf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a8379deb296b7a8b543fca635c52307d13f6daf/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e244d708461d5028066a59e70866f52517e7b85", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e244d708461d5028066a59e70866f52517e7b85", "html_url": "https://github.com/rust-lang/rust/commit/9e244d708461d5028066a59e70866f52517e7b85"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "46d6129ded8b81207207b45165e237504d9d387e", "filename": "src/libstd/sync/deque.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9a8379deb296b7a8b543fca635c52307d13f6daf/src%2Flibstd%2Fsync%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a8379deb296b7a8b543fca635c52307d13f6daf/src%2Flibstd%2Fsync%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fdeque.rs?ref=9a8379deb296b7a8b543fca635c52307d13f6daf", "patch": "@@ -54,7 +54,7 @@ use clone::Clone;\n use iter::{range, Iterator};\n use kinds::Send;\n use kinds::marker;\n-use mem::{forget, min_align_of, size_of, transmute};\n+use mem::{forget, min_align_of, size_of, transmute, overwrite};\n use ops::Drop;\n use option::{Option, Some, None};\n use owned::Box;\n@@ -371,20 +371,20 @@ impl<T: Send> Buffer<T> {\n     // Apparently LLVM cannot optimize (foo % (1 << bar)) into this implicitly\n     fn mask(&self) -> int { (1 << self.log_size) - 1 }\n \n+    unsafe fn elem(&self, i: int) -> *T { self.storage.offset(i & self.mask()) }\n+\n     // This does not protect against loading duplicate values of the same cell,\n     // nor does this clear out the contents contained within. Hence, this is a\n     // very unsafe method which the caller needs to treat specially in case a\n     // race is lost.\n     unsafe fn get(&self, i: int) -> T {\n-        ptr::read(self.storage.offset(i & self.mask()))\n+        ptr::read(self.elem(i))\n     }\n \n     // Unsafe because this unsafely overwrites possibly uninitialized or\n     // initialized data.\n     unsafe fn put(&self, i: int, t: T) {\n-        let ptr = self.storage.offset(i & self.mask());\n-        ptr::copy_nonoverlapping_memory(ptr as *mut T, &t as *T, 1);\n-        forget(t);\n+        overwrite(self.elem(i) as *mut T, t);\n     }\n \n     // Again, unsafe because this has incredibly dubious ownership violations."}]}