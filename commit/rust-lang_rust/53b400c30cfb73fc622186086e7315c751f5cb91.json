{"sha": "53b400c30cfb73fc622186086e7315c751f5cb91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzYjQwMGMzMGNmYjczZmM2MjIxODYwODZlNzMxNWM3NTFmNWNiOTE=", "commit": {"author": {"name": "Clar Fon", "email": "them@lightdark.xyz", "date": "2018-12-18T01:35:23Z"}, "committer": {"name": "Clar Fon", "email": "them@lightdark.xyz", "date": "2019-01-22T22:45:11Z"}, "message": "Don't expose FlattenCompat to Iterator", "tree": {"sha": "8677d8f9b803395c658123edf96c00670d7e2507", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8677d8f9b803395c658123edf96c00670d7e2507"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53b400c30cfb73fc622186086e7315c751f5cb91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53b400c30cfb73fc622186086e7315c751f5cb91", "html_url": "https://github.com/rust-lang/rust/commit/53b400c30cfb73fc622186086e7315c751f5cb91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53b400c30cfb73fc622186086e7315c751f5cb91/comments", "author": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e4177311adbeb7a1fa64c1f4e1f6610cf96973d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e4177311adbeb7a1fa64c1f4e1f6610cf96973d", "html_url": "https://github.com/rust-lang/rust/commit/7e4177311adbeb7a1fa64c1f4e1f6610cf96973d"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "40f6865d38bcf036c827b77288e2e9a575572aac", "filename": "src/libcore/iter/adapters/flatten.rs", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/53b400c30cfb73fc622186086e7315c751f5cb91/src%2Flibcore%2Fiter%2Fadapters%2Fflatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b400c30cfb73fc622186086e7315c751f5cb91/src%2Flibcore%2Fiter%2Fadapters%2Fflatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fflatten.rs?ref=53b400c30cfb73fc622186086e7315c751f5cb91", "patch": "@@ -14,7 +14,12 @@ use super::Map;\n #[must_use = \"iterators are lazy and do nothing unless consumed\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct FlatMap<I, U: IntoIterator, F> {\n-    pub(in super::super) inner: FlattenCompat<Map<I, F>, <U as IntoIterator>::IntoIter>\n+    inner: FlattenCompat<Map<I, F>, <U as IntoIterator>::IntoIter>\n+}\n+impl<I: Iterator, U: IntoIterator, F: FnMut(I::Item) -> U> FlatMap<I, U, F> {\n+    pub(in super::super) fn new(iter: I, f: F) -> FlatMap<I, U, F> {\n+        FlatMap { inner: FlattenCompat::new(iter.map(f)) }\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -100,7 +105,13 @@ impl<I, U, F> FusedIterator for FlatMap<I, U, F>\n #[stable(feature = \"iterator_flatten\", since = \"1.29.0\")]\n pub struct Flatten<I: Iterator>\n where I::Item: IntoIterator {\n-    pub(in super::super) inner: FlattenCompat<I, <I::Item as IntoIterator>::IntoIter>,\n+    inner: FlattenCompat<I, <I::Item as IntoIterator>::IntoIter>,\n+}\n+impl<I: Iterator> Flatten<I>\n+where I::Item: IntoIterator {\n+    pub(in super::super) fn new(iter: I) -> Flatten<I> {\n+        Flatten { inner: FlattenCompat::new(iter) }\n+    }\n }\n \n #[stable(feature = \"iterator_flatten\", since = \"1.29.0\")]\n@@ -177,19 +188,20 @@ impl<I, U> FusedIterator for Flatten<I>\n     where I: FusedIterator, U: Iterator,\n           I::Item: IntoIterator<IntoIter = U, Item = U::Item> {}\n \n-/// Adapts an iterator by flattening it, for use in `flatten()` and `flat_map()`.\n-pub(in super::super) fn flatten_compat<I, U>(iter: I) -> FlattenCompat<I, U> {\n-    FlattenCompat { iter, frontiter: None, backiter: None }\n-}\n-\n /// Real logic of both `Flatten` and `FlatMap` which simply delegate to\n /// this type.\n #[derive(Clone, Debug)]\n-pub(in super::super) struct FlattenCompat<I, U> {\n+struct FlattenCompat<I, U> {\n     iter: I,\n     frontiter: Option<U>,\n     backiter: Option<U>,\n }\n+impl<I, U> FlattenCompat<I, U> {\n+    /// Adapts an iterator by flattening it, for use in `flatten()` and `flat_map()`.\n+    fn new(iter: I) -> FlattenCompat<I, U> {\n+        FlattenCompat { iter, frontiter: None, backiter: None }\n+    }\n+}\n \n impl<I, U> Iterator for FlattenCompat<I, U>\n     where I: Iterator, U: Iterator,"}, {"sha": "869329a007f61d5ef8c2561f235a2c8a0d0aca1c", "filename": "src/libcore/iter/adapters/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/53b400c30cfb73fc622186086e7315c751f5cb91/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b400c30cfb73fc622186086e7315c751f5cb91/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs?ref=53b400c30cfb73fc622186086e7315c751f5cb91", "patch": "@@ -13,7 +13,6 @@ mod zip;\n pub use self::chain::Chain;\n pub use self::flatten::{FlatMap, Flatten};\n pub use self::zip::Zip;\n-pub(super) use self::flatten::{FlattenCompat, flatten_compat};\n pub(super) use self::zip::ZipImpl;\n pub(crate) use self::zip::TrustedRandomAccess;\n "}, {"sha": "024b9ff9c4f82af5cc42479cc3aa1ebc50eda229", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/53b400c30cfb73fc622186086e7315c751f5cb91/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b400c30cfb73fc622186086e7315c751f5cb91/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=53b400c30cfb73fc622186086e7315c751f5cb91", "patch": "@@ -353,7 +353,7 @@ pub use self::adapters::Flatten;\n #[unstable(feature = \"iter_copied\", issue = \"57127\")]\n pub use self::adapters::Copied;\n \n-use self::adapters::{flatten_compat, ZipImpl};\n+use self::adapters::ZipImpl;\n pub(crate) use self::adapters::TrustedRandomAccess;\n \n mod range;"}, {"sha": "2a3079838b035f29a8d422bc4464be842f023c92", "filename": "src/libcore/iter/traits/iterator.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/53b400c30cfb73fc622186086e7315c751f5cb91/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b400c30cfb73fc622186086e7315c751f5cb91/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs?ref=53b400c30cfb73fc622186086e7315c751f5cb91", "patch": "@@ -3,7 +3,7 @@ use ops::Try;\n \n use super::super::LoopState;\n use super::super::{Chain, Cycle, Copied, Cloned, Enumerate, Filter, FilterMap, Fuse};\n-use super::super::{Flatten, FlatMap, flatten_compat};\n+use super::super::{Flatten, FlatMap};\n use super::super::{Inspect, Map, Peekable, Scan, Skip, SkipWhile, StepBy, Take, TakeWhile, Rev};\n use super::super::{Zip, Sum, Product};\n use super::super::{FromIterator, ZipImpl};\n@@ -1098,7 +1098,7 @@ pub trait Iterator {\n     fn flat_map<U, F>(self, f: F) -> FlatMap<Self, U, F>\n         where Self: Sized, U: IntoIterator, F: FnMut(Self::Item) -> U,\n     {\n-        FlatMap { inner: flatten_compat(self.map(f)) }\n+        FlatMap::new(self, f)\n     }\n \n     /// Creates an iterator that flattens nested structure.\n@@ -1166,7 +1166,7 @@ pub trait Iterator {\n     #[stable(feature = \"iterator_flatten\", since = \"1.29.0\")]\n     fn flatten(self) -> Flatten<Self>\n     where Self: Sized, Self::Item: IntoIterator {\n-        Flatten { inner: flatten_compat(self) }\n+        Flatten::new(self)\n     }\n \n     /// Creates an iterator which ends after the first [`None`]."}]}