{"sha": "816a34aca23f3ebd0fddf79ebdf96c9fae976f58", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxNmEzNGFjYTIzZjNlYmQwZmRkZjc5ZWJkZjk2YzlmYWU5NzZmNTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-08T07:05:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-08T07:05:19Z"}, "message": "Auto merge of #38146 - kali:master, r=alexcrichton\n\nfix objc ABI in std::env::args\n\niOS use different calling convention for `objc_msgSend` depending on the platform. armv7 expect good old variadic arguments, but aarch64 wants \"normal\" convention: `objc_msgSend` has to be called mimicking the actual callee prototype.\n\nhttps://developer.apple.com/library/content/documentation/General/Conceptual/CocoaTouch64BitGuide/ConvertingYourAppto64-Bit/ConvertingYourAppto64-Bit.html#//apple_ref/doc/uid/TP40013501-CH3-SW26\n\nThis currently breaks std::env:args() on aarch64 iOS devices. As far as I can tell, in the standard library, this is the only occurrence of ObjectiveC dispatching.", "tree": {"sha": "32da20743c5025a11271cd758f5e8fa36cbec547", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32da20743c5025a11271cd758f5e8fa36cbec547"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/816a34aca23f3ebd0fddf79ebdf96c9fae976f58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/816a34aca23f3ebd0fddf79ebdf96c9fae976f58", "html_url": "https://github.com/rust-lang/rust/commit/816a34aca23f3ebd0fddf79ebdf96c9fae976f58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/816a34aca23f3ebd0fddf79ebdf96c9fae976f58/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9aae6362d566497d55a94da060ec163cd874a41", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9aae6362d566497d55a94da060ec163cd874a41", "html_url": "https://github.com/rust-lang/rust/commit/d9aae6362d566497d55a94da060ec163cd874a41"}, {"sha": "a1882ca769ed82fa16a06f113f386fa48366c331", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1882ca769ed82fa16a06f113f386fa48366c331", "html_url": "https://github.com/rust-lang/rust/commit/a1882ca769ed82fa16a06f113f386fa48366c331"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "0f447ff4ec452c96b5df9a356e42882f2755fdf0", "filename": "src/libstd/sys/unix/args.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/816a34aca23f3ebd0fddf79ebdf96c9fae976f58/src%2Flibstd%2Fsys%2Funix%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/816a34aca23f3ebd0fddf79ebdf96c9fae976f58/src%2Flibstd%2Fsys%2Funix%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fargs.rs?ref=816a34aca23f3ebd0fddf79ebdf96c9fae976f58", "patch": "@@ -172,10 +172,23 @@ mod imp {\n \n         extern {\n             fn sel_registerName(name: *const libc::c_uchar) -> Sel;\n-            fn objc_msgSend(obj: NsId, sel: Sel, ...) -> NsId;\n             fn objc_getClass(class_name: *const libc::c_uchar) -> NsId;\n         }\n \n+        #[cfg(target_arch=\"aarch64\")]\n+        extern {\n+            fn objc_msgSend(obj: NsId, sel: Sel) -> NsId;\n+            #[link_name=\"objc_msgSend\"]\n+            fn objc_msgSend_ul(obj: NsId, sel: Sel, i: libc::c_ulong) -> NsId;\n+        }\n+\n+        #[cfg(not(target_arch=\"aarch64\"))]\n+        extern {\n+            fn objc_msgSend(obj: NsId, sel: Sel, ...) -> NsId;\n+            #[link_name=\"objc_msgSend\"]\n+            fn objc_msgSend_ul(obj: NsId, sel: Sel, ...) -> NsId;\n+        }\n+\n         #[link(name = \"Foundation\", kind = \"framework\")]\n         #[link(name = \"objc\")]\n         #[cfg(not(cargobuild))]\n@@ -199,7 +212,7 @@ mod imp {\n \n             let cnt: usize = mem::transmute(objc_msgSend(args, count_sel));\n             for i in 0..cnt {\n-                let tmp = objc_msgSend(args, object_at_sel, i);\n+                let tmp = objc_msgSend_ul(args, object_at_sel, i as libc::c_ulong);\n                 let utf_c_str: *const libc::c_char =\n                     mem::transmute(objc_msgSend(tmp, utf8_sel));\n                 let bytes = CStr::from_ptr(utf_c_str).to_bytes();"}]}