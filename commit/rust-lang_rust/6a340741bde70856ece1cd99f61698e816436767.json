{"sha": "6a340741bde70856ece1cd99f61698e816436767", "node_id": "C_kwDOAAsO6NoAKDZhMzQwNzQxYmRlNzA4NTZlY2UxY2Q5OWY2MTY5OGU4MTY0MzY3Njc", "commit": {"author": {"name": "finalchild", "email": "finalchild2@gmail.com", "date": "2022-08-18T18:36:43Z"}, "committer": {"name": "finalchild", "email": "finalchild2@gmail.com", "date": "2022-08-21T16:11:59Z"}, "message": "Remove redundant clone", "tree": {"sha": "0687595acb7a5986b720387f50293236d853df8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0687595acb7a5986b720387f50293236d853df8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a340741bde70856ece1cd99f61698e816436767", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a340741bde70856ece1cd99f61698e816436767", "html_url": "https://github.com/rust-lang/rust/commit/6a340741bde70856ece1cd99f61698e816436767", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a340741bde70856ece1cd99f61698e816436767/comments", "author": {"login": "finalchild", "id": 8557044, "node_id": "MDQ6VXNlcjg1NTcwNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8557044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finalchild", "html_url": "https://github.com/finalchild", "followers_url": "https://api.github.com/users/finalchild/followers", "following_url": "https://api.github.com/users/finalchild/following{/other_user}", "gists_url": "https://api.github.com/users/finalchild/gists{/gist_id}", "starred_url": "https://api.github.com/users/finalchild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finalchild/subscriptions", "organizations_url": "https://api.github.com/users/finalchild/orgs", "repos_url": "https://api.github.com/users/finalchild/repos", "events_url": "https://api.github.com/users/finalchild/events{/privacy}", "received_events_url": "https://api.github.com/users/finalchild/received_events", "type": "User", "site_admin": false}, "committer": {"login": "finalchild", "id": 8557044, "node_id": "MDQ6VXNlcjg1NTcwNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8557044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finalchild", "html_url": "https://github.com/finalchild", "followers_url": "https://api.github.com/users/finalchild/followers", "following_url": "https://api.github.com/users/finalchild/following{/other_user}", "gists_url": "https://api.github.com/users/finalchild/gists{/gist_id}", "starred_url": "https://api.github.com/users/finalchild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finalchild/subscriptions", "organizations_url": "https://api.github.com/users/finalchild/orgs", "repos_url": "https://api.github.com/users/finalchild/repos", "events_url": "https://api.github.com/users/finalchild/events{/privacy}", "received_events_url": "https://api.github.com/users/finalchild/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e331ae57df08e6eab346a9caab3fc354ce61c5d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e331ae57df08e6eab346a9caab3fc354ce61c5d5", "html_url": "https://github.com/rust-lang/rust/commit/e331ae57df08e6eab346a9caab3fc354ce61c5d5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fd517c1e1213682b6227395cc3e80b1d484a9a43", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a340741bde70856ece1cd99f61698e816436767/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a340741bde70856ece1cd99f61698e816436767/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=6a340741bde70856ece1cd99f61698e816436767", "patch": "@@ -1176,7 +1176,7 @@ fn create_lints_for_named_arguments_used_positionally(cx: &mut Context<'_, '_>)\n \n         cx.ecx.buffered_early_lint.push(BufferedEarlyLint {\n             span: MultiSpan::from_span(named_arg.positional_named_arg_span),\n-            msg: msg.clone().into(),\n+            msg: msg.into(),\n             node_id: ast::CRATE_NODE_ID,\n             lint_id: LintId::of(&NAMED_ARGUMENTS_USED_POSITIONALLY),\n             diagnostic: BuiltinLintDiagnostics::NamedArgumentUsedPositionally {"}]}