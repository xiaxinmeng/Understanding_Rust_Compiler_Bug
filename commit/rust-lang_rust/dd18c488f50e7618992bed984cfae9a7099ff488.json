{"sha": "dd18c488f50e7618992bed984cfae9a7099ff488", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMThjNDg4ZjUwZTc2MTg5OTJiZWQ5ODRjZmFlOWE3MDk5ZmY0ODg=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-01-28T11:54:30Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-01-29T06:59:19Z"}, "message": "Add tests", "tree": {"sha": "e5c3fe81fdb858b911a5c4481021ec1a650a2b7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5c3fe81fdb858b911a5c4481021ec1a650a2b7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd18c488f50e7618992bed984cfae9a7099ff488", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd18c488f50e7618992bed984cfae9a7099ff488", "html_url": "https://github.com/rust-lang/rust/commit/dd18c488f50e7618992bed984cfae9a7099ff488", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd18c488f50e7618992bed984cfae9a7099ff488/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8b5745d4646e7cb84e8bd6491556658d0578e8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8b5745d4646e7cb84e8bd6491556658d0578e8b", "html_url": "https://github.com/rust-lang/rust/commit/d8b5745d4646e7cb84e8bd6491556658d0578e8b"}], "stats": {"total": 94, "additions": 94, "deletions": 0}, "files": [{"sha": "24d2dc645519dff4b62e8dc28eb3fc89017e4f88", "filename": "src/test/ui/cfg/assume-incomplete-release/assume-incomplete.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/dd18c488f50e7618992bed984cfae9a7099ff488/src%2Ftest%2Fui%2Fcfg%2Fassume-incomplete-release%2Fassume-incomplete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd18c488f50e7618992bed984cfae9a7099ff488/src%2Ftest%2Fui%2Fcfg%2Fassume-incomplete-release%2Fassume-incomplete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg%2Fassume-incomplete-release%2Fassume-incomplete.rs?ref=dd18c488f50e7618992bed984cfae9a7099ff488", "patch": "@@ -0,0 +1,38 @@\n+// run-pass\n+// aux-build:ver-cfg-rel.rs\n+// revisions: assume no_assume\n+// [assume]compile-flags: -Z assume-incomplete-release\n+\n+#![feature(cfg_version)]\n+\n+extern crate ver_cfg_rel;\n+\n+use ver_cfg_rel::ver_cfg_rel;\n+\n+#[ver_cfg_rel(\"-2\")]\n+fn foo_2() { }\n+\n+#[ver_cfg_rel(\"-1\")]\n+fn foo_1() { }\n+\n+#[cfg(assume)]\n+#[ver_cfg_rel(\"0\")]\n+fn foo() { compile_error!(\"wrong+0\") }\n+\n+#[cfg(no_assume)]\n+#[ver_cfg_rel(\"0\")]\n+fn foo() { }\n+\n+#[ver_cfg_rel(\"1\")]\n+fn bar() { compile_error!(\"wrong+1\") }\n+\n+#[ver_cfg_rel(\"2\")]\n+fn bar() { compile_error!(\"wrong+2\") }\n+\n+fn main() {\n+    foo_2();\n+    foo_1();\n+\n+    #[cfg(no_assume)]\n+    foo();\n+}"}, {"sha": "6787527027e33e230625148df6ae4478401fcba0", "filename": "src/test/ui/cfg/assume-incomplete-release/auxiliary/ver-cfg-rel.rs", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/dd18c488f50e7618992bed984cfae9a7099ff488/src%2Ftest%2Fui%2Fcfg%2Fassume-incomplete-release%2Fauxiliary%2Fver-cfg-rel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd18c488f50e7618992bed984cfae9a7099ff488/src%2Ftest%2Fui%2Fcfg%2Fassume-incomplete-release%2Fauxiliary%2Fver-cfg-rel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg%2Fassume-incomplete-release%2Fauxiliary%2Fver-cfg-rel.rs?ref=dd18c488f50e7618992bed984cfae9a7099ff488", "patch": "@@ -0,0 +1,56 @@\n+// force-host\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+use proc_macro::{TokenStream, TokenTree as Tt};\n+use std::str::FromStr;\n+\n+// String containing the current version number of the tip, i.e. \"1.41.2\"\n+static VERSION_NUMBER: &str = include_str!(\"../../../../../version\");\n+\n+#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+struct Version {\n+    major: i16,\n+    minor: i16,\n+    patch: i16,\n+}\n+\n+fn parse_version(s: &str) -> Option<Version> {\n+    let mut digits = s.splitn(3, '.');\n+    let major = digits.next()?.parse().ok()?;\n+    let minor = digits.next()?.parse().ok()?;\n+    let patch = digits.next().unwrap_or(\"0\").trim().parse().ok()?;\n+    Some(Version { major, minor, patch })\n+}\n+\n+#[proc_macro_attribute]\n+/// Emits a #[cfg(version)] relative to the current one, so passing\n+/// -1 as argument on compiler 1.50 will emit #[cfg(version(\"1.49.0\"))],\n+/// while 1 will emit #[cfg(version(\"1.51.0\"))]\n+pub fn ver_cfg_rel(attr: TokenStream, input: TokenStream) -> TokenStream {\n+    let mut v_rel = None;\n+    for a in attr.into_iter() {\n+        match a {\n+            Tt::Literal(l) => {\n+                let mut s = l.to_string();\n+                let s = s.trim_matches('\"');\n+                let v: i16 = s.parse().unwrap();\n+                v_rel = Some(v);\n+                break;\n+            },\n+            _ => panic!(\"{:?}\", a),\n+        }\n+    }\n+    let v_rel = v_rel.unwrap();\n+\n+    let mut v = parse_version(VERSION_NUMBER).unwrap();\n+    v.minor += v_rel;\n+\n+    let attr_str = format!(\"#[cfg(version(\\\"{}.{}.{}\\\"))]\", v.major, v.minor, v.patch);\n+    let mut res = Vec::<Tt>::new();\n+    res.extend(TokenStream::from_str(&attr_str).unwrap().into_iter());\n+    res.extend(input.into_iter());\n+    res.into_iter().collect()\n+}"}]}