{"sha": "a03287bbf765ce7ac0e2ae9e64d8ade168ece301", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwMzI4N2JiZjc2NWNlN2FjMGUyYWU5ZTY0ZDhhZGUxNjhlY2UzMDE=", "commit": {"author": {"name": "Cheng XU", "email": "git@xuc.me", "date": "2021-08-28T23:57:58Z"}, "committer": {"name": "Cheng XU", "email": "git@xuc.me", "date": "2021-08-29T00:19:07Z"}, "message": "BTreeSet::from_iter: use bulk building to improve the performance\n\nApply the same optimization as BTreeMap::from_iter.", "tree": {"sha": "03d6e4dd77936de49c41a8570aee2d28c03b1490", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03d6e4dd77936de49c41a8570aee2d28c03b1490"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a03287bbf765ce7ac0e2ae9e64d8ade168ece301", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQQMYHRMWe9yVY/QcCqHlLXXo8Z/cAUCYSrShwAKCRCHlLXXo8Z/\ncOTIAP0Ww67lM6hok1IrDrxNvPKJzkSIB76+9YGfDT7kJnzoswEAnA2bRGAgcKnB\nH+reUDROds3IvhJ1R3CtxwSOwGvKAwM=\n=nBvH\n-----END PGP SIGNATURE-----", "payload": "tree 03d6e4dd77936de49c41a8570aee2d28c03b1490\nparent cf814d60f82723e5965763859c51b3e7bd885b9b\nauthor Cheng XU <git@xuc.me> 1630195078 -0700\ncommitter Cheng XU <git@xuc.me> 1630196347 -0700\n\nBTreeSet::from_iter: use bulk building to improve the performance\n\nApply the same optimization as BTreeMap::from_iter.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a03287bbf765ce7ac0e2ae9e64d8ade168ece301", "html_url": "https://github.com/rust-lang/rust/commit/a03287bbf765ce7ac0e2ae9e64d8ade168ece301", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a03287bbf765ce7ac0e2ae9e64d8ade168ece301/comments", "author": {"login": "xu-cheng", "id": 3105373, "node_id": "MDQ6VXNlcjMxMDUzNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3105373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xu-cheng", "html_url": "https://github.com/xu-cheng", "followers_url": "https://api.github.com/users/xu-cheng/followers", "following_url": "https://api.github.com/users/xu-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/xu-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/xu-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xu-cheng/subscriptions", "organizations_url": "https://api.github.com/users/xu-cheng/orgs", "repos_url": "https://api.github.com/users/xu-cheng/repos", "events_url": "https://api.github.com/users/xu-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/xu-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xu-cheng", "id": 3105373, "node_id": "MDQ6VXNlcjMxMDUzNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3105373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xu-cheng", "html_url": "https://github.com/xu-cheng", "followers_url": "https://api.github.com/users/xu-cheng/followers", "following_url": "https://api.github.com/users/xu-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/xu-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/xu-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xu-cheng/subscriptions", "organizations_url": "https://api.github.com/users/xu-cheng/orgs", "repos_url": "https://api.github.com/users/xu-cheng/repos", "events_url": "https://api.github.com/users/xu-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/xu-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf814d60f82723e5965763859c51b3e7bd885b9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf814d60f82723e5965763859c51b3e7bd885b9b", "html_url": "https://github.com/rust-lang/rust/commit/cf814d60f82723e5965763859c51b3e7bd885b9b"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "fca281a63bbe5045f5c2faa510afc76817727936", "filename": "library/alloc/src/collections/btree/set.rs", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a03287bbf765ce7ac0e2ae9e64d8ade168ece301/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a03287bbf765ce7ac0e2ae9e64d8ade168ece301/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs?ref=a03287bbf765ce7ac0e2ae9e64d8ade168ece301", "patch": "@@ -1,6 +1,7 @@\n // This is pretty much entirely stolen from TreeSet, since BTreeMap has an identical interface\n // to TreeMap\n \n+use crate::vec::Vec;\n use core::borrow::Borrow;\n use core::cmp::Ordering::{Equal, Greater, Less};\n use core::cmp::{max, min};\n@@ -1059,9 +1060,17 @@ impl<T> BTreeSet<T> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: Ord> FromIterator<T> for BTreeSet<T> {\n     fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> BTreeSet<T> {\n-        let mut set = BTreeSet::new();\n-        set.extend(iter);\n-        set\n+        let mut inputs: Vec<_> = iter.into_iter().collect();\n+\n+        if inputs.is_empty() {\n+            return BTreeSet::new();\n+        }\n+\n+        // use stable sort to preserve the insertion order.\n+        inputs.sort();\n+        let iter = inputs.into_iter().map(|k| (k, ()));\n+        let map = BTreeMap::bulk_build_from_sorted_iter(iter);\n+        BTreeSet { map }\n     }\n }\n \n@@ -1074,8 +1083,16 @@ impl<T: Ord, const N: usize> From<[T; N]> for BTreeSet<T> {\n     /// let set2: BTreeSet<_> = [1, 2, 3, 4].into();\n     /// assert_eq!(set1, set2);\n     /// ```\n-    fn from(arr: [T; N]) -> Self {\n-        core::array::IntoIter::new(arr).collect()\n+    fn from(mut arr: [T; N]) -> Self {\n+        if N == 0 {\n+            return BTreeSet::new();\n+        }\n+\n+        // use stable sort to preserve the insertion order.\n+        arr.sort();\n+        let iter = core::array::IntoIter::new(arr).map(|k| (k, ()));\n+        let map = BTreeMap::bulk_build_from_sorted_iter(iter);\n+        BTreeSet { map }\n     }\n }\n "}]}