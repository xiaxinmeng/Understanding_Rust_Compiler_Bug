{"sha": "ad7e33efee023822bd63fa6f942c25582ef12a1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkN2UzM2VmZWUwMjM4MjJiZDYzZmE2Zjk0MmMyNTU4MmVmMTJhMWU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-01-11T15:23:24Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-01-11T18:30:53Z"}, "message": "Feature gate #[rustc_on_unimplemented]", "tree": {"sha": "0358035fd7630bfb4c7369b4ae9bb5c42fadcde9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0358035fd7630bfb4c7369b4ae9bb5c42fadcde9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad7e33efee023822bd63fa6f942c25582ef12a1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad7e33efee023822bd63fa6f942c25582ef12a1e", "html_url": "https://github.com/rust-lang/rust/commit/ad7e33efee023822bd63fa6f942c25582ef12a1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad7e33efee023822bd63fa6f942c25582ef12a1e/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd074ab4eedcb08ca8a1861fc1e62f125e23fa8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd074ab4eedcb08ca8a1861fc1e62f125e23fa8b", "html_url": "https://github.com/rust-lang/rust/commit/dd074ab4eedcb08ca8a1861fc1e62f125e23fa8b"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "78e8a2a9e9164be4bf34700c3ec630231a328202", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ad7e33efee023822bd63fa6f942c25582ef12a1e/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad7e33efee023822bd63fa6f942c25582ef12a1e/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=ad7e33efee023822bd63fa6f942c25582ef12a1e", "patch": "@@ -63,6 +63,7 @@\n #![feature(simd, unsafe_destructor, slicing_syntax)]\n #![feature(unboxed_closures)]\n #![allow(unknown_features)] #![feature(int_uint)]\n+#![feature(on_unimplemented)]\n #![deny(missing_docs)]\n \n #[macro_use]"}, {"sha": "6b4dd101286d664ec0195992e7dd29c48a2c6b09", "filename": "src/librustc/middle/traits/error_reporting.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ad7e33efee023822bd63fa6f942c25582ef12a1e/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad7e33efee023822bd63fa6f942c25582ef12a1e/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs?ref=ad7e33efee023822bd63fa6f942c25582ef12a1e", "patch": "@@ -181,9 +181,8 @@ pub fn report_selection_error<'a, 'tcx>(infcx: &InferCtxt<'a, 'tcx>,\n                         let custom_note = report_on_unimplemented(infcx, &*trait_ref.0,\n                                                                   obligation.cause.span);\n                         if let Some(s) = custom_note {\n-                           infcx.tcx.sess.span_note(\n-                                obligation.cause.span,\n-                                s.as_slice());\n+                           infcx.tcx.sess.span_note(obligation.cause.span,\n+                                                    s.as_slice());\n                         }\n                     }\n                 }"}, {"sha": "8929bbe0232edc7bf78a6404f8204cbdfb83cd13", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ad7e33efee023822bd63fa6f942c25582ef12a1e/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad7e33efee023822bd63fa6f942c25582ef12a1e/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=ad7e33efee023822bd63fa6f942c25582ef12a1e", "patch": "@@ -71,6 +71,7 @@ static KNOWN_FEATURES: &'static [(&'static str, Status)] = &[\n     (\"visible_private_types\", Active),\n     (\"slicing_syntax\", Active),\n     (\"box_syntax\", Active),\n+    (\"on_unimplemented\", Active),\n \n     (\"if_let\", Accepted),\n     (\"while_let\", Accepted),\n@@ -249,6 +250,10 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n                 self.gate_feature(\"linkage\", i.span,\n                                   \"the `linkage` attribute is experimental \\\n                                    and not portable across platforms\")\n+            } else if attr.name() == \"rustc_on_unimplemented\" {\n+                self.gate_feature(\"on_unimplemented\", i.span,\n+                                  \"the `#[rustc_on_unimplemented]` attribute \\\n+                                  is an experimental feature\")\n             }\n         }\n         match i.node {"}, {"sha": "3bd3f517dbccd095af3327a9f81045c4a6ff08ce", "filename": "src/test/compile-fail/on-unimplemented-bad-anno.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ad7e33efee023822bd63fa6f942c25582ef12a1e/src%2Ftest%2Fcompile-fail%2Fon-unimplemented-bad-anno.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad7e33efee023822bd63fa6f942c25582ef12a1e/src%2Ftest%2Fcompile-fail%2Fon-unimplemented-bad-anno.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fon-unimplemented-bad-anno.rs?ref=ad7e33efee023822bd63fa6f942c25582ef12a1e", "patch": "@@ -9,7 +9,9 @@\n // except according to those terms.\n // ignore-tidy-linelength\n \n-#[allow(unused)]\n+#![feature(on_unimplemented)]\n+\n+#![allow(unused)]\n \n #[rustc_on_unimplemented = \"test error `{Self}` with `{Bar}` `{Baz}` `{Quux}`\"]\n trait Foo<Bar, Baz, Quux>{}"}, {"sha": "7b406afcf1f5832dcd79890388076ff26b09da29", "filename": "src/test/compile-fail/on-unimplemented.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ad7e33efee023822bd63fa6f942c25582ef12a1e/src%2Ftest%2Fcompile-fail%2Fon-unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad7e33efee023822bd63fa6f942c25582ef12a1e/src%2Ftest%2Fcompile-fail%2Fon-unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fon-unimplemented.rs?ref=ad7e33efee023822bd63fa6f942c25582ef12a1e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n // ignore-tidy-linelength\n \n+#![feature(on_unimplemented)]\n+\n #[rustc_on_unimplemented = \"test error `{Self}` with `{Bar}` `{Baz}` `{Quux}`\"]\n trait Foo<Bar, Baz, Quux>{}\n "}]}