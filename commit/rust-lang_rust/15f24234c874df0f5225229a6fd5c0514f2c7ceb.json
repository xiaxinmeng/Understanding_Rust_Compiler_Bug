{"sha": "15f24234c874df0f5225229a6fd5c0514f2c7ceb", "node_id": "C_kwDOAAsO6NoAKDE1ZjI0MjM0Yzg3NGRmMGY1MjI1MjI5YTZmZDVjMDUxNGYyYzdjZWI", "commit": {"author": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-02-27T13:17:29Z"}, "committer": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-03-12T13:19:46Z"}, "message": "Remove `box_syntax` from AST and use in tools", "tree": {"sha": "75438a70da2f0a6e32f4c1f7efd7dbb4ebbb24c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75438a70da2f0a6e32f4c1f7efd7dbb4ebbb24c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15f24234c874df0f5225229a6fd5c0514f2c7ceb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15f24234c874df0f5225229a6fd5c0514f2c7ceb", "html_url": "https://github.com/rust-lang/rust/commit/15f24234c874df0f5225229a6fd5c0514f2c7ceb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15f24234c874df0f5225229a6fd5c0514f2c7ceb/comments", "author": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "213a22efb94ab62d7458501c5ab9e303b222e6a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/213a22efb94ab62d7458501c5ab9e303b222e6a2", "html_url": "https://github.com/rust-lang/rust/commit/213a22efb94ab62d7458501c5ab9e303b222e6a2"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "8aa47b62ebff48c4e4aebedb4c2955b2b00eb5e1", "filename": "clippy_lints/src/suspicious_operation_groupings.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/15f24234c874df0f5225229a6fd5c0514f2c7ceb/clippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15f24234c874df0f5225229a6fd5c0514f2c7ceb/clippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs?ref=15f24234c874df0f5225229a6fd5c0514f2c7ceb", "patch": "@@ -596,8 +596,7 @@ fn ident_difference_expr_with_base_location(\n         | (MethodCall(_), MethodCall(_))\n         | (Call(_, _), Call(_, _))\n         | (ConstBlock(_), ConstBlock(_))\n-        | (Array(_), Array(_))\n-        | (Box(_), Box(_)) => {\n+        | (Array(_), Array(_)) => {\n             // keep going\n         },\n         _ => {"}, {"sha": "809d654603a6989473a89b1965c787277e746a2a", "filename": "clippy_utils/src/ast_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15f24234c874df0f5225229a6fd5c0514f2c7ceb/clippy_utils%2Fsrc%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15f24234c874df0f5225229a6fd5c0514f2c7ceb/clippy_utils%2Fsrc%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fast_utils.rs?ref=15f24234c874df0f5225229a6fd5c0514f2c7ceb", "patch": "@@ -143,7 +143,7 @@ pub fn eq_expr(l: &Expr, r: &Expr) -> bool {\n         (Paren(l), _) => eq_expr(l, r),\n         (_, Paren(r)) => eq_expr(l, r),\n         (Err, Err) => true,\n-        (Box(l), Box(r)) | (Try(l), Try(r)) | (Await(l), Await(r)) => eq_expr(l, r),\n+        (Try(l), Try(r)) | (Await(l), Await(r)) => eq_expr(l, r),\n         (Array(l), Array(r)) => over(l, r, |l, r| eq_expr(l, r)),\n         (Tup(l), Tup(r)) => over(l, r, |l, r| eq_expr(l, r)),\n         (Repeat(le, ls), Repeat(re, rs)) => eq_expr(le, re) && eq_expr(&ls.value, &rs.value),"}, {"sha": "85bf28b708b7c168f7514769def023015621ef01", "filename": "clippy_utils/src/sugg.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15f24234c874df0f5225229a6fd5c0514f2c7ceb/clippy_utils%2Fsrc%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15f24234c874df0f5225229a6fd5c0514f2c7ceb/clippy_utils%2Fsrc%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fsugg.rs?ref=15f24234c874df0f5225229a6fd5c0514f2c7ceb", "patch": "@@ -188,7 +188,6 @@ impl<'a> Sugg<'a> {\n         match expr.kind {\n             _ if expr.span.ctxt() != ctxt => Sugg::NonParen(snippet_with_context(cx, expr.span, ctxt, default, app).0),\n             ast::ExprKind::AddrOf(..)\n-            | ast::ExprKind::Box(..)\n             | ast::ExprKind::Closure { .. }\n             | ast::ExprKind::If(..)\n             | ast::ExprKind::Let(..)"}]}