{"sha": "75761c0e47d8c20a490a3d61ea64d2413d3c3570", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1NzYxYzBlNDdkOGMyMGE0OTBhM2Q2MWVhNjRkMjQxM2QzYzM1NzA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-22T14:47:33Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-22T14:47:33Z"}, "message": "add rustc_lexer", "tree": {"sha": "52f8c89145a952ab25e51b7658ec17441b33607a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52f8c89145a952ab25e51b7658ec17441b33607a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75761c0e47d8c20a490a3d61ea64d2413d3c3570", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75761c0e47d8c20a490a3d61ea64d2413d3c3570", "html_url": "https://github.com/rust-lang/rust/commit/75761c0e47d8c20a490a3d61ea64d2413d3c3570", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75761c0e47d8c20a490a3d61ea64d2413d3c3570/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d690249bc81bc265cb3d1836c2922325f4fdb8af", "url": "https://api.github.com/repos/rust-lang/rust/commits/d690249bc81bc265cb3d1836c2922325f4fdb8af", "html_url": "https://github.com/rust-lang/rust/commit/d690249bc81bc265cb3d1836c2922325f4fdb8af"}], "stats": {"total": 184, "additions": 159, "deletions": 25}, "files": [{"sha": "d5474d6e286f049bb271531720dc0e7c4480f25a", "filename": "Cargo.lock", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/75761c0e47d8c20a490a3d61ea64d2413d3c3570/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/75761c0e47d8c20a490a3d61ea64d2413d3c3570/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=75761c0e47d8c20a490a3d61ea64d2413d3c3570", "patch": "@@ -1308,12 +1308,21 @@ dependencies = [\n  \"serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"ra_rustc_lexer\"\n+version = \"0.1.0-pre.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"ra_syntax\"\n version = \"0.1.0\"\n dependencies = [\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_parser 0.1.0\",\n+ \"ra_rustc_lexer 0.1.0-pre.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_text_edit 0.1.0\",\n  \"rowan 0.6.0-pre.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smol_str 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2250,6 +2259,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum proptest 0.9.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cf147e022eacf0c8a054ab864914a7602618adba841d800a9a9868a5237a529f\"\n \"checksum quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9274b940887ce9addde99c4eee6b5c44cc494b182b97e73dc8ffdcb3397fd3f0\"\n \"checksum quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6ce23b6b870e8f94f81fb0a363d65d86675884b34a09043c81e5562f11c1f8e1\"\n+\"checksum ra_rustc_lexer 0.1.0-pre.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e8d92772f822978a6c9c4657aa61af439e4e635180628b3354049b283b749f1e\"\n \"checksum ra_vfs 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fb7cd4e302032c5ab514f1c01c89727cd96fd950dd36f9ebee9252df45d9fb1a\"\n \"checksum rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6d71dacdc3c88c1fde3885a3be3fbab9f35724e6ce99467f7d9c5026132184ca\"\n \"checksum rand 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d47eab0e83d9693d40f825f86948aa16eff6750ead4bdffc4ab95b8b3a7f052c\""}, {"sha": "9ef8dee5d68712bcc92f3bc54cc73f49cc34a04c", "filename": "crates/ra_syntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/75761c0e47d8c20a490a3d61ea64d2413d3c3570/crates%2Fra_syntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75761c0e47d8c20a490a3d61ea64d2413d3c3570/crates%2Fra_syntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2FCargo.toml?ref=75761c0e47d8c20a490a3d61ea64d2413d3c3570", "patch": "@@ -11,6 +11,7 @@ repository = \"https://github.com/rust-analyzer/rust-analyzer\"\n unicode-xid = \"0.1.0\"\n itertools = \"0.8.0\"\n rowan = \"0.6.0-pre.1\"\n+ra_rustc_lexer = { version = \"0.1.0-pre.1\", features = [ \"unicode-xid\" ] }\n \n # ideally, `serde` should be enabled by `ra_lsp_server`, but we enable it here\n # to reduce number of compilations"}, {"sha": "1c818fdf41a0d678e02adb93199eb16331b6d1fb", "filename": "crates/ra_syntax/src/parsing/lexer.rs", "status": "modified", "additions": 104, "deletions": 4, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/75761c0e47d8c20a490a3d61ea64d2413d3c3570/crates%2Fra_syntax%2Fsrc%2Fparsing%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75761c0e47d8c20a490a3d61ea64d2413d3c3570/crates%2Fra_syntax%2Fsrc%2Fparsing%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Flexer.rs?ref=75761c0e47d8c20a490a3d61ea64d2413d3c3570", "patch": "@@ -30,19 +30,119 @@ pub struct Token {\n \n /// Break a string up into its component tokens\n pub fn tokenize(text: &str) -> Vec<Token> {\n+    if text.is_empty() {\n+        return vec![];\n+    }\n     let mut text = text;\n     let mut acc = Vec::new();\n+    if let Some(len) = ra_rustc_lexer::strip_shebang(text) {\n+        acc.push(Token { kind: SHEBANG, len: TextUnit::from_usize(len) });\n+        text = &text[len..];\n+    }\n     while !text.is_empty() {\n-        let token = next_token(text);\n+        let rustc_token = ra_rustc_lexer::first_token(text);\n+        macro_rules! decompose {\n+            ($t1:expr, $t2:expr) => {{\n+                acc.push(Token { kind: $t1, len: 1.into() });\n+                acc.push(Token { kind: $t2, len: 1.into() });\n+                text = &text[2..];\n+                continue;\n+            }};\n+            ($t1:expr, $t2:expr, $t3:expr) => {{\n+                acc.push(Token { kind: $t1, len: 1.into() });\n+                acc.push(Token { kind: $t2, len: 1.into() });\n+                acc.push(Token { kind: $t3, len: 1.into() });\n+                text = &text[3..];\n+                continue;\n+            }};\n+        }\n+        let kind = match rustc_token.kind {\n+            ra_rustc_lexer::TokenKind::LineComment => COMMENT,\n+            ra_rustc_lexer::TokenKind::BlockComment { .. } => COMMENT,\n+            ra_rustc_lexer::TokenKind::Whitespace => WHITESPACE,\n+            ra_rustc_lexer::TokenKind::Ident => {\n+                let token_text = &text[..rustc_token.len];\n+                if token_text == \"_\" {\n+                    UNDERSCORE\n+                } else {\n+                    SyntaxKind::from_keyword(&text[..rustc_token.len]).unwrap_or(IDENT)\n+                }\n+            }\n+            ra_rustc_lexer::TokenKind::RawIdent => IDENT,\n+            ra_rustc_lexer::TokenKind::Literal { kind, .. } => match kind {\n+                ra_rustc_lexer::LiteralKind::Int { .. } => INT_NUMBER,\n+                ra_rustc_lexer::LiteralKind::Float { .. } => FLOAT_NUMBER,\n+                ra_rustc_lexer::LiteralKind::Char { .. } => CHAR,\n+                ra_rustc_lexer::LiteralKind::Byte { .. } => BYTE,\n+                ra_rustc_lexer::LiteralKind::Str { .. } => STRING,\n+                ra_rustc_lexer::LiteralKind::ByteStr { .. } => BYTE_STRING,\n+                ra_rustc_lexer::LiteralKind::RawStr { .. } => RAW_STRING,\n+                ra_rustc_lexer::LiteralKind::RawByteStr { .. } => RAW_BYTE_STRING,\n+            },\n+            ra_rustc_lexer::TokenKind::Lifetime { .. } => LIFETIME,\n+            ra_rustc_lexer::TokenKind::Semi => SEMI,\n+            ra_rustc_lexer::TokenKind::Comma => COMMA,\n+            ra_rustc_lexer::TokenKind::DotDotDot => decompose!(DOT, DOT, DOT),\n+            ra_rustc_lexer::TokenKind::DotDotEq => decompose!(DOT, DOT, EQ),\n+            ra_rustc_lexer::TokenKind::DotDot => decompose!(DOT, DOT),\n+            ra_rustc_lexer::TokenKind::Dot => DOT,\n+            ra_rustc_lexer::TokenKind::OpenParen => L_PAREN,\n+            ra_rustc_lexer::TokenKind::CloseParen => R_PAREN,\n+            ra_rustc_lexer::TokenKind::OpenBrace => L_CURLY,\n+            ra_rustc_lexer::TokenKind::CloseBrace => R_CURLY,\n+            ra_rustc_lexer::TokenKind::OpenBracket => L_BRACK,\n+            ra_rustc_lexer::TokenKind::CloseBracket => R_BRACK,\n+            ra_rustc_lexer::TokenKind::At => AT,\n+            ra_rustc_lexer::TokenKind::Pound => POUND,\n+            ra_rustc_lexer::TokenKind::Tilde => TILDE,\n+            ra_rustc_lexer::TokenKind::Question => QUESTION,\n+            ra_rustc_lexer::TokenKind::ColonColon => decompose!(COLON, COLON),\n+            ra_rustc_lexer::TokenKind::Colon => COLON,\n+            ra_rustc_lexer::TokenKind::Dollar => DOLLAR,\n+            ra_rustc_lexer::TokenKind::EqEq => decompose!(EQ, EQ),\n+            ra_rustc_lexer::TokenKind::Eq => EQ,\n+            ra_rustc_lexer::TokenKind::FatArrow => decompose!(EQ, R_ANGLE),\n+            ra_rustc_lexer::TokenKind::Ne => decompose!(EXCL, EQ),\n+            ra_rustc_lexer::TokenKind::Not => EXCL,\n+            ra_rustc_lexer::TokenKind::Le => decompose!(L_ANGLE, EQ),\n+            ra_rustc_lexer::TokenKind::LArrow => decompose!(COLON, MINUS),\n+            ra_rustc_lexer::TokenKind::Lt => L_ANGLE,\n+            ra_rustc_lexer::TokenKind::ShlEq => decompose!(L_ANGLE, L_ANGLE, EQ),\n+            ra_rustc_lexer::TokenKind::Shl => decompose!(L_ANGLE, L_ANGLE),\n+            ra_rustc_lexer::TokenKind::Ge => decompose!(R_ANGLE, EQ),\n+            ra_rustc_lexer::TokenKind::Gt => R_ANGLE,\n+            ra_rustc_lexer::TokenKind::ShrEq => decompose!(R_ANGLE, R_ANGLE, EQ),\n+            ra_rustc_lexer::TokenKind::Shr => decompose!(R_ANGLE, R_ANGLE),\n+            ra_rustc_lexer::TokenKind::RArrow => decompose!(MINUS, R_ANGLE),\n+            ra_rustc_lexer::TokenKind::Minus => MINUS,\n+            ra_rustc_lexer::TokenKind::MinusEq => decompose!(MINUS, EQ),\n+            ra_rustc_lexer::TokenKind::And => AMP,\n+            ra_rustc_lexer::TokenKind::AndAnd => decompose!(AMP, AMP),\n+            ra_rustc_lexer::TokenKind::AndEq => decompose!(AMP, EQ),\n+            ra_rustc_lexer::TokenKind::Or => PIPE,\n+            ra_rustc_lexer::TokenKind::OrOr => decompose!(PIPE, PIPE),\n+            ra_rustc_lexer::TokenKind::OrEq => decompose!(PIPE, EQ),\n+            ra_rustc_lexer::TokenKind::PlusEq => decompose!(PLUS, EQ),\n+            ra_rustc_lexer::TokenKind::Plus => PLUS,\n+            ra_rustc_lexer::TokenKind::StarEq => decompose!(STAR, EQ),\n+            ra_rustc_lexer::TokenKind::Star => STAR,\n+            ra_rustc_lexer::TokenKind::SlashEq => decompose!(SLASH, EQ),\n+            ra_rustc_lexer::TokenKind::Slash => SLASH,\n+            ra_rustc_lexer::TokenKind::CaretEq => decompose!(CARET, EQ),\n+            ra_rustc_lexer::TokenKind::Caret => CARET,\n+            ra_rustc_lexer::TokenKind::PercentEq => decompose!(PERCENT, EQ),\n+            ra_rustc_lexer::TokenKind::Percent => PERCENT,\n+            ra_rustc_lexer::TokenKind::Unknown => ERROR,\n+        };\n+        let token = Token { kind, len: TextUnit::from_usize(rustc_token.len) };\n         acc.push(token);\n-        let len: u32 = token.len.into();\n-        text = &text[len as usize..];\n+        text = &text[rustc_token.len..];\n     }\n     acc\n }\n \n /// Get the next token from a string\n-pub fn next_token(text: &str) -> Token {\n+fn next_token(text: &str) -> Token {\n     assert!(!text.is_empty());\n     let mut ptr = Ptr::new(text);\n     let c = ptr.bump().unwrap();"}, {"sha": "7bb89b8ae8e43563c02969f68f8e192cfec0bd3b", "filename": "crates/ra_syntax/tests/data/lexer/0004_numbers.txt", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/75761c0e47d8c20a490a3d61ea64d2413d3c3570/crates%2Fra_syntax%2Ftests%2Fdata%2Flexer%2F0004_numbers.txt", "raw_url": "https://github.com/rust-lang/rust/raw/75761c0e47d8c20a490a3d61ea64d2413d3c3570/crates%2Fra_syntax%2Ftests%2Fdata%2Flexer%2F0004_numbers.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Flexer%2F0004_numbers.txt?ref=75761c0e47d8c20a490a3d61ea64d2413d3c3570", "patch": "@@ -12,9 +12,9 @@ INT_NUMBER 2 \"0_\"\n WHITESPACE 1 \" \"\n FLOAT_NUMBER 2 \"0.\"\n WHITESPACE 1 \" \"\n-INT_NUMBER 2 \"0e\"\n+FLOAT_NUMBER 2 \"0e\"\n WHITESPACE 1 \" \"\n-INT_NUMBER 2 \"0E\"\n+FLOAT_NUMBER 2 \"0E\"\n WHITESPACE 1 \" \"\n INT_NUMBER 2 \"0z\"\n WHITESPACE 1 \"\\n\"\n@@ -32,9 +32,9 @@ INT_NUMBER 6 \"0_1279\"\n WHITESPACE 1 \" \"\n FLOAT_NUMBER 6 \"0.1279\"\n WHITESPACE 1 \" \"\n-INT_NUMBER 6 \"0e1279\"\n+FLOAT_NUMBER 6 \"0e1279\"\n WHITESPACE 1 \" \"\n-INT_NUMBER 6 \"0E1279\"\n+FLOAT_NUMBER 6 \"0E1279\"\n WHITESPACE 1 \"\\n\"\n INT_NUMBER 1 \"0\"\n DOT 1 \".\"\n@@ -47,9 +47,7 @@ IDENT 3 \"foo\"\n L_PAREN 1 \"(\"\n R_PAREN 1 \")\"\n WHITESPACE 1 \"\\n\"\n-INT_NUMBER 2 \"0e\"\n-PLUS 1 \"+\"\n-INT_NUMBER 1 \"1\"\n+FLOAT_NUMBER 4 \"0e+1\"\n WHITESPACE 1 \"\\n\"\n INT_NUMBER 1 \"0\"\n DOT 1 \".\""}, {"sha": "737a300ee788e05525b67a01cfc1b3e885df54c4", "filename": "crates/ra_syntax/tests/data/lexer/0014_unclosed_char.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75761c0e47d8c20a490a3d61ea64d2413d3c3570/crates%2Fra_syntax%2Ftests%2Fdata%2Flexer%2F0014_unclosed_char.txt", "raw_url": "https://github.com/rust-lang/rust/raw/75761c0e47d8c20a490a3d61ea64d2413d3c3570/crates%2Fra_syntax%2Ftests%2Fdata%2Flexer%2F0014_unclosed_char.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Flexer%2F0014_unclosed_char.txt?ref=75761c0e47d8c20a490a3d61ea64d2413d3c3570", "patch": "@@ -1 +1 @@\n-CHAR 2 \"\\'1\"\n+LIFETIME 2 \"\\'1\""}, {"sha": "84867026f4d3bc033612b866fba7267956d5d804", "filename": "crates/ra_syntax/tests/data/parser/err/0002_duplicate_shebang.txt", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/75761c0e47d8c20a490a3d61ea64d2413d3c3570/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0002_duplicate_shebang.txt", "raw_url": "https://github.com/rust-lang/rust/raw/75761c0e47d8c20a490a3d61ea64d2413d3c3570/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0002_duplicate_shebang.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0002_duplicate_shebang.txt?ref=75761c0e47d8c20a490a3d61ea64d2413d3c3570", "patch": "@@ -1,7 +1,39 @@\n SOURCE_FILE@[0; 42)\n   SHEBANG@[0; 20) \"#!/use/bin/env rusti\"\n   WHITESPACE@[20; 21) \"\\n\"\n-  ERROR@[21; 41)\n-    SHEBANG@[21; 41) \"#!/use/bin/env rusti\"\n+  ATTR@[21; 23)\n+    POUND@[21; 22) \"#\"\n+    EXCL@[22; 23) \"!\"\n+  ERROR@[23; 24)\n+    SLASH@[23; 24) \"/\"\n+  USE_ITEM@[24; 28)\n+    USE_KW@[24; 27) \"use\"\n+    ERROR@[27; 28)\n+      SLASH@[27; 28) \"/\"\n+  MACRO_CALL@[28; 31)\n+    PATH@[28; 31)\n+      PATH_SEGMENT@[28; 31)\n+        NAME_REF@[28; 31)\n+          IDENT@[28; 31) \"bin\"\n+  ERROR@[31; 32)\n+    SLASH@[31; 32) \"/\"\n+  MACRO_CALL@[32; 41)\n+    PATH@[32; 35)\n+      PATH_SEGMENT@[32; 35)\n+        NAME_REF@[32; 35)\n+          IDENT@[32; 35) \"env\"\n+    WHITESPACE@[35; 36) \" \"\n+    NAME@[36; 41)\n+      IDENT@[36; 41) \"rusti\"\n   WHITESPACE@[41; 42) \"\\n\"\n-error 21: expected an item\n+error 23: expected `[`\n+error 23: expected an item\n+error 27: expected one of `*`, `::`, `{`, `self`, `super` or an indentifier\n+error 28: expected SEMI\n+error 31: expected EXCL\n+error 31: expected `{`, `[`, `(`\n+error 31: expected SEMI\n+error 31: expected an item\n+error 35: expected EXCL\n+error 41: expected `{`, `[`, `(`\n+error 41: expected SEMI"}, {"sha": "261aad1fb6b402f13d3a192bebcef9d28e963ea8", "filename": "crates/ra_syntax/tests/data/parser/ok/0030_string_suffixes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/75761c0e47d8c20a490a3d61ea64d2413d3c3570/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0030_string_suffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75761c0e47d8c20a490a3d61ea64d2413d3c3570/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0030_string_suffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0030_string_suffixes.rs?ref=75761c0e47d8c20a490a3d61ea64d2413d3c3570", "previous_filename": "crates/ra_syntax/tests/data/parser/err/0030_string_suffixes.rs"}, {"sha": "4f7e809c5d44519c49067287d121bffa151ad2d4", "filename": "crates/ra_syntax/tests/data/parser/ok/0030_string_suffixes.txt", "status": "renamed", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/75761c0e47d8c20a490a3d61ea64d2413d3c3570/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0030_string_suffixes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/75761c0e47d8c20a490a3d61ea64d2413d3c3570/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0030_string_suffixes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0030_string_suffixes.txt?ref=75761c0e47d8c20a490a3d61ea64d2413d3c3570", "patch": "@@ -11,22 +11,16 @@ SOURCE_FILE@[0; 112)\n     BLOCK@[10; 111)\n       L_CURLY@[10; 11) \"{\"\n       WHITESPACE@[11; 16) \"\\n    \"\n-      LET_STMT@[16; 27)\n+      LET_STMT@[16; 31)\n         LET_KW@[16; 19) \"let\"\n         WHITESPACE@[19; 20) \" \"\n         PLACEHOLDER_PAT@[20; 21)\n           UNDERSCORE@[20; 21) \"_\"\n         WHITESPACE@[21; 22) \" \"\n         EQ@[22; 23) \"=\"\n         WHITESPACE@[23; 24) \" \"\n-        LITERAL@[24; 27)\n-          CHAR@[24; 27) \"\\'c\\'\"\n-      EXPR_STMT@[27; 31)\n-        PATH_EXPR@[27; 30)\n-          PATH@[27; 30)\n-            PATH_SEGMENT@[27; 30)\n-              NAME_REF@[27; 30)\n-                IDENT@[27; 30) \"u32\"\n+        LITERAL@[24; 30)\n+          CHAR@[24; 30) \"\\'c\\'u32\"\n         SEMI@[30; 31) \";\"\n       WHITESPACE@[31; 36) \"\\n    \"\n       LET_STMT@[36; 60)\n@@ -67,4 +61,3 @@ SOURCE_FILE@[0; 112)\n       WHITESPACE@[109; 110) \"\\n\"\n       R_CURLY@[110; 111) \"}\"\n   WHITESPACE@[111; 112) \"\\n\"\n-error 27: expected SEMI", "previous_filename": "crates/ra_syntax/tests/data/parser/err/0030_string_suffixes.txt"}]}