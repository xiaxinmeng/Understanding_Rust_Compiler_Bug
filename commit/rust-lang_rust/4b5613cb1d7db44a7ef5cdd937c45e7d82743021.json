{"sha": "4b5613cb1d7db44a7ef5cdd937c45e7d82743021", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNTYxM2NiMWQ3ZGI0NGE3ZWY1Y2RkOTM3YzQ1ZTdkODI3NDMwMjE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-02-02T10:26:24Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-02-03T01:49:21Z"}, "message": "prevent multiple writes to a single entry in a `DepTrackingMap`", "tree": {"sha": "946e53bffd6d6778573766584074ee1075fd0af8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/946e53bffd6d6778573766584074ee1075fd0af8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b5613cb1d7db44a7ef5cdd937c45e7d82743021", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b5613cb1d7db44a7ef5cdd937c45e7d82743021", "html_url": "https://github.com/rust-lang/rust/commit/4b5613cb1d7db44a7ef5cdd937c45e7d82743021", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b5613cb1d7db44a7ef5cdd937c45e7d82743021/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78f7ac561c0b360650b36a175f39475bc237230f", "url": "https://api.github.com/repos/rust-lang/rust/commits/78f7ac561c0b360650b36a175f39475bc237230f", "html_url": "https://github.com/rust-lang/rust/commit/78f7ac561c0b360650b36a175f39475bc237230f"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "ad6c93bf8daac42504de76f976653dc74a8a26b3", "filename": "src/librustc/dep_graph/dep_tracking_map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b5613cb1d7db44a7ef5cdd937c45e7d82743021/src%2Flibrustc%2Fdep_graph%2Fdep_tracking_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b5613cb1d7db44a7ef5cdd937c45e7d82743021/src%2Flibrustc%2Fdep_graph%2Fdep_tracking_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_tracking_map.rs?ref=4b5613cb1d7db44a7ef5cdd937c45e7d82743021", "patch": "@@ -63,8 +63,8 @@ impl<M: DepTrackingMapConfig> DepTrackingMap<M> {\n \n     pub fn insert(&mut self, k: M::Key, v: M::Value) {\n         self.write(&k);\n-        let _old_value = self.map.insert(k, v);\n-        // assert!(old_value.is_none());\n+        let old_value = self.map.insert(k, v);\n+        assert!(old_value.is_none());\n     }\n \n     pub fn contains_key(&self, k: &M::Key) -> bool {"}, {"sha": "266975994ec3ae01d9061cd2291d71e76b431ff8", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4b5613cb1d7db44a7ef5cdd937c45e7d82743021/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b5613cb1d7db44a7ef5cdd937c45e7d82743021/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=4b5613cb1d7db44a7ef5cdd937c45e7d82743021", "patch": "@@ -848,9 +848,10 @@ fn convert_trait_item(ccx: &CrateCtxt, trait_item: &hir::TraitItem) {\n             let const_def_id = ccx.tcx.hir.local_def_id(trait_item.id);\n             generics_of_def_id(ccx, const_def_id);\n             let ty = ccx.icx(&trait_predicates).to_ty(&ty);\n-            tcx.item_types.borrow_mut().insert(const_def_id, ty);\n-            convert_associated_const(ccx, TraitContainer(trait_def_id),\n-                                     trait_item.id, ty);\n+            convert_associated_const(ccx,\n+                                     TraitContainer(trait_def_id),\n+                                     trait_item.id,\n+                                     ty);\n         }\n \n         hir::TraitItemKind::Type(_, ref opt_ty) => {\n@@ -884,9 +885,10 @@ fn convert_impl_item(ccx: &CrateCtxt, impl_item: &hir::ImplItem) {\n             let const_def_id = ccx.tcx.hir.local_def_id(impl_item.id);\n             generics_of_def_id(ccx, const_def_id);\n             let ty = ccx.icx(&impl_predicates).to_ty(&ty);\n-            tcx.item_types.borrow_mut().insert(const_def_id, ty);\n-            convert_associated_const(ccx, ImplContainer(impl_def_id),\n-                                     impl_item.id, ty);\n+            convert_associated_const(ccx,\n+                                     ImplContainer(impl_def_id),\n+                                     impl_item.id,\n+                                     ty);\n         }\n \n         hir::ImplItemKind::Type(ref ty) => {"}]}