{"sha": "41875c82c7858735b1d028b04156c328715ca454", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxODc1YzgyYzc4NTg3MzViMWQwMjhiMDQxNTZjMzI4NzE1Y2E0NTQ=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2021-02-15T01:17:50Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2021-04-02T21:37:49Z"}, "message": "rm target specific logic in link_sanitizer_runtime", "tree": {"sha": "83683fbe2de5d0ce72767746acc00d23e1ccc1ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83683fbe2de5d0ce72767746acc00d23e1ccc1ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41875c82c7858735b1d028b04156c328715ca454", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41875c82c7858735b1d028b04156c328715ca454", "html_url": "https://github.com/rust-lang/rust/commit/41875c82c7858735b1d028b04156c328715ca454", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41875c82c7858735b1d028b04156c328715ca454/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3c0f0a3dfccf75bd7df55b2806788489f7831cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3c0f0a3dfccf75bd7df55b2806788489f7831cd", "html_url": "https://github.com/rust-lang/rust/commit/a3c0f0a3dfccf75bd7df55b2806788489f7831cd"}], "stats": {"total": 36, "additions": 14, "deletions": 22}, "files": [{"sha": "217b8f43229a621c94ab271cb27050bd7b9739ee", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 14, "deletions": 22, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/41875c82c7858735b1d028b04156c328715ca454/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41875c82c7858735b1d028b04156c328715ca454/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=41875c82c7858735b1d028b04156c328715ca454", "patch": "@@ -922,28 +922,20 @@ fn link_sanitizer_runtime(sess: &Session, linker: &mut dyn Linker, name: &str) {\n         .map(|channel| format!(\"-{}\", channel))\n         .unwrap_or_default();\n \n-    match sess.opts.target_triple.triple() {\n-        \"aarch64-apple-darwin\" | \"x86_64-apple-darwin\" => {\n-            // On Apple platforms, the sanitizer is always built as a dylib, and\n-            // LLVM will link to `@rpath/*.dylib`, so we need to specify an\n-            // rpath to the library as well (the rpath should be absolute, see\n-            // PR #41352 for details).\n-            let filename = format!(\"rustc{}_rt.{}\", channel, name);\n-            let path = find_sanitizer_runtime(&sess, &filename);\n-            let rpath = path.to_str().expect(\"non-utf8 component in path\");\n-            linker.args(&[\"-Wl,-rpath\", \"-Xlinker\", rpath]);\n-            linker.link_dylib(Symbol::intern(&filename));\n-        }\n-        \"aarch64-fuchsia\"\n-        | \"aarch64-unknown-linux-gnu\"\n-        | \"x86_64-fuchsia\"\n-        | \"x86_64-unknown-freebsd\"\n-        | \"x86_64-unknown-linux-gnu\" => {\n-            let filename = format!(\"librustc{}_rt.{}.a\", channel, name);\n-            let path = find_sanitizer_runtime(&sess, &filename).join(&filename);\n-            linker.link_whole_rlib(&path);\n-        }\n-        _ => {}\n+    if sess.target.is_like_osx {\n+        // On Apple platforms, the sanitizer is always built as a dylib, and\n+        // LLVM will link to `@rpath/*.dylib`, so we need to specify an\n+        // rpath to the library as well (the rpath should be absolute, see\n+        // PR #41352 for details).\n+        let filename = format!(\"rustc{}_rt.{}\", channel, name);\n+        let path = find_sanitizer_runtime(&sess, &filename);\n+        let rpath = path.to_str().expect(\"non-utf8 component in path\");\n+        linker.args(&[\"-Wl,-rpath\", \"-Xlinker\", rpath]);\n+        linker.link_dylib(Symbol::intern(&filename));\n+    } else {\n+        let filename = format!(\"librustc{}_rt.{}.a\", channel, name);\n+        let path = find_sanitizer_runtime(&sess, &filename).join(&filename);\n+        linker.link_whole_rlib(&path);\n     }\n }\n "}]}