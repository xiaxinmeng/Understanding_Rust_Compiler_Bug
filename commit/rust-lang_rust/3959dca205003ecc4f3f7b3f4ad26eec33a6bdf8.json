{"sha": "3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5NTlkY2EyMDUwMDNlY2M0ZjNmN2IzZjRhZDI2ZWVjMzNhNmJkZjg=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-08-12T21:27:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-12T21:27:05Z"}, "message": "Rollup merge of #53283 - zackmdavis:and_the_case_of_the_flotation_device, r=estebank\n\nwherein we suggest float for integer literals where a float was expected\n\n@sunjay pointed out that this is a nice thing that we could do.\n\nResolves #53280.\n\nr? @estebank", "tree": {"sha": "ced0be3c60e37e3c4dd697e2a9da8148c48fddc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ced0be3c60e37e3c4dd697e2a9da8148c48fddc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbcKYpCRBK7hj4Ov3rIwAAdHIIAG8U/Q1e58YKetf/ZZy75t/d\n915KPTgvduVpUBjsef5IdkNb2koOR019W4yMyjJ/Al1gWrlARrOOMVsvMqW28MAM\nf8GkFIbB/bJwLAb541NrOLD8TbFjt1eQs0KHZT7pvMhrZ3qmVmHxSoUGrp4F1TRa\nUA9XwTO+X2ns7mmNbf0x7ZioA+efutjYGMXjDFuYAASyHEmw1dg0S8D8puuLZzy1\nAUlp4toWKdVjBvRL3puF20eYE92Jg+zfx2TT1+ZungaQ75ht6hB0ckOiqBrIEiwK\nTpwo2MQuQSipDLl4wxCimxVBNZLbeKKdKcELmOc6SQw5a49neFeL3TIS+ZAoqK4=\n=MWUI\n-----END PGP SIGNATURE-----\n", "payload": "tree ced0be3c60e37e3c4dd697e2a9da8148c48fddc1\nparent f618071c46064c0cb6a9a367eb5c9d9a7607c395\nparent 58f660f025c4afc1cdb5cade60f87d78492d9299\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1534109225 +0200\ncommitter GitHub <noreply@github.com> 1534109225 +0200\n\nRollup merge of #53283 - zackmdavis:and_the_case_of_the_flotation_device, r=estebank\n\nwherein we suggest float for integer literals where a float was expected\n\n@sunjay pointed out that this is a nice thing that we could do.\n\nResolves #53280.\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8", "html_url": "https://github.com/rust-lang/rust/commit/3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f618071c46064c0cb6a9a367eb5c9d9a7607c395", "url": "https://api.github.com/repos/rust-lang/rust/commits/f618071c46064c0cb6a9a367eb5c9d9a7607c395", "html_url": "https://github.com/rust-lang/rust/commit/f618071c46064c0cb6a9a367eb5c9d9a7607c395"}, {"sha": "58f660f025c4afc1cdb5cade60f87d78492d9299", "url": "https://api.github.com/repos/rust-lang/rust/commits/58f660f025c4afc1cdb5cade60f87d78492d9299", "html_url": "https://github.com/rust-lang/rust/commit/58f660f025c4afc1cdb5cade60f87d78492d9299"}], "stats": {"total": 108, "additions": 106, "deletions": 2}, "files": [{"sha": "49fffaa375b2f705c91f891cdbdb24d38cb57433", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8", "patch": "@@ -13,7 +13,7 @@ use ty::{self, BoundRegion, Region, Ty, TyCtxt};\n use std::fmt;\n use rustc_target::spec::abi;\n use syntax::ast;\n-use errors::DiagnosticBuilder;\n+use errors::{Applicability, DiagnosticBuilder};\n use syntax_pos::Span;\n \n use hir;\n@@ -250,6 +250,21 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n                     db.note(\"no two closures, even if identical, have the same type\");\n                     db.help(\"consider boxing your closure and/or using it as a trait object\");\n                 }\n+                match (&values.found.sty, &values.expected.sty) { // Issue #53280\n+                    (ty::TyInfer(ty::IntVar(_)), ty::TyFloat(_)) => {\n+                        if let Ok(snippet) = self.sess.codemap().span_to_snippet(sp) {\n+                            if snippet.chars().all(|c| c.is_digit(10) || c == '-' || c == '_') {\n+                                db.span_suggestion_with_applicability(\n+                                    sp,\n+                                    \"use a float literal\",\n+                                    format!(\"{}.0\", snippet),\n+                                    Applicability::MachineApplicable\n+                                );\n+                            }\n+                        }\n+                    },\n+                    _ => {}\n+                }\n             },\n             OldStyleLUB(err) => {\n                 db.note(\"this was previously accepted by the compiler but has been phased out\");"}, {"sha": "288168c699263e07871593c8c149a09954c5da00", "filename": "src/test/ui/catch-block-type-error.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8/src%2Ftest%2Fui%2Fcatch-block-type-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8/src%2Ftest%2Fui%2Fcatch-block-type-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcatch-block-type-error.stderr?ref=3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8", "patch": "@@ -2,7 +2,10 @@ error[E0271]: type mismatch resolving `<std::option::Option<f32> as std::ops::Tr\n   --> $DIR/catch-block-type-error.rs:18:9\n    |\n LL |         42\n-   |         ^^ expected f32, found integral variable\n+   |         ^^\n+   |         |\n+   |         expected f32, found integral variable\n+   |         help: use a float literal: `42.0`\n    |\n    = note: expected type `f32`\n               found type `{integer}`"}, {"sha": "243e3a65f391a7205939d14e1877abe91d093b64", "filename": "src/test/ui/did_you_mean/issue-53280-expected-float-found-integer-literal.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-53280-expected-float-found-integer-literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-53280-expected-float-found-integer-literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-53280-expected-float-found-integer-literal.rs?ref=3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let sixteen: f32 = 16;\n+    //~^ ERROR mismatched types\n+    //~| HELP use a float literal\n+    let a_million_and_seventy: f64 = 1_000_070;\n+    //~^ ERROR mismatched types\n+    //~| HELP use a float literal\n+    let negative_nine: f32 = -9;\n+    //~^ ERROR mismatched types\n+    //~| HELP use a float literal\n+\n+\n+    // only base-10 literals get the suggestion\n+\n+    let sixteen_again: f64 = 0x10;\n+    //~^ ERROR mismatched types\n+    let and_once_more: f32 = 0o20;\n+    //~^ ERROR mismatched types\n+}"}, {"sha": "caaa9541417fb90c99b2ee6997f4f66e7a1543e5", "filename": "src/test/ui/did_you_mean/issue-53280-expected-float-found-integer-literal.stderr", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-53280-expected-float-found-integer-literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-53280-expected-float-found-integer-literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-53280-expected-float-found-integer-literal.stderr?ref=3959dca205003ecc4f3f7b3f4ad26eec33a6bdf8", "patch": "@@ -0,0 +1,57 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-53280-expected-float-found-integer-literal.rs:12:24\n+   |\n+LL |     let sixteen: f32 = 16;\n+   |                        ^^\n+   |                        |\n+   |                        expected f32, found integral variable\n+   |                        help: use a float literal: `16.0`\n+   |\n+   = note: expected type `f32`\n+              found type `{integer}`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-53280-expected-float-found-integer-literal.rs:15:38\n+   |\n+LL |     let a_million_and_seventy: f64 = 1_000_070;\n+   |                                      ^^^^^^^^^\n+   |                                      |\n+   |                                      expected f64, found integral variable\n+   |                                      help: use a float literal: `1_000_070.0`\n+   |\n+   = note: expected type `f64`\n+              found type `{integer}`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-53280-expected-float-found-integer-literal.rs:18:30\n+   |\n+LL |     let negative_nine: f32 = -9;\n+   |                              ^^\n+   |                              |\n+   |                              expected f32, found integral variable\n+   |                              help: use a float literal: `-9.0`\n+   |\n+   = note: expected type `f32`\n+              found type `{integer}`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-53280-expected-float-found-integer-literal.rs:25:30\n+   |\n+LL |     let sixteen_again: f64 = 0x10;\n+   |                              ^^^^ expected f64, found integral variable\n+   |\n+   = note: expected type `f64`\n+              found type `{integer}`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-53280-expected-float-found-integer-literal.rs:27:30\n+   |\n+LL |     let and_once_more: f32 = 0o20;\n+   |                              ^^^^ expected f32, found integral variable\n+   |\n+   = note: expected type `f32`\n+              found type `{integer}`\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}