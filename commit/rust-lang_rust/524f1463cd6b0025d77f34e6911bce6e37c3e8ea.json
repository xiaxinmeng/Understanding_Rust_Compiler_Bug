{"sha": "524f1463cd6b0025d77f34e6911bce6e37c3e8ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNGYxNDYzY2Q2YjAwMjVkNzdmMzRlNjkxMWJjZTZlMzdjM2U4ZWE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-07T13:51:29Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-07T13:51:29Z"}, "message": "add doc comment for EvalError", "tree": {"sha": "78c4fd2eacd4bc5572e96adf9ae9b3948362cc59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78c4fd2eacd4bc5572e96adf9ae9b3948362cc59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/524f1463cd6b0025d77f34e6911bce6e37c3e8ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/524f1463cd6b0025d77f34e6911bce6e37c3e8ea", "html_url": "https://github.com/rust-lang/rust/commit/524f1463cd6b0025d77f34e6911bce6e37c3e8ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/524f1463cd6b0025d77f34e6911bce6e37c3e8ea/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "625763fddd4281200f0f244a601f659fa1782de5", "url": "https://api.github.com/repos/rust-lang/rust/commits/625763fddd4281200f0f244a601f659fa1782de5", "html_url": "https://github.com/rust-lang/rust/commit/625763fddd4281200f0f244a601f659fa1782de5"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "e324abd8e2f32bdc20daa0aa345d32f7a03d8bf6", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/524f1463cd6b0025d77f34e6911bce6e37c3e8ea/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/524f1463cd6b0025d77f34e6911bce6e37c3e8ea/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=524f1463cd6b0025d77f34e6911bce6e37c3e8ea", "patch": "@@ -179,6 +179,11 @@ pub fn struct_error<'a, 'gcx, 'tcx>(\n     struct_span_err!(tcx.sess, tcx.span, E0080, \"{}\", msg)\n }\n \n+/// Packages the kind of error we got from the const code interpreter\n+/// up with a Rust-level backtrace of where the error occured.\n+/// Thsese should always be constructed by calling `.into()` on\n+/// a `InterpError`. In `librustc_mir::interpret`, we have the `err!`\n+/// macro for this\n #[derive(Debug, Clone)]\n pub struct EvalError<'tcx> {\n     pub kind: InterpError<'tcx, u64>,"}]}