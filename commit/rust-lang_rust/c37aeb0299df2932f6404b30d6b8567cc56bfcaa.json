{"sha": "c37aeb0299df2932f6404b30d6b8567cc56bfcaa", "node_id": "C_kwDOAAsO6NoAKGMzN2FlYjAyOTlkZjI5MzJmNjQwNGIzMGQ2Yjg1NjdjYzU2YmZjYWE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-04-01T10:07:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-01T10:07:03Z"}, "message": "Rollup merge of #95528 - RalfJung:miri-is-too-slow, r=scottmcm\n\nskip slow int_log tests in Miri\n\nIterating over i16::MAX many things takes a long time in Miri, let's not do that.\nI added https://github.com/rust-lang/miri/pull/2044 on the Miri side to still give us some test coverage.", "tree": {"sha": "50b2e87d14ef07fbed33e652337b1bbd3535e09e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50b2e87d14ef07fbed33e652337b1bbd3535e09e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c37aeb0299df2932f6404b30d6b8567cc56bfcaa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiRs7HCRBK7hj4Ov3rIwAAsQIIAITHX+lstOXt5XeG82f9p1Rv\nG6f2UidIfor8o7Z9xFo9OMaTSnNJ4HaukgD8ruvzWy9CbhrAt/Qg1KGm4yk9Br8P\nJWnAp6FDd3/tPzwwdv4pXmPsZcD+6qFZGbBqipxBzMW5hS1wpAOJszhIU1ex9jdV\n+eaDzWT+6SgP0X2eP9e/spVoxE9iLtatvx/aS+BK7rw8uOgGPJrNkQpOwcFaI4sf\nD98HQyt8tej+5vS6eBScxNtHTHOBJnDTPuxJEK4EL9eGU5WUB2/SjXr6cpvxP5Br\n3xccxkc875i6TpKU2SlyU4WyRal4xvsyAE2Vc9gnOXPiIJ0pnuKtqJ+Xs2GIwoI=\n=2edE\n-----END PGP SIGNATURE-----\n", "payload": "tree 50b2e87d14ef07fbed33e652337b1bbd3535e09e\nparent 3245e6129819f892fd793d42051f6f7bbd2d91bd\nparent 487bd8184fbd1c0c1db05ce2109737b86a72f837\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1648807623 +0200\ncommitter GitHub <noreply@github.com> 1648807623 +0200\n\nRollup merge of #95528 - RalfJung:miri-is-too-slow, r=scottmcm\n\nskip slow int_log tests in Miri\n\nIterating over i16::MAX many things takes a long time in Miri, let's not do that.\nI added https://github.com/rust-lang/miri/pull/2044 on the Miri side to still give us some test coverage.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c37aeb0299df2932f6404b30d6b8567cc56bfcaa", "html_url": "https://github.com/rust-lang/rust/commit/c37aeb0299df2932f6404b30d6b8567cc56bfcaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c37aeb0299df2932f6404b30d6b8567cc56bfcaa/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3245e6129819f892fd793d42051f6f7bbd2d91bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/3245e6129819f892fd793d42051f6f7bbd2d91bd", "html_url": "https://github.com/rust-lang/rust/commit/3245e6129819f892fd793d42051f6f7bbd2d91bd"}, {"sha": "487bd8184fbd1c0c1db05ce2109737b86a72f837", "url": "https://api.github.com/repos/rust-lang/rust/commits/487bd8184fbd1c0c1db05ce2109737b86a72f837", "html_url": "https://github.com/rust-lang/rust/commit/487bd8184fbd1c0c1db05ce2109737b86a72f837"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "dc3092e1486bcb554afaf0b40971880d090195e6", "filename": "library/core/tests/num/int_log.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c37aeb0299df2932f6404b30d6b8567cc56bfcaa/library%2Fcore%2Ftests%2Fnum%2Fint_log.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c37aeb0299df2932f6404b30d6b8567cc56bfcaa/library%2Fcore%2Ftests%2Fnum%2Fint_log.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fint_log.rs?ref=c37aeb0299df2932f6404b30d6b8567cc56bfcaa", "patch": "@@ -22,12 +22,15 @@ fn checked_log() {\n     assert_eq!(0i8.checked_log(4), None);\n     assert_eq!(0i16.checked_log(4), None);\n \n+    #[cfg(not(miri))] // Miri is too slow\n     for i in i16::MIN..=0 {\n         assert_eq!(i.checked_log(4), None);\n     }\n+    #[cfg(not(miri))] // Miri is too slow\n     for i in 1..=i16::MAX {\n         assert_eq!(i.checked_log(13), Some((i as f32).log(13.0) as u32));\n     }\n+    #[cfg(not(miri))] // Miri is too slow\n     for i in 1..=u16::MAX {\n         assert_eq!(i.checked_log(13), Some((i as f32).log(13.0) as u32));\n     }\n@@ -48,6 +51,7 @@ fn checked_log2() {\n     for i in 1..=u8::MAX {\n         assert_eq!(i.checked_log2(), Some((i as f32).log2() as u32));\n     }\n+    #[cfg(not(miri))] // Miri is too slow\n     for i in 1..=u16::MAX {\n         // Guard against Android's imprecise f32::log2 implementation.\n         if i != 8192 && i != 32768 {\n@@ -60,9 +64,11 @@ fn checked_log2() {\n     for i in 1..=i8::MAX {\n         assert_eq!(i.checked_log2(), Some((i as f32).log2() as u32));\n     }\n+    #[cfg(not(miri))] // Miri is too slow\n     for i in i16::MIN..=0 {\n         assert_eq!(i.checked_log2(), None);\n     }\n+    #[cfg(not(miri))] // Miri is too slow\n     for i in 1..=i16::MAX {\n         // Guard against Android's imprecise f32::log2 implementation.\n         if i != 8192 {\n@@ -87,15 +93,19 @@ fn checked_log10() {\n     assert_eq!(0i8.checked_log10(), None);\n     assert_eq!(0i16.checked_log10(), None);\n \n+    #[cfg(not(miri))] // Miri is too slow\n     for i in i16::MIN..=0 {\n         assert_eq!(i.checked_log10(), None);\n     }\n+    #[cfg(not(miri))] // Miri is too slow\n     for i in 1..=i16::MAX {\n         assert_eq!(i.checked_log10(), Some((i as f32).log10() as u32));\n     }\n+    #[cfg(not(miri))] // Miri is too slow\n     for i in 1..=u16::MAX {\n         assert_eq!(i.checked_log10(), Some((i as f32).log10() as u32));\n     }\n+    #[cfg(not(miri))] // Miri is too slow\n     for i in 1..=100_000u32 {\n         assert_eq!(i.checked_log10(), Some((i as f32).log10() as u32));\n     }"}]}