{"sha": "2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed", "node_id": "C_kwDOAAsO6NoAKDJmODMxMzRlMzc1YTk4YjE0ZWNiMmIxMGRiZWEwYzhiMmM0M2Y1ZWQ", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-06-21T19:27:53Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-10-01T16:45:52Z"}, "message": "Change is_some_and to take by value", "tree": {"sha": "a25a24fe436f1a07b1cc003aff2cf066431c8e11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a25a24fe436f1a07b1cc003aff2cf066431c8e11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed", "html_url": "https://github.com/rust-lang/rust/commit/2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "744e397d8855f7da87d70aa8d0bd9e0f5f0b51a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/744e397d8855f7da87d70aa8d0bd9e0f5f0b51a1", "html_url": "https://github.com/rust-lang/rust/commit/744e397d8855f7da87d70aa8d0bd9e0f5f0b51a1"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "0623d304004488b22132f04632e7ae76ebf24260", "filename": "library/core/src/option.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed", "patch": "@@ -562,19 +562,22 @@ impl<T> Option<T> {\n     /// #![feature(is_some_with)]\n     ///\n     /// let x: Option<u32> = Some(2);\n-    /// assert_eq!(x.is_some_and(|&x| x > 1), true);\n+    /// assert_eq!(x.is_some_and(|x| x > 1), true);\n     ///\n     /// let x: Option<u32> = Some(0);\n-    /// assert_eq!(x.is_some_and(|&x| x > 1), false);\n+    /// assert_eq!(x.is_some_and(|x| x > 1), false);\n     ///\n     /// let x: Option<u32> = None;\n-    /// assert_eq!(x.is_some_and(|&x| x > 1), false);\n+    /// assert_eq!(x.is_some_and(|x| x > 1), false);\n     /// ```\n     #[must_use]\n     #[inline]\n     #[unstable(feature = \"is_some_with\", issue = \"93050\")]\n-    pub fn is_some_and(&self, f: impl FnOnce(&T) -> bool) -> bool {\n-        matches!(self, Some(x) if f(x))\n+    pub fn is_some_and(self, f: impl FnOnce(T) -> bool) -> bool {\n+        match self {\n+            None => false,\n+            Some(x) => f(x),\n+        }\n     }\n \n     /// Returns `true` if the option is a [`None`] value."}, {"sha": "7c740bbd01f636593a931ce06596dc1c5784f6f2", "filename": "library/core/src/result.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed", "patch": "@@ -551,19 +551,22 @@ impl<T, E> Result<T, E> {\n     /// #![feature(is_some_with)]\n     ///\n     /// let x: Result<u32, &str> = Ok(2);\n-    /// assert_eq!(x.is_ok_and(|&x| x > 1), true);\n+    /// assert_eq!(x.is_ok_and(|x| x > 1), true);\n     ///\n     /// let x: Result<u32, &str> = Ok(0);\n-    /// assert_eq!(x.is_ok_and(|&x| x > 1), false);\n+    /// assert_eq!(x.is_ok_and(|x| x > 1), false);\n     ///\n     /// let x: Result<u32, &str> = Err(\"hey\");\n-    /// assert_eq!(x.is_ok_and(|&x| x > 1), false);\n+    /// assert_eq!(x.is_ok_and(|x| x > 1), false);\n     /// ```\n     #[must_use]\n     #[inline]\n     #[unstable(feature = \"is_some_with\", issue = \"93050\")]\n-    pub fn is_ok_and(&self, f: impl FnOnce(&T) -> bool) -> bool {\n-        matches!(self, Ok(x) if f(x))\n+    pub fn is_ok_and(self, f: impl FnOnce(T) -> bool) -> bool {\n+        match self {\n+            Err(_) => false,\n+            Ok(x) => f(x),\n+        }\n     }\n \n     /// Returns `true` if the result is [`Err`].\n@@ -607,8 +610,11 @@ impl<T, E> Result<T, E> {\n     #[must_use]\n     #[inline]\n     #[unstable(feature = \"is_some_with\", issue = \"93050\")]\n-    pub fn is_err_and(&self, f: impl FnOnce(&E) -> bool) -> bool {\n-        matches!(self, Err(x) if f(x))\n+    pub fn is_err_and(self, f: impl FnOnce(E) -> bool) -> bool {\n+        match self {\n+            Ok(_) => false,\n+            Err(e) => f(e),\n+        }\n     }\n \n     /////////////////////////////////////////////////////////////////////////"}, {"sha": "97632af785db587c17ea6122b481f4a6aeb72eb0", "filename": "src/tools/miri/src/stacked_borrows/stack.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fstack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fstack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fstack.rs?ref=2f83134e375a98b14ecb2b10dbea0c8b2c43f5ed", "patch": "@@ -211,7 +211,7 @@ impl<'tcx> Stack {\n         }\n \n         // Couldn't find it in the stack; but if there is an unknown bottom it might be there.\n-        let found = self.unknown_bottom.is_some_and(|&unknown_limit| {\n+        let found = self.unknown_bottom.is_some_and(|unknown_limit| {\n             tag.0 < unknown_limit.0 // unknown_limit is an upper bound for what can be in the unknown bottom.\n         });\n         if found { Ok(None) } else { Err(()) }"}]}