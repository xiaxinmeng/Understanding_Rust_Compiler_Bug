{"sha": "4b330f52f6afe46839c5e24b4324969b06c3f439", "node_id": "C_kwDOAAsO6NoAKDRiMzMwZjUyZjZhZmU0NjgzOWM1ZTI0YjQzMjQ5NjliMDZjM2Y0Mzk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-04T08:17:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-04T08:17:22Z"}, "message": "Auto merge of #14247 - pascalkuthe:master, r=Veykril\n\ngenerate correct completion edits for missing macro arguments\n\nFixes #14246\n\nrust-analyzer used the token at the cursor after macro expansion to decide whether to replace the token at the cursor before macro expansion. In most cases these two are the same but in some cases these can mismatch which can lead to incorrect replacements.\n\nFor example if an ident/expr macro argument is missing rust-analyzer generates a \"missing\" identifier as a placeholder, there is only a brace at the cursor. Therefore, rust-analyzer will incorrectly replace the macro brace with the completion in that case leading to #14246.\n\nUsing the expanded token type was intentional. However, this doesn't seem to ever be desirable (this is supported by the fact that there were no tests that relied on this behavior) since the type of edit to perform should always be determined by the token it's actually applied to. Therefore this PR simply switches the relevant match to use the unexpanded token instead", "tree": {"sha": "f7de617eeef1bb9112a3253077cb6ec971aff216", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7de617eeef1bb9112a3253077cb6ec971aff216"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b330f52f6afe46839c5e24b4324969b06c3f439", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b330f52f6afe46839c5e24b4324969b06c3f439", "html_url": "https://github.com/rust-lang/rust/commit/4b330f52f6afe46839c5e24b4324969b06c3f439", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b330f52f6afe46839c5e24b4324969b06c3f439/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73e2505cfa8be6838f5151b272f1d24869b2a3d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/73e2505cfa8be6838f5151b272f1d24869b2a3d6", "html_url": "https://github.com/rust-lang/rust/commit/73e2505cfa8be6838f5151b272f1d24869b2a3d6"}, {"sha": "2e465d18f23f71f71f9c826087f78546e5aea529", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e465d18f23f71f71f9c826087f78546e5aea529", "html_url": "https://github.com/rust-lang/rust/commit/2e465d18f23f71f71f9c826087f78546e5aea529"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "7dc29c3d5acad7d5358645088e79dae996486184", "filename": "crates/ide-completion/src/context.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4b330f52f6afe46839c5e24b4324969b06c3f439/crates%2Fide-completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b330f52f6afe46839c5e24b4324969b06c3f439/crates%2Fide-completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcontext.rs?ref=4b330f52f6afe46839c5e24b4324969b06c3f439", "patch": "@@ -387,8 +387,7 @@ pub(crate) struct CompletionContext<'a> {\n impl<'a> CompletionContext<'a> {\n     /// The range of the identifier that is being completed.\n     pub(crate) fn source_range(&self) -> TextRange {\n-        // check kind of macro-expanded token, but use range of original token\n-        let kind = self.token.kind();\n+        let kind = self.original_token.kind();\n         match kind {\n             CHAR => {\n                 // assume we are completing a lifetime but the user has only typed the '"}, {"sha": "44e8860763329abd27997f1c726ab443171db2a3", "filename": "crates/ide-completion/src/render/macro_.rs", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/4b330f52f6afe46839c5e24b4324969b06c3f439/crates%2Fide-completion%2Fsrc%2Frender%2Fmacro_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b330f52f6afe46839c5e24b4324969b06c3f439/crates%2Fide-completion%2Fsrc%2Frender%2Fmacro_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender%2Fmacro_.rs?ref=4b330f52f6afe46839c5e24b4324969b06c3f439", "patch": "@@ -264,6 +264,65 @@ macro_rules! foo {\n fn main() {\n     foo!($0)\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_missing_macro_arg() {\n+        // Regression test for https://github.com/rust-lang/rust-analyzer/issues/14246\n+        check_edit(\n+            \"BAR\",\n+            r#\"\n+macro_rules! foo {\n+    ($val:ident,  $val2: ident) => {\n+        $val $val2\n+    };\n+}\n+\n+const BAR: u32 = 9;\n+fn main() {\n+    foo!(BAR, $0)\n+}\n+\"#,\n+            r#\"\n+macro_rules! foo {\n+    ($val:ident,  $val2: ident) => {\n+        $val $val2\n+    };\n+}\n+\n+const BAR: u32 = 9;\n+fn main() {\n+    foo!(BAR, BAR)\n+}\n+\"#,\n+        );\n+        check_edit(\n+            \"BAR\",\n+            r#\"\n+macro_rules! foo {\n+    ($val:ident,  $val2: ident) => {\n+        $val $val2\n+    };\n+}\n+\n+const BAR: u32 = 9;\n+fn main() {\n+    foo!($0)\n+}\n+\"#,\n+            r#\"\n+macro_rules! foo {\n+    ($val:ident,  $val2: ident) => {\n+        $val $val2\n+    };\n+}\n+\n+const BAR: u32 = 9;\n+fn main() {\n+    foo!(BAR)\n+}\n \"#,\n         );\n     }"}]}