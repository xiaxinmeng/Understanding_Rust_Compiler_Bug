{"sha": "9cdfe1e6039598961838ba2cc88a6ed6aa5449bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljZGZlMWU2MDM5NTk4OTYxODM4YmEyY2M4OGE2ZWQ2YWE1NDQ5YmY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-23T06:30:25Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-24T01:38:59Z"}, "message": "rt: Remove rust_abi", "tree": {"sha": "04997cedc88215f23ba63f96ad31b5accc4775dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04997cedc88215f23ba63f96ad31b5accc4775dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cdfe1e6039598961838ba2cc88a6ed6aa5449bf", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cdfe1e6039598961838ba2cc88a6ed6aa5449bf", "html_url": "https://github.com/rust-lang/rust/commit/9cdfe1e6039598961838ba2cc88a6ed6aa5449bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cdfe1e6039598961838ba2cc88a6ed6aa5449bf/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ee24437ce80bf25023ddb45db37fa3eadc689f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ee24437ce80bf25023ddb45db37fa3eadc689f1", "html_url": "https://github.com/rust-lang/rust/commit/0ee24437ce80bf25023ddb45db37fa3eadc689f1"}], "stats": {"total": 169, "additions": 0, "deletions": 169}, "files": [{"sha": "6a9620c7364d25f092125106d2ff40f2af69c532", "filename": "mk/rt.mk", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9cdfe1e6039598961838ba2cc88a6ed6aa5449bf/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9cdfe1e6039598961838ba2cc88a6ed6aa5449bf/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=9cdfe1e6039598961838ba2cc88a6ed6aa5449bf", "patch": "@@ -74,7 +74,6 @@ RUNTIME_CXXS_$(1)_$(2) := \\\n               rt/rust_log.cpp \\\n               rt/isaac/randport.cpp \\\n               rt/miniz.cpp \\\n-              rt/rust_abi.cpp \\\n               rt/memory_region.cpp \\\n               rt/boxed_region.cpp \\\n               rt/arch/$$(HOST_$(1))/context.cpp \\"}, {"sha": "fd1b7860b29a423ce08149853e51e33962fe859a", "filename": "src/rt/rust_abi.cpp", "status": "removed", "additions": 0, "deletions": 88, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/0ee24437ce80bf25023ddb45db37fa3eadc689f1/src%2Frt%2Frust_abi.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/0ee24437ce80bf25023ddb45db37fa3eadc689f1/src%2Frt%2Frust_abi.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_abi.cpp?ref=0ee24437ce80bf25023ddb45db37fa3eadc689f1", "patch": "@@ -1,88 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ABI-specific routines.\n-\n-#include <sstream>\n-#include <string>\n-#include <vector>\n-#include <cstdlib>\n-#include <stdint.h>\n-#include \"rust_abi.h\"\n-\n-#if defined(__APPLE__) || defined(__linux__) || defined(__FreeBSD__)\n-#define HAVE_DLFCN_H\n-#include <dlfcn.h>\n-#elif defined(_WIN32)\n-// Otherwise it's windows.h -- included in rust_abi.h\n-#endif\n-\n-#define END_OF_STACK_RA     (void (*)())0xdeadbeef\n-\n-weak_symbol<uint32_t> abi_version(\"rust_abi_version\");\n-\n-uint32_t get_abi_version() {\n-    return (*abi_version == NULL) ? 0 : **abi_version;\n-}\n-\n-namespace stack_walk {\n-\n-#ifdef HAVE_DLFCN_H\n-std::string\n-frame::symbol() const {\n-    std::stringstream ss;\n-\n-    Dl_info info;\n-    if (!dladdr((void *)ra, &info))\n-        ss << \"??\";\n-    else\n-        ss << info.dli_sname;\n-\n-    ss << \" @ \" << std::hex << (uintptr_t)ra;\n-    return ss.str();\n-}\n-#else\n-std::string\n-frame::symbol() const {\n-    std::stringstream ss;\n-    ss << std::hex << (uintptr_t)ra;\n-    return ss.str();\n-}\n-#endif\n-\n-std::vector<frame>\n-backtrace() {\n-    std::vector<frame> frames;\n-\n-    // Ideally we would use the current value of EIP here, but there's no\n-    // portable way to get that and there are never any GC roots in our C++\n-    // frames anyhow.\n-    frame f(__builtin_frame_address(0), (void (*)())NULL);\n-\n-    while (f.ra != END_OF_STACK_RA) {\n-        frames.push_back(f);\n-        f.next();\n-    }\n-    return frames;\n-}\n-\n-std::string\n-symbolicate(const std::vector<frame> &frames) {\n-    std::stringstream ss;\n-    std::vector<frame>::const_iterator begin(frames.begin()),\n-                                       end(frames.end());\n-    while (begin != end) {\n-        ss << begin->symbol() << std::endl;\n-        ++begin;\n-    }\n-    return ss.str();\n-}\n-\n-}   // end namespace stack_walk"}, {"sha": "4179bf751579f35a01d67b13585c8fb164fddd23", "filename": "src/rt/rust_abi.h", "status": "removed", "additions": 0, "deletions": 78, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/0ee24437ce80bf25023ddb45db37fa3eadc689f1/src%2Frt%2Frust_abi.h", "raw_url": "https://github.com/rust-lang/rust/raw/0ee24437ce80bf25023ddb45db37fa3eadc689f1/src%2Frt%2Frust_abi.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_abi.h?ref=0ee24437ce80bf25023ddb45db37fa3eadc689f1", "patch": "@@ -1,78 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ABI-specific routines.\n-\n-#ifndef RUST_ABI_H\n-#define RUST_ABI_H\n-\n-#include <cstdlib>\n-#include <string>\n-#include <vector>\n-#include <stdint.h>\n-\n-#ifdef __WIN32__\n-#include <windows.h>\n-#else\n-#include <dlfcn.h>\n-#endif\n-\n-template<typename T>\n-class weak_symbol {\n-private:\n-    bool init;\n-    T *data;\n-    const char *name;\n-\n-    void fill() {\n-        if (init)\n-            return;\n-\n-#ifdef __WIN32__\n-        data = (T *)GetProcAddress(GetModuleHandle(NULL), name);\n-#else\n-        data = (T *)dlsym(RTLD_DEFAULT, name);\n-#endif\n-\n-        init = true;\n-    }\n-\n-public:\n-    weak_symbol(const char *in_name)\n-    : init(false), data(NULL), name(in_name) {}\n-\n-    T *&operator*() { fill(); return data; }\n-};\n-\n-namespace stack_walk {\n-\n-struct frame {\n-    uint8_t *bp;    // The frame pointer.\n-    void (*ra)();   // The return address.\n-\n-    frame(void *in_bp, void (*in_ra)()) : bp((uint8_t *)in_bp), ra(in_ra) {}\n-\n-    inline void next() {\n-        ra = *(void (**)())(bp + sizeof(void *));\n-        bp = *(uint8_t **)bp;\n-    }\n-\n-    std::string symbol() const;\n-};\n-\n-std::vector<frame> backtrace();\n-std::string symbolicate(const std::vector<frame> &frames);\n-\n-}   // end namespace stack_walk\n-\n-\n-uint32_t get_abi_version();\n-\n-#endif"}, {"sha": "6f3a3bd36865f8d5eac738276f8f91966cb16443", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9cdfe1e6039598961838ba2cc88a6ed6aa5449bf/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/9cdfe1e6039598961838ba2cc88a6ed6aa5449bf/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=9cdfe1e6039598961838ba2cc88a6ed6aa5449bf", "patch": "@@ -15,7 +15,6 @@\n #include \"sync/lock_and_signal.h\"\n #include \"memory_region.h\"\n #include \"boxed_region.h\"\n-#include \"rust_abi.h\"\n #include \"rust_rng.h\"\n #include \"vg/valgrind.h\"\n #include \"sp.h\""}, {"sha": "f10a1f36938a30cc9a73834e997ab06535db1438", "filename": "src/rt/rust_test_helpers.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9cdfe1e6039598961838ba2cc88a6ed6aa5449bf/src%2Frt%2Frust_test_helpers.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/9cdfe1e6039598961838ba2cc88a6ed6aa5449bf/src%2Frt%2Frust_test_helpers.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_test_helpers.cpp?ref=9cdfe1e6039598961838ba2cc88a6ed6aa5449bf", "patch": "@@ -13,7 +13,6 @@\n #include \"rust_util.h\"\n #include \"sync/rust_thread.h\"\n #include \"sync/lock_and_signal.h\"\n-#include \"rust_abi.h\"\n \n // These functions are used in the unit tests for C ABI calls.\n "}]}