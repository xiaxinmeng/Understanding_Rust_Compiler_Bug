{"sha": "e812a8abdebd6e4d03aad84b4f7d671a0cb49fdf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4MTJhOGFiZGViZDZlNGQwM2FhZDg0YjRmN2Q2NzFhMGNiNDlmZGY=", "commit": {"author": {"name": "Andrea Nall", "email": "anall@andreanall.com", "date": "2021-03-09T05:08:52Z"}, "committer": {"name": "Andrea Nall", "email": "anall@andreanall.com", "date": "2021-03-09T05:08:52Z"}, "message": "use `.all` instead of negative use of `.any`", "tree": {"sha": "883f5ec015ea5c27438b494829ba68380e5debcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/883f5ec015ea5c27438b494829ba68380e5debcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e812a8abdebd6e4d03aad84b4f7d671a0cb49fdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e812a8abdebd6e4d03aad84b4f7d671a0cb49fdf", "html_url": "https://github.com/rust-lang/rust/commit/e812a8abdebd6e4d03aad84b4f7d671a0cb49fdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e812a8abdebd6e4d03aad84b4f7d671a0cb49fdf/comments", "author": {"login": "anall", "id": 12371, "node_id": "MDQ6VXNlcjEyMzcx", "avatar_url": "https://avatars.githubusercontent.com/u/12371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anall", "html_url": "https://github.com/anall", "followers_url": "https://api.github.com/users/anall/followers", "following_url": "https://api.github.com/users/anall/following{/other_user}", "gists_url": "https://api.github.com/users/anall/gists{/gist_id}", "starred_url": "https://api.github.com/users/anall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anall/subscriptions", "organizations_url": "https://api.github.com/users/anall/orgs", "repos_url": "https://api.github.com/users/anall/repos", "events_url": "https://api.github.com/users/anall/events{/privacy}", "received_events_url": "https://api.github.com/users/anall/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anall", "id": 12371, "node_id": "MDQ6VXNlcjEyMzcx", "avatar_url": "https://avatars.githubusercontent.com/u/12371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anall", "html_url": "https://github.com/anall", "followers_url": "https://api.github.com/users/anall/followers", "following_url": "https://api.github.com/users/anall/following{/other_user}", "gists_url": "https://api.github.com/users/anall/gists{/gist_id}", "starred_url": "https://api.github.com/users/anall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anall/subscriptions", "organizations_url": "https://api.github.com/users/anall/orgs", "repos_url": "https://api.github.com/users/anall/repos", "events_url": "https://api.github.com/users/anall/events{/privacy}", "received_events_url": "https://api.github.com/users/anall/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e322c773e3db22aadd60ce9a1803076fcbfeef2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e322c773e3db22aadd60ce9a1803076fcbfeef2d", "html_url": "https://github.com/rust-lang/rust/commit/e322c773e3db22aadd60ce9a1803076fcbfeef2d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "c0722f37f4947ee9b787ab538423bd84a22c0489", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e812a8abdebd6e4d03aad84b4f7d671a0cb49fdf/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e812a8abdebd6e4d03aad84b4f7d671a0cb49fdf/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=e812a8abdebd6e4d03aad84b4f7d671a0cb49fdf", "patch": "@@ -1506,13 +1506,13 @@ fn is_normalizable_helper<'tcx>(\n         let cause = rustc_middle::traits::ObligationCause::dummy();\n         if infcx.at(&cause, param_env).normalize(ty).is_ok() {\n             match ty.kind() {\n-                ty::Adt(def, substs) => !def.variants.iter().any(|variant| {\n+                ty::Adt(def, substs) => def.variants.iter().all(|variant| {\n                     variant\n                         .fields\n                         .iter()\n-                        .any(|field| !is_normalizable_helper(cx, param_env, field.ty(cx.tcx, substs), cache))\n+                        .all(|field| is_normalizable_helper(cx, param_env, field.ty(cx.tcx, substs), cache))\n                 }),\n-                _ => !ty.walk().any(|generic_arg| !match generic_arg.unpack() {\n+                _ => ty.walk().all(|generic_arg| match generic_arg.unpack() {\n                     GenericArgKind::Type(inner_ty) if inner_ty != ty => {\n                         is_normalizable_helper(cx, param_env, inner_ty, cache)\n                     },"}]}