{"sha": "5119597dc6549e21d62ce7bae7b7418b3f8bf56e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxMTk1OTdkYzY1NDllMjFkNjJjZTdiYWU3Yjc0MThiM2Y4YmY1NmU=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-19T15:44:47Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-28T16:51:15Z"}, "message": "hard to read the implied double negative", "tree": {"sha": "1f44b05c0c2e66186a7302eca49b9f1e48ce858b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f44b05c0c2e66186a7302eca49b9f1e48ce858b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5119597dc6549e21d62ce7bae7b7418b3f8bf56e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5119597dc6549e21d62ce7bae7b7418b3f8bf56e", "html_url": "https://github.com/rust-lang/rust/commit/5119597dc6549e21d62ce7bae7b7418b3f8bf56e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5119597dc6549e21d62ce7bae7b7418b3f8bf56e/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c10a9412e2b1668bfe348f4728eedc2de0c642a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c10a9412e2b1668bfe348f4728eedc2de0c642a", "html_url": "https://github.com/rust-lang/rust/commit/3c10a9412e2b1668bfe348f4728eedc2de0c642a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "aa67bb2353228988660df13e43d509c143870547", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5119597dc6549e21d62ce7bae7b7418b3f8bf56e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5119597dc6549e21d62ce7bae7b7418b3f8bf56e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=5119597dc6549e21d62ce7bae7b7418b3f8bf56e", "patch": "@@ -2329,16 +2329,16 @@ pub impl Parser {\n                 let binding_mode =\n                     if refutable {bind_infer} else {bind_by_copy};\n \n-                let cannot_be_enum_or_struct;\n+                let can_be_enum_or_struct;\n                 match self.look_ahead(1) {\n                     token::LPAREN | token::LBRACKET | token::LT |\n                     token::LBRACE | token::MOD_SEP =>\n-                        cannot_be_enum_or_struct = false,\n+                        can_be_enum_or_struct = true,\n                     _ =>\n-                        cannot_be_enum_or_struct = true\n+                        can_be_enum_or_struct = false\n                 }\n \n-                if is_plain_ident(&*self.token) && cannot_be_enum_or_struct {\n+                if is_plain_ident(&*self.token) && !can_be_enum_or_struct {\n                     let name = self.parse_path_without_tps();\n                     let sub;\n                     if self.eat(&token::AT) {"}]}