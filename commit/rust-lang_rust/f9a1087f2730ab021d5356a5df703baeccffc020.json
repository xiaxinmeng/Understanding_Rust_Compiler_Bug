{"sha": "f9a1087f2730ab021d5356a5df703baeccffc020", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5YTEwODdmMjczMGFiMDIxZDUzNTZhNWRmNzAzYmFlY2NmZmMwMjA=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-11T12:57:40Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-11T12:57:40Z"}, "message": "Feature-gate the `#[unsafe_no_drop_flag]` attribute.\n\nSee RFC 320, \"Non-zeroing dynamic drops.\"\n\nFix #22173\n\n[breaking-change]", "tree": {"sha": "f72d08a0947b2144e09b34066afa46d2ec3d032c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f72d08a0947b2144e09b34066afa46d2ec3d032c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9a1087f2730ab021d5356a5df703baeccffc020", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9a1087f2730ab021d5356a5df703baeccffc020", "html_url": "https://github.com/rust-lang/rust/commit/f9a1087f2730ab021d5356a5df703baeccffc020", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9a1087f2730ab021d5356a5df703baeccffc020/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0047f8bbd8f94c7ba54d42eb7272c89a48d6ae54", "url": "https://api.github.com/repos/rust-lang/rust/commits/0047f8bbd8f94c7ba54d42eb7272c89a48d6ae54", "html_url": "https://github.com/rust-lang/rust/commit/0047f8bbd8f94c7ba54d42eb7272c89a48d6ae54"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "87106041c69d7f213e903aab58a791ca3a780bf1", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=f9a1087f2730ab021d5356a5df703baeccffc020", "patch": "@@ -71,6 +71,7 @@\n #![feature(box_syntax)]\n #![feature(optin_builtin_traits)]\n #![feature(unboxed_closures)]\n+#![feature(unsafe_no_drop_flag)]\n #![feature(core)]\n #![feature(hash)]\n #![cfg_attr(all(not(feature = \"external_funcs\"), not(feature = \"external_crate\")),"}, {"sha": "8e73a0c9f804c94cb5fcf9073f7eeb33d60a92bb", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=f9a1087f2730ab021d5356a5df703baeccffc020", "patch": "@@ -26,10 +26,12 @@\n #![feature(box_syntax)]\n #![feature(core)]\n #![feature(hash)]\n+#![feature(slicing_syntax)]\n #![feature(staged_api)]\n #![feature(unboxed_closures)]\n #![feature(unicode)]\n-#![feature(unsafe_destructor, slicing_syntax)]\n+#![feature(unsafe_destructor)]\n+#![feature(unsafe_no_drop_flag)]\n #![cfg_attr(test, feature(rand, rustc_private, test))]\n #![cfg_attr(test, allow(deprecated))] // rand\n "}, {"sha": "429b1324f9713ea6d10dcef9ad0edd983e7c0ca4", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=f9a1087f2730ab021d5356a5df703baeccffc020", "patch": "@@ -111,7 +111,7 @@\n #![feature(core)]\n #![feature(hash)]\n #![feature(int_uint)]\n-#![feature(lang_items, unsafe_destructor)]\n+#![feature(lang_items)]\n #![feature(libc)]\n #![feature(linkage, thread_local, asm)]\n #![feature(old_impl_check)]\n@@ -120,6 +120,8 @@\n #![feature(staged_api)]\n #![feature(unboxed_closures)]\n #![feature(unicode)]\n+#![feature(unsafe_destructor)]\n+#![feature(unsafe_no_drop_flag)]\n #![feature(macro_reexport)]\n #![cfg_attr(test, feature(test))]\n "}, {"sha": "e3b9402ba3008ca5e7051dbad2db354a74084e71", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=f9a1087f2730ab021d5356a5df703baeccffc020", "patch": "@@ -126,6 +126,10 @@ static KNOWN_FEATURES: &'static [(&'static str, &'static str, Status)] = &[\n \n     // Allows using #![no_std]\n     (\"no_std\", \"1.0.0\", Active),\n+\n+    // Allows using the unsafe_no_drop_flag attribute (unlikely to\n+    // switch to Accepted; see RFC 320)\n+    (\"unsafe_no_drop_flag\", \"1.0.0\", Active),\n ];\n \n enum Status {\n@@ -474,6 +478,12 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n             self.gate_feature(\"no_std\", attr.span,\n                               \"no_std is experimental\");\n         }\n+\n+        if attr.check_name(\"unsafe_no_drop_flag\") {\n+            self.gate_feature(\"unsafe_no_drop_flag\", attr.span,\n+                              \"unsafe_no_drop_flag has unstable semantics \\\n+                               and may be removed in the future\");\n+        }\n     }\n \n     fn visit_pat(&mut self, pattern: &ast::Pat) {"}, {"sha": "a21deb44fcc834e7023a866f042686fb1f40f40a", "filename": "src/test/auxiliary/issue-10028.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Ftest%2Fauxiliary%2Fissue-10028.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Ftest%2Fauxiliary%2Fissue-10028.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-10028.rs?ref=f9a1087f2730ab021d5356a5df703baeccffc020", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(unsafe_no_drop_flag)]\n+\n #[unsafe_no_drop_flag]\n pub struct ZeroLengthThingWithDestructor;\n impl Drop for ZeroLengthThingWithDestructor {"}, {"sha": "bd799917842b124881ebc58b2c95fd5b1c66a5b9", "filename": "src/test/run-pass/attr-no-drop-flag-size.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Ftest%2Frun-pass%2Fattr-no-drop-flag-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Ftest%2Frun-pass%2Fattr-no-drop-flag-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-no-drop-flag-size.rs?ref=f9a1087f2730ab021d5356a5df703baeccffc020", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![feature(unsafe_destructor)]\n+#![feature(unsafe_no_drop_flag)]\n \n use std::mem::size_of;\n "}, {"sha": "a6af2327c9e8096f73cea2876aadb63e41742a2f", "filename": "src/test/run-pass/issue-10734.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Ftest%2Frun-pass%2Fissue-10734.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Ftest%2Frun-pass%2Fissue-10734.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10734.rs?ref=f9a1087f2730ab021d5356a5df703baeccffc020", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(unsafe_no_drop_flag)]\n+\n static mut drop_count: uint = 0;\n \n #[unsafe_no_drop_flag]"}, {"sha": "f4d03a5cda400aa603017f7d5d7b22daab2e97a2", "filename": "src/test/run-pass/zero-size-type-destructors.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Ftest%2Frun-pass%2Fzero-size-type-destructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a1087f2730ab021d5356a5df703baeccffc020/src%2Ftest%2Frun-pass%2Fzero-size-type-destructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fzero-size-type-destructors.rs?ref=f9a1087f2730ab021d5356a5df703baeccffc020", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(unsafe_no_drop_flag)]\n+\n static mut destructions : int = 3;\n \n pub fn foo() {"}]}