{"sha": "f909d2b56c2f21c03beea2275d5e0d9052599302", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5MDlkMmI1NmMyZjIxYzAzYmVlYTIyNzVkNWUwZDkwNTI1OTkzMDI=", "commit": {"author": {"name": "Francisco Lopes", "email": "francisco@oblita.com", "date": "2019-12-17T23:47:20Z"}, "committer": {"name": "Francisco Lopes", "email": "francisco@oblita.com", "date": "2019-12-17T23:57:32Z"}, "message": "Cleanup Vim and NeoVim instructions. Fix #2579", "tree": {"sha": "c9ba05d96dacaabf193095886ddad013a780c579", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9ba05d96dacaabf193095886ddad013a780c579"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f909d2b56c2f21c03beea2275d5e0d9052599302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f909d2b56c2f21c03beea2275d5e0d9052599302", "html_url": "https://github.com/rust-lang/rust/commit/f909d2b56c2f21c03beea2275d5e0d9052599302", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f909d2b56c2f21c03beea2275d5e0d9052599302/comments", "author": null, "committer": null, "parents": [{"sha": "ee93fac7767d36ee91d5a0029bb58023765c72d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee93fac7767d36ee91d5a0029bb58023765c72d5", "html_url": "https://github.com/rust-lang/rust/commit/ee93fac7767d36ee91d5a0029bb58023765c72d5"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "9cdabfd421b2839554adc287d3e213fbb994ade0", "filename": "docs/user/README.md", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f909d2b56c2f21c03beea2275d5e0d9052599302/docs%2Fuser%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/f909d2b56c2f21c03beea2275d5e0d9052599302/docs%2Fuser%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2FREADME.md?ref=f909d2b56c2f21c03beea2275d5e0d9052599302", "patch": "@@ -135,44 +135,39 @@ to load path and require it in `init.el`\n * (Optionally) bind commands like `rust-analyzer-join-lines`, `rust-analyzer-extend-selection` and `rust-analyzer-expand-macro` to keys, and enable `rust-analyzer-inlay-hints-mode` to get inline type hints\n \n \n-## Vim and NeoVim\n+## Vim and NeoVim (coc-rust-analyzer)\n \n-Neovim 0.5 has a built in language server. For a quick start configuration of\n-rust-analyzer, use [neovim/nvim-lsp](https://github.com/neovim/nvim-lsp#rust_analyzer).\n-Once `neovim/nvim-lsp` is installed, you can use `call nvim_lsp#setup(\"rust_analyzer\", {})`\n-or `lua require'nvim_lsp'.rust_analyzer.setup({})` to quickly get set up.\n-\n-* Install coc.nvim by following the instructions at [coc.nvim]\n-  - You will need nodejs installed.\n-  - You may want to include some of the sample vim configurations [from here][coc-vim-conf]\n-  - Note that if you use a plugin manager other than `vim-plug`, you may need to manually\n-    checkout the `release` branch wherever your plugin manager cloned it. Otherwise you will\n-    get errors about a missing javascript file.\n-* Run `:CocInstall coc-rust-analyzer` to install [coc-rust-analyzer], this extension implemented _most_ of the features supported in the VSCode extension:\n+* Install coc.nvim by following the instructions at [coc.nvim][] (nodejs required)\n+* Run `:CocInstall coc-rust-analyzer` to install [coc-rust-analyzer], this extension implements _most_ of the features supported in the VSCode extension:\n   - same configurations as VSCode extension, `rust-analyzer.raLspServerPath`, `rust-analyzer.enableCargoWatchOnStartup` etc.\n   - same commands too, `rust-analyzer.analyzerStatus`, `rust-analyzer.startCargoWatch` etc.\n   - highlighting and inlay_hints are not implemented yet\n \n [coc.nvim]: https://github.com/neoclide/coc.nvim\n-[coc-vim-conf]: https://github.com/neoclide/coc.nvim/#example-vim-configuration\n [coc-rust-analyzer]: https://github.com/fannheyward/coc-rust-analyzer\n \n-## Vim and NeoVim Alternative\n+## Vim and NeoVim (LanguageClient-neovim)\n \n * Install LanguageClient-neovim by following the instructions [here][lang-client-neovim]\n-  - No extra run-time is required as this server is written in Rust\n   - The github project wiki has extra tips on configuration\n \n * Configure by adding this to your vim/neovim config file (replacing the existing rust specific line if it exists):\n \n-```\n+```vim\n let g:LanguageClient_serverCommands = {\n \\ 'rust': ['ra_lsp_server'],\n \\ }\n ```\n \n [lang-client-neovim]: https://github.com/autozimu/LanguageClient-neovim\n \n+## NeoVim (nvim-lsp)\n+\n+NeoVim 0.5 (not yet released) has built in language server support. For a quick start configuration\n+of rust-analyzer, use [neovim/nvim-lsp](https://github.com/neovim/nvim-lsp#rust_analyzer).\n+Once `neovim/nvim-lsp` is installed, you can use `call nvim_lsp#setup(\"rust_analyzer\", {})`\n+or `lua require'nvim_lsp'.rust_analyzer.setup({})` to quickly get set up.\n+\n \n ## Sublime Text 3\n "}]}