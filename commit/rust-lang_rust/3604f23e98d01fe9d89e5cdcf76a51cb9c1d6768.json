{"sha": "3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MDRmMjNlOThkMDFmZTlkODllNWNkY2Y3NmE1MWNiOWMxZDY3Njg=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-03-22T17:56:23Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-03-22T17:56:23Z"}, "message": "Merge #1012\n\n1012: Move join_lines and test_utils to ra_ide_api r=matklad a=detrumi\n\nPart of #1009 \n\nCo-authored-by: Wilco Kusee <wilcokusee@gmail.com>", "tree": {"sha": "de867640036faf167ff07a62d22db02c37f48088", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de867640036faf167ff07a62d22db02c37f48088"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768", "html_url": "https://github.com/rust-lang/rust/commit/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "6e324d38d6ef3e250ff32a397f4777699e006f7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e324d38d6ef3e250ff32a397f4777699e006f7f", "html_url": "https://github.com/rust-lang/rust/commit/6e324d38d6ef3e250ff32a397f4777699e006f7f"}, {"sha": "01bca7114c0567961c875a1df5a60748cd872073", "url": "https://api.github.com/repos/rust-lang/rust/commits/01bca7114c0567961c875a1df5a60748cd872073", "html_url": "https://github.com/rust-lang/rust/commit/01bca7114c0567961c875a1df5a60748cd872073"}], "stats": {"total": 60, "additions": 27, "deletions": 33}, "files": [{"sha": "eafe8d64b55c367a767306b0a649176871f5165f", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768", "patch": "@@ -1008,6 +1008,7 @@ dependencies = [\n  \"proptest 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_assists 0.1.0\",\n  \"ra_db 0.1.0\",\n+ \"ra_fmt 0.1.0\",\n  \"ra_hir 0.1.0\",\n  \"ra_ide_api_light 0.1.0\",\n  \"ra_syntax 0.1.0\","}, {"sha": "8bd5eec2b385e5d48a16fc3d934bb8e79b01044e", "filename": "crates/ra_ide_api/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/crates%2Fra_ide_api%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/crates%2Fra_ide_api%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2FCargo.toml?ref=3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768", "patch": "@@ -23,6 +23,7 @@ ra_syntax = { path = \"../ra_syntax\" }\n ra_ide_api_light = { path = \"../ra_ide_api_light\" }\n ra_text_edit = { path = \"../ra_text_edit\" }\n ra_db = { path = \"../ra_db\" }\n+ra_fmt = { path = \"../ra_fmt\" }\n hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n test_utils = { path = \"../test_utils\" }\n ra_assists = { path = \"../ra_assists\" }"}, {"sha": "8fb3eaa0641ec59f3a3c5904dd78f5a804438bb1", "filename": "crates/ra_ide_api/src/join_lines.rs", "status": "renamed", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/crates%2Fra_ide_api%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/crates%2Fra_ide_api%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fjoin_lines.rs?ref=3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768", "patch": "@@ -9,22 +9,14 @@ use ra_syntax::{\n use ra_fmt::{\n     compute_ws, extract_trivial_expression\n };\n-use crate::{\n-    LocalEdit, TextEditBuilder,\n-};\n+use ra_text_edit::{TextEdit, TextEditBuilder};\n \n-pub fn join_lines(file: &SourceFile, range: TextRange) -> LocalEdit {\n+pub fn join_lines(file: &SourceFile, range: TextRange) -> TextEdit {\n     let range = if range.is_empty() {\n         let syntax = file.syntax();\n         let text = syntax.text().slice(range.start()..);\n         let pos = match text.find('\\n') {\n-            None => {\n-                return LocalEdit {\n-                    label: \"join lines\".to_string(),\n-                    edit: TextEditBuilder::default().finish(),\n-                    cursor_position: None,\n-                };\n-            }\n+            None => return TextEditBuilder::default().finish(),\n             Some(pos) => pos,\n         };\n         TextRange::offset_len(range.start() + pos, TextUnit::of_char('\\n'))\n@@ -52,7 +44,7 @@ pub fn join_lines(file: &SourceFile, range: TextRange) -> LocalEdit {\n         }\n     }\n \n-    LocalEdit { label: \"join lines\".to_string(), edit: edit.finish(), cursor_position: None }\n+    edit.finish()\n }\n \n fn remove_newline(\n@@ -514,7 +506,7 @@ fn foo() {\n         let (sel, before) = extract_range(before);\n         let file = SourceFile::parse(&before);\n         let result = join_lines(&file, sel);\n-        let actual = result.edit.apply(&before);\n+        let actual = result.apply(&before);\n         assert_eq_text!(after, &actual);\n     }\n ", "previous_filename": "crates/ra_ide_api_light/src/join_lines.rs"}, {"sha": "a838c30da755c23f8b29ee338b74d37abeb3269d", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768", "patch": "@@ -36,9 +36,12 @@ mod syntax_tree;\n mod line_index;\n mod folding_ranges;\n mod line_index_utils;\n+mod join_lines;\n \n #[cfg(test)]\n mod marks;\n+#[cfg(test)]\n+mod test_utils;\n \n use std::sync::Arc;\n \n@@ -276,10 +279,16 @@ impl Analysis {\n     /// stuff like trailing commas.\n     pub fn join_lines(&self, frange: FileRange) -> SourceChange {\n         let file = self.db.parse(frange.file_id);\n-        SourceChange::from_local_edit(\n-            frange.file_id,\n-            ra_ide_api_light::join_lines(&file, frange.range),\n-        )\n+        let file_edit = SourceFileEdit {\n+            file_id: frange.file_id,\n+            edit: join_lines::join_lines(&file, frange.range),\n+        };\n+        SourceChange {\n+            label: \"join lines\".to_string(),\n+            source_file_edits: vec![file_edit],\n+            file_system_edits: vec![],\n+            cursor_position: None,\n+        }\n     }\n \n     /// Returns an edit which should be applied when opening a new line, fixing"}, {"sha": "d0bd3a1e461e3c8bee4df3f2282c9cb9a41bf7e7", "filename": "crates/ra_ide_api/src/test_utils.rs", "status": "renamed", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/crates%2Fra_ide_api%2Fsrc%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/crates%2Fra_ide_api%2Fsrc%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Ftest_utils.rs?ref=3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768", "patch": "@@ -1,24 +1,19 @@\n use ra_syntax::{SourceFile, TextUnit};\n+use ra_text_edit::TextEdit;\n \n-use crate::LocalEdit;\n pub use test_utils::*;\n \n-pub fn check_action<F: Fn(&SourceFile, TextUnit) -> Option<LocalEdit>>(\n+pub fn check_action<F: Fn(&SourceFile, TextUnit) -> Option<TextEdit>>(\n     before: &str,\n     after: &str,\n     f: F,\n ) {\n     let (before_cursor_pos, before) = extract_offset(before);\n     let file = SourceFile::parse(&before);\n     let result = f(&file, before_cursor_pos).expect(\"code action is not applicable\");\n-    let actual = result.edit.apply(&before);\n-    let actual_cursor_pos = match result.cursor_position {\n-        None => result\n-            .edit\n-            .apply_to_offset(before_cursor_pos)\n-            .expect(\"cursor position is affected by the edit\"),\n-        Some(off) => off,\n-    };\n+    let actual = result.apply(&before);\n+    let actual_cursor_pos =\n+        result.apply_to_offset(before_cursor_pos).expect(\"cursor position is affected by the edit\");\n     let actual = add_cursor(&actual, actual_cursor_pos);\n     assert_eq_text!(after, &actual);\n }", "previous_filename": "crates/ra_ide_api_light/src/test_utils.rs"}, {"sha": "f21a91e185c3d63d144eb75f3675ddafd09e9eab", "filename": "crates/ra_ide_api_light/src/lib.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs?ref=3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768", "patch": "@@ -4,9 +4,6 @@\n //! an edit or some auxiliary info.\n \n mod structure;\n-#[cfg(test)]\n-mod test_utils;\n-mod join_lines;\n mod typing;\n \n use rustc_hash::FxHashSet;\n@@ -20,7 +17,6 @@ use ra_syntax::{\n \n pub use crate::{\n     structure::{file_structure, StructureNode},\n-    join_lines::join_lines,\n     typing::{on_enter, on_dot_typed, on_eq_typed},\n };\n \n@@ -118,7 +114,7 @@ mod tests {\n     use ra_syntax::AstNode;\n     use insta::assert_debug_snapshot_matches;\n \n-    use crate::test_utils::{add_cursor, assert_eq_text, extract_offset};\n+    use test_utils::{add_cursor, assert_eq_text, extract_offset};\n \n     use super::*;\n "}, {"sha": "c69270333c7c322e98e68eff125e790feafab176", "filename": "crates/ra_ide_api_light/src/typing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/crates%2Fra_ide_api_light%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768/crates%2Fra_ide_api_light%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Ftyping.rs?ref=3604f23e98d01fe9d89e5cdcf76a51cb9c1d6768", "patch": "@@ -118,7 +118,7 @@ pub fn on_dot_typed(file: &SourceFile, dot_offset: TextUnit) -> Option<LocalEdit\n \n #[cfg(test)]\n mod tests {\n-    use crate::test_utils::{add_cursor, assert_eq_text, extract_offset};\n+    use test_utils::{add_cursor, assert_eq_text, extract_offset};\n \n     use super::*;\n "}]}