{"sha": "22caf982b99c54058e2e9200aeea0e61cada284a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyY2FmOTgyYjk5YzU0MDU4ZTJlOTIwMGFlZWEwZTYxY2FkYTI4NGE=", "commit": {"author": {"name": "Kevin DeLorey", "email": "2295721+kdelorey@users.noreply.github.com", "date": "2020-02-08T21:41:25Z"}, "committer": {"name": "Kevin DeLorey", "email": "2295721+kdelorey@users.noreply.github.com", "date": "2020-02-08T21:41:25Z"}, "message": "Added associated type completion.", "tree": {"sha": "7bfa34956b9fd6e7a56ee4dd09328bd2e48597aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bfa34956b9fd6e7a56ee4dd09328bd2e48597aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22caf982b99c54058e2e9200aeea0e61cada284a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22caf982b99c54058e2e9200aeea0e61cada284a", "html_url": "https://github.com/rust-lang/rust/commit/22caf982b99c54058e2e9200aeea0e61cada284a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22caf982b99c54058e2e9200aeea0e61cada284a/comments", "author": {"login": "kdelorey", "id": 2295721, "node_id": "MDQ6VXNlcjIyOTU3MjE=", "avatar_url": "https://avatars.githubusercontent.com/u/2295721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdelorey", "html_url": "https://github.com/kdelorey", "followers_url": "https://api.github.com/users/kdelorey/followers", "following_url": "https://api.github.com/users/kdelorey/following{/other_user}", "gists_url": "https://api.github.com/users/kdelorey/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdelorey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdelorey/subscriptions", "organizations_url": "https://api.github.com/users/kdelorey/orgs", "repos_url": "https://api.github.com/users/kdelorey/repos", "events_url": "https://api.github.com/users/kdelorey/events{/privacy}", "received_events_url": "https://api.github.com/users/kdelorey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kdelorey", "id": 2295721, "node_id": "MDQ6VXNlcjIyOTU3MjE=", "avatar_url": "https://avatars.githubusercontent.com/u/2295721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdelorey", "html_url": "https://github.com/kdelorey", "followers_url": "https://api.github.com/users/kdelorey/followers", "following_url": "https://api.github.com/users/kdelorey/following{/other_user}", "gists_url": "https://api.github.com/users/kdelorey/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdelorey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdelorey/subscriptions", "organizations_url": "https://api.github.com/users/kdelorey/orgs", "repos_url": "https://api.github.com/users/kdelorey/repos", "events_url": "https://api.github.com/users/kdelorey/events{/privacy}", "received_events_url": "https://api.github.com/users/kdelorey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c0c18926b13d40cff722f603ed8f58550dbbc59", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c0c18926b13d40cff722f603ed8f58550dbbc59", "html_url": "https://github.com/rust-lang/rust/commit/5c0c18926b13d40cff722f603ed8f58550dbbc59"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "528655fbc0119c8d1dbdcba4b1137342681cd45b", "filename": "crates/ra_ide/src/completion/complete_trait_impl.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/22caf982b99c54058e2e9200aeea0e61cada284a/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22caf982b99c54058e2e9200aeea0e61cada284a/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs?ref=22caf982b99c54058e2e9200aeea0e61cada284a", "patch": "@@ -97,7 +97,8 @@ pub(crate) fn complete_trait_impl(acc: &mut Completions, ctx: &CompletionContext\n     for item in missing_items {\n         match item {\n             hir::AssocItem::Function(f) => add_function_impl(acc, ctx, f),\n-            _ => {}\n+            hir::AssocItem::TypeAlias(t) => add_type_alias_impl(acc, ctx, t),\n+            _ => {},\n         }\n     }\n }\n@@ -121,7 +122,7 @@ fn resolve_target_trait(\n     }\n }\n \n-pub(crate) fn add_function_impl(acc: &mut Completions, ctx: &CompletionContext, func: &hir::Function) {\n+fn add_function_impl(acc: &mut Completions, ctx: &CompletionContext, func: &hir::Function) {\n     use crate::display::FunctionSignature;\n \n     let display = FunctionSignature::from_hir(ctx.db, func.clone());\n@@ -135,7 +136,8 @@ pub(crate) fn add_function_impl(acc: &mut Completions, ctx: &CompletionContext,\n     };\n \n     let builder = CompletionItem::new(CompletionKind::Magic, ctx.source_range(), label.clone())\n-        .lookup_by(label);\n+        .lookup_by(label)\n+        .set_documentation(func.docs(ctx.db));\n \n     let completion_kind = if func.has_self_param(ctx.db) {\n         CompletionItemKind::Method\n@@ -155,6 +157,16 @@ pub(crate) fn add_function_impl(acc: &mut Completions, ctx: &CompletionContext,\n         .add_to(acc);\n }\n \n+fn add_type_alias_impl(acc: &mut Completions, ctx: &CompletionContext, type_alias: &hir::TypeAlias) {\n+    let snippet = format!(\"type {} = \", type_alias.name(ctx.db).to_string());\n+\n+    CompletionItem::new(CompletionKind::Magic, ctx.source_range(), snippet.clone())\n+        .insert_text(snippet)\n+        .kind(CompletionItemKind::TypeAlias)\n+        .set_documentation(type_alias.docs(ctx.db))\n+        .add_to(acc);\n+}\n+\n #[cfg(test)]\n mod tests {\n     use crate::completion::{do_completion, CompletionItem, CompletionKind};"}]}