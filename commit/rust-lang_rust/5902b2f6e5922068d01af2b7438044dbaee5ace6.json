{"sha": "5902b2f6e5922068d01af2b7438044dbaee5ace6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5MDJiMmY2ZTU5MjIwNjhkMDFhZjJiNzQzODA0NGRiYWVlNWFjZTY=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-06-11T22:10:13Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-06-11T22:10:13Z"}, "message": "Use `fn_span` to point to the actual method call", "tree": {"sha": "3e8d94f50806d6ab4f9265fd12dbd33e78a21e98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e8d94f50806d6ab4f9265fd12dbd33e78a21e98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5902b2f6e5922068d01af2b7438044dbaee5ace6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl7iq8wACgkQtAh+UQ6Y\nsWTgKg//TFJOG0ZKZZfWFG9QVMwg+9ubCdrdGBWSe0hoocZuJ+Wo1tilaCipip1A\nqE1Z/vXqT01WLKPeW40Qg0wChG0Mm0gWuwI4omNflP9bKWXRcum08p2Brn9+Gntw\n/G9MDdXSGdfZRaK3QlYmprJENKz2Qy/jfqHGSResMhGZoEzRc4p3/krnMQRYOftO\nJDf/z9xMgM0TSjiugwqeIPsRIqNTOsz34y3EySBBKgIFCub4UxFwyR7iHFsKV3CZ\nZg4a/KTJcNMSL2MKQy4Qf8reEN5y0ITjRPLvksHezp/3Qa3EXnxLOf+uml1vqjHl\nVq5bq8P0uBfCzeeFRuIu9PHIPJaSBKXb2szsQwLOI7qMmXayxgWQQWlpnw9Bo7IZ\nVOvfESzFka1fU/QcQBLlQNM3niaaQo3Uij+2Sl1WAQcLMtr0i3sjaAgA2NhUKMuz\nJEoBnKVsZtHOZp6FDPjrtqkLJenw1oEJODBlkOF7IfEUwIBfoCmsvZ+rsXVDmcuV\nOHuPH0kXjXMMQS4RFIaYOl19b+VvRfhlokISE/zh1GMN+XB+ZMIzBup64OPIa5D7\noQ0WO5lbBb7OdQ932hPnb9OOC+8A+v7IugSC+62SXq+9nvA8z+JE2DovE8JqYYZ2\n3qCnfSSw5fHr4E7gAA2IcrPYtXuP7CnRvHVyf3hOuyENvPKh9TU=\n=SUTA\n-----END PGP SIGNATURE-----", "payload": "tree 3e8d94f50806d6ab4f9265fd12dbd33e78a21e98\nparent 2c11c35f8982a9a5fd654f0499cc72b70208d62f\nauthor Aaron Hill <aa1ronham@gmail.com> 1591913413 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1591913413 -0400\n\nUse `fn_span` to point to the actual method call\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5902b2f6e5922068d01af2b7438044dbaee5ace6", "html_url": "https://github.com/rust-lang/rust/commit/5902b2f6e5922068d01af2b7438044dbaee5ace6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5902b2f6e5922068d01af2b7438044dbaee5ace6/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c11c35f8982a9a5fd654f0499cc72b70208d62f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c11c35f8982a9a5fd654f0499cc72b70208d62f", "html_url": "https://github.com/rust-lang/rust/commit/2c11c35f8982a9a5fd654f0499cc72b70208d62f"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "ca8c77bcd69faac99b944d9bb76e7cd1fb65233e", "filename": "src/librustc_mir/borrow_check/diagnostics/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs?ref=5902b2f6e5922068d01af2b7438044dbaee5ace6", "patch": "@@ -795,8 +795,8 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         debug!(\"move_spans: target_temp = {:?}\", target_temp);\n \n         if let Some(Terminator {\n-            kind: TerminatorKind::Call { func, args, .. },\n-            source_info: term_source_info,\n+            kind: TerminatorKind::Call { func, args, fn_span, .. },\n+            ..\n         }) = &self.body[location.block].terminator\n         {\n             let mut method_did = None;\n@@ -819,7 +819,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             if let [Operand::Move(self_place), ..] = **args {\n                 if self_place.as_local() == Some(target_temp) {\n                     let is_fn_once = tcx.parent(method_did) == tcx.lang_items().fn_once_trait();\n-                    let fn_call_span = term_source_info.span;\n+                    let fn_call_span = *fn_span;\n \n                     let self_arg = tcx.fn_arg_names(method_did)[0];\n "}, {"sha": "614e69e89f6ec539a91349c44ddefc6371fd082e", "filename": "src/test/ui/codemap_tests/tab_3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.stderr?ref=5902b2f6e5922068d01af2b7438044dbaee5ace6", "patch": "@@ -4,7 +4,7 @@ error[E0382]: borrow of moved value: `some_vec`\n LL |     let some_vec = vec![\"hi\"];\n    |         -------- move occurs because `some_vec` has type `std::vec::Vec<&str>`, which does not implement the `Copy` trait\n LL |     some_vec.into_iter();\n-   |     -------------------- `some_vec` moved due to this method call\n+   |              ----------- `some_vec` moved due to this method call\n LL |     {\n LL |         println!(\"{:?}\", some_vec);\n    |                          ^^^^^^^^ value borrowed here after move"}, {"sha": "b4cc1a0aa7eb2bf5dd8fbdbc2c02d74094b714ce", "filename": "src/test/ui/issues/issue-34721.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fissues%2Fissue-34721.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fissues%2Fissue-34721.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34721.stderr?ref=5902b2f6e5922068d01af2b7438044dbaee5ace6", "patch": "@@ -5,10 +5,10 @@ LL |     pub fn baz<T: Foo>(x: T) -> T {\n    |                        - move occurs because `x` has type `T`, which does not implement the `Copy` trait\n LL |         if 0 == 1 {\n LL |             bar::bar(x.zero())\n-   |                      -------- `x` moved due to this method call\n+   |                        ------ `x` moved due to this method call\n LL |         } else {\n LL |             x.zero()\n-   |             -------- `x` moved due to this method call\n+   |               ------ `x` moved due to this method call\n LL |         };\n LL |         x.zero()\n    |         ^ value used here after move"}, {"sha": "4333e8a23e866f408cbcbfab35992f4dd7bea440", "filename": "src/test/ui/moves/move-fn-self-receiver.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fmoves%2Fmove-fn-self-receiver.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fmoves%2Fmove-fn-self-receiver.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmove-fn-self-receiver.stderr?ref=5902b2f6e5922068d01af2b7438044dbaee5ace6", "patch": "@@ -2,7 +2,7 @@ error[E0382]: use of moved value: `val.0`\n   --> $DIR/move-fn-self-receiver.rs:30:5\n    |\n LL |     val.0.into_iter().next();\n-   |     ----------------- `val.0` moved due to this method call\n+   |           ----------- `val.0` moved due to this method call\n LL |     val.0;\n    |     ^^^^^ value used here after move\n    |\n@@ -19,7 +19,7 @@ error[E0382]: use of moved value: `foo`\n LL |     let foo = Foo;\n    |         --- move occurs because `foo` has type `Foo`, which does not implement the `Copy` trait\n LL |     foo.use_self();\n-   |     -------------- `foo` moved due to this method call\n+   |         ---------- `foo` moved due to this method call\n LL |     foo;\n    |     ^^^ value used here after move\n    |\n@@ -35,7 +35,7 @@ error[E0382]: use of moved value: `second_foo`\n LL |     let second_foo = Foo;\n    |         ---------- move occurs because `second_foo` has type `Foo`, which does not implement the `Copy` trait\n LL |     second_foo.use_self();\n-   |     --------------------- `second_foo` moved due to this method call\n+   |                ---------- `second_foo` moved due to this method call\n LL |     second_foo;\n    |     ^^^^^^^^^^ value used here after move\n \n@@ -45,7 +45,7 @@ error[E0382]: use of moved value: `boxed_foo`\n LL |     let boxed_foo = Box::new(Foo);\n    |         --------- move occurs because `boxed_foo` has type `std::boxed::Box<Foo>`, which does not implement the `Copy` trait\n LL |     boxed_foo.use_box_self();\n-   |     ------------------------ `boxed_foo` moved due to this method call\n+   |               -------------- `boxed_foo` moved due to this method call\n LL |     boxed_foo;\n    |     ^^^^^^^^^ value used here after move\n    |\n@@ -61,7 +61,7 @@ error[E0382]: use of moved value: `pin_box_foo`\n LL |     let pin_box_foo = Box::pin(Foo);\n    |         ----------- move occurs because `pin_box_foo` has type `std::pin::Pin<std::boxed::Box<Foo>>`, which does not implement the `Copy` trait\n LL |     pin_box_foo.use_pin_box_self();\n-   |     ------------------------------ `pin_box_foo` moved due to this method call\n+   |                 ------------------ `pin_box_foo` moved due to this method call\n LL |     pin_box_foo;\n    |     ^^^^^^^^^^^ value used here after move\n    |\n@@ -87,7 +87,7 @@ error[E0382]: use of moved value: `rc_foo`\n LL |     let rc_foo = Rc::new(Foo);\n    |         ------ move occurs because `rc_foo` has type `std::rc::Rc<Foo>`, which does not implement the `Copy` trait\n LL |     rc_foo.use_rc_self();\n-   |     -------------------- `rc_foo` moved due to this method call\n+   |            ------------- `rc_foo` moved due to this method call\n LL |     rc_foo;\n    |     ^^^^^^ value used here after move\n    |\n@@ -132,7 +132,7 @@ error[E0382]: use of moved value: `explicit_into_iter`\n LL |     let explicit_into_iter = vec![true];\n    |         ------------------ move occurs because `explicit_into_iter` has type `std::vec::Vec<bool>`, which does not implement the `Copy` trait\n LL |     for _val in explicit_into_iter.into_iter() {}\n-   |                 ------------------------------ `explicit_into_iter` moved due to this method call\n+   |                                    ----------- `explicit_into_iter` moved due to this method call\n LL |     explicit_into_iter;\n    |     ^^^^^^^^^^^^^^^^^^ value used here after move\n \n@@ -142,7 +142,7 @@ error[E0382]: use of moved value: `container`\n LL |     let container = Container(vec![]);\n    |         --------- move occurs because `container` has type `Container`, which does not implement the `Copy` trait\n LL |     for _val in container.custom_into_iter() {}\n-   |                 ---------------------------- `container` moved due to this method call\n+   |                           ------------------ `container` moved due to this method call\n LL |     container;\n    |     ^^^^^^^^^ value used here after move\n    |"}, {"sha": "142feb280d153be2b8a94061d803d5e3cd5805e5", "filename": "src/test/ui/moves/moves-based-on-type-access-to-field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-access-to-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-access-to-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-access-to-field.stderr?ref=5902b2f6e5922068d01af2b7438044dbaee5ace6", "patch": "@@ -4,7 +4,7 @@ error[E0382]: borrow of moved value: `x`\n LL |     let x = vec![\"hi\".to_string()];\n    |         - move occurs because `x` has type `std::vec::Vec<std::string::String>`, which does not implement the `Copy` trait\n LL |     consume(x.into_iter().next().unwrap());\n-   |             ------------- `x` moved due to this method call\n+   |               ----------- `x` moved due to this method call\n LL |     touch(&x[0]);\n    |            ^ value borrowed here after move\n    |"}, {"sha": "ff98aab50c9f82ec0bebf89288f1eeb8a2425973", "filename": "src/test/ui/moves/moves-based-on-type-exprs.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-exprs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-exprs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-exprs.stderr?ref=5902b2f6e5922068d01af2b7438044dbaee5ace6", "patch": "@@ -104,7 +104,7 @@ error[E0382]: borrow of moved value: `x`\n LL |     let x = vec![\"hi\".to_string()];\n    |         - move occurs because `x` has type `std::vec::Vec<std::string::String>`, which does not implement the `Copy` trait\n LL |     let _y = x.into_iter().next().unwrap();\n-   |              ------------- `x` moved due to this method call\n+   |                ----------- `x` moved due to this method call\n LL |     touch(&x);\n    |           ^^ value borrowed here after move\n    |\n@@ -120,7 +120,7 @@ error[E0382]: borrow of moved value: `x`\n LL |     let x = vec![\"hi\".to_string()];\n    |         - move occurs because `x` has type `std::vec::Vec<std::string::String>`, which does not implement the `Copy` trait\n LL |     let _y = [x.into_iter().next().unwrap(); 1];\n-   |               ------------- `x` moved due to this method call\n+   |                 ----------- `x` moved due to this method call\n LL |     touch(&x);\n    |           ^^ value borrowed here after move\n    |"}, {"sha": "906b543e421229e20a3f67af6201b2dd4118193f", "filename": "src/test/ui/unsized-locals/borrow-after-move.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.stderr?ref=5902b2f6e5922068d01af2b7438044dbaee5ace6", "patch": "@@ -37,7 +37,7 @@ error[E0382]: borrow of moved value: `y`\n LL |         let y = *x;\n    |             - move occurs because `y` has type `str`, which does not implement the `Copy` trait\n LL |         y.foo();\n-   |         ------- `y` moved due to this method call\n+   |           ----- `y` moved due to this method call\n ...\n LL |         println!(\"{}\", &y);\n    |                        ^^ value borrowed here after move"}, {"sha": "49b2031c6b9d969a12b82b603d77b3629920697c", "filename": "src/test/ui/unsized-locals/double-move.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.stderr?ref=5902b2f6e5922068d01af2b7438044dbaee5ace6", "patch": "@@ -34,7 +34,7 @@ error[E0382]: use of moved value: `y`\n LL |         let y = *x;\n    |             - move occurs because `y` has type `str`, which does not implement the `Copy` trait\n LL |         y.foo();\n-   |         ------- `y` moved due to this method call\n+   |           ----- `y` moved due to this method call\n LL |         y.foo();\n    |         ^ value used here after move\n    |"}, {"sha": "b9440f4de07a9e9a38075d6f93a7769de37c4a6d", "filename": "src/test/ui/use/use-after-move-self-based-on-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-self-based-on-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-self-based-on-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-self-based-on-type.stderr?ref=5902b2f6e5922068d01af2b7438044dbaee5ace6", "patch": "@@ -4,7 +4,7 @@ error[E0382]: use of moved value: `self`\n LL |     pub fn foo(self) -> isize {\n    |                ---- move occurs because `self` has type `S`, which does not implement the `Copy` trait\n LL |         self.bar();\n-   |         ---------- `self` moved due to this method call\n+   |              ----- `self` moved due to this method call\n LL |         return self.x;\n    |                ^^^^^^ value used here after move\n    |"}, {"sha": "3da53b024db440506d518511fb2c20f4f870da71", "filename": "src/test/ui/use/use-after-move-self.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-self.stderr?ref=5902b2f6e5922068d01af2b7438044dbaee5ace6", "patch": "@@ -4,7 +4,7 @@ error[E0382]: use of moved value: `self`\n LL |     pub fn foo(self) -> isize {\n    |                ---- move occurs because `self` has type `S`, which does not implement the `Copy` trait\n LL |         self.bar();\n-   |         ---------- `self` moved due to this method call\n+   |              ----- `self` moved due to this method call\n LL |         return *self.x;\n    |                ^^^^^^^ value used here after move\n    |"}, {"sha": "ece63a2b8194745d2be6b0b7b9f66aeef1a986c3", "filename": "src/test/ui/walk-struct-literal-with.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fwalk-struct-literal-with.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5902b2f6e5922068d01af2b7438044dbaee5ace6/src%2Ftest%2Fui%2Fwalk-struct-literal-with.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwalk-struct-literal-with.stderr?ref=5902b2f6e5922068d01af2b7438044dbaee5ace6", "patch": "@@ -4,7 +4,7 @@ error[E0382]: borrow of moved value: `start`\n LL |     let start = Mine{test:\"Foo\".to_string(), other_val:0};\n    |         ----- move occurs because `start` has type `Mine`, which does not implement the `Copy` trait\n LL |     let end = Mine{other_val:1, ..start.make_string_bar()};\n-   |                                   ----------------------- `start` moved due to this method call\n+   |                                         ----------------- `start` moved due to this method call\n LL |     println!(\"{}\", start.test);\n    |                    ^^^^^^^^^^ value borrowed here after move\n    |"}]}