{"sha": "c6111e8d232964f11eb3540ed7228de6e13782df", "node_id": "C_kwDOAAsO6NoAKGM2MTExZThkMjMyOTY0ZjExZWIzNTQwZWQ3MjI4ZGU2ZTEzNzgyZGY", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-17T02:47:50Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-17T02:47:50Z"}, "message": "Account for field access when looking for inner-most path in expression", "tree": {"sha": "28a42f1479bda1307b5a77de0848eb312e339293", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28a42f1479bda1307b5a77de0848eb312e339293"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6111e8d232964f11eb3540ed7228de6e13782df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6111e8d232964f11eb3540ed7228de6e13782df", "html_url": "https://github.com/rust-lang/rust/commit/c6111e8d232964f11eb3540ed7228de6e13782df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6111e8d232964f11eb3540ed7228de6e13782df/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be2ec32b18f7ad858dc746b26eb3a91a62a2c360", "url": "https://api.github.com/repos/rust-lang/rust/commits/be2ec32b18f7ad858dc746b26eb3a91a62a2c360", "html_url": "https://github.com/rust-lang/rust/commit/be2ec32b18f7ad858dc746b26eb3a91a62a2c360"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "b6a676ef636904679ebdce8d0c4119f142117f34", "filename": "compiler/rustc_borrowck/src/diagnostics/explain_borrow.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c6111e8d232964f11eb3540ed7228de6e13782df/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fexplain_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6111e8d232964f11eb3540ed7228de6e13782df/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fexplain_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fexplain_borrow.rs?ref=c6111e8d232964f11eb3540ed7228de6e13782df", "patch": "@@ -76,7 +76,8 @@ impl<'tcx> BorrowExplanation<'tcx> {\n                 expr_finder.visit_expr(body.value);\n                 if let Some(mut expr) = expr_finder.result {\n                     while let hir::ExprKind::AddrOf(_, _, inner)\n-                        | hir::ExprKind::Unary(hir::UnOp::Deref, inner) = &expr.kind\n+                        | hir::ExprKind::Unary(hir::UnOp::Deref, inner)\n+                        | hir::ExprKind::Field(inner, _) = &expr.kind\n                     {\n                         expr = inner;\n                     }"}, {"sha": "d7d3efe492cef715f078077547b4df9193fd1081", "filename": "tests/ui/borrowck/borrow-tuple-fields.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c6111e8d232964f11eb3540ed7228de6e13782df/tests%2Fui%2Fborrowck%2Fborrow-tuple-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c6111e8d232964f11eb3540ed7228de6e13782df/tests%2Fui%2Fborrowck%2Fborrow-tuple-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fborrow-tuple-fields.stderr?ref=c6111e8d232964f11eb3540ed7228de6e13782df", "patch": "@@ -1,6 +1,8 @@\n error[E0505]: cannot move out of `x` because it is borrowed\n   --> $DIR/borrow-tuple-fields.rs:12:13\n    |\n+LL |     let x: (Box<_>, _) = (Box::new(1), 2);\n+   |         - binding `x` declared here\n LL |     let r = &x.0;\n    |             ---- borrow of `x.0` occurs here\n LL |     let y = x;\n@@ -32,6 +34,8 @@ LL |     a.use_ref();\n error[E0505]: cannot move out of `x` because it is borrowed\n   --> $DIR/borrow-tuple-fields.rs:28:13\n    |\n+LL |     let x = Foo(Box::new(1), 2);\n+   |         - binding `x` declared here\n LL |     let r = &x.0;\n    |             ---- borrow of `x.0` occurs here\n LL |     let y = x;"}, {"sha": "11812847dd1813a45c57ef9f15b332a66ae05776", "filename": "tests/ui/borrowck/borrowck-field-sensitivity.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c6111e8d232964f11eb3540ed7228de6e13782df/tests%2Fui%2Fborrowck%2Fborrowck-field-sensitivity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c6111e8d232964f11eb3540ed7228de6e13782df/tests%2Fui%2Fborrowck%2Fborrowck-field-sensitivity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fborrowck-field-sensitivity.stderr?ref=c6111e8d232964f11eb3540ed7228de6e13782df", "patch": "@@ -41,6 +41,8 @@ LL |     let p = &x.b;\n error[E0505]: cannot move out of `x.b` because it is borrowed\n   --> $DIR/borrowck-field-sensitivity.rs:34:10\n    |\n+LL |     let x = A { a: 1, b: Box::new(2) };\n+   |         - binding `x` declared here\n LL |     let p = &x.b;\n    |             ---- borrow of `x.b` occurs here\n LL |     drop(x.b);\n@@ -51,6 +53,8 @@ LL |     drop(**p);\n error[E0505]: cannot move out of `x.b` because it is borrowed\n   --> $DIR/borrowck-field-sensitivity.rs:41:14\n    |\n+LL |     let x = A { a: 1, b: Box::new(2) };\n+   |         - binding `x` declared here\n LL |     let p = &x.b;\n    |             ---- borrow of `x.b` occurs here\n LL |     let _y = A { a: 3, .. x };"}, {"sha": "0fdb1dabbc50c21a5c5155ae04d3b1867435b2f1", "filename": "tests/ui/borrowck/borrowck-local-borrow-with-panic-outlives-fn.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6111e8d232964f11eb3540ed7228de6e13782df/tests%2Fui%2Fborrowck%2Fborrowck-local-borrow-with-panic-outlives-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c6111e8d232964f11eb3540ed7228de6e13782df/tests%2Fui%2Fborrowck%2Fborrowck-local-borrow-with-panic-outlives-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fborrowck-local-borrow-with-panic-outlives-fn.stderr?ref=c6111e8d232964f11eb3540ed7228de6e13782df", "patch": "@@ -1,6 +1,8 @@\n error[E0597]: `z.1` does not live long enough\n   --> $DIR/borrowck-local-borrow-with-panic-outlives-fn.rs:3:15\n    |\n+LL |     let mut z = (0, 0);\n+   |         ----- binding `z` declared here\n LL |     *x = Some(&mut z.1);\n    |     ----------^^^^^^^^-\n    |     |         |"}]}