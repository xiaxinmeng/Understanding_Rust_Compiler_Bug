{"sha": "7e1ce7da80f45b512601708fbaa637d1b609e189", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlMWNlN2RhODBmNDViNTEyNjAxNzA4ZmJhYTYzN2QxYjYwOWUxODk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-26T16:56:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-26T16:56:56Z"}, "message": "Rollup merge of #62970 - pietroalbini:fix-tools-builder, r=alexcrichton\n\nci: gate toolstate repo pushes on the TOOLSTATE_PUBLISH envvar\n\nThis PR fixes toolstate failing to push on the LinuxTools PR builder by gating the pushes on the new `TOOLSTATE_PUBLISH` environment variable, which is set on prod credentials but not on the PR ones. The old code checked whether the access token was set, but that doesn't work due to an Azure quirk.\n\nFor a bit of background, secret environment variables are not available by default, but each step needs to explicitly declare which secret vars to load:\n\n```yaml\n- bash: echo foo\n  env:\n    SECRET_VAR: $(SECRET_VAR)\n```\n\nThis works fine when the variable is present but when it's missing, instead of setting `SECRET_VAR` to an empty string or just not setting it at all, Azure Pipelines puts the literal `$(SECRET_VAR)` as the content, which completly breaks the old check we had. I tried almost every thing to make this work in a sensible way, and the only conclusion I reached is to set the variable at the top level with the runtime expression evaluation syntax, which sets the variable to an empty string if missing:\n\n```yaml\n# At the top:\nvariables:\n  - name: MAYBE_SECRET_VAR\n    value: $[ variables.MAYBE_SECRET_VAR ]\n\n# In the step:\n- bash: echo foo\n  env:\n    SECRET_VAR: $(MAYBE_SECRET_VAR)\n```\n\nWhile that *could've worked* it was ugly and messy, so I just opted to add yet another non-secret variable.\n\nr? @alexcrichton\nfixes #62811", "tree": {"sha": "24ab89e3fae522223b2c93a56619d936307f1cd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24ab89e3fae522223b2c93a56619d936307f1cd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e1ce7da80f45b512601708fbaa637d1b609e189", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdOzDYCRBK7hj4Ov3rIwAAdHIIABofxwhGmQFgs1M0s5UMS0rn\nTr3o2KKHUj7NP28edaZ6IoRRmh123gJVEdKJ7t1Abh3qLvOPns2mEjE2CK6jGedG\nM5yL3PjHgFImBUdujVyxPwBxfmdunHzfHOGgAMtPd8xr19UucsWWjkAzWyix5e2r\nxvzqe80fCMA1siensZKpIja3Ood35CbjxBthe+4adTF1gyvi1eCIP16extAqn69n\n2k7BMQkI8ak3GTwsvbK7XYLKBl1R4NGd9EFAnBq7uqSrvc5nXMAaEKca/DnVMURQ\nMEk7kzjV7EhnVOoTLoOM/IJrny5qVLrAD5o9dUR48Hl5HmZFRJx1L2OqMug6ems=\n=day5\n-----END PGP SIGNATURE-----\n", "payload": "tree 24ab89e3fae522223b2c93a56619d936307f1cd8\nparent 035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa\nparent b01b5b911f3bb209ee619055a154cd81ca0674be\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1564160216 +0200\ncommitter GitHub <noreply@github.com> 1564160216 +0200\n\nRollup merge of #62970 - pietroalbini:fix-tools-builder, r=alexcrichton\n\nci: gate toolstate repo pushes on the TOOLSTATE_PUBLISH envvar\n\nThis PR fixes toolstate failing to push on the LinuxTools PR builder by gating the pushes on the new `TOOLSTATE_PUBLISH` environment variable, which is set on prod credentials but not on the PR ones. The old code checked whether the access token was set, but that doesn't work due to an Azure quirk.\n\nFor a bit of background, secret environment variables are not available by default, but each step needs to explicitly declare which secret vars to load:\n\n```yaml\n- bash: echo foo\n  env:\n    SECRET_VAR: $(SECRET_VAR)\n```\n\nThis works fine when the variable is present but when it's missing, instead of setting `SECRET_VAR` to an empty string or just not setting it at all, Azure Pipelines puts the literal `$(SECRET_VAR)` as the content, which completly breaks the old check we had. I tried almost every thing to make this work in a sensible way, and the only conclusion I reached is to set the variable at the top level with the runtime expression evaluation syntax, which sets the variable to an empty string if missing:\n\n```yaml\n# At the top:\nvariables:\n  - name: MAYBE_SECRET_VAR\n    value: $[ variables.MAYBE_SECRET_VAR ]\n\n# In the step:\n- bash: echo foo\n  env:\n    SECRET_VAR: $(MAYBE_SECRET_VAR)\n```\n\nWhile that *could've worked* it was ugly and messy, so I just opted to add yet another non-secret variable.\n\nr? @alexcrichton\nfixes #62811\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e1ce7da80f45b512601708fbaa637d1b609e189", "html_url": "https://github.com/rust-lang/rust/commit/7e1ce7da80f45b512601708fbaa637d1b609e189", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e1ce7da80f45b512601708fbaa637d1b609e189/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa", "html_url": "https://github.com/rust-lang/rust/commit/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa"}, {"sha": "b01b5b911f3bb209ee619055a154cd81ca0674be", "url": "https://api.github.com/repos/rust-lang/rust/commits/b01b5b911f3bb209ee619055a154cd81ca0674be", "html_url": "https://github.com/rust-lang/rust/commit/b01b5b911f3bb209ee619055a154cd81ca0674be"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2191d5d6e4680ce443cdae19d4bdbbccf3d1e1d3", "filename": "src/ci/docker/x86_64-gnu-tools/checktools.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e1ce7da80f45b512601708fbaa637d1b609e189/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "raw_url": "https://github.com/rust-lang/rust/raw/7e1ce7da80f45b512601708fbaa637d1b609e189/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh?ref=7e1ce7da80f45b512601708fbaa637d1b609e189", "patch": "@@ -112,7 +112,7 @@ $COMMIT\\t$(cat \"$TOOLSTATE_FILE\")\n }\n \n if [ \"$RUST_RELEASE_CHANNEL\" = nightly ]; then\n-    if [ -n \"${TOOLSTATE_REPO_ACCESS_TOKEN+is_set}\" ]; then\n+    if [ -n \"${TOOLSTATE_PUBLISH+is_set}\" ]; then\n         . \"$(dirname $0)/repo.sh\"\n         MESSAGE_FILE=$(mktemp -t msg.XXXXXX)\n         echo \"($OS CI update)\" > \"$MESSAGE_FILE\""}]}