{"sha": "f52162f75c640618637e265d005f0f5f25811af5", "node_id": "C_kwDOAAsO6NoAKGY1MjE2MmY3NWM2NDA2MTg2MzdlMjY1ZDAwNWYwZjVmMjU4MTFhZjU", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-04-30T14:21:43Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-04-30T14:21:43Z"}, "message": "Fix #[track_caller] location for function chains", "tree": {"sha": "6a630ddf72b14241e0c06a80a4ee5f43e4aff990", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a630ddf72b14241e0c06a80a4ee5f43e4aff990"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f52162f75c640618637e265d005f0f5f25811af5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f52162f75c640618637e265d005f0f5f25811af5", "html_url": "https://github.com/rust-lang/rust/commit/f52162f75c640618637e265d005f0f5f25811af5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f52162f75c640618637e265d005f0f5f25811af5/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3fc94f2399e8244bb78af8e0e5f462b884083ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3fc94f2399e8244bb78af8e0e5f462b884083ac", "html_url": "https://github.com/rust-lang/rust/commit/f3fc94f2399e8244bb78af8e0e5f462b884083ac"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "c9626a16be46436ace46329c3174e8ac2a212b5f", "filename": "src/base.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f52162f75c640618637e265d005f0f5f25811af5/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f52162f75c640618637e265d005f0f5f25811af5/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=f52162f75c640618637e265d005f0f5f25811af5", "patch": "@@ -393,12 +393,18 @@ fn codegen_fn_content(fx: &mut FunctionCx<'_, '_, '_>) {\n                 func,\n                 args,\n                 destination,\n-                fn_span: _,\n+                fn_span,\n                 cleanup: _,\n                 from_hir_call: _,\n             } => {\n                 fx.tcx.sess.time(\"codegen call\", || {\n-                    crate::abi::codegen_terminator_call(fx, source_info, func, args, *destination)\n+                    crate::abi::codegen_terminator_call(\n+                        fx,\n+                        mir::SourceInfo { span: *fn_span, ..source_info },\n+                        func,\n+                        args,\n+                        *destination,\n+                    )\n                 });\n             }\n             TerminatorKind::InlineAsm {"}]}