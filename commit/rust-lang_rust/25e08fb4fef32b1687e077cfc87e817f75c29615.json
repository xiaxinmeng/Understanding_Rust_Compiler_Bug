{"sha": "25e08fb4fef32b1687e077cfc87e817f75c29615", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ZTA4ZmI0ZmVmMzJiMTY4N2UwNzdjZmM4N2U4MTdmNzVjMjk2MTU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-09T14:39:23Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-09T19:07:14Z"}, "message": "rollup merge of #17114 : nick29581/dst-type", "tree": {"sha": "79b27e3a2cf40b4228447b38eaf91ef018b28b3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79b27e3a2cf40b4228447b38eaf91ef018b28b3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25e08fb4fef32b1687e077cfc87e817f75c29615", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25e08fb4fef32b1687e077cfc87e817f75c29615", "html_url": "https://github.com/rust-lang/rust/commit/25e08fb4fef32b1687e077cfc87e817f75c29615", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25e08fb4fef32b1687e077cfc87e817f75c29615/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "456f00eb7e7d729da033c6fe20054e48b38ad05f", "url": "https://api.github.com/repos/rust-lang/rust/commits/456f00eb7e7d729da033c6fe20054e48b38ad05f", "html_url": "https://github.com/rust-lang/rust/commit/456f00eb7e7d729da033c6fe20054e48b38ad05f"}, {"sha": "b1916288bf1a5bc20de4a250b3b4e03f69e577e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1916288bf1a5bc20de4a250b3b4e03f69e577e4", "html_url": "https://github.com/rust-lang/rust/commit/b1916288bf1a5bc20de4a250b3b4e03f69e577e4"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "854b8b9ba77112337d729054f7676badf65ef1e3", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/25e08fb4fef32b1687e077cfc87e817f75c29615/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25e08fb4fef32b1687e077cfc87e817f75c29615/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=25e08fb4fef32b1687e077cfc87e817f75c29615", "patch": "@@ -3931,6 +3931,7 @@ impl<'a> Resolver<'a> {\n                                                                item.id,\n                                                                ItemRibKind),\n                                              |this| {\n+                    this.resolve_type_parameters(&generics.ty_params);\n                     visit::walk_item(this, item, ());\n                 });\n             }"}, {"sha": "d1d76734941e8b68cac3fde546cd8f00bd02a144", "filename": "src/librustc/middle/typeck/collect.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/25e08fb4fef32b1687e077cfc87e817f75c29615/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25e08fb4fef32b1687e077cfc87e817f75c29615/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=25e08fb4fef32b1687e077cfc87e817f75c29615", "patch": "@@ -488,7 +488,9 @@ pub fn ensure_no_ty_param_bounds(ccx: &CrateCtxt,\n                                  generics: &ast::Generics,\n                                  thing: &'static str) {\n     for ty_param in generics.ty_params.iter() {\n-        for bound in ty_param.bounds.iter() {\n+        let bounds = ty_param.bounds.iter();\n+        let mut bounds = bounds.chain(ty_param.unbound.iter());\n+        for bound in bounds {\n             match *bound {\n                 ast::TraitTyParamBound(..) | ast::UnboxedFnTyParamBound(..) => {\n                     // According to accepted RFC #XXX, we should\n@@ -1076,9 +1078,10 @@ fn add_unsized_bound(ccx: &CrateCtxt,\n                      desc: &str,\n                      span: Span) {\n     let kind_id = ccx.tcx.lang_items.require(SizedTraitLangItem);\n+\n     match unbound {\n         &Some(ast::TraitTyParamBound(ref tpb)) => {\n-            // #FIXME(8559) currently requires the unbound to be built-in.\n+            // FIXME(#8559) currently requires the unbound to be built-in.\n             let trait_def_id = ty::trait_ref_to_def_id(ccx.tcx, tpb);\n             match kind_id {\n                 Ok(kind_id) if trait_def_id != kind_id => {"}, {"sha": "141d6c88dd96108607083019bdceb5d4cf6928b7", "filename": "src/test/run-pass/unsized.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/25e08fb4fef32b1687e077cfc87e817f75c29615/src%2Ftest%2Frun-pass%2Funsized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25e08fb4fef32b1687e077cfc87e817f75c29615/src%2Ftest%2Frun-pass%2Funsized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funsized.rs?ref=25e08fb4fef32b1687e077cfc87e817f75c29615", "patch": "@@ -24,6 +24,7 @@ struct S1<Sized? X>;\n enum E<Sized? X> {}\n impl <Sized? X> T1 for S1<X> {}\n fn f<Sized? X>() {}\n+type TT<Sized? T> = T;\n \n pub fn main() {\n }"}]}