{"sha": "e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MTE0NzgzMmNkN2ZiMWM1YmVkNTNiZGM3ZTc0YzZhNzQ3ZWJjOWI=", "commit": {"author": {"name": "Philipp Krones", "email": "uwdkn@student.kit.edu", "date": "2018-08-24T16:29:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-24T16:29:31Z"}, "message": "Merge pull request #3048 from goodmanjonathan/assign_op\n\ndeprecate assign_ops lint", "tree": {"sha": "79b5ec8484f21c52be0e275abac06f3db56ddf7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79b5ec8484f21c52be0e275abac06f3db56ddf7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbgDJrCRBK7hj4Ov3rIwAAdHIIAHxMM3HMbbJKr4fxVrLh/0cO\nSEX29ddMZfH9A4HGS7Gsd7R/YNO0yguW0YhOyhpzqLIHKvsQ38OvEHarLoV1g2aX\nsbTrGksGpkiVQOLg1E7ycxOXRk5Zo42oWGghj9Djj7tdsdcwJKzsrHNZPE789OlF\n9B9qxJalKiXC7ilL0IY45MxaKW29o8h4MBENIztXmHPOjelJqyfMZiG6AWJnEyCP\ne6WRIUJxzvjJOoAHxiyq5FsiOge8MGmRFrOXSy0g2/OWakEdJkvaSyo58OnM49vK\nDgh1HXsXMIUAAPPGfLCn6aEL4T/PWGnRip6LBrNHrFTOm7WNcrBxzdXu5HU6U2Y=\n=W6tE\n-----END PGP SIGNATURE-----\n", "payload": "tree 79b5ec8484f21c52be0e275abac06f3db56ddf7f\nparent 562c576ed35ba3f92937bf8c71d813f122b7f218\nparent 160b41dae358e0ec81973db686a0278037211fdb\nauthor Philipp Krones <uwdkn@student.kit.edu> 1535128171 +0200\ncommitter GitHub <noreply@github.com> 1535128171 +0200\n\nMerge pull request #3048 from goodmanjonathan/assign_op\n\ndeprecate assign_ops lint"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b", "html_url": "https://github.com/rust-lang/rust/commit/e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "562c576ed35ba3f92937bf8c71d813f122b7f218", "url": "https://api.github.com/repos/rust-lang/rust/commits/562c576ed35ba3f92937bf8c71d813f122b7f218", "html_url": "https://github.com/rust-lang/rust/commit/562c576ed35ba3f92937bf8c71d813f122b7f218"}, {"sha": "160b41dae358e0ec81973db686a0278037211fdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/160b41dae358e0ec81973db686a0278037211fdb", "html_url": "https://github.com/rust-lang/rust/commit/160b41dae358e0ec81973db686a0278037211fdb"}], "stats": {"total": 210, "additions": 46, "deletions": 164}, "files": [{"sha": "7d4f4e7cbc38e8644e3a8b115c167cddc52d204d", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 1, "deletions": 30, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b", "patch": "@@ -7,25 +7,6 @@ use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use syntax::ast;\n \n-/// **What it does:** Checks for compound assignment operations (`+=` and\n-/// similar).\n-///\n-/// **Why is this bad?** Projects with many developers from languages without\n-/// those operations may find them unreadable and not worth their weight.\n-///\n-/// **Known problems:** Types implementing `OpAssign` don't necessarily\n-/// implement `Op`.\n-///\n-/// **Example:**\n-/// ```rust\n-/// a += 1;\n-/// ```\n-declare_clippy_lint! {\n-    pub ASSIGN_OPS,\n-    restriction,\n-    \"any compound assignment operation\"\n-}\n-\n /// **What it does:** Checks for `a = a op b` or `a = b commutative_op a`\n /// patterns.\n ///\n@@ -73,24 +54,14 @@ pub struct AssignOps;\n \n impl LintPass for AssignOps {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(ASSIGN_OPS, ASSIGN_OP_PATTERN, MISREFACTORED_ASSIGN_OP)\n+        lint_array!(ASSIGN_OP_PATTERN, MISREFACTORED_ASSIGN_OP)\n     }\n }\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssignOps {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx hir::Expr) {\n         match expr.node {\n             hir::ExprKind::AssignOp(op, ref lhs, ref rhs) => {\n-                span_lint_and_then(cx, ASSIGN_OPS, expr.span, \"assign operation detected\", |db| {\n-                    let lhs = &sugg::Sugg::hir(cx, lhs, \"..\");\n-                    let rhs = &sugg::Sugg::hir(cx, rhs, \"..\");\n-\n-                    db.span_suggestion(\n-                        expr.span,\n-                        \"replace it with\",\n-                        format!(\"{} = {}\", lhs, sugg::make_binop(higher::binop(op.node), lhs, rhs)),\n-                    );\n-                });\n                 if let hir::ExprKind::Binary(binop, ref l, ref r) = rhs.node {\n                     if op.node == binop.node {\n                         let lint = |assignee: &hir::Expr, rhs_other: &hir::Expr| {"}, {"sha": "983f347c56f5762d494f480dfb6957488e6396f6", "filename": "clippy_lints/src/deprecated_lints.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b/clippy_lints%2Fsrc%2Fdeprecated_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b/clippy_lints%2Fsrc%2Fdeprecated_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeprecated_lints.rs?ref=e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b", "patch": "@@ -82,3 +82,13 @@ declare_deprecated_lint! {\n     pub MISALIGNED_TRANSMUTE,\n     \"this lint has been split into cast_ptr_alignment and transmute_ptr_to_ptr\"\n }\n+\n+/// **What it does:** Nothing. This lint has been deprecated.\n+///\n+/// **Deprecation reason:** This lint is too subjective, not having a good reason for being in clippy.\n+/// Additionally, compound assignment operators may be overloaded separately from their non-assigning\n+/// counterparts, so this lint may suggest a change in behavior or the code may not compile.\n+declare_deprecated_lint! {\n+    pub ASSIGN_OPS,\n+    \"using compound assignment operators (e.g. `+=`) is harmless\"\n+}"}, {"sha": "da6db4cfe45d638b76c86ee87ceb9152360e2944", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b", "patch": "@@ -265,6 +265,10 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         \"misaligned_transmute\",\n         \"this lint has been split into cast_ptr_alignment and transmute_ptr_to_ptr\",\n     );\n+    store.register_removed(\n+        \"assign_ops\",\n+        \"using compound assignment operators (e.g. `+=`) is harmless\",\n+    );\n     // end deprecated lints, do not remove this comment, it\u2019s used in `update_lints`\n \n     reg.register_late_lint_pass(box serde_api::Serde);\n@@ -409,7 +413,6 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     reg.register_lint_group(\"clippy_restriction\", vec![\n         arithmetic::FLOAT_ARITHMETIC,\n         arithmetic::INTEGER_ARITHMETIC,\n-        assign_ops::ASSIGN_OPS,\n         else_if_without_else::ELSE_IF_WITHOUT_ELSE,\n         indexing_slicing::INDEXING_SLICING,\n         inherent_impl::MULTIPLE_INHERENT_IMPL,"}, {"sha": "7332b41fa0bdaf924b9a1301aea668dbd9874a45", "filename": "tests/ui/assign_ops.rs", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b/tests%2Fui%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b/tests%2Fui%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops.rs?ref=e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b", "patch": "@@ -1,28 +1,6 @@\n-\n-\n-\n-#[warn(assign_ops)]\n-#[allow(unused_assignments)]\n-fn main() {\n-    let mut i = 1i32;\n-    i += 2;\n-    i += 2 + 17;\n-    i -= 6;\n-    i -= 2 - 1;\n-    i *= 5;\n-    i *= 1+5;\n-    i /= 32;\n-    i /= 32 | 5;\n-    i /= 32 / 5;\n-    i %= 42;\n-    i >>= i;\n-    i <<= 9 + 6 - 7;\n-    i += 1 << 5;\n-}\n-\n #[allow(dead_code, unused_assignments)]\n #[warn(assign_op_pattern)]\n-fn bla() {\n+fn main() {\n     let mut a = 5;\n     a = a + 1;\n     a = 1 + a;"}, {"sha": "826dacc53a91aa9c9c3686ac7ae11958930408b9", "filename": "tests/ui/assign_ops.stderr", "status": "modified", "additions": 30, "deletions": 110, "changes": 140, "blob_url": "https://github.com/rust-lang/rust/blob/e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b/tests%2Fui%2Fassign_ops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b/tests%2Fui%2Fassign_ops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops.stderr?ref=e91147832cd7fb1c5bed53bdc7e74c6a747ebc9b", "patch": "@@ -1,138 +1,58 @@\n-error: assign operation detected\n- --> $DIR/assign_ops.rs:8:5\n+error: manual implementation of an assign operation\n+ --> $DIR/assign_ops.rs:5:5\n   |\n-8 |     i += 2;\n-  |     ^^^^^^ help: replace it with: `i = i + 2`\n+5 |     a = a + 1;\n+  |     ^^^^^^^^^ help: replace it with: `a += 1`\n   |\n-  = note: `-D assign-ops` implied by `-D warnings`\n-\n-error: assign operation detected\n- --> $DIR/assign_ops.rs:9:5\n-  |\n-9 |     i += 2 + 17;\n-  |     ^^^^^^^^^^^ help: replace it with: `i = i + 2 + 17`\n-\n-error: assign operation detected\n-  --> $DIR/assign_ops.rs:10:5\n-   |\n-10 |     i -= 6;\n-   |     ^^^^^^ help: replace it with: `i = i - 6`\n-\n-error: assign operation detected\n-  --> $DIR/assign_ops.rs:11:5\n-   |\n-11 |     i -= 2 - 1;\n-   |     ^^^^^^^^^^ help: replace it with: `i = i - (2 - 1)`\n-\n-error: assign operation detected\n-  --> $DIR/assign_ops.rs:12:5\n-   |\n-12 |     i *= 5;\n-   |     ^^^^^^ help: replace it with: `i = i * 5`\n-\n-error: assign operation detected\n-  --> $DIR/assign_ops.rs:13:5\n-   |\n-13 |     i *= 1+5;\n-   |     ^^^^^^^^ help: replace it with: `i = i * (1+5)`\n-\n-error: assign operation detected\n-  --> $DIR/assign_ops.rs:14:5\n-   |\n-14 |     i /= 32;\n-   |     ^^^^^^^ help: replace it with: `i = i / 32`\n-\n-error: assign operation detected\n-  --> $DIR/assign_ops.rs:15:5\n-   |\n-15 |     i /= 32 | 5;\n-   |     ^^^^^^^^^^^ help: replace it with: `i = i / (32 | 5)`\n-\n-error: assign operation detected\n-  --> $DIR/assign_ops.rs:16:5\n-   |\n-16 |     i /= 32 / 5;\n-   |     ^^^^^^^^^^^ help: replace it with: `i = i / (32 / 5)`\n-\n-error: assign operation detected\n-  --> $DIR/assign_ops.rs:17:5\n-   |\n-17 |     i %= 42;\n-   |     ^^^^^^^ help: replace it with: `i = i % 42`\n-\n-error: assign operation detected\n-  --> $DIR/assign_ops.rs:18:5\n-   |\n-18 |     i >>= i;\n-   |     ^^^^^^^ help: replace it with: `i = i >> i`\n-\n-error: assign operation detected\n-  --> $DIR/assign_ops.rs:19:5\n-   |\n-19 |     i <<= 9 + 6 - 7;\n-   |     ^^^^^^^^^^^^^^^ help: replace it with: `i = i << (9 + 6 - 7)`\n-\n-error: assign operation detected\n-  --> $DIR/assign_ops.rs:20:5\n-   |\n-20 |     i += 1 << 5;\n-   |     ^^^^^^^^^^^ help: replace it with: `i = i + (1 << 5)`\n+  = note: `-D assign-op-pattern` implied by `-D warnings`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:27:5\n-   |\n-27 |     a = a + 1;\n-   |     ^^^^^^^^^ help: replace it with: `a += 1`\n-   |\n-   = note: `-D assign-op-pattern` implied by `-D warnings`\n-\n-error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:28:5\n-   |\n-28 |     a = 1 + a;\n-   |     ^^^^^^^^^ help: replace it with: `a += 1`\n+ --> $DIR/assign_ops.rs:6:5\n+  |\n+6 |     a = 1 + a;\n+  |     ^^^^^^^^^ help: replace it with: `a += 1`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:29:5\n-   |\n-29 |     a = a - 1;\n-   |     ^^^^^^^^^ help: replace it with: `a -= 1`\n+ --> $DIR/assign_ops.rs:7:5\n+  |\n+7 |     a = a - 1;\n+  |     ^^^^^^^^^ help: replace it with: `a -= 1`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:30:5\n-   |\n-30 |     a = a * 99;\n-   |     ^^^^^^^^^^ help: replace it with: `a *= 99`\n+ --> $DIR/assign_ops.rs:8:5\n+  |\n+8 |     a = a * 99;\n+  |     ^^^^^^^^^^ help: replace it with: `a *= 99`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:31:5\n-   |\n-31 |     a = 42 * a;\n-   |     ^^^^^^^^^^ help: replace it with: `a *= 42`\n+ --> $DIR/assign_ops.rs:9:5\n+  |\n+9 |     a = 42 * a;\n+  |     ^^^^^^^^^^ help: replace it with: `a *= 42`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:32:5\n+  --> $DIR/assign_ops.rs:10:5\n    |\n-32 |     a = a / 2;\n+10 |     a = a / 2;\n    |     ^^^^^^^^^ help: replace it with: `a /= 2`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:33:5\n+  --> $DIR/assign_ops.rs:11:5\n    |\n-33 |     a = a % 5;\n+11 |     a = a % 5;\n    |     ^^^^^^^^^ help: replace it with: `a %= 5`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:34:5\n+  --> $DIR/assign_ops.rs:12:5\n    |\n-34 |     a = a & 1;\n+12 |     a = a & 1;\n    |     ^^^^^^^^^ help: replace it with: `a &= 1`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:40:5\n+  --> $DIR/assign_ops.rs:18:5\n    |\n-40 |     s = s + \"bla\";\n+18 |     s = s + \"bla\";\n    |     ^^^^^^^^^^^^^ help: replace it with: `s += \"bla\"`\n \n-error: aborting due to 22 previous errors\n+error: aborting due to 9 previous errors\n "}]}