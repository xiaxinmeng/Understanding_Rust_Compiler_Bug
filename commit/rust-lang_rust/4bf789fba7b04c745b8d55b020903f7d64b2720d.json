{"sha": "4bf789fba7b04c745b8d55b020903f7d64b2720d", "node_id": "C_kwDOAAsO6NoAKDRiZjc4OWZiYTdiMDRjNzQ1YjhkNTViMDIwOTAzZjdkNjRiMjcyMGQ", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-09-28T00:06:38Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-09-28T00:44:54Z"}, "message": "rustdoc: Queryify `is_notable_trait`\n\nThis might help with #102375.", "tree": {"sha": "3e5972a14787a84c9f2d6648efb9aaebb48e31b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e5972a14787a84c9f2d6648efb9aaebb48e31b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bf789fba7b04c745b8d55b020903f7d64b2720d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bf789fba7b04c745b8d55b020903f7d64b2720d", "html_url": "https://github.com/rust-lang/rust/commit/4bf789fba7b04c745b8d55b020903f7d64b2720d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bf789fba7b04c745b8d55b020903f7d64b2720d/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a63a03dc5442b604cb58ce2aafd2a051072e623f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a63a03dc5442b604cb58ce2aafd2a051072e623f", "html_url": "https://github.com/rust-lang/rust/commit/a63a03dc5442b604cb58ce2aafd2a051072e623f"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "fb867f8b46b10ba5e4fc2b79ffceda923fdbbd9b", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4bf789fba7b04c745b8d55b020903f7d64b2720d/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bf789fba7b04c745b8d55b020903f7d64b2720d/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=4bf789fba7b04c745b8d55b020903f7d64b2720d", "patch": "@@ -1126,6 +1126,11 @@ rustc_queries! {\n         desc { |tcx| \"checking whether `{}` is `doc(hidden)`\", tcx.def_path_str(def_id) }\n     }\n \n+    /// Determines whether an item is annotated with `doc(notable_trait)`.\n+    query is_doc_notable_trait(def_id: DefId) -> bool {\n+        desc { |tcx| \"checking whether `{}` is `doc(notable_trait)`\", tcx.def_path_str(def_id) }\n+    }\n+\n     /// Returns the attributes on the item at `def_id`.\n     ///\n     /// Do not use this directly, use `tcx.get_attrs` instead."}, {"sha": "713f9067a85e2625477f518e7cc1505e72e45a28", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4bf789fba7b04c745b8d55b020903f7d64b2720d/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bf789fba7b04c745b8d55b020903f7d64b2720d/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=4bf789fba7b04c745b8d55b020903f7d64b2720d", "patch": "@@ -1289,12 +1289,24 @@ pub fn is_doc_hidden(tcx: TyCtxt<'_>, def_id: DefId) -> bool {\n         .any(|items| items.iter().any(|item| item.has_name(sym::hidden)))\n }\n \n+/// Determines whether an item is annotated with `doc(notable_trait)`.\n+pub fn is_doc_notable_trait(tcx: TyCtxt<'_>, def_id: DefId) -> bool {\n+    tcx.get_attrs(def_id, sym::doc)\n+        .filter_map(|attr| attr.meta_item_list())\n+        .any(|items| items.iter().any(|item| item.has_name(sym::notable_trait)))\n+}\n+\n /// Determines whether an item is an intrinsic by Abi.\n pub fn is_intrinsic(tcx: TyCtxt<'_>, def_id: DefId) -> bool {\n     matches!(tcx.fn_sig(def_id).abi(), Abi::RustIntrinsic | Abi::PlatformIntrinsic)\n }\n \n pub fn provide(providers: &mut ty::query::Providers) {\n-    *providers =\n-        ty::query::Providers { normalize_opaque_types, is_doc_hidden, is_intrinsic, ..*providers }\n+    *providers = ty::query::Providers {\n+        normalize_opaque_types,\n+        is_doc_hidden,\n+        is_doc_notable_trait,\n+        is_intrinsic,\n+        ..*providers\n+    }\n }"}, {"sha": "d379daca63bfd58cd517d990dc94185a86ac1b8e", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4bf789fba7b04c745b8d55b020903f7d64b2720d/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bf789fba7b04c745b8d55b020903f7d64b2720d/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=4bf789fba7b04c745b8d55b020903f7d64b2720d", "patch": "@@ -37,7 +37,7 @@ use crate::clean::cfg::Cfg;\n use crate::clean::clean_visibility;\n use crate::clean::external_path;\n use crate::clean::inline::{self, print_inlined_const};\n-use crate::clean::utils::{has_doc_flag, is_literal_expr, print_const_expr, print_evaluated_const};\n+use crate::clean::utils::{is_literal_expr, print_const_expr, print_evaluated_const};\n use crate::core::DocContext;\n use crate::formats::cache::Cache;\n use crate::formats::item_type::ItemType;\n@@ -1524,7 +1524,7 @@ impl Trait {\n         tcx.trait_is_auto(self.def_id)\n     }\n     pub(crate) fn is_notable_trait(&self, tcx: TyCtxt<'_>) -> bool {\n-        has_doc_flag(tcx, self.def_id, sym::notable_trait)\n+        tcx.is_doc_notable_trait(self.def_id)\n     }\n     pub(crate) fn unsafety(&self, tcx: TyCtxt<'_>) -> hir::Unsafety {\n         tcx.trait_def(self.def_id).unsafety"}]}