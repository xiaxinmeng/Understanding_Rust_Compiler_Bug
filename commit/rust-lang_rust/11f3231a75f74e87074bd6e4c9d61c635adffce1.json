{"sha": "11f3231a75f74e87074bd6e4c9d61c635adffce1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExZjMyMzFhNzVmNzRlODcwNzRiZDZlNGM5ZDYxYzYzNWFkZmZjZTE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-07T17:55:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-07T17:55:58Z"}, "message": "Merge #9524\n\n9524: minor: Add test for trait completion label edit r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "3b95b5dd3893cfc159a1a06a87655df299a1958b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b95b5dd3893cfc159a1a06a87655df299a1958b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11f3231a75f74e87074bd6e4c9d61c635adffce1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg5equCRBK7hj4Ov3rIwAAQKgIAGSqVjb8rL4ZQdNA9vT2pwd3\n6Z3ZA2U2bgLP+s6KWUAb7s+e8nAZmSCeiO9hf+p3HYtpRfJKefJQx6QHKOYO1J9q\nzcEM7h2vhUKY/vyA3Pz5Ivv/e1vuO09PwcrdMZztJYXBQSxixRrnOV2e6l1fMcoX\nQHNU7TVrUk2Yh82xb+6QTxETwQwEnOoJ443nTZgfWCu1H1f20JrsNFvzwYovVwst\nDbtEf9MrPKbDwhx7tUxPtJg1lZSkTs9iQi5+UzAr7owtqKICWXVu0r8TflOBBNrU\nSWlVLU4+OjO7XCaxlii8QhGStxbEAXsVJLrU//ltS6WNC6UjnmGJWU8+Kf97iAY=\n=ge0w\n-----END PGP SIGNATURE-----\n", "payload": "tree 3b95b5dd3893cfc159a1a06a87655df299a1958b\nparent 9912b073c030a5d04af9338f7c5d31d96f647563\nparent 2e8f3fee3fc15355fc2d512ace5817e9119e504b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1625680558 +0000\ncommitter GitHub <noreply@github.com> 1625680558 +0000\n\nMerge #9524\n\n9524: minor: Add test for trait completion label edit r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11f3231a75f74e87074bd6e4c9d61c635adffce1", "html_url": "https://github.com/rust-lang/rust/commit/11f3231a75f74e87074bd6e4c9d61c635adffce1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11f3231a75f74e87074bd6e4c9d61c635adffce1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9912b073c030a5d04af9338f7c5d31d96f647563", "url": "https://api.github.com/repos/rust-lang/rust/commits/9912b073c030a5d04af9338f7c5d31d96f647563", "html_url": "https://github.com/rust-lang/rust/commit/9912b073c030a5d04af9338f7c5d31d96f647563"}, {"sha": "2e8f3fee3fc15355fc2d512ace5817e9119e504b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e8f3fee3fc15355fc2d512ace5817e9119e504b", "html_url": "https://github.com/rust-lang/rust/commit/2e8f3fee3fc15355fc2d512ace5817e9119e504b"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "67ffafa6c2bc16514d6b26a5b893235cee99b88e", "filename": "crates/ide_completion/src/completions/dot.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/11f3231a75f74e87074bd6e4c9d61c635adffce1/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11f3231a75f74e87074bd6e4c9d61c635adffce1/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs?ref=11f3231a75f74e87074bd6e4c9d61c635adffce1", "patch": "@@ -101,7 +101,10 @@ fn complete_methods(\n mod tests {\n     use expect_test::{expect, Expect};\n \n-    use crate::{tests::filtered_completion_list, CompletionKind};\n+    use crate::{\n+        tests::{check_edit, filtered_completion_list},\n+        CompletionKind,\n+    };\n \n     fn check(ra_fixture: &str, expect: Expect) {\n         let actual = filtered_completion_list(ra_fixture, CompletionKind::Reference);\n@@ -253,6 +256,21 @@ fn foo(a: A) { a.$0 }\n                 me the_method() (as Trait) fn(&self)\n             \"#]],\n         );\n+        check_edit(\n+            \"the_method\",\n+            r#\"\n+struct A {}\n+trait Trait { fn the_method(&self); }\n+impl Trait for A {}\n+fn foo(a: A) { a.$0 }\n+\"#,\n+            r#\"\n+struct A {}\n+trait Trait { fn the_method(&self); }\n+impl Trait for A {}\n+fn foo(a: A) { a.the_method()$0 }\n+\"#,\n+        );\n     }\n \n     #[test]"}]}