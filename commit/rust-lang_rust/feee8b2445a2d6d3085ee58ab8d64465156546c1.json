{"sha": "feee8b2445a2d6d3085ee58ab8d64465156546c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZWU4YjI0NDVhMmQ2ZDMwODVlZTU4YWI4ZDY0NDY1MTU2NTQ2YzE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-09-08T09:20:15Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-09-08T09:20:15Z"}, "message": "Misc changes to abi.rs", "tree": {"sha": "ebb50c9ed8217c9bd363cd57257b7e02fe3099a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebb50c9ed8217c9bd363cd57257b7e02fe3099a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/feee8b2445a2d6d3085ee58ab8d64465156546c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/feee8b2445a2d6d3085ee58ab8d64465156546c1", "html_url": "https://github.com/rust-lang/rust/commit/feee8b2445a2d6d3085ee58ab8d64465156546c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/feee8b2445a2d6d3085ee58ab8d64465156546c1/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17c92bbd78abdc0f1c257c724571804b6e9147c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/17c92bbd78abdc0f1c257c724571804b6e9147c8", "html_url": "https://github.com/rust-lang/rust/commit/17c92bbd78abdc0f1c257c724571804b6e9147c8"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "bfce55cfa94fc08cc74ebbfd6ec3721ec3294c20", "filename": "src/abi.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/feee8b2445a2d6d3085ee58ab8d64465156546c1/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feee8b2445a2d6d3085ee58ab8d64465156546c1/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=feee8b2445a2d6d3085ee58ab8d64465156546c1", "patch": "@@ -482,17 +482,17 @@ pub fn codegen_call<'a, 'tcx: 'a>(\n \n     let call_inst = match fn_ty.sty {\n         ty::FnDef(def_id, substs) => {\n-            let func_ref = fx.get_function_ref(\n-                Instance::resolve(fx.tcx, ParamEnv::reveal_all(), def_id, substs).unwrap(),\n-            );\n+            let inst = Instance::resolve(fx.tcx, ParamEnv::reveal_all(), def_id, substs).unwrap();\n+            let func_ref = fx.get_function_ref(inst);\n             fx.bcx.ins().call(func_ref, &call_args)\n         }\n-        _ => {\n+        ty::FnPtr(_) => {\n             let func = trans_operand(fx, func);\n             let func = func.load_value(fx);\n             let sig = fx.bcx.import_signature(cton_sig_from_fn_ty(fx.tcx, fn_ty));\n             fx.bcx.ins().call_indirect(sig, func, &call_args)\n         }\n+        _ => bug!(\"{:?}\", fn_ty),\n     };\n \n     match output_pass_mode {"}]}