{"sha": "7767b3a08172abaabd8e047a8468b7c8e934cd4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3NjdiM2EwODE3MmFiYWFiZDhlMDQ3YTg0NjhiN2M4ZTkzNGNkNGY=", "commit": {"author": {"name": "bzzzz", "email": "evgeny.barbashov@gmail.com", "date": "2019-02-20T18:12:24Z"}, "committer": {"name": "bzzzz", "email": "evgeny.barbashov@gmail.com", "date": "2019-02-20T18:12:24Z"}, "message": "Fixed formatting and typo", "tree": {"sha": "d11681f157ba69cb39280925be5270186443adae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d11681f157ba69cb39280925be5270186443adae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7767b3a08172abaabd8e047a8468b7c8e934cd4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7767b3a08172abaabd8e047a8468b7c8e934cd4f", "html_url": "https://github.com/rust-lang/rust/commit/7767b3a08172abaabd8e047a8468b7c8e934cd4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7767b3a08172abaabd8e047a8468b7c8e934cd4f/comments", "author": {"login": "bzzzzzz", "id": 9977957, "node_id": "MDQ6VXNlcjk5Nzc5NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/9977957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bzzzzzz", "html_url": "https://github.com/bzzzzzz", "followers_url": "https://api.github.com/users/bzzzzzz/followers", "following_url": "https://api.github.com/users/bzzzzzz/following{/other_user}", "gists_url": "https://api.github.com/users/bzzzzzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/bzzzzzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bzzzzzz/subscriptions", "organizations_url": "https://api.github.com/users/bzzzzzz/orgs", "repos_url": "https://api.github.com/users/bzzzzzz/repos", "events_url": "https://api.github.com/users/bzzzzzz/events{/privacy}", "received_events_url": "https://api.github.com/users/bzzzzzz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bzzzzzz", "id": 9977957, "node_id": "MDQ6VXNlcjk5Nzc5NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/9977957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bzzzzzz", "html_url": "https://github.com/bzzzzzz", "followers_url": "https://api.github.com/users/bzzzzzz/followers", "following_url": "https://api.github.com/users/bzzzzzz/following{/other_user}", "gists_url": "https://api.github.com/users/bzzzzzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/bzzzzzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bzzzzzz/subscriptions", "organizations_url": "https://api.github.com/users/bzzzzzz/orgs", "repos_url": "https://api.github.com/users/bzzzzzz/repos", "events_url": "https://api.github.com/users/bzzzzzz/events{/privacy}", "received_events_url": "https://api.github.com/users/bzzzzzz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9c6682827acd2e39206b9e116dd3d7430058131", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9c6682827acd2e39206b9e116dd3d7430058131", "html_url": "https://github.com/rust-lang/rust/commit/f9c6682827acd2e39206b9e116dd3d7430058131"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "10680dfe888ad8beb51c00d34be9ab0c2e73bf99", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7767b3a08172abaabd8e047a8468b7c8e934cd4f/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7767b3a08172abaabd8e047a8468b7c8e934cd4f/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=7767b3a08172abaabd8e047a8468b7c8e934cd4f", "patch": "@@ -1,11 +1,11 @@\n use crate::utils::paths;\n use crate::utils::sugg;\n use crate::utils::{\n-    get_arg_name, get_parent_expr, get_trait_def_id, has_iter_method, implements_trait, in_macro, is_copy, is_expn_of, is_self,\n-    is_self_ty, iter_input_pats, last_path_segment, match_def_path, match_path, match_qpath, match_trait_method,\n-    match_type, match_var, method_calls, method_chain_args, remove_blocks, return_ty, same_tys, single_segment_path,\n-    snippet, snippet_with_applicability, snippet_with_macro_callsite, span_lint, span_lint_and_sugg,\n-    span_lint_and_then, span_note_and_lint, walk_ptrs_ty, walk_ptrs_ty_depth, SpanlessEq,\n+    get_arg_name, get_parent_expr, get_trait_def_id, has_iter_method, implements_trait, in_macro, is_copy, is_expn_of,\n+    is_self, is_self_ty, iter_input_pats, last_path_segment, match_def_path, match_path, match_qpath,\n+    match_trait_method, match_type, match_var, method_calls, method_chain_args, remove_blocks, return_ty, same_tys,\n+    single_segment_path, snippet, snippet_with_applicability, snippet_with_macro_callsite, span_lint,\n+    span_lint_and_sugg, span_lint_and_then, span_note_and_lint, walk_ptrs_ty, walk_ptrs_ty_depth, SpanlessEq,\n };\n use if_chain::if_chain;\n use matches::matches;"}, {"sha": "d959d7490ebcbc6d3fb2a48ad03869db8eaf80c4", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7767b3a08172abaabd8e047a8468b7c8e934cd4f/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7767b3a08172abaabd8e047a8468b7c8e934cd4f/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=7767b3a08172abaabd8e047a8468b7c8e934cd4f", "patch": "@@ -1156,10 +1156,7 @@ pub fn any_parent_is_automatically_derived(tcx: TyCtxt<'_, '_, '_>, node: NodeId\n }\n \n /// Returns true if ty has `iter` or `iter_mut` methods\n-pub fn has_iter_method(\n-    cx: &LateContext<'_, '_>,\n-    probably_ref_ty: ty::Ty<'_>,\n-) -> Option<&'static str> {\n+pub fn has_iter_method(cx: &LateContext<'_, '_>, probably_ref_ty: ty::Ty<'_>) -> Option<&'static str> {\n     // FIXME: instead of this hard-coded list, we should check if `<adt>::iter`\n     // exists and has the desired signature. Unfortunately FnCtxt is not exported\n     // so we can't use its `lookup_method` method.\n@@ -1176,7 +1173,7 @@ pub fn has_iter_method(\n         &paths::HASHMAP,\n         &paths::PATH_BUF,\n         &paths::PATH,\n-        &paths::RECIEVER,\n+        &paths::RECEIVER,\n     ];\n \n     let ty_to_check = match probably_ref_ty.sty {"}, {"sha": "9ee25aaea5ead2ff86481be069d65e4f7ad3c240", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7767b3a08172abaabd8e047a8468b7c8e934cd4f/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7767b3a08172abaabd8e047a8468b7c8e934cd4f/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=7767b3a08172abaabd8e047a8468b7c8e934cd4f", "patch": "@@ -81,7 +81,7 @@ pub const RANGE_TO_INCLUSIVE: [&str; 3] = [\"core\", \"ops\", \"RangeToInclusive\"];\n pub const RANGE_TO_INCLUSIVE_STD: [&str; 3] = [\"std\", \"ops\", \"RangeToInclusive\"];\n pub const RANGE_TO_STD: [&str; 3] = [\"std\", \"ops\", \"RangeTo\"];\n pub const RC: [&str; 3] = [\"alloc\", \"rc\", \"Rc\"];\n-pub const RECIEVER: [&str; 4] = [\"std\", \"sync\", \"mpsc\", \"Receiver\"];\n+pub const RECEIVER: [&str; 4] = [\"std\", \"sync\", \"mpsc\", \"Receiver\"];\n pub const REGEX: [&str; 3] = [\"regex\", \"re_unicode\", \"Regex\"];\n pub const REGEX_BUILDER_NEW: [&str; 5] = [\"regex\", \"re_builder\", \"unicode\", \"RegexBuilder\", \"new\"];\n pub const REGEX_BYTES_BUILDER_NEW: [&str; 5] = [\"regex\", \"re_builder\", \"bytes\", \"RegexBuilder\", \"new\"];"}]}