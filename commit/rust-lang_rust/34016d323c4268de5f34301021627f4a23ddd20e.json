{"sha": "34016d323c4268de5f34301021627f4a23ddd20e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MDE2ZDMyM2M0MjY4ZGU1ZjM0MzAxMDIxNjI3ZjRhMjNkZGQyMGU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-07-21T00:28:29Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-07-21T00:29:36Z"}, "message": "Make bound functions have the right types", "tree": {"sha": "5e826f44c8280758d4bc364b5a12d44af84b50c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e826f44c8280758d4bc364b5a12d44af84b50c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34016d323c4268de5f34301021627f4a23ddd20e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34016d323c4268de5f34301021627f4a23ddd20e", "html_url": "https://github.com/rust-lang/rust/commit/34016d323c4268de5f34301021627f4a23ddd20e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34016d323c4268de5f34301021627f4a23ddd20e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66181ce2ccbcca03d68b9340294dc5169da2e29e", "url": "https://api.github.com/repos/rust-lang/rust/commits/66181ce2ccbcca03d68b9340294dc5169da2e29e", "html_url": "https://github.com/rust-lang/rust/commit/66181ce2ccbcca03d68b9340294dc5169da2e29e"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "e4eb98a2d07de41a8cbb8e07cec334de122225db", "filename": "src/boot/me/type.ml", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/34016d323c4268de5f34301021627f4a23ddd20e/src%2Fboot%2Fme%2Ftype.ml", "raw_url": "https://github.com/rust-lang/rust/raw/34016d323c4268de5f34301021627f4a23ddd20e/src%2Fboot%2Fme%2Ftype.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftype.ml?ref=34016d323c4268de5f34301021627f4a23ddd20e", "patch": "@@ -719,9 +719,29 @@ let check_stmt (cx:Semant.ctxt) : (fn_ctx -> Ast.stmt -> unit) =\n                   None -> None\n                 | Some arg -> Some (check_atom arg)\n             in\n+            let rec replace_args ty =\n+              match ty with\n+                  Ast.TY_fn (ty_sig, ty_fn_aux) ->\n+                    let orig_slots = ty_sig.Ast.sig_input_slots in\n+                    let take_arg i =\n+                      match args.(i) with\n+                          None -> Some orig_slots.(i)\n+                        | Some _ -> None\n+                    in\n+                    let new_slots = Array.init (Array.length args) take_arg in\n+                    let new_slots = Common.arr_filter_some new_slots in\n+                    let ty_sig =\n+                      { ty_sig with Ast.sig_input_slots = new_slots }\n+                    in\n+                    Ast.TY_fn (ty_sig, ty_fn_aux)\n+                | Ast.TY_mutable ty' -> Ast.TY_mutable (replace_args ty')\n+                | Ast.TY_constrained (ty', constrs) ->\n+                    Ast.TY_constrained (replace_args ty', constrs)\n+                | _ -> Common.bug () \"replace_args: unexpected type\"\n+            in\n             let callee_ty = check_lval callee in\n             ignore (demand_fn (Array.map check_arg args) callee_ty);\n-            infer_lval callee_ty bound\n+            infer_lval (replace_args callee_ty) bound\n \n         | Ast.STMT_recv (dst, src) ->\n             infer_lval (demand_port (check_lval src)) dst"}]}