{"sha": "171c3c08fe245938fb25321394233de5fe2abc7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3MWMzYzA4ZmUyNDU5MzhmYjI1MzIxMzk0MjMzZGU1ZmUyYWJjN2M=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-07T10:54:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-07T10:54:44Z"}, "message": "Merge #7190\n\n7190: Remove some stale deprecations r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "cb6ca14556d79df1caa088011d5389ac8b80db28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb6ca14556d79df1caa088011d5389ac8b80db28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/171c3c08fe245938fb25321394233de5fe2abc7c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf9uh0CRBK7hj4Ov3rIwAAdHIIAJVKGcul+Kahj3LBHnvEnbRn\nMunM6LPrBM3fHzo1cRHuWbfK/tyC8Z3wWouwi16q+plV6CFClyOyDAs90MElGK4T\nYQMd3jhq/UryCN+wpOuictrGHHiuV7Y4pIe2cD96b0DOfs50BuFJgbXnblMrSRJT\n+iYXLKnsRrGPY/sgq47wxWABQvwpc/6rq/VNbAO/sfPGkqlt2UYXWbwL/Cbjwg9X\n8DuPcFGisBloBZoBNc+UCfnTup/LTYuYPhiS5qT6h8u4h26p0cFXxDCNuWcxaCsU\napTTVEjEmKMzIDR5oNycPMQcwd8v/jL8bw8WLutjjmL6qAvyFg10b5Wrh/kDQL4=\n=EQqq\n-----END PGP SIGNATURE-----\n", "payload": "tree cb6ca14556d79df1caa088011d5389ac8b80db28\nparent 1347b7fa4cdc2064ac1cb4a686f10890b9235893\nparent c8ace3a295aa63ff7f210f11840e7fc9de65264c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1610016884 +0000\ncommitter GitHub <noreply@github.com> 1610016884 +0000\n\nMerge #7190\n\n7190: Remove some stale deprecations r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/171c3c08fe245938fb25321394233de5fe2abc7c", "html_url": "https://github.com/rust-lang/rust/commit/171c3c08fe245938fb25321394233de5fe2abc7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/171c3c08fe245938fb25321394233de5fe2abc7c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1347b7fa4cdc2064ac1cb4a686f10890b9235893", "url": "https://api.github.com/repos/rust-lang/rust/commits/1347b7fa4cdc2064ac1cb4a686f10890b9235893", "html_url": "https://github.com/rust-lang/rust/commit/1347b7fa4cdc2064ac1cb4a686f10890b9235893"}, {"sha": "c8ace3a295aa63ff7f210f11840e7fc9de65264c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8ace3a295aa63ff7f210f11840e7fc9de65264c", "html_url": "https://github.com/rust-lang/rust/commit/c8ace3a295aa63ff7f210f11840e7fc9de65264c"}], "stats": {"total": 17, "additions": 5, "deletions": 12}, "files": [{"sha": "c10b3b8f55eb93dae99433818891403c9a2ef1b6", "filename": "crates/assists/src/handlers/fix_visibility.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/171c3c08fe245938fb25321394233de5fe2abc7c/crates%2Fassists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/171c3c08fe245938fb25321394233de5fe2abc7c/crates%2Fassists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Ffix_visibility.rs?ref=171c3c08fe245938fb25321394233de5fe2abc7c", "patch": "@@ -97,7 +97,6 @@ fn add_vis_to_referenced_record_field(acc: &mut Assists, ctx: &AssistContext) ->\n     let parent_name = parent.name(ctx.db());\n     let target_module = parent.module(ctx.db());\n \n-    #[allow(deprecated)]\n     let in_file_source = record_field_def.source(ctx.db())?;\n     let (offset, current_visibility, target) = match in_file_source.value {\n         hir::FieldSource::Named(it) => {"}, {"sha": "71ec4df92b27609fd64dc6741da603033b409885", "filename": "crates/ide/src/diagnostics/fixes.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/171c3c08fe245938fb25321394233de5fe2abc7c/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/171c3c08fe245938fb25321394233de5fe2abc7c/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs?ref=171c3c08fe245938fb25321394233de5fe2abc7c", "patch": "@@ -156,22 +156,19 @@ fn missing_record_expr_field_fix(\n     let record_fields = match VariantDef::from(def_id) {\n         VariantDef::Struct(s) => {\n             module = s.module(sema.db);\n-            #[allow(deprecated)]\n             let source = s.source(sema.db)?;\n             def_file_id = source.file_id;\n             let fields = source.value.field_list()?;\n             record_field_list(fields)?\n         }\n         VariantDef::Union(u) => {\n             module = u.module(sema.db);\n-            #[allow(deprecated)]\n             let source = u.source(sema.db)?;\n             def_file_id = source.file_id;\n             source.value.record_field_list()?\n         }\n         VariantDef::Variant(e) => {\n             module = e.module(sema.db);\n-            #[allow(deprecated)]\n             let source = e.source(sema.db)?;\n             def_file_id = source.file_id;\n             let fields = source.value.field_list()?;"}, {"sha": "a12a2475e68c38e75a1643822dc8a6fd6bcc21cd", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/171c3c08fe245938fb25321394233de5fe2abc7c/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/171c3c08fe245938fb25321394233de5fe2abc7c/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=171c3c08fe245938fb25321394233de5fe2abc7c", "patch": "@@ -320,7 +320,6 @@ fn hover_for_definition(db: &RootDatabase, def: Definition) -> Option<Markup> {\n             from_def_source_labeled(db, it, Some(label), mod_path)\n         }\n         Definition::Field(def) => {\n-            #[allow(deprecated)]\n             let src = def.source(db)?.value;\n             if let FieldSource::Named(it) = src {\n                 from_def_source_labeled(db, def, it.short_label(), mod_path)\n@@ -368,7 +367,6 @@ fn hover_for_definition(db: &RootDatabase, def: Definition) -> Option<Markup> {\n         D: HasSource<Ast = A> + HasAttrs + Copy,\n         A: ShortLabel,\n     {\n-        #[allow(deprecated)]\n         let short_label = def.source(db)?.value.short_label();\n         from_def_source_labeled(db, def, short_label, mod_path)\n     }"}, {"sha": "37b06027c79210429a838c3e2140eedfd79f86b1", "filename": "crates/ide_db/src/search.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/171c3c08fe245938fb25321394233de5fe2abc7c/crates%2Fide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/171c3c08fe245938fb25321394233de5fe2abc7c/crates%2Fide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsearch.rs?ref=171c3c08fe245938fb25321394233de5fe2abc7c", "patch": "@@ -137,7 +137,6 @@ impl Definition {\n         }\n \n         if let Definition::LifetimeParam(param) = self {\n-            #[allow(deprecated)]\n             let range = match param.parent(db) {\n                 hir::GenericDef::Function(it) => {\n                     it.source(db).and_then(|src| Some(src.value.syntax().text_range()))"}, {"sha": "29cc9051ee7c5f1fe427f25ce46c84cf677bdae9", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/171c3c08fe245938fb25321394233de5fe2abc7c/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/171c3c08fe245938fb25321394233de5fe2abc7c/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=171c3c08fe245938fb25321394233de5fe2abc7c", "patch": "@@ -18,8 +18,8 @@ use lsp_types::{\n     CallHierarchyIncomingCall, CallHierarchyIncomingCallsParams, CallHierarchyItem,\n     CallHierarchyOutgoingCall, CallHierarchyOutgoingCallsParams, CallHierarchyPrepareParams,\n     CodeActionKind, CodeLens, Command, CompletionItem, Diagnostic, DiagnosticTag,\n-    DocumentFormattingParams, DocumentHighlight, DocumentSymbol, FoldingRange, FoldingRangeParams,\n-    HoverContents, Location, NumberOrString, Position, PrepareRenameResponse, Range, RenameParams,\n+    DocumentFormattingParams, DocumentHighlight, FoldingRange, FoldingRangeParams, HoverContents,\n+    Location, NumberOrString, Position, PrepareRenameResponse, Range, RenameParams,\n     SemanticTokensDeltaParams, SemanticTokensFullDeltaResult, SemanticTokensParams,\n     SemanticTokensRangeParams, SemanticTokensRangeResult, SemanticTokensResult, SymbolInformation,\n     SymbolTag, TextDocumentIdentifier, TextDocumentPositionParams, Url, WorkspaceEdit,\n@@ -280,7 +280,7 @@ pub(crate) fn handle_document_symbol(\n     let file_id = from_proto::file_id(&snap, &params.text_document.uri)?;\n     let line_index = snap.analysis.file_line_index(file_id)?;\n \n-    let mut parents: Vec<(DocumentSymbol, Option<usize>)> = Vec::new();\n+    let mut parents: Vec<(lsp_types::DocumentSymbol, Option<usize>)> = Vec::new();\n \n     for symbol in snap.analysis.file_structure(file_id)? {\n         let mut tags = Vec::new();\n@@ -289,7 +289,7 @@ pub(crate) fn handle_document_symbol(\n         };\n \n         #[allow(deprecated)]\n-        let doc_symbol = DocumentSymbol {\n+        let doc_symbol = lsp_types::DocumentSymbol {\n             name: symbol.label,\n             detail: symbol.detail,\n             kind: to_proto::symbol_kind(symbol.kind),\n@@ -333,7 +333,7 @@ pub(crate) fn handle_document_symbol(\n     return Ok(Some(res));\n \n     fn flatten_document_symbol(\n-        symbol: &DocumentSymbol,\n+        symbol: &lsp_types::DocumentSymbol,\n         container_name: Option<String>,\n         url: &Url,\n         res: &mut Vec<SymbolInformation>,"}]}