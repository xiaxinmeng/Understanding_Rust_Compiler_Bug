{"sha": "6f6dd86248d5c3ece0e668537e78a71198f36ddd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmNmRkODYyNDhkNWMzZWNlMGU2Njg1MzdlNzhhNzExOThmMzZkZGQ=", "commit": {"author": {"name": "Young-il Choi", "email": "duddlf.choi@samsung.com", "date": "2013-05-02T04:16:01Z"}, "committer": {"name": "Young-il Choi", "email": "duddlf.choi@samsung.com", "date": "2013-05-02T04:16:01Z"}, "message": "compiletest: configurable test dir for ARM", "tree": {"sha": "bab70c49a2d5f4e81901d82dac1d7b399f883e23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bab70c49a2d5f4e81901d82dac1d7b399f883e23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f6dd86248d5c3ece0e668537e78a71198f36ddd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f6dd86248d5c3ece0e668537e78a71198f36ddd", "html_url": "https://github.com/rust-lang/rust/commit/6f6dd86248d5c3ece0e668537e78a71198f36ddd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f6dd86248d5c3ece0e668537e78a71198f36ddd/comments", "author": {"login": "yichoi", "id": 3222276, "node_id": "MDQ6VXNlcjMyMjIyNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3222276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichoi", "html_url": "https://github.com/yichoi", "followers_url": "https://api.github.com/users/yichoi/followers", "following_url": "https://api.github.com/users/yichoi/following{/other_user}", "gists_url": "https://api.github.com/users/yichoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichoi/subscriptions", "organizations_url": "https://api.github.com/users/yichoi/orgs", "repos_url": "https://api.github.com/users/yichoi/repos", "events_url": "https://api.github.com/users/yichoi/events{/privacy}", "received_events_url": "https://api.github.com/users/yichoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yichoi", "id": 3222276, "node_id": "MDQ6VXNlcjMyMjIyNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3222276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichoi", "html_url": "https://github.com/yichoi", "followers_url": "https://api.github.com/users/yichoi/followers", "following_url": "https://api.github.com/users/yichoi/following{/other_user}", "gists_url": "https://api.github.com/users/yichoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichoi/subscriptions", "organizations_url": "https://api.github.com/users/yichoi/orgs", "repos_url": "https://api.github.com/users/yichoi/repos", "events_url": "https://api.github.com/users/yichoi/events{/privacy}", "received_events_url": "https://api.github.com/users/yichoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3afd708e2acd767f1af90de52c139c1b6b877311", "url": "https://api.github.com/repos/rust-lang/rust/commits/3afd708e2acd767f1af90de52c139c1b6b877311", "html_url": "https://github.com/rust-lang/rust/commit/3afd708e2acd767f1af90de52c139c1b6b877311"}], "stats": {"total": 38, "additions": 21, "deletions": 17}, "files": [{"sha": "310dec8de7977c5b0e71ccddaef0e2c60a2d38c9", "filename": "mk/tests.mk", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6f6dd86248d5c3ece0e668537e78a71198f36ddd/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6f6dd86248d5c3ece0e668537e78a71198f36ddd/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=6f6dd86248d5c3ece0e668537e78a71198f36ddd", "patch": "@@ -502,12 +502,13 @@ ifeq ($(CFG_ADB_DEVICE),true)\n CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\t\t\t\\\n \t\t--compile-lib-path $$(HLIB$(1)_H_$(3))\t\t\t\t\\\n         --run-lib-path $$(TLIB$(1)_T_$(2)_H_$(3))\t\t\t\\\n-        --rustc-path $$(HBIN$(1)_H_$(3))/rustc$$(X_$(3))\t\t\t\\\n-        --aux-base $$(S)src/test/auxiliary/                 \\\n+        --rustc-path $$(HBIN$(1)_H_$(3))/rustc$$(X_$(3))\t\\\n+        --aux-base $$(S)src/test/auxiliary/\t\t\t\t\t\\\n         --stage-id stage$(1)-$(2)\t\t\t\t\t\t\t\\\n         --host $(CFG_BUILD_TRIPLE)                          \\\n         --target $(2)                                       \\\n         --adb-path=$(CFG_ADB_PATH)                          \\\n+        --adb-test-dir=$(CFG_ADB_TEST_DIR)                  \\\n         --rustcflags \"$(RUSTC_FLAGS_$(2)) $$(CFG_RUSTC_FLAGS) --target=$(2)\" \\\n         $$(CTEST_TESTARGS)\n \n@@ -516,7 +517,7 @@ else\n CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\t\t\t\\\n \t\t--compile-lib-path $$(HLIB$(1)_H_$(3))\t\t\t\t\\\n         --run-lib-path $$(TLIB$(1)_T_$(2)_H_$(3))\t\t\t\\\n-        --rustc-path $$(HBIN$(1)_H_$(3))/rustc$$(X_$(3))\t\t\t\\\n+        --rustc-path $$(HBIN$(1)_H_$(3))/rustc$$(X_$(3))\t\\\n         --aux-base $$(S)src/test/auxiliary/                 \\\n         --stage-id stage$(1)-$(2)\t\t\t\t\t\t\t\\\n         --host $(CFG_BUILD_TRIPLE)                          \\"}, {"sha": "87a7dae5a7f6ee4a902a738c3f533566438b86be", "filename": "src/compiletest/common.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6f6dd86248d5c3ece0e668537e78a71198f36ddd/src%2Fcompiletest%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f6dd86248d5c3ece0e668537e78a71198f36ddd/src%2Fcompiletest%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcommon.rs?ref=6f6dd86248d5c3ece0e668537e78a71198f36ddd", "patch": "@@ -70,9 +70,12 @@ pub struct config {\n     // Target System to be executed\n     target: ~str,\n \n-    // Extra parameter to run arm-linux-androideabi\n+    // Extra parameter to run adb on arm-linux-androideabi\n     adb_path: ~str,\n \n+    // Extra parameter to run test sute on arm-linux-androideabi\n+    adb_test_dir: ~str,\n+\n     // check if can be run or not\n     flag_runnable: bool,\n "}, {"sha": "5575c01a9065bf3ca1eb7c3e9a278c2abf098ade", "filename": "src/compiletest/compiletest.rc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6f6dd86248d5c3ece0e668537e78a71198f36ddd/src%2Fcompiletest%2Fcompiletest.rc", "raw_url": "https://github.com/rust-lang/rust/raw/6f6dd86248d5c3ece0e668537e78a71198f36ddd/src%2Fcompiletest%2Fcompiletest.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rc?ref=6f6dd86248d5c3ece0e668537e78a71198f36ddd", "patch": "@@ -63,7 +63,8 @@ pub fn parse_config(args: ~[~str]) -> config {\n           getopts::optflag(~\"newrt\"),\n           getopts::optopt(~\"host\"),\n           getopts::optopt(~\"target\"),\n-          getopts::optopt(~\"adb-path\")\n+          getopts::optopt(~\"adb-path\"),\n+          getopts::optopt(~\"adb-test-dir\")\n          ];\n \n     assert!(!args.is_empty());\n@@ -100,6 +101,7 @@ pub fn parse_config(args: ~[~str]) -> config {\n         host: opt_str(getopts::opt_maybe_str(matches, ~\"host\")),\n         target: opt_str(getopts::opt_maybe_str(matches, ~\"target\")),\n         adb_path: opt_str(getopts::opt_maybe_str(matches, ~\"adb-path\")),\n+        adb_test_dir: opt_str(getopts::opt_maybe_str(matches, ~\"adb-test-dir\")),\n         flag_runnable:\n             if (getopts::opt_maybe_str(matches, ~\"host\") ==\n                 getopts::opt_maybe_str(matches, ~\"target\")) { true }\n@@ -136,6 +138,7 @@ pub fn log_config(config: config) {\n     logv(c, fmt!(\"host: %s\", config.host));\n     logv(c, fmt!(\"target: %s\", config.target));\n     logv(c, fmt!(\"adb_path: %s\", config.adb_path));\n+    logv(c, fmt!(\"adb_test_dir: %s\", config.adb_test_dir));\n     logv(c, fmt!(\"flag_runnable: %b\", config.flag_runnable));\n     logv(c, fmt!(\"verbose: %b\", config.verbose));\n     logv(c, fmt!(\"\\n\"));"}, {"sha": "142460fe0dc0945da88737f2699ebac24bfdc263", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6f6dd86248d5c3ece0e668537e78a71198f36ddd/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f6dd86248d5c3ece0e668537e78a71198f36ddd/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=6f6dd86248d5c3ece0e668537e78a71198f36ddd", "patch": "@@ -512,7 +512,7 @@ fn exec_compiled_test(config: config, props: TestProps,\n \n                 // copy to target\n                 let copy_result = procsrv::run(~\"\", config.adb_path,\n-                    ~[~\"push\", args.prog, ~\"/system/tmp\"],\n+                    ~[~\"push\", args.prog, config.adb_test_dir],\n                     ~[(~\"\",~\"\")], Some(~\"\"));\n \n                 if config.verbose {\n@@ -534,16 +534,13 @@ fn exec_compiled_test(config: config, props: TestProps,\n \n                 let mut newcmd_out = ~\"\";\n                 let mut newcmd_err = ~\"\";\n-                newcmd_out.push_str(~\"LD_LIBRARY_PATH=/system/tmp; \");\n-                newcmd_err.push_str(~\"LD_LIBRARY_PATH=/system/tmp; \");\n-                newcmd_out.push_str(~\"export LD_LIBRARY_PATH; \");\n-                newcmd_err.push_str(~\"export LD_LIBRARY_PATH; \");\n-                newcmd_out.push_str(~\"cd /system/tmp; \");\n-                newcmd_err.push_str(~\"cd /system/tmp; \");\n-                newcmd_out.push_str(\"./\");\n-                newcmd_err.push_str(\"./\");\n-                newcmd_out.push_str(prog_short);\n-                newcmd_err.push_str(prog_short);\n+                newcmd_out.push_str(fmt!(\n+                    \"LD_LIBRARY_PATH=%s; export LD_LIBRARY_PATH; cd %s; ./%s\",\n+                    config.adb_test_dir, config.adb_test_dir, prog_short));\n+\n+                newcmd_err.push_str(fmt!(\n+                    \"LD_LIBRARY_PATH=%s; export LD_LIBRARY_PATH; cd %s; ./%s\",\n+                    config.adb_test_dir, config.adb_test_dir, prog_short));\n \n                 for vec::each(subargs) |tv| {\n                     newcmd_out.push_str(\" \");\n@@ -617,7 +614,7 @@ fn compose_and_run_compiler(\n                         if (file.filetype() == Some(~\".so\")) {\n \n                             let copy_result = procsrv::run(~\"\", config.adb_path,\n-                                ~[~\"push\", file.to_str(), ~\"/system/tmp\"],\n+                                ~[~\"push\", file.to_str(), config.adb_test_dir],\n                                 ~[(~\"\",~\"\")], Some(~\"\"));\n \n                             if config.verbose {"}]}