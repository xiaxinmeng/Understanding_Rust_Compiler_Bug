{"sha": "fdb32e997bef725f538f66dcfd96b1c1e51d2c56", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYjMyZTk5N2JlZjcyNWY1MzhmNjZkY2ZkOTZiMWMxZTUxZDJjNTY=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-02-19T15:18:10Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-02-19T16:38:14Z"}, "message": "[intra-doc links] Don't check feature gates of items re-exported across crates\n\nIt should be never break another crate to re-export a public item.\n\nNote that this doesn't check the feature gate at\n*all* for other crates:\n\n- Feature-gates aren't currently serialized, so the only way to check\n  the gate is with ad-hoc attribute checking.\n- Checking the feature gate twice (once when documenting the original\n  crate and one when documenting the current crate) seems not great.\n\nThis should still catch using the feature most of the time though, since\npeople tend to document their own crates.", "tree": {"sha": "a8e358037a3a71169e155dd3b1e19490fbfe557d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8e358037a3a71169e155dd3b1e19490fbfe557d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdb32e997bef725f538f66dcfd96b1c1e51d2c56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdb32e997bef725f538f66dcfd96b1c1e51d2c56", "html_url": "https://github.com/rust-lang/rust/commit/fdb32e997bef725f538f66dcfd96b1c1e51d2c56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdb32e997bef725f538f66dcfd96b1c1e51d2c56/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8599bff5a3556059817503030e248507706e96b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8599bff5a3556059817503030e248507706e96b4", "html_url": "https://github.com/rust-lang/rust/commit/8599bff5a3556059817503030e248507706e96b4"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "a5837f301e4bfa9df1ebe628e0c107837f6e433b", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fdb32e997bef725f538f66dcfd96b1c1e51d2c56/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdb32e997bef725f538f66dcfd96b1c1e51d2c56/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=fdb32e997bef725f538f66dcfd96b1c1e51d2c56", "patch": "@@ -1207,7 +1207,10 @@ impl LinkCollector<'_, '_> {\n                     // for discussion on the matter.\n                     verify(kind, id)?;\n \n+                    // FIXME: it would be nice to check that the feature gate was enabled in the original crate, not just ignore it altogether.\n+                    // However I'm not sure how to check that across crates.\n                     if prim == PrimitiveType::RawPointer\n+                        && item.def_id.is_local()\n                         && !self.cx.tcx.features().intra_doc_pointers\n                     {\n                         let span = super::source_span_for_markdown_range("}, {"sha": "0a3dc57f102414b566abd8b73faab0b544c7a774", "filename": "src/test/rustdoc-ui/intra-doc/auxiliary/pointer-reexports-allowed.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdb32e997bef725f538f66dcfd96b1c1e51d2c56/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fauxiliary%2Fpointer-reexports-allowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdb32e997bef725f538f66dcfd96b1c1e51d2c56/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fauxiliary%2Fpointer-reexports-allowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fauxiliary%2Fpointer-reexports-allowed.rs?ref=fdb32e997bef725f538f66dcfd96b1c1e51d2c56", "patch": "@@ -0,0 +1,4 @@\n+#![feature(intra_doc_pointers)]\n+#![crate_name = \"inner\"]\n+/// Link to [some pointer](*const::to_raw_parts)\n+pub fn foo() {}"}, {"sha": "8654a8e1bd2b42c622ae5f02e553f58edd0a92b7", "filename": "src/test/rustdoc-ui/intra-doc/pointer-reexports-allowed.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdb32e997bef725f538f66dcfd96b1c1e51d2c56/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fpointer-reexports-allowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdb32e997bef725f538f66dcfd96b1c1e51d2c56/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fpointer-reexports-allowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fpointer-reexports-allowed.rs?ref=fdb32e997bef725f538f66dcfd96b1c1e51d2c56", "patch": "@@ -0,0 +1,4 @@\n+// aux-build:pointer-reexports-allowed.rs\n+// check-pass\n+extern crate inner;\n+pub use inner::foo;"}]}