{"sha": "032cdfe043c5c9d00530dc18005066a184f3d46e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMmNkZmUwNDNjNWM5ZDAwNTMwZGMxODAwNTA2NmExODRmM2Q0NmU=", "commit": {"author": {"name": "Mateusz Gacek", "email": "96mateusz.gacek@gmail.com", "date": "2021-03-18T09:27:55Z"}, "committer": {"name": "Mateusz Gacek", "email": "96mateusz.gacek@gmail.com", "date": "2021-03-18T09:27:55Z"}, "message": "Adjust use_self uitest to proper self convention", "tree": {"sha": "8bf12c1bf5528e0521d6f4f0b18ada2a3163286b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bf12c1bf5528e0521d6f4f0b18ada2a3163286b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/032cdfe043c5c9d00530dc18005066a184f3d46e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/032cdfe043c5c9d00530dc18005066a184f3d46e", "html_url": "https://github.com/rust-lang/rust/commit/032cdfe043c5c9d00530dc18005066a184f3d46e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/032cdfe043c5c9d00530dc18005066a184f3d46e/comments", "author": {"login": "mgacek8", "id": 24357739, "node_id": "MDQ6VXNlcjI0MzU3NzM5", "avatar_url": "https://avatars.githubusercontent.com/u/24357739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgacek8", "html_url": "https://github.com/mgacek8", "followers_url": "https://api.github.com/users/mgacek8/followers", "following_url": "https://api.github.com/users/mgacek8/following{/other_user}", "gists_url": "https://api.github.com/users/mgacek8/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgacek8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgacek8/subscriptions", "organizations_url": "https://api.github.com/users/mgacek8/orgs", "repos_url": "https://api.github.com/users/mgacek8/repos", "events_url": "https://api.github.com/users/mgacek8/events{/privacy}", "received_events_url": "https://api.github.com/users/mgacek8/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mgacek8", "id": 24357739, "node_id": "MDQ6VXNlcjI0MzU3NzM5", "avatar_url": "https://avatars.githubusercontent.com/u/24357739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgacek8", "html_url": "https://github.com/mgacek8", "followers_url": "https://api.github.com/users/mgacek8/followers", "following_url": "https://api.github.com/users/mgacek8/following{/other_user}", "gists_url": "https://api.github.com/users/mgacek8/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgacek8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgacek8/subscriptions", "organizations_url": "https://api.github.com/users/mgacek8/orgs", "repos_url": "https://api.github.com/users/mgacek8/repos", "events_url": "https://api.github.com/users/mgacek8/events{/privacy}", "received_events_url": "https://api.github.com/users/mgacek8/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea15fb2177b0c33352363c130bc296a0dd1a794a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea15fb2177b0c33352363c130bc296a0dd1a794a", "html_url": "https://github.com/rust-lang/rust/commit/ea15fb2177b0c33352363c130bc296a0dd1a794a"}], "stats": {"total": 60, "additions": 29, "deletions": 31}, "files": [{"sha": "a6619f358920209e9cf23be524f6424c8d2033f2", "filename": "tests/ui/use_self.fixed", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/032cdfe043c5c9d00530dc18005066a184f3d46e/tests%2Fui%2Fuse_self.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/032cdfe043c5c9d00530dc18005066a184f3d46e/tests%2Fui%2Fuse_self.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.fixed?ref=032cdfe043c5c9d00530dc18005066a184f3d46e", "patch": "@@ -75,14 +75,13 @@ mod lifetimes {\n \n mod issue2894 {\n     trait IntoBytes {\n-        fn to_bytes(&self) -> Vec<u8>;\n+        fn to_bytes(self) -> Vec<u8>;\n     }\n \n     // This should not be linted\n-    #[allow(clippy::wrong_self_convention)]\n     impl IntoBytes for u8 {\n-        fn to_bytes(&self) -> Vec<u8> {\n-            vec![*self]\n+        fn to_bytes(self) -> Vec<u8> {\n+            vec![self]\n         }\n     }\n }"}, {"sha": "3c41ce500e0ddef1ba829ae9723674b32ade15c7", "filename": "tests/ui/use_self.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/032cdfe043c5c9d00530dc18005066a184f3d46e/tests%2Fui%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/032cdfe043c5c9d00530dc18005066a184f3d46e/tests%2Fui%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.rs?ref=032cdfe043c5c9d00530dc18005066a184f3d46e", "patch": "@@ -75,14 +75,13 @@ mod lifetimes {\n \n mod issue2894 {\n     trait IntoBytes {\n-        fn to_bytes(&self) -> Vec<u8>;\n+        fn to_bytes(self) -> Vec<u8>;\n     }\n \n     // This should not be linted\n-    #[allow(clippy::wrong_self_convention)]\n     impl IntoBytes for u8 {\n-        fn to_bytes(&self) -> Vec<u8> {\n-            vec![*self]\n+        fn to_bytes(self) -> Vec<u8> {\n+            vec![self]\n         }\n     }\n }"}, {"sha": "e1410d2e652c133008c402b6c337ace873d25439", "filename": "tests/ui/use_self.stderr", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/032cdfe043c5c9d00530dc18005066a184f3d46e/tests%2Fui%2Fuse_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/032cdfe043c5c9d00530dc18005066a184f3d46e/tests%2Fui%2Fuse_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.stderr?ref=032cdfe043c5c9d00530dc18005066a184f3d46e", "patch": "@@ -37,139 +37,139 @@ LL |             Foo::new()\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:94:24\n+  --> $DIR/use_self.rs:93:24\n    |\n LL |         fn bad(foos: &[Foo]) -> impl Iterator<Item = &Foo> {\n    |                        ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:94:55\n+  --> $DIR/use_self.rs:93:55\n    |\n LL |         fn bad(foos: &[Foo]) -> impl Iterator<Item = &Foo> {\n    |                                                       ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:109:13\n+  --> $DIR/use_self.rs:108:13\n    |\n LL |             TS(0)\n    |             ^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:144:29\n+  --> $DIR/use_self.rs:143:29\n    |\n LL |                 fn bar() -> Bar {\n    |                             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:145:21\n+  --> $DIR/use_self.rs:144:21\n    |\n LL |                     Bar { foo: Foo {} }\n    |                     ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:156:21\n+  --> $DIR/use_self.rs:155:21\n    |\n LL |         fn baz() -> Foo {\n    |                     ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:157:13\n+  --> $DIR/use_self.rs:156:13\n    |\n LL |             Foo {}\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:174:21\n+  --> $DIR/use_self.rs:173:21\n    |\n LL |             let _ = Enum::B(42);\n    |                     ^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:175:21\n+  --> $DIR/use_self.rs:174:21\n    |\n LL |             let _ = Enum::C { field: true };\n    |                     ^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:176:21\n+  --> $DIR/use_self.rs:175:21\n    |\n LL |             let _ = Enum::A;\n    |                     ^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:218:13\n+  --> $DIR/use_self.rs:217:13\n    |\n LL |             nested::A::fun_1();\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:219:13\n+  --> $DIR/use_self.rs:218:13\n    |\n LL |             nested::A::A;\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:221:13\n+  --> $DIR/use_self.rs:220:13\n    |\n LL |             nested::A {};\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:240:13\n+  --> $DIR/use_self.rs:239:13\n    |\n LL |             TestStruct::from_something()\n    |             ^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:254:25\n+  --> $DIR/use_self.rs:253:25\n    |\n LL |         async fn g() -> S {\n    |                         ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:255:13\n+  --> $DIR/use_self.rs:254:13\n    |\n LL |             S {}\n    |             ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:259:16\n+  --> $DIR/use_self.rs:258:16\n    |\n LL |             &p[S::A..S::B]\n    |                ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:259:22\n+  --> $DIR/use_self.rs:258:22\n    |\n LL |             &p[S::A..S::B]\n    |                      ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:282:29\n+  --> $DIR/use_self.rs:281:29\n    |\n LL |         fn foo(value: T) -> Foo<T> {\n    |                             ^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:283:13\n+  --> $DIR/use_self.rs:282:13\n    |\n LL |             Foo { value }\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:320:21\n+  --> $DIR/use_self.rs:319:21\n    |\n LL |         type From = T::From;\n    |                     ^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:321:19\n+  --> $DIR/use_self.rs:320:19\n    |\n LL |         type To = T::To;\n    |                   ^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:454:13\n+  --> $DIR/use_self.rs:453:13\n    |\n LL |             A::new::<submod::B>(submod::B {})\n    |             ^ help: use the applicable keyword: `Self`"}]}