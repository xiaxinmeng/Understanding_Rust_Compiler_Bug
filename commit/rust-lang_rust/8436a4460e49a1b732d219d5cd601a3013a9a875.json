{"sha": "8436a4460e49a1b732d219d5cd601a3013a9a875", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0MzZhNDQ2MGU0OWExYjczMmQyMTlkNWNkNjAxYTMwMTNhOWE4NzU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-01-09T17:26:40Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-01-09T17:26:59Z"}, "message": "core: try to fix arch- and platform-specific fallout from 2db3abd", "tree": {"sha": "4ef663574603e1a62e413b8239bd12bc3bb81f65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ef663574603e1a62e413b8239bd12bc3bb81f65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8436a4460e49a1b732d219d5cd601a3013a9a875", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8436a4460e49a1b732d219d5cd601a3013a9a875", "html_url": "https://github.com/rust-lang/rust/commit/8436a4460e49a1b732d219d5cd601a3013a9a875", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8436a4460e49a1b732d219d5cd601a3013a9a875/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aebbd6bb4690e5854e4f7f54f2d9672a67c845c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/aebbd6bb4690e5854e4f7f54f2d9672a67c845c8", "html_url": "https://github.com/rust-lang/rust/commit/aebbd6bb4690e5854e4f7f54f2d9672a67c845c8"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "0a58f66740c8481caa84b019c042dcac3b12c736", "filename": "src/libcore/libc.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8436a4460e49a1b732d219d5cd601a3013a9a875/src%2Flibcore%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8436a4460e49a1b732d219d5cd601a3013a9a875/src%2Flibcore%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flibc.rs?ref=8436a4460e49a1b732d219d5cd601a3013a9a875", "patch": "@@ -394,6 +394,12 @@ pub mod types {\n                 pub type ssize_t = i64;\n             }\n             pub mod posix01 {\n+                use libc::types::os::arch::c95::{c_long, time_t};\n+                use libc::types::os::arch::c99::{uint8_t, uint32_t, int32_t};\n+                use libc::types::os::arch::posix88::{dev_t, gid_t, ino_t};\n+                use libc::types::os::arch::posix88::{mode_t, off_t};\n+                use libc::types::os::arch::posix88::{uid_t};\n+\n                 pub type nlink_t = u16;\n                 pub type blksize_t = i64;\n                 pub type blkcnt_t = i64;\n@@ -436,6 +442,12 @@ pub mod types {\n     pub mod os {\n         pub mod common {\n             pub mod posix01 {\n+                use libc::types::os::arch::c95::{c_int, c_short};\n+                use libc::types::os::arch::c99::int64_t;\n+                use libc::types::os::arch::extra::time64_t;\n+                use libc::types::os::arch::posix88::{dev_t, gid_t, ino_t};\n+                use libc::types::os::arch::posix88::mode_t;\n+\n                 // Note: this is the struct called stat64 in win32. Not stat,\n                 // nor stati64.\n                 pub struct stat {\n@@ -576,6 +588,11 @@ pub mod types {\n                 pub type ssize_t = i32;\n             }\n             pub mod posix01 {\n+                use libc::types::os::arch::c95::{c_long, time_t};\n+                use libc::types::os::arch::c99::{uint32_t, int32_t, int64_t};\n+                use libc::types::os::arch::posix88::{dev_t, gid_t, ino_t,\n+                                                     mode_t, uid_t};\n+\n                 pub type nlink_t = u16;\n                 pub type blksize_t = i64;\n                 pub type blkcnt_t = i32;"}, {"sha": "84e5140d8edbc43399bbc9adb4aadc078447d1f4", "filename": "src/libcore/to_bytes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8436a4460e49a1b732d219d5cd601a3013a9a875/src%2Flibcore%2Fto_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8436a4460e49a1b732d219d5cd601a3013a9a875/src%2Flibcore%2Fto_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fto_bytes.rs?ref=8436a4460e49a1b732d219d5cd601a3013a9a875", "patch": "@@ -172,6 +172,8 @@ impl char: IterBytes {\n \n #[cfg(target_word_size = \"32\")]\n pub mod x32 {\n+    use to_bytes::{Cb, IterBytes};\n+\n     pub impl uint: IterBytes {\n         #[inline(always)]\n         pure fn iter_bytes(&self, lsb0: bool, f: Cb) {"}]}