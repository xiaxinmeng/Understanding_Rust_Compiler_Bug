{"sha": "abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZmM2ZGI0YzJiOWM5YzY4NmE1YzA5ZDU5ZTRjNTM0ZTVmNGYyZWM=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-03-06T21:48:52Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-03-06T21:50:39Z"}, "message": "rustc: Move mut slice check to `check_static`\n\nThis is a follow-up patch that moves the mut slice check to the recently\nadded `check_static`\n\nCloses #11411", "tree": {"sha": "ceb4a198fc81b100634848144a4a3e6ee1a096ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ceb4a198fc81b100634848144a4a3e6ee1a096ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec", "html_url": "https://github.com/rust-lang/rust/commit/abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b8d41d28a2a2918dd6f08c16034bc5ae07bee81", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81", "html_url": "https://github.com/rust-lang/rust/commit/8b8d41d28a2a2918dd6f08c16034bc5ae07bee81"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "3792887709f74cba4300b5a5e4ce69b6bdc6ef38", "filename": "src/librustc/middle/check_const.rs", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs?ref=abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec", "patch": "@@ -29,15 +29,14 @@ pub struct CheckCrateVisitor {\n \n impl Visitor<bool> for CheckCrateVisitor {\n     fn visit_item(&mut self, i: &Item, env: bool) {\n-        check_item(self, self.sess, self.def_map, self.method_map,\n-                   self.tcx, i, env)\n+        check_item(self, self.sess, self.def_map, i, env);\n     }\n     fn visit_pat(&mut self, p: &Pat, env: bool) {\n         check_pat(self, p, env);\n     }\n     fn visit_expr(&mut self, ex: &Expr, env: bool) {\n         check_expr(self, self.sess, self.def_map, self.method_map,\n-                   self.tcx, ex, env, false);\n+                   self.tcx, ex, env);\n     }\n }\n \n@@ -59,13 +58,11 @@ pub fn check_crate(sess: Session,\n pub fn check_item(v: &mut CheckCrateVisitor,\n                   sess: Session,\n                   def_map: resolve::DefMap,\n-                  method_map: typeck::method_map,\n-                  tcx: ty::ctxt,\n                   it: &Item,\n                   _is_const: bool) {\n     match it.node {\n-        ItemStatic(_, mut_, ex) => {\n-            check_expr(v, sess, def_map, method_map, tcx, ex, true, mut_ == MutMutable);\n+        ItemStatic(_, _, ex) => {\n+            v.visit_expr(ex, true);\n             check_item_recursion(sess, &v.tcx.map, def_map, it);\n         }\n         ItemEnum(ref enum_definition, _) => {\n@@ -108,8 +105,7 @@ pub fn check_expr(v: &mut CheckCrateVisitor,\n                   method_map: typeck::MethodMap,\n                   tcx: ty::ctxt,\n                   e: &Expr,\n-                  is_const: bool,\n-                  is_static_mut: bool) {\n+                  is_const: bool) {\n     if is_const {\n         match e.node {\n           ExprUnary(UnDeref, _) => { }\n@@ -177,6 +173,7 @@ pub fn check_expr(v: &mut CheckCrateVisitor,\n                 }\n             }\n           }\n+          ExprVstore(_, ExprVstoreMutSlice) |\n           ExprVstore(_, ExprVstoreSlice) |\n           ExprVec(_, MutImmutable) |\n           ExprAddrOf(MutImmutable, _) |\n@@ -191,11 +188,6 @@ pub fn check_expr(v: &mut CheckCrateVisitor,\n                     e.span,\n                     \"references in constants may only refer to \\\n                      immutable values\");\n-          }\n-          ExprVstore(_, ExprVstoreMutSlice) => {\n-              if !is_static_mut {\n-                  sess.span_err(e.span, \"mutable slice is not allowed in immutable constants\")\n-              }\n           },\n           ExprVstore(_, ExprVstoreUniq) => {\n               sess.span_err(e.span, \"cannot allocate vectors in constant expressions\")"}, {"sha": "62f9f512b5dd6d7e0507b43591d94e14fa2e895e", "filename": "src/librustc/middle/check_static.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec/src%2Flibrustc%2Fmiddle%2Fcheck_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec/src%2Flibrustc%2Fmiddle%2Fcheck_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_static.rs?ref=abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec", "patch": "@@ -108,6 +108,10 @@ impl Visitor<bool> for CheckStaticVisitor {\n             ast::ExprVstore(_, ast::ExprVstoreSlice) => {\n                 visit::walk_expr(self, e, is_const);\n             }\n+            ast::ExprVstore(_, ast::ExprVstoreMutSlice) => {\n+                self.tcx.sess.span_err(e.span,\n+                                       \"static items are not allowed to have mutable slices\");\n+           },\n             ast::ExprUnary(ast::UnBox, _) => {\n                 self.tcx.sess.span_err(e.span,\n                                    \"static items are not allowed to have managed pointers\");"}, {"sha": "5b011939c610cc106bc2b26b05ecaa1c7254a112", "filename": "src/librustc/middle/trans/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec", "patch": "@@ -574,7 +574,7 @@ fn const_expr_unadjusted(cx: @CrateContext, e: &ast::Expr,\n             (v, inlineable)\n           }\n           ast::ExprVstore(sub, store @ ast::ExprVstoreSlice) |\n-              ast::ExprVstore(sub, store @ ast::ExprVstoreMutSlice) => {\n+          ast::ExprVstore(sub, store @ ast::ExprVstoreMutSlice) => {\n             match sub.node {\n               ast::ExprLit(ref lit) => {\n                 match lit.node {"}, {"sha": "73ce488cbc6692a45e63c22ed4dba264d25424dc", "filename": "src/test/compile-fail/check-static-immutable-mut-slices.rs", "status": "renamed", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec/src%2Ftest%2Fcompile-fail%2Fcheck-static-immutable-mut-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec/src%2Ftest%2Fcompile-fail%2Fcheck-static-immutable-mut-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcheck-static-immutable-mut-slices.rs?ref=abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-static TEST: &'static mut [int] = &mut []; //~ ERROR mutable slice is not allowed\n+// Checks that immutable static items can't have mutable slices\n \n-fn main() { }\n+static TEST: &'static mut [int] = &mut [];\n+//~^ ERROR static items are not allowed to have mutable slices\n+\n+pub fn main() { }", "previous_filename": "src/test/compile-fail/issue-11411.rs"}, {"sha": "af25c43005dd4c2a7b9ca3428f39dacfc572ba3b", "filename": "src/test/run-pass/check-static-mut-slices.rs", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec/src%2Ftest%2Frun-pass%2Fcheck-static-mut-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec/src%2Ftest%2Frun-pass%2Fcheck-static-mut-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcheck-static-mut-slices.rs?ref=abfc6db4c2b9c9c686a5c09d59e4c534e5f4f2ec", "patch": "@@ -8,11 +8,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// Checks that mutable static items can have mutable slices\n \n static mut TEST: &'static mut [int] = &mut [1];\n \n pub fn main() {\n     unsafe {\n         TEST[0] += 1;\n+        assert_eq!(TEST[0], 2);\n     }\n }", "previous_filename": "src/test/run-pass/issue-11411.rs"}]}