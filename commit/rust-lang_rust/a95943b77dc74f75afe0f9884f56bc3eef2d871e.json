{"sha": "a95943b77dc74f75afe0f9884f56bc3eef2d871e", "node_id": "C_kwDOAAsO6NoAKGE5NTk0M2I3N2RjNzRmNzVhZmUwZjk4ODRmNTZiYzNlZWYyZDg3MWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-08T20:24:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-08T20:24:53Z"}, "message": "Rollup merge of #108887 - nnethercote:rename-MapInPlace, r=lqd\n\nRename `MapInPlace` as `FlatMapInPlace`.\n\nAfter removing the `map_in_place` method, which isn't much use because modifying every element in a collection such as a `Vec` can be done trivially with iteration.\n\nr? ``@lqd``", "tree": {"sha": "04ffa13c6264f0f0bab2a33bc12f5bb48ab0b38a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04ffa13c6264f0f0bab2a33bc12f5bb48ab0b38a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a95943b77dc74f75afe0f9884f56bc3eef2d871e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkCO8VCRBK7hj4Ov3rIwAAxg4IAE2Ws9P/7F38t6qh2Jxf89JS\nXZEM+kag5fnShA2nucZr8uhOikoVjeO+iUKImSnXWaX77xTFXFgDejcE1CQ3f57c\nLYU9kvt5ac7K010oMU7um8fClcb725WtcVprLvXRQQXldBFYbEx6rCKTRlc4BU5z\nv60s44jhuRDVoSMUonlKBmMevrpCZgGQ0G4ak9e/3pW9THJPOQi3M0NnTWOomFd/\nLXxWMHUuhj/bvbfuUN0jwFY2L/mBThE4U1hnIS2vqrSYa5EYK1+/UXtdMhH4N+da\n+GuiX/Sd/fYmD17CSkUaWNaLt4kBV8zjzhDY7PUHxc2/YPXOB2UFQV6SAEvIOes=\n=Gezz\n-----END PGP SIGNATURE-----\n", "payload": "tree 04ffa13c6264f0f0bab2a33bc12f5bb48ab0b38a\nparent 031b528052d97ef217748e4d0f0a6503426de229\nparent be60bcb28a4e4099e29aa8f6e9e3ca851193344b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678307093 +0100\ncommitter GitHub <noreply@github.com> 1678307093 +0100\n\nRollup merge of #108887 - nnethercote:rename-MapInPlace, r=lqd\n\nRename `MapInPlace` as `FlatMapInPlace`.\n\nAfter removing the `map_in_place` method, which isn't much use because modifying every element in a collection such as a `Vec` can be done trivially with iteration.\n\nr? ``@lqd``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a95943b77dc74f75afe0f9884f56bc3eef2d871e", "html_url": "https://github.com/rust-lang/rust/commit/a95943b77dc74f75afe0f9884f56bc3eef2d871e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a95943b77dc74f75afe0f9884f56bc3eef2d871e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "031b528052d97ef217748e4d0f0a6503426de229", "url": "https://api.github.com/repos/rust-lang/rust/commits/031b528052d97ef217748e4d0f0a6503426de229", "html_url": "https://github.com/rust-lang/rust/commit/031b528052d97ef217748e4d0f0a6503426de229"}, {"sha": "be60bcb28a4e4099e29aa8f6e9e3ca851193344b", "url": "https://api.github.com/repos/rust-lang/rust/commits/be60bcb28a4e4099e29aa8f6e9e3ca851193344b", "html_url": "https://github.com/rust-lang/rust/commit/be60bcb28a4e4099e29aa8f6e9e3ca851193344b"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "6fed0b660e86efe92c3bcd43b42ddd5ef16af8a3", "filename": "compiler/rustc_ast/src/mut_visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a95943b77dc74f75afe0f9884f56bc3eef2d871e/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a95943b77dc74f75afe0f9884f56bc3eef2d871e/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs?ref=a95943b77dc74f75afe0f9884f56bc3eef2d871e", "patch": "@@ -12,7 +12,7 @@ use crate::ptr::P;\n use crate::token::{self, Token};\n use crate::tokenstream::*;\n \n-use rustc_data_structures::map_in_place::MapInPlace;\n+use rustc_data_structures::flat_map_in_place::FlatMapInPlace;\n use rustc_data_structures::sync::Lrc;\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::Ident;"}, {"sha": "f58844f281794ba9ce48b089702036e83d340071", "filename": "compiler/rustc_data_structures/src/flat_map_in_place.rs", "status": "renamed", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a95943b77dc74f75afe0f9884f56bc3eef2d871e/compiler%2Frustc_data_structures%2Fsrc%2Fflat_map_in_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a95943b77dc74f75afe0f9884f56bc3eef2d871e/compiler%2Frustc_data_structures%2Fsrc%2Fflat_map_in_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fflat_map_in_place.rs?ref=a95943b77dc74f75afe0f9884f56bc3eef2d871e", "patch": "@@ -2,14 +2,7 @@ use smallvec::{Array, SmallVec};\n use std::ptr;\n use thin_vec::ThinVec;\n \n-pub trait MapInPlace<T>: Sized {\n-    fn map_in_place<F>(&mut self, mut f: F)\n-    where\n-        F: FnMut(T) -> T,\n-    {\n-        self.flat_map_in_place(|e| Some(f(e)))\n-    }\n-\n+pub trait FlatMapInPlace<T>: Sized {\n     fn flat_map_in_place<F, I>(&mut self, f: F)\n     where\n         F: FnMut(T) -> I,\n@@ -66,14 +59,14 @@ macro_rules! flat_map_in_place {\n     };\n }\n \n-impl<T> MapInPlace<T> for Vec<T> {\n+impl<T> FlatMapInPlace<T> for Vec<T> {\n     flat_map_in_place!();\n }\n \n-impl<T, A: Array<Item = T>> MapInPlace<T> for SmallVec<A> {\n+impl<T, A: Array<Item = T>> FlatMapInPlace<T> for SmallVec<A> {\n     flat_map_in_place!();\n }\n \n-impl<T> MapInPlace<T> for ThinVec<T> {\n+impl<T> FlatMapInPlace<T> for ThinVec<T> {\n     flat_map_in_place!();\n }", "previous_filename": "compiler/rustc_data_structures/src/map_in_place.rs"}, {"sha": "c595bf830a3dccca47e97455fb960f42394f16ce", "filename": "compiler/rustc_data_structures/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a95943b77dc74f75afe0f9884f56bc3eef2d871e/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a95943b77dc74f75afe0f9884f56bc3eef2d871e/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs?ref=a95943b77dc74f75afe0f9884f56bc3eef2d871e", "patch": "@@ -50,14 +50,14 @@ pub fn cold_path<F: FnOnce() -> R, R>(f: F) -> R {\n pub mod base_n;\n pub mod binary_search_util;\n pub mod captures;\n+pub mod flat_map_in_place;\n pub mod flock;\n pub mod functor;\n pub mod fx;\n pub mod graph;\n pub mod intern;\n pub mod jobserver;\n pub mod macros;\n-pub mod map_in_place;\n pub mod obligation_forest;\n pub mod owning_ref;\n pub mod sip128;"}, {"sha": "d6cb173ba9ba0fc1e2a09b0e470eeea2c61320c9", "filename": "compiler/rustc_expand/src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a95943b77dc74f75afe0f9884f56bc3eef2d871e/compiler%2Frustc_expand%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a95943b77dc74f75afe0f9884f56bc3eef2d871e/compiler%2Frustc_expand%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fconfig.rs?ref=a95943b77dc74f75afe0f9884f56bc3eef2d871e", "patch": "@@ -12,8 +12,8 @@ use rustc_ast::tokenstream::{LazyAttrTokenStream, TokenTree};\n use rustc_ast::NodeId;\n use rustc_ast::{self as ast, AttrStyle, Attribute, HasAttrs, HasTokens, MetaItem};\n use rustc_attr as attr;\n+use rustc_data_structures::flat_map_in_place::FlatMapInPlace;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::map_in_place::MapInPlace;\n use rustc_feature::{Feature, Features, State as FeatureState};\n use rustc_feature::{\n     ACCEPTED_FEATURES, ACTIVE_FEATURES, REMOVED_FEATURES, STABLE_REMOVED_FEATURES,"}, {"sha": "4092a192e0c34ad5385e87717129edb6df95b584", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a95943b77dc74f75afe0f9884f56bc3eef2d871e/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a95943b77dc74f75afe0f9884f56bc3eef2d871e/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=a95943b77dc74f75afe0f9884f56bc3eef2d871e", "patch": "@@ -20,7 +20,7 @@ use rustc_ast::{ForeignItemKind, HasAttrs, HasNodeId};\n use rustc_ast::{Inline, ItemKind, MacStmtStyle, MetaItemKind, ModKind};\n use rustc_ast::{NestedMetaItem, NodeId, PatKind, StmtKind, TyKind};\n use rustc_ast_pretty::pprust;\n-use rustc_data_structures::map_in_place::MapInPlace;\n+use rustc_data_structures::flat_map_in_place::FlatMapInPlace;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::PResult;\n use rustc_feature::Features;"}]}