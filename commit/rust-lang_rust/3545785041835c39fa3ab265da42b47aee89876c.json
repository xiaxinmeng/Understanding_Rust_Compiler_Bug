{"sha": "3545785041835c39fa3ab265da42b47aee89876c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1NDU3ODUwNDE4MzVjMzlmYTNhYjI2NWRhNDJiNDdhZWU4OTg3NmM=", "commit": {"author": {"name": "Eitan Adler", "email": "lists@eitanadler.com", "date": "2016-09-18T06:07:11Z"}, "committer": {"name": "Eitan Adler", "email": "lists@eitanadler.com", "date": "2016-09-18T06:07:11Z"}, "message": "Remove unused code", "tree": {"sha": "887cede1f4be8542247c2621aa758f66bca0720a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/887cede1f4be8542247c2621aa758f66bca0720a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3545785041835c39fa3ab265da42b47aee89876c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3545785041835c39fa3ab265da42b47aee89876c", "html_url": "https://github.com/rust-lang/rust/commit/3545785041835c39fa3ab265da42b47aee89876c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3545785041835c39fa3ab265da42b47aee89876c/comments", "author": {"login": "grimreaper", "id": 433817, "node_id": "MDQ6VXNlcjQzMzgxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/433817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grimreaper", "html_url": "https://github.com/grimreaper", "followers_url": "https://api.github.com/users/grimreaper/followers", "following_url": "https://api.github.com/users/grimreaper/following{/other_user}", "gists_url": "https://api.github.com/users/grimreaper/gists{/gist_id}", "starred_url": "https://api.github.com/users/grimreaper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grimreaper/subscriptions", "organizations_url": "https://api.github.com/users/grimreaper/orgs", "repos_url": "https://api.github.com/users/grimreaper/repos", "events_url": "https://api.github.com/users/grimreaper/events{/privacy}", "received_events_url": "https://api.github.com/users/grimreaper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "grimreaper", "id": 433817, "node_id": "MDQ6VXNlcjQzMzgxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/433817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grimreaper", "html_url": "https://github.com/grimreaper", "followers_url": "https://api.github.com/users/grimreaper/followers", "following_url": "https://api.github.com/users/grimreaper/following{/other_user}", "gists_url": "https://api.github.com/users/grimreaper/gists{/gist_id}", "starred_url": "https://api.github.com/users/grimreaper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grimreaper/subscriptions", "organizations_url": "https://api.github.com/users/grimreaper/orgs", "repos_url": "https://api.github.com/users/grimreaper/repos", "events_url": "https://api.github.com/users/grimreaper/events{/privacy}", "received_events_url": "https://api.github.com/users/grimreaper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a67298f20f65f4d53f741391a05b2bbd3ee9c0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a67298f20f65f4d53f741391a05b2bbd3ee9c0c", "html_url": "https://github.com/rust-lang/rust/commit/1a67298f20f65f4d53f741391a05b2bbd3ee9c0c"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "bc141877b373f49b0c19b5977b2e25ada528fc45", "filename": "src/etc/test-float-parse/runtests.py", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3545785041835c39fa3ab265da42b47aee89876c/src%2Fetc%2Ftest-float-parse%2Fruntests.py", "raw_url": "https://github.com/rust-lang/rust/raw/3545785041835c39fa3ab265da42b47aee89876c/src%2Fetc%2Ftest-float-parse%2Fruntests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftest-float-parse%2Fruntests.py?ref=3545785041835c39fa3ab265da42b47aee89876c", "patch": "@@ -177,15 +177,13 @@ def run(test):\n \n \n def interact(proc, queue):\n-    line = \"\"\n     n = 0\n     while proc.poll() is None:\n         line = proc.stdout.readline()\n         if not line:\n             continue\n         assert line.endswith('\\n'), \"incomplete line: \" + repr(line)\n         queue.put(line)\n-        line = \"\"\n         n += 1\n         if n % UPDATE_EVERY_N == 0:\n             msg(\"got\", str(n // 1000) + \"k\", \"records\")"}]}