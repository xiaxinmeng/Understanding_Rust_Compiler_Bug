{"sha": "451e86c36e3b5222cf1138c083b098ca8aed693a", "node_id": "C_kwDOAAsO6NoAKDQ1MWU4NmMzNmUzYjUyMjJjZjExMzhjMDgzYjA5OGNhOGFlZDY5M2E", "commit": {"author": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2023-04-25T18:07:51Z"}, "committer": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2023-04-25T18:07:51Z"}, "message": "simplify TrustedLen impls\n\nImplement on FlattenCompat and delegate from Flatten and FlatMap.", "tree": {"sha": "fd4a8f65a065a209d74be46ee4ff2dfca29ed856", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd4a8f65a065a209d74be46ee4ff2dfca29ed856"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/451e86c36e3b5222cf1138c083b098ca8aed693a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgtYz36g7iDMSkY5K7Ab51ksGX7h\nJgsMRt+XVZTrIzMVIAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQAIcd3eeFjQmBBEUmQyOPQspiIUTuOU+xgE5ddD+QYDH5OSWnBApaXQcGnBceLxLve\n4cigkHgeHkQA2eQDB5cgM=\n-----END SSH SIGNATURE-----", "payload": "tree fd4a8f65a065a209d74be46ee4ff2dfca29ed856\nparent a7aa20517c80161a2ffe7c0c25fc2e0140c43c90\nauthor Tamir Duberstein <tamird@gmail.com> 1682446071 -0400\ncommitter Tamir Duberstein <tamird@gmail.com> 1682446071 -0400\n\nsimplify TrustedLen impls\n\nImplement on FlattenCompat and delegate from Flatten and FlatMap.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/451e86c36e3b5222cf1138c083b098ca8aed693a", "html_url": "https://github.com/rust-lang/rust/commit/451e86c36e3b5222cf1138c083b098ca8aed693a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/451e86c36e3b5222cf1138c083b098ca8aed693a/comments", "author": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7aa20517c80161a2ffe7c0c25fc2e0140c43c90", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7aa20517c80161a2ffe7c0c25fc2e0140c43c90", "html_url": "https://github.com/rust-lang/rust/commit/a7aa20517c80161a2ffe7c0c25fc2e0140c43c90"}], "stats": {"total": 62, "additions": 28, "deletions": 34}, "files": [{"sha": "7217e8f2a8ef694d73ef9901836896f66b23a85c", "filename": "library/core/src/iter/adapters/flatten.rs", "status": "modified", "additions": 28, "deletions": 34, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/451e86c36e3b5222cf1138c083b098ca8aed693a/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/451e86c36e3b5222cf1138c083b098ca8aed693a/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs?ref=451e86c36e3b5222cf1138c083b098ca8aed693a", "patch": "@@ -136,26 +136,12 @@ where\n }\n \n #[unstable(feature = \"trusted_len\", issue = \"37572\")]\n-unsafe impl<T, I, F, const N: usize> TrustedLen for FlatMap<I, [T; N], F>\n+unsafe impl<I, U, F> TrustedLen for FlatMap<I, U, F>\n where\n-    I: TrustedLen,\n-    F: FnMut(I::Item) -> [T; N],\n-{\n-}\n-\n-#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n-unsafe impl<'a, T, I, F, const N: usize> TrustedLen for FlatMap<I, &'a [T; N], F>\n-where\n-    I: TrustedLen,\n-    F: FnMut(I::Item) -> &'a [T; N],\n-{\n-}\n-\n-#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n-unsafe impl<'a, T, I, F, const N: usize> TrustedLen for FlatMap<I, &'a mut [T; N], F>\n-where\n-    I: TrustedLen,\n-    F: FnMut(I::Item) -> &'a mut [T; N],\n+    I: Iterator,\n+    U: IntoIterator,\n+    F: FnMut(I::Item) -> U,\n+    FlattenCompat<Map<I, F>, <U as IntoIterator>::IntoIter>: TrustedLen,\n {\n }\n \n@@ -298,8 +284,8 @@ where\n #[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<I> TrustedLen for Flatten<I>\n where\n-    I: TrustedLen,\n-    <I as Iterator>::Item: TrustedConstSize,\n+    I: Iterator<Item: IntoIterator>,\n+    FlattenCompat<I, <I::Item as IntoIterator>::IntoIter>: TrustedLen,\n {\n }\n \n@@ -660,6 +646,27 @@ where\n     }\n }\n \n+unsafe impl<const N: usize, I, T> TrustedLen\n+    for FlattenCompat<I, <[T; N] as IntoIterator>::IntoIter>\n+where\n+    I: TrustedLen<Item = [T; N]>,\n+{\n+}\n+\n+unsafe impl<'a, const N: usize, I, T> TrustedLen\n+    for FlattenCompat<I, <&'a [T; N] as IntoIterator>::IntoIter>\n+where\n+    I: TrustedLen<Item = &'a [T; N]>,\n+{\n+}\n+\n+unsafe impl<'a, const N: usize, I, T> TrustedLen\n+    for FlattenCompat<I, <&'a mut [T; N] as IntoIterator>::IntoIter>\n+where\n+    I: TrustedLen<Item = &'a mut [T; N]>,\n+{\n+}\n+\n trait ConstSizeIntoIterator: IntoIterator {\n     // FIXME(#31844): convert to an associated const once specialization supports that\n     fn size() -> Option<usize>;\n@@ -696,19 +703,6 @@ impl<T, const N: usize> ConstSizeIntoIterator for &mut [T; N] {\n     }\n }\n \n-#[doc(hidden)]\n-#[unstable(feature = \"std_internals\", issue = \"none\")]\n-// FIXME(#20400): Instead of this helper trait there should be multiple impl TrustedLen for Flatten<>\n-//   blocks with different bounds on Iterator::Item but the compiler erroneously considers them overlapping\n-pub unsafe trait TrustedConstSize: IntoIterator {}\n-\n-#[unstable(feature = \"std_internals\", issue = \"none\")]\n-unsafe impl<T, const N: usize> TrustedConstSize for [T; N] {}\n-#[unstable(feature = \"std_internals\", issue = \"none\")]\n-unsafe impl<T, const N: usize> TrustedConstSize for &'_ [T; N] {}\n-#[unstable(feature = \"std_internals\", issue = \"none\")]\n-unsafe impl<T, const N: usize> TrustedConstSize for &'_ mut [T; N] {}\n-\n #[inline]\n fn and_then_or_clear<T, U>(opt: &mut Option<T>, f: impl FnOnce(&mut T) -> Option<U>) -> Option<U> {\n     let x = f(opt.as_mut()?);"}]}