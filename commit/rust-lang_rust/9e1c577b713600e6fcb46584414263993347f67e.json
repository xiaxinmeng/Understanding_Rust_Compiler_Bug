{"sha": "9e1c577b713600e6fcb46584414263993347f67e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMWM1NzdiNzEzNjAwZTZmY2I0NjU4NDQxNDI2Mzk5MzM0N2Y2N2U=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2017-09-23T19:40:18Z"}, "committer": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2017-10-13T20:26:13Z"}, "message": "rustdoc: don't create directories more than once", "tree": {"sha": "80293903d71bd977070fa56af08d37d81d29329d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80293903d71bd977070fa56af08d37d81d29329d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e1c577b713600e6fcb46584414263993347f67e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e1c577b713600e6fcb46584414263993347f67e", "html_url": "https://github.com/rust-lang/rust/commit/9e1c577b713600e6fcb46584414263993347f67e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e1c577b713600e6fcb46584414263993347f67e/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "url": "https://api.github.com/repos/rust-lang/rust/commits/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "html_url": "https://github.com/rust-lang/rust/commit/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "ad671e37e69edb022d4ee919b35931777a9325ae", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9e1c577b713600e6fcb46584414263993347f67e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e1c577b713600e6fcb46584414263993347f67e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=9e1c577b713600e6fcb46584414263993347f67e", "patch": "@@ -125,6 +125,21 @@ pub struct SharedContext {\n     /// Warnings for the user if rendering would differ using different markdown\n     /// parsers.\n     pub markdown_warnings: RefCell<Vec<(Span, String, Vec<html_diff::Difference>)>>,\n+    /// The directories that have already been created in this doc run. Used to reduce the number\n+    /// of spurious `create_dir_all` calls.\n+    pub created_dirs: RefCell<FxHashSet<PathBuf>>,\n+}\n+\n+impl SharedContext {\n+    fn ensure_dir(&self, dst: &Path) -> io::Result<()> {\n+        let mut dirs = self.created_dirs.borrow_mut();\n+        if !dirs.contains(dst) {\n+            fs::create_dir_all(dst)?;\n+            dirs.insert(dst.to_path_buf());\n+        }\n+\n+        Ok(())\n+    }\n }\n \n /// Indicates where an external crate can be found.\n@@ -460,6 +475,7 @@ pub fn run(mut krate: clean::Crate,\n         },\n         css_file_extension: css_file_extension.clone(),\n         markdown_warnings: RefCell::new(vec![]),\n+        created_dirs: RefCell::new(FxHashSet()),\n     };\n \n     // If user passed in `--playground-url` arg, we fill in crate name here\n@@ -790,7 +806,6 @@ fn write_shared(cx: &Context,\n     // Write out the shared files. Note that these are shared among all rustdoc\n     // docs placed in the output directory, so this needs to be a synchronized\n     // operation with respect to all other rustdocs running around.\n-    try_err!(fs::create_dir_all(&cx.dst), &cx.dst);\n     let _lock = flock::Lock::panicking_new(&cx.dst.join(\".lock\"), true, true, true);\n \n     // Add all the static files. These may already exist, but we just\n@@ -1503,8 +1518,8 @@ impl Context {\n                 this.render_item(&mut buf, &item, false).unwrap();\n                 // buf will be empty if the module is stripped and there is no redirect for it\n                 if !buf.is_empty() {\n+                    try_err!(this.shared.ensure_dir(&this.dst), &this.dst);\n                     let joint_dst = this.dst.join(\"index.html\");\n-                    try_err!(fs::create_dir_all(&this.dst), &this.dst);\n                     let mut dst = try_err!(File::create(&joint_dst), &joint_dst);\n                     try_err!(dst.write_all(&buf), &joint_dst);\n                 }\n@@ -1538,8 +1553,8 @@ impl Context {\n                 let name = item.name.as_ref().unwrap();\n                 let item_type = item.type_();\n                 let file_name = &item_path(item_type, name);\n+                try_err!(self.shared.ensure_dir(&self.dst), &self.dst);\n                 let joint_dst = self.dst.join(file_name);\n-                try_err!(fs::create_dir_all(&self.dst), &self.dst);\n                 let mut dst = try_err!(File::create(&joint_dst), &joint_dst);\n                 try_err!(dst.write_all(&buf), &joint_dst);\n "}]}