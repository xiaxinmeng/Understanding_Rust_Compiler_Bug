{"sha": "ffb067640b7701da8a7cdecb610ff737262c141c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmYjA2NzY0MGI3NzAxZGE4YTdjZGVjYjYxMGZmNzM3MjYyYzE0MWM=", "commit": {"author": {"name": "Damian Gryski", "email": "damian@gryski.com", "date": "2012-07-26T21:50:20Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-07-27T00:05:13Z"}, "message": "diagnostic: only print color if output is for the screen", "tree": {"sha": "f9a095c5b9285defa531f09bcd7dbb75199c75ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9a095c5b9285defa531f09bcd7dbb75199c75ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffb067640b7701da8a7cdecb610ff737262c141c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffb067640b7701da8a7cdecb610ff737262c141c", "html_url": "https://github.com/rust-lang/rust/commit/ffb067640b7701da8a7cdecb610ff737262c141c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffb067640b7701da8a7cdecb610ff737262c141c/comments", "author": {"login": "dgryski", "id": 970862, "node_id": "MDQ6VXNlcjk3MDg2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/970862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgryski", "html_url": "https://github.com/dgryski", "followers_url": "https://api.github.com/users/dgryski/followers", "following_url": "https://api.github.com/users/dgryski/following{/other_user}", "gists_url": "https://api.github.com/users/dgryski/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgryski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgryski/subscriptions", "organizations_url": "https://api.github.com/users/dgryski/orgs", "repos_url": "https://api.github.com/users/dgryski/repos", "events_url": "https://api.github.com/users/dgryski/events{/privacy}", "received_events_url": "https://api.github.com/users/dgryski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdd052f6ea1fb268a25e467147643344ec9a6b8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdd052f6ea1fb268a25e467147643344ec9a6b8c", "html_url": "https://github.com/rust-lang/rust/commit/cdd052f6ea1fb268a25e467147643344ec9a6b8c"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "6178dfb616e5ab448d9c0b89a6ccd9af35d35e55", "filename": "src/libsyntax/diagnostic.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ffb067640b7701da8a7cdecb610ff737262c141c/src%2Flibsyntax%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffb067640b7701da8a7cdecb610ff737262c141c/src%2Flibsyntax%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic.rs?ref=ffb067640b7701da8a7cdecb610ff737262c141c", "patch": "@@ -163,14 +163,16 @@ fn diagnosticcolor(lvl: level) -> u8 {\n }\n \n fn print_diagnostic(topic: ~str, lvl: level, msg: ~str) {\n+    let use_color = term::color_supported() &&\n+        io::stderr().get_type() == io::screen;\n     if str::is_not_empty(topic) {\n         io::stderr().write_str(#fmt[\"%s \", topic]);\n     }\n-    if term::color_supported() {\n+    if use_color {\n         term::fg(io::stderr(), diagnosticcolor(lvl));\n     }\n     io::stderr().write_str(#fmt[\"%s:\", diagnosticstr(lvl)]);\n-    if term::color_supported() {\n+    if use_color {\n         term::reset(io::stderr());\n     }\n     io::stderr().write_str(#fmt[\" %s\\n\", msg]);"}]}