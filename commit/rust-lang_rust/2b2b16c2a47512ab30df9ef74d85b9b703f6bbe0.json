{"sha": "2b2b16c2a47512ab30df9ef74d85b9b703f6bbe0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMmIxNmMyYTQ3NTEyYWIzMGRmOWVmNzRkODViOWI3MDNmNmJiZTA=", "commit": {"author": {"name": "Matthew Kraai", "email": "kraai@ftbfs.org", "date": "2019-12-06T17:09:56Z"}, "committer": {"name": "Matthew Kraai", "email": "kraai@ftbfs.org", "date": "2019-12-08T02:23:21Z"}, "message": "Simplify `Layout::extend_packed`", "tree": {"sha": "6a1a9acd269e9d662a5cd161dbbf55629d90349d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a1a9acd269e9d662a5cd161dbbf55629d90349d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b2b16c2a47512ab30df9ef74d85b9b703f6bbe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b2b16c2a47512ab30df9ef74d85b9b703f6bbe0", "html_url": "https://github.com/rust-lang/rust/commit/2b2b16c2a47512ab30df9ef74d85b9b703f6bbe0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b2b16c2a47512ab30df9ef74d85b9b703f6bbe0/comments", "author": {"login": "kraai", "id": 552646, "node_id": "MDQ6VXNlcjU1MjY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/552646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraai", "html_url": "https://github.com/kraai", "followers_url": "https://api.github.com/users/kraai/followers", "following_url": "https://api.github.com/users/kraai/following{/other_user}", "gists_url": "https://api.github.com/users/kraai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraai/subscriptions", "organizations_url": "https://api.github.com/users/kraai/orgs", "repos_url": "https://api.github.com/users/kraai/repos", "events_url": "https://api.github.com/users/kraai/events{/privacy}", "received_events_url": "https://api.github.com/users/kraai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kraai", "id": 552646, "node_id": "MDQ6VXNlcjU1MjY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/552646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraai", "html_url": "https://github.com/kraai", "followers_url": "https://api.github.com/users/kraai/followers", "following_url": "https://api.github.com/users/kraai/following{/other_user}", "gists_url": "https://api.github.com/users/kraai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraai/subscriptions", "organizations_url": "https://api.github.com/users/kraai/orgs", "repos_url": "https://api.github.com/users/kraai/repos", "events_url": "https://api.github.com/users/kraai/events{/privacy}", "received_events_url": "https://api.github.com/users/kraai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de17464b14e503edca6625daa9cd4c338ffafee2", "url": "https://api.github.com/repos/rust-lang/rust/commits/de17464b14e503edca6625daa9cd4c338ffafee2", "html_url": "https://github.com/rust-lang/rust/commit/de17464b14e503edca6625daa9cd4c338ffafee2"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "d8e9fe5fbe2f714d63814ede34e1f7bcba302388", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2b2b16c2a47512ab30df9ef74d85b9b703f6bbe0/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b2b16c2a47512ab30df9ef74d85b9b703f6bbe0/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=2b2b16c2a47512ab30df9ef74d85b9b703f6bbe0", "patch": "@@ -310,8 +310,7 @@ impl Layout {\n     pub fn extend_packed(&self, next: Self) -> Result<Self, LayoutErr> {\n         let new_size = self.size().checked_add(next.size())\n             .ok_or(LayoutErr { private: () })?;\n-        let layout = Layout::from_size_align(new_size, self.align())?;\n-        Ok(layout)\n+        Layout::from_size_align(new_size, self.align())\n     }\n \n     /// Creates a layout describing the record for a `[T; n]`."}]}