{"sha": "51709fcedcc264056587ece3759b3b591c268d0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNzA5ZmNlZGNjMjY0MDU2NTg3ZWNlMzc1OWIzYjU5MWMyNjhkMGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-18T01:01:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-18T01:01:22Z"}, "message": "auto merge of #9916 : alexcrichton/rust/issue-9861, r=brson\n\nThis was just incorrectly handled before, the path component shouldn't be looked\r\nat at all (we used absolute paths everywhere instead of relative to the current\r\nmodule location).\r\n\r\nCloses #9861", "tree": {"sha": "d5a2ed6385c36ecb8e69c17998b014a0c31ec6fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5a2ed6385c36ecb8e69c17998b014a0c31ec6fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51709fcedcc264056587ece3759b3b591c268d0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51709fcedcc264056587ece3759b3b591c268d0e", "html_url": "https://github.com/rust-lang/rust/commit/51709fcedcc264056587ece3759b3b591c268d0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51709fcedcc264056587ece3759b3b591c268d0e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "532ab94c4b5e1f111cbf75d4aa20c78a88759b2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/532ab94c4b5e1f111cbf75d4aa20c78a88759b2e", "html_url": "https://github.com/rust-lang/rust/commit/532ab94c4b5e1f111cbf75d4aa20c78a88759b2e"}, {"sha": "cf844abced94b74913985c7cffb6bd0b9a9b3445", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf844abced94b74913985c7cffb6bd0b9a9b3445", "html_url": "https://github.com/rust-lang/rust/commit/cf844abced94b74913985c7cffb6bd0b9a9b3445"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "9ff450d4135ff839d59015a49b3ec7e394d558e5", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/51709fcedcc264056587ece3759b3b591c268d0e/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51709fcedcc264056587ece3759b3b591c268d0e/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=51709fcedcc264056587ece3759b3b591c268d0e", "patch": "@@ -115,12 +115,7 @@ impl fmt::Default for clean::Path {\n fn resolved_path(w: &mut io::Writer, id: ast::NodeId, p: &clean::Path,\n                  print_all: bool) {\n     path(w, p, print_all,\n-        |_cache, loc| {\n-            match p.segments[0].name.as_slice() {\n-                \"super\" => Some(\"../\".repeat(loc.len() - 1)),\n-                _ => Some(\"../\".repeat(loc.len())),\n-            }\n-        },\n+        |_cache, loc| { Some(\"../\".repeat(loc.len())) },\n         |cache| {\n             match cache.paths.find(&id) {\n                 None => None,"}, {"sha": "b81a622fcda6783390fa361ef7f9b242bb274623", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/51709fcedcc264056587ece3759b3b591c268d0e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51709fcedcc264056587ece3759b3b591c268d0e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=51709fcedcc264056587ece3759b3b591c268d0e", "patch": "@@ -44,6 +44,7 @@ use std::rt::io::file::{FileInfo, DirectoryInfo};\n use std::rt::io::file;\n use std::rt::io;\n use std::rt::io::Reader;\n+use std::os;\n use std::str;\n use std::task;\n use std::unstable::finally::Finally;\n@@ -686,7 +687,15 @@ impl Context {\n             Process(Context, clean::Item),\n         }\n         enum Progress { JobNew, JobDone }\n-        static WORKERS: int = 10;\n+\n+        let workers = match os::getenv(\"RUSTDOC_WORKERS\") {\n+            Some(s) => {\n+                match from_str::<uint>(s) {\n+                    Some(n) => n, None => fail2!(\"{} not a number\", s)\n+                }\n+            }\n+            None => 10,\n+        };\n \n         let mut item = match crate.module.take() {\n             Some(i) => i,\n@@ -706,7 +715,7 @@ impl Context {\n         // using the same channel/port. Through this, the crate is recursed on\n         // in a hierarchical fashion, and parallelization is only achieved if\n         // one node in the hierarchy has more than one child (very common).\n-        for i in range(0, WORKERS) {\n+        for i in range(0, workers) {\n             let port = port.clone();\n             let chan = chan.clone();\n             let prog_chan = prog_chan.clone();\n@@ -761,7 +770,7 @@ impl Context {\n             if jobs == 0 { break }\n         }\n \n-        for _ in range(0, WORKERS) {\n+        for _ in range(0, workers) {\n             chan.send(Die);\n         }\n     }"}]}