{"sha": "4ffe3bdf992d2d9eebca9efc3fb3a240724a9fb3", "node_id": "C_kwDOAAsO6NoAKDRmZmUzYmRmOTkyZDJkOWVlYmNhOWVmYzNmYjNhMjQwNzI0YTlmYjM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-13T10:49:30Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-14T15:36:39Z"}, "message": "Remove one more usage of `mk_substs_trait`", "tree": {"sha": "75cb4774d6c9bdb050ee4ac2d64d59c5884b6883", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75cb4774d6c9bdb050ee4ac2d64d59c5884b6883"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ffe3bdf992d2d9eebca9efc3fb3a240724a9fb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ffe3bdf992d2d9eebca9efc3fb3a240724a9fb3", "html_url": "https://github.com/rust-lang/rust/commit/4ffe3bdf992d2d9eebca9efc3fb3a240724a9fb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ffe3bdf992d2d9eebca9efc3fb3a240724a9fb3/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bf80249aee145d9087820dcde0cb49a5a25b57c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bf80249aee145d9087820dcde0cb49a5a25b57c", "html_url": "https://github.com/rust-lang/rust/commit/1bf80249aee145d9087820dcde0cb49a5a25b57c"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "3bc331e19c1ccddb0e8ee8b7f5cb282f3ad934cc", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ffe3bdf992d2d9eebca9efc3fb3a240724a9fb3/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffe3bdf992d2d9eebca9efc3fb3a240724a9fb3/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=4ffe3bdf992d2d9eebca9efc3fb3a240724a9fb3", "patch": "@@ -1847,7 +1847,7 @@ impl<'tcx> Operand<'tcx> {\n     pub fn function_handle(\n         tcx: TyCtxt<'tcx>,\n         def_id: DefId,\n-        substs: SubstsRef<'tcx>,\n+        substs: impl IntoIterator<Item = GenericArg<'tcx>>,\n         span: Span,\n     ) -> Self {\n         let ty = tcx.mk_fn_def(def_id, substs);"}, {"sha": "c7b3eb44dc5fb52318b716a2d1c53ce3ae483b10", "filename": "compiler/rustc_mir_build/src/build/expr/as_rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ffe3bdf992d2d9eebca9efc3fb3a240724a9fb3/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffe3bdf992d2d9eebca9efc3fb3a240724a9fb3/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=4ffe3bdf992d2d9eebca9efc3fb3a240724a9fb3", "patch": "@@ -142,7 +142,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                 let exchange_malloc = Operand::function_handle(\n                     tcx,\n                     tcx.require_lang_item(LangItem::ExchangeMalloc, Some(expr_span)),\n-                    ty::List::empty(),\n+                    [],\n                     expr_span,\n                 );\n                 let storage = this.temp(tcx.mk_mut_ptr(tcx.types.u8), expr_span);"}, {"sha": "7836ae2e7b76f9959107eceb12875c9da02fdd63", "filename": "compiler/rustc_mir_dataflow/src/elaborate_drops.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4ffe3bdf992d2d9eebca9efc3fb3a240724a9fb3/compiler%2Frustc_mir_dataflow%2Fsrc%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffe3bdf992d2d9eebca9efc3fb3a240724a9fb3/compiler%2Frustc_mir_dataflow%2Fsrc%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Felaborate_drops.rs?ref=4ffe3bdf992d2d9eebca9efc3fb3a240724a9fb3", "patch": "@@ -614,7 +614,6 @@ where\n         let drop_trait = tcx.require_lang_item(LangItem::Drop, None);\n         let drop_fn = tcx.associated_item_def_ids(drop_trait)[0];\n         let ty = self.place_ty(self.place);\n-        let substs = tcx.mk_substs_trait(ty, []);\n \n         let ref_ty =\n             tcx.mk_ref(tcx.lifetimes.re_erased, ty::TypeAndMut { ty, mutbl: hir::Mutability::Mut });\n@@ -632,7 +631,12 @@ where\n             )],\n             terminator: Some(Terminator {\n                 kind: TerminatorKind::Call {\n-                    func: Operand::function_handle(tcx, drop_fn, substs, self.source_info.span),\n+                    func: Operand::function_handle(\n+                        tcx,\n+                        drop_fn,\n+                        [ty.into()],\n+                        self.source_info.span,\n+                    ),\n                     args: vec![Operand::Move(Place::from(ref_place))],\n                     destination: unit_temp,\n                     target: Some(succ),"}]}