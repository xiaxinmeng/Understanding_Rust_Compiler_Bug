{"sha": "f9e06e6524c6c2da43e42aa47520c9fb3c34d1cd", "node_id": "C_kwDOAAsO6NoAKGY5ZTA2ZTY1MjRjNmMyZGE0M2U0MmFhNDc1MjBjOWZiM2MzNGQxY2Q", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-27T18:41:34Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-28T14:00:55Z"}, "message": "last use of parse api in ssr", "tree": {"sha": "2417a4edb7ec16c53264108845f2a84c82057236", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2417a4edb7ec16c53264108845f2a84c82057236"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9e06e6524c6c2da43e42aa47520c9fb3c34d1cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9e06e6524c6c2da43e42aa47520c9fb3c34d1cd", "html_url": "https://github.com/rust-lang/rust/commit/f9e06e6524c6c2da43e42aa47520c9fb3c34d1cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9e06e6524c6c2da43e42aa47520c9fb3c34d1cd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45bba40079f85471414b4cd55b42a81d67df8b5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/45bba40079f85471414b4cd55b42a81d67df8b5f", "html_url": "https://github.com/rust-lang/rust/commit/45bba40079f85471414b4cd55b42a81d67df8b5f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6d21bad1eb3804951ebd8b9dc4267e1d2a2ded2b", "filename": "crates/ide_ssr/src/replacing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9e06e6524c6c2da43e42aa47520c9fb3c34d1cd/crates%2Fide_ssr%2Fsrc%2Freplacing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9e06e6524c6c2da43e42aa47520c9fb3c34d1cd/crates%2Fide_ssr%2Fsrc%2Freplacing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_ssr%2Fsrc%2Freplacing.rs?ref=f9e06e6524c6c2da43e42aa47520c9fb3c34d1cd", "patch": "@@ -226,8 +226,8 @@ fn token_is_method_call_receiver(token: &SyntaxToken) -> bool {\n \n fn parse_as_kind(code: &str, kind: SyntaxKind) -> Option<SyntaxNode> {\n     if ast::Expr::can_cast(kind) {\n-        if let Ok(expr) = ast::Expr::parse(code) {\n-            return Some(expr.syntax().clone());\n+        if let Ok(expr) = fragments::expr(code) {\n+            return Some(expr);\n         }\n     }\n     if ast::Item::can_cast(kind) {"}]}