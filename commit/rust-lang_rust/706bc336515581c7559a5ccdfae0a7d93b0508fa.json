{"sha": "706bc336515581c7559a5ccdfae0a7d93b0508fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNmJjMzM2NTE1NTgxYzc1NTlhNWNjZGZhZTBhN2Q5M2IwNTA4ZmE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-01T11:29:57Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-01T19:48:58Z"}, "message": "Use the right span for errors about #[deprecated] attributes.", "tree": {"sha": "6f2e516a4fc3a172dc78e87c67771aea30a913ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f2e516a4fc3a172dc78e87c67771aea30a913ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/706bc336515581c7559a5ccdfae0a7d93b0508fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/706bc336515581c7559a5ccdfae0a7d93b0508fa", "html_url": "https://github.com/rust-lang/rust/commit/706bc336515581c7559a5ccdfae0a7d93b0508fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/706bc336515581c7559a5ccdfae0a7d93b0508fa/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e2337a5d683c04004226502d2243ceb89cf4c22", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e2337a5d683c04004226502d2243ceb89cf4c22", "html_url": "https://github.com/rust-lang/rust/commit/0e2337a5d683c04004226502d2243ceb89cf4c22"}], "stats": {"total": 88, "additions": 53, "deletions": 35}, "files": [{"sha": "49ac97d833f9af84ea6ab260f7d5c075828a5e7b", "filename": "compiler/rustc_attr/src/builtin.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/706bc336515581c7559a5ccdfae0a7d93b0508fa/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/706bc336515581c7559a5ccdfae0a7d93b0508fa/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs?ref=706bc336515581c7559a5ccdfae0a7d93b0508fa", "patch": "@@ -637,19 +637,15 @@ pub struct Deprecation {\n }\n \n /// Finds the deprecation attribute. `None` if none exists.\n-pub fn find_deprecation(sess: &Session, attrs: &[Attribute], item_sp: Span) -> Option<Deprecation> {\n-    find_deprecation_generic(sess, attrs.iter(), item_sp)\n+pub fn find_deprecation(sess: &Session, attrs: &[Attribute]) -> Option<(Deprecation, Span)> {\n+    find_deprecation_generic(sess, attrs.iter())\n }\n \n-fn find_deprecation_generic<'a, I>(\n-    sess: &Session,\n-    attrs_iter: I,\n-    item_sp: Span,\n-) -> Option<Deprecation>\n+fn find_deprecation_generic<'a, I>(sess: &Session, attrs_iter: I) -> Option<(Deprecation, Span)>\n where\n     I: Iterator<Item = &'a Attribute>,\n {\n-    let mut depr: Option<Deprecation> = None;\n+    let mut depr: Option<(Deprecation, Span)> = None;\n     let diagnostic = &sess.parse_sess.span_diagnostic;\n \n     'outer: for attr in attrs_iter {\n@@ -658,8 +654,10 @@ where\n             continue;\n         }\n \n-        if depr.is_some() {\n-            struct_span_err!(diagnostic, item_sp, E0550, \"multiple deprecated attributes\").emit();\n+        if let Some((_, span)) = &depr {\n+            struct_span_err!(diagnostic, attr.span, E0550, \"multiple deprecated attributes\")\n+                .span_note(*span, \"first deprecation attribute here\")\n+                .emit();\n             break;\n         }\n \n@@ -780,7 +778,7 @@ where\n         sess.mark_attr_used(&attr);\n \n         let is_since_rustc_version = sess.check_name(attr, sym::rustc_deprecated);\n-        depr = Some(Deprecation { since, note, suggestion, is_since_rustc_version });\n+        depr = Some((Deprecation { since, note, suggestion, is_since_rustc_version }, attr.span));\n     }\n \n     depr"}, {"sha": "b435def87ac84c7a5c98901cd39fc2871d6ba8bc", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/706bc336515581c7559a5ccdfae0a7d93b0508fa/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/706bc336515581c7559a5ccdfae0a7d93b0508fa/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=706bc336515581c7559a5ccdfae0a7d93b0508fa", "patch": "@@ -793,7 +793,7 @@ impl SyntaxExtension {\n             allow_internal_unsafe: sess.contains_name(attrs, sym::allow_internal_unsafe),\n             local_inner_macros,\n             stability,\n-            deprecation: attr::find_deprecation(&sess, attrs, span),\n+            deprecation: attr::find_deprecation(&sess, attrs).map(|(d, _)| d),\n             helper_attrs,\n             edition,\n             is_builtin,"}, {"sha": "bacbab1a4f492d514884a8c427efcdbe282f4656", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/706bc336515581c7559a5ccdfae0a7d93b0508fa/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/706bc336515581c7559a5ccdfae0a7d93b0508fa/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=706bc336515581c7559a5ccdfae0a7d93b0508fa", "patch": "@@ -85,14 +85,22 @@ impl<'a, 'tcx> Annotator<'a, 'tcx> {\n             did_error = self.forbid_staged_api_attrs(hir_id, attrs, inherit_deprecation.clone());\n         }\n \n-        let depr =\n-            if did_error { None } else { attr::find_deprecation(&self.tcx.sess, attrs, item_sp) };\n+        let depr = if did_error { None } else { attr::find_deprecation(&self.tcx.sess, attrs) };\n         let mut is_deprecated = false;\n-        if let Some(depr) = &depr {\n+        if let Some((depr, span)) = &depr {\n             is_deprecated = true;\n \n             if kind == AnnotationKind::Prohibited || kind == AnnotationKind::DeprecationProhibited {\n-                self.tcx.sess.span_err(item_sp, \"This deprecation annotation is useless\");\n+                self.tcx\n+                    .sess\n+                    .struct_span_err(*span, \"this deprecation annotation is useless\")\n+                    .span_suggestion(\n+                        *span,\n+                        \"try removing the deprecation attribute\",\n+                        String::new(),\n+                        rustc_errors::Applicability::MachineApplicable,\n+                    )\n+                    .emit();\n             }\n \n             // `Deprecation` is just two pointers, no need to intern it\n@@ -116,7 +124,7 @@ impl<'a, 'tcx> Annotator<'a, 'tcx> {\n             }\n         } else {\n             self.recurse_with_stability_attrs(\n-                depr.map(|d| DeprecationEntry::local(d, hir_id)),\n+                depr.map(|(d, _)| DeprecationEntry::local(d, hir_id)),\n                 None,\n                 None,\n                 visit_children,\n@@ -141,11 +149,11 @@ impl<'a, 'tcx> Annotator<'a, 'tcx> {\n             }\n         }\n \n-        if depr.as_ref().map_or(false, |d| d.is_since_rustc_version) {\n+        if let Some((rustc_attr::Deprecation { is_since_rustc_version: true, .. }, span)) = &depr {\n             if stab.is_none() {\n                 struct_span_err!(\n                     self.tcx.sess,\n-                    item_sp,\n+                    *span,\n                     E0549,\n                     \"rustc_deprecated attribute must be paired with \\\n                     either stable or unstable attribute\"\n@@ -168,7 +176,7 @@ impl<'a, 'tcx> Annotator<'a, 'tcx> {\n             // Check if deprecated_since < stable_since. If it is,\n             // this is *almost surely* an accident.\n             if let (&Some(dep_since), &attr::Stable { since: stab_since }) =\n-                (&depr.as_ref().and_then(|d| d.since), &stab.level)\n+                (&depr.as_ref().and_then(|(d, _)| d.since), &stab.level)\n             {\n                 // Explicit version of iter::order::lt to handle parse errors properly\n                 for (dep_v, stab_v) in\n@@ -214,7 +222,7 @@ impl<'a, 'tcx> Annotator<'a, 'tcx> {\n         }\n \n         self.recurse_with_stability_attrs(\n-            depr.map(|d| DeprecationEntry::local(d, hir_id)),\n+            depr.map(|(d, _)| DeprecationEntry::local(d, hir_id)),\n             stab,\n             const_stab,\n             visit_children,"}, {"sha": "4cbcec9b1d880575684958eca2ed7f311941810a", "filename": "src/test/ui/deprecation/deprecation-sanity.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/706bc336515581c7559a5ccdfae0a7d93b0508fa/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-sanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/706bc336515581c7559a5ccdfae0a7d93b0508fa/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-sanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-sanity.rs?ref=706bc336515581c7559a5ccdfae0a7d93b0508fa", "patch": "@@ -24,8 +24,8 @@ mod bogus_attribute_types_1 {\n }\n \n #[deprecated(since = \"a\", note = \"b\")]\n-#[deprecated(since = \"a\", note = \"b\")]\n-fn multiple1() { } //~ ERROR multiple deprecated attributes\n+#[deprecated(since = \"a\", note = \"b\")] //~ ERROR multiple deprecated attributes\n+fn multiple1() { }\n \n #[deprecated(since = \"a\", since = \"b\", note = \"c\")] //~ ERROR multiple 'since' items\n fn f1() { }"}, {"sha": "4f70c55a95755cafeda3a664a008827650776b2d", "filename": "src/test/ui/deprecation/deprecation-sanity.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/706bc336515581c7559a5ccdfae0a7d93b0508fa/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-sanity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/706bc336515581c7559a5ccdfae0a7d93b0508fa/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-sanity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-sanity.stderr?ref=706bc336515581c7559a5ccdfae0a7d93b0508fa", "patch": "@@ -41,10 +41,16 @@ LL |     #[deprecated(\"test\")]\n    |                  ^^^^^^\n \n error[E0550]: multiple deprecated attributes\n-  --> $DIR/deprecation-sanity.rs:28:1\n+  --> $DIR/deprecation-sanity.rs:27:1\n    |\n-LL | fn multiple1() { }\n-   | ^^^^^^^^^^^^^^^^^^\n+LL | #[deprecated(since = \"a\", note = \"b\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: first deprecation attribute here\n+  --> $DIR/deprecation-sanity.rs:26:1\n+   |\n+LL | #[deprecated(since = \"a\", note = \"b\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0538]: multiple 'since' items\n   --> $DIR/deprecation-sanity.rs:30:27"}, {"sha": "abd603b356ee68ee7e12795119e55161e01e05e3", "filename": "src/test/ui/stability-attribute/stability-attribute-sanity.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/706bc336515581c7559a5ccdfae0a7d93b0508fa/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/706bc336515581c7559a5ccdfae0a7d93b0508fa/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.rs?ref=706bc336515581c7559a5ccdfae0a7d93b0508fa", "patch": "@@ -59,14 +59,14 @@ fn multiple3() { }\n \n #[stable(feature = \"a\", since = \"b\")]\n #[rustc_deprecated(since = \"b\", reason = \"text\")]\n-#[rustc_deprecated(since = \"b\", reason = \"text\")]\n+#[rustc_deprecated(since = \"b\", reason = \"text\")] //~ ERROR multiple deprecated attributes\n #[rustc_const_unstable(feature = \"c\", issue = \"none\")]\n #[rustc_const_unstable(feature = \"d\", issue = \"none\")] //~ ERROR multiple stability levels\n-pub const fn multiple4() { } //~ ERROR multiple deprecated attributes\n+pub const fn multiple4() { }\n //~^ ERROR Invalid stability or deprecation version found\n \n #[rustc_deprecated(since = \"a\", reason = \"text\")]\n fn deprecated_without_unstable_or_stable() { }\n-//~^ ERROR rustc_deprecated attribute must be paired with either stable or unstable attribute\n+//~^^ ERROR rustc_deprecated attribute must be paired with either stable or unstable attribute\n \n fn main() { }"}, {"sha": "f3edd5773cbb84c0c686ba54a1e8d88670e93ac0", "filename": "src/test/ui/stability-attribute/stability-attribute-sanity.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/706bc336515581c7559a5ccdfae0a7d93b0508fa/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/706bc336515581c7559a5ccdfae0a7d93b0508fa/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.stderr?ref=706bc336515581c7559a5ccdfae0a7d93b0508fa", "patch": "@@ -83,10 +83,16 @@ LL | #[stable(feature = \"a\", since = \"b\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0550]: multiple deprecated attributes\n-  --> $DIR/stability-attribute-sanity.rs:65:1\n+  --> $DIR/stability-attribute-sanity.rs:62:1\n    |\n-LL | pub const fn multiple4() { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #[rustc_deprecated(since = \"b\", reason = \"text\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: first deprecation attribute here\n+  --> $DIR/stability-attribute-sanity.rs:61:1\n+   |\n+LL | #[rustc_deprecated(since = \"b\", reason = \"text\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0544]: multiple stability levels\n   --> $DIR/stability-attribute-sanity.rs:64:1\n@@ -101,10 +107,10 @@ LL | pub const fn multiple4() { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0549]: rustc_deprecated attribute must be paired with either stable or unstable attribute\n-  --> $DIR/stability-attribute-sanity.rs:69:1\n+  --> $DIR/stability-attribute-sanity.rs:68:1\n    |\n-LL | fn deprecated_without_unstable_or_stable() { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #[rustc_deprecated(since = \"a\", reason = \"text\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 18 previous errors\n "}]}