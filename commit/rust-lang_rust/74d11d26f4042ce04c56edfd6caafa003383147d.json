{"sha": "74d11d26f4042ce04c56edfd6caafa003383147d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ZDExZDI2ZjQwNDJjZTA0YzU2ZWRmZDZjYWFmYTAwMzM4MzE0N2Q=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-12-31T04:24:42Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-01-02T10:05:22Z"}, "message": "Accept `self` in place of `mod` in use items\n\n[breaking-change]\n\n`mod` is still accepted, but gives a deprecated warning", "tree": {"sha": "5ebb81f029eeed8ea0ff4d9c492cc718dc43316f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ebb81f029eeed8ea0ff4d9c492cc718dc43316f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74d11d26f4042ce04c56edfd6caafa003383147d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74d11d26f4042ce04c56edfd6caafa003383147d", "html_url": "https://github.com/rust-lang/rust/commit/74d11d26f4042ce04c56edfd6caafa003383147d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74d11d26f4042ce04c56edfd6caafa003383147d/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee3c5957eaaf577bff895ce819447f7e40558a28", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee3c5957eaaf577bff895ce819447f7e40558a28", "html_url": "https://github.com/rust-lang/rust/commit/ee3c5957eaaf577bff895ce819447f7e40558a28"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "efb9b636247da964337fa9ad1aaf090c7433038c", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/74d11d26f4042ce04c56edfd6caafa003383147d/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74d11d26f4042ce04c56edfd6caafa003383147d/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=74d11d26f4042ce04c56edfd6caafa003383147d", "patch": "@@ -681,9 +681,10 @@ impl<'a, 'b:'a, 'tcx:'b> GraphBuilder<'a, 'b, 'tcx> {\n                     ViewPathSimple(binding, ref full_path, id) => {\n                         let source_name =\n                             full_path.segments.last().unwrap().identifier.name;\n-                        if token::get_name(source_name).get() == \"mod\" {\n+                        if token::get_name(source_name).get() == \"mod\" ||\n+                           token::get_name(source_name).get() == \"self\" {\n                             self.resolve_error(view_path.span,\n-                                \"`mod` imports are only allowed within a { } list\");\n+                                \"`self` imports are only allowed within a { } list\");\n                         }\n \n                         let subclass = SingleImport(binding.name,\n@@ -704,10 +705,10 @@ impl<'a, 'b:'a, 'tcx:'b> GraphBuilder<'a, 'b, 'tcx> {\n                         }).collect::<Vec<Span>>();\n                         if mod_spans.len() > 1 {\n                             self.resolve_error(mod_spans[0],\n-                                \"`mod` import can only appear once in the list\");\n+                                \"`self` import can only appear once in the list\");\n                             for other_span in mod_spans.iter().skip(1) {\n                                 self.session.span_note(*other_span,\n-                                    \"another `mod` import appears here\");\n+                                    \"another `self` import appears here\");\n                             }\n                         }\n \n@@ -720,7 +721,7 @@ impl<'a, 'b:'a, 'tcx:'b> GraphBuilder<'a, 'b, 'tcx> {\n                                         Some(name) => *name,\n                                         None => {\n                                             self.resolve_error(source_item.span,\n-                                                \"`mod` import can only appear in an import list \\\n+                                                \"`self` import can only appear in an import list \\\n                                                  with a non-empty prefix\");\n                                             continue;\n                                         }"}, {"sha": "11328bedcc4938e977ee14649c045b13b61e1089", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/74d11d26f4042ce04c56edfd6caafa003383147d/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74d11d26f4042ce04c56edfd6caafa003383147d/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=74d11d26f4042ce04c56edfd6caafa003383147d", "patch": "@@ -971,6 +971,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n         }\n     }\n \n+\n     // Import resolution\n     //\n     // This is a fixed-point algorithm. We resolve imports until our efforts"}, {"sha": "f84ddcf360ebe4adde54e1a78309066105a027db", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74d11d26f4042ce04c56edfd6caafa003383147d/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74d11d26f4042ce04c56edfd6caafa003383147d/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=74d11d26f4042ce04c56edfd6caafa003383147d", "patch": "@@ -546,6 +546,10 @@ impl<'a> Parser<'a> {\n     pub fn parse_path_list_item(&mut self) -> ast::PathListItem {\n         let lo = self.span.lo;\n         let node = if self.eat_keyword(keywords::Mod) {\n+            let span = self.last_span;\n+            self.span_warn(span, \"deprecated syntax; use the `self` keyword now\");\n+            ast::PathListMod { id: ast::DUMMY_NODE_ID }\n+        } else if self.eat_keyword(keywords::Self) {\n             ast::PathListMod { id: ast::DUMMY_NODE_ID }\n         } else {\n             let ident = self.parse_ident();"}, {"sha": "877b2c7b7d366905330749d53d528c87391f441a", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74d11d26f4042ce04c56edfd6caafa003383147d/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74d11d26f4042ce04c56edfd6caafa003383147d/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=74d11d26f4042ce04c56edfd6caafa003383147d", "patch": "@@ -2540,7 +2540,7 @@ impl<'a> State<'a> {\n                             s.print_ident(name)\n                         },\n                         ast::PathListMod { .. } => {\n-                            word(&mut s.s, \"mod\")\n+                            word(&mut s.s, \"self\")\n                         }\n                     }\n                 }));"}]}