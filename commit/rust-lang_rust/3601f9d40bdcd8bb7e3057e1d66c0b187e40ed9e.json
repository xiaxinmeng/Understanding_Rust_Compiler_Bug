{"sha": "3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MDFmOWQ0MGJkY2Q4YmI3ZTMwNTdlMWQ2NmMwYjE4N2U0MGVkOWU=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-31T08:49:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-31T08:49:39Z"}, "message": "Rollup merge of #78581 - a1phyr:const_btree_more, r=dtolnay\n\nConstantify more BTreeMap and BTreeSet functions\n\nJust because we can:\n\n- `BTreeMap::len`\n- `BTreeMap::is_empty`\n- `BTreeSet::len`\n- `BTreeSet::is_empty`\n\nNote that I put the `const` under `const_btree_new`, because I don't think their is a need to create another feature flag for that.\n\ncc #71835", "tree": {"sha": "14d072110d5b92b980cd0d653dbb702b6f8986c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14d072110d5b92b980cd0d653dbb702b6f8986c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfnSUkCRBK7hj4Ov3rIwAAdHIIALB4L0o0RMIY5vt2RqGbMWHo\n7m2+SalY1id6u4THNOUhBSwPRxaqtMFuS6+ocIyrdJwGU9K2XDLSZ5qcAu4qKJGW\naxUMhD4eixw0A8FTUEpGvlEKW1ro86Rq2DNszgFucofR6GxKF65SnUxU48Bk1FIi\nFriChlSQb3MW1Gw0G1DVcl4LyYLTuuEmHhPkKXDlaJzTH9Cn7qUZwG4DUE2wri+X\nNiQVX28QAebLkNqAsysCjV/l7KudSk/OsgBMv1LSQEJSw4l7W6xy0khyGJs5bCVU\nDa0KNXuZXseTn5v8SRlvhDKIB9atTiz5tIRbsWmBjMTioeRZUoYStzVJD1xH0Mw=\n=+UMD\n-----END PGP SIGNATURE-----\n", "payload": "tree 14d072110d5b92b980cd0d653dbb702b6f8986c8\nparent 841f0e7f2cd90747d6a7d0e699fac342cc6ee92b\nparent 307cc11bebe930fa13dec86408e8ae6dbc04a037\nauthor Mara Bos <m-ou.se@m-ou.se> 1604134179 +0100\ncommitter GitHub <noreply@github.com> 1604134179 +0100\n\nRollup merge of #78581 - a1phyr:const_btree_more, r=dtolnay\n\nConstantify more BTreeMap and BTreeSet functions\n\nJust because we can:\n\n- `BTreeMap::len`\n- `BTreeMap::is_empty`\n- `BTreeSet::len`\n- `BTreeSet::is_empty`\n\nNote that I put the `const` under `const_btree_new`, because I don't think their is a need to create another feature flag for that.\n\ncc #71835\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e", "html_url": "https://github.com/rust-lang/rust/commit/3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "841f0e7f2cd90747d6a7d0e699fac342cc6ee92b", "url": "https://api.github.com/repos/rust-lang/rust/commits/841f0e7f2cd90747d6a7d0e699fac342cc6ee92b", "html_url": "https://github.com/rust-lang/rust/commit/841f0e7f2cd90747d6a7d0e699fac342cc6ee92b"}, {"sha": "307cc11bebe930fa13dec86408e8ae6dbc04a037", "url": "https://api.github.com/repos/rust-lang/rust/commits/307cc11bebe930fa13dec86408e8ae6dbc04a037", "html_url": "https://github.com/rust-lang/rust/commit/307cc11bebe930fa13dec86408e8ae6dbc04a037"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "07c23d29e20a6364efae2bca144cace2799805da", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e", "patch": "@@ -2188,7 +2188,8 @@ impl<K, V> BTreeMap<K, V> {\n     /// assert_eq!(a.len(), 1);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn len(&self) -> usize {\n+    #[rustc_const_unstable(feature = \"const_btree_new\", issue = \"71835\")]\n+    pub const fn len(&self) -> usize {\n         self.length\n     }\n \n@@ -2207,7 +2208,8 @@ impl<K, V> BTreeMap<K, V> {\n     /// assert!(!a.is_empty());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn is_empty(&self) -> bool {\n+    #[rustc_const_unstable(feature = \"const_btree_new\", issue = \"71835\")]\n+    pub const fn is_empty(&self) -> bool {\n         self.len() == 0\n     }\n "}, {"sha": "09aabdcd0fb27b7c2103f453665875256116507d", "filename": "library/alloc/src/collections/btree/map/tests.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs?ref=3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e", "patch": "@@ -1527,6 +1527,13 @@ fn test_send() {\n     }\n }\n \n+#[allow(dead_code)]\n+fn test_const() {\n+    const MAP: &'static BTreeMap<(), ()> = &BTreeMap::new();\n+    const LEN: usize = MAP.len();\n+    const IS_EMPTY: bool = MAP.is_empty();\n+}\n+\n #[test]\n fn test_occupied_entry_key() {\n     let mut a = BTreeMap::new();"}, {"sha": "684019f8f5f5e02c6afa472a5a960686a1d46e59", "filename": "library/alloc/src/collections/btree/set.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs?ref=3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e", "patch": "@@ -950,7 +950,8 @@ impl<T> BTreeSet<T> {\n     /// assert_eq!(v.len(), 1);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn len(&self) -> usize {\n+    #[rustc_const_unstable(feature = \"const_btree_new\", issue = \"71835\")]\n+    pub const fn len(&self) -> usize {\n         self.map.len()\n     }\n \n@@ -967,7 +968,8 @@ impl<T> BTreeSet<T> {\n     /// assert!(!v.is_empty());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn is_empty(&self) -> bool {\n+    #[rustc_const_unstable(feature = \"const_btree_new\", issue = \"71835\")]\n+    pub const fn is_empty(&self) -> bool {\n         self.len() == 0\n     }\n }"}, {"sha": "2069cde4dba3b7aa72ce98c393d54b87482c08fe", "filename": "library/alloc/src/collections/btree/set/tests.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset%2Ftests.rs?ref=3601f9d40bdcd8bb7e3057e1d66c0b187e40ed9e", "patch": "@@ -15,6 +15,13 @@ fn test_clone_eq() {\n     assert_eq!(m.clone(), m);\n }\n \n+#[allow(dead_code)]\n+fn test_const() {\n+    const SET: &'static BTreeSet<()> = &BTreeSet::new();\n+    const LEN: usize = SET.len();\n+    const IS_EMPTY: bool = SET.is_empty();\n+}\n+\n #[test]\n fn test_iter_min_max() {\n     let mut a = BTreeSet::new();"}]}