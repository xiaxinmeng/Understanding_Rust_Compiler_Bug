{"sha": "a95e6bb91673e250e35886ff09a2ba023e536ff6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NWU2YmI5MTY3M2UyNTBlMzU4ODZmZjA5YTJiYTAyM2U1MzZmZjY=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-22T20:58:54Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-22T20:58:54Z"}, "message": "require type defaults to be after const generic parameters\n\nas if this is currently possible. HA!", "tree": {"sha": "47d43a7d8a4f80f24be1ea8575a683333730066f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47d43a7d8a4f80f24be1ea8575a683333730066f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a95e6bb91673e250e35886ff09a2ba023e536ff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a95e6bb91673e250e35886ff09a2ba023e536ff6", "html_url": "https://github.com/rust-lang/rust/commit/a95e6bb91673e250e35886ff09a2ba023e536ff6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a95e6bb91673e250e35886ff09a2ba023e536ff6/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e92106d457abd14f82adc29e7f2496861e07916", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e92106d457abd14f82adc29e7f2496861e07916", "html_url": "https://github.com/rust-lang/rust/commit/9e92106d457abd14f82adc29e7f2496861e07916"}], "stats": {"total": 52, "additions": 46, "deletions": 6}, "files": [{"sha": "f25f5d563ebc8cdc4bbbfbd0fe97a8243e4d7790", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a95e6bb91673e250e35886ff09a2ba023e536ff6/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a95e6bb91673e250e35886ff09a2ba023e536ff6/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=a95e6bb91673e250e35886ff09a2ba023e536ff6", "patch": "@@ -1118,13 +1118,26 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n     fn visit_generics(&mut self, generics: &'a Generics) {\n         let mut prev_ty_default = None;\n         for param in &generics.params {\n-            if let GenericParamKind::Type { ref default, .. } = param.kind {\n-                if default.is_some() {\n+            match param.kind {\n+                GenericParamKind::Lifetime => (),\n+                GenericParamKind::Type { default: Some(_), .. } => {\n                     prev_ty_default = Some(param.ident.span);\n-                } else if let Some(span) = prev_ty_default {\n-                    self.err_handler()\n-                        .span_err(span, \"type parameters with a default must be trailing\");\n-                    break;\n+                }\n+                GenericParamKind::Type { .. } | GenericParamKind::Const { .. } => {\n+                    if let Some(span) = prev_ty_default {\n+                        let mut err = self.err_handler().struct_span_err(\n+                            span,\n+                            \"type parameters with a default must be trailing\",\n+                        );\n+                        if matches!(param.kind, GenericParamKind::Const { .. }) {\n+                            err.note(\n+                                \"using type defaults and const parameters \\\n+                                 in the same parameter listing is currently not possible\",\n+                            );\n+                        }\n+                        err.emit();\n+                        break;\n+                    }\n                 }\n             }\n         }"}, {"sha": "7f17c6358b7b6c8e21bdead470a1579912b9d872", "filename": "src/test/ui/const-generics/defaults/wrong-order.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a95e6bb91673e250e35886ff09a2ba023e536ff6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a95e6bb91673e250e35886ff09a2ba023e536ff6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.rs?ref=a95e6bb91673e250e35886ff09a2ba023e536ff6", "patch": "@@ -0,0 +1,8 @@\n+#![feature(const_generics)] //~ WARN the feature `const_generics` is incomplete\n+\n+struct A<T = u32, const N: usize> {\n+    //~^ ERROR type parameters with a default must be trailing\n+    arg: T,\n+}\n+\n+fn main() {}"}, {"sha": "7d7cd0fa36f4f16ea26bcb056b290aad95260317", "filename": "src/test/ui/const-generics/defaults/wrong-order.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a95e6bb91673e250e35886ff09a2ba023e536ff6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a95e6bb91673e250e35886ff09a2ba023e536ff6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.stderr?ref=a95e6bb91673e250e35886ff09a2ba023e536ff6", "patch": "@@ -0,0 +1,19 @@\n+error: type parameters with a default must be trailing\n+  --> $DIR/wrong-order.rs:3:10\n+   |\n+LL | struct A<T = u32, const N: usize> {\n+   |          ^\n+   |\n+   = note: using type defaults and const parameters in the same parameter listing is currently not possible\n+\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/wrong-order.rs:1:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n+\n+error: aborting due to previous error; 1 warning emitted\n+"}]}