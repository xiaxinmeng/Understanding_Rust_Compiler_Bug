{"sha": "06ad8fe261aae7b58b70be58f6a3ac6d5d9d2328", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2YWQ4ZmUyNjFhYWU3YjU4YjcwYmU1OGY2YTNhYzZkNWQ5ZDIzMjg=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-08-18T09:16:42Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-09-05T04:19:07Z"}, "message": "Factor write_ty out of check_binop*", "tree": {"sha": "bf475079bf67f750a44e0c60ee08e827ec0a5020", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf475079bf67f750a44e0c60ee08e827ec0a5020"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06ad8fe261aae7b58b70be58f6a3ac6d5d9d2328", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06ad8fe261aae7b58b70be58f6a3ac6d5d9d2328", "html_url": "https://github.com/rust-lang/rust/commit/06ad8fe261aae7b58b70be58f6a3ac6d5d9d2328", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06ad8fe261aae7b58b70be58f6a3ac6d5d9d2328/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7ea3e8d134b941a0ed2f3d6b535649d081bf92d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ea3e8d134b941a0ed2f3d6b535649d081bf92d", "html_url": "https://github.com/rust-lang/rust/commit/c7ea3e8d134b941a0ed2f3d6b535649d081bf92d"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "7a5b2bdeb16384169895690e7748d6cfa6cc6542", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/06ad8fe261aae7b58b70be58f6a3ac6d5d9d2328/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06ad8fe261aae7b58b70be58f6a3ac6d5d9d2328/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=06ad8fe261aae7b58b70be58f6a3ac6d5d9d2328", "patch": "@@ -3332,10 +3332,12 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             self.write_ty(id, typ)\n           }\n           hir::ExprBinary(op, ref lhs, ref rhs) => {\n-            self.check_binop(expr, op, lhs, rhs)\n+            let ty = self.check_binop(expr, op, lhs, rhs);\n+            self.write_ty(id, ty)\n           }\n           hir::ExprAssignOp(op, ref lhs, ref rhs) => {\n-            self.check_binop_assign(expr, op, lhs, rhs)\n+            let ty = self.check_binop_assign(expr, op, lhs, rhs);\n+            self.write_ty(id, ty)\n           }\n           hir::ExprUnary(unop, ref oprnd) => {\n             let expected_inner = match unop {"}, {"sha": "af7e12bd48dc26c6d3317a8bb6198df25b184d0b", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/06ad8fe261aae7b58b70be58f6a3ac6d5d9d2328/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06ad8fe261aae7b58b70be58f6a3ac6d5d9d2328/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=06ad8fe261aae7b58b70be58f6a3ac6d5d9d2328", "patch": "@@ -38,7 +38,6 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         } else {\n             return_ty\n         };\n-        let ty = self.write_ty(expr.id, ty);\n \n         let tcx = self.tcx;\n         if !tcx.expr_is_lval(lhs_expr) {\n@@ -72,7 +71,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         let lhs_ty = self.check_expr(lhs_expr);\n         let lhs_ty = self.resolve_type_vars_with_obligations(lhs_ty);\n \n-        let ty = match BinOpCategory::from(op) {\n+        match BinOpCategory::from(op) {\n             BinOpCategory::Shortcircuit => {\n                 // && and || are a simple case.\n                 self.demand_suptype(lhs_expr.span, tcx.mk_bool(), lhs_ty);\n@@ -111,8 +110,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n \n                 return_ty\n             }\n-        };\n-        self.write_ty(expr.id, ty)\n+        }\n     }\n \n     fn enforce_builtin_binop_types(&self,"}]}