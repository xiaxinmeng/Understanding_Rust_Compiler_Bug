{"sha": "5a7b21fabaed7a5fe4b2c89baf58271f82808b4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhN2IyMWZhYmFlZDdhNWZlNGIyYzg5YmFmNTgyNzFmODI4MDhiNGE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-02T16:27:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-02T16:27:48Z"}, "message": "Rollup merge of #71785 - reitermarkus:cfg-attribute, r=Mark-Simulacrum\n\nUpdate comment regarding SO_REUSEADDR on Windows", "tree": {"sha": "d6294691775312ee4a98bc47868b993baa1f18ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6294691775312ee4a98bc47868b993baa1f18ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a7b21fabaed7a5fe4b2c89baf58271f82808b4a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJerZ+FCRBK7hj4Ov3rIwAAdHIIAFqlmoszLUe/USnB9TsVr+BA\nzu2agOFMwqogWkgonWErc8/50WLBWshNcO+OHGIN0tehgZ/ACWzZLiGVden57oiI\n/vQIfPP83TnfP+TCePZN/DlrW9WOF1sXN7vyFuGoPD2AFdg5BjTA8d8ztWAmmt9F\nV3HUGHEXCY710sHmC3TZ2OzXDsTyQpkM4oXxiYx1ULfdQMbRxXJDf6dfuCWO/7ym\n0YQJD6VpUxPP1rxi23Sub7eLfEcnxrELRHehVTFC2i/1Sbm4SA7j1NkQTwYDXzJj\nxgxvU4+bfnb1MgNsvKuMNHEdN2TPtLAYO7LzECsO+bg7o9o2b1nm4nz7OI6BQqM=\n=2SyC\n-----END PGP SIGNATURE-----\n", "payload": "tree d6294691775312ee4a98bc47868b993baa1f18ab\nparent 94d2fd920533cda2482128157bfd605cde7e3ef3\nparent 39a97900bee062b020c93e995c3b48b48d335bf2\nauthor Dylan DPC <dylan.dpc@gmail.com> 1588436868 +0200\ncommitter GitHub <noreply@github.com> 1588436868 +0200\n\nRollup merge of #71785 - reitermarkus:cfg-attribute, r=Mark-Simulacrum\n\nUpdate comment regarding SO_REUSEADDR on Windows\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a7b21fabaed7a5fe4b2c89baf58271f82808b4a", "html_url": "https://github.com/rust-lang/rust/commit/5a7b21fabaed7a5fe4b2c89baf58271f82808b4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a7b21fabaed7a5fe4b2c89baf58271f82808b4a/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94d2fd920533cda2482128157bfd605cde7e3ef3", "url": "https://api.github.com/repos/rust-lang/rust/commits/94d2fd920533cda2482128157bfd605cde7e3ef3", "html_url": "https://github.com/rust-lang/rust/commit/94d2fd920533cda2482128157bfd605cde7e3ef3"}, {"sha": "39a97900bee062b020c93e995c3b48b48d335bf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/39a97900bee062b020c93e995c3b48b48d335bf2", "html_url": "https://github.com/rust-lang/rust/commit/39a97900bee062b020c93e995c3b48b48d335bf2"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "6115d652b0cea3975ff26d5d60e4d0c92df38d00", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a7b21fabaed7a5fe4b2c89baf58271f82808b4a/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a7b21fabaed7a5fe4b2c89baf58271f82808b4a/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=5a7b21fabaed7a5fe4b2c89baf58271f82808b4a", "patch": "@@ -216,7 +216,6 @@ pub const SOCK_STREAM: c_int = 1;\n pub const SOL_SOCKET: c_int = 0xffff;\n pub const SO_RCVTIMEO: c_int = 0x1006;\n pub const SO_SNDTIMEO: c_int = 0x1005;\n-pub const SO_REUSEADDR: c_int = 0x0004;\n pub const IPPROTO_IP: c_int = 0;\n pub const IPPROTO_TCP: c_int = 6;\n pub const IPPROTO_IPV6: c_int = 41;"}, {"sha": "1c03bc923444873ab5b82249881a02f5a7a1b78b", "filename": "src/libstd/sys_common/net.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5a7b21fabaed7a5fe4b2c89baf58271f82808b4a/src%2Flibstd%2Fsys_common%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a7b21fabaed7a5fe4b2c89baf58271f82808b4a/src%2Flibstd%2Fsys_common%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fnet.rs?ref=5a7b21fabaed7a5fe4b2c89baf58271f82808b4a", "patch": "@@ -368,12 +368,15 @@ impl TcpListener {\n \n         let sock = Socket::new(addr, c::SOCK_STREAM)?;\n \n-        // On platforms with Berkeley-derived sockets, this allows\n-        // to quickly rebind a socket, without needing to wait for\n-        // the OS to clean up the previous one.\n-        if !cfg!(windows) {\n-            setsockopt(&sock, c::SOL_SOCKET, c::SO_REUSEADDR, 1 as c_int)?;\n-        }\n+        // On platforms with Berkeley-derived sockets, this allows to quickly\n+        // rebind a socket, without needing to wait for the OS to clean up the\n+        // previous one.\n+        //\n+        // On Windows, this allows rebinding sockets which are actively in use,\n+        // which allows \u201csocket hijacking\u201d, so we explicitly don't set it here.\n+        // https://docs.microsoft.com/en-us/windows/win32/winsock/using-so-reuseaddr-and-so-exclusiveaddruse\n+        #[cfg(not(windows))]\n+        setsockopt(&sock, c::SOL_SOCKET, c::SO_REUSEADDR, 1 as c_int)?;\n \n         // Bind our new socket\n         let (addrp, len) = addr.into_inner();"}]}