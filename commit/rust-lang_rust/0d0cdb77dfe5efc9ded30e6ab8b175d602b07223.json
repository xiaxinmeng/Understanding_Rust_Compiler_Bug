{"sha": "0d0cdb77dfe5efc9ded30e6ab8b175d602b07223", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkMGNkYjc3ZGZlNWVmYzlkZWQzMGU2YWI4YjE3NWQ2MDJiMDcyMjM=", "commit": {"author": {"name": "KillTheMule", "email": "github@pipsfrank.de", "date": "2016-10-07T06:48:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-07T06:48:19Z"}, "message": "Wrap & improve", "tree": {"sha": "559eb3b3eb0d21b757009ed2ecea41562b3691ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/559eb3b3eb0d21b757009ed2ecea41562b3691ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d0cdb77dfe5efc9ded30e6ab8b175d602b07223", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d0cdb77dfe5efc9ded30e6ab8b175d602b07223", "html_url": "https://github.com/rust-lang/rust/commit/0d0cdb77dfe5efc9ded30e6ab8b175d602b07223", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d0cdb77dfe5efc9ded30e6ab8b175d602b07223/comments", "author": {"login": "KillTheMule", "id": 4117685, "node_id": "MDQ6VXNlcjQxMTc2ODU=", "avatar_url": "https://avatars.githubusercontent.com/u/4117685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KillTheMule", "html_url": "https://github.com/KillTheMule", "followers_url": "https://api.github.com/users/KillTheMule/followers", "following_url": "https://api.github.com/users/KillTheMule/following{/other_user}", "gists_url": "https://api.github.com/users/KillTheMule/gists{/gist_id}", "starred_url": "https://api.github.com/users/KillTheMule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KillTheMule/subscriptions", "organizations_url": "https://api.github.com/users/KillTheMule/orgs", "repos_url": "https://api.github.com/users/KillTheMule/repos", "events_url": "https://api.github.com/users/KillTheMule/events{/privacy}", "received_events_url": "https://api.github.com/users/KillTheMule/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a0bd6db856929315876b2b875e5fcf22832ff58", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a0bd6db856929315876b2b875e5fcf22832ff58", "html_url": "https://github.com/rust-lang/rust/commit/2a0bd6db856929315876b2b875e5fcf22832ff58"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "e865609f217f0cb094fe4c5884feb66970992f60", "filename": "src/doc/book/lifetimes.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0d0cdb77dfe5efc9ded30e6ab8b175d602b07223/src%2Fdoc%2Fbook%2Flifetimes.md", "raw_url": "https://github.com/rust-lang/rust/raw/0d0cdb77dfe5efc9ded30e6ab8b175d602b07223/src%2Fdoc%2Fbook%2Flifetimes.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Flifetimes.md?ref=0d0cdb77dfe5efc9ded30e6ab8b175d602b07223", "patch": "@@ -56,10 +56,12 @@ To fix this, we have to make sure that step four never happens after step\n three. The ownership system in Rust does this through a concept called\n lifetimes, which describe the scope that a reference is valid for.\n \n-**Note** It's important to understand that lifetime annotations are _descriptive_, not _prescriptive_. This means that how long a reference is valid  is determined by the code, not by the annotations. The annotations, however, point out this fact to the compiler in case it can't figure it out by itself.\n-\n-When we have a function that takes an argument by reference, we can be\n-implicit or explicit about the lifetime of the reference:\n+**Note** It's important to understand that lifetime annotations are\n+_descriptive_, not _prescriptive_. This means that how long a reference is valid\n+is determined by the code, not by the annotations. The annotations, however,\n+give information about lifetimes to the compiler that uses them to check the\n+validity of references. The compiler can do so without annotations in simple\n+cases, but needs the programmers support in complex scenarios.\n \n ```rust\n // implicit"}]}