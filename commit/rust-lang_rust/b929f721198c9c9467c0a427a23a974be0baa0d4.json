{"sha": "b929f721198c9c9467c0a427a23a974be0baa0d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MjlmNzIxMTk4YzljOTQ2N2MwYTQyN2EyM2E5NzRiZTBiYWEwZDQ=", "commit": {"author": {"name": "Dan Aloni", "email": "alonid@gmail.com", "date": "2020-07-11T08:03:54Z"}, "committer": {"name": "Dan Aloni", "email": "alonid@gmail.com", "date": "2020-07-11T08:03:55Z"}, "message": "Fix try_print_visible_def_path_recur for opt_def_id usage\n\nThis to fix #74081.", "tree": {"sha": "a66a2d80a52a5f05f7f9a3e132b2ad5c69de7d7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a66a2d80a52a5f05f7f9a3e132b2ad5c69de7d7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b929f721198c9c9467c0a427a23a974be0baa0d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b929f721198c9c9467c0a427a23a974be0baa0d4", "html_url": "https://github.com/rust-lang/rust/commit/b929f721198c9c9467c0a427a23a974be0baa0d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b929f721198c9c9467c0a427a23a974be0baa0d4/comments", "author": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "committer": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e59b08e62ea691916d2f063cac5aab4634128022", "url": "https://api.github.com/repos/rust-lang/rust/commits/e59b08e62ea691916d2f063cac5aab4634128022", "html_url": "https://github.com/rust-lang/rust/commit/e59b08e62ea691916d2f063cac5aab4634128022"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3809c8d245bbe96ebbb682fe13ff81cdabfe0366", "filename": "src/librustc_middle/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b929f721198c9c9467c0a427a23a974be0baa0d4/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b929f721198c9c9467c0a427a23a974be0baa0d4/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs?ref=b929f721198c9c9467c0a427a23a974be0baa0d4", "patch": "@@ -393,7 +393,7 @@ pub trait PrettyPrinter<'tcx>:\n                     .tcx()\n                     .item_children(visible_parent)\n                     .iter()\n-                    .find(|child| child.res.def_id() == def_id)\n+                    .find(|child| child.res.opt_def_id() == Some(def_id))\n                     .map(|child| child.ident.name);\n                 if let Some(reexport) = reexport {\n                     *name = reexport;"}]}