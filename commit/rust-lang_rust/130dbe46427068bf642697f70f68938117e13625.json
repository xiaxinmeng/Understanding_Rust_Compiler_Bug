{"sha": "130dbe46427068bf642697f70f68938117e13625", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzMGRiZTQ2NDI3MDY4YmY2NDI2OTdmNzBmNjg5MzgxMTdlMTM2MjU=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-12-12T20:40:58Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-12-12T20:40:58Z"}, "message": "Remove incorrect assert", "tree": {"sha": "6964ed10a3b47384d67d189afbddcc4814eba0c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6964ed10a3b47384d67d189afbddcc4814eba0c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/130dbe46427068bf642697f70f68938117e13625", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/130dbe46427068bf642697f70f68938117e13625", "html_url": "https://github.com/rust-lang/rust/commit/130dbe46427068bf642697f70f68938117e13625", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/130dbe46427068bf642697f70f68938117e13625/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "388eb24b6c479088a83c1b094d79221a32dfc7ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/388eb24b6c479088a83c1b094d79221a32dfc7ff", "html_url": "https://github.com/rust-lang/rust/commit/388eb24b6c479088a83c1b094d79221a32dfc7ff"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e2fdf369087b158c082e76300f7c077e526b5a71", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/130dbe46427068bf642697f70f68938117e13625/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/130dbe46427068bf642697f70f68938117e13625/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=130dbe46427068bf642697f70f68938117e13625", "patch": "@@ -436,8 +436,8 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n         // Try looking for methods and associated items.\n         let mut split = path_str.rsplitn(2, \"::\");\n         // NB: `split`'s first element is always defined, even if the delimiter was not present.\n+        // NB: `item_str` could be empty when resolving in the root namespace (e.g. `::std`).\n         let item_str = split.next().unwrap();\n-        assert!(!item_str.is_empty());\n         let item_name = Symbol::intern(item_str);\n         let path_root = split\n             .next()"}]}