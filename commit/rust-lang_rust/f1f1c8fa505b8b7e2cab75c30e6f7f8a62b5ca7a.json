{"sha": "f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZjFjOGZhNTA1YjhiN2UyY2FiNzVjMzBlNmY3ZjhhNjJiNWNhN2E=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-09-18T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-09-18T00:00:00Z"}, "message": "./x.py test --bless", "tree": {"sha": "43d5019a1abb2ffe58e9531e76c210c9c77535c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43d5019a1abb2ffe58e9531e76c210c9c77535c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a", "html_url": "https://github.com/rust-lang/rust/commit/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3489ba3bbba16ef9d900439bb62f679ba3f89564", "url": "https://api.github.com/repos/rust-lang/rust/commits/3489ba3bbba16ef9d900439bb62f679ba3f89564", "html_url": "https://github.com/rust-lang/rust/commit/3489ba3bbba16ef9d900439bb62f679ba3f89564"}], "stats": {"total": 140, "additions": 75, "deletions": 65}, "files": [{"sha": "ca0eb7e845aade9bdbe7293051590e84b10fd159", "filename": "src/test/mir-opt/coverage_graphviz.main.InstrumentCoverage.0.dot", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a/src%2Ftest%2Fmir-opt%2Fcoverage_graphviz.main.InstrumentCoverage.0.dot", "raw_url": "https://github.com/rust-lang/rust/raw/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a/src%2Ftest%2Fmir-opt%2Fcoverage_graphviz.main.InstrumentCoverage.0.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fcoverage_graphviz.main.InstrumentCoverage.0.dot?ref=f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a", "patch": "@@ -2,10 +2,12 @@ digraph Cov_0_3 {\n     graph [fontname=\"Courier, monospace\"];\n     node [fontname=\"Courier, monospace\"];\n     edge [fontname=\"Courier, monospace\"];\n-    bcb2__Cov_0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb2</td></tr><tr><td align=\"left\" balign=\"left\">Expression(bcb0 - bcb1) at 13:10-13:10<br/>    13:10-13:10: @4[0]: Coverage::Expression(4294967295) = 1 - 2 for $DIR/coverage_graphviz.rs:13:10 - 13:11</td></tr><tr><td align=\"left\" balign=\"left\">bb4: Goto</td></tr></table>>];\n-    bcb1__Cov_0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb1</td></tr><tr><td align=\"left\" balign=\"left\">Counter(bcb1) at 12:13-12:18<br/>    12:13-12:18: @3[0]: Coverage::Expression(4294967294) = 2 + 0 for $DIR/coverage_graphviz.rs:15:1 - 15:2<br/>Expression(bcb1 + 0) at 15:2-15:2<br/>    15:2-15:2: @3.Return: return</td></tr><tr><td align=\"left\" balign=\"left\">bb3: Return</td></tr></table>>];\n-    bcb0__Cov_0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb0</td></tr><tr><td align=\"left\" balign=\"left\"></td></tr><tr><td align=\"left\" balign=\"left\">Counter(bcb0) at 9:1-11:17<br/>    11:12-11:17: @1.Call: _2 = bar() -&gt; [return: bb2, unwind: bb5]</td></tr><tr><td align=\"left\" balign=\"left\">bb0: FalseUnwind<br/>bb1: Call</td></tr><tr><td align=\"left\" balign=\"left\">bb2: SwitchInt</td></tr></table>>];\n-    bcb2__Cov_0_3 -> bcb0__Cov_0_3 [label=<>];\n-    bcb0__Cov_0_3 -> bcb2__Cov_0_3 [label=<false>];\n-    bcb0__Cov_0_3 -> bcb1__Cov_0_3 [label=<otherwise>];\n+    bcb3__Cov_0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb3</td></tr><tr><td align=\"left\" balign=\"left\">Counter(bcb3) at 13:10-13:10<br/>    13:10-13:10: @5[0]: Coverage::Counter(2) for $DIR/coverage_graphviz.rs:13:10 - 13:11</td></tr><tr><td align=\"left\" balign=\"left\">bb5: Goto</td></tr></table>>];\n+    bcb2__Cov_0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb2</td></tr><tr><td align=\"left\" balign=\"left\">Expression(bcb1:(bcb0 + bcb3) - bcb3) at 12:13-12:18<br/>    12:13-12:18: @4[0]: Coverage::Expression(4294967293) = 4294967294 + 0 for $DIR/coverage_graphviz.rs:15:1 - 15:2<br/>Expression(bcb2:(bcb1:(bcb0 + bcb3) - bcb3) + 0) at 15:2-15:2<br/>    15:2-15:2: @4.Return: return</td></tr><tr><td align=\"left\" balign=\"left\">bb4: Return</td></tr></table>>];\n+    bcb1__Cov_0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb1</td></tr><tr><td align=\"left\" balign=\"left\">Expression(bcb0 + bcb3) at 10:5-11:17<br/>    11:12-11:17: @2.Call: _2 = bar() -&gt; [return: bb3, unwind: bb6]</td></tr><tr><td align=\"left\" balign=\"left\">bb1: FalseUnwind<br/>bb2: Call</td></tr><tr><td align=\"left\" balign=\"left\">bb3: SwitchInt</td></tr></table>>];\n+    bcb0__Cov_0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb0</td></tr><tr><td align=\"left\" balign=\"left\"></td></tr><tr><td align=\"left\" balign=\"left\">Counter(bcb0) at 9:1-9:11<br/>    </td></tr><tr><td align=\"left\" balign=\"left\">bb0: Goto</td></tr></table>>];\n+    bcb3__Cov_0_3 -> bcb1__Cov_0_3 [label=<>];\n+    bcb1__Cov_0_3 -> bcb3__Cov_0_3 [label=<false>];\n+    bcb1__Cov_0_3 -> bcb2__Cov_0_3 [label=<otherwise>];\n+    bcb0__Cov_0_3 -> bcb1__Cov_0_3 [label=<>];\n }"}, {"sha": "f810beeeee30c415eac063b2e7d49a94c7d03c27", "filename": "src/test/mir-opt/inline/inline_diverging.h.Inline.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.h.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.h.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.h.Inline.diff?ref=f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a", "patch": "@@ -47,7 +47,7 @@\n +         _4 = &_2;                        // scope 1 at $DIR/inline-diverging.rs:22:5: 22:22\n +         StorageLive(_9);                 // scope 1 at $DIR/inline-diverging.rs:22:5: 22:22\n +         _9 = const ();                   // scope 1 at $DIR/inline-diverging.rs:22:5: 22:22\n-+         goto -> bb1;                     // scope 4 at $DIR/inline-diverging.rs:22:5: 22:22\n++         goto -> bb1;                     // scope 5 at $DIR/inline-diverging.rs:22:5: 22:22\n       }\n   \n       bb1: {"}, {"sha": "34ba7dfdcc5bb8cea0a6d5709ee24c23a432a80d", "filename": "src/test/mir-opt/instrument_coverage.main.InstrumentCoverage.diff", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff?ref=f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a", "patch": "@@ -8,38 +8,43 @@\n       let mut _3: !;                       // in scope 0 at /the/src/instrument_coverage.rs:12:18: 14:10\n   \n       bb0: {\n-+         Coverage::Counter(1) for /the/src/instrument_coverage.rs:10:1 - 12:17; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n-          falseUnwind -> [real: bb1, cleanup: bb5]; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n++         Coverage::Counter(1) for /the/src/instrument_coverage.rs:10:1 - 10:11; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n+          goto -> bb1;                     // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n       }\n   \n       bb1: {\n++         Coverage::Expression(4294967295) = 1 + 2 for /the/src/instrument_coverage.rs:11:5 - 12:17; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n+          falseUnwind -> [real: bb2, cleanup: bb6]; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n+      }\n+  \n+      bb2: {\n           StorageLive(_2);                 // scope 0 at /the/src/instrument_coverage.rs:12:12: 12:17\n-          _2 = bar() -> [return: bb2, unwind: bb5]; // scope 0 at /the/src/instrument_coverage.rs:12:12: 12:17\n+          _2 = bar() -> [return: bb3, unwind: bb6]; // scope 0 at /the/src/instrument_coverage.rs:12:12: 12:17\n                                            // mir::Constant\n                                            // + span: /the/src/instrument_coverage.rs:12:12: 12:15\n                                            // + literal: Const { ty: fn() -> bool {bar}, val: Value(Scalar(<ZST>)) }\n       }\n   \n-      bb2: {\n-          switchInt(move _2) -> [false: bb4, otherwise: bb3]; // scope 0 at /the/src/instrument_coverage.rs:12:12: 12:17\n+      bb3: {\n+          switchInt(move _2) -> [false: bb5, otherwise: bb4]; // scope 0 at /the/src/instrument_coverage.rs:12:12: 12:17\n       }\n   \n-      bb3: {\n-+         Coverage::Expression(4294967294) = 2 + 0 for /the/src/instrument_coverage.rs:16:1 - 16:2; // scope 0 at /the/src/instrument_coverage.rs:16:2: 16:2\n-+         Coverage::Counter(2) for /the/src/instrument_coverage.rs:13:13 - 13:18; // scope 0 at /the/src/instrument_coverage.rs:16:2: 16:2\n+      bb4: {\n++         Coverage::Expression(4294967293) = 4294967294 + 0 for /the/src/instrument_coverage.rs:16:1 - 16:2; // scope 0 at /the/src/instrument_coverage.rs:16:2: 16:2\n++         Coverage::Expression(4294967294) = 4294967295 - 2 for /the/src/instrument_coverage.rs:13:13 - 13:18; // scope 0 at /the/src/instrument_coverage.rs:16:2: 16:2\n           _0 = const ();                   // scope 0 at /the/src/instrument_coverage.rs:13:13: 13:18\n           StorageDead(_2);                 // scope 0 at /the/src/instrument_coverage.rs:14:9: 14:10\n           return;                          // scope 0 at /the/src/instrument_coverage.rs:16:2: 16:2\n       }\n   \n-      bb4: {\n-+         Coverage::Expression(4294967295) = 1 - 2 for /the/src/instrument_coverage.rs:14:10 - 14:11; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n+      bb5: {\n++         Coverage::Counter(2) for /the/src/instrument_coverage.rs:14:10 - 14:11; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n           _1 = const ();                   // scope 0 at /the/src/instrument_coverage.rs:14:10: 14:10\n           StorageDead(_2);                 // scope 0 at /the/src/instrument_coverage.rs:14:9: 14:10\n-          goto -> bb0;                     // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n+          goto -> bb1;                     // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n       }\n   \n-      bb5 (cleanup): {\n+      bb6 (cleanup): {\n           resume;                          // scope 0 at /the/src/instrument_coverage.rs:10:1: 16:2\n       }\n   }"}, {"sha": "1c5a890023648478c3c714ba208529b1d27a3e70", "filename": "src/test/mir-opt/simplify_cfg.main.SimplifyCfg-early-opt.diff", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-early-opt.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-early-opt.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-early-opt.diff?ref=f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a", "patch": "@@ -8,40 +8,44 @@\n       let mut _3: !;                       // in scope 0 at $DIR/simplify_cfg.rs:9:18: 11:10\n   \n       bb0: {\n--         goto -> bb1;                     // scope 0 at $DIR/simplify_cfg.rs:8:5: 12:6\n+          goto -> bb1;                     // scope 0 at $DIR/simplify_cfg.rs:8:5: 12:6\n+      }\n+  \n+      bb1: {\n+-         goto -> bb2;                     // scope 0 at $DIR/simplify_cfg.rs:8:5: 12:6\n -     }\n - \n--     bb1: {\n+-     bb2: {\n           StorageLive(_2);                 // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n--         _2 = bar() -> [return: bb2, unwind: bb5]; // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n-+         _2 = bar() -> [return: bb1, unwind: bb4]; // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n+-         _2 = bar() -> [return: bb3, unwind: bb6]; // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n++         _2 = bar() -> [return: bb2, unwind: bb5]; // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n                                            // mir::Constant\n                                            // + span: $DIR/simplify_cfg.rs:9:12: 9:15\n                                            // + literal: Const { ty: fn() -> bool {bar}, val: Value(Scalar(<ZST>)) }\n       }\n   \n--     bb2: {\n--         switchInt(move _2) -> [false: bb4, otherwise: bb3]; // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n-+     bb1: {\n-+         switchInt(move _2) -> [false: bb3, otherwise: bb2]; // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n-      }\n-  \n -     bb3: {\n+-         switchInt(move _2) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n +     bb2: {\n++         switchInt(move _2) -> [false: bb4, otherwise: bb3]; // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n+      }\n+  \n+-     bb4: {\n++     bb3: {\n           _0 = const ();                   // scope 0 at $DIR/simplify_cfg.rs:10:13: 10:18\n           StorageDead(_2);                 // scope 0 at $DIR/simplify_cfg.rs:11:9: 11:10\n           return;                          // scope 0 at $DIR/simplify_cfg.rs:13:2: 13:2\n       }\n   \n--     bb4: {\n-+     bb3: {\n+-     bb5: {\n++     bb4: {\n           _1 = const ();                   // scope 0 at $DIR/simplify_cfg.rs:11:10: 11:10\n           StorageDead(_2);                 // scope 0 at $DIR/simplify_cfg.rs:11:9: 11:10\n-          goto -> bb0;                     // scope 0 at $DIR/simplify_cfg.rs:8:5: 12:6\n+          goto -> bb1;                     // scope 0 at $DIR/simplify_cfg.rs:8:5: 12:6\n       }\n   \n--     bb5 (cleanup): {\n-+     bb4 (cleanup): {\n+-     bb6 (cleanup): {\n++     bb5 (cleanup): {\n           resume;                          // scope 0 at $DIR/simplify_cfg.rs:7:1: 13:2\n       }\n   }"}, {"sha": "b079bd7b57c42c751a680808b6b9cc23976d0bd8", "filename": "src/test/mir-opt/simplify_cfg.main.SimplifyCfg-initial.diff", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-initial.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-initial.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-initial.diff?ref=f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a", "patch": "@@ -8,38 +8,35 @@\n       let mut _3: !;                       // in scope 0 at $DIR/simplify_cfg.rs:9:18: 11:10\n   \n       bb0: {\n--         goto -> bb1;                     // scope 0 at $DIR/simplify_cfg.rs:8:5: 12:6\n-+         falseUnwind -> [real: bb1, cleanup: bb5]; // scope 0 at $DIR/simplify_cfg.rs:8:5: 12:6\n+          goto -> bb1;                     // scope 0 at $DIR/simplify_cfg.rs:8:5: 12:6\n       }\n   \n       bb1: {\n -         falseUnwind -> [real: bb2, cleanup: bb11]; // scope 0 at $DIR/simplify_cfg.rs:8:5: 12:6\n--     }\n-- \n--     bb2: {\n++         falseUnwind -> [real: bb2, cleanup: bb6]; // scope 0 at $DIR/simplify_cfg.rs:8:5: 12:6\n+      }\n+  \n+      bb2: {\n           StorageLive(_2);                 // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n -         _2 = bar() -> [return: bb3, unwind: bb11]; // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n-+         _2 = bar() -> [return: bb2, unwind: bb5]; // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n++         _2 = bar() -> [return: bb3, unwind: bb6]; // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n                                            // mir::Constant\n                                            // + span: $DIR/simplify_cfg.rs:9:12: 9:15\n                                            // + literal: Const { ty: fn() -> bool {bar}, val: Value(Scalar(<ZST>)) }\n       }\n   \n--     bb3: {\n--         switchInt(move _2) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n-+     bb2: {\n-+         switchInt(move _2) -> [false: bb4, otherwise: bb3]; // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n+      bb3: {\n+          switchInt(move _2) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n       }\n   \n--     bb4: {\n-+     bb3: {\n+      bb4: {\n           _0 = const ();                   // scope 0 at $DIR/simplify_cfg.rs:10:13: 10:18\n -         goto -> bb10;                    // scope 0 at $DIR/simplify_cfg.rs:10:13: 10:18\n +         StorageDead(_2);                 // scope 0 at $DIR/simplify_cfg.rs:11:9: 11:10\n +         return;                          // scope 0 at $DIR/simplify_cfg.rs:13:2: 13:2\n       }\n   \n--     bb5: {\n+      bb5: {\n -         goto -> bb8;                     // scope 0 at $DIR/simplify_cfg.rs:9:12: 9:17\n -     }\n - \n@@ -52,15 +49,13 @@\n -     }\n - \n -     bb8: {\n-+     bb4: {\n           _1 = const ();                   // scope 0 at $DIR/simplify_cfg.rs:11:10: 11:10\n -         goto -> bb9;                     // scope 0 at $DIR/simplify_cfg.rs:9:9: 11:10\n -     }\n - \n -     bb9: {\n           StorageDead(_2);                 // scope 0 at $DIR/simplify_cfg.rs:11:9: 11:10\n--         goto -> bb1;                     // scope 0 at $DIR/simplify_cfg.rs:8:5: 12:6\n-+         goto -> bb0;                     // scope 0 at $DIR/simplify_cfg.rs:8:5: 12:6\n+          goto -> bb1;                     // scope 0 at $DIR/simplify_cfg.rs:8:5: 12:6\n       }\n   \n -     bb10: {\n@@ -69,7 +64,7 @@\n -     }\n - \n -     bb11 (cleanup): {\n-+     bb5 (cleanup): {\n++     bb6 (cleanup): {\n           resume;                          // scope 0 at $DIR/simplify_cfg.rs:7:1: 13:2\n       }\n   }"}, {"sha": "ec2d161251b00fe22f0da2610f437ae23b146f74", "filename": "src/test/mir-opt/while_storage.while_loop.PreCodegen.after.mir", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a/src%2Ftest%2Fmir-opt%2Fwhile_storage.while_loop.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a/src%2Ftest%2Fmir-opt%2Fwhile_storage.while_loop.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fwhile_storage.while_loop.PreCodegen.after.mir?ref=f1f1c8fa505b8b7e2cab75c30e6f7f8a62b5ca7a", "patch": "@@ -9,51 +9,55 @@ fn while_loop(_1: bool) -> () {\n     let mut _5: bool;                    // in scope 0 at $DIR/while-storage.rs:11:21: 11:22\n \n     bb0: {\n+        goto -> bb1;                     // scope 0 at $DIR/while-storage.rs:10:5: 14:6\n+    }\n+\n+    bb1: {\n         StorageLive(_2);                 // scope 0 at $DIR/while-storage.rs:10:11: 10:22\n         StorageLive(_3);                 // scope 0 at $DIR/while-storage.rs:10:20: 10:21\n         _3 = _1;                         // scope 0 at $DIR/while-storage.rs:10:20: 10:21\n-        _2 = get_bool(move _3) -> bb1;   // scope 0 at $DIR/while-storage.rs:10:11: 10:22\n+        _2 = get_bool(move _3) -> bb2;   // scope 0 at $DIR/while-storage.rs:10:11: 10:22\n                                          // mir::Constant\n                                          // + span: $DIR/while-storage.rs:10:11: 10:19\n                                          // + literal: Const { ty: fn(bool) -> bool {get_bool}, val: Value(Scalar(<ZST>)) }\n     }\n \n-    bb1: {\n+    bb2: {\n         StorageDead(_3);                 // scope 0 at $DIR/while-storage.rs:10:21: 10:22\n-        switchInt(move _2) -> [false: bb6, otherwise: bb2]; // scope 0 at $DIR/while-storage.rs:10:11: 10:22\n+        switchInt(move _2) -> [false: bb7, otherwise: bb3]; // scope 0 at $DIR/while-storage.rs:10:11: 10:22\n     }\n \n-    bb2: {\n+    bb3: {\n         StorageLive(_4);                 // scope 0 at $DIR/while-storage.rs:11:12: 11:23\n         StorageLive(_5);                 // scope 0 at $DIR/while-storage.rs:11:21: 11:22\n         _5 = _1;                         // scope 0 at $DIR/while-storage.rs:11:21: 11:22\n-        _4 = get_bool(move _5) -> bb3;   // scope 0 at $DIR/while-storage.rs:11:12: 11:23\n+        _4 = get_bool(move _5) -> bb4;   // scope 0 at $DIR/while-storage.rs:11:12: 11:23\n                                          // mir::Constant\n                                          // + span: $DIR/while-storage.rs:11:12: 11:20\n                                          // + literal: Const { ty: fn(bool) -> bool {get_bool}, val: Value(Scalar(<ZST>)) }\n     }\n \n-    bb3: {\n+    bb4: {\n         StorageDead(_5);                 // scope 0 at $DIR/while-storage.rs:11:22: 11:23\n-        switchInt(move _4) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/while-storage.rs:11:12: 11:23\n+        switchInt(move _4) -> [false: bb6, otherwise: bb5]; // scope 0 at $DIR/while-storage.rs:11:12: 11:23\n     }\n \n-    bb4: {\n+    bb5: {\n         StorageDead(_4);                 // scope 0 at $DIR/while-storage.rs:13:9: 13:10\n-        goto -> bb7;                     // scope 0 at no-location\n+        goto -> bb8;                     // scope 0 at no-location\n     }\n \n-    bb5: {\n+    bb6: {\n         StorageDead(_4);                 // scope 0 at $DIR/while-storage.rs:13:9: 13:10\n         StorageDead(_2);                 // scope 0 at $DIR/while-storage.rs:14:5: 14:6\n-        goto -> bb0;                     // scope 0 at $DIR/while-storage.rs:10:5: 14:6\n+        goto -> bb1;                     // scope 0 at $DIR/while-storage.rs:10:5: 14:6\n     }\n \n-    bb6: {\n-        goto -> bb7;                     // scope 0 at no-location\n+    bb7: {\n+        goto -> bb8;                     // scope 0 at no-location\n     }\n \n-    bb7: {\n+    bb8: {\n         StorageDead(_2);                 // scope 0 at $DIR/while-storage.rs:14:5: 14:6\n         return;                          // scope 0 at $DIR/while-storage.rs:15:2: 15:2\n     }"}]}