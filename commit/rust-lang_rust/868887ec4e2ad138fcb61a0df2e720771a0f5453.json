{"sha": "868887ec4e2ad138fcb61a0df2e720771a0f5453", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ODg4N2VjNGUyYWQxMzhmY2I2MWEwZGYyZTcyMDc3MWEwZjU0NTM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-28T17:02:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-28T17:02:24Z"}, "message": "Merge #7480\n\n7480: ItemTree: Treat items in `MacroStmts` as top-level r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "085fc53c200e965e576ee7ba91cd6cd8b12595f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/085fc53c200e965e576ee7ba91cd6cd8b12595f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/868887ec4e2ad138fcb61a0df2e720771a0f5453", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgEu4gCRBK7hj4Ov3rIwAAdHIIACh3FbzTdW3UkekQjyerxnSl\nQKxYj3/9JPVhlmcmJE1u6FMo41a/42jHZ8qhIdl3Ov/rQi3bHYVtWRezkFEFIjxm\nEct2/u+GgDcKBnfG1VrQzDs6oTGQVKvemcf2KJqiT3MrQLmSN9VBJNl0LukQ/ISA\nvw6Ujh030d6Ly/541PdFK/chjaLpHxPgD8SC87lqgdrCg5ekrC4EX65+MYOTh/Eb\nuQVqwDG69VLpAZahWYvd6O3w21omJB6ahYOJDiPM6q8sYSTdLRrGn0ARRnp5AhUY\nJ6xzm47a9iTHuxD8DhjxU/NtTjSxju89rVV14kdz3ZXumKJfGPyA66aHiYtwB0s=\n=sL4L\n-----END PGP SIGNATURE-----\n", "payload": "tree 085fc53c200e965e576ee7ba91cd6cd8b12595f7\nparent f421ee672253499b8ca8d1badf98db42525a5216\nparent 2aebde6c0b47a1f2ce3d49af457683258d813cdc\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1611853344 +0000\ncommitter GitHub <noreply@github.com> 1611853344 +0000\n\nMerge #7480\n\n7480: ItemTree: Treat items in `MacroStmts` as top-level r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/868887ec4e2ad138fcb61a0df2e720771a0f5453", "html_url": "https://github.com/rust-lang/rust/commit/868887ec4e2ad138fcb61a0df2e720771a0f5453", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/868887ec4e2ad138fcb61a0df2e720771a0f5453/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f421ee672253499b8ca8d1badf98db42525a5216", "url": "https://api.github.com/repos/rust-lang/rust/commits/f421ee672253499b8ca8d1badf98db42525a5216", "html_url": "https://github.com/rust-lang/rust/commit/f421ee672253499b8ca8d1badf98db42525a5216"}, {"sha": "2aebde6c0b47a1f2ce3d49af457683258d813cdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/2aebde6c0b47a1f2ce3d49af457683258d813cdc", "html_url": "https://github.com/rust-lang/rust/commit/2aebde6c0b47a1f2ce3d49af457683258d813cdc"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "42d9f09472dab3abc77d9a56c028d6b203c4cffb", "filename": "crates/hir_def/src/item_tree.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/868887ec4e2ad138fcb61a0df2e720771a0f5453/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868887ec4e2ad138fcb61a0df2e720771a0f5453/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs?ref=868887ec4e2ad138fcb61a0df2e720771a0f5453", "patch": "@@ -98,15 +98,17 @@ impl ItemTree {\n                     ctx.lower_module_items(&items)\n                 },\n                 ast::MacroStmts(stmts) => {\n-                    ctx.lower_inner_items(stmts.syntax())\n+                    // The produced statements can include items, which should be added as top-level\n+                    // items.\n+                    ctx.lower_macro_stmts(stmts)\n                 },\n-                // Macros can expand to expressions. We return an empty item tree in this case, but\n-                // still need to collect inner items.\n                 ast::Expr(e) => {\n+                    // Macros can expand to expressions. We return an empty item tree in this case, but\n+                    // still need to collect inner items.\n                     ctx.lower_inner_items(e.syntax())\n                 },\n                 _ => {\n-                    panic!(\"cannot create item tree from {:?}\", syntax);\n+                    panic!(\"cannot create item tree from {:?} {}\", syntax, syntax);\n                 },\n             }\n         };"}, {"sha": "acc001addab9ce296f66cb03720a41d04b3923b6", "filename": "crates/hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/868887ec4e2ad138fcb61a0df2e720771a0f5453/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868887ec4e2ad138fcb61a0df2e720771a0f5453/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=868887ec4e2ad138fcb61a0df2e720771a0f5453", "patch": "@@ -61,6 +61,32 @@ impl Ctx {\n         self.tree\n     }\n \n+    pub(super) fn lower_macro_stmts(mut self, stmts: ast::MacroStmts) -> ItemTree {\n+        self.tree.top_level = stmts\n+            .statements()\n+            .filter_map(|stmt| match stmt {\n+                ast::Stmt::Item(item) => Some(item),\n+                _ => None,\n+            })\n+            .flat_map(|item| self.lower_mod_item(&item, false))\n+            .flat_map(|items| items.0)\n+            .collect();\n+\n+        // Non-items need to have their inner items collected.\n+        for stmt in stmts.statements() {\n+            match stmt {\n+                ast::Stmt::ExprStmt(_) | ast::Stmt::LetStmt(_) => {\n+                    self.collect_inner_items(stmt.syntax())\n+                }\n+                _ => {}\n+            }\n+        }\n+        if let Some(expr) = stmts.expr() {\n+            self.collect_inner_items(expr.syntax());\n+        }\n+        self.tree\n+    }\n+\n     pub(super) fn lower_inner_items(mut self, within: &SyntaxNode) -> ItemTree {\n         self.collect_inner_items(within);\n         self.tree"}]}