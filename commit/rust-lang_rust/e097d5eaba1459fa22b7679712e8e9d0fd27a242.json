{"sha": "e097d5eaba1459fa22b7679712e8e9d0fd27a242", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwOTdkNWVhYmExNDU5ZmEyMmI3Njc5NzEyZThlOWQwZmQyN2EyNDI=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-15T07:16:10Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-16T02:16:21Z"}, "message": "rm CopyableOrderedIter\n\nreplaced with OrdIterator", "tree": {"sha": "853aed80b5736e23af08a7a3b770bbde9fdf0baf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/853aed80b5736e23af08a7a3b770bbde9fdf0baf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e097d5eaba1459fa22b7679712e8e9d0fd27a242", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e097d5eaba1459fa22b7679712e8e9d0fd27a242", "html_url": "https://github.com/rust-lang/rust/commit/e097d5eaba1459fa22b7679712e8e9d0fd27a242", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e097d5eaba1459fa22b7679712e8e9d0fd27a242/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c547e42c859b1b0051293c48c691d8388bad332", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c547e42c859b1b0051293c48c691d8388bad332", "html_url": "https://github.com/rust-lang/rust/commit/6c547e42c859b1b0051293c48c691d8388bad332"}], "stats": {"total": 37, "additions": 4, "deletions": 33}, "files": [{"sha": "9ae241c7030fcb96302a90d652d67f3a6062b3ed", "filename": "src/librustc/middle/trans/adt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e097d5eaba1459fa22b7679712e8e9d0fd27a242/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e097d5eaba1459fa22b7679712e8e9d0fd27a242/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs?ref=e097d5eaba1459fa22b7679712e8e9d0fd27a242", "patch": "@@ -165,7 +165,7 @@ fn represent_type_uncached(cx: &mut CrateContext, t: ty::t) -> Repr {\n             if cases.all(|c| c.tys.len() == 0) {\n                 // All bodies empty -> intlike\n                 let discrs = cases.map(|c| c.discr);\n-                return CEnum(discrs.min(), discrs.max());\n+                return CEnum(*discrs.iter().min().unwrap(), *discrs.iter().max().unwrap());\n             }\n \n             if cases.len() == 1 {\n@@ -509,7 +509,7 @@ pub fn trans_const(ccx: &mut CrateContext, r: &Repr, discr: int,\n         }\n         General(ref cases) => {\n             let case = &cases[discr as uint];\n-            let max_sz = cases.map(|s| s.size).max();\n+            let max_sz = cases.iter().transform(|x| x.size).max().unwrap();\n             let discr_ty = C_int(ccx, discr);\n             let contents = build_const_struct(ccx, case,\n                                               ~[discr_ty] + vals);"}, {"sha": "39f3a81ad218f49cc15a7da6b900b58031ebdcdb", "filename": "src/libstd/old_iter.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e097d5eaba1459fa22b7679712e8e9d0fd27a242/src%2Flibstd%2Fold_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e097d5eaba1459fa22b7679712e8e9d0fd27a242/src%2Flibstd%2Fold_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_iter.rs?ref=e097d5eaba1459fa22b7679712e8e9d0fd27a242", "patch": "@@ -54,11 +54,6 @@ pub trait CopyableIter<A:Copy> {\n     fn find(&self, p: &fn(&A) -> bool) -> Option<A>;\n }\n \n-pub trait CopyableOrderedIter<A:Copy + Ord> {\n-    fn min(&self) -> A;\n-    fn max(&self) -> A;\n-}\n-\n // A trait for sequences that can be built by imperatively pushing elements\n // onto them.\n pub trait Buildable<A> {"}, {"sha": "60165ed5daebef8c3ad79d0de947f8f183a47720", "filename": "src/libstd/prelude.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e097d5eaba1459fa22b7679712e8e9d0fd27a242/src%2Flibstd%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e097d5eaba1459fa22b7679712e8e9d0fd27a242/src%2Flibstd%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude.rs?ref=e097d5eaba1459fa22b7679712e8e9d0fd27a242", "patch": "@@ -47,9 +47,9 @@ pub use char::Char;\n pub use container::{Container, Mutable, Map, Set};\n pub use hash::Hash;\n pub use old_iter::{BaseIter, ReverseIter, ExtendedIter, EqIter};\n-pub use old_iter::{CopyableIter, CopyableOrderedIter};\n+pub use old_iter::CopyableIter;\n pub use iter::{Times, FromIter};\n-pub use iterator::{Iterator, IteratorUtil};\n+pub use iterator::{Iterator, IteratorUtil, OrdIterator};\n pub use num::{Num, NumCast};\n pub use num::{Orderable, Signed, Unsigned, Round};\n pub use num::{Algebraic, Trigonometric, Exponential, Hyperbolic};"}, {"sha": "7b4764164b54c49f17ab1ebb73941055fc1b86dc", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e097d5eaba1459fa22b7679712e8e9d0fd27a242/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e097d5eaba1459fa22b7679712e8e9d0fd27a242/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=e097d5eaba1459fa22b7679712e8e9d0fd27a242", "patch": "@@ -2619,23 +2619,6 @@ impl<A:Copy> old_iter::CopyableIter<A> for @[A] {\n     }\n }\n \n-impl<'self,A:Copy + Ord> old_iter::CopyableOrderedIter<A> for &'self [A] {\n-    fn min(&self) -> A { old_iter::min(self) }\n-    fn max(&self) -> A { old_iter::max(self) }\n-}\n-\n-// FIXME(#4148): This should be redundant\n-impl<A:Copy + Ord> old_iter::CopyableOrderedIter<A> for ~[A] {\n-    fn min(&self) -> A { old_iter::min(self) }\n-    fn max(&self) -> A { old_iter::max(self) }\n-}\n-\n-// FIXME(#4148): This should be redundant\n-impl<A:Copy + Ord> old_iter::CopyableOrderedIter<A> for @[A] {\n-    fn min(&self) -> A { old_iter::min(self) }\n-    fn max(&self) -> A { old_iter::max(self) }\n-}\n-\n impl<A:Clone> Clone for ~[A] {\n     #[inline]\n     fn clone(&self) -> ~[A] {"}, {"sha": "67e712f0596c9bddb89f3520392eff12d4ec8994", "filename": "src/libsyntax/opt_vec.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e097d5eaba1459fa22b7679712e8e9d0fd27a242/src%2Flibsyntax%2Fopt_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e097d5eaba1459fa22b7679712e8e9d0fd27a242/src%2Flibsyntax%2Fopt_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fopt_vec.rs?ref=e097d5eaba1459fa22b7679712e8e9d0fd27a242", "patch": "@@ -196,10 +196,3 @@ impl<A: Copy> old_iter::CopyableIter<A> for OptVec<A> {\n         old_iter::find(self, f)\n     }\n }\n-\n-impl<A: Copy+Ord> old_iter::CopyableOrderedIter<A> for OptVec<A> {\n-    #[inline(always)]\n-    fn min(&self) -> A { old_iter::min(self) }\n-    #[inline(always)]\n-    fn max(&self) -> A { old_iter::max(self) }\n-}"}]}