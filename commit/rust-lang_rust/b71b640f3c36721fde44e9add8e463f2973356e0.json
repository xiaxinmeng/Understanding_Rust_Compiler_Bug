{"sha": "b71b640f3c36721fde44e9add8e463f2973356e0", "node_id": "C_kwDOAAsO6NoAKGI3MWI2NDBmM2MzNjcyMWZkZTQ0ZTlhZGQ4ZTQ2M2YyOTczMzU2ZTA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-15T06:00:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-15T06:00:16Z"}, "message": "Rollup merge of #101810 - raldone01:feat/const_partial_eq_ordering, r=fee1-dead\n\nConstify `PartialEq` for `Ordering`\n\nAdds `impl const PartialEq for Ordering {}` to #92391.", "tree": {"sha": "4f9ce0aeef86a98c700e2a787d346bc3014b0332", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f9ce0aeef86a98c700e2a787d346bc3014b0332"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b71b640f3c36721fde44e9add8e463f2973356e0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjIr9wCRBK7hj4Ov3rIwAAI0wIAAtAP22OkuKIX8FLHvAHjY9b\nHTn3jxaK2WCXix6eX0eoS7/G4X97p3veRKYg1amRp6x9tqhNLKFX7pjLM5akwu/W\nMQIXXBum6vp+JumCR4jHLx5WH3FNJYiJtP4QLNUl4JchE87+yPG3PrhTpfp/jtx6\n4WdhtfQPk2tc4kv5qe4VXOUjhvYVEytNSppWURwQzAT9iLQBpfBsxFIN2tgbDM7J\n5VtFYBc7wI9xbtNx2FmW4K/HUgq15m9rzpam/u2avOozMwl5/QY0FqhKj81FqZwn\nPc8RLG3TnVXjBfhWsk/U9MOXHHDTuZaPNf/cy9Old++vcrrcNkewVJgREplzGZA=\n=0rDb\n-----END PGP SIGNATURE-----\n", "payload": "tree 4f9ce0aeef86a98c700e2a787d346bc3014b0332\nparent a88b96b81ba4f7e77727440999e5f26b967cc757\nparent f4ff6860dcefbe59fac837f7208a83b5f83b2820\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1663221616 +0200\ncommitter GitHub <noreply@github.com> 1663221616 +0200\n\nRollup merge of #101810 - raldone01:feat/const_partial_eq_ordering, r=fee1-dead\n\nConstify `PartialEq` for `Ordering`\n\nAdds `impl const PartialEq for Ordering {}` to #92391.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b71b640f3c36721fde44e9add8e463f2973356e0", "html_url": "https://github.com/rust-lang/rust/commit/b71b640f3c36721fde44e9add8e463f2973356e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b71b640f3c36721fde44e9add8e463f2973356e0/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a88b96b81ba4f7e77727440999e5f26b967cc757", "url": "https://api.github.com/repos/rust-lang/rust/commits/a88b96b81ba4f7e77727440999e5f26b967cc757", "html_url": "https://github.com/rust-lang/rust/commit/a88b96b81ba4f7e77727440999e5f26b967cc757"}, {"sha": "f4ff6860dcefbe59fac837f7208a83b5f83b2820", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4ff6860dcefbe59fac837f7208a83b5f83b2820", "html_url": "https://github.com/rust-lang/rust/commit/f4ff6860dcefbe59fac837f7208a83b5f83b2820"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "d9f2d3d64d667113ed660b38dc7ee95b7e34da09", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b71b640f3c36721fde44e9add8e463f2973356e0/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b71b640f3c36721fde44e9add8e463f2973356e0/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=b71b640f3c36721fde44e9add8e463f2973356e0", "patch": "@@ -23,6 +23,7 @@\n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n use crate::marker::Destruct;\n+use crate::marker::StructuralPartialEq;\n \n use self::Ordering::*;\n \n@@ -338,7 +339,7 @@ pub struct AssertParamIsEq<T: Eq + ?Sized> {\n /// let result = 2.cmp(&1);\n /// assert_eq!(Ordering::Greater, result);\n /// ```\n-#[derive(Clone, Copy, PartialEq, Eq, Debug, Hash)]\n+#[derive(Clone, Copy, Eq, Debug, Hash)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[repr(i8)]\n pub enum Ordering {\n@@ -884,6 +885,18 @@ pub macro Ord($item:item) {\n     /* compiler built-in */\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl StructuralPartialEq for Ordering {}\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[rustc_const_unstable(feature = \"const_cmp\", issue = \"92391\")]\n+impl const PartialEq for Ordering {\n+    #[inline]\n+    fn eq(&self, other: &Self) -> bool {\n+        (*self as i32).eq(&(*other as i32))\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_const_unstable(feature = \"const_cmp\", issue = \"92391\")]\n impl const Ord for Ordering {"}]}