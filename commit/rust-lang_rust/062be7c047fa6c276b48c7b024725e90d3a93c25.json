{"sha": "062be7c047fa6c276b48c7b024725e90d3a93c25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MmJlN2MwNDdmYTZjMjc2YjQ4YzdiMDI0NzI1ZTkwZDNhOTNjMjU=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-30T12:30:15Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-03T11:08:51Z"}, "message": "Comparing non-pointer-size types should be possible", "tree": {"sha": "d3e84f52b9093bd9560043a5730adb3f69be2f53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3e84f52b9093bd9560043a5730adb3f69be2f53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/062be7c047fa6c276b48c7b024725e90d3a93c25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/062be7c047fa6c276b48c7b024725e90d3a93c25", "html_url": "https://github.com/rust-lang/rust/commit/062be7c047fa6c276b48c7b024725e90d3a93c25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/062be7c047fa6c276b48c7b024725e90d3a93c25/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9655aaf3aa74e948935b1749fbdff2f8f774226b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9655aaf3aa74e948935b1749fbdff2f8f774226b", "html_url": "https://github.com/rust-lang/rust/commit/9655aaf3aa74e948935b1749fbdff2f8f774226b"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "f36e749dc9279a010a24d8717c1cd25205619086", "filename": "src/operator.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/062be7c047fa6c276b48c7b024725e90d3a93c25/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/062be7c047fa6c276b48c7b024725e90d3a93c25/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=062be7c047fa6c276b48c7b024725e90d3a93c25", "patch": "@@ -52,11 +52,13 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n             16 => I128,\n             _ => unreachable!(),\n         }, true);\n-        let left_kind = match self.layout_of(left_ty)?.abi {\n+        let left_layout = self.layout_of(left_ty)?;\n+        let left_kind = match left_layout.abi {\n             ty::layout::Abi::Scalar(ref scalar) => scalar.value,\n             _ => Err(EvalErrorKind::TypeNotPrimitive(left_ty))?,\n         };\n-        let right_kind = match self.layout_of(right_ty)?.abi {\n+        let right_layout = self.layout_of(right_ty)?;\n+        let right_kind = match right_layout.abi {\n             ty::layout::Abi::Scalar(ref scalar) => scalar.value,\n             _ => Err(EvalErrorKind::TypeNotPrimitive(right_ty))?,\n         };\n@@ -77,7 +79,7 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n             Eq if left_kind == right_kind => {\n                 let result = match (left, right) {\n                     (Scalar::Bits { .. }, Scalar::Bits { .. }) => {\n-                        left.to_bits(self.memory.pointer_size())? == right.to_bits(self.memory.pointer_size())?\n+                        left.to_bits(left_layout.size)? == right.to_bits(right_layout.size)?\n                     },\n                     (Scalar::Ptr(left), Scalar::Ptr(right)) => left == right,\n                     _ => false,\n@@ -87,7 +89,7 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n             Ne if left_kind == right_kind => {\n                 let result = match (left, right) {\n                     (Scalar::Bits { .. }, Scalar::Bits { .. }) => {\n-                        left.to_bits(self.memory.pointer_size())? != right.to_bits(self.memory.pointer_size())?\n+                        left.to_bits(left_layout.size)? != right.to_bits(right_layout.size)?\n                     },\n                     (Scalar::Ptr(left), Scalar::Ptr(right)) => left != right,\n                     _ => true,"}]}