{"sha": "d2c2fbe7ca25affb69715a39922a91875eaad9c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyYzJmYmU3Y2EyNWFmZmI2OTcxNWEzOTkyMmE5MTg3NWVhYWQ5Yzc=", "commit": {"author": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-08-09T14:04:38Z"}, "committer": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-08-09T14:04:38Z"}, "message": "Added timed_wait to condition variables.", "tree": {"sha": "f9e987106358b83d06ddc00c6f8c2a459e67885a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9e987106358b83d06ddc00c6f8c2a459e67885a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2c2fbe7ca25affb69715a39922a91875eaad9c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2c2fbe7ca25affb69715a39922a91875eaad9c7", "html_url": "https://github.com/rust-lang/rust/commit/d2c2fbe7ca25affb69715a39922a91875eaad9c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2c2fbe7ca25affb69715a39922a91875eaad9c7/comments", "author": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8395d46163a056f7b48f50d979004786d6282fe0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8395d46163a056f7b48f50d979004786d6282fe0", "html_url": "https://github.com/rust-lang/rust/commit/8395d46163a056f7b48f50d979004786d6282fe0"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "85aa5860c78bfa463ad0825ae284b41a79886d37", "filename": "src/rt/globals.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2c2fbe7ca25affb69715a39922a91875eaad9c7/src%2Frt%2Fglobals.h", "raw_url": "https://github.com/rust-lang/rust/raw/d2c2fbe7ca25affb69715a39922a91875eaad9c7/src%2Frt%2Fglobals.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fglobals.h?ref=d2c2fbe7ca25affb69715a39922a91875eaad9c7", "patch": "@@ -20,12 +20,14 @@ extern \"C\" {\n }\n #elif defined(__GNUC__)\n #include <unistd.h>\n+#include <sys/time.h>\n #include <sys/types.h>\n #include <sys/stat.h>\n #include <fcntl.h>\n #include <dlfcn.h>\n #include <pthread.h>\n #include <errno.h>\n+#include <time.h>\n #else\n #error \"Platform not supported.\"\n #endif"}, {"sha": "c34ab7f42aacc8793c4c6874153da3f88c754827", "filename": "src/rt/sync/condition_variable.cpp", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d2c2fbe7ca25affb69715a39922a91875eaad9c7/src%2Frt%2Fsync%2Fcondition_variable.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/d2c2fbe7ca25affb69715a39922a91875eaad9c7/src%2Frt%2Fsync%2Fcondition_variable.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fsync%2Fcondition_variable.cpp?ref=d2c2fbe7ca25affb69715a39922a91875eaad9c7", "patch": "@@ -9,14 +9,16 @@\n \n // #define TRACE\n \n-condition_variable::condition_variable() {\n #if defined(__WIN32__)\n+condition_variable::condition_variable() {\n     _event = CreateEvent(NULL, FALSE, FALSE, NULL);\n+}\n #else\n+condition_variable::condition_variable() {\n     pthread_cond_init(&_cond, NULL);\n     pthread_mutex_init(&_mutex, NULL);\n-#endif\n }\n+#endif\n \n condition_variable::~condition_variable() {\n #if defined(__WIN32__)\n@@ -31,15 +33,31 @@ condition_variable::~condition_variable() {\n  * Wait indefinitely until condition is signaled.\n  */\n void condition_variable::wait() {\n+    timed_wait(0);\n+}\n+\n+void condition_variable::timed_wait(size_t timeout_in_ns) {\n #ifdef TRACE\n-    printf(\"waiting on condition_variable: 0x%\" PRIxPTR \"\\n\",\n-           (uintptr_t)this);\n+    printf(\"waiting on condition_variable: 0x%\" PRIxPTR \" for %d ns. \\n\",\n+           (uintptr_t) this, (int) timeout_in_ns);\n #endif\n #if defined(__WIN32__)\n     WaitForSingleObject(_event, INFINITE);\n #else\n     pthread_mutex_lock(&_mutex);\n-    pthread_cond_wait(&_cond, &_mutex);\n+    // wait() automatically releases the mutex while it waits, and acquires\n+    // it right before exiting. This allows signal() to acquire the mutex\n+    // when signaling.)\n+    if (timeout_in_ns == 0) {\n+        pthread_cond_wait(&_cond, &_mutex);\n+    } else {\n+        timeval time_val;\n+        gettimeofday(&time_val, NULL);\n+        timespec time_spec;\n+        time_spec.tv_sec = time_val.tv_sec + 0;\n+        time_spec.tv_nsec = time_val.tv_usec * 1000 + timeout_in_ns;\n+        pthread_cond_timedwait(&_cond, &_mutex, &time_spec);\n+    }\n     pthread_mutex_unlock(&_mutex);\n #endif\n #ifdef TRACE"}, {"sha": "f336a7f2a6e135938a97136500794045b7a16573", "filename": "src/rt/sync/condition_variable.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d2c2fbe7ca25affb69715a39922a91875eaad9c7/src%2Frt%2Fsync%2Fcondition_variable.h", "raw_url": "https://github.com/rust-lang/rust/raw/d2c2fbe7ca25affb69715a39922a91875eaad9c7/src%2Frt%2Fsync%2Fcondition_variable.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fsync%2Fcondition_variable.h?ref=d2c2fbe7ca25affb69715a39922a91875eaad9c7", "patch": "@@ -13,6 +13,7 @@ class condition_variable {\n     virtual ~condition_variable();\n \n     void wait();\n+    void timed_wait(size_t timeout_in_ns);\n     void signal();\n };\n "}]}