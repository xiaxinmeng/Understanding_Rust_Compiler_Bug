{"sha": "41244661979cda16bf2b15bd802337a0ee9764dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMjQ0NjYxOTc5Y2RhMTZiZjJiMTViZDgwMjMzN2EwZWU5NzY0ZGQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-03-15T05:46:42Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-03-15T05:46:42Z"}, "message": "std: Fix inheriting stdin on status()\n\nThis regression was accidentally introduced in #31618, and it's just flipping a\nboolean!\n\nCloses #32254", "tree": {"sha": "526f770fa6357c50f4676b94633916197353a042", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/526f770fa6357c50f4676b94633916197353a042"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41244661979cda16bf2b15bd802337a0ee9764dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41244661979cda16bf2b15bd802337a0ee9764dd", "html_url": "https://github.com/rust-lang/rust/commit/41244661979cda16bf2b15bd802337a0ee9764dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41244661979cda16bf2b15bd802337a0ee9764dd/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01118928fc2b280e96189ed394af749d65cbcffe", "url": "https://api.github.com/repos/rust-lang/rust/commits/01118928fc2b280e96189ed394af749d65cbcffe", "html_url": "https://github.com/rust-lang/rust/commit/01118928fc2b280e96189ed394af749d65cbcffe"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "9594c71267b3503a78e98f8a8fd18a46605a0203", "filename": "src/libstd/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41244661979cda16bf2b15bd802337a0ee9764dd/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41244661979cda16bf2b15bd802337a0ee9764dd/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=41244661979cda16bf2b15bd802337a0ee9764dd", "patch": "@@ -339,7 +339,7 @@ impl Command {\n     /// ```\n     #[stable(feature = \"process\", since = \"1.0.0\")]\n     pub fn status(&mut self) -> io::Result<ExitStatus> {\n-        self.inner.spawn(imp::Stdio::Inherit, false).map(Child::from_inner)\n+        self.inner.spawn(imp::Stdio::Inherit, true).map(Child::from_inner)\n                   .and_then(|mut p| p.wait())\n     }\n }"}, {"sha": "2ad47c4f116ae9a34d6dbd22c145ed65391b280c", "filename": "src/test/run-pass/process-status-inherits-stdin.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/41244661979cda16bf2b15bd802337a0ee9764dd/src%2Ftest%2Frun-pass%2Fprocess-status-inherits-stdin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41244661979cda16bf2b15bd802337a0ee9764dd/src%2Ftest%2Frun-pass%2Fprocess-status-inherits-stdin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-status-inherits-stdin.rs?ref=41244661979cda16bf2b15bd802337a0ee9764dd", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::env;\n+use std::io;\n+use std::io::Write;\n+use std::process::{Command, Stdio};\n+\n+fn main() {\n+    let mut args = env::args();\n+    let me = args.next().unwrap();\n+    let arg = args.next();\n+    match arg.as_ref().map(|s| &s[..]) {\n+        None => {\n+            let mut s = Command::new(&me)\n+                                .arg(\"a1\")\n+                                .stdin(Stdio::piped())\n+                                .spawn()\n+                                .unwrap();\n+            s.stdin.take().unwrap().write_all(b\"foo\\n\").unwrap();\n+            let s = s.wait().unwrap();\n+            assert!(s.success());\n+        }\n+        Some(\"a1\") => {\n+            let s = Command::new(&me).arg(\"a2\").status().unwrap();\n+            assert!(s.success());\n+        }\n+        Some(..) => {\n+            let mut s = String::new();\n+            io::stdin().read_line(&mut s).unwrap();\n+            assert_eq!(s, \"foo\\n\");\n+        }\n+    }\n+}"}]}