{"sha": "9c330d6c6cc11c09e47d0fa53179fac9b87e3871", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMzMwZDZjNmNjMTFjMDllNDdkMGZhNTMxNzlmYWM5Yjg3ZTM4NzE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-16T11:32:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-16T11:32:43Z"}, "message": "Merge #9917\n\n9917: minor: remove dead code r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "003088c02be3a9e3a3afb974c6316f4312486d43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/003088c02be3a9e3a3afb974c6316f4312486d43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c330d6c6cc11c09e47d0fa53179fac9b87e3871", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhGkzbCRBK7hj4Ov3rIwAAjCkIAAzPPTLh/w8SNjCn4iMEk4Gv\n7NfZ8E8QMJQeqIDidASguZ/zW5ihmAJPrlLhd1FtmptjoihfOpOeTkc5a4lAuGJm\nbju5WUrfLfGaTPI6mxxZbDwUT1a7FEW5w5Le7YGFKOLUp67blDsSfcpd2kptFPBl\ndfkyDZxPNyo7dOzV/857+4+vhz4fdmwuO1438sPdrgBvHhcKOQMdhFTpwhTUzrV/\n6To2BIWmIb1a92+SWF/fdKIgkFGzSph0N36NQXnoSa3dasMVLwfi79KrdwLDkJtN\ndFR0zDL/3isVInD4Q3F9dCrOerxwALK0/YOOz2XZ3YeKfrKnNMZKOtBRgPpiVWQ=\n=EcLZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 003088c02be3a9e3a3afb974c6316f4312486d43\nparent b641a66078ce2f2363e9a3b050ba448b93fb7cb6\nparent d29c52354c9ee5715426bd66c45464f06dd1afd5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1629113563 +0000\ncommitter GitHub <noreply@github.com> 1629113563 +0000\n\nMerge #9917\n\n9917: minor: remove dead code r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c330d6c6cc11c09e47d0fa53179fac9b87e3871", "html_url": "https://github.com/rust-lang/rust/commit/9c330d6c6cc11c09e47d0fa53179fac9b87e3871", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c330d6c6cc11c09e47d0fa53179fac9b87e3871/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b641a66078ce2f2363e9a3b050ba448b93fb7cb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b641a66078ce2f2363e9a3b050ba448b93fb7cb6", "html_url": "https://github.com/rust-lang/rust/commit/b641a66078ce2f2363e9a3b050ba448b93fb7cb6"}, {"sha": "d29c52354c9ee5715426bd66c45464f06dd1afd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d29c52354c9ee5715426bd66c45464f06dd1afd5", "html_url": "https://github.com/rust-lang/rust/commit/d29c52354c9ee5715426bd66c45464f06dd1afd5"}], "stats": {"total": 34, "additions": 10, "deletions": 24}, "files": [{"sha": "d619d6a46274c7739e37948d689713f1e8139b05", "filename": "crates/hir_expand/src/db.rs", "status": "modified", "additions": 10, "deletions": 24, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/9c330d6c6cc11c09e47d0fa53179fac9b87e3871/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c330d6c6cc11c09e47d0fa53179fac9b87e3871/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdb.rs?ref=9c330d6c6cc11c09e47d0fa53179fac9b87e3871", "patch": "@@ -336,35 +336,17 @@ fn macro_def(db: &dyn AstDatabase, id: MacroDefId) -> Option<Arc<TokenExpander>>\n }\n \n fn macro_expand(db: &dyn AstDatabase, id: MacroCallId) -> ExpandResult<Option<Arc<tt::Subtree>>> {\n-    macro_expand_with_arg(db, id, None)\n-}\n-\n-fn macro_expand_error(db: &dyn AstDatabase, macro_call: MacroCallId) -> Option<ExpandError> {\n-    db.macro_expand(macro_call).err\n-}\n-\n-fn macro_expand_with_arg(\n-    db: &dyn AstDatabase,\n-    id: MacroCallId,\n-    arg: Option<Arc<(tt::Subtree, mbe::TokenMap)>>,\n-) -> ExpandResult<Option<Arc<tt::Subtree>>> {\n     let _p = profile::span(\"macro_expand\");\n     let loc: MacroCallLoc = db.lookup_intern_macro(id);\n     if let Some(eager) = &loc.eager {\n-        if arg.is_some() {\n-            return ExpandResult::str_err(\n-                \"speculative macro expansion not implemented for eager macro\".to_owned(),\n-            );\n-        } else {\n-            return ExpandResult {\n-                value: Some(eager.arg_or_expansion.clone()),\n-                // FIXME: There could be errors here!\n-                err: None,\n-            };\n-        }\n+        return ExpandResult {\n+            value: Some(eager.arg_or_expansion.clone()),\n+            // FIXME: There could be errors here!\n+            err: None,\n+        };\n     }\n \n-    let macro_arg = match arg.or_else(|| db.macro_arg(id)) {\n+    let macro_arg = match db.macro_arg(id) {\n         Some(it) => it,\n         None => return ExpandResult::str_err(\"Fail to args in to tt::TokenTree\".into()),\n     };\n@@ -388,6 +370,10 @@ fn macro_expand_with_arg(\n     ExpandResult { value: Some(Arc::new(tt)), err }\n }\n \n+fn macro_expand_error(db: &dyn AstDatabase, macro_call: MacroCallId) -> Option<ExpandError> {\n+    db.macro_expand(macro_call).err\n+}\n+\n fn expand_proc_macro(\n     db: &dyn AstDatabase,\n     id: MacroCallId,"}]}