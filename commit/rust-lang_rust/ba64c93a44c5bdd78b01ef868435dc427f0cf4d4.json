{"sha": "ba64c93a44c5bdd78b01ef868435dc427f0cf4d4", "node_id": "C_kwDOAAsO6NoAKGJhNjRjOTNhNDRjNWJkZDc4YjAxZWY4Njg0MzVkYzQyN2YwY2Y0ZDQ", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-09-05T13:43:26Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-09-09T07:47:32Z"}, "message": "Lower generator expression to HIR", "tree": {"sha": "b02ae1ad2223cb95214fdea1b9626d956b378f6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b02ae1ad2223cb95214fdea1b9626d956b378f6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba64c93a44c5bdd78b01ef868435dc427f0cf4d4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmMa760ACgkQ4laYqTBY\nYXFuixAAi1dNDsDdSUBQx0wSDlJODLodrWTtL4S3ULrRN+VZ6NhVWjpuDx8AOV82\nFFNMoIINe4VDUuJ3vxb3j0XMjkeE0jgPFlAfPwp2fcUpjWxYT+MVHlcdBly6M0+k\nyS4obXVr/HdhTHN7JzRNjybtXTop5McrcBx1NlMLyNYf1IBqgGRanXCqBZf5udnc\n7mxz75k87kg3OaVSh3/U3aIfd3MWFOWfSqNIGgPeSVL01BOcJmWrbcs26ZatnLqj\ni1+flIBo4PPiSwjXRag5PEFwApOelCJwd9yGq20adU75QcsmV3B35OXppjljhci/\nHTzYmIYMh8/98VgSAfGGzB9me3GFi+atw+YaLEEhk9pUUa1Lr47jp0qW9GCc2Z4p\ngqt81da5mZhu2o6HNIJaMxDU6TzlkevUe234lzqgN2CNRR7lI5R/D2Tdu/Jy0Wat\nOLHJXpdImxIVs2HWXUoaUR38uEmk4glUezsg8IPRXeA1vf0uZX2el5hhbfnvqSTv\nnNrazu9erV98wQhlzmNt6CYbTbluCfly1ZWPfBRZ9KSEPzw5Dtk6YKLJKf5sH2Fn\nBtswQNfiU/XHXVsO/o9oExTf2eOGMEMxNOPCDSQyEd/MD0V88VNveRGU9I1d0GEE\njm8AT4wPNpxdWAWN8bYYfNBHdWYHHkQvjZmFoWJn60mRPPC3qSI=\n=+YEh\n-----END PGP SIGNATURE-----", "payload": "tree b02ae1ad2223cb95214fdea1b9626d956b378f6c\nparent 6dfd8aebdfa1ee1824446f01daf5bdb229b32f92\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1662385406 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1662709652 +0900\n\nLower generator expression to HIR\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba64c93a44c5bdd78b01ef868435dc427f0cf4d4", "html_url": "https://github.com/rust-lang/rust/commit/ba64c93a44c5bdd78b01ef868435dc427f0cf4d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba64c93a44c5bdd78b01ef868435dc427f0cf4d4/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dfd8aebdfa1ee1824446f01daf5bdb229b32f92", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dfd8aebdfa1ee1824446f01daf5bdb229b32f92", "html_url": "https://github.com/rust-lang/rust/commit/6dfd8aebdfa1ee1824446f01daf5bdb229b32f92"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "c4f91e49a6e1b4d53d3f57df2bf2cc8da2f6efdc", "filename": "crates/hir-def/src/body/lower.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ba64c93a44c5bdd78b01ef868435dc427f0cf4d4/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba64c93a44c5bdd78b01ef868435dc427f0cf4d4/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs?ref=ba64c93a44c5bdd78b01ef868435dc427f0cf4d4", "patch": "@@ -29,8 +29,9 @@ use crate::{\n     builtin_type::{BuiltinFloat, BuiltinInt, BuiltinUint},\n     db::DefDatabase,\n     expr::{\n-        dummy_expr_id, Array, BindingAnnotation, Expr, ExprId, FloatTypeWrapper, Label, LabelId,\n-        Literal, MatchArm, Pat, PatId, RecordFieldPat, RecordLitField, Statement,\n+        dummy_expr_id, Array, BindingAnnotation, ClosureKind, Expr, ExprId, FloatTypeWrapper,\n+        Label, LabelId, Literal, MatchArm, Movability, Pat, PatId, RecordFieldPat, RecordLitField,\n+        Statement,\n     },\n     intern::Interned,\n     item_scope::BuiltinShadowMode,\n@@ -97,6 +98,7 @@ pub(super) fn lower(\n         name_to_pat_grouping: Default::default(),\n         is_lowering_inside_or_pat: false,\n         is_lowering_assignee_expr: false,\n+        is_lowering_generator: false,\n     }\n     .collect(params, body)\n }\n@@ -111,6 +113,7 @@ struct ExprCollector<'a> {\n     name_to_pat_grouping: FxHashMap<Name, Vec<PatId>>,\n     is_lowering_inside_or_pat: bool,\n     is_lowering_assignee_expr: bool,\n+    is_lowering_generator: bool,\n }\n \n impl ExprCollector<'_> {\n@@ -358,6 +361,7 @@ impl ExprCollector<'_> {\n                 self.alloc_expr(Expr::Return { expr }, syntax_ptr)\n             }\n             ast::Expr::YieldExpr(e) => {\n+                self.is_lowering_generator = true;\n                 let expr = e.expr().map(|e| self.collect_expr(e));\n                 self.alloc_expr(Expr::Yield { expr }, syntax_ptr)\n             }\n@@ -459,13 +463,31 @@ impl ExprCollector<'_> {\n                     .ret_type()\n                     .and_then(|r| r.ty())\n                     .map(|it| Interned::new(TypeRef::from_ast(&self.ctx(), it)));\n+\n+                let prev_is_lowering_generator = self.is_lowering_generator;\n+                self.is_lowering_generator = false;\n+\n                 let body = self.collect_expr_opt(e.body());\n+\n+                let closure_kind = if self.is_lowering_generator {\n+                    let movability = if e.static_token().is_some() {\n+                        Movability::Static\n+                    } else {\n+                        Movability::Movable\n+                    };\n+                    ClosureKind::Generator(movability)\n+                } else {\n+                    ClosureKind::Closure\n+                };\n+                self.is_lowering_generator = prev_is_lowering_generator;\n+\n                 self.alloc_expr(\n                     Expr::Closure {\n                         args: args.into(),\n                         arg_types: arg_types.into(),\n                         ret_type,\n                         body,\n+                        closure_kind,\n                     },\n                     syntax_ptr,\n                 )"}, {"sha": "35686af38854d72c0b9524eb9dfad59cdce174eb", "filename": "crates/hir-def/src/body/pretty.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ba64c93a44c5bdd78b01ef868435dc427f0cf4d4/crates%2Fhir-def%2Fsrc%2Fbody%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba64c93a44c5bdd78b01ef868435dc427f0cf4d4/crates%2Fhir-def%2Fsrc%2Fbody%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fbody%2Fpretty.rs?ref=ba64c93a44c5bdd78b01ef868435dc427f0cf4d4", "patch": "@@ -3,7 +3,7 @@\n use std::fmt::{self, Write};\n \n use crate::{\n-    expr::{Array, BindingAnnotation, Literal, Statement},\n+    expr::{Array, BindingAnnotation, ClosureKind, Literal, Movability, Statement},\n     pretty::{print_generic_args, print_path, print_type_ref},\n     type_ref::TypeRef,\n };\n@@ -350,7 +350,10 @@ impl<'a> Printer<'a> {\n                 self.print_expr(*index);\n                 w!(self, \"]\");\n             }\n-            Expr::Closure { args, arg_types, ret_type, body } => {\n+            Expr::Closure { args, arg_types, ret_type, body, closure_kind } => {\n+                if let ClosureKind::Generator(Movability::Static) = closure_kind {\n+                    w!(self, \"static \");\n+                }\n                 w!(self, \"|\");\n                 for (i, (pat, ty)) in args.iter().zip(arg_types.iter()).enumerate() {\n                     if i != 0 {"}, {"sha": "16264655020712fe2caa3afcc1563c960cdbfc09", "filename": "crates/hir-def/src/expr.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ba64c93a44c5bdd78b01ef868435dc427f0cf4d4/crates%2Fhir-def%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba64c93a44c5bdd78b01ef868435dc427f0cf4d4/crates%2Fhir-def%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fexpr.rs?ref=ba64c93a44c5bdd78b01ef868435dc427f0cf4d4", "patch": "@@ -198,6 +198,7 @@ pub enum Expr {\n         arg_types: Box<[Option<Interned<TypeRef>>]>,\n         ret_type: Option<Interned<TypeRef>>,\n         body: ExprId,\n+        closure_kind: ClosureKind,\n     },\n     Tuple {\n         exprs: Box<[ExprId]>,\n@@ -211,6 +212,18 @@ pub enum Expr {\n     Underscore,\n }\n \n+#[derive(Debug, Clone, Copy, PartialEq, Eq)]\n+pub enum ClosureKind {\n+    Closure,\n+    Generator(Movability),\n+}\n+\n+#[derive(Debug, Clone, Copy, PartialEq, Eq)]\n+pub enum Movability {\n+    Static,\n+    Movable,\n+}\n+\n #[derive(Debug, Clone, Eq, PartialEq)]\n pub enum Array {\n     ElementList { elements: Box<[ExprId]>, is_assignee_expr: bool },"}, {"sha": "f0382846a6affcbe0c5f59f0771bc68e3d8e0052", "filename": "crates/hir-ty/src/infer/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba64c93a44c5bdd78b01ef868435dc427f0cf4d4/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba64c93a44c5bdd78b01ef868435dc427f0cf4d4/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs?ref=ba64c93a44c5bdd78b01ef868435dc427f0cf4d4", "patch": "@@ -216,7 +216,7 @@ impl<'a> InferenceContext<'a> {\n                 self.diverges = Diverges::Maybe;\n                 TyBuilder::unit()\n             }\n-            Expr::Closure { body, args, ret_type, arg_types } => {\n+            Expr::Closure { body, args, ret_type, arg_types, closure_kind: _ } => {\n                 assert_eq!(args.len(), arg_types.len());\n \n                 let mut sig_tys = Vec::new();"}]}