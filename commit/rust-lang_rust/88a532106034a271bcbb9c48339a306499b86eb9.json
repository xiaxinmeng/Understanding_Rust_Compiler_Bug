{"sha": "88a532106034a271bcbb9c48339a306499b86eb9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4YTUzMjEwNjAzNGEyNzFiY2JiOWM0ODMzOWEzMDY0OTliODZlYjk=", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-09-07T14:25:40Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-09-16T12:12:28Z"}, "message": "Remove unnecessary label", "tree": {"sha": "52b22782be3c64ffe1d8db249f6cad8cb5102e38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52b22782be3c64ffe1d8db249f6cad8cb5102e38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88a532106034a271bcbb9c48339a306499b86eb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88a532106034a271bcbb9c48339a306499b86eb9", "html_url": "https://github.com/rust-lang/rust/commit/88a532106034a271bcbb9c48339a306499b86eb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88a532106034a271bcbb9c48339a306499b86eb9/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbecdd51245076c58aaf65f2a3d3230dba6ad9d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbecdd51245076c58aaf65f2a3d3230dba6ad9d5", "html_url": "https://github.com/rust-lang/rust/commit/dbecdd51245076c58aaf65f2a3d3230dba6ad9d5"}], "stats": {"total": 58, "additions": 21, "deletions": 37}, "files": [{"sha": "c1f901af6fb3ec19096c4b6b1a68cf7bf223a208", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/88a532106034a271bcbb9c48339a306499b86eb9/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88a532106034a271bcbb9c48339a306499b86eb9/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=88a532106034a271bcbb9c48339a306499b86eb9", "patch": "@@ -2312,14 +2312,17 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                         _ => self.tcx.typeck(parent_id),\n                     };\n                     let ty = typeck_results.expr_ty_adjusted(expr);\n-                    err.span_label(\n-                        expr.peel_blocks().span,\n-                        &if ty.references_error() {\n-                            String::new()\n-                        } else {\n-                            format!(\"this tail expression is of type `{:?}`\", ty)\n-                        },\n-                    );\n+                    let span = expr.peel_blocks().span;\n+                    if Some(span) != err.span.primary_span() {\n+                        err.span_label(\n+                            span,\n+                            &if ty.references_error() {\n+                                String::new()\n+                            } else {\n+                                format!(\"this tail expression is of type `{:?}`\", ty)\n+                            },\n+                        );\n+                    }\n                 }\n                 if let Some(Node::Expr(hir::Expr {\n                     kind:\n@@ -2328,7 +2331,9 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                     ..\n                 })) = hir.find(call_hir_id)\n                 {\n-                    err.span_label(*span, \"required by a bound introduced by this call\");\n+                    if Some(*span) != err.span.primary_span() {\n+                        err.span_label(*span, \"required by a bound introduced by this call\");\n+                    }\n                 }\n                 ensure_sufficient_stack(|| {\n                     self.note_obligation_cause_code("}, {"sha": "c5bc50e407b25787dbd8d5ca2278e6597311a926", "filename": "src/test/ui/derives/derives-span-Clone-enum-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88a532106034a271bcbb9c48339a306499b86eb9/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88a532106034a271bcbb9c48339a306499b86eb9/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.stderr?ref=88a532106034a271bcbb9c48339a306499b86eb9", "patch": "@@ -5,10 +5,7 @@ LL | #[derive(Clone)]\n    |          ----- in this derive macro expansion\n ...\n LL |      x: Error\n-   |      ^^^^^^^^\n-   |      |\n-   |      the trait `Clone` is not implemented for `Error`\n-   |      required by a bound introduced by this call\n+   |      ^^^^^^^^ the trait `Clone` is not implemented for `Error`\n    |\n note: required by `clone`\n   --> $SRC_DIR/core/src/clone.rs:LL:COL"}, {"sha": "a6dc818eb6fe4ea4786377c627695c123ef41ae3", "filename": "src/test/ui/derives/derives-span-Clone-enum.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88a532106034a271bcbb9c48339a306499b86eb9/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88a532106034a271bcbb9c48339a306499b86eb9/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.stderr?ref=88a532106034a271bcbb9c48339a306499b86eb9", "patch": "@@ -5,10 +5,7 @@ LL | #[derive(Clone)]\n    |          ----- in this derive macro expansion\n ...\n LL |      Error\n-   |      ^^^^^\n-   |      |\n-   |      the trait `Clone` is not implemented for `Error`\n-   |      required by a bound introduced by this call\n+   |      ^^^^^ the trait `Clone` is not implemented for `Error`\n    |\n note: required by `clone`\n   --> $SRC_DIR/core/src/clone.rs:LL:COL"}, {"sha": "cf7b9ec276e2542e52adadf8f645899bad42f4d5", "filename": "src/test/ui/derives/derives-span-Clone-struct.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88a532106034a271bcbb9c48339a306499b86eb9/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88a532106034a271bcbb9c48339a306499b86eb9/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.stderr?ref=88a532106034a271bcbb9c48339a306499b86eb9", "patch": "@@ -5,10 +5,7 @@ LL | #[derive(Clone)]\n    |          ----- in this derive macro expansion\n LL | struct Struct {\n LL |     x: Error\n-   |     ^^^^^^^^\n-   |     |\n-   |     the trait `Clone` is not implemented for `Error`\n-   |     required by a bound introduced by this call\n+   |     ^^^^^^^^ the trait `Clone` is not implemented for `Error`\n    |\n note: required by `clone`\n   --> $SRC_DIR/core/src/clone.rs:LL:COL"}, {"sha": "80733d62730d7a2fc78e3ddc5c377d34ec996cce", "filename": "src/test/ui/derives/derives-span-Clone-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88a532106034a271bcbb9c48339a306499b86eb9/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88a532106034a271bcbb9c48339a306499b86eb9/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.stderr?ref=88a532106034a271bcbb9c48339a306499b86eb9", "patch": "@@ -5,10 +5,7 @@ LL | #[derive(Clone)]\n    |          ----- in this derive macro expansion\n LL | struct Struct(\n LL |     Error\n-   |     ^^^^^\n-   |     |\n-   |     the trait `Clone` is not implemented for `Error`\n-   |     required by a bound introduced by this call\n+   |     ^^^^^ the trait `Clone` is not implemented for `Error`\n    |\n note: required by `clone`\n   --> $SRC_DIR/core/src/clone.rs:LL:COL"}, {"sha": "b97f87da4bfce22f357120e0fd88a310c207d411", "filename": "src/test/ui/derives/deriving-no-inner-impl-error-message.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88a532106034a271bcbb9c48339a306499b86eb9/src%2Ftest%2Fui%2Fderives%2Fderiving-no-inner-impl-error-message.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88a532106034a271bcbb9c48339a306499b86eb9/src%2Ftest%2Fui%2Fderives%2Fderiving-no-inner-impl-error-message.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderiving-no-inner-impl-error-message.stderr?ref=88a532106034a271bcbb9c48339a306499b86eb9", "patch": "@@ -29,10 +29,7 @@ LL | #[derive(Clone)]\n    |          ----- in this derive macro expansion\n LL | struct C {\n LL |     x: NoCloneOrEq\n-   |     ^^^^^^^^^^^^^^\n-   |     |\n-   |     the trait `Clone` is not implemented for `NoCloneOrEq`\n-   |     required by a bound introduced by this call\n+   |     ^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `NoCloneOrEq`\n    |\n note: required by `clone`\n   --> $SRC_DIR/core/src/clone.rs:LL:COL"}, {"sha": "f8eaf61d7d7eca08309a021653ba9271f35142eb", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-test-wrong-type.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88a532106034a271bcbb9c48339a306499b86eb9/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88a532106034a271bcbb9c48339a306499b86eb9/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.stderr?ref=88a532106034a271bcbb9c48339a306499b86eb9", "patch": "@@ -6,10 +6,7 @@ LL |   #[test]\n LL | / fn can_parse_zero_as_f32() -> Result<f32, ParseFloatError> {\n LL | |     \"0\".parse()\n LL | | }\n-   | | ^\n-   | | |\n-   | |_`main` can only return types that implement `Termination`\n-   |   required by a bound introduced by this call\n+   | |_^ `main` can only return types that implement `Termination`\n    |\n    = help: the trait `Termination` is not implemented for `Result<f32, ParseFloatError>`\n note: required by a bound in `assert_test_result`"}, {"sha": "23b78d023b600dc8f3665e3a5b6a6ea97eca3599", "filename": "src/test/ui/traits/issue-71136.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88a532106034a271bcbb9c48339a306499b86eb9/src%2Ftest%2Fui%2Ftraits%2Fissue-71136.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88a532106034a271bcbb9c48339a306499b86eb9/src%2Ftest%2Fui%2Ftraits%2Fissue-71136.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-71136.stderr?ref=88a532106034a271bcbb9c48339a306499b86eb9", "patch": "@@ -5,10 +5,7 @@ LL | #[derive(Clone)]\n    |          ----- in this derive macro expansion\n LL | struct FooHolster {\n LL |     the_foos: Vec<Foo>,\n-   |     ^^^^^^^^^^^^^^^^^^\n-   |     |\n-   |     expected an implementor of trait `Clone`\n-   |     required by a bound introduced by this call\n+   |     ^^^^^^^^^^^^^^^^^^ expected an implementor of trait `Clone`\n    |\n    = note: required because of the requirements on the impl of `Clone` for `Vec<Foo>`\n note: required by `clone`"}]}