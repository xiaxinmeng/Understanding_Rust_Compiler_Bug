{"sha": "ade5a9d2fe6cb9cd7929469100172c693cd2dafe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkZTVhOWQyZmU2Y2I5Y2Q3OTI5NDY5MTAwMTcyYzY5M2NkMmRhZmU=", "commit": {"author": {"name": "Christoph Burgdorf", "email": "christoph.burgdorf@bvsn.org", "date": "2014-05-31T21:41:50Z"}, "committer": {"name": "Christoph Burgdorf", "email": "christoph.burgdorf@bvsn.org", "date": "2014-05-31T21:41:50Z"}, "message": "Fix example in lifetime guide\n\nThis rewrites the example to also be more aligned with\r\nthe same example given in the main tutorial.", "tree": {"sha": "a302e58df1bb5e004287ce69247a802ebc285b67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a302e58df1bb5e004287ce69247a802ebc285b67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ade5a9d2fe6cb9cd7929469100172c693cd2dafe", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ade5a9d2fe6cb9cd7929469100172c693cd2dafe", "html_url": "https://github.com/rust-lang/rust/commit/ade5a9d2fe6cb9cd7929469100172c693cd2dafe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ade5a9d2fe6cb9cd7929469100172c693cd2dafe/comments", "author": {"login": "cburgdorf", "id": 521109, "node_id": "MDQ6VXNlcjUyMTEwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cburgdorf", "html_url": "https://github.com/cburgdorf", "followers_url": "https://api.github.com/users/cburgdorf/followers", "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}", "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}", "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions", "organizations_url": "https://api.github.com/users/cburgdorf/orgs", "repos_url": "https://api.github.com/users/cburgdorf/repos", "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}", "received_events_url": "https://api.github.com/users/cburgdorf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cburgdorf", "id": 521109, "node_id": "MDQ6VXNlcjUyMTEwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/521109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cburgdorf", "html_url": "https://github.com/cburgdorf", "followers_url": "https://api.github.com/users/cburgdorf/followers", "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}", "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}", "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions", "organizations_url": "https://api.github.com/users/cburgdorf/orgs", "repos_url": "https://api.github.com/users/cburgdorf/repos", "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}", "received_events_url": "https://api.github.com/users/cburgdorf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60b4a97de70b9b40550a576b11c5670899be00c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/60b4a97de70b9b40550a576b11c5670899be00c4", "html_url": "https://github.com/rust-lang/rust/commit/60b4a97de70b9b40550a576b11c5670899be00c4"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "e92a24f8b94319a68c9246cabe1380b090e8895f", "filename": "src/doc/guide-lifetimes.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ade5a9d2fe6cb9cd7929469100172c693cd2dafe/src%2Fdoc%2Fguide-lifetimes.md", "raw_url": "https://github.com/rust-lang/rust/raw/ade5a9d2fe6cb9cd7929469100172c693cd2dafe/src%2Fdoc%2Fguide-lifetimes.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-lifetimes.md?ref=ade5a9d2fe6cb9cd7929469100172c693cd2dafe", "patch": "@@ -67,7 +67,7 @@ Now we can call `compute_distance()`:\n # let on_the_stack :     Point  =     Point{x: 3.0, y: 4.0};\n # let on_the_heap  : Box<Point> = box Point{x: 7.0, y: 9.0};\n # fn compute_distance(p1: &Point, p2: &Point) -> f64 { 0.0 }\n-compute_distance(&on_the_stack, &*on_the_heap);\n+compute_distance(&on_the_stack, on_the_heap);\n ~~~\n \n Here, the `&` operator takes the address of the variable\n@@ -77,9 +77,10 @@ value. We also call this _borrowing_ the local variable\n `on_the_stack`, because we have created an alias: that is, another\n name for the same data.\n \n-For the second argument, we need to extract the contents of `on_the_heap`\n-by derefercing with the `*` symbol. Now that we have the data, we need\n-to create a reference with the `&` symbol.\n+In the case of `on_the_heap`, however, no explicit action is necessary. \n+The compiler will automatically convert a box box point to a reference like &point. \n+This is another form of borrowing; in this case, the contents of the owned box \n+are being lent out.\n \n Whenever a caller lends data to a callee, there are some limitations on what\n the caller can do with the original. For example, if the contents of a"}]}