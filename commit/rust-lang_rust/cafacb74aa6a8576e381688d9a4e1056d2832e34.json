{"sha": "cafacb74aa6a8576e381688d9a4e1056d2832e34", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZmFjYjc0YWE2YTg1NzZlMzgxNjg4ZDlhNGUxMDU2ZDI4MzJlMzQ=", "commit": {"author": {"name": "phynalle", "email": "phynalism@gmail.com", "date": "2020-03-17T10:15:30Z"}, "committer": {"name": "phynalle", "email": "phynalism@gmail.com", "date": "2020-03-17T10:15:30Z"}, "message": "Fix typo", "tree": {"sha": "d66f849b16a8646f77c37abd1ce9b59b70238fa9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d66f849b16a8646f77c37abd1ce9b59b70238fa9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cafacb74aa6a8576e381688d9a4e1056d2832e34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cafacb74aa6a8576e381688d9a4e1056d2832e34", "html_url": "https://github.com/rust-lang/rust/commit/cafacb74aa6a8576e381688d9a4e1056d2832e34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cafacb74aa6a8576e381688d9a4e1056d2832e34/comments", "author": {"login": "phynalle", "id": 6007810, "node_id": "MDQ6VXNlcjYwMDc4MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6007810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phynalle", "html_url": "https://github.com/phynalle", "followers_url": "https://api.github.com/users/phynalle/followers", "following_url": "https://api.github.com/users/phynalle/following{/other_user}", "gists_url": "https://api.github.com/users/phynalle/gists{/gist_id}", "starred_url": "https://api.github.com/users/phynalle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phynalle/subscriptions", "organizations_url": "https://api.github.com/users/phynalle/orgs", "repos_url": "https://api.github.com/users/phynalle/repos", "events_url": "https://api.github.com/users/phynalle/events{/privacy}", "received_events_url": "https://api.github.com/users/phynalle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phynalle", "id": 6007810, "node_id": "MDQ6VXNlcjYwMDc4MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6007810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phynalle", "html_url": "https://github.com/phynalle", "followers_url": "https://api.github.com/users/phynalle/followers", "following_url": "https://api.github.com/users/phynalle/following{/other_user}", "gists_url": "https://api.github.com/users/phynalle/gists{/gist_id}", "starred_url": "https://api.github.com/users/phynalle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phynalle/subscriptions", "organizations_url": "https://api.github.com/users/phynalle/orgs", "repos_url": "https://api.github.com/users/phynalle/repos", "events_url": "https://api.github.com/users/phynalle/events{/privacy}", "received_events_url": "https://api.github.com/users/phynalle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6aa432d86b7e4fb691600032ebdf6f2301152447", "url": "https://api.github.com/repos/rust-lang/rust/commits/6aa432d86b7e4fb691600032ebdf6f2301152447", "html_url": "https://github.com/rust-lang/rust/commit/6aa432d86b7e4fb691600032ebdf6f2301152447"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3ea0ac23013139b52952700bbb3397e99696172f", "filename": "crates/ra_ide/src/references.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cafacb74aa6a8576e381688d9a4e1056d2832e34/crates%2Fra_ide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cafacb74aa6a8576e381688d9a4e1056d2832e34/crates%2Fra_ide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences.rs?ref=cafacb74aa6a8576e381688d9a4e1056d2832e34", "patch": "@@ -95,7 +95,7 @@ pub(crate) fn find_all_refs(\n     let syntax = sema.parse(position.file_id).syntax().clone();\n \n     let (opt_name, search_kind) =\n-        if let Some(name) = get_struct_def_name_for_struc_litetal_search(&syntax, position) {\n+        if let Some(name) = get_struct_def_name_for_struct_literal_search(&syntax, position) {\n             (Some(name), ReferenceKind::StructLiteral)\n         } else {\n             (find_node_at_offset::<ast::Name>(&syntax, position.offset), ReferenceKind::Other)\n@@ -156,7 +156,7 @@ fn decl_access(def: &Definition, syntax: &SyntaxNode, range: TextRange) -> Optio\n     None\n }\n \n-fn get_struct_def_name_for_struc_litetal_search(\n+fn get_struct_def_name_for_struct_literal_search(\n     syntax: &SyntaxNode,\n     position: FilePosition,\n ) -> Option<ast::Name> {"}]}