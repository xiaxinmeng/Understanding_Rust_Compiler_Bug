{"sha": "cf56c1f744c3e7c71a1d5a80b8889b9fab8f6de7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNTZjMWY3NDRjM2U3YzcxYTFkNWE4MGI4ODg5YjlmYWI4ZjZkZTc=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-12-07T01:20:51Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-12-14T21:42:46Z"}, "message": "Indicate `BTreeSet` in docs is code-like.", "tree": {"sha": "191c4f62627d794a6ed5d39b7876120bdb85c30f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/191c4f62627d794a6ed5d39b7876120bdb85c30f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf56c1f744c3e7c71a1d5a80b8889b9fab8f6de7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf56c1f744c3e7c71a1d5a80b8889b9fab8f6de7", "html_url": "https://github.com/rust-lang/rust/commit/cf56c1f744c3e7c71a1d5a80b8889b9fab8f6de7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf56c1f744c3e7c71a1d5a80b8889b9fab8f6de7/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b197e4a45f31849c29bf6de260531a8f85ba1bf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b197e4a45f31849c29bf6de260531a8f85ba1bf5", "html_url": "https://github.com/rust-lang/rust/commit/b197e4a45f31849c29bf6de260531a8f85ba1bf5"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "46302db0d5bea41bf68cd56eaab5559a799e868f", "filename": "src/libcollections/btree/set.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cf56c1f744c3e7c71a1d5a80b8889b9fab8f6de7/src%2Flibcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf56c1f744c3e7c71a1d5a80b8889b9fab8f6de7/src%2Flibcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fset.rs?ref=cf56c1f744c3e7c71a1d5a80b8889b9fab8f6de7", "patch": "@@ -74,19 +74,19 @@ pub struct BTreeSet<T> {\n     map: BTreeMap<T, ()>,\n }\n \n-/// An iterator over a BTreeSet's items.\n+/// An iterator over a `BTreeSet`'s items.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Iter<'a, T: 'a> {\n     iter: Keys<'a, T, ()>,\n }\n \n-/// An owning iterator over a BTreeSet's items.\n+/// An owning iterator over a `BTreeSet`'s items.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct IntoIter<T> {\n     iter: ::btree_map::IntoIter<T, ()>,\n }\n \n-/// An iterator over a sub-range of BTreeSet's items.\n+/// An iterator over a sub-range of `BTreeSet`'s items.\n pub struct Range<'a, T: 'a> {\n     iter: ::btree_map::Range<'a, T, ()>,\n }\n@@ -120,7 +120,7 @@ pub struct Union<'a, T: 'a> {\n }\n \n impl<T: Ord> BTreeSet<T> {\n-    /// Makes a new BTreeSet with a reasonable choice of B.\n+    /// Makes a new `BTreeSet` with a reasonable choice of B.\n     ///\n     /// # Examples\n     ///\n@@ -137,7 +137,7 @@ impl<T: Ord> BTreeSet<T> {\n }\n \n impl<T> BTreeSet<T> {\n-    /// Gets an iterator over the BTreeSet's contents.\n+    /// Gets an iterator over the `BTreeSet`'s contents.\n     ///\n     /// # Examples\n     ///"}]}