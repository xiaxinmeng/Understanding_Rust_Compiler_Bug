{"sha": "0063f03e86f4222a5027720142eb20db4adc485d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwNjNmMDNlODZmNDIyMmE1MDI3NzIwMTQyZWIyMGRiNGFkYzQ4NWQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T08:24:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T08:52:32Z"}, "message": "hide atom edits a bit", "tree": {"sha": "888c4de1eaa96cccb0b1870464e095679c5290b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/888c4de1eaa96cccb0b1870464e095679c5290b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0063f03e86f4222a5027720142eb20db4adc485d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0063f03e86f4222a5027720142eb20db4adc485d", "html_url": "https://github.com/rust-lang/rust/commit/0063f03e86f4222a5027720142eb20db4adc485d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0063f03e86f4222a5027720142eb20db4adc485d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "164d53b22f345e50c67781af545310d2193e8a5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/164d53b22f345e50c67781af545310d2193e8a5c", "html_url": "https://github.com/rust-lang/rust/commit/164d53b22f345e50c67781af545310d2193e8a5c"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "a7be56f5a19eafb67c7a2896a23a3814148a2366", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0063f03e86f4222a5027720142eb20db4adc485d/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0063f03e86f4222a5027720142eb20db4adc485d/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=0063f03e86f4222a5027720142eb20db4adc485d", "patch": "@@ -520,7 +520,7 @@ impl SourceChange {\n     pub(crate) fn from_local_edit(file_id: FileId, label: &str, edit: LocalEdit) -> SourceChange {\n         let file_edit = SourceFileEdit {\n             file_id,\n-            edits: edit.edit.into_atoms(),\n+            edit: edit.edit,\n         };\n         SourceChange {\n             label: label.to_string(),"}, {"sha": "2fb11365c3d8427168e5517ce460a504aad0d3e2", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0063f03e86f4222a5027720142eb20db4adc485d/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0063f03e86f4222a5027720142eb20db4adc485d/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=0063f03e86f4222a5027720142eb20db4adc485d", "patch": "@@ -20,7 +20,7 @@ use std::{fmt, sync::Arc};\n \n use rustc_hash::FxHashMap;\n use ra_syntax::{SourceFileNode, TextRange, TextUnit};\n-use ra_text_edit::AtomTextEdit;\n+use ra_text_edit::TextEdit;\n use rayon::prelude::*;\n use relative_path::RelativePathBuf;\n \n@@ -167,7 +167,7 @@ pub struct SourceChange {\n #[derive(Debug)]\n pub struct SourceFileEdit {\n     pub file_id: FileId,\n-    pub edits: Vec<AtomTextEdit>,\n+    pub edit: TextEdit,\n }\n \n #[derive(Debug)]"}, {"sha": "3531b727e98cdd4d86979658632481d3e2430b40", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0063f03e86f4222a5027720142eb20db4adc485d/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0063f03e86f4222a5027720142eb20db4adc485d/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=0063f03e86f4222a5027720142eb20db4adc485d", "patch": "@@ -97,21 +97,21 @@ impl ConvWith for TextEdit {\n     type Output = Vec<languageserver_types::TextEdit>;\n \n     fn conv_with(self, line_index: &LineIndex) -> Vec<languageserver_types::TextEdit> {\n-        self.into_atoms()\n+        self.as_atoms()\n             .into_iter()\n             .map_conv_with(line_index)\n             .collect()\n     }\n }\n \n-impl ConvWith for AtomTextEdit {\n+impl<'a> ConvWith for &'a AtomTextEdit {\n     type Ctx = LineIndex;\n     type Output = languageserver_types::TextEdit;\n \n     fn conv_with(self, line_index: &LineIndex) -> languageserver_types::TextEdit {\n         languageserver_types::TextEdit {\n             range: self.delete.conv_with(line_index),\n-            new_text: self.insert,\n+            new_text: self.insert.clone(),\n         }\n     }\n }\n@@ -199,7 +199,7 @@ impl TryConvWith for SourceChange {\n                     .source_file_edits\n                     .iter()\n                     .find(|it| it.file_id == pos.file_id)\n-                    .map(|it| it.edits.as_slice())\n+                    .map(|it| it.edit.as_atoms())\n                     .unwrap_or(&[]);\n                 let line_col = translate_offset_with_edit(&*line_index, pos.offset, edits);\n                 let position =\n@@ -265,7 +265,12 @@ impl TryConvWith for SourceFileEdit {\n             version: None,\n         };\n         let line_index = world.analysis().file_line_index(self.file_id);\n-        let edits = self.edits.into_iter().map_conv_with(&line_index).collect();\n+        let edits = self\n+            .edit\n+            .as_atoms()\n+            .iter()\n+            .map_conv_with(&line_index)\n+            .collect();\n         Ok(TextDocumentEdit {\n             text_document,\n             edits,"}, {"sha": "1751d7fa81bffbd3fcba3b76e92ce3f3c20e8577", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0063f03e86f4222a5027720142eb20db4adc485d/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0063f03e86f4222a5027720142eb20db4adc485d/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=0063f03e86f4222a5027720142eb20db4adc485d", "patch": "@@ -107,9 +107,16 @@ pub fn handle_on_type_formatting(\n     };\n     let edits = match world.analysis().on_eq_typed(position) {\n         None => return Ok(None),\n-        Some(mut action) => action.source_file_edits.pop().unwrap().edits,\n+        Some(mut action) => action\n+            .source_file_edits\n+            .pop()\n+            .unwrap()\n+            .edit\n+            .as_atoms()\n+            .iter()\n+            .map_conv_with(&line_index)\n+            .collect(),\n     };\n-    let edits = edits.into_iter().map_conv_with(&line_index).collect();\n     Ok(Some(edits))\n }\n "}, {"sha": "392968d638f369fe5a57c25a71f58916a2b0a0d5", "filename": "crates/ra_text_edit/src/text_edit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0063f03e86f4222a5027720142eb20db4adc485d/crates%2Fra_text_edit%2Fsrc%2Ftext_edit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0063f03e86f4222a5027720142eb20db4adc485d/crates%2Fra_text_edit%2Fsrc%2Ftext_edit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_text_edit%2Fsrc%2Ftext_edit.rs?ref=0063f03e86f4222a5027720142eb20db4adc485d", "patch": "@@ -41,8 +41,8 @@ impl TextEditBuilder {\n }\n \n impl TextEdit {\n-    pub fn into_atoms(self) -> Vec<AtomTextEdit> {\n-        self.atoms\n+    pub fn as_atoms(&self) -> &[AtomTextEdit] {\n+        &self.atoms\n     }\n \n     pub fn apply(&self, text: &str) -> String {"}]}