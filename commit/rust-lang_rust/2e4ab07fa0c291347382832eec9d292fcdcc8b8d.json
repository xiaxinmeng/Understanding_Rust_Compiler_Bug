{"sha": "2e4ab07fa0c291347382832eec9d292fcdcc8b8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNGFiMDdmYTBjMjkxMzQ3MzgyODMyZWVjOWQyOTJmY2RjYzhiOGQ=", "commit": {"author": {"name": "Tim Neumann", "email": "mail@timnn.me", "date": "2017-04-08T06:55:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-04-08T06:55:09Z"}, "message": "Rollup merge of #41143 - stjepang:optimize-bool-fetch-nand, r=nagisa\n\nOptimize AtomicBool::fetch_nand\n\nThis is an attempt to push the PR #40563 to completion.\n\nBenchmark: [source](https://gist.github.com/stjepang/023f5025623f5474184f9f4dfd6379ae)\nImprovement:\n\n```\n name  old_ ns/iter  new_ce_ ns/iter  diff ns/iter   diff %\n 1t    146,440       89,904                -56,536  -38.61%\n 2t    561,456       316,835              -244,621  -43.57%\n 4t    2,822,821     1,005,424          -1,817,397  -64.38%\n```\n\nr? @eddyb\ncc @alexcrichton @nagisa", "tree": {"sha": "9535acab1622caff62518333692a08eee7cff53a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9535acab1622caff62518333692a08eee7cff53a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e4ab07fa0c291347382832eec9d292fcdcc8b8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e4ab07fa0c291347382832eec9d292fcdcc8b8d", "html_url": "https://github.com/rust-lang/rust/commit/2e4ab07fa0c291347382832eec9d292fcdcc8b8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e4ab07fa0c291347382832eec9d292fcdcc8b8d/comments", "author": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29880e678f0ae5b0e83e51bf68d93229beb61ec9", "url": "https://api.github.com/repos/rust-lang/rust/commits/29880e678f0ae5b0e83e51bf68d93229beb61ec9", "html_url": "https://github.com/rust-lang/rust/commit/29880e678f0ae5b0e83e51bf68d93229beb61ec9"}, {"sha": "f7ffe5bd2499663026787f91f60e3e3ecf946a03", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7ffe5bd2499663026787f91f60e3e3ecf946a03", "html_url": "https://github.com/rust-lang/rust/commit/f7ffe5bd2499663026787f91f60e3e3ecf946a03"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "a4050f271eb99b30a08eb91961680bf468444e28", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2e4ab07fa0c291347382832eec9d292fcdcc8b8d/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e4ab07fa0c291347382832eec9d292fcdcc8b8d/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=2e4ab07fa0c291347382832eec9d292fcdcc8b8d", "patch": "@@ -539,17 +539,16 @@ impl AtomicBool {\n         // We can't use atomic_nand here because it can result in a bool with\n         // an invalid value. This happens because the atomic operation is done\n         // with an 8-bit integer internally, which would set the upper 7 bits.\n-        // So we just use a compare-exchange loop instead, which is what the\n-        // intrinsic actually expands to anyways on many platforms.\n-        let mut old = self.load(Relaxed);\n-        loop {\n-            let new = !(old && val);\n-            match self.compare_exchange_weak(old, new, order, Relaxed) {\n-                Ok(_) => break,\n-                Err(x) => old = x,\n-            }\n+        // So we just use fetch_xor or swap instead.\n+        if val {\n+            // !(x & true) == !x\n+            // We must invert the bool.\n+            self.fetch_xor(true, order)\n+        } else {\n+            // !(x & false) == true\n+            // We must set the bool to true.\n+            self.swap(true, order)\n         }\n-        old\n     }\n \n     /// Logical \"or\" with a boolean value."}, {"sha": "9babe24a985634e14975237f000d9edc400fba7e", "filename": "src/libcore/tests/atomic.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2e4ab07fa0c291347382832eec9d292fcdcc8b8d/src%2Flibcore%2Ftests%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e4ab07fa0c291347382832eec9d292fcdcc8b8d/src%2Flibcore%2Ftests%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fatomic.rs?ref=2e4ab07fa0c291347382832eec9d292fcdcc8b8d", "patch": "@@ -24,10 +24,23 @@ fn bool_() {\n #[test]\n fn bool_and() {\n     let a = AtomicBool::new(true);\n-    assert_eq!(a.fetch_and(false, SeqCst),true);\n+    assert_eq!(a.fetch_and(false, SeqCst), true);\n     assert_eq!(a.load(SeqCst),false);\n }\n \n+#[test]\n+fn bool_nand() {\n+    let a = AtomicBool::new(false);\n+    assert_eq!(a.fetch_nand(false, SeqCst), false);\n+    assert_eq!(a.load(SeqCst), true);\n+    assert_eq!(a.fetch_nand(false, SeqCst), true);\n+    assert_eq!(a.load(SeqCst), true);\n+    assert_eq!(a.fetch_nand(true, SeqCst), true);\n+    assert_eq!(a.load(SeqCst), false);\n+    assert_eq!(a.fetch_nand(true, SeqCst), false);\n+    assert_eq!(a.load(SeqCst), true);\n+}\n+\n #[test]\n fn uint_and() {\n     let x = AtomicUsize::new(0xf731);"}]}