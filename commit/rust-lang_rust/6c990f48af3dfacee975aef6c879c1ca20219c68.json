{"sha": "6c990f48af3dfacee975aef6c879c1ca20219c68", "node_id": "C_kwDOAAsO6NoAKDZjOTkwZjQ4YWYzZGZhY2VlOTc1YWVmNmM4NzljMWNhMjAyMTljNjg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-29T23:18:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-29T23:18:30Z"}, "message": "fix doc issues", "tree": {"sha": "67b0f0f515e34546d9cb65fffb08fd652a57ff4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67b0f0f515e34546d9cb65fffb08fd652a57ff4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c990f48af3dfacee975aef6c879c1ca20219c68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c990f48af3dfacee975aef6c879c1ca20219c68", "html_url": "https://github.com/rust-lang/rust/commit/6c990f48af3dfacee975aef6c879c1ca20219c68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c990f48af3dfacee975aef6c879c1ca20219c68/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a58d8f6616156938e3d4af814bb34ad5cc37193e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a58d8f6616156938e3d4af814bb34ad5cc37193e", "html_url": "https://github.com/rust-lang/rust/commit/a58d8f6616156938e3d4af814bb34ad5cc37193e"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "ad33a54e0a2d1d4480c95d5fde033fc1d0e3c679", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c990f48af3dfacee975aef6c879c1ca20219c68/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c990f48af3dfacee975aef6c879c1ca20219c68/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=6c990f48af3dfacee975aef6c879c1ca20219c68", "patch": "@@ -63,7 +63,7 @@ mod syntax;\n pub use syntax::*;\n mod switch_sources;\n pub mod tcx;\n-pub mod terminator;\n+mod terminator;\n pub use terminator::*;\n \n pub mod traversal;"}, {"sha": "f8ee59f306fbf6e59266fc1b220e3b8cc12b5cef", "filename": "compiler/rustc_middle/src/mir/syntax.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6c990f48af3dfacee975aef6c879c1ca20219c68/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c990f48af3dfacee975aef6c879c1ca20219c68/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs?ref=6c990f48af3dfacee975aef6c879c1ca20219c68", "patch": "@@ -53,9 +53,9 @@ pub enum MirPhase {\n     /// query.\n     ConstsPromoted = 2,\n     /// Beginning with this phase, the following variants are disallowed:\n-    /// * [`TerminatorKind::DropAndReplace`](terminator::TerminatorKind::DropAndReplace)\n-    /// * [`TerminatorKind::FalseUnwind`](terminator::TerminatorKind::FalseUnwind)\n-    /// * [`TerminatorKind::FalseEdge`](terminator::TerminatorKind::FalseEdge)\n+    /// * [`TerminatorKind::DropAndReplace`]\n+    /// * [`TerminatorKind::FalseUnwind`]\n+    /// * [`TerminatorKind::FalseEdge`]\n     /// * [`StatementKind::FakeRead`]\n     /// * [`StatementKind::AscribeUserType`]\n     /// * [`Rvalue::Ref`] with `BorrowKind::Shallow`\n@@ -86,8 +86,8 @@ pub enum MirPhase {\n     /// types across a yield point will lead to ICEs becaues of this.\n     ///\n     /// Beginning with this phase, the following variants are disallowed:\n-    /// * [`TerminatorKind::Yield`](terminator::TerminatorKind::Yield)\n-    /// * [`TerminatorKind::GeneratorDrop`](terminator::TerminatorKind::GeneratorDrop)\n+    /// * [`TerminatorKind::Yield`]\n+    /// * [`TerminatorKind::GeneratorDrop`]\n     /// * [`ProjectionElem::Deref`] of `Box`\n     GeneratorsLowered = 6,\n     Optimized = 7,\n@@ -712,7 +712,7 @@ pub type AssertMessage<'tcx> = AssertKind<Operand<'tcx>>;\n ///\n ///  1. The address in memory that the place refers to.\n ///  2. The provenance with which the place is being accessed.\n-///  3. The type of the place and an optional variant index. See [`PlaceTy`][tcx::PlaceTy].\n+///  3. The type of the place and an optional variant index. See [`PlaceTy`][super::tcx::PlaceTy].\n ///  4. Optionally, some metadata. This exists if and only if the type of the place is not `Sized`.\n ///\n /// We'll give a description below of how all pieces of the place except for the provenance are"}]}