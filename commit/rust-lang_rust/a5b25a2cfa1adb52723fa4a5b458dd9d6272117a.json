{"sha": "a5b25a2cfa1adb52723fa4a5b458dd9d6272117a", "node_id": "C_kwDOAAsO6NoAKGE1YjI1YTJjZmExYWRiNTI3MjNmYTRhNWI0NThkZDlkNjI3MjExN2E", "commit": {"author": {"name": "Hans Kratz", "email": "hans@appfour.com", "date": "2021-11-04T16:03:13Z"}, "committer": {"name": "Hans Kratz", "email": "hans@appfour.com", "date": "2021-11-04T16:03:13Z"}, "message": "Create subslice as that leads to a smaller code size.", "tree": {"sha": "855dcc351384a88bf226826e936adb2a6b85d175", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/855dcc351384a88bf226826e936adb2a6b85d175"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5b25a2cfa1adb52723fa4a5b458dd9d6272117a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5b25a2cfa1adb52723fa4a5b458dd9d6272117a", "html_url": "https://github.com/rust-lang/rust/commit/a5b25a2cfa1adb52723fa4a5b458dd9d6272117a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5b25a2cfa1adb52723fa4a5b458dd9d6272117a/comments", "author": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d9f0e2c50ff6131643fd0b2d5a9f65a7006f50c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d9f0e2c50ff6131643fd0b2d5a9f65a7006f50c", "html_url": "https://github.com/rust-lang/rust/commit/2d9f0e2c50ff6131643fd0b2d5a9f65a7006f50c"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "c0f2863d01cd7e2271ef5ef8297a4c3b547359b8", "filename": "compiler/rustc_parse/src/lexer/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a5b25a2cfa1adb52723fa4a5b458dd9d6272117a/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5b25a2cfa1adb52723fa4a5b458dd9d6272117a/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs?ref=a5b25a2cfa1adb52723fa4a5b458dd9d6272117a", "patch": "@@ -153,14 +153,15 @@ impl<'a> StringReader<'a> {\n             match core::slice::memchr::memchr(0xE2, &bytes) {\n                 Some(idx) => {\n                     // bytes are valid UTF-8 -> E2 must be followed by two bytes\n-                    match bytes[idx + 1] {\n+                    let ch = &bytes[idx..idx + 3];\n+                    match ch[1] {\n                         0x80 => {\n-                            if (0xAA..=0xAE).contains(&bytes[idx + 2]) {\n+                            if (0xAA..=0xAE).contains(&ch[2]) {\n                                 break true;\n                             }\n                         }\n                         0x81 => {\n-                            if (0xA6..=0xA9).contains(&bytes[idx + 2]) {\n+                            if (0xA6..=0xA9).contains(&ch[2]) {\n                                 break true;\n                             }\n                         }"}]}