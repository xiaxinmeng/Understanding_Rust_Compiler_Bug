{"sha": "9c9dbc24081e569cffe7a1cf83020b4b4907d7be", "node_id": "C_kwDOAAsO6NoAKDljOWRiYzI0MDgxZTU2OWNmZmU3YTFjZjgzMDIwYjRiNDkwN2Q3YmU", "commit": {"author": {"name": "Krishna Sundarram", "email": "krishnasundarram@monzo.com", "date": "2023-02-16T14:20:40Z"}, "committer": {"name": "Krishna Sundarram", "email": "krishnasundarram@monzo.com", "date": "2023-02-16T14:47:30Z"}, "message": "Fix DOC_MARKDOWN requiring backticks on links to external websites", "tree": {"sha": "b3b1c42fdd32cbb4b9413b5a86e571b78d0abf7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3b1c42fdd32cbb4b9413b5a86e571b78d0abf7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c9dbc24081e569cffe7a1cf83020b4b4907d7be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c9dbc24081e569cffe7a1cf83020b4b4907d7be", "html_url": "https://github.com/rust-lang/rust/commit/9c9dbc24081e569cffe7a1cf83020b4b4907d7be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c9dbc24081e569cffe7a1cf83020b4b4907d7be/comments", "author": {"login": "nindalf", "id": 1257998, "node_id": "MDQ6VXNlcjEyNTc5OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1257998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nindalf", "html_url": "https://github.com/nindalf", "followers_url": "https://api.github.com/users/nindalf/followers", "following_url": "https://api.github.com/users/nindalf/following{/other_user}", "gists_url": "https://api.github.com/users/nindalf/gists{/gist_id}", "starred_url": "https://api.github.com/users/nindalf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nindalf/subscriptions", "organizations_url": "https://api.github.com/users/nindalf/orgs", "repos_url": "https://api.github.com/users/nindalf/repos", "events_url": "https://api.github.com/users/nindalf/events{/privacy}", "received_events_url": "https://api.github.com/users/nindalf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nindalf", "id": 1257998, "node_id": "MDQ6VXNlcjEyNTc5OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1257998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nindalf", "html_url": "https://github.com/nindalf", "followers_url": "https://api.github.com/users/nindalf/followers", "following_url": "https://api.github.com/users/nindalf/following{/other_user}", "gists_url": "https://api.github.com/users/nindalf/gists{/gist_id}", "starred_url": "https://api.github.com/users/nindalf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nindalf/subscriptions", "organizations_url": "https://api.github.com/users/nindalf/orgs", "repos_url": "https://api.github.com/users/nindalf/repos", "events_url": "https://api.github.com/users/nindalf/events{/privacy}", "received_events_url": "https://api.github.com/users/nindalf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86fb33a9738ae4793b136204e011a7cf1a7e255d", "url": "https://api.github.com/repos/rust-lang/rust/commits/86fb33a9738ae4793b136204e011a7cf1a7e255d", "html_url": "https://github.com/rust-lang/rust/commit/86fb33a9738ae4793b136204e011a7cf1a7e255d"}], "stats": {"total": 50, "additions": 15, "deletions": 35}, "files": [{"sha": "5e2811db2f7c0ff2e8fde038f327ef1a2825f0ac", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9c9dbc24081e569cffe7a1cf83020b4b4907d7be/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c9dbc24081e569cffe7a1cf83020b4b4907d7be/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=9c9dbc24081e569cffe7a1cf83020b4b4907d7be", "patch": "@@ -6,6 +6,11 @@ use clippy_utils::ty::{implements_trait, is_type_diagnostic_item};\n use clippy_utils::{is_entrypoint_fn, method_chain_args, return_ty};\n use if_chain::if_chain;\n use itertools::Itertools;\n+use pulldown_cmark::Event::{\n+    Code, End, FootnoteReference, HardBreak, Html, Rule, SoftBreak, Start, TaskListMarker, Text,\n+};\n+use pulldown_cmark::Tag::{CodeBlock, Heading, Item, Link, Paragraph};\n+use pulldown_cmark::{BrokenLink, CodeBlockKind, CowStr, Options};\n use rustc_ast::ast::{Async, AttrKind, Attribute, Fn, FnRetTy, ItemKind};\n use rustc_ast::token::CommentKind;\n use rustc_data_structures::fx::FxHashSet;\n@@ -497,7 +502,6 @@ struct DocHeaders {\n }\n \n fn check_attrs(cx: &LateContext<'_>, valid_idents: &FxHashSet<String>, attrs: &[Attribute]) -> Option<DocHeaders> {\n-    use pulldown_cmark::{BrokenLink, CowStr, Options};\n     /// We don't want the parser to choke on intra doc links. Since we don't\n     /// actually care about rendering them, just pretend that all broken links are\n     /// point to a fake address.\n@@ -538,8 +542,6 @@ fn check_attrs(cx: &LateContext<'_>, valid_idents: &FxHashSet<String>, attrs: &[\n         pulldown_cmark::Parser::new_with_broken_link_callback(&doc, Options::empty(), Some(&mut cb)).into_offset_iter();\n     // Iterate over all `Events` and combine consecutive events into one\n     let events = parser.coalesce(|previous, current| {\n-        use pulldown_cmark::Event::Text;\n-\n         let previous_range = previous.1;\n         let current_range = current.1;\n \n@@ -564,12 +566,6 @@ fn check_doc<'a, Events: Iterator<Item = (pulldown_cmark::Event<'a>, Range<usize\n     spans: &[(usize, Span)],\n ) -> DocHeaders {\n     // true if a safety header was found\n-    use pulldown_cmark::Event::{\n-        Code, End, FootnoteReference, HardBreak, Html, Rule, SoftBreak, Start, TaskListMarker, Text,\n-    };\n-    use pulldown_cmark::Tag::{CodeBlock, Heading, Item, Link, Paragraph};\n-    use pulldown_cmark::{CodeBlockKind, CowStr};\n-\n     let mut headers = DocHeaders::default();\n     let mut in_code = false;\n     let mut in_link = None;\n@@ -660,6 +656,12 @@ fn check_doc<'a, Events: Iterator<Item = (pulldown_cmark::Event<'a>, Range<usize\n                     check_link_quotes(cx, in_link.is_some(), trimmed_text, span, &range, begin, text.len());\n                     // Adjust for the beginning of the current `Event`\n                     let span = span.with_lo(span.lo() + BytePos::from_usize(range.start - begin));\n+                    if let Some(link) = in_link.as_ref()\n+                      && let Ok(url) = Url::parse(link)\n+                      && (url.scheme() == \"https\" || url.scheme() == \"http\") {\n+                        // Don't check the text associated with external URLs\n+                        continue;\n+                    }\n                     text_to_check.push((text, span));\n                 }\n             },"}, {"sha": "ecb0bf3644eede78a4412eb2f187356e581cd00b", "filename": "tests/ui/doc/doc-fixable.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c9dbc24081e569cffe7a1cf83020b4b4907d7be/tests%2Fui%2Fdoc%2Fdoc-fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9c9dbc24081e569cffe7a1cf83020b4b4907d7be/tests%2Fui%2Fdoc%2Fdoc-fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc%2Fdoc-fixable.fixed?ref=9c9dbc24081e569cffe7a1cf83020b4b4907d7be", "patch": "@@ -78,7 +78,7 @@ fn test_allowed() {\n /// This test has [a `link_with_underscores`][chunked-example] inside it. See #823.\n /// See also [the issue tracker](https://github.com/rust-lang/rust-clippy/search?q=clippy::doc_markdown&type=Issues)\n /// on GitHub (which is a camel-cased word, but is OK). And here is another [inline link][inline_link].\n-/// It can also be [`inline_link2`].\n+/// It can also be [inline_link2]. A link to [StackOverflow](https://stackoverflow.com) is also acceptable.\n ///\n /// [chunked-example]: https://en.wikipedia.org/wiki/Chunked_transfer_encoding#Example\n /// [inline_link]: https://foobar"}, {"sha": "11c48dd103d691746448cf5540cf1f1c430b9fe7", "filename": "tests/ui/doc/doc-fixable.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c9dbc24081e569cffe7a1cf83020b4b4907d7be/tests%2Fui%2Fdoc%2Fdoc-fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c9dbc24081e569cffe7a1cf83020b4b4907d7be/tests%2Fui%2Fdoc%2Fdoc-fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc%2Fdoc-fixable.rs?ref=9c9dbc24081e569cffe7a1cf83020b4b4907d7be", "patch": "@@ -75,10 +75,10 @@ fn test_units() {\n fn test_allowed() {\n }\n \n-/// This test has [a link_with_underscores][chunked-example] inside it. See #823.\n+/// This test has [a `link_with_underscores`][chunked-example] inside it. See #823.\n /// See also [the issue tracker](https://github.com/rust-lang/rust-clippy/search?q=clippy::doc_markdown&type=Issues)\n /// on GitHub (which is a camel-cased word, but is OK). And here is another [inline link][inline_link].\n-/// It can also be [inline_link2].\n+/// It can also be [inline_link2]. A link to [StackOverflow](https://stackoverflow.com) is also acceptable.\n ///\n /// [chunked-example]: https://en.wikipedia.org/wiki/Chunked_transfer_encoding#Example\n /// [inline_link]: https://foobar"}, {"sha": "6c67c903c7508e4547bdb116acce9b40578e2e3a", "filename": "tests/ui/doc/doc-fixable.stderr", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9c9dbc24081e569cffe7a1cf83020b4b4907d7be/tests%2Fui%2Fdoc%2Fdoc-fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c9dbc24081e569cffe7a1cf83020b4b4907d7be/tests%2Fui%2Fdoc%2Fdoc-fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc%2Fdoc-fixable.stderr?ref=9c9dbc24081e569cffe7a1cf83020b4b4907d7be", "patch": "@@ -142,28 +142,6 @@ help: try\n LL | /// `be_sure_we_got_to_the_end_of_it`\n    |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n-error: item in documentation is missing backticks\n-  --> $DIR/doc-fixable.rs:78:22\n-   |\n-LL | /// This test has [a link_with_underscores][chunked-example] inside it. See #823.\n-   |                      ^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |\n-LL | /// This test has [a `link_with_underscores`][chunked-example] inside it. See #823.\n-   |                      ~~~~~~~~~~~~~~~~~~~~~~~\n-\n-error: item in documentation is missing backticks\n-  --> $DIR/doc-fixable.rs:81:21\n-   |\n-LL | /// It can also be [inline_link2].\n-   |                     ^^^^^^^^^^^^\n-   |\n-help: try\n-   |\n-LL | /// It can also be [`inline_link2`].\n-   |                     ~~~~~~~~~~~~~~\n-\n error: item in documentation is missing backticks\n   --> $DIR/doc-fixable.rs:91:5\n    |\n@@ -329,5 +307,5 @@ help: try\n LL | /// An iterator over `mycrate::Collection`'s values.\n    |                      ~~~~~~~~~~~~~~~~~~~~~\n \n-error: aborting due to 30 previous errors\n+error: aborting due to 28 previous errors\n "}]}