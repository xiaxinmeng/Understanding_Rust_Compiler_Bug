{"sha": "98b74c580fabe1b29059462a288ffbd8d06de084", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4Yjc0YzU4MGZhYmUxYjI5MDU5NDYyYTI4OGZmYmQ4ZDA2ZGUwODQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-08-29T00:06:03Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-09-05T14:37:11Z"}, "message": "rustc: Migrate `CStore::expored_symbols` to a query", "tree": {"sha": "75910ff05c8e8e7a14855e29aedbb5f466692210", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75910ff05c8e8e7a14855e29aedbb5f466692210"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98b74c580fabe1b29059462a288ffbd8d06de084", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98b74c580fabe1b29059462a288ffbd8d06de084", "html_url": "https://github.com/rust-lang/rust/commit/98b74c580fabe1b29059462a288ffbd8d06de084", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98b74c580fabe1b29059462a288ffbd8d06de084/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed6f868bf7be058921d37447225e7242855aee12", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed6f868bf7be058921d37447225e7242855aee12", "html_url": "https://github.com/rust-lang/rust/commit/ed6f868bf7be058921d37447225e7242855aee12"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "995bbd65388d9167273065b18b2a49b0a88d1808", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98b74c580fabe1b29059462a288ffbd8d06de084/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98b74c580fabe1b29059462a288ffbd8d06de084/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=98b74c580fabe1b29059462a288ffbd8d06de084", "patch": "@@ -535,6 +535,7 @@ define_dep_nodes!( <'tcx>\n     [] GetPanicStrategy(CrateNum),\n     [] IsNoBuiltins(CrateNum),\n     [] ImplDefaultness(DefId),\n+    [] ExportedSymbols(CrateNum),\n );\n \n trait DepNodeParams<'a, 'gcx: 'tcx + 'a, 'tcx: 'a> : fmt::Debug {"}, {"sha": "26577a94ffc9e4958094ee41eae3b830ee3cf265", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98b74c580fabe1b29059462a288ffbd8d06de084/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98b74c580fabe1b29059462a288ffbd8d06de084/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=98b74c580fabe1b29059462a288ffbd8d06de084", "patch": "@@ -258,7 +258,6 @@ pub trait CrateStore {\n     fn plugin_registrar_fn(&self, cnum: CrateNum) -> Option<DefId>;\n     fn derive_registrar_fn(&self, cnum: CrateNum) -> Option<DefId>;\n     fn native_libraries(&self, cnum: CrateNum) -> Vec<NativeLibrary>;\n-    fn exported_symbols(&self, cnum: CrateNum) -> Vec<DefId>;\n \n     // resolve\n     fn def_key(&self, def: DefId) -> DefKey;\n@@ -367,7 +366,6 @@ impl CrateStore for DummyCrateStore {\n         { bug!(\"derive_registrar_fn\") }\n     fn native_libraries(&self, cnum: CrateNum) -> Vec<NativeLibrary>\n         { bug!(\"native_libraries\") }\n-    fn exported_symbols(&self, cnum: CrateNum) -> Vec<DefId> { bug!(\"exported_symbols\") }\n \n     // resolve\n     fn def_key(&self, def: DefId) -> DefKey { bug!(\"def_key\") }"}, {"sha": "2da806870f0137465a3c63e156495ad109b49d71", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/98b74c580fabe1b29059462a288ffbd8d06de084/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98b74c580fabe1b29059462a288ffbd8d06de084/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=98b74c580fabe1b29059462a288ffbd8d06de084", "patch": "@@ -587,6 +587,12 @@ impl<'tcx> QueryDescription for queries::is_sanitizer_runtime<'tcx> {\n     }\n }\n \n+impl<'tcx> QueryDescription for queries::exported_symbols<'tcx> {\n+    fn describe(_tcx: TyCtxt, _: CrateNum) -> String {\n+        format!(\"looking up the exported symbols of a crate\")\n+    }\n+}\n+\n // If enabled, send a message to the profile-queries thread\n macro_rules! profq_msg {\n     ($tcx:expr, $msg:expr) => {\n@@ -1163,6 +1169,7 @@ define_maps! { <'tcx>\n     [] fn lint_levels: lint_levels_node(CrateNum) -> Rc<lint::LintLevelMap>,\n \n     [] fn impl_defaultness: ImplDefaultness(DefId) -> hir::Defaultness,\n+    [] fn exported_symbols: ExportedSymbols(CrateNum) -> Rc<Vec<DefId>>,\n }\n \n fn type_param_predicates<'tcx>((item_id, param_id): (DefId, DefId)) -> DepConstructor<'tcx> {"}, {"sha": "22a1205bbfc38c3c4e534cd41f2e82a7c39c6b30", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/98b74c580fabe1b29059462a288ffbd8d06de084/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98b74c580fabe1b29059462a288ffbd8d06de084/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=98b74c580fabe1b29059462a288ffbd8d06de084", "patch": "@@ -163,6 +163,7 @@ provide! { <'tcx> tcx, def_id, cdata,\n     extern_crate => { Rc::new(cdata.extern_crate.get()) }\n     is_no_builtins => { cdata.is_no_builtins(&tcx.dep_graph) }\n     impl_defaultness => { cdata.get_impl_defaultness(def_id.index) }\n+    exported_symbols => { Rc::new(cdata.get_exported_symbols(&tcx.dep_graph)) }\n }\n \n pub fn provide_local<'tcx>(providers: &mut Providers<'tcx>) {\n@@ -302,11 +303,6 @@ impl CrateStore for cstore::CStore {\n         self.get_crate_data(cnum).get_native_libraries(&self.dep_graph)\n     }\n \n-    fn exported_symbols(&self, cnum: CrateNum) -> Vec<DefId>\n-    {\n-        self.get_crate_data(cnum).get_exported_symbols(&self.dep_graph)\n-    }\n-\n     /// Returns the `DefKey` for a given `DefId`. This indicates the\n     /// parent `DefId` as well as some idea of what kind of data the\n     /// `DefId` refers to."}, {"sha": "f1b18c64dcb94ef46947434d331f93f63e8f55d3", "filename": "src/librustc_trans/back/symbol_export.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98b74c580fabe1b29059462a288ffbd8d06de084/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98b74c580fabe1b29059462a288ffbd8d06de084/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs?ref=98b74c580fabe1b29059462a288ffbd8d06de084", "patch": "@@ -131,8 +131,6 @@ impl ExportedSymbols {\n                 tcx.is_panic_runtime(cnum) || tcx.is_compiler_builtins(cnum);\n \n             let crate_exports = tcx\n-                .sess\n-                .cstore\n                 .exported_symbols(cnum)\n                 .iter()\n                 .map(|&def_id| {"}]}