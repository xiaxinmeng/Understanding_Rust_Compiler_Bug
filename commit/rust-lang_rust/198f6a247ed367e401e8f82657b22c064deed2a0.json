{"sha": "198f6a247ed367e401e8f82657b22c064deed2a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5OGY2YTI0N2VkMzY3ZTQwMWU4ZjgyNjU3YjIyYzA2NGRlZWQyYTA=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-01T20:18:16Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-01T20:18:16Z"}, "message": "Print iters as iters not fns.", "tree": {"sha": "68ba6c48c3c111f90cc6975e0c0ff9ea97515444", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68ba6c48c3c111f90cc6975e0c0ff9ea97515444"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/198f6a247ed367e401e8f82657b22c064deed2a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/198f6a247ed367e401e8f82657b22c064deed2a0", "html_url": "https://github.com/rust-lang/rust/commit/198f6a247ed367e401e8f82657b22c064deed2a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/198f6a247ed367e401e8f82657b22c064deed2a0/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "023bbc0449546bfd93d96f1b6083901e2245c9f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/023bbc0449546bfd93d96f1b6083901e2245c9f7", "html_url": "https://github.com/rust-lang/rust/commit/023bbc0449546bfd93d96f1b6083901e2245c9f7"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "717cce131176eb7c93df25ca797d8ab62edef906", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/198f6a247ed367e401e8f82657b22c064deed2a0/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198f6a247ed367e401e8f82657b22c064deed2a0/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=198f6a247ed367e401e8f82657b22c064deed2a0", "patch": "@@ -79,7 +79,7 @@ fn item_to_str(&@ast::item ty) -> str { be to_str(ty, print_item); }\n fn fun_to_str(&ast::_fn f, str name, vec[ast::ty_param] params) -> str {\n     auto writer = io::string_writer();\n     auto s = rust_printer(writer.get_writer());\n-    print_fn(s, f.decl, name, params);\n+    print_fn(s, f.decl, f.proto, name, params);\n     eof(s.s);\n     ret writer.get_str();\n }\n@@ -279,7 +279,7 @@ fn print_item(&ps s, &@ast::item item) {\n             end(s.s); // end the outer cbox\n         }\n         case (ast::item_fn(?name,?_fn,?typarams,_,_)) {\n-            print_fn(s, _fn.decl, name, typarams);\n+            print_fn(s, _fn.decl, _fn.proto, name, typarams);\n             word(s.s, \" \");\n             print_block(s, _fn.body);\n         }\n@@ -312,7 +312,7 @@ fn print_item(&ps s, &@ast::item item) {\n                     }\n                     case (ast::native_item_fn(?id,?lname,?decl,\n                                              ?typarams,_,_)) {\n-                        print_fn(s, decl, id, typarams);\n+                        print_fn(s, decl, ast::proto_fn, id, typarams);\n                         end(s.s); // end head-ibox\n                         alt (lname) {\n                             case (option::none[str]) {}\n@@ -388,7 +388,8 @@ fn print_item(&ps s, &@ast::item item) {\n                 let vec[ast::ty_param] typarams = [];\n                 hardbreak(s.s);\n                 maybe_print_comment(s, meth.span.lo);\n-                print_fn(s, meth.node.meth.decl, meth.node.ident, typarams);\n+                print_fn(s, meth.node.meth.decl, meth.node.meth.proto,\n+                         meth.node.ident, typarams);\n                 word(s.s, \" \");\n                 print_block(s, meth.node.meth.body);\n             }\n@@ -934,11 +935,15 @@ fn print_pat(&ps s, &@ast::pat pat) {\n     }\n }\n \n-fn print_fn(&ps s, ast::fn_decl decl, str name,\n+fn print_fn(&ps s, ast::fn_decl decl, ast::proto proto, str name,\n             vec[ast::ty_param] typarams) {\n     alt (decl.purity) {\n         case (ast::impure_fn) {\n-            head(s, \"fn\");\n+            if (proto == ast::proto_iter) {\n+                head(s, \"iter\");\n+            } else {\n+                head(s, \"fn\");\n+            }\n         }\n         case (_) {\n             head(s, \"pred\");"}]}