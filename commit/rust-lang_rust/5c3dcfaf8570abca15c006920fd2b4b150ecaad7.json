{"sha": "5c3dcfaf8570abca15c006920fd2b4b150ecaad7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjM2RjZmFmODU3MGFiY2ExNWMwMDY5MjBmZDJiNGIxNTBlY2FhZDc=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-12-18T13:17:29Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-12-20T01:45:40Z"}, "message": "rustc: do not raise the alignment of optimized enums to the niche's alignment.", "tree": {"sha": "f36c5af6b8985137bcd9a7c585fdc779e62dfaec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f36c5af6b8985137bcd9a7c585fdc779e62dfaec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c3dcfaf8570abca15c006920fd2b4b150ecaad7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c3dcfaf8570abca15c006920fd2b4b150ecaad7", "html_url": "https://github.com/rust-lang/rust/commit/5c3dcfaf8570abca15c006920fd2b4b150ecaad7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c3dcfaf8570abca15c006920fd2b4b150ecaad7/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b39c4bc12358078f77ddd01288b24252f757f37d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b39c4bc12358078f77ddd01288b24252f757f37d", "html_url": "https://github.com/rust-lang/rust/commit/b39c4bc12358078f77ddd01288b24252f757f37d"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "978c6c742339c12d629c8ffe236a6f1a4d809170", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5c3dcfaf8570abca15c006920fd2b4b150ecaad7/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c3dcfaf8570abca15c006920fd2b4b150ecaad7/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=5c3dcfaf8570abca15c006920fd2b4b150ecaad7", "patch": "@@ -1484,27 +1484,25 @@ impl<'a, 'tcx> LayoutDetails {\n                                     Some(niche) => niche,\n                                     None => continue\n                                 };\n+                            let mut align = dl.aggregate_align;\n                             let st = variants.iter().enumerate().map(|(j, v)| {\n                                 let mut st = univariant_uninterned(v,\n                                     &def.repr, StructKind::AlwaysSized)?;\n                                 st.variants = Variants::Single { index: j };\n+\n+                                align = align.max(st.align);\n+\n                                 Ok(st)\n                             }).collect::<Result<Vec<_>, _>>()?;\n \n                             let offset = st[i].fields.offset(field_index) + offset;\n-                            let LayoutDetails { mut size, mut align, .. } = st[i];\n+                            let size = st[i].size;\n \n-                            let mut niche_align = niche.value.align(dl);\n                             let abi = if offset.bytes() == 0 && niche.value.size(dl) == size {\n                                 Abi::Scalar(niche.clone())\n                             } else {\n-                                if offset.abi_align(niche_align) != offset {\n-                                    niche_align = dl.i8_align;\n-                                }\n                                 Abi::Aggregate { sized: true }\n                             };\n-                            align = align.max(niche_align);\n-                            size = size.abi_align(align);\n \n                             return Ok(tcx.intern_layout(LayoutDetails {\n                                 variants: Variants::NicheFilling {"}, {"sha": "7968ae2278ae93a06eba631c4885e39408d52972", "filename": "src/test/run-pass/packed-struct-optimized-enum.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5c3dcfaf8570abca15c006920fd2b4b150ecaad7/src%2Ftest%2Frun-pass%2Fpacked-struct-optimized-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c3dcfaf8570abca15c006920fd2b4b150ecaad7/src%2Ftest%2Frun-pass%2Fpacked-struct-optimized-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-optimized-enum.rs?ref=5c3dcfaf8570abca15c006920fd2b4b150ecaad7", "patch": "@@ -19,7 +19,9 @@ impl<T: Copy> Clone for Packed<T> {\n fn sanity_check_size<T: Copy>(one: T) {\n     let two = [one, one];\n     let stride = (&two[1] as *const _ as usize) - (&two[0] as *const _ as usize);\n-    assert_eq!(stride, std::mem::size_of_val(&one));\n+    let (size, align) = (std::mem::size_of::<T>(), std::mem::align_of::<T>());\n+    assert_eq!(stride, size);\n+    assert_eq!(size % align, 0);\n }\n \n fn main() {\n@@ -32,5 +34,12 @@ fn main() {\n     // In #46769, `Option<(Packed<&()>, bool)>` was found to have\n     // pointer alignment, without actually being aligned in size.\n     // E.g. on 64-bit platforms, it had alignment `8` but size `9`.\n-    sanity_check_size(Some((Packed(&()), true)));\n+    type PackedRefAndBool<'a> = (Packed<&'a ()>, bool);\n+    sanity_check_size::<Option<PackedRefAndBool>>(Some((Packed(&()), true)));\n+\n+    // Make sure we don't pay for the enum optimization in size,\n+    // e.g. we shouldn't need extra padding after the packed data.\n+    assert_eq!(std::mem::align_of::<Option<PackedRefAndBool>>(), 1);\n+    assert_eq!(std::mem::size_of::<Option<PackedRefAndBool>>(),\n+               std::mem::size_of::<PackedRefAndBool>());\n }"}]}