{"sha": "21975a1aaa682a88266970459f6f67829774d6c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxOTc1YTFhYWE2ODJhODgyNjY5NzA0NTlmNmY2NzgyOTc3NGQ2YzQ=", "commit": {"author": {"name": "TyPR124", "email": "t.ruckinger@gmail.com", "date": "2020-03-16T20:12:54Z"}, "committer": {"name": "TyPR124", "email": "t.ruckinger@gmail.com", "date": "2020-03-16T20:12:54Z"}, "message": "add comments about safety", "tree": {"sha": "8a630dede199472853626b859a5db356f4934689", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a630dede199472853626b859a5db356f4934689"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21975a1aaa682a88266970459f6f67829774d6c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21975a1aaa682a88266970459f6f67829774d6c4", "html_url": "https://github.com/rust-lang/rust/commit/21975a1aaa682a88266970459f6f67829774d6c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21975a1aaa682a88266970459f6f67829774d6c4/comments", "author": {"login": "TyPR124", "id": 29851190, "node_id": "MDQ6VXNlcjI5ODUxMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/29851190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TyPR124", "html_url": "https://github.com/TyPR124", "followers_url": "https://api.github.com/users/TyPR124/followers", "following_url": "https://api.github.com/users/TyPR124/following{/other_user}", "gists_url": "https://api.github.com/users/TyPR124/gists{/gist_id}", "starred_url": "https://api.github.com/users/TyPR124/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TyPR124/subscriptions", "organizations_url": "https://api.github.com/users/TyPR124/orgs", "repos_url": "https://api.github.com/users/TyPR124/repos", "events_url": "https://api.github.com/users/TyPR124/events{/privacy}", "received_events_url": "https://api.github.com/users/TyPR124/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TyPR124", "id": 29851190, "node_id": "MDQ6VXNlcjI5ODUxMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/29851190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TyPR124", "html_url": "https://github.com/TyPR124", "followers_url": "https://api.github.com/users/TyPR124/followers", "following_url": "https://api.github.com/users/TyPR124/following{/other_user}", "gists_url": "https://api.github.com/users/TyPR124/gists{/gist_id}", "starred_url": "https://api.github.com/users/TyPR124/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TyPR124/subscriptions", "organizations_url": "https://api.github.com/users/TyPR124/orgs", "repos_url": "https://api.github.com/users/TyPR124/repos", "events_url": "https://api.github.com/users/TyPR124/events{/privacy}", "received_events_url": "https://api.github.com/users/TyPR124/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef2957de137fb8d6959310e5d8f2fa1d600d7d36", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef2957de137fb8d6959310e5d8f2fa1d600d7d36", "html_url": "https://github.com/rust-lang/rust/commit/ef2957de137fb8d6959310e5d8f2fa1d600d7d36"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "45417403c1084c22bae18641e489d088737d75d1", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21975a1aaa682a88266970459f6f67829774d6c4/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21975a1aaa682a88266970459f6f67829774d6c4/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=21975a1aaa682a88266970459f6f67829774d6c4", "patch": "@@ -525,11 +525,15 @@ impl OsStr {\n \n     #[inline]\n     fn from_inner(inner: &Slice) -> &OsStr {\n+        // Safety: OsStr is just a wrapper of Slice,\n+        // therefore converting &Slice to &OsStr is safe.\n         unsafe { &*(inner as *const Slice as *const OsStr) }\n     }\n \n     #[inline]\n     fn from_inner_mut(inner: &mut Slice) -> &mut OsStr {\n+        // Safety: OsStr is just a wrapper of Slice,\n+        // therefore converting &mut Slice to &mut OsStr is safe.\n         unsafe { &mut *(inner as *mut Slice as *mut OsStr) }\n     }\n "}, {"sha": "e768d9c326b0aac8df76e3bb4c7d5154d357f711", "filename": "src/libstd/sys/windows/os_str.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21975a1aaa682a88266970459f6f67829774d6c4/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21975a1aaa682a88266970459f6f67829774d6c4/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs?ref=21975a1aaa682a88266970459f6f67829774d6c4", "patch": "@@ -77,11 +77,17 @@ impl Buf {\n     }\n \n     pub fn as_slice(&self) -> &Slice {\n+        // Safety: Slice is just a wrapper for Wtf8,\n+        // and as_slice returns &Wtf8. Therefore,\n+        // transmute &Wtf8 to &Slice is safe.\n         unsafe { mem::transmute(self.inner.as_slice()) }\n     }\n \n     #[inline]\n     pub fn as_mut_slice(&mut self) -> &mut Slice {\n+        // Safety: Slice is just a wrapper for Wtf8,\n+        // and as_slice returns &Wtf8. Therefore,\n+        // transmute &mut Wtf8 to &mut Slice is safe.\n         unsafe { mem::transmute(self.inner.as_mut_slice()) }\n     }\n "}, {"sha": "c5d02fb17722f4401ddcb70a60b5a53fc32c6ecc", "filename": "src/libstd/sys_common/os_str_bytes.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21975a1aaa682a88266970459f6f67829774d6c4/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21975a1aaa682a88266970459f6f67829774d6c4/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs?ref=21975a1aaa682a88266970459f6f67829774d6c4", "patch": "@@ -106,11 +106,17 @@ impl Buf {\n \n     #[inline]\n     pub fn as_slice(&self) -> &Slice {\n+        // Safety: Slice just wraps [u8],\n+        // and &*self.inner is &[u8], therefore\n+        // transmuting &[u8] to &Slice is safe.\n         unsafe { mem::transmute(&*self.inner) }\n     }\n \n     #[inline]\n     pub fn as_mut_slice(&mut self) -> &mut Slice {\n+        // Safety: Slice just wraps [u8],\n+        // and &mut *self.inner is &mut [u8], therefore\n+        // transmuting &mut [u8] to &mut Slice is safe.\n         unsafe { mem::transmute(&mut *self.inner) }\n     }\n "}]}