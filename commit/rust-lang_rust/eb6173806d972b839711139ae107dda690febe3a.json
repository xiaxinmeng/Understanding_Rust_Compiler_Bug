{"sha": "eb6173806d972b839711139ae107dda690febe3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNjE3MzgwNmQ5NzJiODM5NzExMTM5YWUxMDdkZGE2OTBmZWJlM2E=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-07-30T20:44:59Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-07-30T20:44:59Z"}, "message": "return TargetResult", "tree": {"sha": "53028187cc3d72c1992d7ceacf3151a289cc165a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53028187cc3d72c1992d7ceacf3151a289cc165a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb6173806d972b839711139ae107dda690febe3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb6173806d972b839711139ae107dda690febe3a", "html_url": "https://github.com/rust-lang/rust/commit/eb6173806d972b839711139ae107dda690febe3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb6173806d972b839711139ae107dda690febe3a/comments", "author": null, "committer": null, "parents": [{"sha": "87fa075dbae4496c94559f4009c58938e7affc4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/87fa075dbae4496c94559f4009c58938e7affc4b", "html_url": "https://github.com/rust-lang/rust/commit/87fa075dbae4496c94559f4009c58938e7affc4b"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "028c91eadaeb3e672b00f016a1f9df6278c13f08", "filename": "src/librustc_back/target/arm_unknown_linux_musleabi.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eb6173806d972b839711139ae107dda690febe3a/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb6173806d972b839711139ae107dda690febe3a/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabi.rs?ref=eb6173806d972b839711139ae107dda690febe3a", "patch": "@@ -8,16 +8,16 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::Target;\n+use target::{Target, TargetResult};\n \n-pub fn target() -> Target {\n+pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();\n \n     // Most of these settings are copied from the arm_unknown_linux_gnueabi\n     // target.\n     base.features = \"+v6\".to_string();\n     base.max_atomic_width = 64;\n-    Target {\n+    Ok(Target {\n         // It's important we use \"gnueabi\" and not \"musleabi\" here. LLVM uses it\n         // to determine the calling convention and float ABI, and it doesn't\n         // support the \"musleabi\" value.\n@@ -30,5 +30,5 @@ pub fn target() -> Target {\n         target_env: \"musl\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         options: base,\n-    }\n+    })\n }"}, {"sha": "c7dda186f42589cb97a8be622a7e5c635381aa86", "filename": "src/librustc_back/target/arm_unknown_linux_musleabihf.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eb6173806d972b839711139ae107dda690febe3a/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb6173806d972b839711139ae107dda690febe3a/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabihf.rs?ref=eb6173806d972b839711139ae107dda690febe3a", "patch": "@@ -8,16 +8,16 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::Target;\n+use target::{Target, TargetResult};\n \n-pub fn target() -> Target {\n+pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();\n \n     // Most of these settings are copied from the arm_unknown_linux_gnueabihf\n     // target.\n     base.features = \"+v6,+vfp2\".to_string();\n     base.max_atomic_width = 64;\n-    Target {\n+    Ok(Target {\n         // It's important we use \"gnueabihf\" and not \"musleabihf\" here. LLVM\n         // uses it to determine the calling convention and float ABI, and it\n         // doesn't support the \"musleabihf\" value.\n@@ -30,5 +30,5 @@ pub fn target() -> Target {\n         target_env: \"musl\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         options: base,\n-    }\n+    })\n }"}, {"sha": "e40704e5d49975e56c51bb88b22b0485bba7f530", "filename": "src/librustc_back/target/armv7_unknown_linux_musleabihf.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eb6173806d972b839711139ae107dda690febe3a/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb6173806d972b839711139ae107dda690febe3a/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_linux_musleabihf.rs?ref=eb6173806d972b839711139ae107dda690febe3a", "patch": "@@ -8,17 +8,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::Target;\n+use target::{Target, TargetResult};\n \n-pub fn target() -> Target {\n+pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();\n \n     // Most of these settings are copied from the armv7_unknown_linux_gnueabihf\n     // target.\n     base.features = \"+v7,+vfp3,+neon\".to_string();\n     base.cpu = \"cortex-a8\".to_string();\n     base.max_atomic_width = 64;\n-    Target {\n+    Ok(Target {\n         // It's important we use \"gnueabihf\" and not \"musleabihf\" here. LLVM\n         // uses it to determine the calling convention and float ABI, and LLVM\n         // doesn't support the \"musleabihf\" value.\n@@ -31,5 +31,5 @@ pub fn target() -> Target {\n         target_env: \"musl\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         options: base,\n-    }\n+    })\n }"}]}