{"sha": "3c55a26cb489abd4c8e8dc4835bad77ec80be493", "node_id": "C_kwDOAAsO6NoAKDNjNTVhMjZjYjQ4OWFiZDRjOGU4ZGM0ODM1YmFkNzdlYzgwYmU0OTM", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-07-15T16:10:52Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-07-16T11:39:38Z"}, "message": "Correctly handle usage of private items in public API for JSON output format", "tree": {"sha": "ff0313fd7c451d2105e40f079685d2c6eea36f29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff0313fd7c451d2105e40f079685d2c6eea36f29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c55a26cb489abd4c8e8dc4835bad77ec80be493", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c55a26cb489abd4c8e8dc4835bad77ec80be493", "html_url": "https://github.com/rust-lang/rust/commit/3c55a26cb489abd4c8e8dc4835bad77ec80be493", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c55a26cb489abd4c8e8dc4835bad77ec80be493/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a15c7147f90afaa64ae3ff27fcbd678e2e44a8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a15c7147f90afaa64ae3ff27fcbd678e2e44a8e", "html_url": "https://github.com/rust-lang/rust/commit/1a15c7147f90afaa64ae3ff27fcbd678e2e44a8e"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "0e9a9e0e506464bd2fd2bb585374942c840bc8ff", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3c55a26cb489abd4c8e8dc4835bad77ec80be493/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c55a26cb489abd4c8e8dc4835bad77ec80be493/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=3c55a26cb489abd4c8e8dc4835bad77ec80be493", "patch": "@@ -81,6 +81,8 @@ pub(crate) struct DocContext<'tcx> {\n     pub(crate) inlined: FxHashSet<ItemId>,\n     /// Used by `calculate_doc_coverage`.\n     pub(crate) output_format: OutputFormat,\n+    /// Used by `strip_private`.\n+    pub(crate) show_coverage: bool,\n }\n \n impl<'tcx> DocContext<'tcx> {\n@@ -381,6 +383,7 @@ pub(crate) fn run_global_ctxt(\n         inlined: FxHashSet::default(),\n         output_format,\n         render_options,\n+        show_coverage,\n     };\n \n     // Small hack to force the Sized trait to be present."}, {"sha": "9ba841a31cf9545b71a207ffb4cd7958dae6e72c", "filename": "src/librustdoc/passes/strip_private.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c55a26cb489abd4c8e8dc4835bad77ec80be493/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c55a26cb489abd4c8e8dc4835bad77ec80be493/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs?ref=3c55a26cb489abd4c8e8dc4835bad77ec80be493", "patch": "@@ -24,6 +24,7 @@ pub(crate) fn strip_private(mut krate: clean::Crate, cx: &mut DocContext<'_>) ->\n             retained: &mut retained,\n             access_levels: &cx.cache.access_levels,\n             update_retained: true,\n+            is_json_output: cx.output_format.is_json() && !cx.show_coverage,\n         };\n         krate = ImportStripper.fold_crate(stripper.fold_crate(krate));\n     }"}, {"sha": "5f2f50e712b532f9f822608de8bb928aebd9ab52", "filename": "src/librustdoc/passes/stripper.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3c55a26cb489abd4c8e8dc4835bad77ec80be493/src%2Flibrustdoc%2Fpasses%2Fstripper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c55a26cb489abd4c8e8dc4835bad77ec80be493/src%2Flibrustdoc%2Fpasses%2Fstripper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstripper.rs?ref=3c55a26cb489abd4c8e8dc4835bad77ec80be493", "patch": "@@ -3,14 +3,29 @@ use rustc_hir::def_id::DefId;\n use rustc_middle::middle::privacy::AccessLevels;\n use std::mem;\n \n-use crate::clean::{self, Item, ItemIdSet};\n+use crate::clean::{self, Item, ItemId, ItemIdSet};\n use crate::fold::{strip_item, DocFolder};\n use crate::formats::cache::Cache;\n \n pub(crate) struct Stripper<'a> {\n     pub(crate) retained: &'a mut ItemIdSet,\n     pub(crate) access_levels: &'a AccessLevels<DefId>,\n     pub(crate) update_retained: bool,\n+    pub(crate) is_json_output: bool,\n+}\n+\n+impl<'a> Stripper<'a> {\n+    // We need to handle this differently for the JSON output because some non exported items could\n+    // be used in public API. And so, we need these items as well. `is_exported` only checks if they\n+    // are in the public API, which is not enough.\n+    #[inline]\n+    fn is_item_reachable(&self, item_id: ItemId) -> bool {\n+        if self.is_json_output {\n+            self.access_levels.is_reachable(item_id.expect_def_id())\n+        } else {\n+            self.access_levels.is_exported(item_id.expect_def_id())\n+        }\n+    }\n }\n \n impl<'a> DocFolder for Stripper<'a> {\n@@ -45,9 +60,8 @@ impl<'a> DocFolder for Stripper<'a> {\n             | clean::TraitAliasItem(..)\n             | clean::MacroItem(..)\n             | clean::ForeignTypeItem => {\n-                if i.item_id.is_local()\n-                    && !self.access_levels.is_exported(i.item_id.expect_def_id())\n-                {\n+                let item_id = i.item_id;\n+                if item_id.is_local() && !self.is_item_reachable(item_id) {\n                     debug!(\"Stripper: stripping {:?} {:?}\", i.type_(), i.name);\n                     return None;\n                 }"}]}