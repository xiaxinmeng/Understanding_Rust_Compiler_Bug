{"sha": "0cb9e36090fcaa9243b866a61044018a9e6b8c41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjYjllMzYwOTBmY2FhOTI0M2I4NjZhNjEwNDQwMThhOWU2YjhjNDE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-29T14:41:09Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-30T05:16:56Z"}, "message": "rustc -> rustc_middle part 2", "tree": {"sha": "f7b41e8db8369e09bfde0f12810ac10f34aa536b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7b41e8db8369e09bfde0f12810ac10f34aa536b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cb9e36090fcaa9243b866a61044018a9e6b8c41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cb9e36090fcaa9243b866a61044018a9e6b8c41", "html_url": "https://github.com/rust-lang/rust/commit/0cb9e36090fcaa9243b866a61044018a9e6b8c41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cb9e36090fcaa9243b866a61044018a9e6b8c41/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7710f2dd5cdb812763b7c7e7a35f3184c647315e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7710f2dd5cdb812763b7c7e7a35f3184c647315e", "html_url": "https://github.com/rust-lang/rust/commit/7710f2dd5cdb812763b7c7e7a35f3184c647315e"}], "stats": {"total": 3024, "additions": 1510, "deletions": 1514}, "files": [{"sha": "9bbdce94a0623b0f7fb585a360405a4cb2f1f840", "filename": "src/libcore/raw.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibcore%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibcore%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fraw.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -6,7 +6,7 @@\n //! They can be used as targets of transmutes in unsafe code for manipulating\n //! the raw representations directly.\n //!\n-//! Their definition should always match the ABI defined in `rustc::back::abi`.\n+//! Their definition should always match the ABI defined in `rustc_target::abi`.\n \n /// The representation of a trait object like `&SomeTrait`.\n ///"}, {"sha": "ab5a844e58f7a18d9aa8496d77c1022cb2c0b3ed", "filename": "src/librustc_attr/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_attr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_attr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_attr%2Fbuiltin.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -870,7 +870,7 @@ pub fn find_repr_attrs(sess: &ParseSess, attr: &Attribute) -> Vec<ReprAttr> {\n                     let parse_alignment = |node: &ast::LitKind| -> Result<u32, &'static str> {\n                         if let ast::LitKind::Int(literal, ast::LitIntType::Unsuffixed) = node {\n                             if literal.is_power_of_two() {\n-                                // rustc::ty::layout::Align restricts align to <= 2^29\n+                                // rustc_middle::ty::layout::Align restricts align to <= 2^29\n                                 if *literal <= 1 << 29 {\n                                     Ok(*literal as u32)\n                                 } else {"}, {"sha": "b47b3d3b41262c3dbe0212e7cc3705b34206a628", "filename": "src/librustc_codegen_llvm/abi.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fabi.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,9 +5,9 @@ use crate::type_::Type;\n use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n \n-use rustc::bug;\n-use rustc::ty::layout::{self};\n-use rustc::ty::Ty;\n+use rustc_middle::bug;\n+use rustc_middle::ty::layout::{self};\n+use rustc_middle::ty::Ty;\n use rustc_codegen_ssa::mir::operand::OperandValue;\n use rustc_codegen_ssa::mir::place::PlaceRef;\n use rustc_codegen_ssa::traits::*;\n@@ -17,7 +17,7 @@ use rustc_target::abi::{HasDataLayout, LayoutOf};\n \n use libc::c_uint;\n \n-pub use rustc::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n+pub use rustc_middle::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n pub use rustc_target::abi::call::*;\n pub use rustc_target::spec::abi::Abi;\n "}, {"sha": "52f5294da7c42d1794958aaac51e14a58cbfb6d7", "filename": "src/librustc_codegen_llvm/allocator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fallocator.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use crate::attributes;\n use libc::c_uint;\n-use rustc::bug;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::bug;\n+use rustc_middle::ty::TyCtxt;\n use rustc_ast::expand::allocator::{AllocatorKind, AllocatorTy, ALLOCATOR_METHODS};\n \n use crate::llvm::{self, False, True};"}, {"sha": "ffacf0877d4756e9eb2894b78e98ab094245c4ac", "filename": "src/librustc_codegen_llvm/attributes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fattributes.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,10 +2,10 @@\n \n use std::ffi::CString;\n \n-use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n-use rustc::ty::layout::HasTyCtxt;\n-use rustc::ty::query::Providers;\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n+use rustc_middle::ty::layout::HasTyCtxt;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_codegen_ssa::traits::*;\n use rustc_data_structures::const_cstr;\n use rustc_data_structures::fx::FxHashMap;"}, {"sha": "f1a8c5d0f4ca800a43e1c708697c47fefd018a86", "filename": "src/librustc_codegen_llvm/back/lto.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -6,9 +6,9 @@ use crate::llvm::archive_ro::ArchiveRO;\n use crate::llvm::{self, False, True};\n use crate::{LlvmCodegenBackend, ModuleLlvm};\n use log::{debug, info};\n-use rustc::bug;\n-use rustc::dep_graph::WorkProduct;\n-use rustc::middle::exported_symbols::SymbolExportLevel;\n+use rustc_middle::bug;\n+use rustc_middle::dep_graph::WorkProduct;\n+use rustc_middle::middle::exported_symbols::SymbolExportLevel;\n use rustc_codegen_ssa::back::lto::{LtoModuleCodegen, SerializedModule, ThinModule, ThinShared};\n use rustc_codegen_ssa::back::symbol_export;\n use rustc_codegen_ssa::back::write::{CodegenContext, FatLTOInput, ModuleConfig};"}, {"sha": "f5d3c04012430b8a23372ecc6bcc21410f37f2c0", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -14,8 +14,8 @@ use crate::type_::Type;\n use crate::LlvmCodegenBackend;\n use crate::ModuleLlvm;\n use log::debug;\n-use rustc::bug;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::bug;\n+use rustc_middle::ty::TyCtxt;\n use rustc_codegen_ssa::back::write::{BitcodeSection, CodegenContext, EmitObj, ModuleConfig};\n use rustc_codegen_ssa::traits::*;\n use rustc_codegen_ssa::{CompiledModule, ModuleCodegen, RLIB_BYTECODE_EXTENSION};"}, {"sha": "140d1eb1db7bbe6493148d837f552decee0761e3", "filename": "src/librustc_codegen_llvm/base.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbase.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -23,12 +23,12 @@ use crate::llvm;\n use crate::metadata;\n use crate::value::Value;\n \n-use rustc::dep_graph;\n-use rustc::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n-use rustc::middle::cstore::EncodedMetadata;\n-use rustc::middle::exported_symbols;\n-use rustc::mir::mono::{Linkage, Visibility};\n-use rustc::ty::TyCtxt;\n+use rustc_middle::dep_graph;\n+use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n+use rustc_middle::middle::cstore::EncodedMetadata;\n+use rustc_middle::middle::exported_symbols;\n+use rustc_middle::mir::mono::{Linkage, Visibility};\n+use rustc_middle::ty::TyCtxt;\n use rustc_codegen_ssa::base::maybe_create_entry_wrapper;\n use rustc_codegen_ssa::mono_item::MonoItemExt;\n use rustc_codegen_ssa::traits::*;"}, {"sha": "35946fb71c3e02e1740441c3baf86789ec3f793a", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -7,8 +7,6 @@ use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n use libc::{c_char, c_uint};\n use log::debug;\n-use rustc::ty::layout::{self, Align, Size, TyAndLayout};\n-use rustc::ty::{self, Ty, TyCtxt};\n use rustc_codegen_ssa::base::to_immediate;\n use rustc_codegen_ssa::common::{IntPredicate, RealPredicate, TypeKind};\n use rustc_codegen_ssa::mir::operand::{OperandRef, OperandValue};\n@@ -18,6 +16,8 @@ use rustc_codegen_ssa::MemFlags;\n use rustc_data_structures::const_cstr;\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::layout::{self, Align, Size, TyAndLayout};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_session::config::{self, Sanitizer};\n use rustc_target::spec::{HasTargetSpec, Target};\n use std::borrow::Cow;\n@@ -302,9 +302,9 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         lhs: Self::Value,\n         rhs: Self::Value,\n     ) -> (Self::Value, Self::Value) {\n-        use rustc::ty::{Int, Uint};\n         use rustc_ast::ast::IntTy::*;\n         use rustc_ast::ast::UintTy::*;\n+        use rustc_middle::ty::{Int, Uint};\n \n         let new_kind = match ty.kind {\n             Int(t @ Isize) => Int(t.normalize(self.tcx.sess.target.ptr_width)),"}, {"sha": "0759823c07a851d649f2698042de6f660bafc85b", "filename": "src/librustc_codegen_llvm/callee.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcallee.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -12,8 +12,8 @@ use crate::value::Value;\n use log::debug;\n use rustc_codegen_ssa::traits::*;\n \n-use rustc::ty::layout::{FnAbiExt, HasTyCtxt};\n-use rustc::ty::{Instance, TypeFoldable};\n+use rustc_middle::ty::layout::{FnAbiExt, HasTyCtxt};\n+use rustc_middle::ty::{Instance, TypeFoldable};\n \n /// Codegens a reference to a fn/method item, monomorphizing and\n /// inlining as it goes."}, {"sha": "01c8e02fdc2ba380df1f06e324432b4ad5acae77", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -8,13 +8,13 @@ use crate::type_::Type;\n use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n use log::debug;\n-use rustc::bug;\n use rustc_codegen_ssa::traits::*;\n+use rustc_middle::bug;\n \n use crate::consts::const_alloc_to_llvm;\n-use rustc::mir::interpret::{Allocation, GlobalAlloc, Scalar};\n-use rustc::ty::layout::{self, HasDataLayout, LayoutOf, Size, TyAndLayout};\n use rustc_codegen_ssa::mir::place::PlaceRef;\n+use rustc_middle::mir::interpret::{Allocation, GlobalAlloc, Scalar};\n+use rustc_middle::ty::layout::{self, HasDataLayout, LayoutOf, Size, TyAndLayout};\n \n use libc::{c_char, c_uint};\n "}, {"sha": "77a01b366932259809dea2dc9f59d3ad4d94aa80", "filename": "src/librustc_codegen_llvm/consts.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fconsts.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -7,12 +7,12 @@ use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n use libc::c_uint;\n use log::debug;\n-use rustc::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n-use rustc::mir::interpret::{read_target_uint, Allocation, ConstValue, ErrorHandled, Pointer};\n-use rustc::mir::mono::MonoItem;\n-use rustc::ty::layout::{self, Align, LayoutOf, Size};\n-use rustc::ty::{self, Instance, Ty};\n-use rustc::{bug, span_bug};\n+use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n+use rustc_middle::mir::interpret::{read_target_uint, Allocation, ConstValue, ErrorHandled, Pointer};\n+use rustc_middle::mir::mono::MonoItem;\n+use rustc_middle::ty::layout::{self, Align, LayoutOf, Size};\n+use rustc_middle::ty::{self, Instance, Ty};\n+use rustc_middle::{bug, span_bug};\n use rustc_codegen_ssa::traits::*;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;"}, {"sha": "add1f46a56d37e4dcb5fd2cf103c74cdefc163b4", "filename": "src/librustc_codegen_llvm/context.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcontext.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -6,18 +6,18 @@ use crate::llvm_util;\n use crate::type_::Type;\n use crate::value::Value;\n \n-use rustc::bug;\n-use rustc::mir::mono::CodegenUnit;\n-use rustc::ty::layout::{\n-    HasParamEnv, LayoutError, LayoutOf, PointeeInfo, Size, TyAndLayout, VariantIdx,\n-};\n-use rustc::ty::{self, Instance, Ty, TyCtxt};\n use rustc_codegen_ssa::base::wants_msvc_seh;\n use rustc_codegen_ssa::traits::*;\n use rustc_data_structures::base_n;\n use rustc_data_structures::const_cstr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::small_c_str::SmallCStr;\n+use rustc_middle::bug;\n+use rustc_middle::mir::mono::CodegenUnit;\n+use rustc_middle::ty::layout::{\n+    HasParamEnv, LayoutError, LayoutOf, PointeeInfo, Size, TyAndLayout, VariantIdx,\n+};\n+use rustc_middle::ty::{self, Instance, Ty, TyCtxt};\n use rustc_session::config::{self, CFGuard, DebugInfo};\n use rustc_session::Session;\n use rustc_span::source_map::{Span, DUMMY_SP};"}, {"sha": "e2eae4ac427e5c7a6eb75bca6489e9eb56a4bca4", "filename": "src/librustc_codegen_llvm/debuginfo/create_scope_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -6,7 +6,7 @@ use rustc_codegen_ssa::traits::*;\n use crate::common::CodegenCx;\n use crate::llvm;\n use crate::llvm::debuginfo::{DIScope, DISubprogram};\n-use rustc::mir::{Body, SourceScope};\n+use rustc_middle::mir::{Body, SourceScope};\n use rustc_session::config::DebugInfo;\n \n use rustc_index::bit_set::BitSet;"}, {"sha": "e40221de883036e9dd9f10dbea70d5c70703a786", "filename": "src/librustc_codegen_llvm/debuginfo/gdb.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,7 +5,7 @@ use crate::llvm;\n use crate::builder::Builder;\n use crate::common::CodegenCx;\n use crate::value::Value;\n-use rustc::bug;\n+use rustc_middle::bug;\n use rustc_codegen_ssa::traits::*;\n use rustc_session::config::DebugInfo;\n "}, {"sha": "20d07b2f8ce822115c37f0a69e8e4e1ffed15abc", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -20,17 +20,6 @@ use crate::llvm_util;\n use crate::value::Value;\n \n use log::debug;\n-use rustc::ich::NodeIdHashingMode;\n-use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n-use rustc::mir::interpret::truncate;\n-use rustc::mir::{self, Field, GeneratorLayout};\n-use rustc::ty::layout::{\n-    self, Align, Integer, IntegerExt, LayoutOf, PrimitiveExt, Size, TyAndLayout, VariantIdx,\n-};\n-use rustc::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc::ty::Instance;\n-use rustc::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n-use rustc::{bug, span_bug};\n use rustc_ast::ast;\n use rustc_codegen_ssa::traits::*;\n use rustc_data_structures::const_cstr;\n@@ -41,6 +30,17 @@ use rustc_fs_util::path_to_c_string;\n use rustc_hir::def::CtorKind;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_middle::ich::NodeIdHashingMode;\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n+use rustc_middle::mir::interpret::truncate;\n+use rustc_middle::mir::{self, Field, GeneratorLayout};\n+use rustc_middle::ty::layout::{\n+    self, Align, Integer, IntegerExt, LayoutOf, PrimitiveExt, Size, TyAndLayout, VariantIdx,\n+};\n+use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n+use rustc_middle::ty::Instance;\n+use rustc_middle::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n+use rustc_middle::{bug, span_bug};\n use rustc_session::config::{self, DebugInfo};\n use rustc_span::symbol::{Interner, Symbol};\n use rustc_span::{self, FileName, Span};"}, {"sha": "0dd275878761245911865f2bbfe2d117f81b2fda", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -12,15 +12,15 @@ use crate::llvm;\n use crate::llvm::debuginfo::{\n     DIArray, DIBuilder, DIFile, DIFlags, DILexicalBlock, DISPFlags, DIScope, DIType, DIVariable,\n };\n-use rustc::ty::subst::{GenericArgKind, SubstsRef};\n+use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, LOCAL_CRATE};\n \n use crate::abi::FnAbi;\n use crate::builder::Builder;\n use crate::common::CodegenCx;\n use crate::value::Value;\n-use rustc::mir;\n-use rustc::ty::{self, Instance, ParamEnv, Ty};\n+use rustc_middle::mir;\n+use rustc_middle::ty::{self, Instance, ParamEnv, Ty};\n use rustc_codegen_ssa::debuginfo::type_names;\n use rustc_codegen_ssa::mir::debuginfo::{DebugScope, FunctionDebugContext, VariableKind};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -31,7 +31,7 @@ use libc::c_uint;\n use log::debug;\n use std::cell::RefCell;\n \n-use rustc::ty::layout::{self, HasTyCtxt, LayoutOf, Size};\n+use rustc_middle::ty::layout::{self, HasTyCtxt, LayoutOf, Size};\n use rustc_ast::ast;\n use rustc_codegen_ssa::traits::*;\n use rustc_span::symbol::Symbol;"}, {"sha": "475dea239a765ee07be1e1f0c75684edacbf7689", "filename": "src/librustc_codegen_llvm/debuginfo/namespace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fnamespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fnamespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fnamespace.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n // Namespace Handling.\n \n use super::utils::{debug_context, DIB};\n-use rustc::ty::{self, Instance};\n+use rustc_middle::ty::{self, Instance};\n \n use crate::common::CodegenCx;\n use crate::llvm;"}, {"sha": "cdfb07db9686eea9368520affb5b4c30e7efa229", "filename": "src/librustc_codegen_llvm/debuginfo/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,7 +3,7 @@\n use super::namespace::item_namespace;\n use super::CrateDebugContext;\n \n-use rustc::ty::DefIdTree;\n+use rustc_middle::ty::DefIdTree;\n use rustc_hir::def_id::DefId;\n \n use crate::common::CodegenCx;"}, {"sha": "0ced351d71c295c30f49197bf0791e01fb6f3ff0", "filename": "src/librustc_codegen_llvm/declare.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdeclare.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -19,7 +19,7 @@ use crate::llvm::AttributePlace::Function;\n use crate::type_::Type;\n use crate::value::Value;\n use log::debug;\n-use rustc::ty::Ty;\n+use rustc_middle::ty::Ty;\n use rustc_codegen_ssa::traits::*;\n \n /// Declare a function."}, {"sha": "23f6c0a942036d4514ea7d6a05b80763b938eb06", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -7,9 +7,6 @@ use crate::type_::Type;\n use crate::type_of::LayoutLlvmExt;\n use crate::va_arg::emit_va_arg;\n use crate::value::Value;\n-use rustc::ty::layout::{self, FnAbiExt, HasTyCtxt, LayoutOf, Primitive};\n-use rustc::ty::{self, Ty};\n-use rustc::{bug, span_bug};\n use rustc_ast::ast;\n use rustc_codegen_ssa::base::{compare_simd_types, to_immediate, wants_msvc_seh};\n use rustc_codegen_ssa::common::{IntPredicate, TypeKind};\n@@ -18,6 +15,9 @@ use rustc_codegen_ssa::mir::operand::{OperandRef, OperandValue};\n use rustc_codegen_ssa::mir::place::PlaceRef;\n use rustc_codegen_ssa::MemFlags;\n use rustc_hir as hir;\n+use rustc_middle::ty::layout::{self, FnAbiExt, HasTyCtxt, LayoutOf, Primitive};\n+use rustc_middle::ty::{self, Ty};\n+use rustc_middle::{bug, span_bug};\n use rustc_target::abi::HasDataLayout;\n \n use rustc_codegen_ssa::common::span_invalid_monomorphization_error;\n@@ -1390,8 +1390,8 @@ fn generic_simd_intrinsic(\n \n     fn simd_simple_float_intrinsic(\n         name: &str,\n-        in_elem: &::rustc::ty::TyS<'_>,\n-        in_ty: &::rustc::ty::TyS<'_>,\n+        in_elem: &::rustc_middle::ty::TyS<'_>,\n+        in_ty: &::rustc_middle::ty::TyS<'_>,\n         in_len: u64,\n         bx: &mut Builder<'a, 'll, 'tcx>,\n         span: Span,"}, {"sha": "76cbb5227e1064df5753f1f4bb3a980705b3b737", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -17,10 +17,10 @@\n use back::write::{create_informational_target_machine, create_target_machine};\n \n pub use llvm_util::target_features;\n-use rustc::dep_graph::{DepGraph, WorkProduct};\n-use rustc::middle::cstore::{EncodedMetadata, MetadataLoaderDyn};\n-use rustc::ty::{self, TyCtxt};\n-use rustc::util::common::ErrorReported;\n+use rustc_middle::dep_graph::{DepGraph, WorkProduct};\n+use rustc_middle::middle::cstore::{EncodedMetadata, MetadataLoaderDyn};\n+use rustc_middle::ty::{self, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_ast::expand::allocator::AllocatorKind;\n use rustc_codegen_ssa::back::lto::{LtoModuleCodegen, SerializedModule, ThinModule};\n use rustc_codegen_ssa::back::write::{CodegenContext, FatLTOInput, ModuleConfig};"}, {"sha": "45b4c0d111dc1ff5ab9434603596fb70319461aa", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use crate::back::write::create_informational_target_machine;\n use crate::llvm;\n use libc::c_int;\n-use rustc::bug;\n+use rustc_middle::bug;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_feature::UnstableFeatures;\n use rustc_session::config::PrintRequest;"}, {"sha": "6d0612ca075d1f9437df938af02d4eb4b72cf113", "filename": "src/librustc_codegen_llvm/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmetadata.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use crate::llvm;\n use crate::llvm::archive_ro::ArchiveRO;\n use crate::llvm::{mk_section_iter, False, ObjectFile};\n-use rustc::middle::cstore::MetadataLoader;\n+use rustc_middle::middle::cstore::MetadataLoader;\n use rustc_target::spec::Target;\n \n use log::debug;"}, {"sha": "03c178288ecab03ae333091f0e1d04daf6e726aa", "filename": "src/librustc_codegen_llvm/mono_item.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmono_item.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,13 +5,13 @@ use crate::context::CodegenCx;\n use crate::llvm;\n use crate::type_of::LayoutLlvmExt;\n use log::debug;\n-use rustc::mir::mono::{Linkage, Visibility};\n-use rustc::ty::layout::{FnAbiExt, LayoutOf};\n-use rustc::ty::{Instance, TypeFoldable};\n+use rustc_middle::mir::mono::{Linkage, Visibility};\n+use rustc_middle::ty::layout::{FnAbiExt, LayoutOf};\n+use rustc_middle::ty::{Instance, TypeFoldable};\n use rustc_codegen_ssa::traits::*;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n \n-pub use rustc::mir::mono::MonoItem;\n+pub use rustc_middle::mir::mono::MonoItem;\n \n impl PreDefineMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n     fn predefine_static("}, {"sha": "197825c68862f473839afc43cbb48c0387e165db", "filename": "src/librustc_codegen_llvm/type_.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,20 +1,20 @@\n pub use crate::llvm::Type;\n \n+use crate::abi::{FnAbiLlvmExt, LlvmType};\n+use crate::common;\n use crate::context::CodegenCx;\n use crate::llvm;\n use crate::llvm::{Bool, False, True};\n+use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n-use rustc::bug;\n-use rustc_codegen_ssa::traits::*;\n \n-use crate::abi::{FnAbiLlvmExt, LlvmType};\n-use crate::common;\n-use crate::type_of::LayoutLlvmExt;\n-use rustc::ty::layout::{self, Align, Size, TyAndLayout};\n-use rustc::ty::Ty;\n use rustc_ast::ast;\n use rustc_codegen_ssa::common::TypeKind;\n+use rustc_codegen_ssa::traits::*;\n use rustc_data_structures::small_c_str::SmallCStr;\n+use rustc_middle::bug;\n+use rustc_middle::ty::layout::{self, Align, Size, TyAndLayout};\n+use rustc_middle::ty::Ty;\n use rustc_target::abi::call::{CastTarget, FnAbi, Reg};\n \n use std::fmt;"}, {"sha": "350f7be5a9d8d80a22f17b3d2c021900140632cd", "filename": "src/librustc_codegen_llvm/type_of.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_of.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,11 +2,11 @@ use crate::abi::FnAbi;\n use crate::common::*;\n use crate::type_::Type;\n use log::debug;\n-use rustc::bug;\n-use rustc::ty::layout::{self, Align, FnAbiExt, LayoutOf, PointeeInfo, Size, TyAndLayout};\n-use rustc::ty::print::obsolete::DefPathBasedNames;\n-use rustc::ty::{self, Ty, TypeFoldable};\n use rustc_codegen_ssa::traits::*;\n+use rustc_middle::bug;\n+use rustc_middle::ty::layout::{self, Align, FnAbiExt, LayoutOf, PointeeInfo, Size, TyAndLayout};\n+use rustc_middle::ty::print::obsolete::DefPathBasedNames;\n+use rustc_middle::ty::{self, Ty, TypeFoldable};\n use rustc_target::abi::TyAndLayoutMethods;\n \n use std::fmt::Write;\n@@ -221,7 +221,7 @@ impl<'tcx> LayoutLlvmExt<'tcx> for TyAndLayout<'tcx> {\n         }\n     }\n \n-    /// Gets the LLVM type corresponding to a Rust type, i.e., `rustc::ty::Ty`.\n+    /// Gets the LLVM type corresponding to a Rust type, i.e., `rustc_middle::ty::Ty`.\n     /// The pointee type of the pointer in `PlaceRef` is always this type.\n     /// For sized types, it is also the right LLVM type for an `alloca`\n     /// containing a value of that type, and most immediates (except `bool`)."}, {"sha": "8712436329d4cb1cf6176c3056bf6b67b330e96a", "filename": "src/librustc_codegen_llvm/va_arg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fva_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_llvm%2Fva_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fva_arg.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,8 +2,8 @@ use crate::builder::Builder;\n use crate::type_::Type;\n use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n-use rustc::ty::layout::{Align, HasDataLayout, HasTyCtxt, LayoutOf, Size};\n-use rustc::ty::Ty;\n+use rustc_middle::ty::layout::{Align, HasDataLayout, HasTyCtxt, LayoutOf, Size};\n+use rustc_middle::ty::Ty;\n use rustc_codegen_ssa::mir::operand::OperandRef;\n use rustc_codegen_ssa::traits::{\n     BaseTypeMethods, BuilderMethods, ConstMethods, DerivedTypeMethods,"}, {"sha": "686c40ccc61220839a1552b85996d1c86e19b292", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::middle::cstore::{EncodedMetadata, LibSource, NativeLibrary, NativeLibraryKind};\n-use rustc::middle::dependency_format::Linkage;\n+use rustc_middle::middle::cstore::{EncodedMetadata, LibSource, NativeLibrary, NativeLibraryKind};\n+use rustc_middle::middle::dependency_format::Linkage;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_fs_util::fix_windows_verbatim_for_gcc;\n use rustc_hir::def_id::CrateNum;"}, {"sha": "2c39fe5114d1e19879694ca0720838b26d45a5d9", "filename": "src/librustc_codegen_ssa/back/linker.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -8,8 +8,8 @@ use std::io::prelude::*;\n use std::io::{self, BufWriter};\n use std::path::{Path, PathBuf};\n \n-use rustc::middle::dependency_format::Linkage;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::middle::dependency_format::Linkage;\n+use rustc_middle::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_serialize::{json, Encoder};"}, {"sha": "0dd2fcad91809a3ac39386c028ba2b9959004814", "filename": "src/librustc_codegen_ssa/back/rpath.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Frpath.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,7 +3,7 @@ use std::env;\n use std::fs;\n use std::path::{Path, PathBuf};\n \n-use rustc::middle::cstore::LibSource;\n+use rustc_middle::middle::cstore::LibSource;\n use rustc_hir::def_id::CrateNum;\n \n pub struct RPathConfig<'a> {"}, {"sha": "327900742661f4a6794f86d116c4380d99931900", "filename": "src/librustc_codegen_ssa/back/symbol_export.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,12 +1,12 @@\n use std::collections::hash_map::Entry::*;\n use std::sync::Arc;\n \n-use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n-use rustc::middle::exported_symbols::{metadata_symbol_name, ExportedSymbol, SymbolExportLevel};\n-use rustc::ty::query::Providers;\n-use rustc::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc::ty::Instance;\n-use rustc::ty::{SymbolName, TyCtxt};\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n+use rustc_middle::middle::exported_symbols::{metadata_symbol_name, ExportedSymbol, SymbolExportLevel};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n+use rustc_middle::ty::Instance;\n+use rustc_middle::ty::{SymbolName, TyCtxt};\n use rustc_ast::expand::allocator::ALLOCATOR_METHODS;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashMap;\n@@ -221,8 +221,8 @@ fn exported_symbols_provider_local(\n     }\n \n     if tcx.sess.opts.share_generics() && tcx.local_crate_exports_generics() {\n-        use rustc::mir::mono::{Linkage, MonoItem, Visibility};\n-        use rustc::ty::InstanceDef;\n+        use rustc_middle::mir::mono::{Linkage, MonoItem, Visibility};\n+        use rustc_middle::ty::InstanceDef;\n \n         // Normally, we require that shared monomorphizations are not hidden,\n         // because if we want to re-use a monomorphization from a Rust dylib, it"}, {"sha": "d41c44594c76a29b16a0654985dc8cec681228b7", "filename": "src/librustc_codegen_ssa/back/write.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -10,10 +10,10 @@ use crate::{\n \n use crate::traits::*;\n use jobserver::{Acquired, Client};\n-use rustc::dep_graph::{WorkProduct, WorkProductFileKind, WorkProductId};\n-use rustc::middle::cstore::EncodedMetadata;\n-use rustc::middle::exported_symbols::SymbolExportLevel;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::dep_graph::{WorkProduct, WorkProductFileKind, WorkProductId};\n+use rustc_middle::middle::cstore::EncodedMetadata;\n+use rustc_middle::middle::exported_symbols::SymbolExportLevel;\n+use rustc_middle::ty::TyCtxt;\n use rustc_ast::attr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::profiling::SelfProfilerRef;"}, {"sha": "9e6a3b23323d8593aabab563a80bb51c654025df", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -25,23 +25,23 @@ use crate::mir::place::PlaceRef;\n use crate::traits::*;\n use crate::{CachedModuleCodegen, CrateInfo, MemFlags, ModuleCodegen, ModuleKind};\n \n-use rustc::middle::codegen_fn_attrs::CodegenFnAttrs;\n-use rustc::middle::cstore::EncodedMetadata;\n-use rustc::middle::cstore::{self, LinkagePreference};\n-use rustc::middle::lang_items;\n-use rustc::middle::lang_items::StartFnLangItem;\n-use rustc::mir::mono::{CodegenUnit, CodegenUnitNameBuilder, MonoItem};\n-use rustc::ty::layout::{self, Align, HasTyCtxt, LayoutOf, TyAndLayout, VariantIdx};\n-use rustc::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n-use rustc::ty::query::Providers;\n-use rustc::ty::{self, Instance, Ty, TyCtxt};\n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::profiling::print_time_passes_entry;\n use rustc_data_structures::sync::{par_iter, Lock, ParallelIterator};\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_index::vec::Idx;\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrs;\n+use rustc_middle::middle::cstore::EncodedMetadata;\n+use rustc_middle::middle::cstore::{self, LinkagePreference};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::middle::lang_items::StartFnLangItem;\n+use rustc_middle::mir::mono::{CodegenUnit, CodegenUnitNameBuilder, MonoItem};\n+use rustc_middle::ty::layout::{self, Align, HasTyCtxt, LayoutOf, TyAndLayout, VariantIdx};\n+use rustc_middle::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, Instance, Ty, TyCtxt};\n use rustc_session::cgu_reuse_tracker::CguReuse;\n use rustc_session::config::{self, EntryFnType, Lto};\n use rustc_session::Session;\n@@ -557,7 +557,7 @@ pub fn codegen_crate<B: ExtraBackendMethods>(\n     // one instead. If nothing exists then it's our job to generate the\n     // allocator!\n     let any_dynamic_crate = tcx.dependency_formats(LOCAL_CRATE).iter().any(|(_, list)| {\n-        use rustc::middle::dependency_format::Linkage;\n+        use rustc_middle::middle::dependency_format::Linkage;\n         list.iter().any(|&linkage| linkage == Linkage::Dynamic)\n     });\n     let allocator_module = if any_dynamic_crate {"}, {"sha": "41f773cbd8ad6495ade676507b16da3a479b8128", "filename": "src/librustc_codegen_ssa/common.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fcommon.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,13 +1,13 @@\n #![allow(non_camel_case_types, non_snake_case)]\n \n-use rustc::ty::{Ty, TyCtxt};\n+use rustc_middle::ty::{Ty, TyCtxt};\n use rustc_errors::struct_span_err;\n use rustc_session::Session;\n use rustc_span::Span;\n \n use crate::base;\n use crate::traits::*;\n-use rustc::middle::lang_items::LangItem;\n+use rustc_middle::middle::lang_items::LangItem;\n use rustc_hir::def_id::DefId;\n \n use crate::traits::BuilderMethods;"}, {"sha": "0adc84d9de9a016e4dd36a8ace78b1d316ef0a93", "filename": "src/librustc_codegen_ssa/debuginfo/type_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fdebuginfo%2Ftype_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fdebuginfo%2Ftype_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fdebuginfo%2Ftype_names.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n // Type Names for Debug Info.\n \n-use rustc::ty::{self, subst::SubstsRef, Ty, TyCtxt};\n+use rustc_middle::ty::{self, subst::SubstsRef, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;"}, {"sha": "5b086bc43ff353ffa0ca75570d0397d2de7f660a", "filename": "src/librustc_codegen_ssa/glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fglue.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,7 +5,7 @@\n use crate::common::IntPredicate;\n use crate::meth;\n use crate::traits::*;\n-use rustc::ty::{self, Ty};\n+use rustc_middle::ty::{self, Ty};\n \n pub fn size_and_align_of_dst<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n     bx: &mut Bx,"}, {"sha": "bf2f92a473fe8f0deaaad0ce2890556d4a141c2c", "filename": "src/librustc_codegen_ssa/lib.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Flib.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -15,17 +15,17 @@\n #[macro_use]\n extern crate log;\n #[macro_use]\n-extern crate rustc;\n+extern crate rustc_middle;\n \n-use rustc::dep_graph::WorkProduct;\n-use rustc::middle::cstore::{CrateSource, LibSource, NativeLibrary};\n-use rustc::middle::dependency_format::Dependencies;\n-use rustc::middle::lang_items::LangItem;\n-use rustc::ty::query::Providers;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::Lrc;\n use rustc_hir::def_id::CrateNum;\n+use rustc_middle::dep_graph::WorkProduct;\n+use rustc_middle::middle::cstore::{CrateSource, LibSource, NativeLibrary};\n+use rustc_middle::middle::dependency_format::Dependencies;\n+use rustc_middle::middle::lang_items::LangItem;\n+use rustc_middle::ty::query::Providers;\n use rustc_session::config::{OutputFilenames, OutputType, RUST_CGU_EXT};\n use rustc_span::symbol::Symbol;\n use std::path::{Path, PathBuf};\n@@ -144,7 +144,7 @@ pub struct CodegenResults {\n     pub allocator_module: Option<CompiledModule>,\n     pub metadata_module: Option<CompiledModule>,\n     pub crate_hash: Svh,\n-    pub metadata: rustc::middle::cstore::EncodedMetadata,\n+    pub metadata: rustc_middle::middle::cstore::EncodedMetadata,\n     pub windows_subsystem: Option<String>,\n     pub linker_info: back::linker::LinkerInfo,\n     pub crate_info: CrateInfo,"}, {"sha": "199dd8c7df42fd7d0be1e33acb752b6d652b210e", "filename": "src/librustc_codegen_ssa/meth.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmeth.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n use crate::traits::*;\n \n-use rustc::ty::{self, Instance, Ty};\n+use rustc_middle::ty::{self, Instance, Ty};\n use rustc_target::abi::call::FnAbi;\n \n #[derive(Copy, Clone, Debug)]"}, {"sha": "f676d31606c8486ec4054944e3515334c8e43f21", "filename": "src/librustc_codegen_ssa/mir/analyze.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,13 +3,13 @@\n \n use super::FunctionCx;\n use crate::traits::*;\n-use rustc::mir::traversal;\n-use rustc::mir::visit::{\n+use rustc_middle::mir::traversal;\n+use rustc_middle::mir::visit::{\n     MutatingUseContext, NonMutatingUseContext, NonUseContext, PlaceContext, Visitor,\n };\n-use rustc::mir::{self, Location, TerminatorKind};\n-use rustc::ty;\n-use rustc::ty::layout::{HasTyCtxt, LayoutOf};\n+use rustc_middle::mir::{self, Location, TerminatorKind};\n+use rustc_middle::ty;\n+use rustc_middle::ty::layout::{HasTyCtxt, LayoutOf};\n use rustc_data_structures::graph::dominators::Dominators;\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::{Idx, IndexVec};"}, {"sha": "19daa8e2ceddb64ac7330954acd292eab3587116", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -9,11 +9,11 @@ use crate::meth;\n use crate::traits::*;\n use crate::MemFlags;\n \n-use rustc::middle::lang_items;\n-use rustc::mir;\n-use rustc::mir::AssertKind;\n-use rustc::ty::layout::{self, FnAbiExt, HasTyCtxt, LayoutOf};\n-use rustc::ty::{self, Instance, Ty, TypeFoldable};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::mir;\n+use rustc_middle::mir::AssertKind;\n+use rustc_middle::ty::layout::{self, FnAbiExt, HasTyCtxt, LayoutOf};\n+use rustc_middle::ty::{self, Instance, Ty, TypeFoldable};\n use rustc_index::vec::Idx;\n use rustc_span::{source_map::Span, symbol::Symbol};\n use rustc_target::abi::call::{ArgAbi, FnAbi, PassMode};"}, {"sha": "269bddfc3dff84fcbf0282ae6a37013dc0ce7846", "filename": "src/librustc_codegen_ssa/mir/constant.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,9 +1,9 @@\n use crate::mir::operand::OperandRef;\n use crate::traits::*;\n-use rustc::mir;\n-use rustc::mir::interpret::{ConstValue, ErrorHandled};\n-use rustc::ty::layout::{self, HasTyCtxt};\n-use rustc::ty::{self, Ty};\n+use rustc_middle::mir;\n+use rustc_middle::mir::interpret::{ConstValue, ErrorHandled};\n+use rustc_middle::ty::layout::{self, HasTyCtxt};\n+use rustc_middle::ty::{self, Ty};\n use rustc_index::vec::Idx;\n use rustc_span::source_map::Span;\n "}, {"sha": "6fdc365a937e12a5b96147c9f3a6369a0c646b17", "filename": "src/librustc_codegen_ssa/mir/debuginfo.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use crate::traits::*;\n-use rustc::mir;\n-use rustc::ty;\n-use rustc::ty::layout::{LayoutOf, Size};\n+use rustc_middle::mir;\n+use rustc_middle::ty;\n+use rustc_middle::ty::layout::{LayoutOf, Size};\n use rustc_hir::def_id::CrateNum;\n use rustc_index::vec::IndexVec;\n use rustc_session::config::DebugInfo;"}, {"sha": "fd20cf5404c666b5247166cf9ae34a74f34ab1d4", "filename": "src/librustc_codegen_ssa/mir/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n use crate::base;\n use crate::traits::*;\n-use rustc::mir;\n-use rustc::ty::layout::{FnAbiExt, HasTyCtxt, TyAndLayout};\n-use rustc::ty::{self, Instance, Ty, TypeFoldable};\n+use rustc_middle::mir;\n+use rustc_middle::ty::layout::{FnAbiExt, HasTyCtxt, TyAndLayout};\n+use rustc_middle::ty::{self, Instance, Ty, TypeFoldable};\n use rustc_target::abi::call::{FnAbi, PassMode};\n \n use std::iter;\n@@ -13,7 +13,7 @@ use rustc_index::vec::IndexVec;\n use self::analyze::CleanupKind;\n use self::debuginfo::{FunctionDebugContext, PerLocalVarDebugInfo};\n use self::place::PlaceRef;\n-use rustc::mir::traversal;\n+use rustc_middle::mir::traversal;\n \n use self::operand::{OperandRef, OperandValue};\n "}, {"sha": "7545882a0eacb1ee5b3cb2c749ac36323a55e3bb", "filename": "src/librustc_codegen_ssa/mir/operand.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -6,10 +6,10 @@ use crate::glue;\n use crate::traits::*;\n use crate::MemFlags;\n \n-use rustc::mir;\n-use rustc::mir::interpret::{ConstValue, ErrorHandled, Pointer, Scalar};\n-use rustc::ty::layout::{self, Align, LayoutOf, Size, TyAndLayout};\n-use rustc::ty::Ty;\n+use rustc_middle::mir;\n+use rustc_middle::mir::interpret::{ConstValue, ErrorHandled, Pointer, Scalar};\n+use rustc_middle::ty::layout::{self, Align, LayoutOf, Size, TyAndLayout};\n+use rustc_middle::ty::Ty;\n \n use std::fmt;\n "}, {"sha": "1237e70aa36f1df11a782658f9e0d1d895e5e446", "filename": "src/librustc_codegen_ssa/mir/place.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -6,10 +6,10 @@ use crate::glue;\n use crate::traits::*;\n use crate::MemFlags;\n \n-use rustc::mir;\n-use rustc::mir::tcx::PlaceTy;\n-use rustc::ty::layout::{self, Align, HasTyCtxt, LayoutOf, TyAndLayout, VariantIdx};\n-use rustc::ty::{self, Ty};\n+use rustc_middle::mir;\n+use rustc_middle::mir::tcx::PlaceTy;\n+use rustc_middle::ty::layout::{self, Align, HasTyCtxt, LayoutOf, TyAndLayout, VariantIdx};\n+use rustc_middle::ty::{self, Ty};\n \n #[derive(Copy, Clone, Debug)]\n pub struct PlaceRef<'tcx, V> {"}, {"sha": "7b2ae658330ef2d163e347af5d2d548c5b779297", "filename": "src/librustc_codegen_ssa/mir/rvalue.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -7,11 +7,11 @@ use crate::common::{self, IntPredicate, RealPredicate};\n use crate::traits::*;\n use crate::MemFlags;\n \n-use rustc::middle::lang_items::ExchangeMallocFnLangItem;\n-use rustc::mir;\n-use rustc::ty::cast::{CastTy, IntTy};\n-use rustc::ty::layout::{self, HasTyCtxt, LayoutOf};\n-use rustc::ty::{self, adjustment::PointerCast, Instance, Ty, TyCtxt};\n+use rustc_middle::middle::lang_items::ExchangeMallocFnLangItem;\n+use rustc_middle::mir;\n+use rustc_middle::ty::cast::{CastTy, IntTy};\n+use rustc_middle::ty::layout::{self, HasTyCtxt, LayoutOf};\n+use rustc_middle::ty::{self, adjustment::PointerCast, Instance, Ty, TyCtxt};\n use rustc_apfloat::{ieee, Float, Round, Status};\n use rustc_span::source_map::{Span, DUMMY_SP};\n use rustc_span::symbol::sym;"}, {"sha": "6fd1d6c6bde437350b6f4b07bcf287b37f0632e5", "filename": "src/librustc_codegen_ssa/mir/statement.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,4 +1,4 @@\n-use rustc::mir;\n+use rustc_middle::mir;\n use rustc_errors::struct_span_err;\n \n use super::FunctionCx;"}, {"sha": "6482c46254d11a74d093d445009590832ca816e1", "filename": "src/librustc_codegen_ssa/mono_item.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmono_item.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,10 +1,10 @@\n use crate::base;\n use crate::traits::*;\n-use rustc::mir::mono::{Linkage, Visibility};\n-use rustc::ty::layout::HasTyCtxt;\n+use rustc_middle::mir::mono::{Linkage, Visibility};\n+use rustc_middle::ty::layout::HasTyCtxt;\n use rustc_hir as hir;\n \n-use rustc::mir::mono::MonoItem;\n+use rustc_middle::mir::mono::MonoItem;\n \n pub trait MonoItemExt<'a, 'tcx> {\n     fn define<Bx: BuilderMethods<'a, 'tcx>>(&self, cx: &'a Bx::CodegenCx);"}, {"sha": "dd8495850bd5458e88a78f8a53e0ea04f16b2a8d", "filename": "src/librustc_codegen_ssa/traits/abi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fabi.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n use super::BackendTypes;\n-use rustc::ty::Ty;\n+use rustc_middle::ty::Ty;\n use rustc_target::abi::call::FnAbi;\n \n pub trait AbiBuilderMethods<'tcx>: BackendTypes {"}, {"sha": "1474edd8aa09af0cbda548c0ee00363b3062248e", "filename": "src/librustc_codegen_ssa/traits/backend.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,13 +2,13 @@ use super::write::WriteBackendMethods;\n use super::CodegenObject;\n use crate::ModuleCodegen;\n \n-use rustc::dep_graph::DepGraph;\n-use rustc::middle::cstore::{EncodedMetadata, MetadataLoaderDyn};\n-use rustc::ty::layout::{HasTyCtxt, LayoutOf, TyAndLayout};\n-use rustc::ty::query::Providers;\n-use rustc::ty::{Ty, TyCtxt};\n-use rustc::util::common::ErrorReported;\n use rustc_ast::expand::allocator::AllocatorKind;\n+use rustc_middle::dep_graph::DepGraph;\n+use rustc_middle::middle::cstore::{EncodedMetadata, MetadataLoaderDyn};\n+use rustc_middle::ty::layout::{HasTyCtxt, LayoutOf, TyAndLayout};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{Ty, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_session::{\n     config::{self, OutputFilenames, PrintRequest},\n     Session,"}, {"sha": "d59ea387b86ba496d19285494726b09f3bdaa305", "filename": "src/librustc_codegen_ssa/traits/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -12,8 +12,8 @@ use crate::mir::operand::OperandRef;\n use crate::mir::place::PlaceRef;\n use crate::MemFlags;\n \n-use rustc::ty::layout::{Align, HasParamEnv, Size};\n-use rustc::ty::Ty;\n+use rustc_middle::ty::layout::{Align, HasParamEnv, Size};\n+use rustc_middle::ty::Ty;\n use rustc_target::spec::HasTargetSpec;\n \n use std::iter::TrustedLen;"}, {"sha": "e5e1aa658e62e39823a79560d8cdad4c9a1ba061", "filename": "src/librustc_codegen_ssa/traits/consts.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n use super::BackendTypes;\n use crate::mir::place::PlaceRef;\n-use rustc::mir::interpret::Allocation;\n-use rustc::mir::interpret::Scalar;\n-use rustc::ty::layout;\n+use rustc_middle::mir::interpret::Allocation;\n+use rustc_middle::mir::interpret::Scalar;\n+use rustc_middle::ty::layout;\n use rustc_span::Symbol;\n \n pub trait ConstMethods<'tcx>: BackendTypes {"}, {"sha": "59bdea85b1338d2d582a6184360e015572b05566", "filename": "src/librustc_codegen_ssa/traits/debuginfo.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n use super::BackendTypes;\n use crate::mir::debuginfo::{FunctionDebugContext, VariableKind};\n-use rustc::mir;\n-use rustc::ty::layout::Size;\n-use rustc::ty::{Instance, Ty};\n+use rustc_middle::mir;\n+use rustc_middle::ty::layout::Size;\n+use rustc_middle::ty::{Instance, Ty};\n use rustc_ast::ast::Name;\n use rustc_hir::def_id::CrateNum;\n use rustc_span::{SourceFile, Span};"}, {"sha": "cdeb7fe19ca5f21e89884551047abe0b8a368d0d", "filename": "src/librustc_codegen_ssa/traits/declare.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n use super::BackendTypes;\n-use rustc::mir::mono::{Linkage, Visibility};\n-use rustc::ty::{Instance, Ty};\n+use rustc_middle::mir::mono::{Linkage, Visibility};\n+use rustc_middle::ty::{Instance, Ty};\n use rustc_hir::def_id::DefId;\n use rustc_target::abi::call::FnAbi;\n "}, {"sha": "9d48e233de6558f251629bdf04641277ebfd61ff", "filename": "src/librustc_codegen_ssa/traits/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fintrinsic.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n use super::BackendTypes;\n use crate::mir::operand::OperandRef;\n-use rustc::ty::{self, Ty};\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::Span;\n use rustc_target::abi::call::FnAbi;\n "}, {"sha": "7ea3c1905eec76424eb332febbe31a5b1739efc4", "filename": "src/librustc_codegen_ssa/traits/misc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n use super::BackendTypes;\n-use rustc::mir::mono::CodegenUnit;\n-use rustc::ty::{self, Instance, Ty};\n+use rustc_middle::mir::mono::CodegenUnit;\n+use rustc_middle::ty::{self, Instance, Ty};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_session::Session;\n use std::cell::RefCell;"}, {"sha": "f4c09a33285bda34c41af67883a8a509ca4e1f1d", "filename": "src/librustc_codegen_ssa/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -42,7 +42,7 @@ pub use self::type_::{\n };\n pub use self::write::{ModuleBufferMethods, ThinBufferMethods, WriteBackendMethods};\n \n-use rustc::ty::layout::{HasParamEnv, HasTyCtxt};\n+use rustc_middle::ty::layout::{HasParamEnv, HasTyCtxt};\n use rustc_target::spec::HasTargetSpec;\n \n use std::fmt;"}, {"sha": "8a0acef79625177812f9e3b7bb1811c917c3221d", "filename": "src/librustc_codegen_ssa/traits/statics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n use super::BackendTypes;\n-use rustc::ty::layout::Align;\n+use rustc_middle::ty::layout::Align;\n use rustc_hir::def_id::DefId;\n \n pub trait StaticMethods: BackendTypes {"}, {"sha": "383be6dfcb5ea08b5018de024251a48ad429454a", "filename": "src/librustc_codegen_ssa/traits/type_.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Ftype_.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,8 +3,8 @@ use super::Backend;\n use super::HasCodegen;\n use crate::common::TypeKind;\n use crate::mir::place::PlaceRef;\n-use rustc::ty::layout::{self, TyAndLayout};\n-use rustc::ty::{self, Ty};\n+use rustc_middle::ty::layout::{self, TyAndLayout};\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::DUMMY_SP;\n use rustc_target::abi::call::{ArgAbi, CastTarget, FnAbi, Reg};\n \n@@ -54,7 +54,7 @@ pub trait DerivedTypeMethods<'tcx>: BaseTypeMethods<'tcx> + MiscMethods<'tcx> {\n     }\n \n     fn type_from_integer(&self, i: layout::Integer) -> Self::Type {\n-        use rustc::ty::layout::Integer::*;\n+        use rustc_middle::ty::layout::Integer::*;\n         match i {\n             I8 => self.type_i8(),\n             I16 => self.type_i16(),"}, {"sha": "4ab86c2920827a986fd1a93104b29190e9294cc2", "filename": "src/librustc_codegen_ssa/traits/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_codegen_ssa%2Ftraits%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fwrite.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,7 +2,7 @@ use crate::back::lto::{LtoModuleCodegen, SerializedModule, ThinModule};\n use crate::back::write::{CodegenContext, FatLTOInput, ModuleConfig};\n use crate::{CompiledModule, ModuleCodegen};\n \n-use rustc::dep_graph::WorkProduct;\n+use rustc_middle::dep_graph::WorkProduct;\n use rustc_errors::{FatalError, Handler};\n \n pub trait WriteBackendMethods: 'static + Sized + Clone {"}, {"sha": "afce395ff9c97875645ce2046f6e5c59391e71dc", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -18,9 +18,9 @@ extern crate lazy_static;\n \n pub extern crate rustc_plugin_impl as plugin;\n \n-use rustc::middle::cstore::MetadataLoader;\n-use rustc::ty::TyCtxt;\n-use rustc::util::common::ErrorReported;\n+use rustc_middle::middle::cstore::MetadataLoader;\n+use rustc_middle::ty::TyCtxt;\n+use rustc_middle::util::common::ErrorReported;\n use rustc_ast::ast;\n use rustc_codegen_ssa::{traits::CodegenBackend, CodegenResults};\n use rustc_data_structures::profiling::print_time_passes_entry;"}, {"sha": "ac7416054cd79fec66a800166f31da83673a8218", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n //! The various pretty-printing routines.\n \n-use rustc::hir::map as hir_map;\n-use rustc::ty::{self, TyCtxt};\n-use rustc::util::common::ErrorReported;\n+use rustc_middle::hir::map as hir_map;\n+use rustc_middle::ty::{self, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_ast::ast;\n use rustc_ast_pretty::pprust;\n use rustc_hir as hir;"}, {"sha": "c8f3edcbda0d9d7dea20c73c82d9f42108f64cbc", "filename": "src/librustc_hir/intravisit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_hir%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_hir%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fintravisit.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -119,7 +119,7 @@ impl<'a> FnKind<'a> {\n     }\n }\n \n-/// An abstract representation of the HIR `rustc::hir::map::Map`.\n+/// An abstract representation of the HIR `rustc_middle::hir::map::Map`.\n pub trait Map<'hir> {\n     /// Retrieves the `Node` corresponding to `id`, returning `None` if cannot be found.\n     fn find(&self, hir_id: HirId) -> Option<Node<'hir>>;"}, {"sha": "8b2222114465c83c8b2234e9d90e2844fa207fca", "filename": "src/librustc_incremental/assert_dep_graph.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_dep_graph.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -34,10 +34,10 @@\n //! ```\n \n use graphviz as dot;\n-use rustc::dep_graph::debug::{DepNodeFilter, EdgeFilter};\n-use rustc::dep_graph::{DepGraphQuery, DepKind, DepNode, DepNodeExt};\n-use rustc::hir::map::Map;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::dep_graph::debug::{DepNodeFilter, EdgeFilter};\n+use rustc_middle::dep_graph::{DepGraphQuery, DepKind, DepNode, DepNodeExt};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::implementation::{Direction, NodeIndex, INCOMING, OUTGOING};"}, {"sha": "84588ea97074f50dc37ac9f4ff2c1f5a81a75f05", "filename": "src/librustc_incremental/assert_module_sources.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_module_sources.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -21,8 +21,8 @@\n //! allows for doing a more fine-grained check to see if pre- or post-lto data\n //! was re-used.\n \n-use rustc::mir::mono::CodegenUnitNameBuilder;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::mir::mono::CodegenUnitNameBuilder;\n+use rustc_middle::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_session::cgu_reuse_tracker::*;"}, {"sha": "ea0fd4eb7ee737b96d29fd07d9d2d844ecfa782a", "filename": "src/librustc_incremental/persist/data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n //! The data that we will serialize and deserialize.\n \n-use rustc::dep_graph::{WorkProduct, WorkProductId};\n+use rustc_middle::dep_graph::{WorkProduct, WorkProductId};\n \n #[derive(Debug, RustcEncodable, RustcDecodable)]\n pub struct SerializedWorkProduct {"}, {"sha": "804d1744d687296f874f57442ab33c3d409a56c1", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -13,9 +13,6 @@\n //! Errors are reported if we are in the suitable configuration but\n //! the required condition is not met.\n \n-use rustc::dep_graph::{label_strs, DepNode, DepNodeExt};\n-use rustc::hir::map::Map;\n-use rustc::ty::TyCtxt;\n use rustc_ast::ast::{self, Attribute, NestedMetaItem};\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashSet;\n@@ -25,6 +22,9 @@ use rustc_hir::intravisit;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::Node as HirNode;\n use rustc_hir::{ImplItemKind, ItemKind as HirItem, TraitItemKind};\n+use rustc_middle::dep_graph::{label_strs, DepNode, DepNodeExt};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use std::iter::FromIterator;\n@@ -306,7 +306,7 @@ impl DirtyCleanVisitor<'tcx> {\n                     // michaelwoerister and vitiral came up with a possible solution,\n                     // to just do this before every query\n                     // ```\n-                    // ::rustc::ty::query::plumbing::force_from_dep_node(tcx, dep_node)\n+                    // ::rustc_middle::ty::query::plumbing::force_from_dep_node(tcx, dep_node)\n                     // ```\n                     //\n                     // However, this did not seem to work effectively and more bugs were hit."}, {"sha": "76d493cb58c2504b5193b93b822065f036e879ae", "filename": "src/librustc_incremental/persist/load.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fload.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n //! Code to save/load the dep-graph from files.\n \n-use rustc::dep_graph::{PreviousDepGraph, SerializedDepGraph, WorkProduct, WorkProductId};\n-use rustc::ty::query::OnDiskCache;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::dep_graph::{PreviousDepGraph, SerializedDepGraph, WorkProduct, WorkProductId};\n+use rustc_middle::ty::query::OnDiskCache;\n+use rustc_middle::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_serialize::opaque::Decoder;\n use rustc_serialize::Decodable as RustcDecodable;"}, {"sha": "baea49db99ea36b45d79477c8aa49286c73a5b50", "filename": "src/librustc_incremental/persist/save.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::dep_graph::{DepGraph, DepKind, WorkProduct, WorkProductId};\n-use rustc::ty::TyCtxt;\n+use rustc_middle::dep_graph::{DepGraph, DepKind, WorkProduct, WorkProductId};\n+use rustc_middle::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::join;\n use rustc_serialize::opaque::Encoder;"}, {"sha": "c78e4ddd1d57ee9d11a6a349ead22a13f4e56504", "filename": "src/librustc_incremental/persist/work_product.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n //! This module contains files for saving intermediate work-products.\n \n use crate::persist::fs::*;\n-use rustc::dep_graph::{WorkProduct, WorkProductFileKind, WorkProductId};\n+use rustc_middle::dep_graph::{WorkProduct, WorkProductFileKind, WorkProductId};\n use rustc_fs_util::link_or_copy;\n use rustc_session::Session;\n use std::fs as std_fs;"}, {"sha": "5c62a1298b97b371da3ac53d482dce823e8576b7", "filename": "src/librustc_infer/infer/at.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fat.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -27,8 +27,8 @@\n \n use super::*;\n \n-use rustc::ty::relate::{Relate, TypeRelation};\n-use rustc::ty::Const;\n+use rustc_middle::ty::relate::{Relate, TypeRelation};\n+use rustc_middle::ty::Const;\n \n pub struct At<'a, 'tcx> {\n     pub infcx: &'a InferCtxt<'a, 'tcx>,"}, {"sha": "347a5ff6d56a41736a1bcd3d697bf785fa57e28a", "filename": "src/librustc_infer/infer/canonical/canonicalizer.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fcanonicalizer.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -10,10 +10,10 @@ use crate::infer::canonical::{\n     OriginalQueryValues,\n };\n use crate::infer::InferCtxt;\n-use rustc::ty::flags::FlagComputation;\n-use rustc::ty::fold::{TypeFoldable, TypeFolder};\n-use rustc::ty::subst::GenericArg;\n-use rustc::ty::{self, BoundVar, InferConst, List, Ty, TyCtxt, TypeFlags};\n+use rustc_middle::ty::flags::FlagComputation;\n+use rustc_middle::ty::fold::{TypeFoldable, TypeFolder};\n+use rustc_middle::ty::subst::GenericArg;\n+use rustc_middle::ty::{self, BoundVar, InferConst, List, Ty, TyCtxt, TypeFlags};\n use std::sync::atomic::Ordering;\n \n use rustc_data_structures::fx::FxHashMap;"}, {"sha": "8be03184295922ba62ad3d1c1ba873c0f971e14e", "filename": "src/librustc_infer/infer/canonical/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -23,13 +23,13 @@\n \n use crate::infer::{ConstVariableOrigin, ConstVariableOriginKind};\n use crate::infer::{InferCtxt, RegionVariableOrigin, TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::subst::GenericArg;\n-use rustc::ty::{self, BoundVar, List};\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::subst::GenericArg;\n+use rustc_middle::ty::{self, BoundVar, List};\n use rustc_index::vec::IndexVec;\n use rustc_span::source_map::Span;\n \n-pub use rustc::infer::canonical::*;\n+pub use rustc_middle::infer::canonical::*;\n use substitute::CanonicalExt;\n \n mod canonicalizer;"}, {"sha": "b9c2f5a4319a1ca0d49b6e055ff723e94ad3fa1c", "filename": "src/librustc_infer/infer/canonical/query_response.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fquery_response.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fquery_response.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fquery_response.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -18,11 +18,11 @@ use crate::infer::{InferCtxt, InferOk, InferResult, NLLRegionVariableOrigin};\n use crate::traits::query::{Fallible, NoSolution};\n use crate::traits::{DomainGoal, TraitEngine};\n use crate::traits::{Obligation, ObligationCause, PredicateObligation};\n-use rustc::arena::ArenaAllocatable;\n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::relate::TypeRelation;\n-use rustc::ty::subst::{GenericArg, GenericArgKind};\n-use rustc::ty::{self, BoundVar, Ty, TyCtxt};\n+use rustc_middle::arena::ArenaAllocatable;\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::relate::TypeRelation;\n+use rustc_middle::ty::subst::{GenericArg, GenericArgKind};\n+use rustc_middle::ty::{self, BoundVar, Ty, TyCtxt};\n use rustc_data_structures::captures::Captures;\n use rustc_index::vec::Idx;\n use rustc_index::vec::IndexVec;"}, {"sha": "55609c080acc16a24c25b12300328ce1a0d32557", "filename": "src/librustc_infer/infer/canonical/substitute.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fsubstitute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fsubstitute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fsubstitute.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -7,9 +7,9 @@\n //! [c]: https://rustc-dev-guide.rust-lang.org/traits/canonicalization.html\n \n use crate::infer::canonical::{Canonical, CanonicalVarValues};\n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::subst::GenericArgKind;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::subst::GenericArgKind;\n+use rustc_middle::ty::{self, TyCtxt};\n \n pub(super) trait CanonicalExt<'tcx, V> {\n     /// Instantiate the wrapped value, replacing each canonical value"}, {"sha": "ddb54b91b1a6fe662d4884c5ce1d39ef70718406", "filename": "src/librustc_infer/infer/combine.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcombine.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -34,11 +34,11 @@ use super::{InferCtxt, MiscVariable, TypeTrace};\n \n use crate::traits::{Obligation, PredicateObligations};\n \n-use rustc::ty::error::TypeError;\n-use rustc::ty::relate::{self, Relate, RelateResult, TypeRelation};\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{self, InferConst, Ty, TyCtxt};\n-use rustc::ty::{IntType, UintType};\n+use rustc_middle::ty::error::TypeError;\n+use rustc_middle::ty::relate::{self, Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::{self, InferConst, Ty, TyCtxt};\n+use rustc_middle::ty::{IntType, UintType};\n use rustc_ast::ast;\n use rustc_hir::def_id::DefId;\n use rustc_span::{Span, DUMMY_SP};"}, {"sha": "e05094cda2762a76d20824539f574581bc3e2b42", "filename": "src/librustc_infer/infer/equate.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fequate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fequate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fequate.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,10 +1,10 @@\n use super::combine::{CombineFields, RelationDir};\n use super::Subtype;\n \n-use rustc::ty::relate::{self, Relate, RelateResult, TypeRelation};\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::TyVar;\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::relate::{self, Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::TyVar;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n \n use rustc_hir::def_id::DefId;\n "}, {"sha": "66a919ce6fabd8a9740e996c4a5c5687a4e83ad2", "filename": "src/librustc_infer/infer/error_reporting/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -55,9 +55,9 @@ use crate::traits::{\n     IfExpressionCause, MatchExpressionArmCause, ObligationCause, ObligationCauseCode,\n };\n \n-use rustc::middle::region;\n-use rustc::ty::error::TypeError;\n-use rustc::ty::{\n+use rustc_middle::middle::region;\n+use rustc_middle::ty::error::TypeError;\n+use rustc_middle::ty::{\n     self,\n     subst::{Subst, SubstsRef},\n     Region, Ty, TyCtxt, TypeFoldable,"}, {"sha": "6bff2ad759e6e3d6f90c519e1a8c23a6157b9341", "filename": "src/librustc_infer/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n use crate::infer::type_variable::TypeVariableOriginKind;\n use crate::infer::InferCtxt;\n-use rustc::hir::map::Map;\n-use rustc::ty::print::Print;\n-use rustc::ty::{self, DefIdTree, Infer, Ty, TyVar};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::print::Print;\n+use rustc_middle::ty::{self, DefIdTree, Infer, Ty, TyVar};\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Namespace};"}, {"sha": "3836bd9afa8b6e214bb7f9df4d1c8c78bb2f68a4", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/different_lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,7 +5,7 @@ use crate::infer::error_reporting::nice_region_error::util::AnonymousParamInfo;\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::SubregionOrigin;\n-use rustc::util::common::ErrorReported;\n+use rustc_middle::util::common::ErrorReported;\n \n use rustc_errors::struct_span_err;\n "}, {"sha": "eb0fde244a64c50f02015b864b65dadd52655392", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/find_anon_type.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n-use rustc::hir::map::Map;\n-use rustc::middle::resolve_lifetime as rl;\n-use rustc::ty::{self, Region, TyCtxt};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::middle::resolve_lifetime as rl;\n+use rustc_middle::ty::{self, Region, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::Node;"}, {"sha": "a62e8197c1bdee9b59fd785880acbd1e0043e198", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError::*;\n use crate::infer::InferCtxt;\n-use rustc::ty::{self, TyCtxt};\n-use rustc::util::common::ErrorReported;\n+use rustc_middle::ty::{self, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_errors::DiagnosticBuilder;\n use rustc_span::source_map::Span;\n "}, {"sha": "08ce8ee07e2fa51366f5fbc9d10196ac8172d29f", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/named_anon_conflict.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n //! Error Reporting for Anonymous Region Lifetime Errors\n //! where one region is named and the other is anonymous.\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n-use rustc::ty;\n+use rustc_middle::ty;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir::{FnRetTy, TyKind};\n "}, {"sha": "9d599d9e83ad88d5333d6f561d80e805015bd17a", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/outlives_closure.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,8 +4,8 @@\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError::SubSupConflict;\n use crate::infer::SubregionOrigin;\n-use rustc::ty::RegionKind;\n-use rustc::util::common::ErrorReported;\n+use rustc_middle::ty::RegionKind;\n+use rustc_middle::util::common::ErrorReported;\n use rustc_hir::{Expr, ExprKind::Closure, Node};\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {"}, {"sha": "a7c06cd2c11a0fead9372424a939504948abb0c9", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/placeholder_error.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,10 +3,10 @@ use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::ValuePairs;\n use crate::infer::{SubregionOrigin, TypeTrace};\n use crate::traits::{ObligationCause, ObligationCauseCode};\n-use rustc::ty::error::ExpectedFound;\n-use rustc::ty::print::{FmtPrinter, Print, RegionHighlightMode};\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::ty::error::ExpectedFound;\n+use rustc_middle::ty::print::{FmtPrinter, Print, RegionHighlightMode};\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_errors::DiagnosticBuilder;\n use rustc_hir::def::Namespace;\n use rustc_hir::def_id::DefId;"}, {"sha": "fbd8eba3c2e8a05472419855c7befd6ee2a8d727", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,8 +3,8 @@\n use crate::infer::error_reporting::msg_span_from_free_region;\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n-use rustc::ty::{BoundRegion, FreeRegion, RegionKind};\n-use rustc::util::common::ErrorReported;\n+use rustc_middle::ty::{BoundRegion, FreeRegion, RegionKind};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_errors::Applicability;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {"}, {"sha": "7083e8e78faa610441e040908df013ddf92fac2f", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/trait_impl_difference.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,8 +4,8 @@ use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::{Subtype, ValuePairs};\n use crate::traits::ObligationCauseCode::CompareImplMethodObligation;\n-use rustc::ty::Ty;\n-use rustc::util::common::ErrorReported;\n+use rustc_middle::ty::Ty;\n+use rustc_middle::util::common::ErrorReported;\n use rustc_span::Span;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {"}, {"sha": "549ed1d42534651cfb56191cfce24c546b7f3370", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,7 +2,7 @@\n //! anonymous regions.\n \n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n-use rustc::ty::{self, DefIdTree, Region, Ty};\n+use rustc_middle::ty::{self, DefIdTree, Region, Ty};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_span::Span;"}, {"sha": "11448e996727f03f751cb76f1b4e43fcc3893de3", "filename": "src/librustc_infer/infer/error_reporting/note.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnote.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n use crate::infer::error_reporting::{note_and_explain_region, ObligationCauseExt};\n use crate::infer::{self, InferCtxt, SubregionOrigin};\n-use rustc::middle::region;\n-use rustc::ty::error::TypeError;\n-use rustc::ty::{self, Region};\n+use rustc_middle::middle::region;\n+use rustc_middle::ty::error::TypeError;\n+use rustc_middle::ty::{self, Region};\n use rustc_errors::{struct_span_err, DiagnosticBuilder};\n \n impl<'a, 'tcx> InferCtxt<'a, 'tcx> {"}, {"sha": "eeaa4c1661e4e205393a8dcf181ae31951131535", "filename": "src/librustc_infer/infer/freshen.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ffreshen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ffreshen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ffreshen.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -31,8 +31,8 @@\n //! variable only once, and it does so as soon as it can, so it is reasonable to ask what the type\n //! inferencer knows \"so far\".\n \n-use rustc::ty::fold::TypeFolder;\n-use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::fold::TypeFolder;\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n \n use rustc_data_structures::fx::FxHashMap;\n "}, {"sha": "1a58e100fb3f4bfffb7233d9bb4b365021d7ce6a", "filename": "src/librustc_infer/infer/fudge.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ffudge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ffudge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ffudge.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::ty::fold::{TypeFoldable, TypeFolder};\n-use rustc::ty::{self, ConstVid, FloatVid, IntVid, RegionVid, Ty, TyCtxt, TyVid};\n+use rustc_middle::ty::fold::{TypeFoldable, TypeFolder};\n+use rustc_middle::ty::{self, ConstVid, FloatVid, IntVid, RegionVid, Ty, TyCtxt, TyVid};\n \n use super::type_variable::TypeVariableOrigin;\n use super::InferCtxt;"}, {"sha": "f95d74a9340c9fbd7920f04752795e52ca05f7a6", "filename": "src/librustc_infer/infer/glb.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fglb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fglb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fglb.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,8 +4,8 @@ use super::InferCtxt;\n use super::Subtype;\n \n use crate::traits::ObligationCause;\n-use rustc::ty::relate::{Relate, RelateResult, TypeRelation};\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::relate::{Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n \n /// \"Greatest lower bound\" (common subtype)\n pub struct Glb<'combine, 'infcx, 'tcx> {"}, {"sha": "ef18918c1772f7ddfccdda79da9c630d2abd7a4f", "filename": "src/librustc_infer/infer/higher_ranked/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fhigher_ranked%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fhigher_ranked%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fhigher_ranked%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,8 +5,8 @@ use super::combine::CombineFields;\n use super::{HigherRankedType, InferCtxt, PlaceholderMap};\n \n use crate::infer::CombinedSnapshot;\n-use rustc::ty::relate::{Relate, RelateResult, TypeRelation};\n-use rustc::ty::{self, Binder, TypeFoldable};\n+use rustc_middle::ty::relate::{Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::{self, Binder, TypeFoldable};\n \n impl<'a, 'tcx> CombineFields<'a, 'tcx> {\n     pub fn higher_ranked_sub<T>("}, {"sha": "c29614b855667b6e4950efada1854b4c58c15406", "filename": "src/librustc_infer/infer/lattice.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Flattice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Flattice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flattice.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -23,9 +23,9 @@ use super::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use super::InferCtxt;\n \n use crate::traits::ObligationCause;\n-use rustc::ty::relate::{RelateResult, TypeRelation};\n-use rustc::ty::TyVar;\n-use rustc::ty::{self, Ty};\n+use rustc_middle::ty::relate::{RelateResult, TypeRelation};\n+use rustc_middle::ty::TyVar;\n+use rustc_middle::ty::{self, Ty};\n \n pub trait LatticeDir<'f, 'tcx>: TypeRelation<'tcx> {\n     fn infcx(&self) -> &'f InferCtxt<'f, 'tcx>;"}, {"sha": "c43d8107b2fe9ad96e35dc4cde30a53d2202f2f2", "filename": "src/librustc_infer/infer/lexical_region_resolve/graphviz.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n //! This module provides linkage between libgraphviz traits and\n-//! `rustc::middle::typeck::infer::region_constraints`, generating a\n+//! `rustc_middle::middle::typeck::infer::region_constraints`, generating a\n //! rendering of the graph represented by the list of `Constraint`\n //! instances (which make up the edges of the graph), as well as the\n //! origin for each constraint (which are attached to the labels on\n@@ -11,11 +11,11 @@ use graphviz as dot;\n use super::Constraint;\n use crate::infer::region_constraints::RegionConstraintData;\n use crate::infer::SubregionOrigin;\n-use rustc::middle::free_region::RegionRelations;\n-use rustc::middle::region;\n-use rustc::ty;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir::def_id::DefIndex;\n+use rustc_middle::middle::free_region::RegionRelations;\n+use rustc_middle::middle::region;\n+use rustc_middle::ty;\n \n use std::borrow::Cow;\n use std::collections::btree_map::BTreeMap;"}, {"sha": "afa33d32251e16a8d8398aa10e88560e668c37e0", "filename": "src/librustc_infer/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -9,12 +9,12 @@ use crate::infer::region_constraints::VerifyBound;\n use crate::infer::RegionVariableOrigin;\n use crate::infer::RegionckMode;\n use crate::infer::SubregionOrigin;\n-use rustc::middle::free_region::RegionRelations;\n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::ty::{ReEarlyBound, ReEmpty, ReErased, ReFree, ReStatic};\n-use rustc::ty::{ReLateBound, RePlaceholder, ReScope, ReVar};\n-use rustc::ty::{Region, RegionVid};\n+use rustc_middle::middle::free_region::RegionRelations;\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::{ReEarlyBound, ReEmpty, ReErased, ReFree, ReStatic};\n+use rustc_middle::ty::{ReLateBound, RePlaceholder, ReScope, ReVar};\n+use rustc_middle::ty::{Region, RegionVid};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::implementation::{\n     Direction, Graph, NodeIndex, INCOMING, OUTGOING,"}, {"sha": "492f2b229d36d3ace1bc65d2f965d687401201b6", "filename": "src/librustc_infer/infer/lub.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Flub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Flub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flub.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,8 +4,8 @@ use super::InferCtxt;\n use super::Subtype;\n \n use crate::traits::ObligationCause;\n-use rustc::ty::relate::{Relate, RelateResult, TypeRelation};\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::relate::{Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n \n /// \"Least upper bound\" (common supertype)\n pub struct Lub<'combine, 'infcx, 'tcx> {"}, {"sha": "9f80674421afa49a205486d392ea5fcfb655a440", "filename": "src/librustc_infer/infer/mod.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -8,21 +8,21 @@ pub use self::ValuePairs::*;\n \n use crate::traits::{self, ObligationCause, PredicateObligations, TraitEngine};\n \n-use rustc::infer::canonical::{Canonical, CanonicalVarValues};\n-use rustc::infer::unify_key::{ConstVarValue, ConstVariableValue};\n-use rustc::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind, ToType};\n-use rustc::middle::free_region::RegionRelations;\n-use rustc::middle::region;\n-use rustc::mir;\n-use rustc::mir::interpret::ConstEvalResult;\n-use rustc::traits::select;\n-use rustc::ty::error::{ExpectedFound, TypeError, UnconstrainedNumeric};\n-use rustc::ty::fold::{TypeFoldable, TypeFolder};\n-use rustc::ty::relate::RelateResult;\n-use rustc::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, SubstsRef};\n-pub use rustc::ty::IntVarValue;\n-use rustc::ty::{self, GenericParamDefKind, InferConst, Ty, TyCtxt};\n-use rustc::ty::{ConstVid, FloatVid, IntVid, TyVid};\n+use rustc_middle::infer::canonical::{Canonical, CanonicalVarValues};\n+use rustc_middle::infer::unify_key::{ConstVarValue, ConstVariableValue};\n+use rustc_middle::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind, ToType};\n+use rustc_middle::middle::free_region::RegionRelations;\n+use rustc_middle::middle::region;\n+use rustc_middle::mir;\n+use rustc_middle::mir::interpret::ConstEvalResult;\n+use rustc_middle::traits::select;\n+use rustc_middle::ty::error::{ExpectedFound, TypeError, UnconstrainedNumeric};\n+use rustc_middle::ty::fold::{TypeFoldable, TypeFolder};\n+use rustc_middle::ty::relate::RelateResult;\n+use rustc_middle::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, SubstsRef};\n+pub use rustc_middle::ty::IntVarValue;\n+use rustc_middle::ty::{self, GenericParamDefKind, InferConst, Ty, TyCtxt};\n+use rustc_middle::ty::{ConstVid, FloatVid, IntVid, TyVid};\n use rustc_ast::ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n@@ -65,7 +65,7 @@ mod sub;\n pub mod type_variable;\n \n use crate::infer::canonical::OriginalQueryValues;\n-pub use rustc::infer::unify_key;\n+pub use rustc_middle::infer::unify_key;\n \n #[must_use]\n #[derive(Debug)]\n@@ -672,8 +672,8 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     }\n \n     pub fn type_is_unconstrained_numeric(&'a self, ty: Ty<'_>) -> UnconstrainedNumeric {\n-        use rustc::ty::error::UnconstrainedNumeric::Neither;\n-        use rustc::ty::error::UnconstrainedNumeric::{UnconstrainedFloat, UnconstrainedInt};\n+        use rustc_middle::ty::error::UnconstrainedNumeric::Neither;\n+        use rustc_middle::ty::error::UnconstrainedNumeric::{UnconstrainedFloat, UnconstrainedInt};\n         match ty.kind {\n             ty::Infer(ty::IntVar(vid)) => {\n                 if self.inner.borrow_mut().int_unification_table.probe_value(vid).is_some() {"}, {"sha": "bba15a4553c0b4905b76a59f506bc4f6500a0965", "filename": "src/librustc_infer/infer/nll_relate/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -24,11 +24,11 @@\n use crate::infer::InferCtxt;\n use crate::infer::{ConstVarValue, ConstVariableValue};\n use crate::traits::DomainGoal;\n-use rustc::ty::error::TypeError;\n-use rustc::ty::fold::{TypeFoldable, TypeVisitor};\n-use rustc::ty::relate::{self, Relate, RelateResult, TypeRelation};\n-use rustc::ty::subst::GenericArg;\n-use rustc::ty::{self, InferConst, Ty, TyCtxt};\n+use rustc_middle::ty::error::TypeError;\n+use rustc_middle::ty::fold::{TypeFoldable, TypeVisitor};\n+use rustc_middle::ty::relate::{self, Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::subst::GenericArg;\n+use rustc_middle::ty::{self, InferConst, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use std::fmt::Debug;\n "}, {"sha": "85604e93480a135848055622821ccc2c6759b8b3", "filename": "src/librustc_infer/infer/outlives/env.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fenv.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use crate::infer::{GenericKind, InferCtxt};\n use crate::traits::query::OutlivesBound;\n-use rustc::ty;\n-use rustc::ty::free_region_map::FreeRegionMap;\n+use rustc_middle::ty;\n+use rustc_middle::ty::free_region_map::FreeRegionMap;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n "}, {"sha": "ed3d86058696802f5fca9cc5017048cd351968ed", "filename": "src/librustc_infer/infer/outlives/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,8 +4,8 @@ pub mod env;\n pub mod obligations;\n pub mod verify;\n \n-use rustc::traits::query::OutlivesBound;\n-use rustc::ty;\n+use rustc_middle::traits::query::OutlivesBound;\n+use rustc_middle::ty;\n \n pub fn explicit_outlives_bounds<'tcx>(\n     param_env: ty::ParamEnv<'tcx>,"}, {"sha": "e6feb5e1edcb56902ddd0d353e2f9805d7f02c75", "filename": "src/librustc_infer/infer/outlives/obligations.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fobligations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fobligations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fobligations.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -63,9 +63,9 @@ use crate::infer::outlives::env::RegionBoundPairs;\n use crate::infer::outlives::verify::VerifyBoundCx;\n use crate::infer::{self, GenericKind, InferCtxt, RegionObligation, SubregionOrigin, VerifyBound};\n use crate::traits::ObligationCause;\n-use rustc::ty::outlives::Component;\n-use rustc::ty::subst::GenericArgKind;\n-use rustc::ty::{self, Region, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::outlives::Component;\n+use rustc_middle::ty::subst::GenericArgKind;\n+use rustc_middle::ty::{self, Region, Ty, TyCtxt, TypeFoldable};\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;"}, {"sha": "19e70db313f992f1f33537fc4a1daae417d967aa", "filename": "src/librustc_infer/infer/outlives/verify.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fverify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fverify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fverify.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n use crate::infer::outlives::env::RegionBoundPairs;\n use crate::infer::{GenericKind, VerifyBound};\n use crate::traits;\n-use rustc::ty::subst::{InternalSubsts, Subst};\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_data_structures::captures::Captures;\n use rustc_hir::def_id::DefId;\n "}, {"sha": "18e86162eb5e40ac1126cb5998389dc571c2fa92", "filename": "src/librustc_infer/infer/region_constraints/leak_check.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use super::*;\n use crate::infer::{CombinedSnapshot, PlaceholderMap};\n-use rustc::ty::error::TypeError;\n-use rustc::ty::relate::RelateResult;\n+use rustc_middle::ty::error::TypeError;\n+use rustc_middle::ty::relate::RelateResult;\n \n impl<'tcx> RegionConstraintCollector<'tcx> {\n     /// Searches region constraints created since `snapshot` that"}, {"sha": "47d38fdd12d7aef5e422fc070c98247f99ea91c2", "filename": "src/librustc_infer/infer/region_constraints/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -6,10 +6,10 @@ use self::UndoLog::*;\n use super::unify_key;\n use super::{MiscVariable, RegionVariableOrigin, SubregionOrigin};\n \n-use rustc::ty::ReStatic;\n-use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::ty::{ReLateBound, ReVar};\n-use rustc::ty::{Region, RegionVid};\n+use rustc_middle::ty::ReStatic;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::{ReLateBound, ReVar};\n+use rustc_middle::ty::{Region, RegionVid};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::unify as ut;\n@@ -23,7 +23,7 @@ use std::{cmp, fmt, mem};\n \n mod leak_check;\n \n-pub use rustc::infer::MemberConstraint;\n+pub use rustc_middle::infer::MemberConstraint;\n \n #[derive(Default)]\n pub struct RegionConstraintCollector<'tcx> {"}, {"sha": "22b90f2415540c5aa6442dd3a394813a0b589b41", "filename": "src/librustc_infer/infer/resolve.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fresolve.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use super::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use super::{FixupError, FixupResult, InferCtxt, Span};\n-use rustc::ty::fold::{TypeFolder, TypeVisitor};\n-use rustc::ty::{self, Const, InferConst, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::fold::{TypeFolder, TypeVisitor};\n+use rustc_middle::ty::{self, Const, InferConst, Ty, TyCtxt, TypeFoldable};\n \n ///////////////////////////////////////////////////////////////////////////\n // OPPORTUNISTIC VAR RESOLVER"}, {"sha": "080af37492d89a4eb56e50ad9fd56b70fb455ef2", "filename": "src/librustc_infer/infer/sub.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fsub.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,10 +2,10 @@ use super::combine::{CombineFields, RelationDir};\n use super::SubregionOrigin;\n \n use crate::traits::Obligation;\n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::relate::{Cause, Relate, RelateResult, TypeRelation};\n-use rustc::ty::TyVar;\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::relate::{Cause, Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::TyVar;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use std::mem;\n \n /// Ensures `a` is made a subtype of `b`. Returns `a` on success."}, {"sha": "abea22bf5d9eeea0c71255c8b267579c93dd1186", "filename": "src/librustc_infer/infer/type_variable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,4 +1,4 @@\n-use rustc::ty::{self, Ty, TyVid};\n+use rustc_middle::ty::{self, Ty, TyVid};\n use rustc_hir::def_id::DefId;\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;"}, {"sha": "a61d1ed61eae2a80b7a479652cf568302c6cd865", "filename": "src/librustc_infer/traits/engine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Ftraits%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Ftraits%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fengine.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n use crate::infer::InferCtxt;\n use crate::traits::Obligation;\n-use rustc::ty::{self, ToPredicate, Ty, WithConstness};\n+use rustc_middle::ty::{self, ToPredicate, Ty, WithConstness};\n use rustc_hir::def_id::DefId;\n \n use super::FulfillmentError;"}, {"sha": "629cdadde6459926de76f3cc55d3f849763c1f90", "filename": "src/librustc_infer/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use super::ObjectSafetyViolation;\n \n use crate::infer::InferCtxt;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};"}, {"sha": "9b01c79c50a6c8b27d9b42efe5473b7e2c8a0988", "filename": "src/librustc_infer/traits/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -8,8 +8,8 @@ mod project;\n mod structural_impls;\n mod util;\n \n-use rustc::ty::error::{ExpectedFound, TypeError};\n-use rustc::ty::{self, Ty};\n+use rustc_middle::ty::error::{ExpectedFound, TypeError};\n+use rustc_middle::ty::{self, Ty};\n use rustc_hir as hir;\n use rustc_span::Span;\n \n@@ -26,7 +26,7 @@ pub use self::project::{\n };\n crate use self::util::elaborate_predicates;\n \n-pub use rustc::traits::*;\n+pub use rustc_middle::traits::*;\n \n /// An `Obligation` represents some trait reference (e.g., `int: Eq`) for\n /// which the vtable must be found. The process of finding a vtable is"}, {"sha": "007ff3884d3f51592e89f433651390b07e42bc0f", "filename": "src/librustc_infer/traits/project.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fproject.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,11 +2,11 @@\n \n use super::PredicateObligation;\n \n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::{self, Ty};\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::{self, Ty};\n use rustc_data_structures::snapshot_map::{Snapshot, SnapshotMap};\n \n-pub use rustc::traits::Reveal;\n+pub use rustc_middle::traits::Reveal;\n \n #[derive(Clone)]\n pub struct MismatchedProjectionTypes<'tcx> {"}, {"sha": "595a8cd768390e5d4613e2faf211baebb8e73359", "filename": "src/librustc_infer/traits/structural_impls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fstructural_impls.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use crate::traits;\n use crate::traits::project::Normalized;\n-use rustc::ty;\n-use rustc::ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n+use rustc_middle::ty;\n+use rustc_middle::ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n \n use std::fmt;\n "}, {"sha": "9247f02b335472e7c5fb41c8fbe864170d41e6c4", "filename": "src/librustc_infer/traits/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_infer%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Futil.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use smallvec::smallvec;\n \n-use rustc::ty::outlives::Component;\n-use rustc::ty::{self, ToPolyTraitRef, TyCtxt};\n+use rustc_middle::ty::outlives::Component;\n+use rustc_middle::ty::{self, ToPolyTraitRef, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n \n fn anonymize_predicate<'tcx>(tcx: TyCtxt<'tcx>, pred: &ty::Predicate<'tcx>) -> ty::Predicate<'tcx> {"}, {"sha": "88c3d0ec56f6877e773018eb412c9280cdf6996d", "filename": "src/librustc_interface/callbacks.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_interface%2Fcallbacks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_interface%2Fcallbacks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fcallbacks.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -9,8 +9,8 @@\n //! The functions in this file should fall back to the default set in their\n //! origin crate when the `TyCtxt` is not present in TLS.\n \n-use rustc::ty::tls;\n use rustc_errors::{Diagnostic, TRACK_DIAGNOSTICS};\n+use rustc_middle::ty::tls;\n use std::fmt;\n \n /// This is a callback from librustc_ast as it cannot access the implicit state\n@@ -58,5 +58,5 @@ pub fn setup_callbacks() {\n     rustc_span::SPAN_DEBUG.swap(&(span_debug as fn(_, &mut fmt::Formatter<'_>) -> _));\n     rustc_hir::def_id::DEF_ID_DEBUG.swap(&(def_id_debug as fn(_, &mut fmt::Formatter<'_>) -> _));\n     TRACK_DIAGNOSTICS.swap(&(track_diagnostic as fn(&_)));\n-    rustc::ty::RESOLVE_INSTANCE.swap(&(rustc_ty::instance::resolve_instance as _));\n+    rustc_middle::ty::RESOLVE_INSTANCE.swap(&(rustc_ty::instance::resolve_instance as _));\n }"}, {"sha": "e332da8b951cb961ba2540690737415f5ae6db34", "filename": "src/librustc_interface/interface.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_interface%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_interface%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Finterface.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n pub use crate::passes::BoxedResolver;\n use crate::util;\n \n-use rustc::ty;\n-use rustc::util::common::ErrorReported;\n+use rustc_middle::ty;\n+use rustc_middle::util::common::ErrorReported;\n use rustc_ast::ast::{self, MetaItemKind};\n use rustc_ast::token;\n use rustc_codegen_ssa::traits::CodegenBackend;"}, {"sha": "7d066a31a079710e64257571113d0a0028891d25", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,13 +3,6 @@ use crate::proc_macro_decls;\n use crate::util;\n \n use log::{info, log_enabled, warn};\n-use rustc::arena::Arena;\n-use rustc::dep_graph::DepGraph;\n-use rustc::middle;\n-use rustc::middle::cstore::{CrateStore, MetadataLoader, MetadataLoaderDyn};\n-use rustc::ty::steal::Steal;\n-use rustc::ty::{self, GlobalCtxt, ResolverOutputs, TyCtxt};\n-use rustc::util::common::ErrorReported;\n use rustc_ast::mut_visit::MutVisitor;\n use rustc_ast::{self, ast, visit};\n use rustc_codegen_ssa::back::link::emit_metadata;\n@@ -22,6 +15,13 @@ use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_hir::definitions::Definitions;\n use rustc_hir::Crate;\n use rustc_lint::LintStore;\n+use rustc_middle::arena::Arena;\n+use rustc_middle::dep_graph::DepGraph;\n+use rustc_middle::middle;\n+use rustc_middle::middle::cstore::{CrateStore, MetadataLoader, MetadataLoaderDyn};\n+use rustc_middle::ty::steal::Steal;\n+use rustc_middle::ty::{self, GlobalCtxt, ResolverOutputs, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_mir as mir;\n use rustc_mir_build as mir_build;\n use rustc_parse::{parse_crate_from_file, parse_crate_from_source_str};\n@@ -678,7 +678,7 @@ pub fn default_provide(providers: &mut ty::query::Providers<'_>) {\n     providers.analysis = analysis;\n     proc_macro_decls::provide(providers);\n     plugin::build::provide(providers);\n-    rustc::hir::provide(providers);\n+    rustc_middle::hir::provide(providers);\n     mir::provide(providers);\n     mir_build::provide(providers);\n     rustc_privacy::provide(providers);"}, {"sha": "2fbee2b03aa9b7e56843551f6947d2a980c6aa4e", "filename": "src/librustc_interface/proc_macro_decls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_interface%2Fproc_macro_decls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_interface%2Fproc_macro_decls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fproc_macro_decls.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::ty::query::Providers;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_ast::attr;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};"}, {"sha": "ca8501d2878142da2dc63c244e20e26e53dc8e6e", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,11 +1,11 @@\n use crate::interface::{Compiler, Result};\n use crate::passes::{self, BoxedResolver, QueryContext};\n \n-use rustc::arena::Arena;\n-use rustc::dep_graph::DepGraph;\n-use rustc::ty::steal::Steal;\n-use rustc::ty::{GlobalCtxt, ResolverOutputs, TyCtxt};\n-use rustc::util::common::ErrorReported;\n+use rustc_middle::arena::Arena;\n+use rustc_middle::dep_graph::DepGraph;\n+use rustc_middle::ty::steal::Steal;\n+use rustc_middle::ty::{GlobalCtxt, ResolverOutputs, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_ast::{self, ast};\n use rustc_codegen_ssa::traits::CodegenBackend;\n use rustc_data_structures::sync::{Lrc, Once, WorkerLocal};"}, {"sha": "9d8bec459bc97f94215cc43be105d966c087b159", "filename": "src/librustc_interface/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_interface%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_interface%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Ftests.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,7 +2,7 @@ extern crate getopts;\n \n use crate::interface::parse_cfgspecs;\n \n-use rustc::middle::cstore;\n+use rustc_middle::middle::cstore;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{emitter::HumanReadableErrorType, registry, ColorConfig};\n use rustc_session::config::{build_configuration, build_session_options, to_crate_config};"}, {"sha": "9d46bfb891cf6c6809bfb1802cb95ab25339afc0", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n use log::info;\n-use rustc::ty;\n+use rustc_middle::ty;\n use rustc_ast::ast::{AttrVec, BlockCheckMode};\n use rustc_ast::mut_visit::{visit_clobber, MutVisitor, *};\n use rustc_ast::ptr::P;"}, {"sha": "922d16f57a48458a255c81f77b0e2f85a275924d", "filename": "src/librustc_lint/array_into_iter.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Farray_into_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Farray_into_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Farray_into_iter.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n use crate::{LateContext, LateLintPass, LintContext};\n-use rustc::ty;\n-use rustc::ty::adjustment::{Adjust, Adjustment};\n+use rustc_middle::ty;\n+use rustc_middle::ty::adjustment::{Adjust, Adjustment};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_session::lint::FutureIncompatibleInfo;"}, {"sha": "937164fb55d9d4888da1ea2a5ad2d4022f2065b0", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,17 +1,16 @@\n //! Lints in the Rust compiler.\n //!\n //! This contains lints which can feasibly be implemented as their own\n-//! AST visitor. Also see `rustc::lint::builtin`, which contains the\n-//! definitions of lints that are emitted directly inside the main\n-//! compiler.\n+//! AST visitor. Also see `rustc_session::lint::builtin`, which contains the\n+//! definitions of lints that are emitted directly inside the main compiler.\n //!\n //! To add a new lint to rustc, declare it here using `declare_lint!()`.\n //! Then add code to emit the new lint in the appropriate circumstances.\n //! You can do that in an existing `LintPass` if it makes sense, or in a\n //! new `LintPass`, or using `Session::add_lint` elsewhere in the\n //! compiler. Only do the latter if the check can't be written cleanly as a\n //! `LintPass` (also, note that such lints will need to be defined in\n-//! `rustc::lint::builtin`, not here).\n+//! `rustc_session::lint::builtin`, not here).\n //!\n //! If you define a new `EarlyLintPass`, you will also need to add it to the\n //! `add_early_builtin!` or `add_early_builtin_with_new!` invocation in\n@@ -22,8 +21,6 @@\n //! `late_lint_methods!` invocation in `lib.rs`.\n \n use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n-use rustc::lint::LintDiagnosticBuilder;\n-use rustc::ty::{self, layout::VariantIdx, Ty, TyCtxt};\n use rustc_ast::ast::{self, Expr};\n use rustc_ast::attr::{self, HasAttrs};\n use rustc_ast::tokenstream::{TokenStream, TokenTree};\n@@ -38,6 +35,8 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::{GenericParamKind, PatKind};\n use rustc_hir::{HirIdSet, Node};\n+use rustc_middle::lint::LintDiagnosticBuilder;\n+use rustc_middle::ty::{self, layout::VariantIdx, Ty, TyCtxt};\n use rustc_session::lint::FutureIncompatibleInfo;\n use rustc_span::edition::Edition;\n use rustc_span::source_map::Spanned;\n@@ -1207,8 +1206,8 @@ declare_lint_pass!(\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TrivialConstraints {\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx hir::Item<'tcx>) {\n-        use rustc::ty::fold::TypeFoldable;\n-        use rustc::ty::Predicate::*;\n+        use rustc_middle::ty::fold::TypeFoldable;\n+        use rustc_middle::ty::Predicate::*;\n \n         if cx.tcx.features().trivial_bounds {\n             let def_id = cx.tcx.hir().local_def_id(item.hir_id);\n@@ -1558,7 +1557,7 @@ impl ExplicitOutlivesRequirements {\n         inferred_outlives: &[ty::Region<'tcx>],\n         infer_static: bool,\n     ) -> Vec<(usize, Span)> {\n-        use rustc::middle::resolve_lifetime::Region;\n+        use rustc_middle::middle::resolve_lifetime::Region;\n \n         bounds\n             .iter()\n@@ -1641,7 +1640,7 @@ impl ExplicitOutlivesRequirements {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ExplicitOutlivesRequirements {\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx hir::Item<'_>) {\n-        use rustc::middle::resolve_lifetime::Region;\n+        use rustc_middle::middle::resolve_lifetime::Region;\n \n         let infer_static = cx.tcx.features().infer_static_outlives_requirements;\n         let def_id = cx.tcx.hir().local_def_id(item.hir_id);\n@@ -1926,7 +1925,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for InvalidValue {\n             ty: Ty<'tcx>,\n             init: InitKind,\n         ) -> Option<InitError> {\n-            use rustc::ty::TyKind::*;\n+            use rustc_middle::ty::TyKind::*;\n             match ty.kind {\n                 // Primitive types that don't like 0 as a value.\n                 Ref(..) => Some((\"references must be non-null\".to_string(), None)),"}, {"sha": "4d644ce69eac248eb9d38aba9c92e1c94bbeaf24", "filename": "src/librustc_lint/context.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fcontext.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -18,11 +18,6 @@ use self::TargetLint::*;\n \n use crate::levels::LintLevelsBuilder;\n use crate::passes::{EarlyLintPassObject, LateLintPassObject};\n-use rustc::lint::LintDiagnosticBuilder;\n-use rustc::middle::privacy::AccessLevels;\n-use rustc::middle::stability;\n-use rustc::ty::layout::{LayoutError, LayoutOf, TyAndLayout};\n-use rustc::ty::{self, print::Printer, subst::GenericArg, Ty, TyCtxt};\n use rustc_ast::ast;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_data_structures::fx::FxHashMap;\n@@ -31,6 +26,11 @@ use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId};\n use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n+use rustc_middle::lint::LintDiagnosticBuilder;\n+use rustc_middle::middle::privacy::AccessLevels;\n+use rustc_middle::middle::stability;\n+use rustc_middle::ty::layout::{LayoutError, LayoutOf, TyAndLayout};\n+use rustc_middle::ty::{self, print::Printer, subst::GenericArg, Ty, TyCtxt};\n use rustc_session::lint::{add_elided_lifetime_in_path_suggestion, BuiltinLintDiagnostics};\n use rustc_session::lint::{FutureIncompatibleInfo, Level, Lint, LintBuffer, LintId};\n use rustc_session::Session;"}, {"sha": "dc5378cfb7d3d4d9993237946b95ab6c2d6c53fa", "filename": "src/librustc_lint/late.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flate.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -15,8 +15,8 @@\n //! for all lint attributes.\n \n use crate::{passes::LateLintPassObject, LateContext, LateLintPass, LintStore};\n-use rustc::hir::map::Map;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_ast::ast;\n use rustc_ast::walk_list;\n use rustc_data_structures::sync::{join, par_iter, ParallelIterator};"}, {"sha": "c64d8f6c5ae6c36fe4f80802c77eea4b2ec9fe03", "filename": "src/librustc_lint/levels.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flevels.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,10 +1,10 @@\n use crate::context::{CheckLintNameResult, LintStore};\n use crate::late::unerased_lint_store;\n-use rustc::hir::map::Map;\n-use rustc::lint::LintDiagnosticBuilder;\n-use rustc::lint::{struct_lint_level, LintLevelMap, LintLevelSets, LintSet, LintSource};\n-use rustc::ty::query::Providers;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::lint::LintDiagnosticBuilder;\n+use rustc_middle::lint::{struct_lint_level, LintLevelMap, LintLevelSets, LintSet, LintSource};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_ast::attr;\n use rustc_ast::unwrap_or;"}, {"sha": "97261759aeb28f619dee10f58f5bc77e50cbad10", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -19,7 +19,7 @@\n //! example) requires more effort. See `emit_lint` and `GatherNodeLevels`\n //! in `context.rs`.\n //!\n-//! Some code also exists in `rustc_session::lint`, `rustc::lint`.\n+//! Some code also exists in `rustc_session::lint`, `rustc_middle::lint`.\n //!\n //! ## Note\n //!\n@@ -35,7 +35,7 @@\n #![recursion_limit = \"256\"]\n \n #[macro_use]\n-extern crate rustc;\n+extern crate rustc_middle;\n #[macro_use]\n extern crate rustc_session;\n \n@@ -53,11 +53,11 @@ mod redundant_semicolon;\n mod types;\n mod unused;\n \n-use rustc::ty::query::Providers;\n-use rustc::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::lint::builtin::{\n     BARE_TRAIT_OBJECTS, ELIDED_LIFETIMES_IN_PATHS, EXPLICIT_OUTLIVES_REQUIREMENTS,\n     INTRA_DOC_LINK_RESOLUTION_FAILURE, MISSING_DOC_CODE_EXAMPLES, PRIVATE_DOC_TESTS,"}, {"sha": "ed3bcfe9f00954103081a7bbb4cea03c4e72dd12", "filename": "src/librustc_lint/nonstandard_style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fnonstandard_style.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n-use rustc::ty;\n+use rustc_middle::ty;\n use rustc_ast::ast;\n use rustc_attr as attr;\n use rustc_errors::Applicability;"}, {"sha": "52ec8cd938156289699d59b9c765cad246480356", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,10 +1,6 @@\n #![allow(non_snake_case)]\n \n use crate::{LateContext, LateLintPass, LintContext};\n-use rustc::mir::interpret::{sign_extend, truncate};\n-use rustc::ty::layout::{self, IntegerExt, LayoutOf, SizeSkeleton, VariantIdx};\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n use rustc_ast::ast;\n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashSet;\n@@ -13,6 +9,10 @@ use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{is_range_literal, ExprKind, Node};\n use rustc_index::vec::Idx;\n+use rustc_middle::mir::interpret::{sign_extend, truncate};\n+use rustc_middle::ty::layout::{self, IntegerExt, LayoutOf, SizeSkeleton, VariantIdx};\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n use rustc_span::source_map;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n@@ -919,7 +919,7 @@ impl<'a, 'tcx> ImproperCTypesVisitor<'a, 'tcx> {\n     }\n \n     fn check_for_opaque_ty(&mut self, sp: Span, ty: Ty<'tcx>) -> bool {\n-        use crate::rustc::ty::TypeFoldable;\n+        use rustc_middle::ty::TypeFoldable;\n \n         struct ProhibitOpaqueTypes<'tcx> {\n             ty: Option<Ty<'tcx>>,"}, {"sha": "a5f5d94fe9698b704068d1f210496b2306a4e66f", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n-use rustc::ty::adjustment;\n-use rustc::ty::{self, Ty};\n+use rustc_middle::ty::adjustment;\n+use rustc_middle::ty::{self, Ty};\n use rustc_ast::ast;\n use rustc_ast::attr;\n use rustc_ast::util::parser;"}, {"sha": "c955c137782764b6c283d46f3c23724842563617", "filename": "src/librustc_macros/src/hash_stable.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -115,13 +115,13 @@ pub fn hash_stable_derive(mut s: synstructure::Structure<'_>) -> proc_macro2::To\n     s.bound_impl(\n         quote!(\n             ::rustc_data_structures::stable_hasher::HashStable<\n-                ::rustc::ich::StableHashingContext<'__ctx>,\n+                ::rustc_middle::ich::StableHashingContext<'__ctx>,\n             >\n         ),\n         quote! {\n             fn hash_stable(\n                 &self,\n-                __hcx: &mut ::rustc::ich::StableHashingContext<'__ctx>,\n+                __hcx: &mut ::rustc_middle::ich::StableHashingContext<'__ctx>,\n                 __hasher: &mut ::rustc_data_structures::stable_hasher::StableHasher) {\n                 #discriminant\n                 match *self { #body }"}, {"sha": "4bf4ce00a4d3826a9cb29ca8cb2096f1bbc3c2ab", "filename": "src/librustc_macros/src/lift.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_macros%2Fsrc%2Flift.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_macros%2Fsrc%2Flift.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Flift.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -39,11 +39,11 @@ pub fn lift_derive(mut s: synstructure::Structure<'_>) -> proc_macro2::TokenStre\n \n     s.add_impl_generic(newtcx);\n     s.bound_impl(\n-        quote!(::rustc::ty::Lift<'__lifted>),\n+        quote!(::rustc_middle::ty::Lift<'__lifted>),\n         quote! {\n             type Lifted = #lifted;\n \n-            fn lift_to_tcx(&self, __tcx: ::rustc::ty::TyCtxt<'__lifted>) -> Option<#lifted> {\n+            fn lift_to_tcx(&self, __tcx: ::rustc_middle::ty::TyCtxt<'__lifted>) -> Option<#lifted> {\n                 Some(match *self { #body })\n             }\n         },"}, {"sha": "08dc854e9ff59092a195a52681c31ac8763c519c", "filename": "src/librustc_macros/src/query.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_macros%2Fsrc%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_macros%2Fsrc%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Fquery.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -429,7 +429,7 @@ pub fn rustc_queries(input: TokenStream) -> TokenStream {\n                 });\n \n                 try_load_from_on_disk_cache_stream.extend(quote! {\n-                    ::rustc::dep_graph::DepKind::#name => {\n+                    ::rustc_middle::dep_graph::DepKind::#name => {\n                         if <#arg as DepNodeParams<TyCtxt<'_>>>::CAN_RECONSTRUCT_QUERY_KEY {\n                             debug_assert!($tcx.dep_graph\n                                             .node_color($dep_node)\n@@ -486,7 +486,7 @@ pub fn rustc_queries(input: TokenStream) -> TokenStream {\n \n             // Add a match arm to force the query given the dep node\n             dep_node_force_stream.extend(quote! {\n-                ::rustc::dep_graph::DepKind::#name => {\n+                ::rustc_middle::dep_graph::DepKind::#name => {\n                     if <#arg as DepNodeParams<TyCtxt<'_>>>::CAN_RECONSTRUCT_QUERY_KEY {\n                         if let Some(key) = <#arg as DepNodeParams<TyCtxt<'_>>>::recover($tcx, $dep_node) {\n                             force_query::<crate::ty::query::queries::#name<'_>, _>(\n@@ -510,7 +510,7 @@ pub fn rustc_queries(input: TokenStream) -> TokenStream {\n     }\n \n     dep_node_force_stream.extend(quote! {\n-        ::rustc::dep_graph::DepKind::Null => {\n+        ::rustc_middle::dep_graph::DepKind::Null => {\n             bug!(\"Cannot force dep node: {:?}\", $dep_node)\n         }\n     });"}, {"sha": "6931e6552add28eab90b998e251deecefd08f77f", "filename": "src/librustc_macros/src/type_foldable.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_macros%2Fsrc%2Ftype_foldable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_macros%2Fsrc%2Ftype_foldable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Ftype_foldable.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -11,25 +11,25 @@ pub fn type_foldable_derive(mut s: synstructure::Structure<'_>) -> proc_macro2::\n         vi.construct(|_, index| {\n             let bind = &bindings[index];\n             quote! {\n-                ::rustc::ty::fold::TypeFoldable::fold_with(#bind, __folder)\n+                ::rustc_middle::ty::fold::TypeFoldable::fold_with(#bind, __folder)\n             }\n         })\n     });\n     let body_visit = s.fold(false, |acc, bind| {\n-        quote! { #acc || ::rustc::ty::fold::TypeFoldable::visit_with(#bind, __folder) }\n+        quote! { #acc || ::rustc_middle::ty::fold::TypeFoldable::visit_with(#bind, __folder) }\n     });\n \n     s.bound_impl(\n-        quote!(::rustc::ty::fold::TypeFoldable<'tcx>),\n+        quote!(::rustc_middle::ty::fold::TypeFoldable<'tcx>),\n         quote! {\n-            fn super_fold_with<__F: ::rustc::ty::fold::TypeFolder<'tcx>>(\n+            fn super_fold_with<__F: ::rustc_middle::ty::fold::TypeFolder<'tcx>>(\n                 &self,\n                 __folder: &mut __F\n             ) -> Self {\n                 match *self { #body_fold }\n             }\n \n-            fn super_visit_with<__F: ::rustc::ty::fold::TypeVisitor<'tcx>>(\n+            fn super_visit_with<__F: ::rustc_middle::ty::fold::TypeVisitor<'tcx>>(\n                 &self,\n                 __folder: &mut __F\n             ) -> bool {"}, {"sha": "f3ccb871a6c809dd420caa06a22ff325ec1dd84f", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,9 +3,9 @@\n use crate::locator::{CrateLocator, CratePaths};\n use crate::rmeta::{CrateDep, CrateMetadata, CrateNumMap, CrateRoot, MetadataBlob};\n \n-use rustc::middle::cstore::DepKind;\n-use rustc::middle::cstore::{CrateSource, ExternCrate, ExternCrateSource, MetadataLoaderDyn};\n-use rustc::ty::TyCtxt;\n+use rustc_middle::middle::cstore::DepKind;\n+use rustc_middle::middle::cstore::{CrateSource, ExternCrate, ExternCrateSource, MetadataLoaderDyn};\n+use rustc_middle::ty::TyCtxt;\n use rustc_ast::expand::allocator::{global_allocator_spans, AllocatorKind};\n use rustc_ast::{ast, attr};\n use rustc_data_structures::svh::Svh;"}, {"sha": "4150266f7125c939208d6c094b774f48cd69d0b0", "filename": "src/librustc_metadata/dependency_format.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdependency_format.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -53,10 +53,10 @@\n \n use crate::creader::CStore;\n \n-use rustc::middle::cstore::LinkagePreference::{self, RequireDynamic, RequireStatic};\n-use rustc::middle::cstore::{self, DepKind};\n-use rustc::middle::dependency_format::{Dependencies, DependencyList, Linkage};\n-use rustc::ty::TyCtxt;\n+use rustc_middle::middle::cstore::LinkagePreference::{self, RequireDynamic, RequireStatic};\n+use rustc_middle::middle::cstore::{self, DepKind};\n+use rustc_middle::middle::dependency_format::{Dependencies, DependencyList, Linkage};\n+use rustc_middle::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::CrateNum;\n use rustc_session::config;"}, {"sha": "9cf63cb7f018f1ed0c2d0a6fb4f8b1ae3e51e235", "filename": "src/librustc_metadata/foreign_modules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Fforeign_modules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Fforeign_modules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fforeign_modules.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::middle::cstore::ForeignModule;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::middle::cstore::ForeignModule;\n+use rustc_middle::ty::TyCtxt;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n "}, {"sha": "089d2d58936962894e99fe7f76b082d33ad93a2e", "filename": "src/librustc_metadata/link_args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Flink_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Flink_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flink_args.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,4 +1,4 @@\n-use rustc::ty::TyCtxt;\n+use rustc_middle::ty::TyCtxt;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_span::symbol::sym;"}, {"sha": "76a764475600458e7319e0a9b6cf45c78de2b48d", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -215,7 +215,7 @@\n use crate::creader::Library;\n use crate::rmeta::{rustc_version, MetadataBlob, METADATA_HEADER};\n \n-use rustc::middle::cstore::{CrateSource, MetadataLoader};\n+use rustc_middle::middle::cstore::{CrateSource, MetadataLoader};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::MetadataRef;"}, {"sha": "3749af70d7a24775dd5da27ae5a05bd4b7d17669", "filename": "src/librustc_metadata/native_libs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fnative_libs.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::middle::cstore::{self, NativeLibrary};\n-use rustc::ty::TyCtxt;\n+use rustc_middle::middle::cstore::{self, NativeLibrary};\n+use rustc_middle::ty::TyCtxt;\n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;"}, {"sha": "6cfcb05ff46f03b7d0487b6d6905ad0db5055a5a", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,17 +4,17 @@ use crate::creader::CrateMetadataRef;\n use crate::rmeta::table::{FixedSizeEncoding, Table};\n use crate::rmeta::*;\n \n-use rustc::dep_graph::{self, DepNode, DepNodeExt, DepNodeIndex};\n-use rustc::hir::exports::Export;\n-use rustc::middle::cstore::{CrateSource, ExternCrate};\n-use rustc::middle::cstore::{ForeignModule, LinkagePreference, NativeLibrary};\n-use rustc::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n-use rustc::middle::lang_items;\n-use rustc::mir::interpret::{AllocDecodingSession, AllocDecodingState};\n-use rustc::mir::{self, interpret, BodyAndCache, Promoted};\n-use rustc::ty::codec::TyDecoder;\n-use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::util::common::record_time;\n+use rustc_middle::dep_graph::{self, DepNode, DepNodeExt, DepNodeIndex};\n+use rustc_middle::hir::exports::Export;\n+use rustc_middle::middle::cstore::{CrateSource, ExternCrate};\n+use rustc_middle::middle::cstore::{ForeignModule, LinkagePreference, NativeLibrary};\n+use rustc_middle::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::mir::interpret::{AllocDecodingSession, AllocDecodingState};\n+use rustc_middle::mir::{self, interpret, BodyAndCache, Promoted};\n+use rustc_middle::ty::codec::TyDecoder;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n+use rustc_middle::util::common::record_time;\n use rustc_ast::ast::{self, Ident};\n use rustc_attr as attr;\n use rustc_data_structures::captures::Captures;"}, {"sha": "4df6d33d4406ea2cc706e0d831c4289f797aeece", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,13 +4,13 @@ use crate::link_args;\n use crate::native_libs;\n use crate::rmeta::{self, encoder};\n \n-use rustc::hir::exports::Export;\n-use rustc::middle::cstore::{CrateSource, CrateStore, EncodedMetadata, NativeLibraryKind};\n-use rustc::middle::exported_symbols::ExportedSymbol;\n-use rustc::middle::stability::DeprecationEntry;\n-use rustc::ty::query::Providers;\n-use rustc::ty::query::QueryConfig;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::hir::exports::Export;\n+use rustc_middle::middle::cstore::{CrateSource, CrateStore, EncodedMetadata, NativeLibraryKind};\n+use rustc_middle::middle::exported_symbols::ExportedSymbol;\n+use rustc_middle::middle::stability::DeprecationEntry;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::query::QueryConfig;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_ast::ast;\n use rustc_ast::attr;\n use rustc_ast::expand::allocator::AllocatorKind;"}, {"sha": "1df7b474c88d3c56bb74ef096331bde7ee754468", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,16 +2,16 @@ use crate::rmeta::table::FixedSizeEncoding;\n use crate::rmeta::*;\n \n use log::{debug, trace};\n-use rustc::hir::map::Map;\n-use rustc::middle::cstore::{EncodedMetadata, ForeignModule, LinkagePreference, NativeLibrary};\n-use rustc::middle::dependency_format::Linkage;\n-use rustc::middle::exported_symbols::{metadata_symbol_name, ExportedSymbol, SymbolExportLevel};\n-use rustc::middle::lang_items;\n-use rustc::mir::{self, interpret};\n-use rustc::traits::specialization_graph;\n-use rustc::ty::codec::{self as ty_codec, TyEncoder};\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::{self, SymbolName, Ty, TyCtxt};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::middle::cstore::{EncodedMetadata, ForeignModule, LinkagePreference, NativeLibrary};\n+use rustc_middle::middle::dependency_format::Linkage;\n+use rustc_middle::middle::exported_symbols::{metadata_symbol_name, ExportedSymbol, SymbolExportLevel};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::mir::{self, interpret};\n+use rustc_middle::traits::specialization_graph;\n+use rustc_middle::ty::codec::{self as ty_codec, TyEncoder};\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::{self, SymbolName, Ty, TyCtxt};\n use rustc_ast::ast::{self, Ident};\n use rustc_ast::attr;\n use rustc_data_structures::fingerprint::Fingerprint;"}, {"sha": "937fab431dfa93fe05711a18b49efab8705afc82", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,12 +1,12 @@\n use decoder::Metadata;\n use table::{Table, TableBuilder};\n \n-use rustc::hir::exports::Export;\n-use rustc::middle::cstore::{DepKind, ForeignModule, LinkagePreference, NativeLibrary};\n-use rustc::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n-use rustc::middle::lang_items;\n-use rustc::mir;\n-use rustc::ty::{self, ReprOptions, Ty};\n+use rustc_middle::hir::exports::Export;\n+use rustc_middle::middle::cstore::{DepKind, ForeignModule, LinkagePreference, NativeLibrary};\n+use rustc_middle::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::mir;\n+use rustc_middle::ty::{self, ReprOptions, Ty};\n use rustc_ast::ast::{self, MacroDef};\n use rustc_attr as attr;\n use rustc_data_structures::svh::Svh;"}, {"sha": "fcf6989043a54394a40aef2ecc6978ef97b09537", "filename": "src/librustc_middle/arena.rs", "status": "modified", "additions": 56, "deletions": 56, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Farena.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -11,92 +11,92 @@\n macro_rules! arena_types {\n     ($macro:path, $args:tt, $tcx:lifetime) => (\n         $macro!($args, [\n-            [] layouts: rustc::ty::layout::Layout,\n-            [] generics: rustc::ty::Generics,\n-            [] trait_def: rustc::ty::TraitDef,\n-            [] adt_def: rustc::ty::AdtDef,\n-            [] steal_mir: rustc::ty::steal::Steal<rustc::mir::BodyAndCache<$tcx>>,\n-            [] mir: rustc::mir::BodyAndCache<$tcx>,\n-            [] steal_promoted: rustc::ty::steal::Steal<\n+            [] layouts: rustc_middle::ty::layout::Layout,\n+            [] generics: rustc_middle::ty::Generics,\n+            [] trait_def: rustc_middle::ty::TraitDef,\n+            [] adt_def: rustc_middle::ty::AdtDef,\n+            [] steal_mir: rustc_middle::ty::steal::Steal<rustc_middle::mir::BodyAndCache<$tcx>>,\n+            [] mir: rustc_middle::mir::BodyAndCache<$tcx>,\n+            [] steal_promoted: rustc_middle::ty::steal::Steal<\n                 rustc_index::vec::IndexVec<\n-                    rustc::mir::Promoted,\n-                    rustc::mir::BodyAndCache<$tcx>\n+                    rustc_middle::mir::Promoted,\n+                    rustc_middle::mir::BodyAndCache<$tcx>\n                 >\n             >,\n             [] promoted: rustc_index::vec::IndexVec<\n-                rustc::mir::Promoted,\n-                rustc::mir::BodyAndCache<$tcx>\n+                rustc_middle::mir::Promoted,\n+                rustc_middle::mir::BodyAndCache<$tcx>\n             >,\n-            [decode] tables: rustc::ty::TypeckTables<$tcx>,\n-            [decode] borrowck_result: rustc::mir::BorrowCheckResult<$tcx>,\n-            [] const_allocs: rustc::mir::interpret::Allocation,\n+            [decode] tables: rustc_middle::ty::TypeckTables<$tcx>,\n+            [decode] borrowck_result: rustc_middle::mir::BorrowCheckResult<$tcx>,\n+            [] const_allocs: rustc_middle::mir::interpret::Allocation,\n             [] vtable_method: Option<(\n                 rustc_hir::def_id::DefId,\n-                rustc::ty::subst::SubstsRef<$tcx>\n+                rustc_middle::ty::subst::SubstsRef<$tcx>\n             )>,\n             [few, decode] mir_keys: rustc_hir::def_id::DefIdSet,\n-            [decode] specialization_graph: rustc::traits::specialization_graph::Graph,\n-            [] region_scope_tree: rustc::middle::region::ScopeTree,\n+            [decode] specialization_graph: rustc_middle::traits::specialization_graph::Graph,\n+            [] region_scope_tree: rustc_middle::middle::region::ScopeTree,\n             [] item_local_set: rustc_hir::ItemLocalSet,\n-            [decode] mir_const_qualif: rustc_index::bit_set::BitSet<rustc::mir::Local>,\n-            [] trait_impls_of: rustc::ty::trait_def::TraitImpls,\n-            [] associated_items: rustc::ty::AssociatedItems,\n+            [decode] mir_const_qualif: rustc_index::bit_set::BitSet<rustc_middle::mir::Local>,\n+            [] trait_impls_of: rustc_middle::ty::trait_def::TraitImpls,\n+            [] associated_items: rustc_middle::ty::AssociatedItems,\n             [] dropck_outlives:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx,\n-                        rustc::traits::query::DropckOutlivesResult<'tcx>\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx,\n+                        rustc_middle::traits::query::DropckOutlivesResult<'tcx>\n                     >\n                 >,\n             [] normalize_projection_ty:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx,\n-                        rustc::traits::query::NormalizationResult<'tcx>\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx,\n+                        rustc_middle::traits::query::NormalizationResult<'tcx>\n                     >\n                 >,\n             [] implied_outlives_bounds:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx,\n-                        Vec<rustc::traits::query::OutlivesBound<'tcx>>\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx,\n+                        Vec<rustc_middle::traits::query::OutlivesBound<'tcx>>\n                     >\n                 >,\n             [] type_op_subtype:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx, ()>\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx, ()>\n                 >,\n             [] type_op_normalize_poly_fn_sig:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx, rustc::ty::PolyFnSig<'tcx>>\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx, rustc_middle::ty::PolyFnSig<'tcx>>\n                 >,\n             [] type_op_normalize_fn_sig:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx, rustc::ty::FnSig<'tcx>>\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx, rustc_middle::ty::FnSig<'tcx>>\n                 >,\n             [] type_op_normalize_predicate:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx, rustc::ty::Predicate<'tcx>>\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx, rustc_middle::ty::Predicate<'tcx>>\n                 >,\n             [] type_op_normalize_ty:\n-                rustc::infer::canonical::Canonical<'tcx,\n-                    rustc::infer::canonical::QueryResponse<'tcx, rustc::ty::Ty<'tcx>>\n+                rustc_middle::infer::canonical::Canonical<'tcx,\n+                    rustc_middle::infer::canonical::QueryResponse<'tcx, rustc_middle::ty::Ty<'tcx>>\n                 >,\n-            [few] crate_inherent_impls: rustc::ty::CrateInherentImpls,\n+            [few] crate_inherent_impls: rustc_middle::ty::CrateInherentImpls,\n             [few] upstream_monomorphizations:\n                 rustc_hir::def_id::DefIdMap<\n                     rustc_data_structures::fx::FxHashMap<\n-                        rustc::ty::subst::SubstsRef<'tcx>,\n+                        rustc_middle::ty::subst::SubstsRef<'tcx>,\n                         rustc_hir::def_id::CrateNum\n                     >\n                 >,\n             [few] diagnostic_items: rustc_data_structures::fx::FxHashMap<\n                 rustc_span::symbol::Symbol,\n                 rustc_hir::def_id::DefId,\n             >,\n-            [few] resolve_lifetimes: rustc::middle::resolve_lifetime::ResolveLifetimes,\n-            [few] lint_levels: rustc::lint::LintLevelMap,\n-            [few] stability_index: rustc::middle::stability::Index<'tcx>,\n+            [few] resolve_lifetimes: rustc_middle::middle::resolve_lifetime::ResolveLifetimes,\n+            [few] lint_levels: rustc_middle::lint::LintLevelMap,\n+            [few] stability_index: rustc_middle::middle::stability::Index<'tcx>,\n             [few] features: rustc_feature::Features,\n             [few] all_traits: Vec<rustc_hir::def_id::DefId>,\n-            [few] privacy_access_levels: rustc::middle::privacy::AccessLevels,\n+            [few] privacy_access_levels: rustc_middle::middle::privacy::AccessLevels,\n             [few] target_features_whitelist: rustc_data_structures::fx::FxHashMap<\n                 String,\n                 Option<rustc_span::symbol::Symbol>\n@@ -105,26 +105,26 @@ macro_rules! arena_types {\n                 rustc_hir::def_id::DefId,\n                 String\n             >,\n-            [few] get_lib_features: rustc::middle::lib_features::LibFeatures,\n-            [few] defined_lib_features: rustc::middle::lang_items::LanguageItems,\n+            [few] get_lib_features: rustc_middle::middle::lib_features::LibFeatures,\n+            [few] defined_lib_features: rustc_middle::middle::lang_items::LanguageItems,\n             [few] visible_parent_map: rustc_hir::def_id::DefIdMap<rustc_hir::def_id::DefId>,\n-            [few] foreign_module: rustc::middle::cstore::ForeignModule,\n-            [few] foreign_modules: Vec<rustc::middle::cstore::ForeignModule>,\n+            [few] foreign_module: rustc_middle::middle::cstore::ForeignModule,\n+            [few] foreign_modules: Vec<rustc_middle::middle::cstore::ForeignModule>,\n             [few] reachable_non_generics: rustc_hir::def_id::DefIdMap<\n-                rustc::middle::exported_symbols::SymbolExportLevel\n+                rustc_middle::middle::exported_symbols::SymbolExportLevel\n             >,\n-            [few] crate_variances: rustc::ty::CrateVariancesMap<'tcx>,\n-            [few] inferred_outlives_crate: rustc::ty::CratePredicatesMap<'tcx>,\n+            [few] crate_variances: rustc_middle::ty::CrateVariancesMap<'tcx>,\n+            [few] inferred_outlives_crate: rustc_middle::ty::CratePredicatesMap<'tcx>,\n             [] upvars: rustc_data_structures::fx::FxIndexMap<rustc_hir::HirId, rustc_hir::Upvar>,\n \n             // Interned types\n-            [] tys: rustc::ty::TyS<$tcx>,\n+            [] tys: rustc_middle::ty::TyS<$tcx>,\n \n             // HIR query types\n-            [few] indexed_hir: rustc::hir::map::IndexedHir<$tcx>,\n+            [few] indexed_hir: rustc_middle::hir::map::IndexedHir<$tcx>,\n             [few] hir_definitions: rustc_hir::definitions::Definitions,\n-            [] hir_owner: rustc::hir::Owner<$tcx>,\n-            [] hir_owner_nodes: rustc::hir::OwnerNodes<$tcx>,\n+            [] hir_owner: rustc_middle::hir::Owner<$tcx>,\n+            [] hir_owner_nodes: rustc_middle::hir::OwnerNodes<$tcx>,\n         ], $tcx);\n     )\n }"}, {"sha": "226277e440a78d47b30082cb7b8e9af2b0e89e8b", "filename": "src/librustc_middle/ich/impls_ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fich%2Fimpls_ty.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n //! This module contains `HashStable` implementations for various data types\n-//! from rustc::ty in no particular order.\n+//! from `rustc_middle::ty` in no particular order.\n \n use crate::ich::{NodeIdHashingMode, StableHashingContext};\n use crate::middle::region;"}, {"sha": "c39aad7d5fb82bec479f33b3236dde81cb38b7bd", "filename": "src/librustc_middle/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Flib.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -93,6 +93,4 @@ pub mod util {\n }\n \n // Allows macros to refer to this crate as `::rustc`\n-// FIXME(Centril): maybe change this at some point if `rustc_middle`\n-// is something we're going with long-term.\n-extern crate self as rustc;\n+extern crate self as rustc_middle;"}, {"sha": "c43c22cd61ba64eb107af9e0ebbc58ef308af0e6", "filename": "src/librustc_middle/middle/limits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Fmiddle%2Flimits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Fmiddle%2Flimits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Flimits.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,7 +5,7 @@\n //! this via an attribute on the crate like `#![recursion_limit=\"22\"]`. This pass\n //! just peeks and looks for that attribute.\n \n-use rustc::bug;\n+use crate::bug;\n use rustc_ast::ast;\n use rustc_data_structures::sync::Once;\n use rustc_session::Session;"}, {"sha": "dd9ab102129e6284c27cba9c744052cc99b7563f", "filename": "src/librustc_middle/middle/region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Fregion.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -293,7 +293,7 @@ pub struct ScopeTree {\n     ///\n     /// Then:\n     ///     1. From the ordering guarantee of HIR visitors (see\n-    ///     `rustc::hir::intravisit`), `D` does not dominate `U`.\n+    ///     `rustc_hir::intravisit`), `D` does not dominate `U`.\n     ///     2. Therefore, `D` is *potentially* storage-dead at `U` (because\n     ///     we might visit `U` without ever getting to `D`).\n     ///     3. However, we guarantee that at each HIR point, each"}, {"sha": "be889f66228d5ef75429a19f2d29df80b9439af7", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -6,6 +6,7 @@ use crate::dep_graph::{self, DepConstructor};\n use crate::hir::exports::Export;\n use crate::ich::{NodeIdHashingMode, StableHashingContext};\n use crate::infer::canonical::{Canonical, CanonicalVarInfo, CanonicalVarInfos};\n+use crate::lint::LintDiagnosticBuilder;\n use crate::lint::{struct_lint_level, LintSource};\n use crate::middle;\n use crate::middle::cstore::CrateStoreDyn;\n@@ -38,7 +39,6 @@ use crate::ty::{ExistentialPredicate, InferTy, ParamTy, PolyFnSig, Predicate, Pr\n use crate::ty::{InferConst, ParamConst};\n use crate::ty::{List, TyKind, TyS};\n use crate::util::common::ErrorReported;\n-use rustc::lint::LintDiagnosticBuilder;\n use rustc_ast::ast;\n use rustc_ast::expand::allocator::AllocatorKind;\n use rustc_ast::node_id::NodeMap;"}, {"sha": "757a8bd23f62ba7c1e406198e1cb330a338a9bda", "filename": "src/librustc_middle/ty/print/obsolete.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Fty%2Fprint%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Fty%2Fprint%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fprint%2Fobsolete.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,9 +5,9 @@\n //! Note: A lot of this could looks very similar to what's already in `ty::print`.\n //! FIXME(eddyb) implement a custom `PrettyPrinter` for this.\n \n-use rustc::bug;\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{self, Const, Instance, Ty, TyCtxt};\n+use crate::bug;\n+use crate::ty::subst::SubstsRef;\n+use crate::ty::{self, Const, Instance, Ty, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use std::fmt::Write;"}, {"sha": "0993b738b44e8c582c62b03de3f891da11998164", "filename": "src/librustc_middle/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -561,7 +561,7 @@ pub trait PrettyPrinter<'tcx>:\n                 // We use verbose printing in 'NO_QUERIES' mode, to\n                 // avoid needing to call `predicates_of`. This should\n                 // only affect certain debug messages (e.g. messages printed\n-                // from `rustc::ty` during the computation of `tcx.predicates_of`),\n+                // from `rustc_middle::ty` during the computation of `tcx.predicates_of`),\n                 // and should have no effect on any compiler output.\n                 if self.tcx().sess.verbose() || NO_QUERIES.with(|q| q.get()) {\n                     p!(write(\"Opaque({:?}, {:?})\", def_id, substs));"}, {"sha": "57df50dc1a05dd5f3aa78c37526aafba6502e9a0", "filename": "src/librustc_middle/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_middle%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fsty.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1238,7 +1238,7 @@ pub type Region<'tcx> = &'tcx RegionKind;\n ///\n /// The scope regions are related to one another based on the AST\n /// structure. (See `RegionRelations` type, and particularly the\n-/// `rustc::middle::region::ScopeTree`.)\n+/// `rustc_middle::middle::region::ScopeTree`.)\n ///\n /// Note that inference variables and bound regions are not included\n /// in this diagram. In the case of inference variables, they should"}, {"sha": "1d1bc8e1583537da616c5dabb4f24c1da48a34ac", "filename": "src/librustc_mir/borrow_check/borrow_set.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,10 +3,10 @@ use crate::borrow_check::path_utils::allow_two_phase_borrow;\n use crate::borrow_check::place_ext::PlaceExt;\n use crate::dataflow::indexes::BorrowIndex;\n use crate::dataflow::move_paths::MoveData;\n-use rustc::mir::traversal;\n-use rustc::mir::visit::{MutatingUseContext, NonUseContext, PlaceContext, Visitor};\n-use rustc::mir::{self, Body, Local, Location, ReadOnlyBodyAndCache};\n-use rustc::ty::{RegionVid, TyCtxt};\n+use rustc_middle::mir::traversal;\n+use rustc_middle::mir::visit::{MutatingUseContext, NonUseContext, PlaceContext, Visitor};\n+use rustc_middle::mir::{self, Body, Local, Location, ReadOnlyBodyAndCache};\n+use rustc_middle::ty::{RegionVid, TyCtxt};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::IndexVec;"}, {"sha": "cb2e21dbabbc480b1215f8f9fafee783eb29e00e", "filename": "src/librustc_mir/borrow_check/constraint_generation.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,12 +1,12 @@\n-use rustc::mir::visit::TyContext;\n-use rustc::mir::visit::Visitor;\n-use rustc::mir::{\n+use rustc_middle::mir::visit::TyContext;\n+use rustc_middle::mir::visit::Visitor;\n+use rustc_middle::mir::{\n     BasicBlock, BasicBlockData, Body, Local, Location, Place, PlaceRef, ProjectionElem, Rvalue,\n     SourceInfo, Statement, StatementKind, Terminator, TerminatorKind, UserTypeProjection,\n };\n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{self, RegionVid, Ty};\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::{self, RegionVid, Ty};\n use rustc_infer::infer::InferCtxt;\n \n use crate::borrow_check::{"}, {"sha": "66e0afb8347422fb005e25a14e21867471f19807", "filename": "src/librustc_mir/borrow_check/constraints/graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fgraph.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::ConstraintCategory;\n-use rustc::ty::RegionVid;\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::ty::RegionVid;\n use rustc_data_structures::graph;\n use rustc_index::vec::IndexVec;\n use rustc_span::DUMMY_SP;"}, {"sha": "7e4859ada76608097fa2b3e25022bd143359d44c", "filename": "src/librustc_mir/borrow_check/constraints/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::ConstraintCategory;\n-use rustc::ty::RegionVid;\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::ty::RegionVid;\n use rustc_data_structures::graph::scc::Sccs;\n use rustc_index::vec::IndexVec;\n use std::fmt;"}, {"sha": "428c3b44f630e0bbf2336d0a5e3b9fec985a4110", "filename": "src/librustc_mir/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,15 +1,15 @@\n-use rustc::mir::{\n-    self, AggregateKind, BindingForm, BorrowKind, ClearCrossCrate, ConstraintCategory,\n-    FakeReadCause, Local, LocalDecl, LocalInfo, LocalKind, Location, Operand, Place, PlaceRef,\n-    ProjectionElem, Rvalue, Statement, StatementKind, TerminatorKind, VarBindingForm,\n-};\n-use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{AsyncGeneratorKind, GeneratorKind};\n use rustc_index::vec::Idx;\n+use rustc_middle::mir::{\n+    self, AggregateKind, BindingForm, BorrowKind, ClearCrossCrate, ConstraintCategory,\n+    FakeReadCause, Local, LocalDecl, LocalInfo, LocalKind, Location, Operand, Place, PlaceRef,\n+    ProjectionElem, Rvalue, Statement, StatementKind, TerminatorKind, VarBindingForm,\n+};\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::source_map::DesugaringKind;\n use rustc_span::Span;\n use rustc_trait_selection::traits::error_reporting::suggest_constraining_type_param;\n@@ -1541,7 +1541,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n \n     /// Describe the reason for the fake borrow that was assigned to `place`.\n     fn classify_immutable_section(&self, place: &Place<'tcx>) -> Option<&'static str> {\n-        use rustc::mir::visit::Visitor;\n+        use rustc_middle::mir::visit::Visitor;\n         struct FakeReadCauseFinder<'a, 'tcx> {\n             place: &'a Place<'tcx>,\n             cause: Option<FakeReadCause>,\n@@ -1821,7 +1821,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                 for (index, argument) in sig.inputs().skip_binder().iter().enumerate() {\n                     if let ty::Ref(argument_region, _, _) = argument.kind {\n                         if argument_region == return_region {\n-                            // Need to use the `rustc::ty` types to compare against the\n+                            // Need to use the `rustc_middle::ty` types to compare against the\n                             // `return_region`. Then use the `rustc_hir` type to get only\n                             // the lifetime span.\n                             if let hir::TyKind::Rptr(lifetime, _) = &fn_decl.inputs[index].kind {"}, {"sha": "b87953ad9f292ebadc7ff203d50fd1e84c9fdbdb", "filename": "src/librustc_mir/borrow_check/diagnostics/explain_borrow.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,12 +2,12 @@\n \n use std::collections::VecDeque;\n \n-use rustc::mir::{\n+use rustc_middle::mir::{\n     Body, CastKind, ConstraintCategory, FakeReadCause, Local, Location, Operand, Place, Rvalue,\n     Statement, StatementKind, TerminatorKind,\n };\n-use rustc::ty::adjustment::PointerCast;\n-use rustc::ty::{self, RegionVid, TyCtxt};\n+use rustc_middle::ty::adjustment::PointerCast;\n+use rustc_middle::ty::{self, RegionVid, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_index::vec::IndexVec;"}, {"sha": "c0e304ee29a2631d0b86841b088831037bea750d", "filename": "src/librustc_mir/borrow_check/diagnostics/find_use.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Ffind_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Ffind_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Ffind_use.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -6,9 +6,9 @@ use crate::borrow_check::{\n     region_infer::{Cause, RegionInferenceContext},\n };\n use crate::util::liveness::{self, DefUse};\n-use rustc::mir::visit::{MirVisitable, PlaceContext, Visitor};\n-use rustc::mir::{Body, Local, Location};\n-use rustc::ty::{RegionVid, TyCtxt};\n+use rustc_middle::mir::visit::{MirVisitable, PlaceContext, Visitor};\n+use rustc_middle::mir::{Body, Local, Location};\n+use rustc_middle::ty::{RegionVid, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n \n crate fn find<'tcx>("}, {"sha": "157c7c5aef9838c63168f0c188467e935037105b", "filename": "src/librustc_mir/borrow_check/diagnostics/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,12 +1,12 @@\n //! Borrow checker diagnostics.\n \n-use rustc::mir::{\n+use rustc_middle::mir::{\n     AggregateKind, Constant, Field, Local, LocalInfo, LocalKind, Location, Operand, Place,\n     PlaceRef, ProjectionElem, Rvalue, Statement, StatementKind, Terminator, TerminatorKind,\n };\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::print::Print;\n-use rustc::ty::{self, DefIdTree, Ty, TyCtxt};\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::print::Print;\n+use rustc_middle::ty::{self, DefIdTree, Ty, TyCtxt};\n use rustc_errors::DiagnosticBuilder;\n use rustc_hir as hir;\n use rustc_hir::def::Namespace;"}, {"sha": "b84a264c8ddadf5961f7f3f5c409e4ed88d48086", "filename": "src/librustc_mir/borrow_check/diagnostics/move_errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmove_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmove_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmove_errors.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::*;\n-use rustc::ty;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_span::source_map::DesugaringKind;\n use rustc_span::{Span, Symbol};"}, {"sha": "6cb3f38fac1a3ebf74ddf645d41b9413735c1211", "filename": "src/librustc_mir/borrow_check/diagnostics/mutability_errors.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n-use rustc::mir::{self, ClearCrossCrate, Local, LocalInfo, Location};\n-use rustc::mir::{Mutability, Place, PlaceRef, ProjectionElem};\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::mir::{self, ClearCrossCrate, Local, LocalInfo, Location};\n+use rustc_middle::mir::{Mutability, Place, PlaceRef, ProjectionElem};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::Node;\n use rustc_index::vec::Idx;"}, {"sha": "52d60e7c0671d57179b987185935cd3bf7671353", "filename": "src/librustc_mir/borrow_check/diagnostics/outlives_suggestion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Foutlives_suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Foutlives_suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Foutlives_suggestion.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,7 +4,7 @@\n use std::collections::BTreeMap;\n \n use log::debug;\n-use rustc::ty::RegionVid;\n+use rustc_middle::ty::RegionVid;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::DiagnosticBuilder;\n "}, {"sha": "2c8fe3bbf997db2de2782a9831b8c0f28a8833e2", "filename": "src/librustc_mir/borrow_check/diagnostics/region_errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n //! Error reporting machinery for lifetime errors.\n \n-use rustc::mir::ConstraintCategory;\n-use rustc::ty::{self, RegionVid, Ty};\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::ty::{self, RegionVid, Ty};\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_infer::infer::{\n     error_reporting::nice_region_error::NiceRegionError,"}, {"sha": "0dd9a00bc008d445aa9432a496da496f286847a9", "filename": "src/librustc_mir/borrow_check/diagnostics/region_name.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n use std::fmt::{self, Display};\n \n-use rustc::ty::print::RegionHighlightMode;\n-use rustc::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc::ty::{self, RegionVid, Ty};\n+use rustc_middle::ty::print::RegionHighlightMode;\n+use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n+use rustc_middle::ty::{self, RegionVid, Ty};\n use rustc_errors::DiagnosticBuilder;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};"}, {"sha": "395c3b5cac53bab0d29185dec90a3bb48e86a0d1", "filename": "src/librustc_mir/borrow_check/diagnostics/var_name.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use crate::borrow_check::Upvar;\n use crate::borrow_check::{nll::ToRegionVid, region_infer::RegionInferenceContext};\n-use rustc::mir::{Body, Local};\n-use rustc::ty::{RegionVid, TyCtxt};\n+use rustc_middle::mir::{Body, Local};\n+use rustc_middle::ty::{RegionVid, TyCtxt};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;"}, {"sha": "b7649aa9138e109393f7aa33235fcc1b00366ccf", "filename": "src/librustc_mir/borrow_check/facts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ffacts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ffacts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ffacts.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,8 +2,8 @@ use crate::borrow_check::location::{LocationIndex, LocationTable};\n use crate::dataflow::indexes::{BorrowIndex, MovePathIndex};\n use polonius_engine::AllFacts as PoloniusFacts;\n use polonius_engine::Atom;\n-use rustc::mir::Local;\n-use rustc::ty::{RegionVid, TyCtxt};\n+use rustc_middle::mir::Local;\n+use rustc_middle::ty::{RegionVid, TyCtxt};\n use rustc_index::vec::Idx;\n use std::error::Error;\n use std::fmt::Debug;"}, {"sha": "eb194b0b3a32ed7fa3c0be69bc889393867e8dfc", "filename": "src/librustc_mir/borrow_check/invalidation.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,9 +1,9 @@\n-use rustc::mir::visit::Visitor;\n-use rustc::mir::TerminatorKind;\n-use rustc::mir::{BasicBlock, Body, Location, Place, ReadOnlyBodyAndCache, Rvalue};\n-use rustc::mir::{BorrowKind, Mutability, Operand};\n-use rustc::mir::{Statement, StatementKind};\n-use rustc::ty::TyCtxt;\n+use rustc_middle::mir::visit::Visitor;\n+use rustc_middle::mir::TerminatorKind;\n+use rustc_middle::mir::{BasicBlock, Body, Location, Place, ReadOnlyBodyAndCache, Rvalue};\n+use rustc_middle::mir::{BorrowKind, Mutability, Operand};\n+use rustc_middle::mir::{Statement, StatementKind};\n+use rustc_middle::ty::TyCtxt;\n use rustc_data_structures::graph::dominators::Dominators;\n \n use crate::dataflow::indexes::BorrowIndex;\n@@ -153,7 +153,7 @@ impl<'cx, 'tcx> Visitor<'tcx> for InvalidationGenerator<'cx, 'tcx> {\n             }\n             TerminatorKind::Assert { ref cond, expected: _, ref msg, target: _, cleanup: _ } => {\n                 self.consume_operand(location, cond);\n-                use rustc::mir::AssertKind;\n+                use rustc_middle::mir::AssertKind;\n                 if let AssertKind::BoundsCheck { ref len, ref index } = *msg {\n                     self.consume_operand(location, len);\n                     self.consume_operand(location, index);"}, {"sha": "5ec6439403abc6daefeee2f387a211889c5ca811", "filename": "src/librustc_mir/borrow_check/location.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,4 +1,4 @@\n-use rustc::mir::{BasicBlock, Body, Location};\n+use rustc_middle::mir::{BasicBlock, Body, Location};\n use rustc_index::vec::{Idx, IndexVec};\n \n /// Maps between a MIR Location, which identifies a particular"}, {"sha": "d4baa5d809a22eb774e51049eae8f398e2fc761f", "filename": "src/librustc_mir/borrow_check/member_constraints.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fmember_constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fmember_constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmember_constraints.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n-use crate::rustc::ty::{self, Ty};\n-use rustc::infer::MemberConstraint;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::DefId;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::infer::MemberConstraint;\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::Span;\n use std::hash::Hash;\n use std::ops::Index;\n@@ -71,7 +71,7 @@ impl<'tcx> MemberConstraintSet<'tcx, ty::RegionVid> {\n     /// Pushes a member constraint into the set.\n     ///\n     /// The input member constraint `m_c` is in the form produced by\n-    /// the the `rustc::infer` code.\n+    /// the the `rustc_middle::infer` code.\n     ///\n     /// The `to_region_vid` callback fn is used to convert the regions\n     /// within into `RegionVid` format -- it typically consults the"}, {"sha": "80f34ec8cfd7a987403ee767214e9bf487b259ff", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,14 +1,14 @@\n //! This query borrow-checks the MIR to (further) ensure it is not broken.\n \n-use rustc::mir::{\n+use rustc_middle::mir::{\n     read_only, traversal, Body, BodyAndCache, ClearCrossCrate, Local, Location, Mutability,\n     Operand, Place, PlaceElem, PlaceRef, ReadOnlyBodyAndCache,\n };\n-use rustc::mir::{AggregateKind, BasicBlock, BorrowCheckResult, BorrowKind};\n-use rustc::mir::{Field, ProjectionElem, Promoted, Rvalue, Statement, StatementKind};\n-use rustc::mir::{Terminator, TerminatorKind};\n-use rustc::ty::query::Providers;\n-use rustc::ty::{self, RegionVid, TyCtxt};\n+use rustc_middle::mir::{AggregateKind, BasicBlock, BorrowCheckResult, BorrowKind};\n+use rustc_middle::mir::{Field, ProjectionElem, Promoted, Rvalue, Statement, StatementKind};\n+use rustc_middle::mir::{Terminator, TerminatorKind};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, RegionVid, TyCtxt};\n use rustc_ast::ast::Name;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::graph::dominators::Dominators;\n@@ -670,7 +670,7 @@ impl<'cx, 'tcx> dataflow::ResultsVisitor<'cx, 'tcx> for MirBorrowckCtxt<'cx, 'tc\n             }\n             TerminatorKind::Assert { ref cond, expected: _, ref msg, target: _, cleanup: _ } => {\n                 self.consume_operand(loc, (cond, span), flow_state);\n-                use rustc::mir::AssertKind;\n+                use rustc_middle::mir::AssertKind;\n                 if let AssertKind::BoundsCheck { ref len, ref index } = *msg {\n                     self.consume_operand(loc, (len, span), flow_state);\n                     self.consume_operand(loc, (index, span), flow_state);"}, {"sha": "88ce2e3e7803aed209e2c3728c5b56e4fc1f0680", "filename": "src/librustc_mir/borrow_check/nll.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,10 +1,10 @@\n //! The entry point of the NLL borrow checker.\n \n-use rustc::mir::{\n+use rustc_middle::mir::{\n     BasicBlock, Body, BodyAndCache, ClosureOutlivesSubject, ClosureRegionRequirements, LocalKind,\n     Location, Promoted, ReadOnlyBodyAndCache,\n };\n-use rustc::ty::{self, RegionKind, RegionVid};\n+use rustc_middle::ty::{self, RegionKind, RegionVid};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::Diagnostic;\n use rustc_hir::def_id::DefId;"}, {"sha": "1378c5d1322e9f0fdd062acb14fa682275cac4c9", "filename": "src/librustc_mir/borrow_check/path_utils.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,9 +2,9 @@ use crate::borrow_check::borrow_set::{BorrowData, BorrowSet, TwoPhaseActivation}\n use crate::borrow_check::places_conflict;\n use crate::borrow_check::AccessDepth;\n use crate::dataflow::indexes::BorrowIndex;\n-use rustc::mir::BorrowKind;\n-use rustc::mir::{BasicBlock, Body, Location, Place};\n-use rustc::ty::TyCtxt;\n+use rustc_middle::mir::BorrowKind;\n+use rustc_middle::mir::{BasicBlock, Body, Location, Place};\n+use rustc_middle::ty::TyCtxt;\n use rustc_data_structures::graph::dominators::Dominators;\n \n /// Returns `true` if the borrow represented by `kind` is"}, {"sha": "fc3a0e276ab99c1901aad6aa36b5e56238b02365", "filename": "src/librustc_mir/borrow_check/place_ext.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fplace_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fplace_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fplace_ext.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use crate::borrow_check::borrow_set::LocalsStateAtExit;\n-use rustc::mir::ProjectionElem;\n-use rustc::mir::{Body, Mutability, Place};\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir::ProjectionElem;\n+use rustc_middle::mir::{Body, Mutability, Place};\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_hir as hir;\n \n /// Extension methods for the `Place` type."}, {"sha": "36f7888111f9123882260852a58da9ebb70369d9", "filename": "src/librustc_mir/borrow_check/places_conflict.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n use crate::borrow_check::ArtificialField;\n use crate::borrow_check::Overlap;\n use crate::borrow_check::{AccessDepth, Deep, Shallow};\n-use rustc::mir::{Body, BorrowKind, Local, Place, PlaceElem, PlaceRef, ProjectionElem};\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir::{Body, BorrowKind, Local, Place, PlaceElem, PlaceRef, ProjectionElem};\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_hir as hir;\n use std::cmp::max;\n "}, {"sha": "78421a96c03cdfcfb4e8c10f53e4948db012bbbe", "filename": "src/librustc_mir/borrow_check/prefixes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fprefixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fprefixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fprefixes.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -9,8 +9,8 @@\n \n use super::MirBorrowckCtxt;\n \n-use rustc::mir::{Place, PlaceRef, ProjectionElem, ReadOnlyBodyAndCache};\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir::{Place, PlaceRef, ProjectionElem, ReadOnlyBodyAndCache};\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_hir as hir;\n \n pub trait IsPrefixOf<'tcx> {"}, {"sha": "125110216aada2add8378c0dcabdfc48916ecbef", "filename": "src/librustc_mir/borrow_check/region_infer/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,11 +1,6 @@\n use std::collections::VecDeque;\n use std::rc::Rc;\n \n-use rustc::mir::{\n-    Body, ClosureOutlivesRequirement, ClosureOutlivesSubject, ClosureRegionRequirements,\n-    ConstraintCategory, Local, Location,\n-};\n-use rustc::ty::{self, subst::SubstsRef, RegionVid, Ty, TyCtxt, TypeFoldable};\n use rustc_data_structures::binary_search_util;\n use rustc_data_structures::frozen::Frozen;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -16,6 +11,11 @@ use rustc_index::vec::IndexVec;\n use rustc_infer::infer::canonical::QueryOutlivesConstraint;\n use rustc_infer::infer::region_constraints::{GenericKind, VarInfos, VerifyBound};\n use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin, RegionVariableOrigin};\n+use rustc_middle::mir::{\n+    Body, ClosureOutlivesRequirement, ClosureOutlivesSubject, ClosureRegionRequirements,\n+    ConstraintCategory, Local, Location,\n+};\n+use rustc_middle::ty::{self, subst::SubstsRef, RegionVid, Ty, TyCtxt, TypeFoldable};\n use rustc_span::Span;\n \n use crate::borrow_check::{\n@@ -202,7 +202,7 @@ pub(crate) enum Cause {\n ///\n /// For more information about this translation, see\n /// `InferCtxt::process_registered_region_obligations` and\n-/// `InferCtxt::type_must_outlive` in `rustc::infer::outlives`.\n+/// `InferCtxt::type_must_outlive` in `rustc_middle::infer::outlives`.\n #[derive(Clone, Debug)]\n pub struct TypeTest<'tcx> {\n     /// The type `T` that must outlive the region."}, {"sha": "0282223ebc39f1f070fad8236909919da39ed7a6", "filename": "src/librustc_mir/borrow_check/region_infer/opaque_types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,4 +1,4 @@\n-use rustc::ty::{self, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::InferCtxt;"}, {"sha": "98624ee74b0e04380ad54243eb2483117cb85655", "filename": "src/librustc_mir/borrow_check/region_infer/reverse_sccs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Freverse_sccs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Freverse_sccs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Freverse_sccs.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use crate::borrow_check::constraints::ConstraintSccIndex;\n use crate::borrow_check::RegionInferenceContext;\n use itertools::Itertools;\n-use rustc::ty::RegionVid;\n+use rustc_middle::ty::RegionVid;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::graph::vec_graph::VecGraph;\n use rustc_data_structures::graph::WithSuccessors;"}, {"sha": "d9189775386c23323a6522d1f3a36a5448974122", "filename": "src/librustc_mir/borrow_check/region_infer/values.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fvalues.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::{BasicBlock, Body, Location, ReadOnlyBodyAndCache};\n-use rustc::ty::{self, RegionVid};\n+use rustc_middle::mir::{BasicBlock, Body, Location, ReadOnlyBodyAndCache};\n+use rustc_middle::ty::{self, RegionVid};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_index::bit_set::{HybridBitSet, SparseBitMatrix};\n use rustc_index::vec::Idx;"}, {"sha": "ed36f9e99c03bb05c16a10cf7e69faff2d92255c", "filename": "src/librustc_mir/borrow_check/renumber.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Frenumber.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Frenumber.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Frenumber.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n-use rustc::mir::visit::{MutVisitor, TyContext};\n-use rustc::mir::{BodyAndCache, Location, PlaceElem, Promoted};\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::mir::visit::{MutVisitor, TyContext};\n+use rustc_middle::mir::{BodyAndCache, Location, PlaceElem, Promoted};\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_index::vec::IndexVec;\n use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin};\n "}, {"sha": "3f93fabe8d33e453603c8129a2676449eb056d8b", "filename": "src/librustc_mir/borrow_check/type_check/constraint_conversion.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fconstraint_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fconstraint_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fconstraint_conversion.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n-use rustc::mir::ConstraintCategory;\n-use rustc::ty::subst::GenericArgKind;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::ty::subst::GenericArgKind;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_infer::infer::canonical::QueryOutlivesConstraint;\n use rustc_infer::infer::canonical::QueryRegionConstraints;\n use rustc_infer::infer::outlives::env::RegionBoundPairs;"}, {"sha": "d3b39ba270cb7769bc9ff6c6049704e8e2459dc5", "filename": "src/librustc_mir/borrow_check/type_check/free_region_relations.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n-use rustc::mir::ConstraintCategory;\n-use rustc::traits::query::OutlivesBound;\n-use rustc::ty::free_region_map::FreeRegionRelations;\n-use rustc::ty::{self, RegionVid, Ty, TyCtxt};\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::traits::query::OutlivesBound;\n+use rustc_middle::ty::free_region_map::FreeRegionRelations;\n+use rustc_middle::ty::{self, RegionVid, Ty, TyCtxt};\n use rustc_data_structures::frozen::Frozen;\n use rustc_data_structures::transitive_relation::TransitiveRelation;\n use rustc_infer::infer::canonical::QueryRegionConstraints;"}, {"sha": "568b05eea920bb41d8dfd02c7c4fd1baa392aeaa", "filename": "src/librustc_mir/borrow_check/type_check/input_output.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Finput_output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Finput_output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Finput_output.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -7,8 +7,8 @@\n //! `RETURN_PLACE` the MIR arguments) are always fully normalized (and\n //! contain revealed `impl Trait` values).\n \n-use rustc::mir::*;\n-use rustc::ty::Ty;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::Ty;\n use rustc_infer::infer::LateBoundRegionConversionTime;\n \n use rustc_index::vec::Idx;"}, {"sha": "23a5229be6916505e6537ca7050d326e8acc0cb6", "filename": "src/librustc_mir/borrow_check/type_check/liveness/local_use_map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Flocal_use_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Flocal_use_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Flocal_use_map.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::visit::{PlaceContext, Visitor};\n-use rustc::mir::{Local, Location, ReadOnlyBodyAndCache};\n+use rustc_middle::mir::visit::{PlaceContext, Visitor};\n+use rustc_middle::mir::{Local, Location, ReadOnlyBodyAndCache};\n use rustc_data_structures::vec_linked_list as vll;\n use rustc_index::vec::IndexVec;\n "}, {"sha": "e979e61c488e6e43c6a8e0f860c31d3b6bf44ce5", "filename": "src/librustc_mir/borrow_check/type_check/liveness/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::{Body, Local, ReadOnlyBodyAndCache};\n-use rustc::ty::{RegionVid, TyCtxt};\n+use rustc_middle::mir::{Body, Local, ReadOnlyBodyAndCache};\n+use rustc_middle::ty::{RegionVid, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n use std::rc::Rc;\n "}, {"sha": "d937d248aa80ab8559328e24aeb8c6f7ad7ed0d8", "filename": "src/librustc_mir/borrow_check/type_check/liveness/polonius.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fpolonius.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fpolonius.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fpolonius.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,9 +2,9 @@ use crate::borrow_check::location::{LocationIndex, LocationTable};\n use crate::dataflow::indexes::MovePathIndex;\n use crate::dataflow::move_paths::{LookupResult, MoveData};\n use crate::util::liveness::{categorize, DefUse};\n-use rustc::mir::visit::{MutatingUseContext, PlaceContext, Visitor};\n-use rustc::mir::{Local, Location, Place, ReadOnlyBodyAndCache};\n-use rustc::ty::subst::GenericArg;\n+use rustc_middle::mir::visit::{MutatingUseContext, PlaceContext, Visitor};\n+use rustc_middle::mir::{Local, Location, Place, ReadOnlyBodyAndCache};\n+use rustc_middle::ty::subst::GenericArg;\n \n use super::TypeChecker;\n "}, {"sha": "39f750687c7f6746a5c79d66dde11795061e230c", "filename": "src/librustc_mir/borrow_check/type_check/liveness/trace.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::{BasicBlock, ConstraintCategory, Local, Location, ReadOnlyBodyAndCache};\n-use rustc::ty::{Ty, TypeFoldable};\n+use rustc_middle::mir::{BasicBlock, ConstraintCategory, Local, Location, ReadOnlyBodyAndCache};\n+use rustc_middle::ty::{Ty, TypeFoldable};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::bit_set::HybridBitSet;\n use rustc_infer::infer::canonical::QueryRegionConstraints;"}, {"sha": "1d66bd13c6fe6250c38049efdb0ab55239a7b924", "filename": "src/librustc_mir/borrow_check/type_check/mod.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,19 +5,6 @@ use std::{fmt, iter, mem};\n \n use either::Either;\n \n-use rustc::mir::tcx::PlaceTy;\n-use rustc::mir::visit::{NonMutatingUseContext, PlaceContext, Visitor};\n-use rustc::mir::AssertKind;\n-use rustc::mir::*;\n-use rustc::ty::adjustment::PointerCast;\n-use rustc::ty::cast::CastTy;\n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::subst::{GenericArgKind, Subst, SubstsRef, UserSubsts};\n-use rustc::ty::{\n-    self, CanonicalUserTypeAnnotation, CanonicalUserTypeAnnotations, RegionVid, ToPolyTraitRef, Ty,\n-    TyCtxt, UserType, UserTypeAnnotationIndex,\n-};\n use rustc_data_structures::frozen::Frozen;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::struct_span_err;\n@@ -30,6 +17,19 @@ use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKi\n use rustc_infer::infer::{\n     InferCtxt, InferOk, LateBoundRegionConversionTime, NLLRegionVariableOrigin,\n };\n+use rustc_middle::mir::tcx::PlaceTy;\n+use rustc_middle::mir::visit::{NonMutatingUseContext, PlaceContext, Visitor};\n+use rustc_middle::mir::AssertKind;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::adjustment::PointerCast;\n+use rustc_middle::ty::cast::CastTy;\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::subst::{GenericArgKind, Subst, SubstsRef, UserSubsts};\n+use rustc_middle::ty::{\n+    self, CanonicalUserTypeAnnotation, CanonicalUserTypeAnnotations, RegionVid, ToPolyTraitRef, Ty,\n+    TyCtxt, UserType, UserTypeAnnotationIndex,\n+};\n use rustc_span::{Span, DUMMY_SP};\n use rustc_trait_selection::infer::InferCtxtExt as _;\n use rustc_trait_selection::opaque_types::{GenerateMemberConstraints, InferCtxtExt};\n@@ -1053,7 +1053,7 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n     /// regions which are extracted and stored as having occurred at\n     /// `locations`.\n     ///\n-    /// **Any `rustc::infer` operations that might generate region\n+    /// **Any `rustc_middle::infer` operations that might generate region\n     /// constraints should occur within this method so that those\n     /// constraints can be properly localized!**\n     fn fully_perform_op<R>("}, {"sha": "ad15f246be055afa6d3cc68f009048ebd6f180a8", "filename": "src/librustc_mir/borrow_check/type_check/relate_tys.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Frelate_tys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Frelate_tys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Frelate_tys.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n-use rustc::mir::ConstraintCategory;\n-use rustc::ty::relate::TypeRelation;\n-use rustc::ty::{self, Ty};\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::ty::relate::TypeRelation;\n+use rustc_middle::ty::{self, Ty};\n use rustc_infer::infer::nll_relate::{NormalizationStrategy, TypeRelating, TypeRelatingDelegate};\n use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin};\n use rustc_trait_selection::traits::query::Fallible;"}, {"sha": "80d3f12bd01130aabf2e28d105e9e39c5594bc52", "filename": "src/librustc_mir/borrow_check/universal_regions.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -13,10 +13,10 @@\n //! just returns them for other code to use.\n \n use either::Either;\n-use rustc::middle::lang_items;\n-use rustc::ty::fold::TypeFoldable;\n-use rustc::ty::subst::{InternalSubsts, Subst, SubstsRef};\n-use rustc::ty::{self, RegionVid, Ty, TyCtxt};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n+use rustc_middle::ty::{self, RegionVid, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::DiagnosticBuilder;\n use rustc_hir as hir;"}, {"sha": "1197d3d50e464b236b09d54c42a190b016178027", "filename": "src/librustc_mir/borrow_check/used_muts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fused_muts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fborrow_check%2Fused_muts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fused_muts.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::visit::{PlaceContext, Visitor};\n-use rustc::mir::{Local, Location, Place, Statement, StatementKind, TerminatorKind};\n+use rustc_middle::mir::visit::{PlaceContext, Visitor};\n+use rustc_middle::mir::{Local, Location, Place, Statement, StatementKind, TerminatorKind};\n \n use rustc_data_structures::fx::FxHashSet;\n "}, {"sha": "f72278456bd18d183e47011497f29ad354f8fa20", "filename": "src/librustc_mir/const_eval/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fconst_eval%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fconst_eval%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Ferror.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use std::error::Error;\n use std::fmt;\n \n-use rustc::mir::AssertKind;\n+use rustc_middle::mir::AssertKind;\n use rustc_span::Symbol;\n \n use super::InterpCx;"}, {"sha": "c30d41e6a92229147de663b59b298fae8b84b421", "filename": "src/librustc_mir/const_eval/eval_queries.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,11 +5,11 @@ use crate::interpret::{\n     InterpCx, InterpResult, MPlaceTy, MemoryKind, OpTy, RawConst, RefTracking, Scalar,\n     ScalarMaybeUndef, StackPopCleanup,\n };\n-use rustc::mir;\n-use rustc::mir::interpret::{ConstEvalErr, ErrorHandled};\n-use rustc::traits::Reveal;\n-use rustc::ty::{self, layout, layout::LayoutOf, subst::Subst, TyCtxt};\n use rustc_hir::def::DefKind;\n+use rustc_middle::mir;\n+use rustc_middle::mir::interpret::{ConstEvalErr, ErrorHandled};\n+use rustc_middle::traits::Reveal;\n+use rustc_middle::ty::{self, layout, layout::LayoutOf, subst::Subst, TyCtxt};\n use rustc_span::source_map::Span;\n use std::convert::TryInto;\n \n@@ -173,7 +173,7 @@ fn validate_and_turn_into_const<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     constant: RawConst<'tcx>,\n     key: ty::ParamEnvAnd<'tcx, GlobalId<'tcx>>,\n-) -> ::rustc::mir::interpret::ConstEvalResult<'tcx> {\n+) -> ::rustc_middle::mir::interpret::ConstEvalResult<'tcx> {\n     let cid = key.value;\n     let def_id = cid.instance.def.def_id();\n     let is_static = tcx.is_static(def_id);\n@@ -223,7 +223,7 @@ fn validate_and_turn_into_const<'tcx>(\n pub fn const_eval_validated_provider<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     key: ty::ParamEnvAnd<'tcx, GlobalId<'tcx>>,\n-) -> ::rustc::mir::interpret::ConstEvalResult<'tcx> {\n+) -> ::rustc_middle::mir::interpret::ConstEvalResult<'tcx> {\n     // see comment in const_eval_raw_provider for what we're doing here\n     if key.param_env.reveal == Reveal::All {\n         let mut key = key;\n@@ -257,7 +257,7 @@ pub fn const_eval_validated_provider<'tcx>(\n pub fn const_eval_raw_provider<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     key: ty::ParamEnvAnd<'tcx, GlobalId<'tcx>>,\n-) -> ::rustc::mir::interpret::ConstEvalRawResult<'tcx> {\n+) -> ::rustc_middle::mir::interpret::ConstEvalRawResult<'tcx> {\n     // Because the constant is computed twice (once per value of `Reveal`), we are at risk of\n     // reporting the same error twice here. To resolve this, we check whether we can evaluate the\n     // constant in the more restrictive `Reveal::UserFacing`, which most likely already was"}, {"sha": "b03a067ecba25907ce0a326c32b90f1eb8743cf9", "filename": "src/librustc_mir/const_eval/fn_queries.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n-use rustc::hir::map::blocks::FnLikeNode;\n-use rustc::ty::query::Providers;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::hir::map::blocks::FnLikeNode;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_attr as attr;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};"}, {"sha": "b377392f17197407e20cc9486928f4c90f940f06", "filename": "src/librustc_mir/const_eval/machine.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,13 +1,13 @@\n-use rustc::mir;\n-use rustc::ty::layout::HasTyCtxt;\n-use rustc::ty::{self, Ty};\n+use rustc_middle::mir;\n+use rustc_middle::ty::layout::HasTyCtxt;\n+use rustc_middle::ty::{self, Ty};\n use std::borrow::{Borrow, Cow};\n use std::collections::hash_map::Entry;\n use std::hash::Hash;\n \n use rustc_data_structures::fx::FxHashMap;\n \n-use rustc::mir::AssertMessage;\n+use rustc_middle::mir::AssertMessage;\n use rustc_ast::ast::Mutability;\n use rustc_span::symbol::Symbol;\n use rustc_span::{def_id::DefId, Span};\n@@ -267,7 +267,7 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter {\n         msg: &AssertMessage<'tcx>,\n         _unwind: Option<mir::BasicBlock>,\n     ) -> InterpResult<'tcx> {\n-        use rustc::mir::AssertKind::*;\n+        use rustc_middle::mir::AssertKind::*;\n         // Convert `AssertKind<Operand>` to `AssertKind<u64>`.\n         let err = match msg {\n             BoundsCheck { ref len, ref index } => {"}, {"sha": "78d1e8989a2f5ff326c6c91989407412b69fceff", "filename": "src/librustc_mir/const_eval/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fconst_eval%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fconst_eval%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,9 +2,9 @@\n \n use std::convert::TryFrom;\n \n-use rustc::mir;\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir;\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::{source_map::DUMMY_SP, symbol::Symbol};\n \n use crate::interpret::{intern_const_alloc_recursive, ConstValue, InternKind, InterpCx};"}, {"sha": "f9511921a878638d46bd85282ec537446495168b", "filename": "src/librustc_mir/dataflow/drop_flag_effects.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fdrop_flag_effects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fdrop_flag_effects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fdrop_flag_effects.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n use crate::util::elaborate_drops::DropFlagState;\n-use rustc::mir::{self, Body, Location};\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir::{self, Body, Location};\n+use rustc_middle::ty::{self, TyCtxt};\n \n use super::indexes::MovePathIndex;\n use super::move_paths::{InitKind, LookupResult, MoveData};"}, {"sha": "b280bcd47377457ed8babd2d308dfc484249bd68", "filename": "src/librustc_mir/dataflow/framework/cursor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fcursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fcursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fcursor.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,7 +2,7 @@\n \n use std::borrow::Borrow;\n \n-use rustc::mir::{self, BasicBlock, Location, TerminatorKind};\n+use rustc_middle::mir::{self, BasicBlock, Location, TerminatorKind};\n use rustc_index::bit_set::BitSet;\n \n use super::{Analysis, Results};"}, {"sha": "a0af8f4082c5813479b5099e76f1a6a5f060b494", "filename": "src/librustc_mir/dataflow/framework/engine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,8 +4,8 @@ use std::ffi::OsString;\n use std::fs;\n use std::path::PathBuf;\n \n-use rustc::mir::{self, traversal, BasicBlock, Location};\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir::{self, traversal, BasicBlock, Location};\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_ast::ast;\n use rustc_data_structures::work_queue::WorkQueue;\n use rustc_hir::def_id::DefId;"}, {"sha": "2c8ef949d6425132e710aa6e62bd3d1f965fabb5", "filename": "src/librustc_mir/dataflow/framework/graphviz.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fgraphviz.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,7 +3,7 @@\n use std::cell::RefCell;\n use std::{io, ops, str};\n \n-use rustc::mir::{self, BasicBlock, Body, Location};\n+use rustc_middle::mir::{self, BasicBlock, Body, Location};\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::{BitSet, HybridBitSet};\n use rustc_index::vec::{Idx, IndexVec};"}, {"sha": "ee8d592511162e196a9acbb3a3bf33c2125fedad", "filename": "src/librustc_mir/dataflow/framework/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -32,9 +32,9 @@\n \n use std::io;\n \n-use rustc::mir::{self, BasicBlock, Location};\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir::{self, BasicBlock, Location};\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::{BitSet, HybridBitSet};\n use rustc_index::vec::{Idx, IndexVec};"}, {"sha": "783ed224a43d798784137559d3ecaca0207d8da4", "filename": "src/librustc_mir/dataflow/framework/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Ftests.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n //! A test for the logic that updates the state in a `ResultsCursor` during seek.\n \n-use rustc::mir::{self, BasicBlock, Location};\n-use rustc::ty;\n+use rustc_middle::mir::{self, BasicBlock, Location};\n+use rustc_middle::ty;\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::IndexVec;\n use rustc_span::DUMMY_SP;"}, {"sha": "8876df2a9f432f64276d4b84522473b57d63fb0b", "filename": "src/librustc_mir/dataflow/framework/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fvisitor.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,4 +1,4 @@\n-use rustc::mir::{self, BasicBlock, Location};\n+use rustc_middle::mir::{self, BasicBlock, Location};\n use rustc_index::bit_set::BitSet;\n \n use super::{Analysis, Results};"}, {"sha": "30654fd1c8953b18b7ae95a2c2659f374ea7d2fd", "filename": "src/librustc_mir/dataflow/graphviz.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fgraphviz.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n //! Hook into libgraphviz for rendering dataflow graphs for MIR.\n \n-use rustc::mir::{BasicBlock, Body};\n+use rustc_middle::mir::{BasicBlock, Body};\n use rustc_hir::def_id::DefId;\n \n use std::fs;"}, {"sha": "a62e45082cb8a38c0071baef98722121605b5b78", "filename": "src/librustc_mir/dataflow/impls/borrowed_locals.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrowed_locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrowed_locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrowed_locals.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,9 +1,9 @@\n pub use super::*;\n \n use crate::dataflow::{AnalysisDomain, GenKill, GenKillAnalysis};\n-use rustc::mir::visit::Visitor;\n-use rustc::mir::*;\n-use rustc::ty::{ParamEnv, TyCtxt};\n+use rustc_middle::mir::visit::Visitor;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{ParamEnv, TyCtxt};\n use rustc_span::DUMMY_SP;\n \n pub type MaybeMutBorrowedLocals<'mir, 'tcx> = MaybeBorrowedLocals<MutBorrow<'mir, 'tcx>>;"}, {"sha": "6f35d9ac836362e515aea4a5b7566a91a7dfed2b", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n-use rustc::mir::{self, Body, Location, Place};\n-use rustc::ty::RegionVid;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::mir::{self, Body, Location, Place};\n+use rustc_middle::ty::RegionVid;\n+use rustc_middle::ty::TyCtxt;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_index::bit_set::BitSet;"}, {"sha": "2349f17a3f83032a84c0c8ce4117de5716d24551", "filename": "src/librustc_mir/dataflow/impls/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,9 +2,9 @@\n //! bitvectors attached to each basic block, represented via a\n //! zero-sized structure.\n \n-use rustc::mir::{self, Body, Location};\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir::{self, Body, Location};\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::Idx;\n "}, {"sha": "48dd4e9794c03cfc956cff59a4fc9a4c41365e3c", "filename": "src/librustc_mir/dataflow/impls/storage_liveness.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fstorage_liveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fstorage_liveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fstorage_liveness.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,8 +2,8 @@ pub use super::*;\n \n use crate::dataflow::BottomValue;\n use crate::dataflow::{self, GenKill, Results, ResultsRefCursor};\n-use rustc::mir::visit::{NonMutatingUseContext, PlaceContext, Visitor};\n-use rustc::mir::*;\n+use rustc_middle::mir::visit::{NonMutatingUseContext, PlaceContext, Visitor};\n+use rustc_middle::mir::*;\n use std::cell::RefCell;\n \n #[derive(Copy, Clone)]"}, {"sha": "25cf3a39f8f8247c53b31c844499dddc66e677da", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,4 +1,4 @@\n-use rustc::ty;\n+use rustc_middle::ty;\n use rustc_ast::ast::{self, MetaItem};\n use rustc_span::symbol::{sym, Symbol};\n "}, {"sha": "28936274baafa639614b7aa547c37859c8a0b8aa", "filename": "src/librustc_mir/dataflow/move_paths/abs_domain.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fabs_domain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fabs_domain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fabs_domain.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -11,8 +11,8 @@\n //! `a[x]` would still overlap them both. But that is not this\n //! representation does today.)\n \n-use rustc::mir::{Local, Operand, PlaceElem, ProjectionElem};\n-use rustc::ty::Ty;\n+use rustc_middle::mir::{Local, Operand, PlaceElem, ProjectionElem};\n+use rustc_middle::ty::Ty;\n \n #[derive(Copy, Clone, PartialEq, Eq, Hash, Debug)]\n pub struct AbstractOperand;"}, {"sha": "b860edd52ae4ef214558b80baf6d44597b87acb1", "filename": "src/librustc_mir/dataflow/move_paths/builder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n-use rustc::mir::tcx::RvalueInitializationState;\n-use rustc::mir::*;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir::tcx::RvalueInitializationState;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_index::vec::IndexVec;\n use smallvec::{smallvec, SmallVec};\n "}, {"sha": "58af6d426a9c54c16abb0c667bcda74ffd555f1f", "filename": "src/librustc_mir/dataflow/move_paths/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n use core::slice::Iter;\n-use rustc::mir::*;\n-use rustc::ty::{ParamEnv, Ty, TyCtxt};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{ParamEnv, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_index::vec::{Enumerated, IndexVec};\n use rustc_span::Span;"}, {"sha": "45561c48048d89d411c8ca8e277b71b6419a01b5", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,17 +1,16 @@\n use std::convert::TryFrom;\n \n-use rustc::ty::adjustment::PointerCast;\n-use rustc::ty::layout::{self, Size, TyAndLayout};\n-use rustc::ty::{self, Ty, TypeAndMut, TypeFoldable};\n+use rustc_apfloat::ieee::{Double, Single};\n+use rustc_apfloat::{Float, FloatConvert};\n use rustc_ast::ast::FloatTy;\n+use rustc_middle::mir::interpret::{InterpResult, PointerArithmetic, Scalar};\n+use rustc_middle::mir::CastKind;\n+use rustc_middle::ty::adjustment::PointerCast;\n+use rustc_middle::ty::layout::{self, Size, TyAndLayout};\n+use rustc_middle::ty::{self, Ty, TypeAndMut, TypeFoldable};\n use rustc_span::symbol::sym;\n use rustc_target::abi::LayoutOf;\n \n-use rustc::mir::interpret::{InterpResult, PointerArithmetic, Scalar};\n-use rustc::mir::CastKind;\n-use rustc_apfloat::ieee::{Double, Single};\n-use rustc_apfloat::{Float, FloatConvert};\n-\n use super::{FnVal, ImmTy, Immediate, InterpCx, Machine, OpTy, PlaceTy};\n \n impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n@@ -21,7 +20,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         kind: CastKind,\n         dest: PlaceTy<'tcx, M::PointerTag>,\n     ) -> InterpResult<'tcx> {\n-        use rustc::mir::CastKind::*;\n+        use rustc_middle::mir::CastKind::*;\n         match kind {\n             Pointer(PointerCast::Unsize) => {\n                 self.unsize_into(src, dest)?;\n@@ -104,7 +103,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         src: ImmTy<'tcx, M::PointerTag>,\n         dest_layout: TyAndLayout<'tcx>,\n     ) -> InterpResult<'tcx, Immediate<M::PointerTag>> {\n-        use rustc::ty::TyKind::*;\n+        use rustc_middle::ty::TyKind::*;\n         trace!(\"Casting {:?}: {:?} to {:?}\", *src, src.layout.ty, dest_layout.ty);\n \n         match src.layout.ty.kind {\n@@ -190,7 +189,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         let signed = src_layout.abi.is_signed();\n         let v = if signed { self.sign_extend(v, src_layout) } else { v };\n         trace!(\"cast_from_int: {}, {}, {}\", v, src_layout.ty, dest_layout.ty);\n-        use rustc::ty::TyKind::*;\n+        use rustc_middle::ty::TyKind::*;\n         match dest_layout.ty.kind {\n             Int(_) | Uint(_) | RawPtr(_) => {\n                 let v = self.truncate(v, dest_layout);\n@@ -224,7 +223,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     where\n         F: Float + Into<Scalar<M::PointerTag>> + FloatConvert<Single> + FloatConvert<Double>,\n     {\n-        use rustc::ty::TyKind::*;\n+        use rustc_middle::ty::TyKind::*;\n         match dest_ty.kind {\n             // float -> uint\n             Uint(t) => {"}, {"sha": "d204be7f806742d6ce158cb902636c0ec0462611", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,21 +2,21 @@ use std::cell::Cell;\n use std::fmt::Write;\n use std::mem;\n \n-use rustc::ich::StableHashingContext;\n-use rustc::mir;\n-use rustc::mir::interpret::{\n-    sign_extend, truncate, AllocId, FrameInfo, GlobalId, InterpResult, Pointer, Scalar,\n-};\n-use rustc::ty::layout::{self, Align, HasDataLayout, LayoutOf, Size, TyAndLayout};\n-use rustc::ty::query::TyCtxtAt;\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::DefId;\n use rustc_index::vec::IndexVec;\n use rustc_macros::HashStable;\n+use rustc_middle::ich::StableHashingContext;\n+use rustc_middle::mir;\n+use rustc_middle::mir::interpret::{\n+    sign_extend, truncate, AllocId, FrameInfo, GlobalId, InterpResult, Pointer, Scalar,\n+};\n+use rustc_middle::ty::layout::{self, Align, HasDataLayout, LayoutOf, Size, TyAndLayout};\n+use rustc_middle::ty::query::TyCtxtAt;\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_span::source_map::{self, Span, DUMMY_SP};\n \n use super::{\n@@ -544,7 +544,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     trace!(\"push_stack_frame: {:?}: num_bbs: {}\", span, body.basic_blocks().len());\n                     for block in body.basic_blocks() {\n                         for stmt in block.statements.iter() {\n-                            use rustc::mir::StatementKind::{StorageDead, StorageLive};\n+                            use rustc_middle::mir::StatementKind::{StorageDead, StorageLive};\n                             match stmt.kind {\n                                 StorageLive(local) | StorageDead(local) => {\n                                     locals[local].value = LocalValue::Dead;"}, {"sha": "96e058b5a5074cb34c33886884f4fe19569f2f16", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,8 +4,8 @@\n //! memory, we need to extract all memory allocations to the global memory pool so they stay around.\n \n use super::validity::RefTracking;\n-use rustc::mir::interpret::{ErrorHandled, InterpResult};\n-use rustc::ty::{self, Ty};\n+use rustc_middle::mir::interpret::{ErrorHandled, InterpResult};\n+use rustc_middle::ty::{self, Ty};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n "}, {"sha": "c974c204de3dc19f639fb81cc8ca52c8e08cbbc7", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,15 +4,15 @@\n \n use std::convert::TryFrom;\n \n-use rustc::mir::{\n+use rustc_middle::mir::{\n     self,\n     interpret::{ConstValue, GlobalId, InterpResult, Scalar},\n     BinOp,\n };\n-use rustc::ty;\n-use rustc::ty::layout::{LayoutOf, Primitive, Size};\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::ty;\n+use rustc_middle::ty::layout::{LayoutOf, Primitive, Size};\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::TyCtxt;\n use rustc_hir::def_id::DefId;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;"}, {"sha": "37b01d6db3b41bf86161f373354dde96f2929038", "filename": "src/librustc_mir/interpret/intrinsics/caller_location.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Fcaller_location.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Fcaller_location.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Fcaller_location.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use std::convert::TryFrom;\n \n-use rustc::middle::lang_items::PanicLocationLangItem;\n-use rustc::ty::subst::Subst;\n+use rustc_middle::middle::lang_items::PanicLocationLangItem;\n+use rustc_middle::ty::subst::Subst;\n use rustc_span::{Span, Symbol};\n use rustc_target::abi::LayoutOf;\n "}, {"sha": "bfb850f62d0fdb0fb21f447cebb72c42fbb1def8", "filename": "src/librustc_mir/interpret/intrinsics/type_name.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Ftype_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Ftype_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Ftype_name.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::interpret::Allocation;\n-use rustc::ty::{\n+use rustc_middle::mir::interpret::Allocation;\n+use rustc_middle::ty::{\n     self,\n     print::{PrettyPrinter, Print, Printer},\n     subst::{GenericArg, GenericArgKind},"}, {"sha": "faee041f62afb3549b0a03fd5382835632e8e9d2", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,8 +5,8 @@\n use std::borrow::{Borrow, Cow};\n use std::hash::Hash;\n \n-use rustc::mir;\n-use rustc::ty::{self, Ty};\n+use rustc_middle::mir;\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::{def_id::DefId, Span};\n \n use super::{"}, {"sha": "3312252e70d92d6a987f2159e0126078c11efcb5", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -11,8 +11,8 @@ use std::collections::VecDeque;\n use std::convert::TryFrom;\n use std::ptr;\n \n-use rustc::ty::layout::{Align, HasDataLayout, Size, TargetDataLayout};\n-use rustc::ty::{self, query::TyCtxtAt, Instance, ParamEnv};\n+use rustc_middle::ty::layout::{Align, HasDataLayout, Size, TargetDataLayout};\n+use rustc_middle::ty::{self, query::TyCtxtAt, Instance, ParamEnv};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n \n use rustc_ast::ast::Mutability;"}, {"sha": "4e30da829079cf38dd09517658eda66dcc5961f1", "filename": "src/librustc_mir/interpret/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -15,7 +15,7 @@ mod traits;\n mod validity;\n mod visitor;\n \n-pub use rustc::mir::interpret::*; // have all the `interpret` symbols in one place: here\n+pub use rustc_middle::mir::interpret::*; // have all the `interpret` symbols in one place: here\n \n pub use self::eval_context::{Frame, InterpCx, LocalState, LocalValue, StackPopCleanup};\n "}, {"sha": "24639fece46be4d7fc8926181966b5ed6b9c633f", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,18 +4,18 @@\n use std::convert::TryFrom;\n \n use super::{InterpCx, MPlaceTy, Machine, MemPlace, Place, PlaceTy};\n-pub use rustc::mir::interpret::ScalarMaybeUndef;\n-use rustc::mir::interpret::{\n+use rustc_hir::def::Namespace;\n+use rustc_macros::HashStable;\n+pub use rustc_middle::mir::interpret::ScalarMaybeUndef;\n+use rustc_middle::mir::interpret::{\n     sign_extend, truncate, AllocId, ConstValue, GlobalId, InterpResult, Pointer, Scalar,\n };\n-use rustc::ty::layout::{\n+use rustc_middle::ty::layout::{\n     self, HasDataLayout, IntegerExt, LayoutOf, PrimitiveExt, Size, TyAndLayout, VariantIdx,\n };\n-use rustc::ty::print::{FmtPrinter, PrettyPrinter, Printer};\n-use rustc::ty::Ty;\n-use rustc::{mir, ty};\n-use rustc_hir::def::Namespace;\n-use rustc_macros::HashStable;\n+use rustc_middle::ty::print::{FmtPrinter, PrettyPrinter, Printer};\n+use rustc_middle::ty::Ty;\n+use rustc_middle::{mir, ty};\n use std::fmt::Write;\n \n /// An `Immediate` represents a single immediate self-contained Rust value.\n@@ -415,7 +415,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         base: OpTy<'tcx, M::PointerTag>,\n         proj_elem: &mir::PlaceElem<'tcx>,\n     ) -> InterpResult<'tcx, OpTy<'tcx, M::PointerTag>> {\n-        use rustc::mir::ProjectionElem::*;\n+        use rustc_middle::mir::ProjectionElem::*;\n         Ok(match *proj_elem {\n             Field(field, _) => self.operand_field(base, field.index())?,\n             Downcast(_, variant) => self.operand_downcast(base, variant)?,\n@@ -495,7 +495,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         mir_op: &mir::Operand<'tcx>,\n         layout: Option<TyAndLayout<'tcx>>,\n     ) -> InterpResult<'tcx, OpTy<'tcx, M::PointerTag>> {\n-        use rustc::mir::Operand::*;\n+        use rustc_middle::mir::Operand::*;\n         let op = match *mir_op {\n             // FIXME: do some more logic on `move` to invalidate the old location\n             Copy(ref place) | Move(ref place) => self.eval_place_to_op(place, layout)?,"}, {"sha": "f0004a19de97a21f4b841cc36071c69e26e57f52", "filename": "src/librustc_mir/interpret/operator.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperator.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n use std::convert::TryFrom;\n \n-use rustc::mir;\n-use rustc::mir::interpret::{InterpResult, Scalar};\n-use rustc::ty::{\n+use rustc_middle::mir;\n+use rustc_middle::mir::interpret::{InterpResult, Scalar};\n+use rustc_middle::ty::{\n     self,\n     layout::{LayoutOf, TyAndLayout},\n     Ty,\n@@ -55,7 +55,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         l: char,\n         r: char,\n     ) -> (Scalar<M::PointerTag>, bool, Ty<'tcx>) {\n-        use rustc::mir::BinOp::*;\n+        use rustc_middle::mir::BinOp::*;\n \n         let res = match bin_op {\n             Eq => l == r,\n@@ -75,7 +75,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         l: bool,\n         r: bool,\n     ) -> (Scalar<M::PointerTag>, bool, Ty<'tcx>) {\n-        use rustc::mir::BinOp::*;\n+        use rustc_middle::mir::BinOp::*;\n \n         let res = match bin_op {\n             Eq => l == r,\n@@ -99,7 +99,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         l: F,\n         r: F,\n     ) -> (Scalar<M::PointerTag>, bool, Ty<'tcx>) {\n-        use rustc::mir::BinOp::*;\n+        use rustc_middle::mir::BinOp::*;\n \n         let (val, ty) = match bin_op {\n             Eq => (Scalar::from_bool(l == r), self.tcx.types.bool),\n@@ -127,7 +127,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         r: u128,\n         right_layout: TyAndLayout<'tcx>,\n     ) -> InterpResult<'tcx, (Scalar<M::PointerTag>, bool, Ty<'tcx>)> {\n-        use rustc::mir::BinOp::*;\n+        use rustc_middle::mir::BinOp::*;\n \n         // Shift ops can have an RHS with a different numeric type.\n         if bin_op == Shl || bin_op == Shr {\n@@ -362,7 +362,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         un_op: mir::UnOp,\n         val: ImmTy<'tcx, M::PointerTag>,\n     ) -> InterpResult<'tcx, (Scalar<M::PointerTag>, bool, Ty<'tcx>)> {\n-        use rustc::mir::UnOp::*;\n+        use rustc_middle::mir::UnOp::*;\n \n         let layout = val.layout;\n         let val = val.to_scalar()?;"}, {"sha": "f7c1a3cadb8816fa765bd43206e2dda10e7e7e79", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,13 +5,13 @@\n use std::convert::TryFrom;\n use std::hash::Hash;\n \n-use rustc::mir;\n-use rustc::mir::interpret::truncate;\n-use rustc::ty::layout::{\n+use rustc_macros::HashStable;\n+use rustc_middle::mir;\n+use rustc_middle::mir::interpret::truncate;\n+use rustc_middle::ty::layout::{\n     self, Align, HasDataLayout, LayoutOf, PrimitiveExt, Size, TyAndLayout, VariantIdx,\n };\n-use rustc::ty::{self, Ty};\n-use rustc_macros::HashStable;\n+use rustc_middle::ty::{self, Ty};\n \n use super::{\n     AllocId, AllocMap, Allocation, AllocationExtra, ImmTy, Immediate, InterpCx, InterpResult,\n@@ -529,7 +529,7 @@ where\n         base: MPlaceTy<'tcx, M::PointerTag>,\n         proj_elem: &mir::PlaceElem<'tcx>,\n     ) -> InterpResult<'tcx, MPlaceTy<'tcx, M::PointerTag>> {\n-        use rustc::mir::ProjectionElem::*;\n+        use rustc_middle::mir::ProjectionElem::*;\n         Ok(match *proj_elem {\n             Field(field, _) => self.mplace_field(base, field.index())?,\n             Downcast(_, variant) => self.mplace_downcast(base, variant)?,\n@@ -617,7 +617,7 @@ where\n         base: PlaceTy<'tcx, M::PointerTag>,\n         proj_elem: &mir::ProjectionElem<mir::Local, Ty<'tcx>>,\n     ) -> InterpResult<'tcx, PlaceTy<'tcx, M::PointerTag>> {\n-        use rustc::mir::ProjectionElem::*;\n+        use rustc_middle::mir::ProjectionElem::*;\n         Ok(match *proj_elem {\n             Field(field, _) => self.place_field(base, field.index())?,\n             Downcast(_, variant) => self.place_downcast(base, variant)?,"}, {"sha": "5fb0a081648e88a034dd69a7da12974751b5aa03", "filename": "src/librustc_mir/interpret/step.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fstep.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,17 +2,17 @@\n //!\n //! The main entry point is the `step` method.\n \n-use rustc::mir;\n-use rustc::mir::interpret::{InterpResult, Scalar};\n-use rustc::ty::layout::LayoutOf;\n+use rustc_middle::mir;\n+use rustc_middle::mir::interpret::{InterpResult, Scalar};\n+use rustc_middle::ty::layout::LayoutOf;\n \n use super::{InterpCx, Machine};\n \n /// Classify whether an operator is \"left-homogeneous\", i.e., the LHS has the\n /// same type as the result.\n #[inline]\n fn binop_left_homogeneous(op: mir::BinOp) -> bool {\n-    use rustc::mir::BinOp::*;\n+    use rustc_middle::mir::BinOp::*;\n     match op {\n         Add | Sub | Mul | Div | Rem | BitXor | BitAnd | BitOr | Offset | Shl | Shr => true,\n         Eq | Ne | Lt | Le | Gt | Ge => false,\n@@ -22,7 +22,7 @@ fn binop_left_homogeneous(op: mir::BinOp) -> bool {\n /// same type as the LHS.\n #[inline]\n fn binop_right_homogeneous(op: mir::BinOp) -> bool {\n-    use rustc::mir::BinOp::*;\n+    use rustc_middle::mir::BinOp::*;\n     match op {\n         Add | Sub | Mul | Div | Rem | BitXor | BitAnd | BitOr | Eq | Ne | Lt | Le | Gt | Ge => true,\n         Offset | Shl | Shr => false,\n@@ -79,7 +79,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     fn statement(&mut self, stmt: &mir::Statement<'tcx>) -> InterpResult<'tcx> {\n         info!(\"{:?}\", stmt);\n \n-        use rustc::mir::StatementKind::*;\n+        use rustc_middle::mir::StatementKind::*;\n \n         // Some statements (e.g., box) push new stack frames.\n         // We have to record the stack frame number *before* executing the statement.\n@@ -142,7 +142,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     ) -> InterpResult<'tcx> {\n         let dest = self.eval_place(place)?;\n \n-        use rustc::mir::Rvalue::*;\n+        use rustc_middle::mir::Rvalue::*;\n         match *rvalue {\n             Use(ref operand) => {\n                 // Avoid recomputing the layout"}, {"sha": "a490a0f9bcc1d31f7aa71dff258a25101899cd5e", "filename": "src/librustc_mir/interpret/terminator.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,9 +1,9 @@\n use std::borrow::Cow;\n use std::convert::TryFrom;\n \n-use rustc::ty::layout::{self, LayoutOf, TyAndLayout};\n-use rustc::ty::Instance;\n-use rustc::{mir, ty};\n+use rustc_middle::ty::layout::{self, LayoutOf, TyAndLayout};\n+use rustc_middle::ty::Instance;\n+use rustc_middle::{mir, ty};\n use rustc_span::source_map::Span;\n use rustc_target::spec::abi::Abi;\n \n@@ -16,7 +16,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         &mut self,\n         terminator: &mir::Terminator<'tcx>,\n     ) -> InterpResult<'tcx> {\n-        use rustc::mir::TerminatorKind::*;\n+        use rustc_middle::mir::TerminatorKind::*;\n         match terminator.kind {\n             Return => {\n                 self.frame().return_place.map(|r| self.dump_place(*r));"}, {"sha": "ed882e107411d71d971c1c64e4344d92806eebb4", "filename": "src/librustc_mir/interpret/traits.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n use std::convert::TryFrom;\n \n-use rustc::mir::interpret::{InterpResult, Pointer, PointerArithmetic, Scalar};\n-use rustc::ty::layout::{Align, HasDataLayout, LayoutOf, Size};\n-use rustc::ty::{self, Instance, Ty, TypeFoldable};\n+use rustc_middle::mir::interpret::{InterpResult, Pointer, PointerArithmetic, Scalar};\n+use rustc_middle::ty::layout::{Align, HasDataLayout, LayoutOf, Size};\n+use rustc_middle::ty::{self, Instance, Ty, TypeFoldable};\n \n use super::{FnVal, InterpCx, Machine, MemoryKind};\n "}, {"sha": "0ca565d86787ac8fd6504ba130393c6c90561815", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -8,10 +8,10 @@ use std::convert::TryFrom;\n use std::fmt::Write;\n use std::ops::RangeInclusive;\n \n-use rustc::ty;\n-use rustc::ty::layout::{self, LayoutOf, TyAndLayout, VariantIdx};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n+use rustc_middle::ty;\n+use rustc_middle::ty::layout::{self, LayoutOf, TyAndLayout, VariantIdx};\n use rustc_span::symbol::{sym, Symbol};\n \n use std::hash::Hash;"}, {"sha": "11170164cf35b79051f757818d0648be3a50ec69", "filename": "src/librustc_mir/interpret/visitor.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Finterpret%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvisitor.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,9 +1,9 @@\n //! Visitor for a run-time value with a given layout: Traverse enums, structs and other compound\n //! types until we arrive at the leaves, with custom handling for primitive types.\n \n-use rustc::mir::interpret::InterpResult;\n-use rustc::ty;\n-use rustc::ty::layout::{self, TyAndLayout, VariantIdx};\n+use rustc_middle::mir::interpret::InterpResult;\n+use rustc_middle::ty;\n+use rustc_middle::ty::layout::{self, TyAndLayout, VariantIdx};\n \n use super::{InterpCx, MPlaceTy, Machine, OpTy};\n "}, {"sha": "e07b8535b9009e0fd153c1a1334d1c52f5bb3376", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -30,7 +30,7 @@ Rust MIR: a lowered representation of Rust.\n #[macro_use]\n extern crate log;\n #[macro_use]\n-extern crate rustc;\n+extern crate rustc_middle;\n \n mod borrow_check;\n pub mod const_eval;\n@@ -41,7 +41,7 @@ mod shim;\n pub mod transform;\n pub mod util;\n \n-use rustc::ty::query::Providers;\n+use rustc_middle::ty::query::Providers;\n \n pub fn provide(providers: &mut Providers<'_>) {\n     borrow_check::provide(providers);"}, {"sha": "a5a297088f311fc2530c39ca446e0b4198e5ab9b", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -176,17 +176,17 @@\n \n use crate::monomorphize;\n \n-use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n-use rustc::middle::lang_items::{ExchangeMallocFnLangItem, StartFnLangItem};\n-use rustc::mir::interpret::{AllocId, ConstValue};\n-use rustc::mir::interpret::{ErrorHandled, GlobalAlloc, Scalar};\n-use rustc::mir::mono::{InstantiationMode, MonoItem};\n-use rustc::mir::visit::Visitor as MirVisitor;\n-use rustc::mir::{self, Local, Location};\n-use rustc::ty::adjustment::{CustomCoerceUnsized, PointerCast};\n-use rustc::ty::print::obsolete::DefPathBasedNames;\n-use rustc::ty::subst::InternalSubsts;\n-use rustc::ty::{self, GenericParamDefKind, Instance, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n+use rustc_middle::middle::lang_items::{ExchangeMallocFnLangItem, StartFnLangItem};\n+use rustc_middle::mir::interpret::{AllocId, ConstValue};\n+use rustc_middle::mir::interpret::{ErrorHandled, GlobalAlloc, Scalar};\n+use rustc_middle::mir::mono::{InstantiationMode, MonoItem};\n+use rustc_middle::mir::visit::Visitor as MirVisitor;\n+use rustc_middle::mir::{self, Local, Location};\n+use rustc_middle::ty::adjustment::{CustomCoerceUnsized, PointerCast};\n+use rustc_middle::ty::print::obsolete::DefPathBasedNames;\n+use rustc_middle::ty::subst::InternalSubsts;\n+use rustc_middle::ty::{self, GenericParamDefKind, Instance, Ty, TyCtxt, TypeFoldable};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::{par_iter, MTLock, MTRef, ParallelIterator};\n use rustc_hir as hir;"}, {"sha": "bbb8e063a4573d83d1f542644019f5cb15799bcd", "filename": "src/librustc_mir/monomorphize/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fmonomorphize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fmonomorphize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n-use rustc::traits;\n-use rustc::ty::adjustment::CustomCoerceUnsized;\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::traits;\n+use rustc_middle::ty::adjustment::CustomCoerceUnsized;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n \n pub mod collector;\n pub mod partitioning;"}, {"sha": "c4cfc25a2e8b3ef9637d704ee4f5e0b583c1aa31", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -96,13 +96,13 @@ use std::cmp;\n use std::collections::hash_map::Entry;\n use std::sync::Arc;\n \n-use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n-use rustc::middle::exported_symbols::SymbolExportLevel;\n-use rustc::mir::mono::{CodegenUnit, CodegenUnitNameBuilder, Linkage, Visibility};\n-use rustc::mir::mono::{InstantiationMode, MonoItem};\n-use rustc::ty::print::characteristic_def_id_of_type;\n-use rustc::ty::query::Providers;\n-use rustc::ty::{self, DefIdTree, InstanceDef, TyCtxt};\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n+use rustc_middle::middle::exported_symbols::SymbolExportLevel;\n+use rustc_middle::mir::mono::{CodegenUnit, CodegenUnitNameBuilder, Linkage, Visibility};\n+use rustc_middle::mir::mono::{InstantiationMode, MonoItem};\n+use rustc_middle::ty::print::characteristic_def_id_of_type;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, DefIdTree, InstanceDef, TyCtxt};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync;\n use rustc_hir::def::DefKind;"}, {"sha": "f5807defa4d2583f40fc9ec11a9e4fc04b7a941f", "filename": "src/librustc_mir/shim.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fshim.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n-use rustc::mir::*;\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::query::Providers;\n-use rustc::ty::subst::{InternalSubsts, Subst};\n-use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n "}, {"sha": "c9620d84aada2b16fedbb169a239a2d75ba20a57", "filename": "src/librustc_mir/transform/add_call_guards.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fadd_call_guards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fadd_call_guards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fadd_call_guards.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n use crate::transform::{MirPass, MirSource};\n-use rustc::mir::*;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::TyCtxt;\n use rustc_index::vec::{Idx, IndexVec};\n \n #[derive(PartialEq)]"}, {"sha": "c687c1a908555a4a31bd45bd2a2f9ebde357d3da", "filename": "src/librustc_mir/transform/add_moves_for_packed_drops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fadd_moves_for_packed_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fadd_moves_for_packed_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fadd_moves_for_packed_drops.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::*;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::TyCtxt;\n use rustc_hir::def_id::DefId;\n \n use crate::transform::{MirPass, MirSource};"}, {"sha": "5c016b0c515af751468c01cf22b386b38b11360c", "filename": "src/librustc_mir/transform/add_retag.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fadd_retag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fadd_retag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fadd_retag.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,8 +5,8 @@\n //! normal MIR semantics.\n \n use crate::transform::{MirPass, MirSource};\n-use rustc::mir::*;\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n \n pub struct AddRetag;\n "}, {"sha": "962f72db98cac782a40c507a87989ee667ba52ea", "filename": "src/librustc_mir/transform/check_consts/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,8 +4,8 @@\n //! has interior mutability or needs to be dropped, as well as the visitor that emits errors when\n //! it finds operations that are invalid in a certain context.\n \n-use rustc::mir;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n "}, {"sha": "f38b9d8ef8586a7fca5ec3581ed954473d543153", "filename": "src/librustc_mir/transform/check_consts/qualifs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,8 +2,8 @@\n //!\n //! See the `Qualif` trait for more info.\n \n-use rustc::mir::*;\n-use rustc::ty::{self, AdtDef, Ty};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{self, AdtDef, Ty};\n use rustc_span::DUMMY_SP;\n \n use super::Item as ConstCx;"}, {"sha": "2717c6b89ad2c8280a359089cdfb40ce5672b0a8", "filename": "src/librustc_mir/transform/check_consts/resolver.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,8 +2,8 @@\n //!\n //! This contains the dataflow analysis used to track `Qualif`s on complex control-flow graphs.\n \n-use rustc::mir::visit::Visitor;\n-use rustc::mir::{self, BasicBlock, Local, Location};\n+use rustc_middle::mir::visit::Visitor;\n+use rustc_middle::mir::{self, BasicBlock, Local, Location};\n use rustc_index::bit_set::BitSet;\n \n use std::marker::PhantomData;"}, {"sha": "64b2869547942ca2369790ec68dc9e2d6c8cbef0", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,10 +1,10 @@\n //! The `Visitor` responsible for actually checking a `mir::Body` for invalid operations.\n \n-use rustc::middle::lang_items;\n-use rustc::mir::visit::{MutatingUseContext, NonMutatingUseContext, PlaceContext, Visitor};\n-use rustc::mir::*;\n-use rustc::ty::cast::CastTy;\n-use rustc::ty::{self, Instance, InstanceDef, TyCtxt};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::mir::visit::{MutatingUseContext, NonMutatingUseContext, PlaceContext, Visitor};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::cast::CastTy;\n+use rustc_middle::ty::{self, Instance, InstanceDef, TyCtxt};\n use rustc_errors::struct_span_err;\n use rustc_hir::{def_id::DefId, HirId};\n use rustc_index::bit_set::BitSet;"}, {"sha": "107ba8bd33a2171f4440a1588dcd222463a89206", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n-use rustc::mir::visit::{MutatingUseContext, PlaceContext, Visitor};\n-use rustc::mir::*;\n-use rustc::ty::cast::CastTy;\n-use rustc::ty::query::Providers;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir::visit::{MutatingUseContext, PlaceContext, Visitor};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::cast::CastTy;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;"}, {"sha": "446aadd56dc302af42d8b8e985cda2be06512105", "filename": "src/librustc_mir/transform/cleanup_post_borrowck.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fcleanup_post_borrowck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fcleanup_post_borrowck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcleanup_post_borrowck.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -11,16 +11,16 @@\n //! temporaries read by [`ForMatchGuard`] reads, and [`DeleteFakeBorrows`]\n //! deletes the initialization of those temporaries.\n //!\n-//! [`AscribeUserType`]: rustc::mir::StatementKind::AscribeUserType\n-//! [`Shallow`]: rustc::mir::BorrowKind::Shallow\n-//! [`FakeRead`]: rustc::mir::StatementKind::FakeRead\n-//! [`Nop`]: rustc::mir::StatementKind::Nop\n+//! [`AscribeUserType`]: rustc_middle::mir::StatementKind::AscribeUserType\n+//! [`Shallow`]: rustc_middle::mir::BorrowKind::Shallow\n+//! [`FakeRead`]: rustc_middle::mir::StatementKind::FakeRead\n+//! [`Nop`]: rustc_middle::mir::StatementKind::Nop\n \n use crate::transform::{MirPass, MirSource};\n-use rustc::mir::visit::MutVisitor;\n-use rustc::mir::{BodyAndCache, BorrowKind, Location, Rvalue};\n-use rustc::mir::{Statement, StatementKind};\n-use rustc::ty::TyCtxt;\n+use rustc_middle::mir::visit::MutVisitor;\n+use rustc_middle::mir::{BodyAndCache, BorrowKind, Location, Rvalue};\n+use rustc_middle::mir::{Statement, StatementKind};\n+use rustc_middle::ty::TyCtxt;\n \n pub struct CleanupNonCodegenStatements;\n "}, {"sha": "8e004e45b7a3ab1233d7791d5bb7c532d65c036a", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,26 +4,26 @@\n use std::borrow::Cow;\n use std::cell::Cell;\n \n-use rustc::mir::interpret::{InterpResult, Scalar};\n-use rustc::mir::visit::{\n+use rustc_ast::ast::Mutability;\n+use rustc_data_structures::fx::FxHashMap;\n+use rustc_hir::def::DefKind;\n+use rustc_hir::HirId;\n+use rustc_index::vec::IndexVec;\n+use rustc_middle::mir::interpret::{InterpResult, Scalar};\n+use rustc_middle::mir::visit::{\n     MutVisitor, MutatingUseContext, NonMutatingUseContext, PlaceContext, Visitor,\n };\n-use rustc::mir::{\n+use rustc_middle::mir::{\n     read_only, AggregateKind, AssertKind, BasicBlock, BinOp, Body, BodyAndCache, ClearCrossCrate,\n     Constant, Local, LocalDecl, LocalKind, Location, Operand, Place, ReadOnlyBodyAndCache, Rvalue,\n     SourceInfo, SourceScope, SourceScopeData, Statement, StatementKind, Terminator, TerminatorKind,\n     UnOp, RETURN_PLACE,\n };\n-use rustc::ty::layout::{\n+use rustc_middle::ty::layout::{\n     HasDataLayout, HasTyCtxt, LayoutError, LayoutOf, Size, TargetDataLayout, TyAndLayout,\n };\n-use rustc::ty::subst::{InternalSubsts, Subst};\n-use rustc::ty::{self, ConstKind, Instance, ParamEnv, Ty, TyCtxt, TypeFoldable};\n-use rustc_ast::ast::Mutability;\n-use rustc_data_structures::fx::FxHashMap;\n-use rustc_hir::def::DefKind;\n-use rustc_hir::HirId;\n-use rustc_index::vec::IndexVec;\n+use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::{self, ConstKind, Instance, ParamEnv, Ty, TyCtxt, TypeFoldable};\n use rustc_session::lint;\n use rustc_span::{def_id::DefId, Span};\n use rustc_trait_selection::traits;\n@@ -52,7 +52,7 @@ macro_rules! throw_machine_stop_str {\n                 write!(f, $($tt)*)\n             }\n         }\n-        impl rustc::mir::interpret::MachineStopType for Zst {}\n+        impl rustc_middle::mir::interpret::MachineStopType for Zst {}\n         throw_machine_stop!(Zst)\n     }};\n }\n@@ -66,7 +66,7 @@ impl<'tcx> MirPass<'tcx> for ConstProp {\n             return;\n         }\n \n-        use rustc::hir::map::blocks::FnLikeNode;\n+        use rustc_middle::hir::map::blocks::FnLikeNode;\n         let hir_id = tcx\n             .hir()\n             .as_local_hir_id(source.def_id())\n@@ -215,8 +215,8 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for ConstPropMachine {\n \n     fn assert_panic(\n         _ecx: &mut InterpCx<'mir, 'tcx, Self>,\n-        _msg: &rustc::mir::AssertMessage<'tcx>,\n-        _unwind: Option<rustc::mir::BasicBlock>,\n+        _msg: &rustc_middle::mir::AssertMessage<'tcx>,\n+        _unwind: Option<rustc_middle::mir::BasicBlock>,\n     ) -> InterpResult<'tcx> {\n         bug!(\"panics terminators are not evaluated in ConstProp\")\n     }\n@@ -785,7 +785,7 @@ impl CanConstProp {\n \n impl<'tcx> Visitor<'tcx> for CanConstProp {\n     fn visit_local(&mut self, &local: &Local, context: PlaceContext, _: Location) {\n-        use rustc::mir::visit::PlaceContext::*;\n+        use rustc_middle::mir::visit::PlaceContext::*;\n         match context {\n             // Constants must have at most one write\n             // FIXME(oli-obk): we could be more powerful here, if the multiple writes"}, {"sha": "76cbe5a1d458ae0e9c60e587cf8aaa942bf81928", "filename": "src/librustc_mir/transform/copy_prop.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -21,12 +21,12 @@\n \n use crate::transform::{MirPass, MirSource};\n use crate::util::def_use::DefUseAnalysis;\n-use rustc::mir::visit::MutVisitor;\n-use rustc::mir::{\n+use rustc_middle::mir::visit::MutVisitor;\n+use rustc_middle::mir::{\n     read_only, Body, BodyAndCache, Constant, Local, LocalKind, Location, Operand, Place, Rvalue,\n     StatementKind,\n };\n-use rustc::ty::TyCtxt;\n+use rustc_middle::ty::TyCtxt;\n \n pub struct CopyPropagation;\n "}, {"sha": "3e2be7fd7d554b670c864788f1a267365b70a1e2", "filename": "src/librustc_mir/transform/deaggregator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fdeaggregator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fdeaggregator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fdeaggregator.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use crate::transform::{MirPass, MirSource};\n use crate::util::expand_aggregate;\n-use rustc::mir::*;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::TyCtxt;\n \n pub struct Deaggregator;\n "}, {"sha": "30d1613b55ca7179857745ca639c6579f6f6cfc4", "filename": "src/librustc_mir/transform/dump_mir.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fdump_mir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fdump_mir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fdump_mir.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -7,8 +7,8 @@ use std::io;\n \n use crate::transform::{MirPass, MirSource};\n use crate::util as mir_util;\n-use rustc::mir::{Body, BodyAndCache};\n-use rustc::ty::TyCtxt;\n+use rustc_middle::mir::{Body, BodyAndCache};\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::config::{OutputFilenames, OutputType};\n \n pub struct Marker(pub &'static str);"}, {"sha": "736996e795db5b6aff1ddde421ea6874887d1fc6", "filename": "src/librustc_mir/transform/elaborate_drops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -9,9 +9,9 @@ use crate::transform::{MirPass, MirSource};\n use crate::util::elaborate_drops::{elaborate_drop, DropFlagState, Unwind};\n use crate::util::elaborate_drops::{DropElaborator, DropFlagMode, DropStyle};\n use crate::util::patch::MirPatch;\n-use rustc::mir::*;\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_index::bit_set::BitSet;"}, {"sha": "8a808cc8778bf3018958f2e7322a96902b26fc59", "filename": "src/librustc_mir/transform/generator.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -56,12 +56,12 @@ use crate::transform::simplify;\n use crate::transform::{MirPass, MirSource};\n use crate::util::dump_mir;\n use crate::util::liveness;\n-use rustc::mir::visit::{MutVisitor, PlaceContext, Visitor};\n-use rustc::mir::*;\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::GeneratorSubsts;\n-use rustc::ty::{self, AdtDef, Ty, TyCtxt};\n+use rustc_middle::mir::visit::{MutVisitor, PlaceContext, Visitor};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::GeneratorSubsts;\n+use rustc_middle::ty::{self, AdtDef, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n@@ -1079,7 +1079,7 @@ fn create_generator_resume_function<'tcx>(\n \n     let mut cases = create_cases(body, &transform, Operation::Resume);\n \n-    use rustc::mir::AssertKind::{ResumedAfterPanic, ResumedAfterReturn};\n+    use rustc_middle::mir::AssertKind::{ResumedAfterPanic, ResumedAfterReturn};\n \n     // Jump to the entry point on the unresumed\n     cases.insert(0, (UNRESUMED, BasicBlock::new(0)));"}, {"sha": "74098280246f1b8f2b1ea733ed7abeb82a26a097", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,10 +1,10 @@\n //! Inlining pass for MIR functions\n \n-use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n-use rustc::mir::visit::*;\n-use rustc::mir::*;\n-use rustc::ty::subst::{Subst, SubstsRef};\n-use rustc::ty::{self, Instance, InstanceDef, ParamEnv, Ty, TyCtxt};\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n+use rustc_middle::mir::visit::*;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::subst::{Subst, SubstsRef};\n+use rustc_middle::ty::{self, Instance, InstanceDef, ParamEnv, Ty, TyCtxt};\n use rustc_attr as attr;\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::BitSet;"}, {"sha": "0bf221d6d8dfdf96f4e5dd750fee4f628ba30ae1", "filename": "src/librustc_mir/transform/instcombine.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,12 +1,12 @@\n //! Performs various peephole optimizations.\n \n use crate::transform::{MirPass, MirSource};\n-use rustc::mir::visit::{MutVisitor, Visitor};\n-use rustc::mir::{\n+use rustc_middle::mir::visit::{MutVisitor, Visitor};\n+use rustc_middle::mir::{\n     read_only, Body, BodyAndCache, Constant, Local, Location, Operand, Place, PlaceRef,\n     ProjectionElem, Rvalue,\n };\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::vec::Idx;\n use std::mem;"}, {"sha": "fac5617e871318dacbf0923ab5b2c5c1e5f61413", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n use crate::{shim, util};\n-use rustc::mir::{BodyAndCache, ConstQualifs, MirPhase, Promoted};\n-use rustc::ty::query::Providers;\n-use rustc::ty::steal::Steal;\n-use rustc::ty::{InstanceDef, TyCtxt, TypeFoldable};\n+use rustc_middle::mir::{BodyAndCache, ConstQualifs, MirPhase, Promoted};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::steal::Steal;\n+use rustc_middle::ty::{InstanceDef, TyCtxt, TypeFoldable};\n use rustc_ast::ast;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, DefIdSet, LOCAL_CRATE};"}, {"sha": "48b31d54fa12748ccb37eecd45f77aa8bca517dd", "filename": "src/librustc_mir/transform/no_landing_pads.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fno_landing_pads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fno_landing_pads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fno_landing_pads.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,9 +2,9 @@\n //! specified.\n \n use crate::transform::{MirPass, MirSource};\n-use rustc::mir::visit::MutVisitor;\n-use rustc::mir::*;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::mir::visit::MutVisitor;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::TyCtxt;\n \n pub struct NoLandingPads<'tcx> {\n     tcx: TyCtxt<'tcx>,"}, {"sha": "8b53776ccb3d1c743c0c4f1ce5c676ac3dd1713d", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -12,12 +12,12 @@\n //! initialization and can otherwise silence errors, if\n //! move analysis runs after promotion on broken MIR.\n \n-use rustc::mir::traversal::ReversePostorder;\n-use rustc::mir::visit::{MutVisitor, MutatingUseContext, PlaceContext, Visitor};\n-use rustc::mir::*;\n-use rustc::ty::cast::CastTy;\n-use rustc::ty::subst::InternalSubsts;\n-use rustc::ty::{self, List, TyCtxt, TypeFoldable};\n+use rustc_middle::mir::traversal::ReversePostorder;\n+use rustc_middle::mir::visit::{MutVisitor, MutatingUseContext, PlaceContext, Visitor};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::cast::CastTy;\n+use rustc_middle::ty::subst::InternalSubsts;\n+use rustc_middle::ty::{self, List, TyCtxt, TypeFoldable};\n use rustc_ast::ast::LitKind;\n use rustc_hir::def_id::DefId;\n use rustc_span::symbol::sym;"}, {"sha": "779744a4923a9026d048a3b6a99f01c70f29f2fa", "filename": "src/librustc_mir/transform/qualify_min_const_fn.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::*;\n-use rustc::ty::{self, adjustment::PointerCast, Predicate, Ty, TyCtxt};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{self, adjustment::PointerCast, Predicate, Ty, TyCtxt};\n use rustc_attr as attr;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n@@ -152,7 +152,7 @@ fn check_rvalue(\n         | Rvalue::Ref(_, _, place)\n         | Rvalue::AddressOf(_, place) => check_place(tcx, place, span, def_id, body),\n         Rvalue::Cast(CastKind::Misc, operand, cast_ty) => {\n-            use rustc::ty::cast::CastTy;\n+            use rustc_middle::ty::cast::CastTy;\n             let cast_in = CastTy::from_ty(operand.ty(body, tcx)).expect(\"bad input type for cast\");\n             let cast_out = CastTy::from_ty(cast_ty).expect(\"bad output type for cast\");\n             match (cast_in, cast_out) {"}, {"sha": "e73ed80157ea2fb33cdacfddaf807b66d94c346d", "filename": "src/librustc_mir/transform/remove_noop_landing_pads.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n use crate::transform::{MirPass, MirSource};\n use crate::util::patch::MirPatch;\n-use rustc::mir::*;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::TyCtxt;\n use rustc_index::bit_set::BitSet;\n \n /// A pass that removes noop landing pads and replaces jumps to them with"}, {"sha": "b68a93cd03f95f04398c31a6f7a9907345a002da", "filename": "src/librustc_mir/transform/rustc_peek.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,8 +4,8 @@ use rustc_span::Span;\n use rustc_target::spec::abi::Abi;\n \n use crate::transform::{MirPass, MirSource};\n-use rustc::mir::{self, Body, BodyAndCache, Local, Location};\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::mir::{self, Body, BodyAndCache, Local, Location};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::BitSet;\n "}, {"sha": "3729c8c651914f7888c4e2127aecbbbf31d4f62b", "filename": "src/librustc_mir/transform/simplify.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -28,9 +28,9 @@\n //! return.\n \n use crate::transform::{MirPass, MirSource};\n-use rustc::mir::visit::{MutVisitor, MutatingUseContext, PlaceContext, Visitor};\n-use rustc::mir::*;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir::visit::{MutVisitor, MutatingUseContext, PlaceContext, Visitor};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::{Idx, IndexVec};\n use std::borrow::Cow;"}, {"sha": "dd666289e391a1e571b03562da08d83379d05bf1", "filename": "src/librustc_mir/transform/simplify_branches.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fsimplify_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fsimplify_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify_branches.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n //! A pass that simplifies branches when their condition is known.\n \n use crate::transform::{MirPass, MirSource};\n-use rustc::mir::*;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::TyCtxt;\n \n use std::borrow::Cow;\n "}, {"sha": "fecaee44765fc6ef9a39a0e944a906a663ce9fb8", "filename": "src/librustc_mir/transform/simplify_try.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fsimplify_try.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Fsimplify_try.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify_try.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -11,8 +11,8 @@\n \n use crate::transform::{simplify, MirPass, MirSource};\n use itertools::Itertools as _;\n-use rustc::mir::*;\n-use rustc::ty::{Ty, TyCtxt};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{Ty, TyCtxt};\n use rustc_target::abi::VariantIdx;\n \n /// Simplifies arms of form `Variant(x) => Variant(x)` to just a move."}, {"sha": "38a9194e5c55d39f4c6f1a7cf365bd86e53b7dcb", "filename": "src/librustc_mir/transform/uninhabited_enum_branching.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Funinhabited_enum_branching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Funinhabited_enum_branching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Funinhabited_enum_branching.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,12 +1,12 @@\n //! A pass that eliminates branches on uninhabited enum variants.\n \n use crate::transform::{MirPass, MirSource};\n-use rustc::mir::{\n+use rustc_middle::mir::{\n     BasicBlock, BasicBlockData, Body, BodyAndCache, Local, Operand, Rvalue, StatementKind,\n     TerminatorKind,\n };\n-use rustc::ty::layout::{Abi, TyAndLayout, Variants};\n-use rustc::ty::{Ty, TyCtxt};\n+use rustc_middle::ty::layout::{Abi, TyAndLayout, Variants};\n+use rustc_middle::ty::{Ty, TyCtxt};\n \n pub struct UninhabitedEnumBranching;\n "}, {"sha": "c788ed92116ec429903b6f676ace3cc28e91c723", "filename": "src/librustc_mir/transform/unreachable_prop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Funreachable_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Ftransform%2Funreachable_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Funreachable_prop.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,8 +4,8 @@\n \n use crate::transform::simplify;\n use crate::transform::{MirPass, MirSource};\n-use rustc::mir::*;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::TyCtxt;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use std::borrow::Cow;\n "}, {"sha": "e932b112897f0e85ce5b92ec7c2e31d656d9d14b", "filename": "src/librustc_mir/util/aggregate.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Faggregate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Faggregate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Faggregate.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n-use rustc::mir::*;\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::{Ty, TyCtxt};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::{Ty, TyCtxt};\n use rustc_index::vec::Idx;\n \n use std::iter::TrustedLen;"}, {"sha": "19c2cfa3a6a4fd06b3c00e2c973c1be5c377274f", "filename": "src/librustc_mir/util/alignment.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Falignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Falignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Falignment.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::*;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{self, TyCtxt};\n \n /// Returns `true` if this place is allowed to be less aligned\n /// than its containing struct (because it is within a packed"}, {"sha": "a300eb6d90fd949d4279367e18e9b90c163c90f7", "filename": "src/librustc_mir/util/borrowck_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,4 +1,4 @@\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_errors::{struct_span_err, DiagnosticBuilder, DiagnosticId};\n use rustc_span::{MultiSpan, Span};\n "}, {"sha": "ecf3b08a96eedd1573a99d7826975da8bb8416c2", "filename": "src/librustc_mir/util/collect_writes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Fcollect_writes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Fcollect_writes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fcollect_writes.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,6 +1,6 @@\n-use rustc::mir::visit::PlaceContext;\n-use rustc::mir::visit::Visitor;\n-use rustc::mir::{Body, Local, Location};\n+use rustc_middle::mir::visit::PlaceContext;\n+use rustc_middle::mir::visit::Visitor;\n+use rustc_middle::mir::{Body, Local, Location};\n \n crate trait FindAssignments {\n     // Finds all statements that assign directly to local (i.e., X = ...)"}, {"sha": "771c9a55cb54bf251b4d0301cbe8fd18756d0778", "filename": "src/librustc_mir/util/def_use.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Fdef_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Fdef_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fdef_use.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,10 +1,10 @@\n //! Def-use analysis.\n \n-use rustc::mir::visit::{MutVisitor, PlaceContext, Visitor};\n-use rustc::mir::{\n+use rustc_middle::mir::visit::{MutVisitor, PlaceContext, Visitor};\n+use rustc_middle::mir::{\n     Body, BodyAndCache, Local, Location, PlaceElem, ReadOnlyBodyAndCache, VarDebugInfo,\n };\n-use rustc::ty::TyCtxt;\n+use rustc_middle::ty::TyCtxt;\n use rustc_index::vec::IndexVec;\n use std::mem;\n "}, {"sha": "c51ff37e0ba0b570a46593c98e095e2f833c9f7d", "filename": "src/librustc_mir/util/elaborate_drops.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,11 +1,11 @@\n use crate::util::patch::MirPatch;\n-use rustc::middle::lang_items;\n-use rustc::mir::*;\n-use rustc::traits::Reveal;\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::util::IntTypeExt;\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::mir::*;\n+use rustc_middle::traits::Reveal;\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::util::IntTypeExt;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_hir as hir;\n use rustc_index::vec::Idx;\n use std::fmt;"}, {"sha": "6af0b9693faf64397561da4a14eddb33018f4c86", "filename": "src/librustc_mir/util/graphviz.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::*;\n-use rustc::ty::TyCtxt;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::TyCtxt;\n use rustc_hir::def_id::DefId;\n use rustc_index::vec::Idx;\n use std::fmt::Debug;"}, {"sha": "90d76407c2d4c7266b44845efd33ff3c208d8fa7", "filename": "src/librustc_mir/util/liveness.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fliveness.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -26,12 +26,12 @@\n \n use crate::transform::MirSource;\n use crate::util::pretty::{dump_enabled, write_basic_block, write_mir_intro};\n-use rustc::mir::visit::{\n+use rustc_middle::mir::visit::{\n     MutatingUseContext, NonMutatingUseContext, NonUseContext, PlaceContext, Visitor,\n };\n-use rustc::mir::Local;\n-use rustc::mir::*;\n-use rustc::ty::{self, TyCtxt};\n+use rustc_middle::mir::Local;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_data_structures::work_queue::WorkQueue;\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::{Idx, IndexVec};"}, {"sha": "10738ca2c76bb4baa3faff43268f1754c8167f3e", "filename": "src/librustc_mir/util/patch.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Fpatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Fpatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpatch.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::*;\n-use rustc::ty::Ty;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::Ty;\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_span::Span;\n "}, {"sha": "85076b42a12bcc9adc25a643f97dfc0fb92627c4", "filename": "src/librustc_mir/util/pretty.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpretty.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,10 +1,10 @@\n use super::graphviz::write_mir_fn_graphviz;\n use crate::transform::MirSource;\n use either::Either;\n-use rustc::mir::interpret::{read_target_uint, AllocId, Allocation, ConstValue, GlobalAlloc};\n-use rustc::mir::visit::Visitor;\n-use rustc::mir::*;\n-use rustc::ty::{self, layout::Size, TyCtxt, TypeFoldable, TypeVisitor};\n+use rustc_middle::mir::interpret::{read_target_uint, AllocId, Allocation, ConstValue, GlobalAlloc};\n+use rustc_middle::mir::visit::Visitor;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{self, layout::Size, TyCtxt, TypeFoldable, TypeVisitor};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_index::vec::Idx;"}, {"sha": "826b3bdcfe5e37ed9f4e1d22ee011f9bbe894dc7", "filename": "src/librustc_mir_build/build/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fblock.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,7 +2,7 @@ use crate::build::matches::ArmHasGuard;\n use crate::build::ForGuard::OutsideGuard;\n use crate::build::{BlockAnd, BlockAndExtension, BlockFrame, Builder};\n use crate::hair::*;\n-use rustc::mir::*;\n+use rustc_middle::mir::*;\n use rustc_hir as hir;\n use rustc_span::Span;\n "}, {"sha": "f1cb514feaaa3427ef6c9ec80b946404712e938d", "filename": "src/librustc_mir_build/build/cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fcfg.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n //! Routines for manipulating the control-flow graph.\n \n use crate::build::CFG;\n-use rustc::mir::*;\n+use rustc_middle::mir::*;\n \n impl<'tcx> CFG<'tcx> {\n     crate fn block_data(&self, blk: BasicBlock) -> &BasicBlockData<'tcx> {"}, {"sha": "03ec0b48f8bfecf5303419f2d19ba1fc0ba0ac60", "filename": "src/librustc_mir_build/build/expr/as_constant.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_constant.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,8 +2,8 @@\n \n use crate::build::Builder;\n use crate::hair::*;\n-use rustc::mir::*;\n-use rustc::ty::CanonicalUserTypeAnnotation;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::CanonicalUserTypeAnnotation;\n \n impl<'a, 'tcx> Builder<'a, 'tcx> {\n     /// Compile `expr`, yielding a compile-time constant. Assumes that"}, {"sha": "783637fa45831d8cb986cff9ad73c80f7ec01f35", "filename": "src/librustc_mir_build/build/expr/as_operand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_operand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_operand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_operand.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,8 +3,8 @@\n use crate::build::expr::category::Category;\n use crate::build::{BlockAnd, BlockAndExtension, Builder};\n use crate::hair::*;\n-use rustc::middle::region;\n-use rustc::mir::*;\n+use rustc_middle::middle::region;\n+use rustc_middle::mir::*;\n \n impl<'a, 'tcx> Builder<'a, 'tcx> {\n     /// Returns an operand suitable for use until the end of the current"}, {"sha": "90931a14894e667ac317bf61e3ac97bb46bdd2ed", "filename": "src/librustc_mir_build/build/expr/as_place.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_place.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,10 +4,10 @@ use crate::build::expr::category::Category;\n use crate::build::ForGuard::{OutsideGuard, RefWithinGuard};\n use crate::build::{BlockAnd, BlockAndExtension, Builder};\n use crate::hair::*;\n-use rustc::middle::region;\n-use rustc::mir::AssertKind::BoundsCheck;\n-use rustc::mir::*;\n-use rustc::ty::{self, CanonicalUserTypeAnnotation, Ty, TyCtxt, Variance};\n+use rustc_middle::middle::region;\n+use rustc_middle::mir::AssertKind::BoundsCheck;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{self, CanonicalUserTypeAnnotation, Ty, TyCtxt, Variance};\n use rustc_span::Span;\n \n use rustc_index::vec::Idx;"}, {"sha": "96d6ca1ecabb125e5b807d0213737a298aa56d81", "filename": "src/librustc_mir_build/build/expr/as_rvalue.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,10 +5,10 @@ use rustc_index::vec::Idx;\n use crate::build::expr::category::{Category, RvalueFunc};\n use crate::build::{BlockAnd, BlockAndExtension, Builder};\n use crate::hair::*;\n-use rustc::middle::region;\n-use rustc::mir::AssertKind;\n-use rustc::mir::*;\n-use rustc::ty::{self, Ty, UpvarSubsts};\n+use rustc_middle::middle::region;\n+use rustc_middle::mir::AssertKind;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{self, Ty, UpvarSubsts};\n use rustc_span::Span;\n \n impl<'a, 'tcx> Builder<'a, 'tcx> {"}, {"sha": "ef692079e0c441301a96d25ecabc1e6c348f1261", "filename": "src/librustc_mir_build/build/expr/as_temp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_temp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_temp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_temp.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,8 +3,8 @@\n use crate::build::scope::DropKind;\n use crate::build::{BlockAnd, BlockAndExtension, Builder};\n use crate::hair::*;\n-use rustc::middle::region;\n-use rustc::mir::*;\n+use rustc_middle::middle::region;\n+use rustc_middle::mir::*;\n use rustc_hir as hir;\n use rustc_span::symbol::sym;\n "}, {"sha": "c61526024d07614dc05582ae35a9ab3773bb7bf0", "filename": "src/librustc_mir_build/build/expr/into.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Finto.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,8 +3,8 @@\n use crate::build::expr::category::{Category, RvalueFunc};\n use crate::build::{BlockAnd, BlockAndExtension, BlockFrame, Builder};\n use crate::hair::*;\n-use rustc::mir::*;\n-use rustc::ty::{self, CanonicalUserTypeAnnotation};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{self, CanonicalUserTypeAnnotation};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_span::symbol::sym;"}, {"sha": "8bfd2ce36bb51a783d83e44bcb06eee43931c25f", "filename": "src/librustc_mir_build/build/expr/stmt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fstmt.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n use crate::build::scope::BreakableTarget;\n use crate::build::{BlockAnd, BlockAndExtension, BlockFrame, Builder};\n use crate::hair::*;\n-use rustc::middle::region;\n-use rustc::mir::*;\n+use rustc_middle::middle::region;\n+use rustc_middle::mir::*;\n \n impl<'a, 'tcx> Builder<'a, 'tcx> {\n     /// Builds a block of MIR statements to evaluate the HAIR `expr`."}, {"sha": "1c0981597d32695b66c6454adb48a08770093966", "filename": "src/librustc_mir_build/build/into.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Finto.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -6,7 +6,7 @@\n \n use crate::build::{BlockAnd, Builder};\n use crate::hair::*;\n-use rustc::mir::*;\n+use rustc_middle::mir::*;\n \n pub(in crate::build) trait EvalInto<'tcx> {\n     fn eval_into("}, {"sha": "d205ce254d3b28caf6249e99eb8d61f563315b92", "filename": "src/librustc_mir_build/build/matches/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -10,10 +10,10 @@ use crate::build::ForGuard::{self, OutsideGuard, RefWithinGuard};\n use crate::build::{BlockAnd, BlockAndExtension, Builder};\n use crate::build::{GuardFrame, GuardFrameLocal, LocalsForNode};\n use crate::hair::{self, *};\n-use rustc::middle::region;\n-use rustc::mir::*;\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::{self, CanonicalUserTypeAnnotation, Ty};\n+use rustc_middle::middle::region;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::{self, CanonicalUserTypeAnnotation, Ty};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir::HirId;\n use rustc_index::bit_set::BitSet;"}, {"sha": "664f56ae5e456b6bcd4ed7c146e254ca578bc1c5", "filename": "src/librustc_mir_build/build/matches/simplify.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Fsimplify.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -15,10 +15,10 @@\n use crate::build::matches::{Ascription, Binding, Candidate, MatchPair};\n use crate::build::Builder;\n use crate::hair::{self, *};\n-use rustc::mir::interpret::truncate;\n-use rustc::mir::Place;\n-use rustc::ty;\n-use rustc::ty::layout::{Integer, IntegerExt, Size};\n+use rustc_middle::mir::interpret::truncate;\n+use rustc_middle::mir::Place;\n+use rustc_middle::ty;\n+use rustc_middle::ty::layout::{Integer, IntegerExt, Size};\n use rustc_attr::{SignedInt, UnsignedInt};\n use rustc_hir::RangeEnd;\n "}, {"sha": "01b3cfb7ba05b24f096d2a374f86d6dd6ffd08f3", "filename": "src/librustc_mir_build/build/matches/test.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Ftest.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -9,10 +9,10 @@ use crate::build::matches::{Candidate, MatchPair, Test, TestKind};\n use crate::build::Builder;\n use crate::hair::pattern::compare_const_vals;\n use crate::hair::*;\n-use rustc::mir::*;\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::util::IntTypeExt;\n-use rustc::ty::{self, adjustment::PointerCast, Ty};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::util::IntTypeExt;\n+use rustc_middle::ty::{self, adjustment::PointerCast, Ty};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::RangeEnd;\n use rustc_index::bit_set::BitSet;\n@@ -362,7 +362,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         place: Place<'tcx>,\n         mut ty: Ty<'tcx>,\n     ) {\n-        use rustc::middle::lang_items::EqTraitLangItem;\n+        use rustc_middle::middle::lang_items::EqTraitLangItem;\n \n         let mut expect = self.literal_operand(source_info.span, value);\n         let mut val = Operand::Copy(place);"}, {"sha": "967a44b9b96e4f31b38c926947e1e714c5553f5e", "filename": "src/librustc_mir_build/build/matches/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Futil.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,8 +1,8 @@\n use crate::build::matches::MatchPair;\n use crate::build::Builder;\n use crate::hair::*;\n-use rustc::mir::*;\n-use rustc::ty;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty;\n use smallvec::SmallVec;\n use std::convert::TryInto;\n use std::u32;"}, {"sha": "06371d71b9d58007a1709a7a1105e44cfe13021e", "filename": "src/librustc_mir_build/build/misc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmisc.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,9 +3,9 @@\n \n use crate::build::Builder;\n \n-use rustc::ty::{self, Ty};\n+use rustc_middle::ty::{self, Ty};\n \n-use rustc::mir::*;\n+use rustc_middle::mir::*;\n use rustc_span::{Span, DUMMY_SP};\n \n impl<'a, 'tcx> Builder<'a, 'tcx> {"}, {"sha": "c4eb9803b425f2066550d81b370acfeb197b5218", "filename": "src/librustc_mir_build/build/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,11 +2,11 @@ use crate::build;\n use crate::build::scope::DropKind;\n use crate::hair::cx::Cx;\n use crate::hair::{BindingMode, LintLevel, PatKind};\n-use rustc::middle::lang_items;\n-use rustc::middle::region;\n-use rustc::mir::*;\n-use rustc::ty::subst::Subst;\n-use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::middle::region;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::subst::Subst;\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_attr::{self as attr, UnwindAttr};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;"}, {"sha": "be34c84f124acc230750be42c2e52a44751e2c95", "filename": "src/librustc_mir_build/build/scope.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fscope.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -84,8 +84,8 @@ should go to.\n \n use crate::build::{BlockAnd, BlockAndExtension, BlockFrame, Builder, CFG};\n use crate::hair::{Expr, ExprRef, LintLevel};\n-use rustc::middle::region;\n-use rustc::mir::*;\n+use rustc_middle::middle::region;\n+use rustc_middle::mir::*;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::GeneratorKind;"}, {"sha": "e202ee75838f0bb02c78cd092ea729d4662050e4", "filename": "src/librustc_mir_build/hair/constant.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fconstant.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,7 +1,7 @@\n-use rustc::mir::interpret::{\n+use rustc_middle::mir::interpret::{\n     truncate, Allocation, ConstValue, LitToConstError, LitToConstInput, Scalar,\n };\n-use rustc::ty::{self, layout::Size, ParamEnv, TyCtxt, TyS};\n+use rustc_middle::ty::{self, layout::Size, ParamEnv, TyCtxt, TyS};\n use rustc_ast::ast;\n use rustc_span::symbol::Symbol;\n "}, {"sha": "500d0f9ba48db95b17b1344e353b42161fc43565", "filename": "src/librustc_mir_build/hair/cx/block.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fblock.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -2,8 +2,8 @@ use crate::hair::cx::to_ref::ToRef;\n use crate::hair::cx::Cx;\n use crate::hair::{self, *};\n \n-use rustc::middle::region;\n-use rustc::ty;\n+use rustc_middle::middle::region;\n+use rustc_middle::ty;\n use rustc_hir as hir;\n \n use rustc_index::vec::Idx;"}, {"sha": "d0ee2506d61bcaa09f3d2e0ea3c1aa97d30caa4a", "filename": "src/librustc_mir_build/hair/cx/expr.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fexpr.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -3,11 +3,11 @@ use crate::hair::cx::to_ref::ToRef;\n use crate::hair::cx::Cx;\n use crate::hair::util::UserAnnotatedTyHelpers;\n use crate::hair::*;\n-use rustc::mir::interpret::Scalar;\n-use rustc::mir::BorrowKind;\n-use rustc::ty::adjustment::{Adjust, Adjustment, AutoBorrow, AutoBorrowMutability, PointerCast};\n-use rustc::ty::subst::{InternalSubsts, SubstsRef};\n-use rustc::ty::{self, AdtKind, Ty};\n+use rustc_middle::mir::interpret::Scalar;\n+use rustc_middle::mir::BorrowKind;\n+use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow, AutoBorrowMutability, PointerCast};\n+use rustc_middle::ty::subst::{InternalSubsts, SubstsRef};\n+use rustc_middle::ty::{self, AdtKind, Ty};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, CtorOf, DefKind, Res};\n use rustc_index::vec::Idx;\n@@ -478,7 +478,7 @@ fn make_mirror_unadjusted<'a, 'tcx>(\n                             ) => {\n                                 let idx = adt_def.variant_index_with_ctor_id(variant_ctor_id);\n                                 let (d, o) = adt_def.discriminant_def_for_variant(idx);\n-                                use rustc::ty::util::IntTypeExt;\n+                                use rustc_middle::ty::util::IntTypeExt;\n                                 let ty = adt_def.repr.discr_type();\n                                 let ty = ty.to_ty(cx.tcx());\n                                 Some((d, o, ty))\n@@ -631,7 +631,7 @@ trait ToBorrowKind {\n \n impl ToBorrowKind for AutoBorrowMutability {\n     fn to_borrow_kind(&self) -> BorrowKind {\n-        use rustc::ty::adjustment::AllowTwoPhase;\n+        use rustc_middle::ty::adjustment::AllowTwoPhase;\n         match *self {\n             AutoBorrowMutability::Mut { allow_two_phase_borrow } => BorrowKind::Mut {\n                 allow_two_phase_borrow: match allow_two_phase_borrow {"}, {"sha": "265dd706ab93521be6e938540372aec454278a51", "filename": "src/librustc_mir_build/hair/cx/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,12 +5,12 @@\n use crate::hair::util::UserAnnotatedTyHelpers;\n use crate::hair::*;\n \n-use rustc::middle::region;\n-use rustc::mir::interpret::{LitToConstError, LitToConstInput};\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::subst::Subst;\n-use rustc::ty::subst::{GenericArg, InternalSubsts};\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::middle::region;\n+use rustc_middle::mir::interpret::{LitToConstError, LitToConstInput};\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::subst::Subst;\n+use rustc_middle::ty::subst::{GenericArg, InternalSubsts};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_ast::ast;\n use rustc_ast::attr;\n use rustc_hir as hir;"}, {"sha": "8c1e4de5fd1e706c10e469cf91663c6bffd3816f", "filename": "src/librustc_mir_build/hair/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fmod.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -5,13 +5,13 @@\n //! structures.\n \n use self::cx::Cx;\n-use rustc::infer::canonical::Canonical;\n-use rustc::middle::region;\n-use rustc::mir::{BinOp, BorrowKind, Field, UnOp};\n-use rustc::ty::adjustment::PointerCast;\n-use rustc::ty::layout::VariantIdx;\n-use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{AdtDef, Const, Ty, UpvarSubsts, UserType};\n+use rustc_middle::infer::canonical::Canonical;\n+use rustc_middle::middle::region;\n+use rustc_middle::mir::{BinOp, BorrowKind, Field, UnOp};\n+use rustc_middle::ty::adjustment::PointerCast;\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::{AdtDef, Const, Ty, UpvarSubsts, UserType};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_span::Span;"}, {"sha": "42622c79a29b11c660de4070ba495eb1fb2cb80d", "filename": "src/librustc_mir_build/hair/pattern/_match.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -235,11 +235,11 @@ use rustc_index::vec::Idx;\n use super::{compare_const_vals, PatternFoldable, PatternFolder};\n use super::{FieldPat, Pat, PatKind, PatRange};\n \n-use rustc::mir::interpret::{truncate, AllocId, ConstValue, Pointer, Scalar};\n-use rustc::mir::Field;\n-use rustc::ty::layout::{Integer, IntegerExt, Size, VariantIdx};\n-use rustc::ty::{self, Const, Ty, TyCtxt, TypeFoldable, VariantDef};\n-use rustc::util::common::ErrorReported;\n+use rustc_middle::mir::interpret::{truncate, AllocId, ConstValue, Pointer, Scalar};\n+use rustc_middle::mir::Field;\n+use rustc_middle::ty::layout::{Integer, IntegerExt, Size, VariantIdx};\n+use rustc_middle::ty::{self, Const, Ty, TyCtxt, TypeFoldable, VariantDef};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_attr::{SignedInt, UnsignedInt};\n use rustc_hir::def_id::DefId;\n use rustc_hir::{HirId, RangeEnd};"}, {"sha": "cdbcaea0befe8e00499ea2c0fec2bc83b3df6d6d", "filename": "src/librustc_mir_build/hair/pattern/check_match.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -4,14 +4,14 @@ use super::_match::{expand_pattern, is_useful, MatchCheckCtxt, Matrix, PatStack}\n \n use super::{PatCtxt, PatKind, PatternError};\n \n-use rustc::ty::{self, Ty, TyCtxt};\n use rustc_ast::ast::Mutability;\n use rustc_errors::{error_code, struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def::*;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{HirId, Pat};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_session::lint::builtin::BINDINGS_WITH_VARIANT_NAME;\n use rustc_session::lint::builtin::{IRREFUTABLE_LET_PATTERNS, UNREACHABLE_PATTERNS};\n use rustc_session::parse::feature_err;\n@@ -91,14 +91,14 @@ impl PatCtxt<'_, '_> {\n                 }\n                 PatternError::FloatBug => {\n                     // FIXME(#31407) this is only necessary because float parsing is buggy\n-                    ::rustc::mir::interpret::struct_error(\n+                    ::rustc_middle::mir::interpret::struct_error(\n                         self.tcx.at(pat_span),\n                         \"could not evaluate float literal (see issue #31407)\",\n                     )\n                     .emit();\n                 }\n                 PatternError::NonConstPath(span) => {\n-                    ::rustc::mir::interpret::struct_error(\n+                    ::rustc_middle::mir::interpret::struct_error(\n                         self.tcx.at(span),\n                         \"runtime values cannot be referenced in patterns\",\n                     )"}, {"sha": "ba5cafb4cf3482ecca85285caa22131063c64142", "filename": "src/librustc_mir_build/hair/pattern/const_to_pat.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cb9e36090fcaa9243b866a61044018a9e6b8c41/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs?ref=0cb9e36090fcaa9243b866a61044018a9e6b8c41", "patch": "@@ -1,5 +1,5 @@\n-use rustc::mir::Field;\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc_middle::mir::Field;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_hir as hir;\n use rustc_index::vec::Idx;\n use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};"}]}