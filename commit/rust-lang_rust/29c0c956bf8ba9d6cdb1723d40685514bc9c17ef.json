{"sha": "29c0c956bf8ba9d6cdb1723d40685514bc9c17ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YzBjOTU2YmY4YmE5ZDZjZGIxNzIzZDQwNjg1NTE0YmM5YzE3ZWY=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2015-07-10T03:08:34Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2015-07-10T23:40:46Z"}, "message": "Rename SliceConcatExt::connect to join #26900", "tree": {"sha": "cd0f3e31bd843c65966f45ff3609ba32407c0a4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd0f3e31bd843c65966f45ff3609ba32407c0a4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29c0c956bf8ba9d6cdb1723d40685514bc9c17ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29c0c956bf8ba9d6cdb1723d40685514bc9c17ef", "html_url": "https://github.com/rust-lang/rust/commit/29c0c956bf8ba9d6cdb1723d40685514bc9c17ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29c0c956bf8ba9d6cdb1723d40685514bc9c17ef/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "072d07ce9fc85728a62664ce674e26c54a759da5", "url": "https://api.github.com/repos/rust-lang/rust/commits/072d07ce9fc85728a62664ce674e26c54a759da5", "html_url": "https://github.com/rust-lang/rust/commit/072d07ce9fc85728a62664ce674e26c54a759da5"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "c4d9ef844eb8496e0f0e492153b6d20f6b72ac86", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/29c0c956bf8ba9d6cdb1723d40685514bc9c17ef/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c0c956bf8ba9d6cdb1723d40685514bc9c17ef/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=29c0c956bf8ba9d6cdb1723d40685514bc9c17ef", "patch": "@@ -1025,6 +1025,17 @@ pub trait SliceConcatExt<T: ?Sized> {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn concat(&self) -> Self::Output;\n \n+    /// Flattens a slice of `T` into a single value `Self::Output`, placing a\n+    /// given separator between each.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// assert_eq!([\"hello\", \"world\"].join(\" \"), \"hello world\");\n+    /// ```\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    fn join(&self, sep: &T) -> Self::Output;\n+\n     /// Flattens a slice of `T` into a single value `Self::Output`, placing a\n     /// given separator between each.\n     ///\n@@ -1034,6 +1045,7 @@ pub trait SliceConcatExt<T: ?Sized> {\n     /// assert_eq!([\"hello\", \"world\"].connect(\" \"), \"hello world\");\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[deprecated(since = \"1.3.0\", reason = \"renamed to join\")]\n     fn connect(&self, sep: &T) -> Self::Output;\n }\n \n@@ -1049,7 +1061,7 @@ impl<T: Clone, V: Borrow<[T]>> SliceConcatExt<T> for [V] {\n         result\n     }\n \n-    fn connect(&self, sep: &T) -> Vec<T> {\n+    fn join(&self, sep: &T) -> Vec<T> {\n         let size = self.iter().fold(0, |acc, v| acc + v.borrow().len());\n         let mut result = Vec::with_capacity(size + self.len());\n         let mut first = true;\n@@ -1059,6 +1071,10 @@ impl<T: Clone, V: Borrow<[T]>> SliceConcatExt<T> for [V] {\n         }\n         result\n     }\n+\n+    fn connect(&self, sep: &T) -> Vec<T> {\n+        self.join(sep)\n+    }\n }\n \n /// An iterator that yields the element swaps needed to produce"}, {"sha": "7e4a219fc422f4f06917a412458941918eb53eb5", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/29c0c956bf8ba9d6cdb1723d40685514bc9c17ef/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c0c956bf8ba9d6cdb1723d40685514bc9c17ef/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=29c0c956bf8ba9d6cdb1723d40685514bc9c17ef", "patch": "@@ -105,7 +105,7 @@ impl<S: Borrow<str>> SliceConcatExt<str> for [S] {\n         result\n     }\n \n-    fn connect(&self, sep: &str) -> String {\n+    fn join(&self, sep: &str) -> String {\n         if self.is_empty() {\n             return String::new();\n         }\n@@ -132,6 +132,10 @@ impl<S: Borrow<str>> SliceConcatExt<str> for [S] {\n         }\n         result\n     }\n+\n+    fn connect(&self, sep: &str) -> String {\n+        self.join(sep)\n+    }\n }\n \n /*"}]}