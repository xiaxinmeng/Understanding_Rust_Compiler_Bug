{"sha": "25d2d09da7af7fcbb0661a3ff2cd1a7fba3be86e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ZDJkMDlkYTdhZjdmY2JiMDY2MWEzZmYyY2QxYTdmYmEzYmU4NmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-11T01:26:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-11T01:26:06Z"}, "message": "Auto merge of #77649 - dash2507:replace_run_compiler, r=matthewjasper\n\nReplace run_compiler with RunCompiler builder pattern\n\nFixes #77286. Replaces rustc_driver:run_compiler with RunCompiler builder pattern.", "tree": {"sha": "390251cb579fc84ddd47bff123ff4da20e3fb736", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/390251cb579fc84ddd47bff123ff4da20e3fb736"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25d2d09da7af7fcbb0661a3ff2cd1a7fba3be86e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25d2d09da7af7fcbb0661a3ff2cd1a7fba3be86e", "html_url": "https://github.com/rust-lang/rust/commit/25d2d09da7af7fcbb0661a3ff2cd1a7fba3be86e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25d2d09da7af7fcbb0661a3ff2cd1a7fba3be86e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08764ad1638d49ee8303a8e5b1a9e439cbbc87f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/08764ad1638d49ee8303a8e5b1a9e439cbbc87f6", "html_url": "https://github.com/rust-lang/rust/commit/08764ad1638d49ee8303a8e5b1a9e439cbbc87f6"}, {"sha": "e8dca789a15c2dc082ae4240ba68a8c879753812", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8dca789a15c2dc082ae4240ba68a8c879753812", "html_url": "https://github.com/rust-lang/rust/commit/e8dca789a15c2dc082ae4240ba68a8c879753812"}], "stats": {"total": 62, "additions": 50, "deletions": 12}, "files": [{"sha": "575c2e627ed733d56f809c83f3d30710568c52bc", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 45, "deletions": 2, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/25d2d09da7af7fcbb0661a3ff2cd1a7fba3be86e/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25d2d09da7af7fcbb0661a3ff2cd1a7fba3be86e/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=25d2d09da7af7fcbb0661a3ff2cd1a7fba3be86e", "patch": "@@ -134,9 +134,52 @@ pub fn diagnostics_registry() -> Registry {\n     Registry::new(&rustc_error_codes::DIAGNOSTICS)\n }\n \n+pub struct RunCompiler<'a, 'b> {\n+    at_args: &'a [String],\n+    callbacks: &'b mut (dyn Callbacks + Send),\n+    file_loader: Option<Box<dyn FileLoader + Send + Sync>>,\n+    emitter: Option<Box<dyn Write + Send>>,\n+    make_codegen_backend:\n+        Option<Box<dyn FnOnce(&config::Options) -> Box<dyn CodegenBackend> + Send>>,\n+}\n+\n+impl<'a, 'b> RunCompiler<'a, 'b> {\n+    pub fn new(at_args: &'a [String], callbacks: &'b mut (dyn Callbacks + Send)) -> Self {\n+        Self { at_args, callbacks, file_loader: None, emitter: None, make_codegen_backend: None }\n+    }\n+    pub fn set_make_codegen_backend(\n+        &mut self,\n+        make_codegen_backend: Option<\n+            Box<dyn FnOnce(&config::Options) -> Box<dyn CodegenBackend> + Send>,\n+        >,\n+    ) -> &mut Self {\n+        self.make_codegen_backend = make_codegen_backend;\n+        self\n+    }\n+    pub fn set_emitter(&mut self, emitter: Option<Box<dyn Write + Send>>) -> &mut Self {\n+        self.emitter = emitter;\n+        self\n+    }\n+    pub fn set_file_loader(\n+        &mut self,\n+        file_loader: Option<Box<dyn FileLoader + Send + Sync>>,\n+    ) -> &mut Self {\n+        self.file_loader = file_loader;\n+        self\n+    }\n+    pub fn run(self) -> interface::Result<()> {\n+        run_compiler(\n+            self.at_args,\n+            self.callbacks,\n+            self.file_loader,\n+            self.emitter,\n+            self.make_codegen_backend,\n+        )\n+    }\n+}\n // Parse args and run the compiler. This is the primary entry point for rustc.\n // The FileLoader provides a way to load files from sources other than the file system.\n-pub fn run_compiler(\n+fn run_compiler(\n     at_args: &[String],\n     callbacks: &mut (dyn Callbacks + Send),\n     file_loader: Option<Box<dyn FileLoader + Send + Sync>>,\n@@ -1285,7 +1328,7 @@ pub fn main() -> ! {\n                 })\n             })\n             .collect::<Vec<_>>();\n-        run_compiler(&args, &mut callbacks, None, None, None)\n+        RunCompiler::new(&args, &mut callbacks).run()\n     });\n     // The extra `\\t` is necessary to align this label with the others.\n     print_time_passes_entry(callbacks.time_passes, \"\\ttotal\", start.elapsed());"}, {"sha": "a9520b59277acc00c2a3e656d482f463f2c3b613", "filename": "src/test/ui-fulldeps/compiler-calls.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/25d2d09da7af7fcbb0661a3ff2cd1a7fba3be86e/src%2Ftest%2Fui-fulldeps%2Fcompiler-calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25d2d09da7af7fcbb0661a3ff2cd1a7fba3be86e/src%2Ftest%2Fui-fulldeps%2Fcompiler-calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fcompiler-calls.rs?ref=25d2d09da7af7fcbb0661a3ff2cd1a7fba3be86e", "patch": "@@ -26,13 +26,8 @@ fn main() {\n     let mut count = 1;\n     let args = vec![\"compiler-calls\".to_string(), \"foo.rs\".to_string()];\n     rustc_driver::catch_fatal_errors(|| {\n-        rustc_driver::run_compiler(\n-            &args,\n-            &mut TestCalls { count: &mut count },\n-            None,\n-            None,\n-            None,\n-        ).ok();\n-    }).ok();\n+        rustc_driver::RunCompiler::new(&args, &mut TestCalls { count: &mut count }).run().ok();\n+    })\n+    .ok();\n     assert_eq!(count, 2);\n }"}, {"sha": "377f6d22446357ced4d55e25b7d5a13bc9d66349", "filename": "src/tools/clippy/src/driver.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/25d2d09da7af7fcbb0661a3ff2cd1a7fba3be86e/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25d2d09da7af7fcbb0661a3ff2cd1a7fba3be86e/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs?ref=25d2d09da7af7fcbb0661a3ff2cd1a7fba3be86e", "patch": "@@ -357,7 +357,7 @@ pub fn main() {\n                 args.extend(vec![\"--sysroot\".into(), sys_root]);\n             };\n \n-            return rustc_driver::run_compiler(&args, &mut DefaultCallbacks, None, None, None);\n+            return rustc_driver::RunCompiler::new(&args, &mut DefaultCallbacks).run();\n         }\n \n         if orig_args.iter().any(|a| a == \"--version\" || a == \"-V\") {\n@@ -420,6 +420,6 @@ pub fn main() {\n         let mut default = DefaultCallbacks;\n         let callbacks: &mut (dyn rustc_driver::Callbacks + Send) =\n             if clippy_enabled { &mut clippy } else { &mut default };\n-        rustc_driver::run_compiler(&args, callbacks, None, None, None)\n+        rustc_driver::RunCompiler::new(&args, callbacks).run()\n     }))\n }"}]}