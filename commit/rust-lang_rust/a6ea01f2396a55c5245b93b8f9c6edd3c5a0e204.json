{"sha": "a6ea01f2396a55c5245b93b8f9c6edd3c5a0e204", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZWEwMWYyMzk2YTU1YzUyNDViOTNiOGY5YzZlZGQzYzVhMGUyMDQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-25T11:07:20Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-25T11:07:20Z"}, "message": "fix length of slice returned from read_c_str", "tree": {"sha": "150c96da8f48c5931ef0973c1cf0b54609d864e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/150c96da8f48c5931ef0973c1cf0b54609d864e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6ea01f2396a55c5245b93b8f9c6edd3c5a0e204", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6ea01f2396a55c5245b93b8f9c6edd3c5a0e204", "html_url": "https://github.com/rust-lang/rust/commit/a6ea01f2396a55c5245b93b8f9c6edd3c5a0e204", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6ea01f2396a55c5245b93b8f9c6edd3c5a0e204/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fac350f9982b78ef5c74ac7db98933262d361b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fac350f9982b78ef5c74ac7db98933262d361b5", "html_url": "https://github.com/rust-lang/rust/commit/0fac350f9982b78ef5c74ac7db98933262d361b5"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "0ecec753398612183fe49157b2c7c6bea0022c40", "filename": "src/librustc/mir/interpret/allocation.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a6ea01f2396a55c5245b93b8f9c6edd3c5a0e204/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6ea01f2396a55c5245b93b8f9c6edd3c5a0e204/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs?ref=a6ea01f2396a55c5245b93b8f9c6edd3c5a0e204", "patch": "@@ -172,9 +172,11 @@ impl<'tcx, Tag: Copy, Extra: AllocationExtra<Tag>> Allocation<Tag, Extra> {\n         let offset = ptr.offset.bytes() as usize;\n         match self.bytes[offset..].iter().position(|&c| c == 0) {\n             Some(size) => {\n-                let size = Size::from_bytes((size + 1) as u64);\n-                // Go through `get_bytes` for checks and AllocationExtra hooks\n-                self.get_bytes(cx, ptr, size)\n+                let size_with_null = Size::from_bytes((size + 1) as u64);\n+                // Go through `get_bytes` for checks and AllocationExtra hooks.\n+                // We read the null, so we include it in the requestm, but we want it removed\n+                // from the result!\n+                Ok(&self.get_bytes(cx, ptr, size_with_null)?[..size])\n             }\n             None => err!(UnterminatedCString(ptr.erase_tag())),\n         }"}]}