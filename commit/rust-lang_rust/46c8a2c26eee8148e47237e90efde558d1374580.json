{"sha": "46c8a2c26eee8148e47237e90efde558d1374580", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2YzhhMmMyNmVlZTgxNDhlNDcyMzdlOTBlZmRlNTU4ZDEzNzQ1ODA=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-03-23T03:13:54Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-03-24T01:08:30Z"}, "message": "Remove `-Z incremental`.\n\n`-C incremental` was introduced over two years ago. `-Z incremental` was\nkept for transitioning, but it's been long enough now that it should be\nok to remove it.", "tree": {"sha": "2e0e87354ab4de06b32b8eda5ca2bdea4558878f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e0e87354ab4de06b32b8eda5ca2bdea4558878f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46c8a2c26eee8148e47237e90efde558d1374580", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46c8a2c26eee8148e47237e90efde558d1374580", "html_url": "https://github.com/rust-lang/rust/commit/46c8a2c26eee8148e47237e90efde558d1374580", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46c8a2c26eee8148e47237e90efde558d1374580/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3782671cf1e190ffa470128a53329177b2c9a2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3782671cf1e190ffa470128a53329177b2c9a2f", "html_url": "https://github.com/rust-lang/rust/commit/a3782671cf1e190ffa470128a53329177b2c9a2f"}], "stats": {"total": 89, "additions": 29, "deletions": 60}, "files": [{"sha": "6a6d0a8f061eb0cf154d6206d8e2289e82643fa0", "filename": "src/librustc_interface/tests.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Flibrustc_interface%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Flibrustc_interface%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Ftests.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -546,8 +546,6 @@ fn test_debugging_options_tracking_hash() {\n     assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n     opts.debugging_opts.parse_only = true;\n     assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n-    opts.debugging_opts.incremental = Some(String::from(\"abc\"));\n-    assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n     opts.debugging_opts.dump_dep_graph = true;\n     assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n     opts.debugging_opts.query_dep_graph = true;"}, {"sha": "663cfa223c7a8ee73e6b64923072c14bd9ef4248", "filename": "src/librustc_session/config.rs", "status": "modified", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Flibrustc_session%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Flibrustc_session%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fconfig.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -1286,33 +1286,6 @@ fn check_thread_count(debugging_opts: &DebuggingOptions, error_format: ErrorOutp\n     }\n }\n \n-fn select_incremental_path(\n-    debugging_opts: &DebuggingOptions,\n-    cg: &CodegenOptions,\n-    error_format: ErrorOutputType,\n-) -> Option<PathBuf> {\n-    match (&debugging_opts.incremental, &cg.incremental) {\n-        (Some(path1), Some(path2)) => {\n-            if path1 != path2 {\n-                early_error(\n-                    error_format,\n-                    &format!(\n-                        \"conflicting paths for `-Z incremental` and \\\n-                         `-C incremental` specified: {} versus {}\",\n-                        path1, path2\n-                    ),\n-                );\n-            } else {\n-                Some(path1)\n-            }\n-        }\n-        (Some(path), None) => Some(path),\n-        (None, Some(path)) => Some(path),\n-        (None, None) => None,\n-    }\n-    .map(PathBuf::from)\n-}\n-\n fn collect_print_requests(\n     cg: &mut CodegenOptions,\n     dopts: &mut DebuggingOptions,\n@@ -1677,7 +1650,7 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n \n     check_thread_count(&debugging_opts, error_format);\n \n-    let incremental = select_incremental_path(&debugging_opts, &cg, error_format);\n+    let incremental = cg.incremental.as_ref().map(|m| PathBuf::from(m));\n \n     if debugging_opts.profile && incremental.is_some() {\n         early_error("}, {"sha": "72c720d09b0bfa8c106103cf03c0643abf0c460d", "filename": "src/librustc_session/options.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Flibrustc_session%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Flibrustc_session%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Foptions.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -789,8 +789,6 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"support compiling tests with panic=abort\"),\n     dep_tasks: bool = (false, parse_bool, [UNTRACKED],\n         \"print tasks that execute and the color their dep node gets (requires debug build)\"),\n-    incremental: Option<String> = (None, parse_opt_string, [UNTRACKED],\n-        \"enable incremental compilation (experimental)\"),\n     incremental_info: bool = (false, parse_bool, [UNTRACKED],\n         \"print high-level information about incremental reuse (or the lack thereof)\"),\n     incremental_verify_ich: bool = (false, parse_bool, [UNTRACKED],"}, {"sha": "1cb85382239cd32f4586a925b042cdaf43605d22", "filename": "src/test/codegen-units/partitioning/extern-drop-glue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -1,9 +1,9 @@\n // ignore-tidy-linelength\n \n-// We specify -Z incremental here because we want to test the partitioning for\n+// We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n // We specify opt-level=0 because `drop_in_place` is `Internal` when optimizing\n-// compile-flags:-Zprint-mono-items=lazy -Zincremental=tmp/partitioning-tests/extern-drop-glue\n+// compile-flags:-Zprint-mono-items=lazy -Cincremental=tmp/partitioning-tests/extern-drop-glue\n // compile-flags:-Zinline-in-all-cgus -Copt-level=0\n \n #![allow(dead_code)]"}, {"sha": "88d6116a987fe59e64de5de54e2ad5601d3c7a4c", "filename": "src/test/codegen-units/partitioning/extern-generic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -1,7 +1,7 @@\n // ignore-tidy-linelength\n-// We specify -Z incremental here because we want to test the partitioning for\n+// We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n-// compile-flags:-Zprint-mono-items=eager -Zincremental=tmp/partitioning-tests/extern-generic -Zshare-generics=y\n+// compile-flags:-Zprint-mono-items=eager -Cincremental=tmp/partitioning-tests/extern-generic -Zshare-generics=y\n \n #![allow(dead_code)]\n #![crate_type=\"lib\"]"}, {"sha": "7afeb0a0f367b8743c1da390c24dfdbb95e0663d", "filename": "src/test/codegen-units/partitioning/inlining-from-extern-crate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -1,7 +1,7 @@\n // ignore-tidy-linelength\n-// We specify -Z incremental here because we want to test the partitioning for\n+// We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n-// compile-flags:-Zprint-mono-items=lazy -Zincremental=tmp/partitioning-tests/inlining-from-extern-crate\n+// compile-flags:-Zprint-mono-items=lazy -Cincremental=tmp/partitioning-tests/inlining-from-extern-crate\n // compile-flags:-Zinline-in-all-cgus\n \n #![crate_type=\"lib\"]"}, {"sha": "c082b408278783381694ab55510309c39be0f4d4", "filename": "src/test/codegen-units/partitioning/local-drop-glue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -1,8 +1,8 @@\n // ignore-tidy-linelength\n-// We specify -Z incremental here because we want to test the partitioning for\n+// We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n // We specify opt-level=0 because `drop_in_place` is `Internal` when optimizing\n-// compile-flags:-Zprint-mono-items=lazy -Zincremental=tmp/partitioning-tests/local-drop-glue\n+// compile-flags:-Zprint-mono-items=lazy -Cincremental=tmp/partitioning-tests/local-drop-glue\n // compile-flags:-Zinline-in-all-cgus -Copt-level=0\n \n #![allow(dead_code)]"}, {"sha": "4518166a1c9ba99c9d2931eea38ebfd252f490b7", "filename": "src/test/codegen-units/partitioning/local-generic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-generic.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -1,7 +1,7 @@\n // ignore-tidy-linelength\n-// We specify -Z incremental here because we want to test the partitioning for\n+// We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n-// compile-flags:-Zprint-mono-items=eager -Zincremental=tmp/partitioning-tests/local-generic\n+// compile-flags:-Zprint-mono-items=eager -Cincremental=tmp/partitioning-tests/local-generic\n \n #![allow(dead_code)]\n #![crate_type=\"lib\"]"}, {"sha": "6322f55d2b74045553dd9e6b41ec43415712c367", "filename": "src/test/codegen-units/partitioning/local-inlining-but-not-all.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining-but-not-all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining-but-not-all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining-but-not-all.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -1,7 +1,7 @@\n // ignore-tidy-linelength\n-// We specify -Z incremental here because we want to test the partitioning for\n+// We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n-// compile-flags:-Zprint-mono-items=lazy -Zincremental=tmp/partitioning-tests/local-inlining-but-not-all\n+// compile-flags:-Zprint-mono-items=lazy -Cincremental=tmp/partitioning-tests/local-inlining-but-not-all\n // compile-flags:-Zinline-in-all-cgus=no\n \n #![allow(dead_code)]"}, {"sha": "d75dfc91262e2eff00574772a0af8b04cdc2f93d", "filename": "src/test/codegen-units/partitioning/local-inlining.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -1,7 +1,7 @@\n // ignore-tidy-linelength\n-// We specify -Z incremental here because we want to test the partitioning for\n+// We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n-// compile-flags:-Zprint-mono-items=lazy -Zincremental=tmp/partitioning-tests/local-inlining\n+// compile-flags:-Zprint-mono-items=lazy -Cincremental=tmp/partitioning-tests/local-inlining\n // compile-flags:-Zinline-in-all-cgus\n \n #![allow(dead_code)]"}, {"sha": "3cf03966865e10992b68953298785d15deda9507", "filename": "src/test/codegen-units/partitioning/local-transitive-inlining.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -1,7 +1,7 @@\n // ignore-tidy-linelength\n-// We specify -Z incremental here because we want to test the partitioning for\n+// We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n-// compile-flags:-Zprint-mono-items=lazy -Zincremental=tmp/partitioning-tests/local-transitive-inlining\n+// compile-flags:-Zprint-mono-items=lazy -Cincremental=tmp/partitioning-tests/local-transitive-inlining\n // compile-flags:-Zinline-in-all-cgus\n \n #![allow(dead_code)]"}, {"sha": "6c55904c1bf10da732a069d95fcf3c8ec2738311", "filename": "src/test/codegen-units/partitioning/methods-are-with-self-type.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fmethods-are-with-self-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fmethods-are-with-self-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fmethods-are-with-self-type.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -4,9 +4,9 @@\n // ignore-test\n \n // ignore-tidy-linelength\n-// We specify -Z incremental here because we want to test the partitioning for\n+// We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n-// compile-flags:-Zprint-mono-items=lazy -Zincremental=tmp/partitioning-tests/methods-are-with-self-type\n+// compile-flags:-Zprint-mono-items=lazy -Cincremental=tmp/partitioning-tests/methods-are-with-self-type\n \n #![allow(dead_code)]\n #![feature(start)]"}, {"sha": "c8ceeafd0bfe9ec5e034edfcdef8f5ccf43b99ab", "filename": "src/test/codegen-units/partitioning/regular-modules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fregular-modules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fregular-modules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fregular-modules.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -1,7 +1,7 @@\n // ignore-tidy-linelength\n-// We specify -Z incremental here because we want to test the partitioning for\n+// We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n-// compile-flags:-Zprint-mono-items=eager -Zincremental=tmp/partitioning-tests/regular-modules\n+// compile-flags:-Zprint-mono-items=eager -Cincremental=tmp/partitioning-tests/regular-modules\n \n #![allow(dead_code)]\n #![crate_type=\"lib\"]"}, {"sha": "99142dd6b7e254f3db73f0958c0e15a74d0c2e01", "filename": "src/test/codegen-units/partitioning/shared-generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fshared-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fshared-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fshared-generics.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -2,7 +2,7 @@\n // no-prefer-dynamic\n // NOTE: We always compile this test with -Copt-level=0 because higher opt-levels\n //       prevent drop-glue from participating in share-generics.\n-// compile-flags:-Zprint-mono-items=eager -Zshare-generics=yes -Zincremental=tmp/partitioning-tests/shared-generics-exe -Copt-level=0\n+// compile-flags:-Zprint-mono-items=eager -Zshare-generics=yes -Cincremental=tmp/partitioning-tests/shared-generics-exe -Copt-level=0\n \n #![crate_type=\"rlib\"]\n "}, {"sha": "5eac046b810d777f4167fa57b174acdc6d00b3c0", "filename": "src/test/codegen-units/partitioning/statics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fstatics.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -1,6 +1,6 @@\n-// We specify -Z incremental here because we want to test the partitioning for\n+// We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n-// compile-flags:-Zprint-mono-items=lazy -Zincremental=tmp/partitioning-tests/statics\n+// compile-flags:-Zprint-mono-items=lazy -Cincremental=tmp/partitioning-tests/statics\n \n #![crate_type=\"rlib\"]\n "}, {"sha": "5a1d95d2669871b3a0fa01af660d2cae9f49ada4", "filename": "src/test/codegen-units/partitioning/vtable-through-const.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -1,8 +1,8 @@\n // ignore-tidy-linelength\n \n-// We specify -Z incremental here because we want to test the partitioning for\n+// We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n-// compile-flags:-Zprint-mono-items=lazy -Zincremental=tmp/partitioning-tests/vtable-through-const\n+// compile-flags:-Zprint-mono-items=lazy -Cincremental=tmp/partitioning-tests/vtable-through-const\n // compile-flags:-Zinline-in-all-cgus\n \n // This test case makes sure, that references made through constants are"}, {"sha": "4508f5b7f95f4d276d1c233f7d2ecc68b1b52b16", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c8a2c26eee8148e47237e90efde558d1374580/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=46c8a2c26eee8148e47237e90efde558d1374580", "patch": "@@ -2570,12 +2570,12 @@ impl<'test> TestCx<'test> {\n         //   - if `cfail`, expect compilation to fail\n         //   - if `rfail`, expect execution to fail\n         // - create a directory build/foo/bar.incremental\n-        // - compile foo/bar.rs with -Z incremental=.../foo/bar.incremental and -C rpass1\n+        // - compile foo/bar.rs with -C incremental=.../foo/bar.incremental and -C rpass1\n         //   - because name of revision starts with \"rpass\", expect success\n-        // - compile foo/bar.rs with -Z incremental=.../foo/bar.incremental and -C cfail2\n+        // - compile foo/bar.rs with -C incremental=.../foo/bar.incremental and -C cfail2\n         //   - because name of revision starts with \"cfail\", expect an error\n         //   - load expected errors as usual, but filter for those that end in `[rfail2]`\n-        // - compile foo/bar.rs with -Z incremental=.../foo/bar.incremental and -C rpass3\n+        // - compile foo/bar.rs with -C incremental=.../foo/bar.incremental and -C rpass3\n         //   - because name of revision starts with \"rpass\", expect success\n         // - execute build/foo/bar.exe and save output\n         //"}]}