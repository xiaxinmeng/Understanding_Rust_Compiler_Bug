{"sha": "c6bb62810ae226b35e0181d8c4efc6d0377d196d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2YmI2MjgxMGFlMjI2YjM1ZTAxODFkOGM0ZWZjNmQwMzc3ZDE5NmQ=", "commit": {"author": {"name": "Andrea Nall", "email": "anall@andreanall.com", "date": "2021-02-15T22:58:03Z"}, "committer": {"name": "Andrea Nall", "email": "anall@andreanall.com", "date": "2021-02-15T22:59:47Z"}, "message": "requested/proposed changes", "tree": {"sha": "376b9a408b1356baaa033331c652dad032937aa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/376b9a408b1356baaa033331c652dad032937aa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6bb62810ae226b35e0181d8c4efc6d0377d196d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6bb62810ae226b35e0181d8c4efc6d0377d196d", "html_url": "https://github.com/rust-lang/rust/commit/c6bb62810ae226b35e0181d8c4efc6d0377d196d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6bb62810ae226b35e0181d8c4efc6d0377d196d/comments", "author": {"login": "anall", "id": 12371, "node_id": "MDQ6VXNlcjEyMzcx", "avatar_url": "https://avatars.githubusercontent.com/u/12371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anall", "html_url": "https://github.com/anall", "followers_url": "https://api.github.com/users/anall/followers", "following_url": "https://api.github.com/users/anall/following{/other_user}", "gists_url": "https://api.github.com/users/anall/gists{/gist_id}", "starred_url": "https://api.github.com/users/anall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anall/subscriptions", "organizations_url": "https://api.github.com/users/anall/orgs", "repos_url": "https://api.github.com/users/anall/repos", "events_url": "https://api.github.com/users/anall/events{/privacy}", "received_events_url": "https://api.github.com/users/anall/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anall", "id": 12371, "node_id": "MDQ6VXNlcjEyMzcx", "avatar_url": "https://avatars.githubusercontent.com/u/12371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anall", "html_url": "https://github.com/anall", "followers_url": "https://api.github.com/users/anall/followers", "following_url": "https://api.github.com/users/anall/following{/other_user}", "gists_url": "https://api.github.com/users/anall/gists{/gist_id}", "starred_url": "https://api.github.com/users/anall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anall/subscriptions", "organizations_url": "https://api.github.com/users/anall/orgs", "repos_url": "https://api.github.com/users/anall/repos", "events_url": "https://api.github.com/users/anall/events{/privacy}", "received_events_url": "https://api.github.com/users/anall/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ef202520f9c4c87dd6218bbfbbf57587e88f8be", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ef202520f9c4c87dd6218bbfbbf57587e88f8be", "html_url": "https://github.com/rust-lang/rust/commit/5ef202520f9c4c87dd6218bbfbbf57587e88f8be"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "83b13e7d93c11bfc49c38d7f2c291993acc466ee", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c6bb62810ae226b35e0181d8c4efc6d0377d196d/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6bb62810ae226b35e0181d8c4efc6d0377d196d/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=c6bb62810ae226b35e0181d8c4efc6d0377d196d", "patch": "@@ -169,10 +169,12 @@ symbols! {\n         Option,\n         Ord,\n         Ordering,\n+        OsString,\n         Output,\n         Param,\n         PartialEq,\n         PartialOrd,\n+        PathBuf,\n         Pending,\n         Pin,\n         Poll,\n@@ -198,6 +200,7 @@ symbols! {\n         StructuralPartialEq,\n         Sync,\n         Target,\n+        ToOwned,\n         Try,\n         Ty,\n         TyCtxt,\n@@ -796,7 +799,6 @@ symbols! {\n         options,\n         or,\n         or_patterns,\n-        os_string_type,\n         other,\n         out,\n         overlapping_marker_traits,\n@@ -825,7 +827,6 @@ symbols! {\n         pat2018,\n         pat2021,\n         path,\n-        path_buf_type,\n         pattern_parentheses,\n         phantom_data,\n         pin,\n@@ -1086,7 +1087,6 @@ symbols! {\n         slice,\n         slice_alloc,\n         slice_patterns,\n-        slice_to_vec_method,\n         slice_u8,\n         slice_u8_alloc,\n         slicing_syntax,\n@@ -1162,7 +1162,6 @@ symbols! {\n         then_with,\n         thread,\n         thread_local,\n-        to_owned_trait,\n         tool_attributes,\n         tool_lints,\n         trace_macros,"}, {"sha": "cec322518190eec1a97cf6d703173682862c70c6", "filename": "library/alloc/src/borrow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6bb62810ae226b35e0181d8c4efc6d0377d196d/library%2Falloc%2Fsrc%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6bb62810ae226b35e0181d8c4efc6d0377d196d/library%2Falloc%2Fsrc%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fborrow.rs?ref=c6bb62810ae226b35e0181d8c4efc6d0377d196d", "patch": "@@ -32,7 +32,7 @@ where\n /// to `T`. The `ToOwned` trait generalizes `Clone` to construct owned data\n /// from any borrow of a given type.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[cfg_attr(not(test), rustc_diagnostic_item = \"to_owned_trait\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"ToOwned\")]\n pub trait ToOwned {\n     /// The resulting type after obtaining ownership.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "839f742f1afa750d8569962fb5a761ef8d5fb463", "filename": "library/alloc/src/slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6bb62810ae226b35e0181d8c4efc6d0377d196d/library%2Falloc%2Fsrc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6bb62810ae226b35e0181d8c4efc6d0377d196d/library%2Falloc%2Fsrc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fslice.rs?ref=c6bb62810ae226b35e0181d8c4efc6d0377d196d", "patch": "@@ -220,6 +220,7 @@ mod hack {\n }\n \n #[lang = \"slice_alloc\"]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"slice\")]\n #[cfg(not(test))]\n impl<T> [T] {\n     /// Sorts the slice.\n@@ -442,7 +443,6 @@ impl<T> [T] {\n     /// // Here, `s` and `x` can be modified independently.\n     /// ```\n     #[rustc_conversion_suggestion]\n-    #[rustc_diagnostic_item = \"slice_to_vec_method\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn to_vec(&self) -> Vec<T>"}, {"sha": "6af5adf4cd860b693acb434be5b659bd6eef70e5", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6bb62810ae226b35e0181d8c4efc6d0377d196d/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6bb62810ae226b35e0181d8c4efc6d0377d196d/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=c6bb62810ae226b35e0181d8c4efc6d0377d196d", "patch": "@@ -71,7 +71,7 @@ use crate::sys_common::{AsInner, FromInner, IntoInner};\n /// [`CStr`]: crate::ffi::CStr\n /// [conversions]: super#conversions\n #[derive(Clone)]\n-#[cfg_attr(not(test), rustc_diagnostic_item = \"os_string_type\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"OsString\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct OsString {\n     inner: Buf,"}, {"sha": "759b233c7c138b80bb0371c5e5e55002da2c3c41", "filename": "library/std/src/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6bb62810ae226b35e0181d8c4efc6d0377d196d/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6bb62810ae226b35e0181d8c4efc6d0377d196d/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=c6bb62810ae226b35e0181d8c4efc6d0377d196d", "patch": "@@ -1066,7 +1066,7 @@ impl FusedIterator for Ancestors<'_> {}\n ///\n /// Which method works best depends on what kind of situation you're in.\n #[derive(Clone)]\n-#[cfg_attr(not(test), rustc_diagnostic_item = \"path_buf_type\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"PathBuf\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n // FIXME:\n // `PathBuf::as_mut_vec` current implementation relies"}]}