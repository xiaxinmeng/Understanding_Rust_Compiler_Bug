{"sha": "c5d60910ca81736e498b307dbf7dcea26867f9b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZDYwOTEwY2E4MTczNmU0OThiMzA3ZGJmN2RjZWEyNjg2N2Y5YjE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-30T14:22:19Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-31T10:56:51Z"}, "message": "libstd: deny(elided_lifetimes_in_paths), fixes in wasi", "tree": {"sha": "1c3a7c3e37796b4b096271459e8a4071695b2c11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c3a7c3e37796b4b096271459e8a4071695b2c11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5d60910ca81736e498b307dbf7dcea26867f9b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5d60910ca81736e498b307dbf7dcea26867f9b1", "html_url": "https://github.com/rust-lang/rust/commit/c5d60910ca81736e498b307dbf7dcea26867f9b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5d60910ca81736e498b307dbf7dcea26867f9b1/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f4df8c0c20969a1059a4b0cdf63e4ac33447e1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f4df8c0c20969a1059a4b0cdf63e4ac33447e1b", "html_url": "https://github.com/rust-lang/rust/commit/6f4df8c0c20969a1059a4b0cdf63e4ac33447e1b"}], "stats": {"total": 50, "additions": 25, "deletions": 25}, "files": [{"sha": "29e1880b8f135744cb4e713302c4b7eaf914d7f7", "filename": "src/libstd/sys/wasi/fd.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c5d60910ca81736e498b307dbf7dcea26867f9b1/src%2Flibstd%2Fsys%2Fwasi%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5d60910ca81736e498b307dbf7dcea26867f9b1/src%2Flibstd%2Fsys%2Fwasi%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Ffd.rs?ref=c5d60910ca81736e498b307dbf7dcea26867f9b1", "patch": "@@ -23,25 +23,25 @@ pub type RiFlags = u16;\n pub type RoFlags = u16;\n pub type SiFlags = u16;\n \n-fn iovec(a: &mut [IoVecMut]) -> (*const libc::__wasi_iovec_t, usize) {\n+fn iovec(a: &mut [IoVecMut<'_>]) -> (*const libc::__wasi_iovec_t, usize) {\n     assert_eq!(\n-        mem::size_of::<IoVecMut>(),\n+        mem::size_of::<IoVecMut<'_>>(),\n         mem::size_of::<libc::__wasi_iovec_t>()\n     );\n     assert_eq!(\n-        mem::align_of::<IoVecMut>(),\n+        mem::align_of::<IoVecMut<'_>>(),\n         mem::align_of::<libc::__wasi_iovec_t>()\n     );\n     (a.as_ptr() as *const libc::__wasi_iovec_t, a.len())\n }\n \n-fn ciovec(a: &[IoVec]) -> (*const libc::__wasi_ciovec_t, usize) {\n+fn ciovec(a: &[IoVec<'_>]) -> (*const libc::__wasi_ciovec_t, usize) {\n     assert_eq!(\n-        mem::size_of::<IoVec>(),\n+        mem::size_of::<IoVec<'_>>(),\n         mem::size_of::<libc::__wasi_ciovec_t>()\n     );\n     assert_eq!(\n-        mem::align_of::<IoVec>(),\n+        mem::align_of::<IoVec<'_>>(),\n         mem::align_of::<libc::__wasi_ciovec_t>()\n     );\n     (a.as_ptr() as *const libc::__wasi_ciovec_t, a.len())\n@@ -56,28 +56,28 @@ impl WasiFd {\n         cvt_wasi(unsafe { libc::__wasi_fd_datasync(self.fd) })\n     }\n \n-    pub fn pread(&self, bufs: &mut [IoVecMut], offset: u64) -> io::Result<usize> {\n+    pub fn pread(&self, bufs: &mut [IoVecMut<'_>], offset: u64) -> io::Result<usize> {\n         let mut read = 0;\n         let (ptr, len) = iovec(bufs);\n         cvt_wasi(unsafe { libc::__wasi_fd_pread(self.fd, ptr, len, offset, &mut read) })?;\n         Ok(read)\n     }\n \n-    pub fn pwrite(&self, bufs: &[IoVec], offset: u64) -> io::Result<usize> {\n+    pub fn pwrite(&self, bufs: &[IoVec<'_>], offset: u64) -> io::Result<usize> {\n         let mut read = 0;\n         let (ptr, len) = ciovec(bufs);\n         cvt_wasi(unsafe { libc::__wasi_fd_pwrite(self.fd, ptr, len, offset, &mut read) })?;\n         Ok(read)\n     }\n \n-    pub fn read(&self, bufs: &mut [IoVecMut]) -> io::Result<usize> {\n+    pub fn read(&self, bufs: &mut [IoVecMut<'_>]) -> io::Result<usize> {\n         let mut read = 0;\n         let (ptr, len) = iovec(bufs);\n         cvt_wasi(unsafe { libc::__wasi_fd_read(self.fd, ptr, len, &mut read) })?;\n         Ok(read)\n     }\n \n-    pub fn write(&self, bufs: &[IoVec]) -> io::Result<usize> {\n+    pub fn write(&self, bufs: &[IoVec<'_>]) -> io::Result<usize> {\n         let mut read = 0;\n         let (ptr, len) = ciovec(bufs);\n         cvt_wasi(unsafe { libc::__wasi_fd_write(self.fd, ptr, len, &mut read) })?;\n@@ -281,7 +281,7 @@ impl WasiFd {\n \n     pub fn sock_recv(\n         &self,\n-        ri_data: &mut [IoVecMut],\n+        ri_data: &mut [IoVecMut<'_>],\n         ri_flags: RiFlags,\n     ) -> io::Result<(usize, RoFlags)> {\n         let mut ro_datalen = 0;\n@@ -293,7 +293,7 @@ impl WasiFd {\n         Ok((ro_datalen, ro_flags))\n     }\n \n-    pub fn sock_send(&self, si_data: &[IoVec], si_flags: SiFlags) -> io::Result<usize> {\n+    pub fn sock_send(&self, si_data: &[IoVec<'_>], si_flags: SiFlags) -> io::Result<usize> {\n         let mut so_datalen = 0;\n         let (ptr, len) = ciovec(si_data);\n         cvt_wasi(unsafe { libc::__wasi_sock_send(self.fd, ptr, len, si_flags, &mut so_datalen) })?;"}, {"sha": "68c8e9356a89a7448d7e406a53662844eb0016f3", "filename": "src/libstd/sys/wasi/fs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c5d60910ca81736e498b307dbf7dcea26867f9b1/src%2Flibstd%2Fsys%2Fwasi%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5d60910ca81736e498b307dbf7dcea26867f9b1/src%2Flibstd%2Fsys%2Fwasi%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Ffs.rs?ref=c5d60910ca81736e498b307dbf7dcea26867f9b1", "patch": "@@ -82,7 +82,7 @@ impl Eq for FilePermissions {\n }\n \n impl fmt::Debug for FilePermissions {\n-    fn fmt(&self, _f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self.0 {}\n     }\n }\n@@ -125,13 +125,13 @@ impl Hash for FileType {\n }\n \n impl fmt::Debug for FileType {\n-    fn fmt(&self, _f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self.0 {}\n     }\n }\n \n impl fmt::Debug for ReadDir {\n-    fn fmt(&self, _f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self.0 {}\n     }\n }\n@@ -236,7 +236,7 @@ impl DirBuilder {\n }\n \n impl fmt::Debug for File {\n-    fn fmt(&self, _f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self.0 {}\n     }\n }"}, {"sha": "1579aa4b572b043517384e77db28b8957a3a771c", "filename": "src/libstd/sys/wasi/net.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c5d60910ca81736e498b307dbf7dcea26867f9b1/src%2Flibstd%2Fsys%2Fwasi%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5d60910ca81736e498b307dbf7dcea26867f9b1/src%2Flibstd%2Fsys%2Fwasi%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Fnet.rs?ref=c5d60910ca81736e498b307dbf7dcea26867f9b1", "patch": "@@ -94,7 +94,7 @@ impl TcpStream {\n }\n \n impl fmt::Debug for TcpStream {\n-    fn fmt(&self, _f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self.0 {}\n     }\n }\n@@ -144,7 +144,7 @@ impl TcpListener {\n }\n \n impl fmt::Debug for TcpListener {\n-    fn fmt(&self, _f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self.0 {}\n     }\n }\n@@ -282,7 +282,7 @@ impl UdpSocket {\n }\n \n impl fmt::Debug for UdpSocket {\n-    fn fmt(&self, _f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self.0 {}\n     }\n }"}, {"sha": "6d4d6aae61b9fa385e7ff0547920cde26250b695", "filename": "src/libstd/sys/wasi/os.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c5d60910ca81736e498b307dbf7dcea26867f9b1/src%2Flibstd%2Fsys%2Fwasi%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5d60910ca81736e498b307dbf7dcea26867f9b1/src%2Flibstd%2Fsys%2Fwasi%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Fos.rs?ref=c5d60910ca81736e498b307dbf7dcea26867f9b1", "patch": "@@ -41,7 +41,7 @@ pub fn chdir(_: &path::Path) -> io::Result<()> {\n \n pub struct SplitPaths<'a>(&'a Void);\n \n-pub fn split_paths(_unparsed: &OsStr) -> SplitPaths {\n+pub fn split_paths(_unparsed: &OsStr) -> SplitPaths<'_> {\n     panic!(\"unsupported\")\n }\n \n@@ -62,7 +62,7 @@ pub fn join_paths<I, T>(_paths: I) -> Result<OsString, JoinPathsError>\n }\n \n impl fmt::Display for JoinPathsError {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         \"not supported on wasm yet\".fmt(f)\n     }\n }"}, {"sha": "7a1839561078575c74850ce343f81b0989767916", "filename": "src/libstd/sys/wasi/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c5d60910ca81736e498b307dbf7dcea26867f9b1/src%2Flibstd%2Fsys%2Fwasi%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5d60910ca81736e498b307dbf7dcea26867f9b1/src%2Flibstd%2Fsys%2Fwasi%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Fpath.rs?ref=c5d60910ca81736e498b307dbf7dcea26867f9b1", "patch": "@@ -11,7 +11,7 @@ pub fn is_verbatim_sep(b: u8) -> bool {\n     b == b'/'\n }\n \n-pub fn parse_prefix(_: &OsStr) -> Option<Prefix> {\n+pub fn parse_prefix(_: &OsStr) -> Option<Prefix<'_>> {\n     None\n }\n "}, {"sha": "a02e009d95356d848608135cef3b69f1ebe1f183", "filename": "src/libstd/sys/wasi/process.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c5d60910ca81736e498b307dbf7dcea26867f9b1/src%2Flibstd%2Fsys%2Fwasi%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5d60910ca81736e498b307dbf7dcea26867f9b1/src%2Flibstd%2Fsys%2Fwasi%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Fprocess.rs?ref=c5d60910ca81736e498b307dbf7dcea26867f9b1", "patch": "@@ -73,7 +73,7 @@ impl From<File> for Stdio {\n }\n \n impl fmt::Debug for Command {\n-    fn fmt(&self, _f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         Ok(())\n     }\n }\n@@ -108,13 +108,13 @@ impl Eq for ExitStatus {\n }\n \n impl fmt::Debug for ExitStatus {\n-    fn fmt(&self, _f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self.0 {}\n     }\n }\n \n impl fmt::Display for ExitStatus {\n-    fn fmt(&self, _f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self.0 {}\n     }\n }"}]}