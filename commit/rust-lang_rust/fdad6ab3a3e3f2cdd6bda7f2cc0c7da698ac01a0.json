{"sha": "fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYWQ2YWIzYTNlM2YyY2RkNmJkYTdmMmNjMGM3ZGE2OThhYzAxYTA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-04-18T16:36:41Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-04-18T16:36:41Z"}, "message": "move 'trait bounds on const fn' to separate feature gate", "tree": {"sha": "f2841f4f4c819a75244f2071fefb8e4d78406ef0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2841f4f4c819a75244f2071fefb8e4d78406ef0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "html_url": "https://github.com/rust-lang/rust/commit/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67650104959003d1a5828f8d79ad72aa08752055", "url": "https://api.github.com/repos/rust-lang/rust/commits/67650104959003d1a5828f8d79ad72aa08752055", "html_url": "https://github.com/rust-lang/rust/commit/67650104959003d1a5828f8d79ad72aa08752055"}], "stats": {"total": 75, "additions": 44, "deletions": 31}, "files": [{"sha": "d04c89aa13c231c8af2f73b07cd220d36af1121e", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "patch": "@@ -576,6 +576,9 @@ declare_features! (\n     /// Allows using and casting function pointers in a `const fn`.\n     (active, const_fn_fn_ptr_basics, \"1.48.0\", Some(57563), None),\n \n+    /// Allows trait bounds in `const fn`.\n+    (active, const_fn_trait_bound, \"1.53.0\", Some(57563), None),\n+\n     /// Allows to use the `#[cmse_nonsecure_entry]` attribute.\n     (active, cmse_nonsecure_entry, \"1.48.0\", Some(75835), None),\n "}, {"sha": "c215ae11cf8d821f6b944c4c5c19ee2485edb28d", "filename": "compiler/rustc_mir/src/transform/check_consts/ops.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs?ref=fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "patch": "@@ -642,12 +642,17 @@ pub mod ty {\n         }\n \n         fn status_in_item(&self, ccx: &ConstCx<'_, '_>) -> Status {\n-            mcf_status_in_item(ccx)\n+            if ccx.const_kind() != hir::ConstContext::ConstFn {\n+                Status::Allowed\n+            } else {\n+                Status::Unstable(sym::const_fn_trait_bound)\n+            }\n         }\n \n         fn build_error(&self, ccx: &ConstCx<'_, 'tcx>, span: Span) -> DiagnosticBuilder<'tcx> {\n-            mcf_build_error(\n-                ccx,\n+            feature_err(\n+                &ccx.tcx.sess.parse_sess,\n+                sym::const_fn_trait_bound,\n                 span,\n                 \"trait bounds other than `Sized` on const fn parameters are unstable\",\n             )"}, {"sha": "6acf77a8e6ed8c34f87e97ed79b4b28901c33c50", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "patch": "@@ -382,6 +382,7 @@ symbols! {\n         const_fn,\n         const_fn_floating_point_arithmetic,\n         const_fn_fn_ptr_basics,\n+        const_fn_trait_bound,\n         const_fn_transmute,\n         const_fn_union,\n         const_generic_defaults,"}, {"sha": "70ff78d564e0bbe554f145ba85d6a6456284b6a1", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "patch": "@@ -90,6 +90,7 @@\n #![feature(coerce_unsized)]\n #![feature(const_btree_new)]\n #![feature(const_fn)]\n+#![cfg_attr(not(bootstrap), feature(const_fn_trait_bound))]\n #![feature(cow_is_borrowed)]\n #![feature(const_cow_is_borrowed)]\n #![feature(destructuring_assignment)]"}, {"sha": "495edc70f38de09d2f57ffb36151bc8c72397b72", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "patch": "@@ -86,6 +86,7 @@\n #![feature(const_impl_trait)]\n #![feature(const_fn_floating_point_arithmetic)]\n #![feature(const_fn_fn_ptr_basics)]\n+#![cfg_attr(not(bootstrap), feature(const_fn_trait_bound))]\n #![feature(const_option)]\n #![feature(const_precise_live_drops)]\n #![feature(const_ptr_offset)]"}, {"sha": "f2d9758b8dc08cee390edb4d8483e8c0824508ff", "filename": "src/test/ui/consts/const-eval/issue-49296.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-49296.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-49296.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-49296.rs?ref=fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "patch": "@@ -1,7 +1,7 @@\n // issue-49296: Unsafe shenigans in constants can result in missing errors\n \n-#![feature(const_fn)]\n #![feature(const_fn_union)]\n+#![feature(const_fn_trait_bound)]\n \n const unsafe fn transmute<T: Copy, U: Copy>(t: T) -> U {\n     #[repr(C)]"}, {"sha": "1928c51885efff2d97205da720e57fad152097b1", "filename": "src/test/ui/consts/const-fn.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Fconsts%2Fconst-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Fconsts%2Fconst-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-fn.rs?ref=fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "patch": "@@ -3,7 +3,8 @@\n \n // A very basic test of const fn functionality.\n \n-#![feature(const_fn, const_indexing)]\n+#![feature(const_indexing)]\n+#![feature(const_fn_trait_bound)]\n \n const fn add(x: u32, y: u32) -> u32 {\n     x + y"}, {"sha": "b629955eb2bfec2b1615acc676e7ad8e038c8996", "filename": "src/test/ui/consts/min_const_fn/min_const_fn.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr?ref=fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "patch": "@@ -130,23 +130,23 @@ LL |     const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }\n    = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:84:16\n    |\n LL | const fn foo11<T: std::fmt::Display>(t: T) -> T { t }\n    |                ^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:86:18\n    |\n LL | const fn foo11_2<T: Send>(t: T) -> T { t }\n    |                  ^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n error[E0013]: constant functions cannot refer to statics\n   --> $DIR/min_const_fn.rs:90:27\n@@ -209,41 +209,41 @@ LL | const fn inc(x: &mut i32) { *x += 1 }\n    = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:110:6\n    |\n LL | impl<T: std::fmt::Debug> Foo<T> {\n    |      ^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:115:6\n    |\n LL | impl<T: std::fmt::Debug + Sized> Foo<T> {\n    |      ^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:120:6\n    |\n LL | impl<T: Sync + Sized> Foo<T> {\n    |      ^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:126:34\n    |\n LL | const fn no_apit2(_x: AlanTuring<impl std::fmt::Debug>) {}\n    |                                  ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n error[E0493]: destructors cannot be evaluated at compile-time\n   --> $DIR/min_const_fn.rs:126:19\n@@ -253,14 +253,14 @@ LL | const fn no_apit2(_x: AlanTuring<impl std::fmt::Debug>) {}\n    |                   |\n    |                   constant functions cannot evaluate destructors\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:129:22\n    |\n LL | const fn no_apit(_x: impl std::fmt::Debug) {}\n    |                      ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n error[E0493]: destructors cannot be evaluated at compile-time\n   --> $DIR/min_const_fn.rs:129:18\n@@ -270,23 +270,23 @@ LL | const fn no_apit(_x: impl std::fmt::Debug) {}\n    |                  |\n    |                  constant functions cannot evaluate destructors\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:132:23\n    |\n LL | const fn no_dyn_trait(_x: &dyn std::fmt::Debug) {}\n    |                       ^^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:134:32\n    |\n LL | const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n error[E0723]: unsizing casts to types besides slices are not allowed in const fn\n   --> $DIR/min_const_fn.rs:134:63"}, {"sha": "11bb82639a340cfea0686d5183eb5616b1f5eabc", "filename": "src/test/ui/consts/min_const_fn/min_const_fn_dyn.stderr", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr?ref=fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "patch": "@@ -1,11 +1,11 @@\n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn_dyn.rs:9:5\n    |\n LL |     x.0.field;\n    |     ^^^^^^^^^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n error[E0723]: unsizing casts to types besides slices are not allowed in const fn\n   --> $DIR/min_const_fn_dyn.rs:12:66\n@@ -18,4 +18,5 @@ LL | const fn no_inner_dyn_trait_ret() -> Hide { Hide(HasDyn { field: &0 }) }\n \n error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0723`.\n+Some errors have detailed explanations: E0658, E0723.\n+For more information about an error, try `rustc --explain E0658`."}, {"sha": "2fbbbbffac484a0c6d58ce2e5ccd6ec2fb62bb75", "filename": "src/test/ui/consts/unstable-const-fn-in-libcore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Fconsts%2Funstable-const-fn-in-libcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Fconsts%2Funstable-const-fn-in-libcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Funstable-const-fn-in-libcore.rs?ref=fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "patch": "@@ -6,7 +6,7 @@\n #![stable(feature = \"core\", since = \"1.6.0\")]\n #![feature(rustc_const_unstable)]\n #![feature(staged_api)]\n-#![feature(const_fn)]\n+#![feature(const_fn_trait_bound)]\n \n enum Opt<T> {\n     Some(T),"}, {"sha": "c37990b1af3ddf4ab086779d294038264bb047de", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-generic-method-chain.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-chain.rs?ref=fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "patch": "@@ -2,8 +2,8 @@\n \n // check-pass\n \n-#![feature(const_fn)]\n #![feature(const_trait_impl)]\n+#![feature(const_fn_trait_bound)]\n #![allow(incomplete_features)]\n \n struct S;"}, {"sha": "d553b2ab8ec47b75e31dabed861570048e68238c", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-generic-method-dup-bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-dup-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-dup-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-dup-bound.rs?ref=fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "patch": "@@ -1,8 +1,8 @@\n // check-pass\n \n-#![feature(const_fn)]\n #![feature(const_trait_impl)]\n #![feature(const_trait_bound_opt_out)]\n+#![feature(const_fn_trait_bound)]\n #![allow(incomplete_features)]\n \n struct S;"}, {"sha": "74b0d5fbe474ba767110754fbf0ddf0cfb5ab22a", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-generic-method-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-pass.rs?ref=fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "patch": "@@ -2,8 +2,8 @@\n \n // check-pass\n \n-#![feature(const_fn)]\n #![feature(const_trait_impl)]\n+#![feature(const_fn_trait_bound)]\n #![allow(incomplete_features)]\n \n struct S;"}, {"sha": "d3680820312605d8a57a14353e830254cfa405b4", "filename": "src/test/ui/rfc-2632-const-trait-impl/generic-bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fgeneric-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fgeneric-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fgeneric-bound.rs?ref=fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "patch": "@@ -2,7 +2,7 @@\n \n #![allow(incomplete_features)]\n #![feature(const_trait_impl)]\n-#![feature(const_fn)]\n+#![feature(const_fn_trait_bound)]\n \n use std::marker::PhantomData;\n "}]}