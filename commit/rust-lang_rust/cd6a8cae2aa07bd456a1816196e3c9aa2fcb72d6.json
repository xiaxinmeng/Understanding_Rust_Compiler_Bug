{"sha": "cd6a8cae2aa07bd456a1816196e3c9aa2fcb72d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkNmE4Y2FlMmFhMDdiZDQ1NmExODE2MTk2ZTNjOWFhMmZjYjcyZDY=", "commit": {"author": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-05-28T05:11:46Z"}, "committer": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-05-28T05:33:28Z"}, "message": "FIx off-by-one in char::steps_between", "tree": {"sha": "48fa1d6cd5aedb13ae015637c760689bdab1ed1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48fa1d6cd5aedb13ae015637c760689bdab1ed1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd6a8cae2aa07bd456a1816196e3c9aa2fcb72d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd6a8cae2aa07bd456a1816196e3c9aa2fcb72d6", "html_url": "https://github.com/rust-lang/rust/commit/cd6a8cae2aa07bd456a1816196e3c9aa2fcb72d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd6a8cae2aa07bd456a1816196e3c9aa2fcb72d6/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1d1f256ef1902312803d3d1bd0235bfdf864aec", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1d1f256ef1902312803d3d1bd0235bfdf864aec", "html_url": "https://github.com/rust-lang/rust/commit/b1d1f256ef1902312803d3d1bd0235bfdf864aec"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "fc4454ede35881642b6f5a761e6dc4e0b7c77c27", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd6a8cae2aa07bd456a1816196e3c9aa2fcb72d6/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6a8cae2aa07bd456a1816196e3c9aa2fcb72d6/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=cd6a8cae2aa07bd456a1816196e3c9aa2fcb72d6", "patch": "@@ -408,7 +408,7 @@ unsafe impl Step for char {\n         let start = start as u32;\n         let end = end as u32;\n         if start <= end {\n-            let count = end - start + 1;\n+            let count = end - start;\n             if start < 0xD800 && 0xE000 <= end {\n                 usize::try_from(count - 0x800).ok()\n             } else {"}, {"sha": "c5d636ac8da55b7aea703421a0ecebfe7dd0208d", "filename": "src/libcore/tests/iter.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd6a8cae2aa07bd456a1816196e3c9aa2fcb72d6/src%2Flibcore%2Ftests%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6a8cae2aa07bd456a1816196e3c9aa2fcb72d6/src%2Flibcore%2Ftests%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fiter.rs?ref=cd6a8cae2aa07bd456a1816196e3c9aa2fcb72d6", "patch": "@@ -1939,7 +1939,9 @@ fn test_char_range() {\n     assert!(('\\0'..=char::MAX).rev().eq((0..=char::MAX as u32).filter_map(char::from_u32).rev()));\n \n     assert_eq!(('\\u{D7FF}'..='\\u{E000}').count(), 2);\n+    assert_eq!(('\\u{D7FF}'..='\\u{E000}').size_hint(), (2, Some(2)));\n     assert_eq!(('\\u{D7FF}'..'\\u{E000}').count(), 1);\n+    assert_eq!(('\\u{D7FF}'..'\\u{E000}').size_hint(), (1, Some(1)));\n }\n \n #[test]"}]}