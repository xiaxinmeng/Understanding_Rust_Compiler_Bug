{"sha": "b484faefab8bfd27d7ccf28aa5597e85591d2a90", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0ODRmYWVmYWI4YmZkMjdkN2NjZjI4YWE1NTk3ZTg1NTkxZDJhOTA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-08T08:18:34Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-21T18:20:41Z"}, "message": "extract error_opt_out_lifetime", "tree": {"sha": "ec33f47566f5adeb27f85e2799f54ee839eceb2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec33f47566f5adeb27f85e2799f54ee839eceb2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b484faefab8bfd27d7ccf28aa5597e85591d2a90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b484faefab8bfd27d7ccf28aa5597e85591d2a90", "html_url": "https://github.com/rust-lang/rust/commit/b484faefab8bfd27d7ccf28aa5597e85591d2a90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b484faefab8bfd27d7ccf28aa5597e85591d2a90/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f499a97e43b9f1cd23233de542419921ea4b6d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f499a97e43b9f1cd23233de542419921ea4b6d0", "html_url": "https://github.com/rust-lang/rust/commit/3f499a97e43b9f1cd23233de542419921ea4b6d0"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "b9537100ce17432e099bc3193b7927179a720888", "filename": "src/librustc_parse/parser/ty.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b484faefab8bfd27d7ccf28aa5597e85591d2a90/src%2Flibrustc_parse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b484faefab8bfd27d7ccf28aa5597e85591d2a90/src%2Flibrustc_parse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fty.rs?ref=b484faefab8bfd27d7ccf28aa5597e85591d2a90", "patch": "@@ -383,10 +383,7 @@ impl<'a> Parser<'a> {\n                 let is_negative = self.eat(&token::Not);\n                 let question = if self.eat(&token::Question) { Some(self.prev_span) } else { None };\n                 if self.token.is_lifetime() {\n-                    if let Some(question_span) = question {\n-                        self.span_err(question_span,\n-                                      \"`?` may only modify trait bounds, not lifetime bounds\");\n-                    }\n+                    self.error_opt_out_lifetime(question);\n                     bounds.push(GenericBound::Outlives(self.expect_lifetime()));\n                     if has_parens {\n                         let inner_span = inner_lo.to(self.prev_span);\n@@ -473,6 +470,13 @@ impl<'a> Parser<'a> {\n         return Ok(bounds);\n     }\n \n+    fn error_opt_out_lifetime(&self, question: Option<Span>) {\n+        if let Some(span) = question {\n+            self.struct_span_err(span, \"`?` may only modify trait bounds, not lifetime bounds\")\n+                .emit();\n+        }\n+    }\n+\n     pub(super) fn parse_late_bound_lifetime_defs(&mut self) -> PResult<'a, Vec<GenericParam>> {\n         if self.eat_keyword(kw::For) {\n             self.expect_lt()?;"}]}