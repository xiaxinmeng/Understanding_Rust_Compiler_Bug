{"sha": "ebe99637fda18617684a7ae720247315701f19d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViZTk5NjM3ZmRhMTg2MTc2ODRhN2FlNzIwMjQ3MzE1NzAxZjE5ZDM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-01-16T01:30:35Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-02-13T19:46:25Z"}, "message": "std: add stats.", "tree": {"sha": "f6c1df26515b7d04d312e678f6a81af6eb257497", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6c1df26515b7d04d312e678f6a81af6eb257497"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebe99637fda18617684a7ae720247315701f19d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebe99637fda18617684a7ae720247315701f19d3", "html_url": "https://github.com/rust-lang/rust/commit/ebe99637fda18617684a7ae720247315701f19d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebe99637fda18617684a7ae720247315701f19d3/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73280b0472afdcf4df7eb1a80a7ac0b74a791ca9", "url": "https://api.github.com/repos/rust-lang/rust/commits/73280b0472afdcf4df7eb1a80a7ac0b74a791ca9", "html_url": "https://github.com/rust-lang/rust/commit/73280b0472afdcf4df7eb1a80a7ac0b74a791ca9"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "f0043803c4b94c152d61c8b780b963a86234c20d", "filename": "src/libstd/stats.rs", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/ebe99637fda18617684a7ae720247315701f19d3/src%2Flibstd%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe99637fda18617684a7ae720247315701f19d3/src%2Flibstd%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstats.rs?ref=ebe99637fda18617684a7ae720247315701f19d3", "patch": "@@ -0,0 +1,96 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use core::vec;\n+use core::f64;\n+use core::cmp;\n+use core::num;\n+use sort;\n+\n+// NB: this can probably be rewritten in terms of num::Num\n+// to be less f64-specific.\n+\n+pub trait Stats {\n+    fn sum(self) -> f64;\n+    fn min(self) -> f64;\n+    fn max(self) -> f64;\n+    fn mean(self) -> f64;\n+    fn median(self) -> f64;\n+    fn var(self) -> f64;\n+    fn std_dev(self) -> f64;\n+    fn std_dev_pct(self) -> f64;\n+    fn median_abs_dev(self) -> f64;\n+    fn median_abs_dev_pct(self) -> f64;\n+}\n+\n+impl &[f64] : Stats {\n+    fn sum(self) -> f64 {\n+        vec::foldl(0.0, self, |p,q| p + *q)\n+    }\n+\n+    fn min(self) -> f64 {\n+        assert self.len() != 0;\n+        vec::foldl(self[0], self, |p,q| cmp::min(p, *q))\n+    }\n+\n+    fn max(self) -> f64 {\n+        assert self.len() != 0;\n+        vec::foldl(self[0], self, |p,q| cmp::max(p, *q))\n+    }\n+\n+    fn mean(self) -> f64 {\n+        assert self.len() != 0;\n+        self.sum() / (self.len() as f64)\n+    }\n+\n+    fn median(self) -> f64 {\n+        assert self.len() != 0;\n+        let tmp = vec::to_mut(vec::from_slice(self));\n+        sort::tim_sort(tmp);\n+        if tmp.len() & 1 == 0 {\n+            let m = tmp.len() / 2;\n+            (tmp[m] + tmp[m-1]) / 2.0\n+        } else {\n+            tmp[tmp.len() / 2]\n+        }\n+    }\n+\n+    fn var(self) -> f64 {\n+        if self.len() == 0 {\n+            0.0\n+        } else {\n+            let mean = self.mean();\n+            let mut v = 0.0;\n+            for self.each |s| {\n+                let x = *s - mean;\n+                v += x*x;\n+            }\n+            v/(self.len() as f64)\n+        }\n+    }\n+\n+    fn std_dev(self) -> f64 {\n+        f64::sqrt(self.var())\n+    }\n+\n+    fn std_dev_pct(self) -> f64 {\n+        (self.std_dev() / self.mean()) * 100.0\n+    }\n+\n+    fn median_abs_dev(self) -> f64 {\n+        let med = self.median();\n+        let abs_devs = self.map(|v| num::abs(med - *v));\n+        abs_devs.median()\n+    }\n+\n+    fn median_abs_dev_pct(self) -> f64 {\n+        (self.median_abs_dev() / self.median()) * 100.0\n+    }\n+}"}, {"sha": "3b855b3453d3a6bfc31c8d08be44746a54d1c820", "filename": "src/libstd/std.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ebe99637fda18617684a7ae720247315701f19d3/src%2Flibstd%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ebe99637fda18617684a7ae720247315701f19d3/src%2Flibstd%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstd.rc?ref=ebe99637fda18617684a7ae720247315701f19d3", "patch": "@@ -98,6 +98,7 @@ pub mod base64;\n pub mod rl;\n pub mod workcache;\n pub mod bigint;\n+pub mod stats;\n \n #[cfg(unicode)]\n mod unicode;"}]}