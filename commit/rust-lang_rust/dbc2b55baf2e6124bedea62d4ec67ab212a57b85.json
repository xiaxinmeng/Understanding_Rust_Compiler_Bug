{"sha": "dbc2b55baf2e6124bedea62d4ec67ab212a57b85", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiYzJiNTViYWYyZTYxMjRiZWRlYTYyZDRlYzY3YWIyMTJhNTdiODU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-10T12:14:09Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-10T12:14:09Z"}, "message": "rename variable", "tree": {"sha": "3dcace62a0b6cc9a44600a9e4b30bff989cd8ab1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dcace62a0b6cc9a44600a9e4b30bff989cd8ab1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbc2b55baf2e6124bedea62d4ec67ab212a57b85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbc2b55baf2e6124bedea62d4ec67ab212a57b85", "html_url": "https://github.com/rust-lang/rust/commit/dbc2b55baf2e6124bedea62d4ec67ab212a57b85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbc2b55baf2e6124bedea62d4ec67ab212a57b85/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2750d3ac6a4f6015a7a9720b8fbcb3610aa691e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2750d3ac6a4f6015a7a9720b8fbcb3610aa691e1", "html_url": "https://github.com/rust-lang/rust/commit/2750d3ac6a4f6015a7a9720b8fbcb3610aa691e1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9f7e6b95dfb90c0d496eb88ead3679226ed02379", "filename": "library/std/src/thread/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dbc2b55baf2e6124bedea62d4ec67ab212a57b85/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbc2b55baf2e6124bedea62d4ec67ab212a57b85/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs?ref=dbc2b55baf2e6124bedea62d4ec67ab212a57b85", "patch": "@@ -999,12 +999,12 @@ impl ThreadId {\n         static mut COUNTER: u64 = 1;\n \n         unsafe {\n-            let _guard = GUARD.lock();\n+            let guard = GUARD.lock();\n \n             // If we somehow use up all our bits, panic so that we're not\n             // covering up subtle bugs of IDs being reused.\n             if COUNTER == u64::MAX {\n-                drop(_guard); // in case the panic handler ends up calling `ThreadId::new()`, avoid reentrant lock acquire.\n+                drop(guard); // in case the panic handler ends up calling `ThreadId::new()`, avoid reentrant lock acquire.\n                 panic!(\"failed to generate unique thread ID: bitspace exhausted\");\n             }\n "}]}