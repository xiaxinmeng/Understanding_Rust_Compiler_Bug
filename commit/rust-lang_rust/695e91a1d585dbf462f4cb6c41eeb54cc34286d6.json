{"sha": "695e91a1d585dbf462f4cb6c41eeb54cc34286d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NWU5MWExZDU4NWRiZjQ2MmY0Y2I2YzQxZWViNTRjYzM0Mjg2ZDY=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-11-12T12:20:44Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-11-12T12:20:52Z"}, "message": "check-consts remove cannot mutate statics in initializer of another static error", "tree": {"sha": "68249f97c5ea2abb90c274b443930db7f847249d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68249f97c5ea2abb90c274b443930db7f847249d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/695e91a1d585dbf462f4cb6c41eeb54cc34286d6", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAl3Ko60ACgkQiMlBzaHU\nZDKqDA//ajFKnfNSy3qP7BSUGYPBa6Lvrh+rbWH/Vi9rSp73vFibG+sOInqMvCNN\niwIIr9Zuso1jChjGGwc5lsKIy5MeZBW6xEeqiulDmnle25dJlKvV6PKoAjbHwmm2\npPWVoRbYPa45auCm+ngGCImdvLzZfXKxzxrX7Cor/Myc7mwl+LU+mpZCczx3SmEn\nk312Z9qopSQulbPtOr5/6K4Acnr/gszrWvdLw7lD9aR9VUbsTR1qxS2OgDqtQowh\nQ+YZ3Jq56wE17GsGkZjlIKamH6GxVF0W1f8Ml5/EX5Kb1XNT1GbH8SwOgPzpJ8Xv\nln9JhGsnzfOIeQ/OcRpxiMGOTMTNW6Zb6fko+yPzdd/i0Av8Op9zHKGmEv5+QcQD\nSMYtp06Dt5a7JTo8CRSFSxc+4A26XBWnALRaeQ1rfGvWJAbhJI7gk3q15jM9SROn\ngVYnvArTwMvXSC96+vwD45/1tY9IlqdfCoW2KEIzJGRzlKblws1oUYoi4J0mRiUg\ncFxysC04E6FWj6kuV/v35qOZRz58uJE6AVfa8U0JSECAJo88M3bxr5oH2wYTbMAr\nxUAF411vdsS/LU1XyR59eHDIcRTVERUOD0HLgh3lLjfaKVCjODX/J/t6i1kvH9yU\nb3DIVzi3vBARc2khUKWyNSipmrrapUaOgjD7YPdtWmghbrNJ5lQ=\n=Xp4U\n-----END PGP SIGNATURE-----", "payload": "tree 68249f97c5ea2abb90c274b443930db7f847249d\nparent b941034f2f4ffe42e9b7eb19c9a726f9fdc6d35f\nauthor Santiago Pastorino <spastorino@gmail.com> 1573561244 +0100\ncommitter Santiago Pastorino <spastorino@gmail.com> 1573561252 +0100\n\ncheck-consts remove cannot mutate statics in initializer of another static error\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/695e91a1d585dbf462f4cb6c41eeb54cc34286d6", "html_url": "https://github.com/rust-lang/rust/commit/695e91a1d585dbf462f4cb6c41eeb54cc34286d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b941034f2f4ffe42e9b7eb19c9a726f9fdc6d35f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b941034f2f4ffe42e9b7eb19c9a726f9fdc6d35f", "html_url": "https://github.com/rust-lang/rust/commit/b941034f2f4ffe42e9b7eb19c9a726f9fdc6d35f"}], "stats": {"total": 42, "additions": 10, "deletions": 32}, "files": [{"sha": "93ce108cc8041dc2faadbef388f3519db9e4c724", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=695e91a1d585dbf462f4cb6c41eeb54cc34286d6", "patch": "@@ -326,17 +326,7 @@ impl Visitor<'tcx> for Validator<'_, 'mir, 'tcx> {\n                 let is_thread_local = self.tcx.has_attr(*def_id, sym::thread_local);\n                 if is_thread_local {\n                     self.check_op(ops::ThreadLocalAccess);\n-                } else if self.const_kind() == ConstKind::Static && context.is_mutating_use() {\n-                    // this is not strictly necessary as miri will also bail out\n-                    // For interior mutability we can't really catch this statically as that\n-                    // goes through raw pointers and intermediate temporaries, so miri has\n-                    // to catch this anyway\n-\n-                    self.tcx.sess.span_err(\n-                        self.span,\n-                        \"cannot mutate statics in the initializer of another static\",\n-                    );\n-                } else {\n+                } else if self.const_kind() != ConstKind::Static || !context.is_mutating_use() {\n                     self.check_op(ops::StaticAccess);\n                 }\n             }"}, {"sha": "648caae30b4275fdf4dedfeae2a3122d97a759f6", "filename": "src/test/ui/consts/const-eval/assign-to-static-within-other-static.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fassign-to-static-within-other-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fassign-to-static-within-other-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fassign-to-static-within-other-static.rs?ref=695e91a1d585dbf462f4cb6c41eeb54cc34286d6", "patch": "@@ -7,7 +7,8 @@ use std::cell::UnsafeCell;\n \n static mut FOO: u32 = 42;\n static BOO: () = unsafe {\n-    FOO = 5; //~ ERROR cannot mutate statics in the initializer of another static\n+    FOO = 5;\n+    //~^ could not evaluate static initializer [E0080]\n };\n \n fn main() {}"}, {"sha": "cb4d35b9a18095e96cecc8b9e68da0d8658c8a95", "filename": "src/test/ui/consts/const-eval/assign-to-static-within-other-static.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fassign-to-static-within-other-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fassign-to-static-within-other-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fassign-to-static-within-other-static.stderr?ref=695e91a1d585dbf462f4cb6c41eeb54cc34286d6", "patch": "@@ -1,8 +1,9 @@\n-error: cannot mutate statics in the initializer of another static\n+error[E0080]: could not evaluate static initializer\n   --> $DIR/assign-to-static-within-other-static.rs:10:5\n    |\n LL |     FOO = 5;\n-   |     ^^^^^^^\n+   |     ^^^^^^^ tried to modify a static's initial value from another static's initializer\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0080`."}, {"sha": "94b6587eb815a2d12d78222d45fe1c7faa581240", "filename": "src/test/ui/error-codes/E0017.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/src%2Ftest%2Fui%2Ferror-codes%2FE0017.rs", "raw_url": "https://github.com/rust-lang/rust/raw/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/src%2Ftest%2Fui%2Ferror-codes%2FE0017.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0017.rs?ref=695e91a1d585dbf462f4cb6c41eeb54cc34286d6", "patch": "@@ -4,6 +4,5 @@ const C: i32 = 2;\n const CR: &'static mut i32 = &mut C; //~ ERROR E0017\n static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0017\n                                               //~| ERROR cannot borrow\n-                                              //~| ERROR cannot mutate statics\n static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0017\n fn main() {}"}, {"sha": "47863f02214057e2ac319f03fd7067f256a21fe8", "filename": "src/test/ui/error-codes/E0017.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/src%2Ftest%2Fui%2Ferror-codes%2FE0017.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/src%2Ftest%2Fui%2Ferror-codes%2FE0017.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0017.stderr?ref=695e91a1d585dbf462f4cb6c41eeb54cc34286d6", "patch": "@@ -10,25 +10,19 @@ error[E0017]: references in statics may only refer to immutable values\n LL | static STATIC_REF: &'static mut i32 = &mut X;\n    |                                       ^^^^^^ statics require immutable values\n \n-error: cannot mutate statics in the initializer of another static\n-  --> $DIR/E0017.rs:5:39\n-   |\n-LL | static STATIC_REF: &'static mut i32 = &mut X;\n-   |                                       ^^^^^^\n-\n error[E0596]: cannot borrow immutable static item `X` as mutable\n   --> $DIR/E0017.rs:5:39\n    |\n LL | static STATIC_REF: &'static mut i32 = &mut X;\n    |                                       ^^^^^^ cannot borrow as mutable\n \n error[E0017]: references in statics may only refer to immutable values\n-  --> $DIR/E0017.rs:8:38\n+  --> $DIR/E0017.rs:7:38\n    |\n LL | static CONST_REF: &'static mut i32 = &mut C;\n    |                                      ^^^^^^ statics require immutable values\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 4 previous errors\n \n Some errors have detailed explanations: E0017, E0596.\n For more information about an error, try `rustc --explain E0017`."}, {"sha": "3aa4ac9655cc976cdad4944451b19a9ef795b391", "filename": "src/test/ui/error-codes/E0388.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/src%2Ftest%2Fui%2Ferror-codes%2FE0388.rs", "raw_url": "https://github.com/rust-lang/rust/raw/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/src%2Ftest%2Fui%2Ferror-codes%2FE0388.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0388.rs?ref=695e91a1d585dbf462f4cb6c41eeb54cc34286d6", "patch": "@@ -4,7 +4,6 @@ const C: i32 = 2;\n const CR: &'static mut i32 = &mut C; //~ ERROR E0017\n static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0017\n                                               //~| ERROR cannot borrow\n-                                              //~| ERROR cannot mutate statics\n static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0017\n \n fn main() {}"}, {"sha": "b52d5260b13c82444cbaf444b35425e9c4c6e4a5", "filename": "src/test/ui/error-codes/E0388.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/src%2Ftest%2Fui%2Ferror-codes%2FE0388.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/695e91a1d585dbf462f4cb6c41eeb54cc34286d6/src%2Ftest%2Fui%2Ferror-codes%2FE0388.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0388.stderr?ref=695e91a1d585dbf462f4cb6c41eeb54cc34286d6", "patch": "@@ -10,25 +10,19 @@ error[E0017]: references in statics may only refer to immutable values\n LL | static STATIC_REF: &'static mut i32 = &mut X;\n    |                                       ^^^^^^ statics require immutable values\n \n-error: cannot mutate statics in the initializer of another static\n-  --> $DIR/E0388.rs:5:39\n-   |\n-LL | static STATIC_REF: &'static mut i32 = &mut X;\n-   |                                       ^^^^^^\n-\n error[E0596]: cannot borrow immutable static item `X` as mutable\n   --> $DIR/E0388.rs:5:39\n    |\n LL | static STATIC_REF: &'static mut i32 = &mut X;\n    |                                       ^^^^^^ cannot borrow as mutable\n \n error[E0017]: references in statics may only refer to immutable values\n-  --> $DIR/E0388.rs:8:38\n+  --> $DIR/E0388.rs:7:38\n    |\n LL | static CONST_REF: &'static mut i32 = &mut C;\n    |                                      ^^^^^^ statics require immutable values\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 4 previous errors\n \n Some errors have detailed explanations: E0017, E0596.\n For more information about an error, try `rustc --explain E0017`."}]}