{"sha": "0904f255075d3c20f16d4ca2d1db14cac3fbb2de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MDRmMjU1MDc1ZDNjMjBmMTZkNGNhMmQxZGIxNGNhYzNmYmIyZGU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-31T00:31:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-31T00:31:40Z"}, "message": "rustc: Convert some error logs to debug", "tree": {"sha": "d265e8bdb1ef512a3813ff6dc5d5a86e2a57d6f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d265e8bdb1ef512a3813ff6dc5d5a86e2a57d6f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0904f255075d3c20f16d4ca2d1db14cac3fbb2de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0904f255075d3c20f16d4ca2d1db14cac3fbb2de", "html_url": "https://github.com/rust-lang/rust/commit/0904f255075d3c20f16d4ca2d1db14cac3fbb2de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0904f255075d3c20f16d4ca2d1db14cac3fbb2de/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4906b81f74d77c388b3395322d2ea3a3cd0c7a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4906b81f74d77c388b3395322d2ea3a3cd0c7a3", "html_url": "https://github.com/rust-lang/rust/commit/a4906b81f74d77c388b3395322d2ea3a3cd0c7a3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2b792b20aad60ba418c334b780191fac58847810", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0904f255075d3c20f16d4ca2d1db14cac3fbb2de/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0904f255075d3c20f16d4ca2d1db14cac3fbb2de/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=0904f255075d3c20f16d4ca2d1db14cac3fbb2de", "patch": "@@ -2763,12 +2763,12 @@ fn invoke(bcx: block, llfn: ValueRef, llargs: [ValueRef]) -> block {\n     let _icx = bcx.insn_ctxt(\"invoke_\");\n     if bcx.unreachable { ret bcx; }\n     if need_invoke(bcx) {\n-        log(error, \"invoking\");\n+        log(debug, \"invoking\");\n         let normal_bcx = sub_block(bcx, \"normal return\");\n         Invoke(bcx, llfn, llargs, normal_bcx.llbb, get_landing_pad(bcx));\n         ret normal_bcx;\n     } else {\n-        log(error, \"calling\");\n+        log(debug, \"calling\");\n         Call(bcx, llfn, llargs);\n         ret bcx;\n     }"}]}