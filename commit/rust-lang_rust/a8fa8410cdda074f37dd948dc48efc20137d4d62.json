{"sha": "a8fa8410cdda074f37dd948dc48efc20137d4d62", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZmE4NDEwY2RkYTA3NGYzN2RkOTQ4ZGM0OGVmYzIwMTM3ZDRkNjI=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2016-02-11T04:58:09Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2016-02-11T04:59:26Z"}, "message": "Add _post methods for blocks and crates", "tree": {"sha": "127d4278713eadfa78ebb241a235d0a333110b6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/127d4278713eadfa78ebb241a235d0a333110b6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8fa8410cdda074f37dd948dc48efc20137d4d62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8fa8410cdda074f37dd948dc48efc20137d4d62", "html_url": "https://github.com/rust-lang/rust/commit/a8fa8410cdda074f37dd948dc48efc20137d4d62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8fa8410cdda074f37dd948dc48efc20137d4d62/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f4227af139f1da30710a9f07dc28e5a3ccc6fe5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f4227af139f1da30710a9f07dc28e5a3ccc6fe5", "html_url": "https://github.com/rust-lang/rust/commit/3f4227af139f1da30710a9f07dc28e5a3ccc6fe5"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "a9acbeb46c435f9e006745befa2832912d19ac62", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a8fa8410cdda074f37dd948dc48efc20137d4d62/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8fa8410cdda074f37dd948dc48efc20137d4d62/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=a8fa8410cdda074f37dd948dc48efc20137d4d62", "patch": "@@ -846,6 +846,7 @@ impl<'a, 'tcx, 'v> hir_visit::Visitor<'v> for LateContext<'a, 'tcx> {\n     fn visit_block(&mut self, b: &hir::Block) {\n         run_lints!(self, check_block, late_passes, b);\n         hir_visit::walk_block(self, b);\n+        run_lints!(self, check_block_post, late_passes, b);\n     }\n \n     fn visit_arm(&mut self, a: &hir::Arm) {\n@@ -1001,6 +1002,7 @@ impl<'a, 'v> ast_visit::Visitor<'v> for EarlyContext<'a> {\n     fn visit_block(&mut self, b: &ast::Block) {\n         run_lints!(self, check_block, early_passes, b);\n         ast_visit::walk_block(self, b);\n+        run_lints!(self, check_block_post, early_passes, b);\n     }\n \n     fn visit_arm(&mut self, a: &ast::Arm) {\n@@ -1253,6 +1255,8 @@ pub fn check_crate(tcx: &ty::ctxt, access_levels: &AccessLevels) {\n         run_lints!(cx, check_crate, late_passes, krate);\n \n         hir_visit::walk_crate(cx, krate);\n+\n+        run_lints!(cx, check_crate_post, late_passes, krate);\n     });\n \n     // If we missed any lints added to the session, then there's a bug somewhere\n@@ -1284,6 +1288,8 @@ pub fn check_ast_crate(sess: &Session, krate: &ast::Crate) {\n         run_lints!(cx, check_crate, early_passes, krate);\n \n         ast_visit::walk_crate(cx, krate);\n+\n+        run_lints!(cx, check_crate_post, early_passes, krate);\n     });\n \n     // Put the lint store back in the session."}, {"sha": "612b23ff98eab08ae143c18eba835dd2ec2eecc7", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8fa8410cdda074f37dd948dc48efc20137d4d62/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8fa8410cdda074f37dd948dc48efc20137d4d62/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=a8fa8410cdda074f37dd948dc48efc20137d4d62", "patch": "@@ -132,11 +132,13 @@ pub trait LintPass {\n pub trait LateLintPass: LintPass {\n     fn check_name(&mut self, _: &LateContext, _: Span, _: ast::Name) { }\n     fn check_crate(&mut self, _: &LateContext, _: &hir::Crate) { }\n+    fn check_crate_post(&mut self, _: &LateContext, _: &hir::Crate) { }\n     fn check_mod(&mut self, _: &LateContext, _: &hir::Mod, _: Span, _: ast::NodeId) { }\n     fn check_foreign_item(&mut self, _: &LateContext, _: &hir::ForeignItem) { }\n     fn check_item(&mut self, _: &LateContext, _: &hir::Item) { }\n     fn check_local(&mut self, _: &LateContext, _: &hir::Local) { }\n     fn check_block(&mut self, _: &LateContext, _: &hir::Block) { }\n+    fn check_block_post(&mut self, _: &LateContext, _: &hir::Block) { }\n     fn check_stmt(&mut self, _: &LateContext, _: &hir::Stmt) { }\n     fn check_arm(&mut self, _: &LateContext, _: &hir::Arm) { }\n     fn check_pat(&mut self, _: &LateContext, _: &hir::Pat) { }\n@@ -174,11 +176,13 @@ pub trait LateLintPass: LintPass {\n pub trait EarlyLintPass: LintPass {\n     fn check_ident(&mut self, _: &EarlyContext, _: Span, _: ast::Ident) { }\n     fn check_crate(&mut self, _: &EarlyContext, _: &ast::Crate) { }\n+    fn check_crate_post(&mut self, _: &EarlyContext, _: &ast::Crate) { }\n     fn check_mod(&mut self, _: &EarlyContext, _: &ast::Mod, _: Span, _: ast::NodeId) { }\n     fn check_foreign_item(&mut self, _: &EarlyContext, _: &ast::ForeignItem) { }\n     fn check_item(&mut self, _: &EarlyContext, _: &ast::Item) { }\n     fn check_local(&mut self, _: &EarlyContext, _: &ast::Local) { }\n     fn check_block(&mut self, _: &EarlyContext, _: &ast::Block) { }\n+    fn check_block_post(&mut self, _: &EarlyContext, _: &ast::Block) { }\n     fn check_stmt(&mut self, _: &EarlyContext, _: &ast::Stmt) { }\n     fn check_arm(&mut self, _: &EarlyContext, _: &ast::Arm) { }\n     fn check_pat(&mut self, _: &EarlyContext, _: &ast::Pat) { }"}]}