{"sha": "44a5ce6f75f03e0ef8975104ab7a8d6129adaa71", "node_id": "C_kwDOAAsO6NoAKDQ0YTVjZTZmNzVmMDNlMGVmODk3NTEwNGFiN2E4ZDYxMjlhZGFhNzE", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-01-10T11:23:58Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2023-01-11T22:00:25Z"}, "message": "Test that we cannot use trait impl methods arguments as defining uses", "tree": {"sha": "fd8e810abbf50750f9fb0b8cda41b0b81e3df41a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd8e810abbf50750f9fb0b8cda41b0b81e3df41a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44a5ce6f75f03e0ef8975104ab7a8d6129adaa71", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmO/MXwACgkQ+boUO5X/\nbYL1XBAAqT129DwGtbedK0mCjOlxRmw59hIe7U/4diAR9G5PEO8zCwkv3AHjmYal\nzEaYkfRXvMP5VEZ8or0XqUetwh2f0Z0s82CD4+VRnjwOW4/Ob33JjkVil9aiL1D5\n+KpibHxYVhljdulY38EKRlHuBwrFRaqo8ywerXpu41oWb3s6d0JCnZRwT0m+gHrb\nPN1yK3SI5yNgCZ1AeuRj8wxf6KbrWr0G1g2VH8TX5v4/rRdDBfvN9T3FNFso6CCs\n4o4kDShhjn3xiTJGC9KRt156PsTzdBr+JOH5yNiosf0jyzulBVFV1vJorEBUAuGj\nqKLtklaaE52ySnUM3N5Opq0pKvYrc52d0N/Z6B/G4BxQpXRL+mxcDOis3TBNZQR7\n5lnsuXNfammuzX0tvi37JiUmE9PAhrX+RcryyKeYmKVM8K5f8/8bd0PDf2zD9Rwa\nMi2llv1JSA1Avd16MSFPZGD+rlp30nptAMzGjckOTFwY/4trSUK6hortxlA6iuUM\nYXtyon/38cypjz3k4B4sXlTjLp67LlMSiySML8oCJbHDJxqZDIyDAjeVQacTLN1S\nMMj3wBLNn1YapdNnSNlIpR1qA10Rzp03A0IgvFlLQky1vf4itg/5Gs15ZHOpO+HB\nsKva4iDD+Zc25MICgXAyyfW1LcQtqaXngD5C9KSwkKsn4CTBseE=\n=qk0L\n-----END PGP SIGNATURE-----", "payload": "tree fd8e810abbf50750f9fb0b8cda41b0b81e3df41a\nparent ef4046e4f3932991971cdb64915172899532aece\nauthor Oli Scherer <git-spam-no-reply9815368754983@oli-obk.de> 1673349838 +0000\ncommitter David Tolnay <dtolnay@gmail.com> 1673474425 -0800\n\nTest that we cannot use trait impl methods arguments as defining uses\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44a5ce6f75f03e0ef8975104ab7a8d6129adaa71", "html_url": "https://github.com/rust-lang/rust/commit/44a5ce6f75f03e0ef8975104ab7a8d6129adaa71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44a5ce6f75f03e0ef8975104ab7a8d6129adaa71/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef4046e4f3932991971cdb64915172899532aece", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef4046e4f3932991971cdb64915172899532aece", "html_url": "https://github.com/rust-lang/rust/commit/ef4046e4f3932991971cdb64915172899532aece"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "1739ab0063fa9dfa386f1048b8c17315fb572892", "filename": "tests/ui/type-alias-impl-trait/unnameable_type.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/44a5ce6f75f03e0ef8975104ab7a8d6129adaa71/tests%2Fui%2Ftype-alias-impl-trait%2Funnameable_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44a5ce6f75f03e0ef8975104ab7a8d6129adaa71/tests%2Fui%2Ftype-alias-impl-trait%2Funnameable_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Funnameable_type.rs?ref=44a5ce6f75f03e0ef8975104ab7a8d6129adaa71", "patch": "@@ -0,0 +1,24 @@\n+#![feature(type_alias_impl_trait)]\n+\n+// This test ensures that unnameable types stay unnameable\n+// https://github.com/rust-lang/rust/issues/63063#issuecomment-1360053614\n+\n+// library\n+mod private {\n+    pub struct Private;\n+    pub trait Trait {\n+        fn dont_define_this(_private: Private) {}\n+    }\n+}\n+\n+use private::Trait;\n+\n+// downstream\n+type MyPrivate = impl Sized;\n+//~^ ERROR: unconstrained opaque type\n+impl Trait for u32 {\n+    fn dont_define_this(_private: MyPrivate) {}\n+    //~^ ERROR: incompatible type for trait\n+}\n+\n+fn main() {}"}, {"sha": "7dc6efc4b1b6b97c3c39de64a5f94992ea13bdac", "filename": "tests/ui/type-alias-impl-trait/unnameable_type.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/44a5ce6f75f03e0ef8975104ab7a8d6129adaa71/tests%2Fui%2Ftype-alias-impl-trait%2Funnameable_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44a5ce6f75f03e0ef8975104ab7a8d6129adaa71/tests%2Fui%2Ftype-alias-impl-trait%2Funnameable_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Funnameable_type.stderr?ref=44a5ce6f75f03e0ef8975104ab7a8d6129adaa71", "patch": "@@ -0,0 +1,31 @@\n+error: unconstrained opaque type\n+  --> $DIR/unnameable_type.rs:17:18\n+   |\n+LL | type MyPrivate = impl Sized;\n+   |                  ^^^^^^^^^^\n+   |\n+   = note: `MyPrivate` must be used in combination with a concrete type within the same module\n+\n+error[E0053]: method `dont_define_this` has an incompatible type for trait\n+  --> $DIR/unnameable_type.rs:20:35\n+   |\n+LL | type MyPrivate = impl Sized;\n+   |                  ---------- the found opaque type\n+...\n+LL |     fn dont_define_this(_private: MyPrivate) {}\n+   |                                   ^^^^^^^^^\n+   |                                   |\n+   |                                   expected struct `Private`, found opaque type\n+   |                                   help: change the parameter type to match the trait: `Private`\n+   |\n+note: type in trait\n+  --> $DIR/unnameable_type.rs:10:39\n+   |\n+LL |         fn dont_define_this(_private: Private) {}\n+   |                                       ^^^^^^^\n+   = note: expected signature `fn(Private)`\n+              found signature `fn(MyPrivate)`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0053`."}]}