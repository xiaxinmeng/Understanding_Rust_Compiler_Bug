{"sha": "cbfce40e1cf5e619091fb9b5efd06ed29fa915cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZmNlNDBlMWNmNWU2MTkwOTFmYjliNWVmZDA2ZWQyOWZhOTE1Y2Q=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-07-20T22:44:35Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-07-25T14:09:31Z"}, "message": "std: Stabilize CString/OsString/PathBuf extra methods\n\nStabilizes:\n\n* `CString::as_c_str`\n* `CString::into_boxed_c_str`\n* `CStr::into_c_string`\n* `OsString::into_boxed_os_str`\n* `OsStr::into_os_string`\n* `PathBuf::into_boxed_path`\n* `PathBuf::into_path_buf`\n\nCloses #40380", "tree": {"sha": "df7a60a1cf05a41a6372705616c74587a4711800", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df7a60a1cf05a41a6372705616c74587a4711800"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbfce40e1cf5e619091fb9b5efd06ed29fa915cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbfce40e1cf5e619091fb9b5efd06ed29fa915cd", "html_url": "https://github.com/rust-lang/rust/commit/cbfce40e1cf5e619091fb9b5efd06ed29fa915cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbfce40e1cf5e619091fb9b5efd06ed29fa915cd/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46de2af063f976b8b3ac174ee6a0636863fe6a4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/46de2af063f976b8b3ac174ee6a0636863fe6a4a", "html_url": "https://github.com/rust-lang/rust/commit/46de2af063f976b8b3ac174ee6a0636863fe6a4a"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "5dd7bb1c0c1d9105fdd33f6e26d0c29b6390a412", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cbfce40e1cf5e619091fb9b5efd06ed29fa915cd/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbfce40e1cf5e619091fb9b5efd06ed29fa915cd/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=cbfce40e1cf5e619091fb9b5efd06ed29fa915cd", "patch": "@@ -462,7 +462,7 @@ impl CString {\n     /// assert_eq!(c_str, CStr::from_bytes_with_nul(b\"foo\\0\").unwrap());\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"as_c_str\", issue = \"40380\")]\n+    #[stable(feature = \"as_c_str\", since = \"1.20.0\")]\n     pub fn as_c_str(&self) -> &CStr {\n         &*self\n     }\n@@ -482,7 +482,7 @@ impl CString {\n     /// let boxed = c_string.into_boxed_c_str();\n     /// assert_eq!(&*boxed, CStr::from_bytes_with_nul(b\"foo\\0\").unwrap());\n     /// ```\n-    #[unstable(feature = \"into_boxed_c_str\", issue = \"40380\")]\n+    #[stable(feature = \"into_boxed_c_str\", since = \"1.20.0\")]\n     pub fn into_boxed_c_str(self) -> Box<CStr> {\n         unsafe { mem::transmute(self.into_inner()) }\n     }\n@@ -1009,7 +1009,7 @@ impl CStr {\n     /// let boxed = c_string.into_boxed_c_str();\n     /// assert_eq!(boxed.into_c_string(), CString::new(\"foo\").unwrap());\n     /// ```\n-    #[unstable(feature = \"into_boxed_c_str\", issue = \"40380\")]\n+    #[stable(feature = \"into_boxed_c_str\", since = \"1.20.0\")]\n     pub fn into_c_string(self: Box<CStr>) -> CString {\n         unsafe { mem::transmute(self) }\n     }"}, {"sha": "6f147ea0eeccb48f840d36dfc8d160be541ddac7", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cbfce40e1cf5e619091fb9b5efd06ed29fa915cd/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbfce40e1cf5e619091fb9b5efd06ed29fa915cd/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=cbfce40e1cf5e619091fb9b5efd06ed29fa915cd", "patch": "@@ -260,7 +260,7 @@ impl OsString {\n     ///\n     /// let b: Box<OsStr> = s.into_boxed_os_str();\n     /// ```\n-    #[unstable(feature = \"into_boxed_os_str\", issue = \"40380\")]\n+    #[stable(feature = \"into_boxed_os_str\", since = \"1.20.0\")]\n     pub fn into_boxed_os_str(self) -> Box<OsStr> {\n         unsafe { mem::transmute(self.inner.into_box()) }\n     }\n@@ -511,7 +511,7 @@ impl OsStr {\n     ///\n     /// [`Box`]: ../boxed/struct.Box.html\n     /// [`OsString`]: struct.OsString.html\n-    #[unstable(feature = \"into_boxed_os_str\", issue = \"40380\")]\n+    #[stable(feature = \"into_boxed_os_str\", since = \"1.20.0\")]\n     pub fn into_os_string(self: Box<OsStr>) -> OsString {\n         let inner: Box<Slice> = unsafe { mem::transmute(self) };\n         OsString { inner: Buf::from_box(inner) }"}, {"sha": "e083ab0ef976f6623243aef87dd3c9ef50e5d90a", "filename": "src/libstd/path.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cbfce40e1cf5e619091fb9b5efd06ed29fa915cd/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbfce40e1cf5e619091fb9b5efd06ed29fa915cd/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=cbfce40e1cf5e619091fb9b5efd06ed29fa915cd", "patch": "@@ -1327,7 +1327,7 @@ impl PathBuf {\n     ///\n     /// [`Box`]: ../../std/boxed/struct.Box.html\n     /// [`Path`]: struct.Path.html\n-    #[unstable(feature = \"into_boxed_path\", issue = \"40380\")]\n+    #[stable(feature = \"into_boxed_path\", since = \"1.20.0\")]\n     pub fn into_boxed_path(self) -> Box<Path> {\n         unsafe { mem::transmute(self.inner.into_boxed_os_str()) }\n     }\n@@ -2300,7 +2300,7 @@ impl Path {\n     ///\n     /// [`Box`]: ../../std/boxed/struct.Box.html\n     /// [`PathBuf`]: struct.PathBuf.html\n-    #[unstable(feature = \"into_boxed_path\", issue = \"40380\")]\n+    #[stable(feature = \"into_boxed_path\", since = \"1.20.0\")]\n     pub fn into_path_buf(self: Box<Path>) -> PathBuf {\n         let inner: Box<OsStr> = unsafe { mem::transmute(self) };\n         PathBuf { inner: OsString::from(inner) }"}]}