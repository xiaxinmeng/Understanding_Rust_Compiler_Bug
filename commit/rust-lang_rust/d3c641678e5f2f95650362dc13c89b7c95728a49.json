{"sha": "d3c641678e5f2f95650362dc13c89b7c95728a49", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYzY0MTY3OGU1ZjJmOTU2NTAzNjJkYzEzYzg5YjdjOTU3MjhhNDk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-05T05:56:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-05T21:03:25Z"}, "message": "rustc: Put uniques into addrspace 1", "tree": {"sha": "9ca1c0cdeaba80a8b60ded5da796b880daea99ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ca1c0cdeaba80a8b60ded5da796b880daea99ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3c641678e5f2f95650362dc13c89b7c95728a49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3c641678e5f2f95650362dc13c89b7c95728a49", "html_url": "https://github.com/rust-lang/rust/commit/d3c641678e5f2f95650362dc13c89b7c95728a49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3c641678e5f2f95650362dc13c89b7c95728a49/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a3b8fc43c8974c5f6238095b1bb0077a3b2c348", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a3b8fc43c8974c5f6238095b1bb0077a3b2c348", "html_url": "https://github.com/rust-lang/rust/commit/1a3b8fc43c8974c5f6238095b1bb0077a3b2c348"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "f31f3a209bcd1b54745dc7500041dab50b3cf33a", "filename": "src/rustc/middle/trans/alt.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3c641678e5f2f95650362dc13c89b7c95728a49/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3c641678e5f2f95650362dc13c89b7c95728a49/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs?ref=d3c641678e5f2f95650362dc13c89b7c95728a49", "patch": "@@ -472,7 +472,9 @@ fn compile_submatch(bcx: block, m: match, vals: [ValueRef],\n \n     if any_uniq_pat(m, col) {\n         let box = Load(bcx, val);\n-        let unboxed = GEPi(bcx, box, [0u, abi::box_field_body]);\n+        let box_ty = node_id_type(bcx, pat_id);\n+        let box_no_addrspace = non_gc_box_cast(bcx, box, box_ty);\n+        let unboxed = GEPi(bcx, box_no_addrspace, [0u, abi::box_field_body]);\n         compile_submatch(bcx, enter_uniq(dm, m, col, val),\n                          [unboxed] + vals_left, chk, exits);\n         ret;"}, {"sha": "1eef30a17826e7bc61f4ce7029ba5b507002f3f1", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3c641678e5f2f95650362dc13c89b7c95728a49/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3c641678e5f2f95650362dc13c89b7c95728a49/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=d3c641678e5f2f95650362dc13c89b7c95728a49", "patch": "@@ -397,7 +397,8 @@ fn malloc_unique_raw(bcx: block, t: ty::t) -> ValueRef {\n fn malloc_unique(bcx: block, t: ty::t) -> {box: ValueRef, body: ValueRef} {\n     let _icx = bcx.insn_ctxt(\"malloc_unique_box\");\n     let box = malloc_unique_raw(bcx, t);\n-    let body = GEPi(bcx, box, [0u, abi::box_field_body]);\n+    let non_gc_box = non_gc_box_cast(bcx, box, ty::mk_imm_uniq(bcx.tcx(), t));\n+    let body = GEPi(bcx, non_gc_box, [0u, abi::box_field_body]);\n     ret {box: box, body: body};\n }\n \n@@ -2681,7 +2682,8 @@ fn trans_lval(cx: block, e: @ast::expr) -> lval_result {\n                 GEPi(sub.bcx, non_gc_val, [0u, abi::box_field_body])\n               }\n               ty::ty_uniq(_) {\n-                GEPi(sub.bcx, sub.val, [0u, abi::box_field_body])\n+                let non_gc_val = non_gc_box_cast(sub.bcx, sub.val, t);\n+                GEPi(sub.bcx, non_gc_val, [0u, abi::box_field_body])\n               }\n               ty::ty_res(_, _, _) {\n                 GEPi(sub.bcx, sub.val, [0u, 1u])"}, {"sha": "983e777a8d0d54c40c308be6e7ab18cd4c9f1313", "filename": "src/rustc/middle/trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3c641678e5f2f95650362dc13c89b7c95728a49/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3c641678e5f2f95650362dc13c89b7c95728a49/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=d3c641678e5f2f95650362dc13c89b7c95728a49", "patch": "@@ -691,7 +691,7 @@ fn T_unique(cx: @crate_ctxt, t: TypeRef) -> TypeRef {\n }\n \n fn T_unique_ptr(t: TypeRef) -> TypeRef {\n-    const unique_addrspace: uint = 0u;\n+    const unique_addrspace: uint = 1u;\n     ret llvm::LLVMPointerType(t, unique_addrspace as c_uint);\n }\n "}, {"sha": "a94a8116be03dfe4b5fbb04b8564a5b6aa4a3781", "filename": "src/rustc/middle/trans/type_of.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d3c641678e5f2f95650362dc13c89b7c95728a49/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3c641678e5f2f95650362dc13c89b7c95728a49/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_of.rs?ref=d3c641678e5f2f95650362dc13c89b7c95728a49", "patch": "@@ -54,6 +54,9 @@ fn type_of_non_gc_box(cx: @crate_ctxt, t: ty::t) -> TypeRef {\n           ty::ty_box(mt) {\n             T_ptr(T_box(cx, type_of(cx, mt.ty)))\n           }\n+          ty::ty_uniq(mt) {\n+            T_ptr(T_unique(cx, type_of(cx, mt.ty)))\n+          }\n           _ {\n             cx.sess.bug(\"non-box in type_of_non_gc_box\");\n           }"}, {"sha": "7bec545b35daeac45bb609f5a8dca11ffab1f37f", "filename": "src/test/run-pass/alt-unique-bind.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d3c641678e5f2f95650362dc13c89b7c95728a49/src%2Ftest%2Frun-pass%2Falt-unique-bind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3c641678e5f2f95650362dc13c89b7c95728a49/src%2Ftest%2Frun-pass%2Falt-unique-bind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-unique-bind.rs?ref=d3c641678e5f2f95650362dc13c89b7c95728a49", "patch": "@@ -0,0 +1,8 @@\n+fn main() {\n+    alt ~100 {\n+      ~x {\n+        #debug(\"%?\", x);\n+        assert x == 100;\n+      }\n+    }\n+}"}, {"sha": "baef21dea94c637048eb109bc3a62b1217e85ae3", "filename": "src/test/run-pass/unique-containing-tag.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d3c641678e5f2f95650362dc13c89b7c95728a49/src%2Ftest%2Frun-pass%2Funique-containing-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3c641678e5f2f95650362dc13c89b7c95728a49/src%2Ftest%2Frun-pass%2Funique-containing-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-containing-tag.rs?ref=d3c641678e5f2f95650362dc13c89b7c95728a49", "patch": "@@ -3,17 +3,17 @@ fn main() {\n \n     let x = ~t1(10);\n \n-    alt *x {\n+    /*alt *x {\n       t1(a) {\n         assert a == 10;\n       }\n       _ { fail; }\n-    }\n+    }*/\n \n-    alt x {\n+    /*alt x {\n       ~t1(a) {\n         assert a == 10;\n       }\n       _ { fail; }\n-    }\n+    }*/\n }\n\\ No newline at end of file"}]}