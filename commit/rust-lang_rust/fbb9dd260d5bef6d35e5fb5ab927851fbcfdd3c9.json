{"sha": "fbb9dd260d5bef6d35e5fb5ab927851fbcfdd3c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiYjlkZDI2MGQ1YmVmNmQzNWU1ZmI1YWI5Mjc4NTFmYmNmZGQzYzk=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-15T04:08:38Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-15T04:08:38Z"}, "message": "Clarify output allocations.", "tree": {"sha": "3e2af60b31b2357784fd5083b0c42ac5f18659a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e2af60b31b2357784fd5083b0c42ac5f18659a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbb9dd260d5bef6d35e5fb5ab927851fbcfdd3c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbb9dd260d5bef6d35e5fb5ab927851fbcfdd3c9", "html_url": "https://github.com/rust-lang/rust/commit/fbb9dd260d5bef6d35e5fb5ab927851fbcfdd3c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbb9dd260d5bef6d35e5fb5ab927851fbcfdd3c9/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1475e5cd4a1fc3075e193dc97dbc8f52f2f49ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1475e5cd4a1fc3075e193dc97dbc8f52f2f49ed", "html_url": "https://github.com/rust-lang/rust/commit/b1475e5cd4a1fc3075e193dc97dbc8f52f2f49ed"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2d81b1b265fd783a6045fa72d2b027b75aea46c8", "filename": "src/interpreter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fbb9dd260d5bef6d35e5fb5ab927851fbcfdd3c9/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbb9dd260d5bef6d35e5fb5ab927851fbcfdd3c9/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=fbb9dd260d5bef6d35e5fb5ab927851fbcfdd3c9", "patch": "@@ -532,7 +532,7 @@ pub fn interpret_start_points<'tcx>(tcx: &TyCtxt<'tcx>, mir_map: &MirMap<'tcx>)\n     /// Print the given allocation and all allocations it depends on.\n     fn print_allocation_tree(memory: &Memory, alloc_id: memory::AllocId) {\n         let alloc = memory.get(alloc_id).unwrap();\n-        println!(\"  {:?}\", alloc);\n+        println!(\"  {:?}: {:?}\", alloc_id, alloc);\n         for &target_alloc in alloc.relocations.values() {\n             print_allocation_tree(memory, target_alloc);\n         }"}]}