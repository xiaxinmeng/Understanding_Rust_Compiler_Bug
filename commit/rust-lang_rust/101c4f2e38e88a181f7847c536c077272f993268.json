{"sha": "101c4f2e38e88a181f7847c536c077272f993268", "node_id": "C_kwDOAAsO6NoAKDEwMWM0ZjJlMzhlODhhMTgxZjc4NDdjNTM2YzA3NzI3MmY5OTMyNjg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-26T21:44:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-26T21:44:32Z"}, "message": "Auto merge of #2511 - RalfJung:extern-so, r=RalfJung\n\nsome extern-so cleanup and fixes", "tree": {"sha": "9fa46f2276a88e4da9fdcacea2c91ffce2bb2504", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fa46f2276a88e4da9fdcacea2c91ffce2bb2504"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/101c4f2e38e88a181f7847c536c077272f993268", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/101c4f2e38e88a181f7847c536c077272f993268", "html_url": "https://github.com/rust-lang/rust/commit/101c4f2e38e88a181f7847c536c077272f993268", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/101c4f2e38e88a181f7847c536c077272f993268/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ae68749f7902a5820f59ea6f04e5ea0b91e5f99", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ae68749f7902a5820f59ea6f04e5ea0b91e5f99", "html_url": "https://github.com/rust-lang/rust/commit/4ae68749f7902a5820f59ea6f04e5ea0b91e5f99"}, {"sha": "235036fcb3b8cac8b98774224c56c0ab7b454bb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/235036fcb3b8cac8b98774224c56c0ab7b454bb5", "html_url": "https://github.com/rust-lang/rust/commit/235036fcb3b8cac8b98774224c56c0ab7b454bb5"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "15d6c963ad21fc914554cb8d1c855f795fcd1dec", "filename": "build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/101c4f2e38e88a181f7847c536c077272f993268/build.rs", "raw_url": "https://github.com/rust-lang/rust/raw/101c4f2e38e88a181f7847c536c077272f993268/build.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build.rs?ref=101c4f2e38e88a181f7847c536c077272f993268", "patch": "@@ -2,5 +2,5 @@ fn main() {\n     // Re-export the TARGET environment variable so it can\n     // be accessed by miri.\n     let target = std::env::var(\"TARGET\").unwrap();\n-    println!(\"cargo:rustc-env=TARGET={:?}\", target);\n+    println!(\"cargo:rustc-env=TARGET={}\", target);\n }"}, {"sha": "2684ad7ff3d39b10ddb295e4f37c05e6bddeda34", "filename": "src/bin/miri.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/101c4f2e38e88a181f7847c536c077272f993268/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/101c4f2e38e88a181f7847c536c077272f993268/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=101c4f2e38e88a181f7847c536c077272f993268", "patch": "@@ -534,14 +534,14 @@ fn main() {\n             let filename = param.to_string();\n             if std::path::Path::new(&filename).exists() {\n                 if let Some(other_filename) = miri_config.external_so_file {\n-                    panic!(\n-                        \"-Zmiri-extern-so-file external SO file is already set to {}\",\n+                    show_error!(\n+                        \"-Zmiri-extern-so-file is already set to {}\",\n                         other_filename.display()\n                     );\n                 }\n                 miri_config.external_so_file = Some(filename.into());\n             } else {\n-                panic!(\"-Zmiri-extern-so-file path {} does not exist\", filename);\n+                show_error!(\"-Zmiri-extern-so-file `{}` does not exist\", filename);\n             }\n         } else {\n             // Forward to rustc."}, {"sha": "df2566de88f97b0cb10d445f1017e8dad42d2ea0", "filename": "src/machine.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/101c4f2e38e88a181f7847c536c077272f993268/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/101c4f2e38e88a181f7847c536c077272f993268/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=101c4f2e38e88a181f7847c536c077272f993268", "patch": "@@ -418,9 +418,11 @@ impl<'mir, 'tcx> Evaluator<'mir, 'tcx> {\n             since_progress_report: 0,\n             external_so_lib: config.external_so_file.as_ref().map(|lib_file_path| {\n                 // Check if host target == the session target.\n-                if option_env!(\"TARGET\") == Some(target_triple) {\n+                if env!(\"TARGET\") != target_triple {\n                     panic!(\n-                        \"calling external C functions in linked .so file requires target and host to be the same\"\n+                        \"calling external C functions in linked .so file requires host and target to be the same: host={}, target={}\",\n+                        env!(\"TARGET\"),\n+                        target_triple,\n                     );\n                 }\n                 // Note: it is the user's responsibility to provide a correct SO file.\n@@ -429,7 +431,7 @@ impl<'mir, 'tcx> Evaluator<'mir, 'tcx> {\n                 (\n                     unsafe {\n                         libloading::Library::new(lib_file_path)\n-                            .expect(\"Failed to read specified shared object file\")\n+                            .expect(\"failed to read specified extern shared object file\")\n                     },\n                     lib_file_path.clone(),\n                 )"}, {"sha": "117e0933ddcf9fdcfc4160ee56150facc6746a11", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/101c4f2e38e88a181f7847c536c077272f993268/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/101c4f2e38e88a181f7847c536c077272f993268/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=101c4f2e38e88a181f7847c536c077272f993268", "patch": "@@ -370,11 +370,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     ) -> InterpResult<'tcx, EmulateByNameResult<'mir, 'tcx>> {\n         let this = self.eval_context_mut();\n \n-        // First deal with any external C functions in linked .so file\n-        // (if any SO file is specified, and if the host target == the session target)\n+        // First deal with any external C functions in linked .so file.\n         if this.machine.external_so_lib.as_ref().is_some() {\n             // An Ok(false) here means that the function being called was not exported\n-            // by the specified SO file; we should continue and check if it corresponds to\n+            // by the specified `.so` file; we should continue and check if it corresponds to\n             // a provided shim.\n             if this.call_external_c_fct(link_name, dest, args)? {\n                 return Ok(EmulateByNameResult::NeedsJumping);"}, {"sha": "1e1d0b11e99ffd444443f5a3e11021307707a04b", "filename": "tests/extern-so/pass/call_extern_c_fn.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/101c4f2e38e88a181f7847c536c077272f993268/tests%2Fextern-so%2Fpass%2Fcall_extern_c_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/101c4f2e38e88a181f7847c536c077272f993268/tests%2Fextern-so%2Fpass%2Fcall_extern_c_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fextern-so%2Fpass%2Fcall_extern_c_fn.rs?ref=101c4f2e38e88a181f7847c536c077272f993268", "previous_filename": "tests/extern-so/pass/call_extern_c_fcts.rs"}, {"sha": "7ba13d2d7b02e396663d717879b01c9784c3ce3a", "filename": "tests/extern-so/pass/call_extern_c_fn.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/101c4f2e38e88a181f7847c536c077272f993268/tests%2Fextern-so%2Fpass%2Fcall_extern_c_fn.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/101c4f2e38e88a181f7847c536c077272f993268/tests%2Fextern-so%2Fpass%2Fcall_extern_c_fn.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fextern-so%2Fpass%2Fcall_extern_c_fn.stdout?ref=101c4f2e38e88a181f7847c536c077272f993268", "previous_filename": "tests/extern-so/pass/call_extern_c_fcts.stdout"}]}