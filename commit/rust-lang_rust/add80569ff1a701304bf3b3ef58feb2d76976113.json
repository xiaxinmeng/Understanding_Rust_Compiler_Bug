{"sha": "add80569ff1a701304bf3b3ef58feb2d76976113", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkZDgwNTY5ZmYxYTcwMTMwNGJmM2IzZWY1OGZlYjJkNzY5NzYxMTM=", "commit": {"author": {"name": "Mark Story", "email": "mark@mark-story.com", "date": "2016-01-14T01:56:35Z"}, "committer": {"name": "Mark Story", "email": "mark@mark-story.com", "date": "2016-01-14T02:07:38Z"}, "message": "Use PartialEq/Eq implementation instead of match.\n\nAlso cleanup from rebasing onto master.", "tree": {"sha": "bc599743b378fdedd65b5dfbc6ed13a9cdb2ea2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc599743b378fdedd65b5dfbc6ed13a9cdb2ea2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/add80569ff1a701304bf3b3ef58feb2d76976113", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/add80569ff1a701304bf3b3ef58feb2d76976113", "html_url": "https://github.com/rust-lang/rust/commit/add80569ff1a701304bf3b3ef58feb2d76976113", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/add80569ff1a701304bf3b3ef58feb2d76976113/comments", "author": {"login": "markstory", "id": 24086, "node_id": "MDQ6VXNlcjI0MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/24086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markstory", "html_url": "https://github.com/markstory", "followers_url": "https://api.github.com/users/markstory/followers", "following_url": "https://api.github.com/users/markstory/following{/other_user}", "gists_url": "https://api.github.com/users/markstory/gists{/gist_id}", "starred_url": "https://api.github.com/users/markstory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markstory/subscriptions", "organizations_url": "https://api.github.com/users/markstory/orgs", "repos_url": "https://api.github.com/users/markstory/repos", "events_url": "https://api.github.com/users/markstory/events{/privacy}", "received_events_url": "https://api.github.com/users/markstory/received_events", "type": "User", "site_admin": false}, "committer": {"login": "markstory", "id": 24086, "node_id": "MDQ6VXNlcjI0MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/24086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markstory", "html_url": "https://github.com/markstory", "followers_url": "https://api.github.com/users/markstory/followers", "following_url": "https://api.github.com/users/markstory/following{/other_user}", "gists_url": "https://api.github.com/users/markstory/gists{/gist_id}", "starred_url": "https://api.github.com/users/markstory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markstory/subscriptions", "organizations_url": "https://api.github.com/users/markstory/orgs", "repos_url": "https://api.github.com/users/markstory/repos", "events_url": "https://api.github.com/users/markstory/events{/privacy}", "received_events_url": "https://api.github.com/users/markstory/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58410ddd9385b9570ba65744096ea6bedbb1e040", "url": "https://api.github.com/repos/rust-lang/rust/commits/58410ddd9385b9570ba65744096ea6bedbb1e040", "html_url": "https://github.com/rust-lang/rust/commit/58410ddd9385b9570ba65744096ea6bedbb1e040"}], "stats": {"total": 40, "additions": 13, "deletions": 27}, "files": [{"sha": "2a276dce120d571092f04dcdad6e7b3493b7293d", "filename": "src/checkstyle.rs", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/add80569ff1a701304bf3b3ef58feb2d76976113/src%2Fcheckstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/add80569ff1a701304bf3b3ef58feb2d76976113/src%2Fcheckstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcheckstyle.rs?ref=add80569ff1a701304bf3b3ef58feb2d76976113", "patch": "@@ -9,37 +9,31 @@\n // except according to those terms.\n use rustfmt_diff::{Mismatch, DiffLine};\n use std::io::{self, Write, Read, stdout};\n-use WriteMode;\n+use config::WriteMode;\n \n \n pub fn output_heading(mode: WriteMode) -> Result<(), io::Error> {\n     let stdout = stdout();\n     let mut stdout = stdout.lock();\n-    match mode {\n-        WriteMode::Checkstyle => {\n-            let mut xml_heading = String::new();\n-            xml_heading.push_str(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\");\n-            xml_heading.push_str(\"\\n\");\n-            xml_heading.push_str(\"<checkstyle version=\\\"4.3\\\">\");\n-            try!(write!(stdout, \"{}\", xml_heading));\n-            Ok(())\n-        }\n-        _ => Ok(()),\n+    if mode == WriteMode::Checkstyle {\n+        let mut xml_heading = String::new();\n+        xml_heading.push_str(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\");\n+        xml_heading.push_str(\"\\n\");\n+        xml_heading.push_str(\"<checkstyle version=\\\"4.3\\\">\");\n+        try!(write!(stdout, \"{}\", xml_heading));\n     }\n+    Ok(())\n }\n \n pub fn output_footing(mode: WriteMode) -> Result<(), io::Error> {\n     let stdout = stdout();\n     let mut stdout = stdout.lock();\n-    match mode {\n-        WriteMode::Checkstyle => {\n-            let mut xml_tail = String::new();\n-            xml_tail.push_str(\"</checkstyle>\");\n-            try!(write!(stdout, \"{}\", xml_tail));\n-            Ok(())\n-        }\n-        _ => Ok(()),\n+    if mode == WriteMode::Checkstyle {\n+        let mut xml_tail = String::new();\n+        xml_tail.push_str(\"</checkstyle>\");\n+        try!(write!(stdout, \"{}\", xml_tail));\n     }\n+    Ok(())\n }\n \n pub fn output_checkstyle_file<T>(mut writer: T,"}, {"sha": "a2cba78ae96bee877bba75377a4881410af72173", "filename": "src/filemap.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/add80569ff1a701304bf3b3ef58feb2d76976113/src%2Ffilemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/add80569ff1a701304bf3b3ef58feb2d76976113/src%2Ffilemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffilemap.rs?ref=add80569ff1a701304bf3b3ef58feb2d76976113", "patch": "@@ -161,14 +161,6 @@ pub fn write_file(text: &StringBuffer,\n             // Output the XML tags for the lines that are different.\n             try!(output_checkstyle_file(stdout, filename, diff));\n         }\n-        WriteMode::Return => {\n-            // io::Write is not implemented for String, working around with\n-            // Vec<u8>\n-            let mut v = Vec::new();\n-            try!(write_system_newlines(&mut v, text, config));\n-            // won't panic, we are writing correct utf8\n-            return Ok(Some(String::from_utf8(v).unwrap()));\n-        }\n     }\n \n     Ok(None)"}]}