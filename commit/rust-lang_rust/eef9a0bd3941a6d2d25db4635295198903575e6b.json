{"sha": "eef9a0bd3941a6d2d25db4635295198903575e6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlZjlhMGJkMzk0MWE2ZDJkMjVkYjQ2MzUyOTUxOTg5MDM1NzVlNmI=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-02T13:30:51Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-02T13:30:51Z"}, "message": "Evaluate alt expressions in their own block context\n\nCloses #785", "tree": {"sha": "edbd0c076d9ebd8cfec4ca74b9e86a9371b5587b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edbd0c076d9ebd8cfec4ca74b9e86a9371b5587b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eef9a0bd3941a6d2d25db4635295198903575e6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eef9a0bd3941a6d2d25db4635295198903575e6b", "html_url": "https://github.com/rust-lang/rust/commit/eef9a0bd3941a6d2d25db4635295198903575e6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eef9a0bd3941a6d2d25db4635295198903575e6b/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8d35e7c400fe0140de128a41d4b9f2ff7a3735b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8d35e7c400fe0140de128a41d4b9f2ff7a3735b", "html_url": "https://github.com/rust-lang/rust/commit/d8d35e7c400fe0140de128a41d4b9f2ff7a3735b"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "8ac7a6e8a2389608989118069dedf4d9283cf011", "filename": "src/comp/middle/trans_alt.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/eef9a0bd3941a6d2d25db4635295198903575e6b/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eef9a0bd3941a6d2d25db4635295198903575e6b/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs?ref=eef9a0bd3941a6d2d25db4635295198903575e6b", "patch": "@@ -624,7 +624,10 @@ fn trans_alt(cx: @block_ctxt, expr: @ast::expr, arms: [ast::arm],\n              dest: trans::dest) -> @block_ctxt {\n     let bodies = [];\n     let match: match = [];\n-    let er = trans::trans_temp_expr(cx, expr);\n+    let alt_cx = new_scope_block_ctxt(cx, \"alt\");\n+    Br(cx, alt_cx.llbb);\n+\n+    let er = trans::trans_temp_expr(alt_cx, expr);\n     if er.bcx.unreachable { ret er.bcx; }\n \n     for a: ast::arm in arms {\n@@ -654,7 +657,7 @@ fn trans_alt(cx: @block_ctxt, expr: @ast::expr, arms: [ast::arm],\n     let t = trans::node_id_type(cx.fcx.lcx.ccx, expr.id);\n     let vr = trans::spill_if_immediate(er.bcx, er.val, t);\n     compile_submatch(vr.bcx, match, [vr.val],\n-                     bind mk_fail(cx, expr.span, fail_cx), exit_map);\n+                     bind mk_fail(alt_cx, expr.span, fail_cx), exit_map);\n \n     let arm_cxs = [], arm_dests = [], i = 0u;\n     for a: ast::arm in arms {\n@@ -667,7 +670,11 @@ fn trans_alt(cx: @block_ctxt, expr: @ast::expr, arms: [ast::arm],\n         }\n         i += 1u;\n     }\n-    ret trans::join_returns(cx, arm_cxs, arm_dests, dest);\n+    let after_cx = trans::join_returns(cx, arm_cxs, arm_dests, dest);\n+    after_cx = trans::trans_block_cleanups(after_cx, alt_cx);\n+    let next_cx = new_sub_block_ctxt(after_cx, \"next\");\n+    Br(after_cx, next_cx.llbb);\n+    ret next_cx;\n }\n \n // Not alt-related, but similar to the pattern-munging code above"}]}