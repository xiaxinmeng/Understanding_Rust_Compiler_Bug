{"sha": "bedbf3bacbff36a477dcf28523cbf6cab67e9e0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZGJmM2JhY2JmZjM2YTQ3N2RjZjI4NTIzY2JmNmNhYjY3ZTllMGE=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "matti@marinelayer.io", "date": "2019-09-05T12:08:06Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2019-10-22T17:23:10Z"}, "message": "Apply clippy::single_match suggestion", "tree": {"sha": "b4f62607d9291f87d602c29e994eac6ea41040a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4f62607d9291f87d602c29e994eac6ea41040a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bedbf3bacbff36a477dcf28523cbf6cab67e9e0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bedbf3bacbff36a477dcf28523cbf6cab67e9e0a", "html_url": "https://github.com/rust-lang/rust/commit/bedbf3bacbff36a477dcf28523cbf6cab67e9e0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bedbf3bacbff36a477dcf28523cbf6cab67e9e0a/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "749146827865dfe1f62ce757795415414bb75a15", "url": "https://api.github.com/repos/rust-lang/rust/commits/749146827865dfe1f62ce757795415414bb75a15", "html_url": "https://github.com/rust-lang/rust/commit/749146827865dfe1f62ce757795415414bb75a15"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "89f2d7ab29c9374e7751ec4821d44562160a09d9", "filename": "src/libcore/option.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bedbf3bacbff36a477dcf28523cbf6cab67e9e0a/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bedbf3bacbff36a477dcf28523cbf6cab67e9e0a/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=bedbf3bacbff36a477dcf28523cbf6cab67e9e0a", "patch": "@@ -837,9 +837,8 @@ impl<T> Option<T> {\n     #[inline]\n     #[stable(feature = \"option_entry\", since = \"1.20.0\")]\n     pub fn get_or_insert_with<F: FnOnce() -> T>(&mut self, f: F) -> &mut T {\n-        match *self {\n-            None => *self = Some(f()),\n-            _ => (),\n+        if let None = *self {\n+            *self = Some(f());\n         }\n \n         match *self {"}, {"sha": "cfaab4e22e9cf9a2d5d51b44139b3f31639f4ef4", "filename": "src/libstd/thread/local.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bedbf3bacbff36a477dcf28523cbf6cab67e9e0a/src%2Flibstd%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bedbf3bacbff36a477dcf28523cbf6cab67e9e0a/src%2Flibstd%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Flocal.rs?ref=bedbf3bacbff36a477dcf28523cbf6cab67e9e0a", "patch": "@@ -509,9 +509,8 @@ pub mod os {\n         pub unsafe fn get(&'static self, init: fn() -> T) -> Option<&'static T> {\n             let ptr = self.os.get() as *mut Value<T>;\n             if ptr as usize > 1 {\n-                match (*ptr).inner.get() {\n-                    Some(ref value) => return Some(value),\n-                    None => {},\n+                if let Some(ref value) = (*ptr).inner.get() {\n+                    return Some(value);\n                 }\n             }\n             self.try_initialize(init)"}]}