{"sha": "e7c557b2958883d5f1927780cc2f4708efe6a00c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3YzU1N2IyOTU4ODgzZDVmMTkyNzc4MGNjMmY0NzA4ZWZlNmEwMGM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-25T21:37:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-25T21:37:19Z"}, "message": "Rollup merge of #68498 - Aaron1011:tait-regression-tests, r=Centril\n\nAdd some type-alias-impl-trait regression tests\n\nFixes #57611\nFixes #57807", "tree": {"sha": "1331cea78a16e455af5ac739ad85a8d9cb32c7d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1331cea78a16e455af5ac739ad85a8d9cb32c7d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7c557b2958883d5f1927780cc2f4708efe6a00c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeLLUQCRBK7hj4Ov3rIwAAdHIIACkpL7sflkR7KdD+ADWDECvp\naO/CTC4g6aMnuKqEmOtIeYJiDB0G3E1clUcq4/mbmn6+AgAojRQCBVcJH9U0gsWf\nVW3yi6QpYAbdiJBik48KQxWeQFBLdc7qvhBDM/t/SUJ6FcHDsKeNINIhjGaRxKhK\nIL1ndUUox0mvUQq3qUYtsvCdlbiIJjmNx26mwvrplVYwPhA6Df766tb5WbtQk5Il\n+bPI/V6Npx8fA6cRCLOboKSgy8EATqzpdZ6q6Rfx5/mwQU+/+Sq5Fi2bakgOXzmK\nRWupbC60vNKUVoZS4w83DQfSzQebUHcpDEUmuwHUh2YhuF70huBOAahRve+cu3U=\n=W+Uk\n-----END PGP SIGNATURE-----\n", "payload": "tree 1331cea78a16e455af5ac739ad85a8d9cb32c7d3\nparent 88429fb5e250d61e60578e3ed5de4ac2d56567a8\nparent 1605276cc2ff3319a7f360b389be1a53d0d5751c\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1579988239 +0900\ncommitter GitHub <noreply@github.com> 1579988239 +0900\n\nRollup merge of #68498 - Aaron1011:tait-regression-tests, r=Centril\n\nAdd some type-alias-impl-trait regression tests\n\nFixes #57611\nFixes #57807\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7c557b2958883d5f1927780cc2f4708efe6a00c", "html_url": "https://github.com/rust-lang/rust/commit/e7c557b2958883d5f1927780cc2f4708efe6a00c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7c557b2958883d5f1927780cc2f4708efe6a00c/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88429fb5e250d61e60578e3ed5de4ac2d56567a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/88429fb5e250d61e60578e3ed5de4ac2d56567a8", "html_url": "https://github.com/rust-lang/rust/commit/88429fb5e250d61e60578e3ed5de4ac2d56567a8"}, {"sha": "1605276cc2ff3319a7f360b389be1a53d0d5751c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1605276cc2ff3319a7f360b389be1a53d0d5751c", "html_url": "https://github.com/rust-lang/rust/commit/1605276cc2ff3319a7f360b389be1a53d0d5751c"}], "stats": {"total": 81, "additions": 81, "deletions": 0}, "files": [{"sha": "1c2051e7eaeebef25bdef7008e334b58493be71a", "filename": "src/test/ui/type-alias-impl-trait/issue-57611-trait-alias.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e7c557b2958883d5f1927780cc2f4708efe6a00c/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7c557b2958883d5f1927780cc2f4708efe6a00c/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.rs?ref=e7c557b2958883d5f1927780cc2f4708efe6a00c", "patch": "@@ -0,0 +1,27 @@\n+// Regression test for issue #57611\n+// Ensures that we don't ICE\n+// FIXME: This should compile, but it currently doesn't\n+\n+#![feature(trait_alias)]\n+#![feature(type_alias_impl_trait)]\n+\n+trait Foo {\n+    type Bar: Baz<Self, Self>;\n+\n+    fn bar(&self) -> Self::Bar;\n+}\n+\n+struct X;\n+\n+impl Foo for X {\n+    type Bar = impl Baz<Self, Self>; //~ ERROR type mismatch in closure arguments\n+    //~^ ERROR type mismatch resolving\n+\n+    fn bar(&self) -> Self::Bar {\n+        |x| x\n+    }\n+}\n+\n+trait Baz<A, B> = Fn(&A) -> &B;\n+\n+fn main() {}"}, {"sha": "f648b7bfc991d947bc10cac690ca628e38cfe907", "filename": "src/test/ui/type-alias-impl-trait/issue-57611-trait-alias.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e7c557b2958883d5f1927780cc2f4708efe6a00c/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e7c557b2958883d5f1927780cc2f4708efe6a00c/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.stderr?ref=e7c557b2958883d5f1927780cc2f4708efe6a00c", "patch": "@@ -0,0 +1,23 @@\n+error[E0631]: type mismatch in closure arguments\n+  --> $DIR/issue-57611-trait-alias.rs:17:5\n+   |\n+LL |     type Bar = impl Baz<Self, Self>;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected signature of `for<'r> fn(&'r X) -> _`\n+...\n+LL |         |x| x\n+   |         ----- found signature of `fn(_) -> _`\n+   |\n+   = note: the return type of a function must have a statically known size\n+\n+error[E0271]: type mismatch resolving `for<'r> <[closure@$DIR/issue-57611-trait-alias.rs:21:9: 21:14] as std::ops::FnOnce<(&'r X,)>>::Output == &'r X`\n+  --> $DIR/issue-57611-trait-alias.rs:17:5\n+   |\n+LL |     type Bar = impl Baz<Self, Self>;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected bound lifetime parameter, found concrete lifetime\n+   |\n+   = note: the return type of a function must have a statically known size\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0271, E0631.\n+For more information about an error, try `rustc --explain E0271`."}, {"sha": "fcab2c7db2605a341fd2be2d2a66e74caed89247", "filename": "src/test/ui/type-alias-impl-trait/issue-57807-associated-type.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/e7c557b2958883d5f1927780cc2f4708efe6a00c/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57807-associated-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7c557b2958883d5f1927780cc2f4708efe6a00c/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57807-associated-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57807-associated-type.rs?ref=e7c557b2958883d5f1927780cc2f4708efe6a00c", "patch": "@@ -0,0 +1,31 @@\n+// Regression test for issue #57807 - ensure\n+// that we properly unify associated types within\n+// a type alias impl trait\n+// check-pass\n+#![feature(type_alias_impl_trait)]\n+\n+trait Bar {\n+    type A;\n+}\n+\n+impl Bar for () {\n+    type A = ();\n+}\n+\n+trait Foo {\n+    type A;\n+    type B: Bar<A = Self::A>;\n+\n+    fn foo() -> Self::B;\n+}\n+\n+impl Foo for () {\n+    type A = ();\n+    type B = impl Bar<A = Self::A>;\n+\n+    fn foo() -> Self::B {\n+        ()\n+    }\n+}\n+\n+fn main() {}"}]}