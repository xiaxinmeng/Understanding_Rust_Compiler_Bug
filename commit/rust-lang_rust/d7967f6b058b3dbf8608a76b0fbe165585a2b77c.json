{"sha": "d7967f6b058b3dbf8608a76b0fbe165585a2b77c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3OTY3ZjZiMDU4YjNkYmY4NjA4YTc2YjBmYmUxNjU1ODVhMmI3N2M=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-26T13:54:02Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-26T13:54:02Z"}, "message": "Drop files explicitly when closing them", "tree": {"sha": "04efb98792f634711d21086ab85e6b63e219d426", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04efb98792f634711d21086ab85e6b63e219d426"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7967f6b058b3dbf8608a76b0fbe165585a2b77c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7967f6b058b3dbf8608a76b0fbe165585a2b77c", "html_url": "https://github.com/rust-lang/rust/commit/d7967f6b058b3dbf8608a76b0fbe165585a2b77c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7967f6b058b3dbf8608a76b0fbe165585a2b77c/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "260b463bb037809e9558421ad5e73bf89e9a08df", "url": "https://api.github.com/repos/rust-lang/rust/commits/260b463bb037809e9558421ad5e73bf89e9a08df", "html_url": "https://github.com/rust-lang/rust/commit/260b463bb037809e9558421ad5e73bf89e9a08df"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "c57ec1a1f916bb4be69a743ccf35b7f1ef18c649", "filename": "src/shims/fs.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d7967f6b058b3dbf8608a76b0fbe165585a2b77c/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7967f6b058b3dbf8608a76b0fbe165585a2b77c/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=d7967f6b058b3dbf8608a76b0fbe165585a2b77c", "patch": "@@ -143,7 +143,13 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let fd = this.read_scalar(fd_op)?.to_i32()?;\n \n         if let Some(handle) = this.machine.file_handler.handles.remove(&fd) {\n-            this.try_unwrap_io_result(handle.file.sync_all().map(|_| 0i32))\n+            // `File::sync_all` does the checks that are done when closing a file. We do this to\n+            // to handle possible errors correctly.\n+            let result = this.try_unwrap_io_result(handle.file.sync_all().map(|_| 0i32));\n+            // Now we actually drop the handle.\n+            drop(handle);\n+            // And return the result.\n+            result\n         } else {\n             this.handle_not_found()\n         }"}]}