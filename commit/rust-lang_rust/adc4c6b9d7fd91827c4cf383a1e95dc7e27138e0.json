{"sha": "adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYzRjNmI5ZDdmZDkxODI3YzRjZjM4M2ExZTk1ZGM3ZTI3MTM4ZTA=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-09-12T09:55:01Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-09-12T10:11:16Z"}, "message": "Make MergeBehaviour configurable", "tree": {"sha": "52e7715aed7a83da34c0c6c139d3651dd255629e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52e7715aed7a83da34c0c6c139d3651dd255629e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "html_url": "https://github.com/rust-lang/rust/commit/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8623461a57e7882ac47b5da13a1a03efa58f603", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8623461a57e7882ac47b5da13a1a03efa58f603", "html_url": "https://github.com/rust-lang/rust/commit/c8623461a57e7882ac47b5da13a1a03efa58f603"}], "stats": {"total": 82, "additions": 65, "deletions": 17}, "files": [{"sha": "adf02edabe7b8e6eb0ab6d10c43abeb1ec5a3154", "filename": "crates/assists/src/assist_config.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Fassists%2Fsrc%2Fassist_config.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Fassists%2Fsrc%2Fassist_config.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fassist_config.rs?ref=adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "patch": "@@ -4,12 +4,13 @@\n //! module, and we use to statically check that we only produce snippet\n //! assists if we are allowed to.\n \n-use crate::AssistKind;\n+use crate::{utils::MergeBehaviour, AssistKind};\n \n #[derive(Clone, Debug, PartialEq, Eq)]\n pub struct AssistConfig {\n     pub snippet_cap: Option<SnippetCap>,\n     pub allowed: Option<Vec<AssistKind>>,\n+    pub insert_use: InsertUseConfig,\n }\n \n impl AssistConfig {\n@@ -25,6 +26,21 @@ pub struct SnippetCap {\n \n impl Default for AssistConfig {\n     fn default() -> Self {\n-        AssistConfig { snippet_cap: Some(SnippetCap { _private: () }), allowed: None }\n+        AssistConfig {\n+            snippet_cap: Some(SnippetCap { _private: () }),\n+            allowed: None,\n+            insert_use: InsertUseConfig::default(),\n+        }\n+    }\n+}\n+\n+#[derive(Clone, Copy, Debug, PartialEq, Eq)]\n+pub struct InsertUseConfig {\n+    pub merge: Option<MergeBehaviour>,\n+}\n+\n+impl Default for InsertUseConfig {\n+    fn default() -> Self {\n+        InsertUseConfig { merge: Some(MergeBehaviour::Full) }\n     }\n }"}, {"sha": "b5eb2c7226eee0efce5b9eec7cba1eb5e5dff110", "filename": "crates/assists/src/handlers/auto_import.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs?ref=adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "patch": "@@ -14,10 +14,7 @@ use syntax::{\n     SyntaxNode,\n };\n \n-use crate::{\n-    utils::{insert_use, MergeBehaviour},\n-    AssistContext, AssistId, AssistKind, Assists, GroupLabel,\n-};\n+use crate::{utils::insert_use, AssistContext, AssistId, AssistKind, Assists, GroupLabel};\n \n // Assist: auto_import\n //\n@@ -60,7 +57,7 @@ pub(crate) fn auto_import(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n                 let new_syntax = insert_use(\n                     &scope,\n                     make::path_from_text(&import.to_string()),\n-                    Some(MergeBehaviour::Full),\n+                    ctx.config.insert_use.merge,\n                 );\n                 builder.replace(syntax.text_range(), new_syntax.to_string())\n             },"}, {"sha": "3ea50f375c1923d595bd587f66a4d84ea44a1174", "filename": "crates/assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "patch": "@@ -10,9 +10,7 @@ use syntax::{\n };\n \n use crate::{\n-    assist_context::AssistBuilder,\n-    utils::{insert_use, MergeBehaviour},\n-    AssistContext, AssistId, AssistKind, Assists,\n+    assist_context::AssistBuilder, utils::insert_use, AssistContext, AssistId, AssistKind, Assists,\n };\n use ast::make;\n use insert_use::ImportScope;\n@@ -117,7 +115,7 @@ fn insert_import(\n         let new_syntax = insert_use(\n             &scope,\n             make::path_from_text(&mod_path.to_string()),\n-            Some(MergeBehaviour::Full),\n+            ctx.config.insert_use.merge,\n         );\n         // FIXME: this will currently panic as multiple imports will have overlapping text ranges\n         builder.replace(syntax.text_range(), new_syntax.to_string())"}, {"sha": "e48407fcc3696711e7ea54a62ef1603771c43d2e", "filename": "crates/assists/src/handlers/replace_qualified_name_with_use.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs?ref=adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "patch": "@@ -2,7 +2,7 @@ use syntax::{algo::SyntaxRewriter, ast, match_ast, AstNode, SyntaxNode, TextRang\n use test_utils::mark;\n \n use crate::{\n-    utils::{insert_use, ImportScope, MergeBehaviour},\n+    utils::{insert_use, ImportScope},\n     AssistContext, AssistId, AssistKind, Assists,\n };\n use ast::make;\n@@ -60,7 +60,7 @@ pub(crate) fn replace_qualified_name_with_use(\n                 let new_syntax = insert_use(\n                     import_scope,\n                     make::path_from_text(path_to_import),\n-                    Some(MergeBehaviour::Full),\n+                    ctx.config.insert_use.merge,\n                 );\n                 builder.replace(syntax.text_range(), new_syntax.to_string())\n             }"}, {"sha": "b0511ceb680798873231dceaefa01dbd63759e06", "filename": "crates/assists/src/utils.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Fassists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Fassists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils.rs?ref=adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "patch": "@@ -16,7 +16,8 @@ use syntax::{\n \n use crate::assist_config::SnippetCap;\n \n-pub(crate) use insert_use::{insert_use, ImportScope, MergeBehaviour};\n+pub use insert_use::MergeBehaviour;\n+pub(crate) use insert_use::{insert_use, ImportScope};\n \n pub(crate) fn unwrap_trivial_block(block: ast::BlockExpr) -> ast::Expr {\n     extract_trivial_expression(&block)"}, {"sha": "6d110aaaf728973db3edd39511b3ad4bfc81f8f1", "filename": "crates/assists/src/utils/insert_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs?ref=adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "patch": "@@ -236,7 +236,7 @@ fn common_prefix(lhs: &ast::Path, rhs: &ast::Path) -> Option<(ast::Path, ast::Pa\n }\n \n /// What type of merges are allowed.\n-#[derive(Copy, Clone, PartialEq, Eq)]\n+#[derive(Copy, Clone, Debug, PartialEq, Eq)]\n pub enum MergeBehaviour {\n     /// Merge everything together creating deeply nested imports.\n     Full,"}, {"sha": "3b97e087f88335a30ca69c80f3662c38761c3d90", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "patch": "@@ -81,7 +81,9 @@ pub use crate::{\n     },\n };\n \n-pub use assists::{Assist, AssistConfig, AssistId, AssistKind, ResolvedAssist};\n+pub use assists::{\n+    utils::MergeBehaviour, Assist, AssistConfig, AssistId, AssistKind, ResolvedAssist,\n+};\n pub use base_db::{\n     Canceled, CrateGraph, CrateId, Edition, FileId, FilePosition, FileRange, SourceRoot,\n     SourceRootId,"}, {"sha": "1a74286f5367b0b966fb081366635f428ddeb893", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "patch": "@@ -10,7 +10,10 @@\n use std::{ffi::OsString, path::PathBuf};\n \n use flycheck::FlycheckConfig;\n-use ide::{AssistConfig, CompletionConfig, DiagnosticsConfig, HoverConfig, InlayHintsConfig};\n+use ide::{\n+    AssistConfig, CompletionConfig, DiagnosticsConfig, HoverConfig, InlayHintsConfig,\n+    MergeBehaviour,\n+};\n use lsp_types::ClientCapabilities;\n use project_model::{CargoConfig, ProjectJson, ProjectJsonData, ProjectManifest};\n use rustc_hash::FxHashSet;\n@@ -263,6 +266,12 @@ impl Config {\n         self.completion.add_call_parenthesis = data.completion_addCallParenthesis;\n         self.completion.add_call_argument_snippets = data.completion_addCallArgumentSnippets;\n \n+        self.assist.insert_use.merge = match data.assist_importMergeBehaviour {\n+            MergeBehaviourDef::None => None,\n+            MergeBehaviourDef::Full => Some(MergeBehaviour::Full),\n+            MergeBehaviourDef::Last => Some(MergeBehaviour::Last),\n+        };\n+\n         self.call_info_full = data.callInfo_full;\n \n         self.lens = LensConfig {\n@@ -370,6 +379,14 @@ enum ManifestOrProjectJson {\n     ProjectJson(ProjectJsonData),\n }\n \n+#[derive(Deserialize)]\n+#[serde(rename_all = \"lowercase\")]\n+enum MergeBehaviourDef {\n+    None,\n+    Full,\n+    Last,\n+}\n+\n macro_rules! config_data {\n     (struct $name:ident { $($field:ident: $ty:ty = $default:expr,)*}) => {\n         #[allow(non_snake_case)]\n@@ -393,6 +410,8 @@ macro_rules! config_data {\n \n config_data! {\n     struct ConfigData {\n+        assist_importMergeBehaviour: MergeBehaviourDef = MergeBehaviourDef::None,\n+\n         callInfo_full: bool = true,\n \n         cargo_autoreload: bool           = true,"}, {"sha": "858e4c4f5eeb457feeffd3587695499a83cc155f", "filename": "editors/code/package.json", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "patch": "@@ -626,6 +626,21 @@\n                     },\n                     \"description\": \"List of warnings that should be displayed with hint severity.\\nThe warnings will be indicated by faded text or three dots in code and will not show up in the problems panel.\",\n                     \"default\": []\n+                },\n+                \"rust-analyzer.assist.importMergeBehaviour\": {\n+                    \"type\": \"string\",\n+                    \"enum\": [\n+                        \"none\",\n+                        \"full\",\n+                        \"last\"\n+                    ],\n+                    \"enumDescriptions\": [\n+                        \"No merging\",\n+                        \"Merge all layers of the import trees\",\n+                        \"Only merge the last layer of the import trees\"\n+                    ],\n+                    \"default\": \"full\",\n+                    \"description\": \"The strategy to use when inserting new imports or merging imports.\"\n                 }\n             }\n         },"}]}