{"sha": "d4fabb987b753c0856c22b4d2252abdbfd33f76c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0ZmFiYjk4N2I3NTNjMDg1NmMyMmI0ZDIyNTJhYmRiZmQzM2Y3NmM=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-12-05T21:37:51Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-12-05T22:50:41Z"}, "message": "rustc_trans: don't write discriminants for uninhabited variants\n\nFixes #46519.\n\nPatch as suggested by eddyb:\nhttps://github.com/rust-lang/rust/issues/46519#issuecomment-349443519", "tree": {"sha": "ec0c1e1dc8e72eab5b4ad4df96286f2b763730d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec0c1e1dc8e72eab5b4ad4df96286f2b763730d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4fabb987b753c0856c22b4d2252abdbfd33f76c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4fabb987b753c0856c22b4d2252abdbfd33f76c", "html_url": "https://github.com/rust-lang/rust/commit/d4fabb987b753c0856c22b4d2252abdbfd33f76c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4fabb987b753c0856c22b4d2252abdbfd33f76c/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abe85ab0b232e744b602d20a65fbe92aa71c6045", "url": "https://api.github.com/repos/rust-lang/rust/commits/abe85ab0b232e744b602d20a65fbe92aa71c6045", "html_url": "https://github.com/rust-lang/rust/commit/abe85ab0b232e744b602d20a65fbe92aa71c6045"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "47d0e6f4ecfa7460dfab70083a13a9d09beedbaf", "filename": "src/librustc_trans/mir/place.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d4fabb987b753c0856c22b4d2252abdbfd33f76c/src%2Flibrustc_trans%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4fabb987b753c0856c22b4d2252abdbfd33f76c/src%2Flibrustc_trans%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fplace.rs?ref=d4fabb987b753c0856c22b4d2252abdbfd33f76c", "patch": "@@ -359,14 +359,12 @@ impl<'a, 'tcx> PlaceRef<'tcx> {\n     /// Set the discriminant for a new value of the given case of the given\n     /// representation.\n     pub fn trans_set_discr(&self, bcx: &Builder<'a, 'tcx>, variant_index: usize) {\n-        match self.layout.variants {\n+            if self.layout.for_variant(bcx.ccx, variant_index).abi == layout::Abi::Uninhabited {\n+                return;\n+            }\n+            match self.layout.variants {\n             layout::Variants::Single { index } => {\n-                if index != variant_index {\n-                    // If the layout of an enum is `Single`, all\n-                    // other variants are necessarily uninhabited.\n-                    assert_eq!(self.layout.for_variant(bcx.ccx, variant_index).abi,\n-                               layout::Abi::Uninhabited);\n-                }\n+                assert_eq!(index, variant_index);\n             }\n             layout::Variants::Tagged { .. } => {\n                 let ptr = self.project_field(bcx, 0);"}, {"sha": "878cae4e387f4fd01c998b9898d7a7e452c57c07", "filename": "src/test/run-pass/issue-46519.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/d4fabb987b753c0856c22b4d2252abdbfd33f76c/src%2Ftest%2Frun-pass%2Fissue-46519.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4fabb987b753c0856c22b4d2252abdbfd33f76c/src%2Ftest%2Frun-pass%2Fissue-46519.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-46519.rs?ref=d4fabb987b753c0856c22b4d2252abdbfd33f76c", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:--test -O\n+\n+#[test]\n+#[should_panic(expected = \"creating inhabited type\")]\n+fn test() {\n+    FontLanguageOverride::system_font(SystemFont::new());\n+}\n+\n+pub enum FontLanguageOverride {\n+    Normal,\n+    Override(&'static str),\n+    System(SystemFont)\n+}\n+\n+pub enum SystemFont {}\n+\n+impl FontLanguageOverride {\n+    fn system_font(f: SystemFont) -> Self {\n+        FontLanguageOverride::System(f)\n+    }\n+}\n+\n+impl SystemFont {\n+    fn new() -> Self {\n+        panic!(\"creating inhabited type\")\n+    }\n+}"}]}