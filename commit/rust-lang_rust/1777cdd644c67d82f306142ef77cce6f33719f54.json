{"sha": "1777cdd644c67d82f306142ef77cce6f33719f54", "node_id": "C_kwDOAAsO6NoAKDE3NzdjZGQ2NDRjNjdkODJmMzA2MTQyZWY3N2NjZTZmMzM3MTlmNTQ", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-06-10T02:15:24Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-07-06T19:24:53Z"}, "message": "Add antoyo in TODOs", "tree": {"sha": "61f767406f0a4057db0b6856e695655693ecea80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61f767406f0a4057db0b6856e695655693ecea80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1777cdd644c67d82f306142ef77cce6f33719f54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1777cdd644c67d82f306142ef77cce6f33719f54", "html_url": "https://github.com/rust-lang/rust/commit/1777cdd644c67d82f306142ef77cce6f33719f54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1777cdd644c67d82f306142ef77cce6f33719f54/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a69770308c195c88c14c2e3ff98a1adeecb9990a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a69770308c195c88c14c2e3ff98a1adeecb9990a", "html_url": "https://github.com/rust-lang/rust/commit/a69770308c195c88c14c2e3ff98a1adeecb9990a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "842b4a92080c0f7f5dc5f0b660ba977121aa86c3", "filename": "src/intrinsic/simd.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1777cdd644c67d82f306142ef77cce6f33719f54/src%2Fintrinsic%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1777cdd644c67d82f306142ef77cce6f33719f54/src%2Fintrinsic%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic%2Fsimd.rs?ref=1777cdd644c67d82f306142ef77cce6f33719f54", "patch": "@@ -216,7 +216,7 @@ pub fn generic_simd_intrinsic<'a, 'gcc, 'tcx>(bx: &mut Builder<'a, 'gcc, 'tcx>,\n         let variable = bx.current_func().new_local(None, vector.get_type(), \"new_vector\");\n         bx.llbb().add_assignment(None, variable, vector);\n         let lvalue = bx.context.new_vector_access(None, variable.to_rvalue(), index);\n-        // TODO: if simd_insert is constant, use BIT_REF.\n+        // TODO(antoyo): if simd_insert is constant, use BIT_REF.\n         bx.llbb().add_assignment(None, lvalue, value);\n         return Ok(variable.to_rvalue());\n     }\n@@ -545,9 +545,9 @@ pub fn generic_simd_intrinsic<'a, 'gcc, 'tcx>(bx: &mut Builder<'a, 'gcc, 'tcx>,\n                 },\n                 (true, true) => {\n                     // Algorithm from: https://codereview.stackexchange.com/questions/115869/saturated-signed-addition\n-                    // TODO: improve using conditional operators if possible.\n+                    // TODO(antoyo): improve using conditional operators if possible.\n                     let arg_type = lhs.get_type();\n-                    // TODO: convert lhs and rhs to unsigned.\n+                    // TODO(antoyo): convert lhs and rhs to unsigned.\n                     let sum = lhs + rhs;\n                     let vector_type = arg_type.dyncast_vector().expect(\"vector type\");\n                     let unit = vector_type.get_num_units();\n@@ -581,7 +581,7 @@ pub fn generic_simd_intrinsic<'a, 'gcc, 'tcx>(bx: &mut Builder<'a, 'gcc, 'tcx>,\n                     // negative of the right operand. Find a proper subtraction algorithm.\n                     let rhs = bx.context.new_unary_op(None, UnaryOp::Minus, arg_type, rhs);\n \n-                    // TODO: convert lhs and rhs to unsigned.\n+                    // TODO(antoyo): convert lhs and rhs to unsigned.\n                     let sum = lhs + rhs;\n                     let vector_type = arg_type.dyncast_vector().expect(\"vector type\");\n                     let unit = vector_type.get_num_units();"}]}