{"sha": "ea594c4c44ead8bffcc02c222869334c42ce3b51", "node_id": "C_kwDOAAsO6NoAKGVhNTk0YzRjNDRlYWQ4YmZmY2MwMmMyMjI4NjkzMzRjNDJjZTNiNTE", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-05-30T12:17:58Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-05-30T12:17:58Z"}, "message": "Use char for trigger character", "tree": {"sha": "5fe5af231938fd20845cb1816facc380a39ec413", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fe5af231938fd20845cb1816facc380a39ec413"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea594c4c44ead8bffcc02c222869334c42ce3b51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea594c4c44ead8bffcc02c222869334c42ce3b51", "html_url": "https://github.com/rust-lang/rust/commit/ea594c4c44ead8bffcc02c222869334c42ce3b51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea594c4c44ead8bffcc02c222869334c42ce3b51/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ceaff91d31ea16e38d6fb415d3a7d52703a7499", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ceaff91d31ea16e38d6fb415d3a7d52703a7499", "html_url": "https://github.com/rust-lang/rust/commit/9ceaff91d31ea16e38d6fb415d3a7d52703a7499"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "9659efad619ddbf305263572b7d66803b929836b", "filename": "crates/ide-completion/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea594c4c44ead8bffcc02c222869334c42ce3b51/crates%2Fide-completion%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea594c4c44ead8bffcc02c222869334c42ce3b51/crates%2Fide-completion%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Flib.rs?ref=ea594c4c44ead8bffcc02c222869334c42ce3b51", "patch": "@@ -143,15 +143,15 @@ pub fn completions(\n     db: &RootDatabase,\n     config: &CompletionConfig,\n     position: FilePosition,\n-    trigger_character: Option<&str>,\n+    trigger_character: Option<char>,\n ) -> Option<Completions> {\n     let ctx = &CompletionContext::new(db, position, config)?;\n     let mut acc = Completions::default();\n \n     {\n         let acc = &mut acc;\n         // prevent `(` from triggering unwanted completion noise\n-        if trigger_character != Some(\"(\") {\n+        if trigger_character != Some('(') {\n             completions::attribute::complete_attribute(acc, ctx);\n             completions::attribute::complete_derive(acc, ctx);\n             completions::attribute::complete_known_attribute_input(acc, ctx);"}, {"sha": "d30ff77bab622051a196fa998383ed883234ed7e", "filename": "crates/ide-completion/src/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea594c4c44ead8bffcc02c222869334c42ce3b51/crates%2Fide-completion%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea594c4c44ead8bffcc02c222869334c42ce3b51/crates%2Fide-completion%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests.rs?ref=ea594c4c44ead8bffcc02c222869334c42ce3b51", "patch": "@@ -88,7 +88,7 @@ pub(crate) fn completion_list_no_kw(ra_fixture: &str) -> String {\n \n pub(crate) fn completion_list_with_trigger_character(\n     ra_fixture: &str,\n-    trigger_character: Option<&str>,\n+    trigger_character: Option<char>,\n ) -> String {\n     completion_list_with_config(TEST_CONFIG, ra_fixture, true, trigger_character)\n }\n@@ -97,7 +97,7 @@ fn completion_list_with_config(\n     config: CompletionConfig,\n     ra_fixture: &str,\n     include_keywords: bool,\n-    trigger_character: Option<&str>,\n+    trigger_character: Option<char>,\n ) -> String {\n     // filter out all but one builtintype completion for smaller test outputs\n     let items = get_all_items(config, ra_fixture, trigger_character);\n@@ -225,7 +225,7 @@ pub(crate) fn check_pattern_is_applicable(code: &str, check: impl FnOnce(SyntaxE\n pub(crate) fn get_all_items(\n     config: CompletionConfig,\n     code: &str,\n-    trigger_character: Option<&str>,\n+    trigger_character: Option<char>,\n ) -> Vec<CompletionItem> {\n     let (db, position) = position(code);\n     let res = crate::completions(&db, &config, position, trigger_character)"}, {"sha": "f5a5b5bae6ab37f229bd800750e3cdf9c0e8c741", "filename": "crates/ide-completion/src/tests/fn_param.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea594c4c44ead8bffcc02c222869334c42ce3b51/crates%2Fide-completion%2Fsrc%2Ftests%2Ffn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea594c4c44ead8bffcc02c222869334c42ce3b51/crates%2Fide-completion%2Fsrc%2Ftests%2Ffn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests%2Ffn_param.rs?ref=ea594c4c44ead8bffcc02c222869334c42ce3b51", "patch": "@@ -7,8 +7,8 @@ fn check(ra_fixture: &str, expect: Expect) {\n     expect.assert_eq(&actual);\n }\n \n-fn check_with_trigger_character(ra_fixture: &str, trigger_character: Option<&str>, expect: Expect) {\n-    let actual = completion_list_with_trigger_character(ra_fixture, trigger_character);\n+fn check_with_trigger_character(ra_fixture: &str, trigger_character: char, expect: Expect) {\n+    let actual = completion_list_with_trigger_character(ra_fixture, Some(trigger_character));\n     expect.assert_eq(&actual)\n }\n \n@@ -124,7 +124,7 @@ fn trigger_by_l_paren() {\n         r#\"\n fn foo($0)\n \"#,\n-        Some(\"(\"),\n+        '(',\n         expect![[]],\n     )\n }"}, {"sha": "151dd6a7e85d4df27164ae8dfe681fc45dd5cf21", "filename": "crates/ide-completion/src/tests/visibility.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea594c4c44ead8bffcc02c222869334c42ce3b51/crates%2Fide-completion%2Fsrc%2Ftests%2Fvisibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea594c4c44ead8bffcc02c222869334c42ce3b51/crates%2Fide-completion%2Fsrc%2Ftests%2Fvisibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests%2Fvisibility.rs?ref=ea594c4c44ead8bffcc02c222869334c42ce3b51", "patch": "@@ -8,8 +8,8 @@ fn check(ra_fixture: &str, expect: Expect) {\n     expect.assert_eq(&actual)\n }\n \n-fn check_with_trigger_character(ra_fixture: &str, trigger_character: Option<&str>, expect: Expect) {\n-    let actual = completion_list_with_trigger_character(ra_fixture, trigger_character);\n+fn check_with_trigger_character(ra_fixture: &str, trigger_character: char, expect: Expect) {\n+    let actual = completion_list_with_trigger_character(ra_fixture, Some(trigger_character));\n     expect.assert_eq(&actual)\n }\n \n@@ -20,7 +20,7 @@ fn empty_pub() {\n         r#\"\n pub($0)\n \"#,\n-        Some(\"(\"),\n+        '(',\n         expect![[r#\"\n             kw crate\n             kw in"}, {"sha": "aab5ceda366e1d3ae8716b372eb05b4485738f67", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea594c4c44ead8bffcc02c222869334c42ce3b51/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea594c4c44ead8bffcc02c222869334c42ce3b51/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=ea594c4c44ead8bffcc02c222869334c42ce3b51", "patch": "@@ -548,7 +548,7 @@ impl Analysis {\n         &self,\n         config: &CompletionConfig,\n         position: FilePosition,\n-        trigger_character: Option<&str>,\n+        trigger_character: Option<char>,\n     ) -> Cancellable<Option<Vec<CompletionItem>>> {\n         self.with_db(|db| {\n             ide_completion::completions(db, config, position, trigger_character).map(Into::into)"}, {"sha": "ff61081aa81f9e735fd5d0c78560c7c7c3115423", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ea594c4c44ead8bffcc02c222869334c42ce3b51/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea594c4c44ead8bffcc02c222869334c42ce3b51/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=ea594c4c44ead8bffcc02c222869334c42ce3b51", "patch": "@@ -796,9 +796,10 @@ pub(crate) fn handle_completion(\n     let _p = profile::span(\"handle_completion\");\n     let text_document_position = params.text_document_position.clone();\n     let position = from_proto::file_position(&snap, params.text_document_position)?;\n-    let completion_trigger_character = params.context.and_then(|ctx| ctx.trigger_character);\n+    let completion_trigger_character =\n+        params.context.and_then(|ctx| ctx.trigger_character).and_then(|s| s.chars().next());\n \n-    if Some(\":\") == completion_trigger_character.as_deref() {\n+    if Some(':') == completion_trigger_character {\n         let source_file = snap.analysis.parse(position.file_id)?;\n         let left_token = source_file.syntax().token_at_offset(position.offset).left_biased();\n         let completion_triggered_after_single_colon = match left_token {\n@@ -814,7 +815,7 @@ pub(crate) fn handle_completion(\n     let items = match snap.analysis.completions(\n         completion_config,\n         position,\n-        completion_trigger_character.as_deref(),\n+        completion_trigger_character,\n     )? {\n         None => return Ok(None),\n         Some(items) => items,"}]}