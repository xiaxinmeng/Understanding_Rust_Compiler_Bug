{"sha": "ef4952e73926bda4cfdbd0e48badc3ae30e4fb58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNDk1MmU3MzkyNmJkYTRjZmRiZDBlNDhiYWRjM2FlMzBlNGZiNTg=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2016-08-28T22:52:21Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2016-08-28T22:52:21Z"}, "message": "Address FIXME in libcollectionstest/btree/set.rs", "tree": {"sha": "7a9e43a79a7cbcc360050a2c053650ece1512621", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a9e43a79a7cbcc360050a2c053650ece1512621"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef4952e73926bda4cfdbd0e48badc3ae30e4fb58", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXw2s7AAoJENpc3BX5vtsr1UYP+wV5aUL8RnRW5sVNFqE13Ex+\nxzTjrIfvye8w8iLUKejc6c3wJgcraXqBBLi7SoZIAxAXaJ1nJJpmT/funmk6tVoA\nMPb6wcAd67HPFNXO4GslXKXUnjl5C1TWW/K72dVcQb5N+XY1A5L674u2KPwPMTYR\nf5M/mMxmU3uO8izuRwmGdBhUhIhPbUGyq9IkLIIq8desOUzUsUSwj/gXGGGHi3JJ\noelKBtJC5B/koWKAaKdXrKb69QhK82zOsl9oh99uYDSPhWs9ABnJ3sK9/friKCL7\n+1gGbWuSgRqu4L8LXM+1lcEeRKpgxeNDHHVBnjAd3+qtMSYK41Bb0tOn9dIN+VRu\nwpVSb8UIJkyGDks+Sm1SbpVawFTgSFtUnLm3zTjOHtnVDusq5B6a0H144ReKlYba\ntQ5Y+z80Jcjr4Rd8qRgKJQLELcBd9GQUzOt9FTXgfLbYNbX16qzB1n1S7p+urMp+\nLrIlcSQTxhClsFKxdQPxOdjBxsh93P5QqrYy0ekgRtWrplVa13SeHPQYH2bLZYEE\n/FKe0K0GwZAkpjfP1tsXLtg4rR24qJct4NvaV67EdNn//KU3h5IC5RVuUfr2wWlE\nHSeEo+Ye2S4yb5mp9kuCzaC4xnMc1Gm5+Aa5NfMdSgezkh45PvyQ8BPjw7MrH6R9\ndHS9HVs0oOf1fqnMT0sh\n=RZjg\n-----END PGP SIGNATURE-----", "payload": "tree 7a9e43a79a7cbcc360050a2c053650ece1512621\nparent e4791e086d671d429db864787f6b60547a28b0f5\nauthor Andrew Paseltiner <apaseltiner@gmail.com> 1472424741 -0400\ncommitter Andrew Paseltiner <apaseltiner@gmail.com> 1472424741 -0400\n\nAddress FIXME in libcollectionstest/btree/set.rs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef4952e73926bda4cfdbd0e48badc3ae30e4fb58", "html_url": "https://github.com/rust-lang/rust/commit/ef4952e73926bda4cfdbd0e48badc3ae30e4fb58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef4952e73926bda4cfdbd0e48badc3ae30e4fb58/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4791e086d671d429db864787f6b60547a28b0f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4791e086d671d429db864787f6b60547a28b0f5", "html_url": "https://github.com/rust-lang/rust/commit/e4791e086d671d429db864787f6b60547a28b0f5"}], "stats": {"total": 31, "additions": 6, "deletions": 25}, "files": [{"sha": "a32e3f1a76aeacace834dc1158fd666e98ebde58", "filename": "src/libcollectionstest/btree/set.rs", "status": "modified", "additions": 6, "deletions": 24, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ef4952e73926bda4cfdbd0e48badc3ae30e4fb58/src%2Flibcollectionstest%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4952e73926bda4cfdbd0e48badc3ae30e4fb58/src%2Flibcollectionstest%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fbtree%2Fset.rs?ref=ef4952e73926bda4cfdbd0e48badc3ae30e4fb58", "patch": "@@ -39,30 +39,8 @@ fn test_hash() {\n   assert!(::hash(&x) == ::hash(&y));\n }\n \n-struct Counter<'a, 'b> {\n-    i: &'a mut usize,\n-    expected: &'b [i32],\n-}\n-\n-impl<'a, 'b, 'c> FnMut<(&'c i32,)> for Counter<'a, 'b> {\n-    extern \"rust-call\" fn call_mut(&mut self, (&x,): (&'c i32,)) -> bool {\n-        assert_eq!(x, self.expected[*self.i]);\n-        *self.i += 1;\n-        true\n-    }\n-}\n-\n-impl<'a, 'b, 'c> FnOnce<(&'c i32,)> for Counter<'a, 'b> {\n-    type Output = bool;\n-\n-    extern \"rust-call\" fn call_once(mut self, args: (&'c i32,)) -> bool {\n-        self.call_mut(args)\n-    }\n-}\n-\n fn check<F>(a: &[i32], b: &[i32], expected: &[i32], f: F) where\n-    // FIXME Replace Counter with `Box<FnMut(_) -> _>`\n-    F: FnOnce(&BTreeSet<i32>, &BTreeSet<i32>, Counter) -> bool,\n+    F: FnOnce(&BTreeSet<i32>, &BTreeSet<i32>, &mut FnMut(&i32) -> bool) -> bool,\n {\n     let mut set_a = BTreeSet::new();\n     let mut set_b = BTreeSet::new();\n@@ -71,7 +49,11 @@ fn check<F>(a: &[i32], b: &[i32], expected: &[i32], f: F) where\n     for y in b { assert!(set_b.insert(*y)) }\n \n     let mut i = 0;\n-    f(&set_a, &set_b, Counter { i: &mut i, expected: expected });\n+    f(&set_a, &set_b, &mut |&x| {\n+        assert_eq!(x, expected[i]);\n+        i += 1;\n+        true\n+    });\n     assert_eq!(i, expected.len());\n }\n "}, {"sha": "32a07e3e7e6218637a9ff3a4bf2050cdbf13b3a4", "filename": "src/libcollectionstest/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ef4952e73926bda4cfdbd0e48badc3ae30e4fb58/src%2Flibcollectionstest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4952e73926bda4cfdbd0e48badc3ae30e4fb58/src%2Flibcollectionstest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Flib.rs?ref=ef4952e73926bda4cfdbd0e48badc3ae30e4fb58", "patch": "@@ -16,7 +16,6 @@\n #![feature(collections)]\n #![feature(collections_bound)]\n #![feature(const_fn)]\n-#![feature(fn_traits)]\n #![feature(enumset)]\n #![feature(pattern)]\n #![feature(rand)]"}]}