{"sha": "0f3a4e13f98125e550d0814fc69a93649eab8f0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmM2E0ZTEzZjk4MTI1ZTU1MGQwODE0ZmM2OWE5MzY0OWVhYjhmMGQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-31T20:36:00Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-01T14:44:49Z"}, "message": "librustc: De-`@str` type short names", "tree": {"sha": "a339ca019edd83d68051adb7464dc0cc3c1c538d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a339ca019edd83d68051adb7464dc0cc3c1c538d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f3a4e13f98125e550d0814fc69a93649eab8f0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f3a4e13f98125e550d0814fc69a93649eab8f0d", "html_url": "https://github.com/rust-lang/rust/commit/0f3a4e13f98125e550d0814fc69a93649eab8f0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f3a4e13f98125e550d0814fc69a93649eab8f0d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9ce855beb599b7b7c53979ade57d3831f1c4a82", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9ce855beb599b7b7c53979ade57d3831f1c4a82", "html_url": "https://github.com/rust-lang/rust/commit/e9ce855beb599b7b7c53979ade57d3831f1c4a82"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "b7977f9d64329d0f59f5d044f081fc34a66672d1", "filename": "src/librustc/metadata/tyencode.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0f3a4e13f98125e550d0814fc69a93649eab8f0d/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f3a4e13f98125e550d0814fc69a93649eab8f0d/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftyencode.rs?ref=0f3a4e13f98125e550d0814fc69a93649eab8f0d", "patch": "@@ -45,7 +45,7 @@ pub struct ctxt {\n pub struct ty_abbrev {\n     pos: uint,\n     len: uint,\n-    s: @str\n+    s: ~str\n }\n \n pub enum abbrev_ctxt {\n@@ -65,19 +65,21 @@ pub fn enc_ty(w: &mut MemWriter, cx: @ctxt, t: ty::t) {\n               let short_names_cache = cx.tcx.short_names_cache.borrow();\n               result_str_opt = short_names_cache.get()\n                                                 .find(&t)\n-                                                .map(|result| *result);\n+                                                .map(|result| {\n+                                                    (*result).clone()\n+                                                });\n           }\n           let result_str = match result_str_opt {\n             Some(s) => s,\n             None => {\n                 let wr = &mut MemWriter::new();\n                 enc_sty(wr, cx, &ty::get(t).sty);\n-                let s = str::from_utf8(wr.get_ref()).unwrap().to_managed();\n+                let s = str::from_utf8(wr.get_ref()).unwrap();\n                 let mut short_names_cache = cx.tcx\n                                               .short_names_cache\n                                               .borrow_mut();\n-                short_names_cache.get().insert(t, s);\n-                s\n+                short_names_cache.get().insert(t, s.to_str());\n+                s.to_str()\n             }\n           };\n           w.write(result_str.as_bytes());\n@@ -103,7 +105,7 @@ pub fn enc_ty(w: &mut MemWriter, cx: @ctxt, t: ty::t) {\n           let abbrev_len = 3 + estimate_sz(pos) + estimate_sz(len);\n           if abbrev_len < len {\n               // I.e. it's actually an abbreviation.\n-              let s = format!(\"\\\\#{:x}:{:x}\\\\#\", pos, len).to_managed();\n+              let s = format!(\"\\\\#{:x}:{:x}\\\\#\", pos, len);\n               let a = ty_abbrev { pos: pos as uint,\n                                   len: len as uint,\n                                   s: s };"}, {"sha": "93bfe9c51e1dd1f40bc8de68e0fbc7d9690c5cf9", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f3a4e13f98125e550d0814fc69a93649eab8f0d/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f3a4e13f98125e550d0814fc69a93649eab8f0d/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=0f3a4e13f98125e550d0814fc69a93649eab8f0d", "patch": "@@ -291,7 +291,7 @@ pub struct ctxt_ {\n     freevars: RefCell<freevars::freevar_map>,\n     tcache: type_cache,\n     rcache: creader_cache,\n-    short_names_cache: RefCell<HashMap<t, @str>>,\n+    short_names_cache: RefCell<HashMap<t, ~str>>,\n     needs_unwind_cleanup_cache: RefCell<HashMap<t, bool>>,\n     tc_cache: RefCell<HashMap<uint, TypeContents>>,\n     ast_ty_to_ty_cache: RefCell<HashMap<NodeId, ast_ty_to_ty_cache_entry>>,"}]}