{"sha": "33f3cfcadc10222273ef96e38cccf6e1ddbb882c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZjNjZmNhZGMxMDIyMjI3M2VmOTZlMzhjY2NmNmUxZGRiYjg4MmM=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-10-23T22:17:00Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-10-24T15:55:48Z"}, "message": "Fix inconsistencies in handling of inert attributes on statements\n\nWhen the 'early' and 'late' visitors visit an attribute target, they\nactivate any lint attributes (e.g. `#[allow]`) that apply to it.\nThis can affect warnings emitted on sibiling attributes. For example,\nthe following code does not produce an `unused_attributes` for\n`#[inline]`, since the sibiling `#[allow(unused_attributes)]` suppressed\nthe warning.\n\n```rust\ntrait Foo {\n    #[allow(unused_attributes)] #[inline] fn first();\n    #[inline] #[allow(unused_attributes)] fn second();\n}\n```\n\nHowever, we do not do this for statements - instead, the lint attributes\nonly become active when we visit the struct nested inside `StmtKind`\n(e.g. `Item`).\n\nCurrently, this is difficult to observe due to another issue - the\n`HasAttrs` impl for `StmtKind` ignores attributes for `StmtKind::Item`.\nAs a result, the `unused_doc_comments` lint will never see attributes on\nitem statements.\n\nThis commit makes two interrelated fixes to the handling of inert\n(non-proc-macro) attributes on statements:\n\n* The `HasAttr` impl for `StmtKind` now returns attributes for\n  `StmtKind::Item`, treating it just like every other `StmtKind`\n  variant. The only place relying on the old behavior was macro\n  which has been updated to explicitly ignore attributes on item\n  statements. This allows the `unused_doc_comments` lint to fire for\n  item statements.\n* The `early` and `late` lint visitors now activate lint attributes when\n  invoking the callback for `Stmt`. This ensures that a lint\n  attribute (e.g. `#[allow(unused_doc_comments)]`) can be applied to\n  sibiling attributes on an item statement.\n\nFor now, the `unused_doc_comments` lint is explicitly disabled on item\nstatements, which preserves the current behavior. The exact locatiosn\nwhere this lint should fire are being discussed in PR #78306", "tree": {"sha": "bbef8a664359e64799049e7eb10ac54610cbdc3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbef8a664359e64799049e7eb10ac54610cbdc3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33f3cfcadc10222273ef96e38cccf6e1ddbb882c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33f3cfcadc10222273ef96e38cccf6e1ddbb882c", "html_url": "https://github.com/rust-lang/rust/commit/33f3cfcadc10222273ef96e38cccf6e1ddbb882c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33f3cfcadc10222273ef96e38cccf6e1ddbb882c/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcde7683fe7ca10c83e5bc17f0969d2284affcd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcde7683fe7ca10c83e5bc17f0969d2284affcd2", "html_url": "https://github.com/rust-lang/rust/commit/fcde7683fe7ca10c83e5bc17f0969d2284affcd2"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "7250de3a41c0430c71579b057e4e97314e9a583b", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33f3cfcadc10222273ef96e38cccf6e1ddbb882c/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33f3cfcadc10222273ef96e38cccf6e1ddbb882c/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=33f3cfcadc10222273ef96e38cccf6e1ddbb882c", "patch": "@@ -130,7 +130,7 @@ impl<'tcx> LateLintPass<'tcx> for Author {\n     }\n \n     fn check_stmt(&mut self, cx: &LateContext<'tcx>, stmt: &'tcx hir::Stmt<'_>) {\n-        if !has_attr(cx.sess(), stmt.kind.attrs()) {\n+        if !has_attr(cx.sess(), stmt.kind.attrs(|id| cx.tcx.hir().item(id.id))) {\n             return;\n         }\n         prelude();"}, {"sha": "4fbfb3be32cbff9e821171c9d3d9112a977fdd3b", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33f3cfcadc10222273ef96e38cccf6e1ddbb882c/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33f3cfcadc10222273ef96e38cccf6e1ddbb882c/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=33f3cfcadc10222273ef96e38cccf6e1ddbb882c", "patch": "@@ -109,7 +109,7 @@ impl<'tcx> LateLintPass<'tcx> for DeepCodeInspector {\n     }\n \n     fn check_stmt(&mut self, cx: &LateContext<'tcx>, stmt: &'tcx hir::Stmt<'_>) {\n-        if !has_attr(cx.sess(), stmt.kind.attrs()) {\n+        if !has_attr(cx.sess(), stmt.kind.attrs(|id| cx.tcx.hir().item(id.id))) {\n             return;\n         }\n         match stmt.kind {"}]}