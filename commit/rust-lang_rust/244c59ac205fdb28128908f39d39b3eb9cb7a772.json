{"sha": "244c59ac205fdb28128908f39d39b3eb9cb7a772", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NGM1OWFjMjA1ZmRiMjgxMjg5MDhmMzlkMzliM2ViOWNiN2E3NzI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-20T04:46:04Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-20T04:46:04Z"}, "message": "Clean up typechecker file, disable all tests that fail under typechecker.", "tree": {"sha": "e4ba42fb7d2c69a90e6281a2d673ecd210ee87f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4ba42fb7d2c69a90e6281a2d673ecd210ee87f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/244c59ac205fdb28128908f39d39b3eb9cb7a772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/244c59ac205fdb28128908f39d39b3eb9cb7a772", "html_url": "https://github.com/rust-lang/rust/commit/244c59ac205fdb28128908f39d39b3eb9cb7a772", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/244c59ac205fdb28128908f39d39b3eb9cb7a772/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d92ca64a70e625fdb274390451c8ed911e02e79", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d92ca64a70e625fdb274390451c8ed911e02e79", "html_url": "https://github.com/rust-lang/rust/commit/6d92ca64a70e625fdb274390451c8ed911e02e79"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "74e2cd854355e9a71635af7bb154fb530b22f80b", "filename": "src/Makefile", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/244c59ac205fdb28128908f39d39b3eb9cb7a772/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/244c59ac205fdb28128908f39d39b3eb9cb7a772/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=244c59ac205fdb28128908f39d39b3eb9cb7a772", "patch": "@@ -517,17 +517,8 @@ TEST_XFAILS_LLVM := $(TASK_XFAILS) \\\n \n TEST_XFAILS_SELF := $(filter-out \\\n                       $(addprefix test/run-pass/, \\\n-                        arith-0.rs \\\n-                        arith-2.rs \\\n-                        bool-not.rs \\\n-                        char.rs \\\n-                        fact.rs \\\n-                        dead-code-one-arm-if.rs \\\n-                        deep.rs \\\n-                        hello.rs \\\n                         int.rs \\\n                         item-name-overload.rs \\\n-                        lazy-init.rs \\\n                         multiline-comment.rs \\\n                         ), \\\n                       $(wildcard test/*/*.rs test/*/*.rc))"}, {"sha": "0809d9f1efe199d36af0ad99000d5ec14db5cf3f", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/244c59ac205fdb28128908f39d39b3eb9cb7a772/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/244c59ac205fdb28128908f39d39b3eb9cb7a772/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=244c59ac205fdb28128908f39d39b3eb9cb7a772", "patch": "@@ -1,7 +1,3 @@\n-//\n-// comp/middle/typeck.rs\n-//\n-\n import front.ast;\n import front.ast.ann;\n import middle.fold;\n@@ -185,7 +181,8 @@ fn ty_to_str(@ty typ) -> str {\n \n         case (ty_fn(?inputs, ?output)) {\n             auto f = fn_input_to_str;\n-            s = \"fn(\" + _str.connect(_vec.map[arg,str](f, inputs), \", \") + \")\";\n+            s = \"fn(\" + _str.connect(_vec.map[arg,str](f, inputs),\n+                                     \", \") + \")\";\n             if (output.struct != ty_nil) {\n                 s += \" -> \" + ty_to_str(output);\n             }\n@@ -604,7 +601,7 @@ fn unify(@ty expected, @ty actual) -> unify_result {\n                         auto result = unify_step(expected_output,\n                                                  actual_output, bindings);\n                         alt (result) {\n-                            case (ures_ok(?rty)) {  \n+                            case (ures_ok(?rty)) {\n                                 result_out = rty;\n                             }\n \n@@ -722,7 +719,7 @@ fn check_expr(&@env e, &@ty_table locals, @ast.expr expr) -> @ast.expr {\n             ret @fold.respan[ast.expr_](expr.span,\n                                         ast.expr_lit(lit, ast.ann_type(ty)));\n         }\n-        \n+\n         case (_) {\n             // TODO\n             ret expr;\n@@ -855,3 +852,13 @@ fn check_crate(session.session sess, @ast.crate crate) -> @ast.crate {\n     ret fold.fold_crate[@env](e, fld, result._0);\n }\n \n+//\n+// Local Variables:\n+// mode: rust\n+// fill-column: 78;\n+// indent-tabs-mode: nil\n+// c-basic-offset: 4\n+// buffer-file-coding-system: utf-8-unix\n+// compile-command: \"make -k -C ../.. 2>&1 | sed -e 's/\\\\/x\\\\//x:\\\\//g'\";\n+// End:\n+//"}]}