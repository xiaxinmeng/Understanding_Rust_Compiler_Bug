{"sha": "ff83b3ecb9a9e791d1a0f389a2a3bf6a2d041fcf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmODNiM2VjYjlhOWU3OTFkMWEwZjM4OWEyYTNiZjZhMmQwNDFmY2Y=", "commit": {"author": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2018-02-02T06:49:47Z"}, "committer": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2018-02-02T06:54:07Z"}, "message": "Fix `non_expressive_names`", "tree": {"sha": "6acc4e3148217b0b0b82b92737bbc21e6faddff0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6acc4e3148217b0b0b82b92737bbc21e6faddff0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff83b3ecb9a9e791d1a0f389a2a3bf6a2d041fcf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFIBAABCAAyFiEE30PRORiHa0gkBHJnH7R33dJ4Ic4FAlp0Cw8UHGhtcGVyc29u\nMUBnbWFpbC5jb20ACgkQH7R33dJ4Ic7bRwf9EzIq3DEqiIf8LHk+dB5j41iVQGdC\n05Kv94zAPHGkNY7PlNK/5dXvwlOxjzifkU/BIDJOIAW+k5AuE93IT8HX/GwxshqB\nWVcjVE0MqgHA+0IUabuEQNFS6v4ZpeMORcXmfcWwD9VxNtbOuXTZeuELo9BCyOuM\n2kFJyFX5qJcF9GeqDsWN9ubJlPjN117Yyb8R3bVKtsQZjUJLl2meN/WJIiX/5XXO\nrFZ759J+GyVYSl4aotHrQe9dRQ1cd2uVPe3agu5ICwogjAg0MnKPe9Y78O10N79j\nSBM3StzW9iiX+4hBJP2UXQ68ELwu+YX6qY/G93JQpGWExO+ddiFwAeOpuw==\n=ga/3\n-----END PGP SIGNATURE-----", "payload": "tree 6acc4e3148217b0b0b82b92737bbc21e6faddff0\nparent 3a4ea45821f3f8c5cb75425e21985279790d4ff1\nauthor HMPerson1 <hmperson1@gmail.com> 1517554187 -0500\ncommitter HMPerson1 <hmperson1@gmail.com> 1517554447 -0500\n\nFix `non_expressive_names`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff83b3ecb9a9e791d1a0f389a2a3bf6a2d041fcf", "html_url": "https://github.com/rust-lang/rust/commit/ff83b3ecb9a9e791d1a0f389a2a3bf6a2d041fcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff83b3ecb9a9e791d1a0f389a2a3bf6a2d041fcf/comments", "author": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a4ea45821f3f8c5cb75425e21985279790d4ff1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a4ea45821f3f8c5cb75425e21985279790d4ff1", "html_url": "https://github.com/rust-lang/rust/commit/3a4ea45821f3f8c5cb75425e21985279790d4ff1"}], "stats": {"total": 70, "additions": 55, "deletions": 15}, "files": [{"sha": "9ef55907ecd3e6ba9db705e61359b4a3e0563404", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/ff83b3ecb9a9e791d1a0f389a2a3bf6a2d041fcf/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff83b3ecb9a9e791d1a0f389a2a3bf6a2d041fcf/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=ff83b3ecb9a9e791d1a0f389a2a3bf6a2d041fcf", "patch": "@@ -313,21 +313,32 @@ impl<'a, 'tcx> Visitor<'tcx> for SimilarNamesLocalVisitor<'a, 'tcx> {\n impl EarlyLintPass for NonExpressiveNames {\n     fn check_item(&mut self, cx: &EarlyContext, item: &Item) {\n         if let ItemKind::Fn(ref decl, _, _, _, _, ref blk) = item.node {\n-            if !attr::contains_name(&item.attrs, \"test\") {\n-                let mut visitor = SimilarNamesLocalVisitor {\n-                    names: Vec::new(),\n-                    cx: cx,\n-                    lint: self,\n-                    single_char_names: Vec::new(),\n-                };\n-                // initialize with function arguments\n-                for arg in &decl.inputs {\n-                    SimilarNamesNameVisitor(&mut visitor).visit_pat(&arg.pat);\n-                }\n-                // walk all other bindings\n-                walk_block(&mut visitor, blk);\n-            }\n+            do_check(self, cx, &item.attrs, decl, blk);\n+        }\n+    }\n+\n+    fn check_impl_item(&mut self, cx: &EarlyContext, item: &ImplItem) {\n+        if let ImplItemKind::Method(ref sig, ref blk) = item.node {\n+            do_check(self, cx, &item.attrs, &sig.decl, blk);\n+        }\n+    }\n+\n+}\n+\n+fn do_check(lint: &mut NonExpressiveNames, cx: &EarlyContext, attrs: &[Attribute], decl: &FnDecl, blk: &Block) {\n+    if !attr::contains_name(attrs, \"test\") {\n+        let mut visitor = SimilarNamesLocalVisitor {\n+            names: Vec::new(),\n+            cx: cx,\n+            lint: lint,\n+            single_char_names: Vec::new(),\n+        };\n+        // initialize with function arguments\n+        for arg in &decl.inputs {\n+            SimilarNamesNameVisitor(&mut visitor).visit_pat(&arg.pat);\n         }\n+        // walk all other bindings\n+        walk_block(&mut visitor, blk);\n     }\n }\n "}, {"sha": "19f0889a92c61a2745c4d5e59a8456db122460db", "filename": "tests/ui/non_expressive_names.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ff83b3ecb9a9e791d1a0f389a2a3bf6a2d041fcf/tests%2Fui%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff83b3ecb9a9e791d1a0f389a2a3bf6a2d041fcf/tests%2Fui%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.rs?ref=ff83b3ecb9a9e791d1a0f389a2a3bf6a2d041fcf", "patch": "@@ -141,3 +141,14 @@ fn underscores_and_numbers() {\n     let __1___2 = 12; //~ERROR Consider a more descriptive name\n     let _1_ok= 1;\n }\n+\n+struct Bar;\n+\n+impl Bar {\n+    fn bar() {\n+        let _1 = 1;\n+        let ____1 = 1;\n+        let __1___2 = 12;\n+        let _1_ok= 1;\n+    }\n+}"}, {"sha": "4b95a1a9e7007d9d1d23f252edb27ebc9320a984", "filename": "tests/ui/non_expressive_names.stderr", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ff83b3ecb9a9e791d1a0f389a2a3bf6a2d041fcf/tests%2Fui%2Fnon_expressive_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff83b3ecb9a9e791d1a0f389a2a3bf6a2d041fcf/tests%2Fui%2Fnon_expressive_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.stderr?ref=ff83b3ecb9a9e791d1a0f389a2a3bf6a2d041fcf", "patch": "@@ -149,5 +149,23 @@ error: consider choosing a more descriptive name\n 141 |     let __1___2 = 12; //~ERROR Consider a more descriptive name\n     |         ^^^^^^^\n \n-error: aborting due to 14 previous errors\n+error: consider choosing a more descriptive name\n+   --> $DIR/non_expressive_names.rs:149:13\n+    |\n+149 |         let _1 = 1;\n+    |             ^^\n+\n+error: consider choosing a more descriptive name\n+   --> $DIR/non_expressive_names.rs:150:13\n+    |\n+150 |         let ____1 = 1;\n+    |             ^^^^^\n+\n+error: consider choosing a more descriptive name\n+   --> $DIR/non_expressive_names.rs:151:13\n+    |\n+151 |         let __1___2 = 12;\n+    |             ^^^^^^^\n+\n+error: aborting due to 17 previous errors\n "}]}