{"sha": "6631215e5413a7e963c93c8c94f7ac980254623a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2MzEyMTVlNTQxM2E3ZTk2M2M5M2M4Yzk0ZjdhYzk4MDI1NDYyM2E=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-11-20T20:59:41Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-11-27T14:23:49Z"}, "message": "Remove unneeded logic", "tree": {"sha": "e5444bf6acafbdc77829b23f646a96edde2f341d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5444bf6acafbdc77829b23f646a96edde2f341d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6631215e5413a7e963c93c8c94f7ac980254623a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAl/BC/UACgkQgTGiTgx5\n769YaA//e1bqCAJiJQQ+JH5Uqv51KFStelIqh43UdjLGKAlrJCu9oUANdPa5Xkl4\n4yR6NfxRzMLypmSssog7EP5zpYivYIx2Z78Qf1pqEBkN3NtMbRcfywQGsdz3mz1N\nADopPfXu/ltzhYe2dpP20tcdYIveAGI9gtpW8nT/qaOe6A4U6KNxsxCW5amJmEGB\nE/BlAhezIA14b/Rzo4hKdSsRuyodbWtCbesy7GoanyWeIDJSm6he4q6FiYEtE67y\nhPkCZGSgAcpzOgsPZ3CFZdQXFODhEl+Yi7aDODIqJHgVmJiX5Os+HZOh7AQs/nP6\nP9VD/HZ42BiXXkr6EH8MwCbyWjotiBGpBAYze6A9r9E8gcaZ+qLkZaFWZuuh0yQ8\nvZI4cuAgKZYkmLgzzQwpy3eIslpjpOAo/CIqmEvZQqsPdlbLSPP/3I1q2etsu4tt\nwALKk/ZmtX0fghZvnsYSPqQ7jVWNG8AJS8lY48BXoHiaug9o9Ua1Bsgxh08QO6Gi\nx204l81CZm3Ojn5NprGFxTlUUNa1G5HMB1NmiE3Y6XQtBJZWC9ypK1UFzJsuzwCE\nZIz8cs+03we1/ySPqqTEwrUbS7QhwKJ0/n+SoY5bsaVEg3Q26+hBH6wu+AEKi8RA\nvpq/63JIFAcYrHMxa7p4+YzXGZlsQjwgKPyBY4cubbkmop2haKU=\n=QOAZ\n-----END PGP SIGNATURE-----", "payload": "tree e5444bf6acafbdc77829b23f646a96edde2f341d\nparent 30e933cd794b90d2ea9164112dcf20c23c1eba5f\nauthor Santiago Pastorino <spastorino@gmail.com> 1605905981 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1606487029 -0300\n\nRemove unneeded logic\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6631215e5413a7e963c93c8c94f7ac980254623a", "html_url": "https://github.com/rust-lang/rust/commit/6631215e5413a7e963c93c8c94f7ac980254623a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6631215e5413a7e963c93c8c94f7ac980254623a/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30e933cd794b90d2ea9164112dcf20c23c1eba5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/30e933cd794b90d2ea9164112dcf20c23c1eba5f", "html_url": "https://github.com/rust-lang/rust/commit/30e933cd794b90d2ea9164112dcf20c23c1eba5f"}], "stats": {"total": 22, "additions": 4, "deletions": 18}, "files": [{"sha": "20c639a0031099b518b31a174e5a0e22ec2f055e", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/mod.rs", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6631215e5413a7e963c93c8c94f7ac980254623a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6631215e5413a7e963c93c8c94f7ac980254623a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs?ref=6631215e5413a7e963c93c8c94f7ac980254623a", "patch": "@@ -188,7 +188,7 @@ impl<'a, 'tcx> AstConv<'tcx> for FnCtxt<'a, 'tcx> {\n         &self,\n         _: Span,\n         def_id: DefId,\n-        assoc_name: Ident,\n+        _: Ident,\n     ) -> ty::GenericPredicates<'tcx> {\n         let tcx = self.tcx;\n         let hir_id = tcx.hir().local_def_id_to_hir_id(def_id.expect_local());\n@@ -202,23 +202,9 @@ impl<'a, 'tcx> AstConv<'tcx> for FnCtxt<'a, 'tcx> {\n                 self.param_env.caller_bounds().iter().filter_map(|predicate| {\n                     match predicate.skip_binders() {\n                         ty::PredicateAtom::Trait(data, _) if data.self_ty().is_param(index) => {\n-                            let trait_did = data.def_id();\n-                            if tcx\n-                                .associated_items(trait_did)\n-                                .find_by_name_and_kind(\n-                                    tcx,\n-                                    assoc_name,\n-                                    ty::AssocKind::Type,\n-                                    trait_did,\n-                                )\n-                                .is_some()\n-                            {\n-                                // HACK(eddyb) should get the original `Span`.\n-                                let span = tcx.def_span(def_id);\n-                                Some((predicate, span))\n-                            } else {\n-                                None\n-                            }\n+                            // HACK(eddyb) should get the original `Span`.\n+                            let span = tcx.def_span(def_id);\n+                            Some((predicate, span))\n                         }\n                         _ => None,\n                     }"}]}