{"sha": "288ea799637dee4b2250069af41b44a8facaa52f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4OGVhNzk5NjM3ZGVlNGIyMjUwMDY5YWY0MWI0NGE4ZmFjYWE1MmY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-24T08:37:16Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-29T08:45:18Z"}, "message": "treat macros as terminals to prevent `cfg!` from giving platform specific hints", "tree": {"sha": "2be319575ac7df48818ba597da4ab98975862b9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2be319575ac7df48818ba597da4ab98975862b9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/288ea799637dee4b2250069af41b44a8facaa52f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/288ea799637dee4b2250069af41b44a8facaa52f", "html_url": "https://github.com/rust-lang/rust/commit/288ea799637dee4b2250069af41b44a8facaa52f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/288ea799637dee4b2250069af41b44a8facaa52f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a78a795ab8618267a8b692095c4579d6931e598", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a78a795ab8618267a8b692095c4579d6931e598", "html_url": "https://github.com/rust-lang/rust/commit/0a78a795ab8618267a8b692095c4579d6931e598"}], "stats": {"total": 40, "additions": 23, "deletions": 17}, "files": [{"sha": "1b4d661da8474e6a0d22717c0311f4a5b0694323", "filename": "src/booleans.rs", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/288ea799637dee4b2250069af41b44a8facaa52f/src%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/288ea799637dee4b2250069af41b44a8facaa52f/src%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbooleans.rs?ref=288ea799637dee4b2250069af41b44a8facaa52f", "patch": "@@ -54,23 +54,26 @@ impl<'a, 'tcx, 'v> Hir2Qmm<'a, 'tcx, 'v> {\n     }\n \n     fn run(&mut self, e: &'v Expr) -> Result<Bool, String> {\n-        match e.node {\n-            ExprUnary(UnNot, ref inner) => return Ok(Bool::Not(box self.run(inner)?)),\n-            ExprBinary(binop, ref lhs, ref rhs) => {\n-                match binop.node {\n-                    BiOr => return Ok(Bool::Or(self.extract(BiOr, &[lhs, rhs], Vec::new())?)),\n-                    BiAnd => return Ok(Bool::And(self.extract(BiAnd, &[lhs, rhs], Vec::new())?)),\n-                    _ => {},\n-                }\n-            },\n-            ExprLit(ref lit) => {\n-                match lit.node {\n-                    LitKind::Bool(true) => return Ok(Bool::True),\n-                    LitKind::Bool(false) => return Ok(Bool::False),\n-                    _ => {},\n-                }\n-            },\n-            _ => {},\n+        // prevent folding of `cfg!` macros and the like\n+        if !in_macro(self.cx, e.span) {\n+            match e.node {\n+                ExprUnary(UnNot, ref inner) => return Ok(Bool::Not(box self.run(inner)?)),\n+                ExprBinary(binop, ref lhs, ref rhs) => {\n+                    match binop.node {\n+                        BiOr => return Ok(Bool::Or(self.extract(BiOr, &[lhs, rhs], Vec::new())?)),\n+                        BiAnd => return Ok(Bool::And(self.extract(BiAnd, &[lhs, rhs], Vec::new())?)),\n+                        _ => {},\n+                    }\n+                },\n+                ExprLit(ref lit) => {\n+                    match lit.node {\n+                        LitKind::Bool(true) => return Ok(Bool::True),\n+                        LitKind::Bool(false) => return Ok(Bool::False),\n+                        _ => {},\n+                    }\n+                },\n+                _ => {},\n+            }\n         }\n         if let Some((n, _)) = self.terminals\n                                   .iter()"}, {"sha": "f9bf1a15f18e3856b92195dc9bf33f6ccc24b428", "filename": "tests/compile-fail/booleans.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/288ea799637dee4b2250069af41b44a8facaa52f/tests%2Fcompile-fail%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/288ea799637dee4b2250069af41b44a8facaa52f/tests%2Fcompile-fail%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fbooleans.rs?ref=288ea799637dee4b2250069af41b44a8facaa52f", "patch": "@@ -29,4 +29,7 @@ fn main() {\n     let _ = false || a; //~ ERROR this boolean expression can be simplified\n     //|~ HELP for further information visit\n     //|~ SUGGESTION let _ = a;\n+\n+    // don't lint on cfgs\n+    let _ = cfg!(you_shall_not_not_pass) && a;\n }"}]}