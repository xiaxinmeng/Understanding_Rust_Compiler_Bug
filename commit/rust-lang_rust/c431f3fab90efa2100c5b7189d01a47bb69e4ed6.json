{"sha": "c431f3fab90efa2100c5b7189d01a47bb69e4ed6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MzFmM2ZhYjkwZWZhMjEwMGM1YjcxODlkMDFhNDdiYjY5ZTRlZDY=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-06-30T03:33:17Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-06-30T03:33:17Z"}, "message": "Inline a few `UndefMask` methods.\n\nThis saves 2.5 seconds on the test program.", "tree": {"sha": "4ba6793c4d9c718eb0c49843da06e055b4764272", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ba6793c4d9c718eb0c49843da06e055b4764272"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c431f3fab90efa2100c5b7189d01a47bb69e4ed6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c431f3fab90efa2100c5b7189d01a47bb69e4ed6", "html_url": "https://github.com/rust-lang/rust/commit/c431f3fab90efa2100c5b7189d01a47bb69e4ed6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c431f3fab90efa2100c5b7189d01a47bb69e4ed6/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f969ed3766ee159739d99dcb850f90ce9af39d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f969ed3766ee159739d99dcb850f90ce9af39d0", "html_url": "https://github.com/rust-lang/rust/commit/8f969ed3766ee159739d99dcb850f90ce9af39d0"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "37580aa4efdb336fd8b8136122ea9bcd3f3eb795", "filename": "src/librustc/mir/interpret/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c431f3fab90efa2100c5b7189d01a47bb69e4ed6/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c431f3fab90efa2100c5b7189d01a47bb69e4ed6/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs?ref=c431f3fab90efa2100c5b7189d01a47bb69e4ed6", "patch": "@@ -635,11 +635,13 @@ impl UndefMask {\n         }\n     }\n \n+    #[inline]\n     pub fn get(&self, i: Size) -> bool {\n         let (block, bit) = bit_index(i);\n         (self.blocks[block] & 1 << bit) != 0\n     }\n \n+    #[inline]\n     pub fn set(&mut self, i: Size, new_state: bool) {\n         let (block, bit) = bit_index(i);\n         if new_state {\n@@ -664,6 +666,7 @@ impl UndefMask {\n     }\n }\n \n+#[inline]\n fn bit_index(bits: Size) -> (usize, usize) {\n     let bits = bits.bytes();\n     let a = bits / BLOCK_SIZE;"}]}