{"sha": "0d28d642b577104bc7901bdf5cae921b47f2442b", "node_id": "C_kwDOAAsO6NoAKDBkMjhkNjQyYjU3NzEwNGJjNzkwMWJkZjVjYWU5MjFiNDdmMjQ0MmI", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-06-14T15:16:51Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-06-19T12:56:31Z"}, "message": "Remove the source archive functionality of ArchiveWriter\n\nWe now build archives through strictly additive means rather than taking\nan existing archive and potentially substracting parts.", "tree": {"sha": "956a53aeb12276696a967e427b2c8f80552c7420", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/956a53aeb12276696a967e427b2c8f80552c7420"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d28d642b577104bc7901bdf5cae921b47f2442b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d28d642b577104bc7901bdf5cae921b47f2442b", "html_url": "https://github.com/rust-lang/rust/commit/0d28d642b577104bc7901bdf5cae921b47f2442b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d28d642b577104bc7901bdf5cae921b47f2442b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c7038b860500390d0544972ac040619df9cb424", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c7038b860500390d0544972ac040619df9cb424", "html_url": "https://github.com/rust-lang/rust/commit/2c7038b860500390d0544972ac040619df9cb424"}], "stats": {"total": 28, "additions": 3, "deletions": 25}, "files": [{"sha": "411ec27139e426d20968c8e7ba8091f5c3e9f291", "filename": "src/archive.rs", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0d28d642b577104bc7901bdf5cae921b47f2442b/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d28d642b577104bc7901bdf5cae921b47f2442b/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=0d28d642b577104bc7901bdf5cae921b47f2442b", "patch": "@@ -32,7 +32,7 @@ pub struct ArArchiveBuilder<'a> {\n }\n \n impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n-    fn new(sess: &'a Session, output: &Path, input: Option<&Path>) -> Self {\n+    fn new(sess: &'a Session, output: &Path) -> Self {\n         let config = ArchiveConfig {\n             sess,\n             dst: output.to_path_buf(),\n@@ -41,32 +41,10 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n             use_gnu_style_archive: sess.target.options.archive_format == \"gnu\",\n         };\n \n-        let (src_archives, entries) = if let Some(input) = input {\n-            let mut archive = ar::Archive::new(File::open(input).unwrap());\n-            let mut entries = Vec::new();\n-\n-            let mut i = 0;\n-            while let Some(entry) = archive.next_entry() {\n-                let entry = entry.unwrap();\n-                entries.push((\n-                    String::from_utf8(entry.header().identifier().to_vec()).unwrap(),\n-                    ArchiveEntry::FromArchive {\n-                        archive_index: 0,\n-                        entry_index: i,\n-                    },\n-                ));\n-                i += 1;\n-            }\n-\n-            (vec![(input.to_owned(), archive)], entries)\n-        } else {\n-            (vec![], Vec::new())\n-        };\n-\n         ArArchiveBuilder {\n             config,\n-            src_archives,\n-            entries,\n+            src_archives: vec![],\n+            entries: vec![],\n         }\n     }\n "}]}