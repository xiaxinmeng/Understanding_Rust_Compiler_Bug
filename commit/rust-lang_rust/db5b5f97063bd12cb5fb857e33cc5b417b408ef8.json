{"sha": "db5b5f97063bd12cb5fb857e33cc5b417b408ef8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNWI1Zjk3MDYzYmQxMmNiNWZiODU3ZTMzY2M1YjQxN2I0MDhlZjg=", "commit": {"author": {"name": "Jacob Kiesel", "email": "kieseljake@gmail.com", "date": "2017-09-08T22:07:21Z"}, "committer": {"name": "Jacob Kiesel", "email": "kieseljake@gmail.com", "date": "2017-09-08T22:07:21Z"}, "message": "Revert \"Add clamp functions\"\n\nThis reverts commit c589f867f89d4e6e48c6602aed8e878208d4822f.", "tree": {"sha": "786ef0a77030c1d27e16ece0cd8a7b7e57e2cc60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/786ef0a77030c1d27e16ece0cd8a7b7e57e2cc60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db5b5f97063bd12cb5fb857e33cc5b417b408ef8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db5b5f97063bd12cb5fb857e33cc5b417b408ef8", "html_url": "https://github.com/rust-lang/rust/commit/db5b5f97063bd12cb5fb857e33cc5b417b408ef8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db5b5f97063bd12cb5fb857e33cc5b417b408ef8/comments", "author": {"login": "Xaeroxe", "id": 6182002, "node_id": "MDQ6VXNlcjYxODIwMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/6182002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xaeroxe", "html_url": "https://github.com/Xaeroxe", "followers_url": "https://api.github.com/users/Xaeroxe/followers", "following_url": "https://api.github.com/users/Xaeroxe/following{/other_user}", "gists_url": "https://api.github.com/users/Xaeroxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xaeroxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xaeroxe/subscriptions", "organizations_url": "https://api.github.com/users/Xaeroxe/orgs", "repos_url": "https://api.github.com/users/Xaeroxe/repos", "events_url": "https://api.github.com/users/Xaeroxe/events{/privacy}", "received_events_url": "https://api.github.com/users/Xaeroxe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xaeroxe", "id": 6182002, "node_id": "MDQ6VXNlcjYxODIwMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/6182002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xaeroxe", "html_url": "https://github.com/Xaeroxe", "followers_url": "https://api.github.com/users/Xaeroxe/followers", "following_url": "https://api.github.com/users/Xaeroxe/following{/other_user}", "gists_url": "https://api.github.com/users/Xaeroxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xaeroxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xaeroxe/subscriptions", "organizations_url": "https://api.github.com/users/Xaeroxe/orgs", "repos_url": "https://api.github.com/users/Xaeroxe/repos", "events_url": "https://api.github.com/users/Xaeroxe/events{/privacy}", "received_events_url": "https://api.github.com/users/Xaeroxe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63f4dab0f5049bda995d043ac6c1bdd05a9865e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/63f4dab0f5049bda995d043ac6c1bdd05a9865e6", "html_url": "https://github.com/rust-lang/rust/commit/63f4dab0f5049bda995d043ac6c1bdd05a9865e6"}], "stats": {"total": 66, "additions": 0, "deletions": 66}, "files": [{"sha": "ec6525485f7a1d2a5107d4490f90ae8370936d51", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/db5b5f97063bd12cb5fb857e33cc5b417b408ef8/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db5b5f97063bd12cb5fb857e33cc5b417b408ef8/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=db5b5f97063bd12cb5fb857e33cc5b417b408ef8", "patch": "@@ -481,32 +481,6 @@ pub trait Ord: Eq + PartialOrd<Self> {\n     where Self: Sized {\n         if self <= other { self } else { other }\n     }\n-\n-    /// Returns max if self is greater than max, and min if self is less than min.\n-    /// Otherwise this will return self.  Panics if min > max.\n-    ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// #![feature(clamp)]\n-    ///\n-    /// assert!((-3).clamp(-2, 1) == -2);\n-    /// assert!(0.clamp(-2, 1) == 0);\n-    /// assert!(2.clamp(-2, 1) == 1);\n-    /// ```\n-    #[unstable(feature = \"clamp\", issue = \"44095\")]\n-    fn clamp(self, min: Self, max: Self) -> Self\n-    where Self: Sized {\n-        assert!(min <= max);\n-        if self < min {\n-            min\n-        }\n-        else if self > max {\n-            max\n-        } else {\n-            self\n-        }\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "0135cd0a588cf09e530499f3e4c60b571cbf62b2", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/db5b5f97063bd12cb5fb857e33cc5b417b408ef8/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db5b5f97063bd12cb5fb857e33cc5b417b408ef8/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=db5b5f97063bd12cb5fb857e33cc5b417b408ef8", "patch": "@@ -1080,26 +1080,6 @@ impl f32 {\n         0.5 * ((2.0 * self) / (1.0 - self)).ln_1p()\n     }\n \n-    /// Returns max if self is greater than max, and min if self is less than min.\n-    /// Otherwise this returns self.  Panics if min > max, min equals NaN, or max equals NaN.\n-    ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// assert!((-3.0f32).clamp(-2.0f32, 1.0f32) == -2.0f32);\n-    /// assert!((0.0f32).clamp(-2.0f32, 1.0f32) == 0.0f32);\n-    /// assert!((2.0f32).clamp(-2.0f32, 1.0f32) == 1.0f32);\n-    /// ```\n-    #[unstable(feature = \"clamp\", issue = \"44095\")]\n-    #[inline]\n-    pub fn clamp(self, min: f32, max: f32) -> f32 {\n-        assert!(min <= max);\n-        let mut x = self;\n-        if x < min { x = min; }\n-        if x > max { x = max; }\n-        x\n-    }\n-\n     /// Raw transmutation to `u32`.\n     ///\n     /// Converts the `f32` into its raw memory representation,"}, {"sha": "d73d7cd2c7bd1cf52c088a0e45d45c4e5e688d84", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/db5b5f97063bd12cb5fb857e33cc5b417b408ef8/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db5b5f97063bd12cb5fb857e33cc5b417b408ef8/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=db5b5f97063bd12cb5fb857e33cc5b417b408ef8", "patch": "@@ -970,26 +970,6 @@ impl f64 {\n         0.5 * ((2.0 * self) / (1.0 - self)).ln_1p()\n     }\n \n-    /// Returns max if self is greater than max, and min if self is less than min.\n-    /// Otherwise this returns self.  Panics if min > max, min equals NaN, or max equals NaN.\n-    ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// assert!((-3.0f64).clamp(-2.0f64, 1.0f64) == -2.0f64);\n-    /// assert!((0.0f64).clamp(-2.0f64, 1.0f64) == 0.0f64);\n-    /// assert!((2.0f64).clamp(-2.0f64, 1.0f64) == 1.0f64);\n-    /// ```\n-    #[unstable(feature = \"clamp\", issue = \"44095\")]\n-    #[inline]\n-    pub fn clamp(self, min: f64, max: f64) -> f64 {\n-        assert!(min <= max);\n-        let mut x = self;\n-        if x < min { x = min; }\n-        if x > max { x = max; }\n-        x\n-    }\n-\n     // Solaris/Illumos requires a wrapper around log, log2, and log10 functions\n     // because of their non-standard behavior (e.g. log(-n) returns -Inf instead\n     // of expected NaN)."}]}