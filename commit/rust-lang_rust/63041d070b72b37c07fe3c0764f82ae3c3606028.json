{"sha": "63041d070b72b37c07fe3c0764f82ae3c3606028", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMDQxZDA3MGI3MmIzN2MwN2ZlM2MwNzY0ZjgyYWUzYzM2MDYwMjg=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-01T11:36:14Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-01T11:36:14Z"}, "message": "Rustup", "tree": {"sha": "79251011c87fc89447854279bc586e35e9bce824", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79251011c87fc89447854279bc586e35e9bce824"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63041d070b72b37c07fe3c0764f82ae3c3606028", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63041d070b72b37c07fe3c0764f82ae3c3606028", "html_url": "https://github.com/rust-lang/rust/commit/63041d070b72b37c07fe3c0764f82ae3c3606028", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63041d070b72b37c07fe3c0764f82ae3c3606028/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4b6e6558e3ccd5ef11758297dc064acceb15ef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4b6e6558e3ccd5ef11758297dc064acceb15ef2", "html_url": "https://github.com/rust-lang/rust/commit/b4b6e6558e3ccd5ef11758297dc064acceb15ef2"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "6fc6637900dfde2141f959139c590be28ce571b9", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/63041d070b72b37c07fe3c0764f82ae3c3606028/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63041d070b72b37c07fe3c0764f82ae3c3606028/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=63041d070b72b37c07fe3c0764f82ae3c3606028", "patch": "@@ -13,7 +13,6 @@ use std::mem;\n use std::rc::Rc;\n use syntax::ast::{FloatTy, LitKind};\n use syntax::ptr::P;\n-use rustc::middle::const_val::ConstVal;\n use crate::utils::{sext, unsext, clip};\n \n #[derive(Debug, Copy, Clone)]\n@@ -428,15 +427,15 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n pub fn miri_to_const<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, result: &ty::Const<'tcx>) -> Option<Constant> {\n     use rustc::mir::interpret::{Scalar, ConstValue};\n     match result.val {\n-        ConstVal::Value(ConstValue::Scalar(Scalar::Bits{ bits: b, ..})) => match result.ty.sty {\n+        ConstValue::Scalar(Scalar::Bits{ bits: b, ..}) => match result.ty.sty {\n             ty::TyBool => Some(Constant::Bool(b == 1)),\n             ty::TyUint(_) | ty::TyInt(_) => Some(Constant::Int(b)),\n             ty::TyFloat(FloatTy::F32) => Some(Constant::F32(f32::from_bits(b as u32))),\n             ty::TyFloat(FloatTy::F64) => Some(Constant::F64(f64::from_bits(b as u64))),\n             // FIXME: implement other conversion\n             _ => None,\n         },\n-        ConstVal::Value(ConstValue::ScalarPair(Scalar::Ptr(ptr), Scalar::Bits { bits: n, .. })) => match result.ty.sty {\n+        ConstValue::ScalarPair(Scalar::Ptr(ptr), Scalar::Bits { bits: n, .. }) => match result.ty.sty {\n             ty::TyRef(_, tam, _) => match tam.sty {\n                 ty::TyStr => {\n                     let alloc = tcx"}, {"sha": "4d89f8ddffbbfbe424edea905fdfbeee756b089c", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/63041d070b72b37c07fe3c0764f82ae3c3606028/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63041d070b72b37c07fe3c0764f82ae3c3606028/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=63041d070b72b37c07fe3c0764f82ae3c3606028", "patch": "@@ -2,18 +2,18 @@\n //! about.\n \n pub const ANY_TRAIT: [&str; 3] = [\"std\", \"any\", \"Any\"];\n-pub const ARC: [&str; 3] = [\"alloc\", \"arc\", \"Arc\"];\n+pub const ARC: [&str; 3] = [\"alloc\", \"sync\", \"Arc\"];\n pub const ASMUT_TRAIT: [&str; 3] = [\"core\", \"convert\", \"AsMut\"];\n pub const ASREF_TRAIT: [&str; 3] = [\"core\", \"convert\", \"AsRef\"];\n pub const BEGIN_PANIC: [&str; 3] = [\"std\", \"panicking\", \"begin_panic\"];\n pub const BEGIN_PANIC_FMT: [&str; 3] = [\"std\", \"panicking\", \"begin_panic_fmt\"];\n-pub const BINARY_HEAP: [&str; 3] = [\"alloc\", \"binary_heap\", \"BinaryHeap\"];\n+pub const BINARY_HEAP: [&str; 4] = [\"alloc\", \"collections\", \"binary_heap\", \"BinaryHeap\"];\n pub const BORROW_TRAIT: [&str; 3] = [\"core\", \"borrow\", \"Borrow\"];\n pub const BOX: [&str; 3] = [\"std\", \"boxed\", \"Box\"];\n pub const BOX_NEW: [&str; 4] = [\"std\", \"boxed\", \"Box\", \"new\"];\n-pub const BTREEMAP: [&str; 4] = [\"alloc\", \"btree\", \"map\", \"BTreeMap\"];\n-pub const BTREEMAP_ENTRY: [&str; 4] = [\"alloc\", \"btree\", \"map\", \"Entry\"];\n-pub const BTREESET: [&str; 4] = [\"alloc\", \"btree\", \"set\", \"BTreeSet\"];\n+pub const BTREEMAP: [&str; 5] = [\"alloc\", \"collections\", \"btree\", \"map\", \"BTreeMap\"];\n+pub const BTREEMAP_ENTRY: [&str; 5] = [\"alloc\", \"collections\", \"btree\", \"map\", \"Entry\"];\n+pub const BTREESET: [&str; 5] = [\"alloc\", \"collections\", \"btree\", \"set\", \"BTreeSet\"];\n pub const CLONE: [&str; 4] = [\"core\", \"clone\", \"Clone\", \"clone\"];\n pub const CLONE_TRAIT: [&str; 3] = [\"core\", \"clone\", \"Clone\"];\n pub const CMP_MAX: [&str; 3] = [\"core\", \"cmp\", \"max\"];\n@@ -47,7 +47,7 @@ pub const IO_PRINT: [&str; 4] = [\"std\", \"io\", \"stdio\", \"_print\"];\n pub const IO_READ: [&str; 3] = [\"std\", \"io\", \"Read\"];\n pub const IO_WRITE: [&str; 3] = [\"std\", \"io\", \"Write\"];\n pub const ITERATOR: [&str; 4] = [\"core\", \"iter\", \"iterator\", \"Iterator\"];\n-pub const LINKED_LIST: [&str; 3] = [\"alloc\", \"linked_list\", \"LinkedList\"];\n+pub const LINKED_LIST: [&str; 4] = [\"alloc\", \"collections\", \"linked_list\", \"LinkedList\"];\n pub const LINT: [&str; 2] = [\"lint\", \"Lint\"];\n pub const LINT_ARRAY: [&str; 2] = [\"lint\", \"LintArray\"];\n pub const MEM_FORGET: [&str; 3] = [\"core\", \"mem\", \"forget\"];\n@@ -101,7 +101,7 @@ pub const TRANSMUTE: [&str; 4] = [\"core\", \"intrinsics\", \"\", \"transmute\"];\n pub const TRY_INTO_RESULT: [&str; 4] = [\"std\", \"ops\", \"Try\", \"into_result\"];\n pub const UNINIT: [&str; 4] = [\"core\", \"intrinsics\", \"\", \"uninit\"];\n pub const VEC: [&str; 3] = [\"alloc\", \"vec\", \"Vec\"];\n-pub const VEC_DEQUE: [&str; 3] = [\"alloc\", \"vec_deque\", \"VecDeque\"];\n+pub const VEC_DEQUE: [&str; 4] = [\"alloc\", \"collections\", \"vec_deque\", \"VecDeque\"];\n pub const VEC_FROM_ELEM: [&str; 3] = [\"alloc\", \"vec\", \"from_elem\"];\n-pub const WEAK_ARC: [&str; 3] = [\"alloc\", \"arc\", \"Weak\"];\n+pub const WEAK_ARC: [&str; 3] = [\"alloc\", \"sync\", \"Weak\"];\n pub const WEAK_RC: [&str; 3] = [\"alloc\", \"rc\", \"Weak\"];"}, {"sha": "1318ed78717da7d072ba711da6c88d2b59d2c417", "filename": "tests/ui/dlist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/63041d070b72b37c07fe3c0764f82ae3c3606028/tests%2Fui%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63041d070b72b37c07fe3c0764f82ae3c3606028/tests%2Fui%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdlist.rs?ref=63041d070b72b37c07fe3c0764f82ae3c3606028", "patch": "@@ -6,7 +6,7 @@\n #![allow(dead_code, needless_pass_by_value)]\n \n extern crate alloc;\n-use alloc::linked_list::LinkedList;\n+use alloc::collections::linked_list::LinkedList;\n \n trait Foo {\n     type Baz = LinkedList<u8>;"}]}