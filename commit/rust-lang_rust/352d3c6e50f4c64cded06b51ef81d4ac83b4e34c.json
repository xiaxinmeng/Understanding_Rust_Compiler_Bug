{"sha": "352d3c6e50f4c64cded06b51ef81d4ac83b4e34c", "node_id": "C_kwDOAAsO6NoAKDM1MmQzYzZlNTBmNGM2NGNkZWQwNmI1MWVmODFkNGFjODNiNGUzNGM", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-05T12:28:36Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-05T12:28:36Z"}, "message": "Fix visibilities", "tree": {"sha": "72ba861eb26b1b9e550cda605b6e28fe65165062", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72ba861eb26b1b9e550cda605b6e28fe65165062"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/352d3c6e50f4c64cded06b51ef81d4ac83b4e34c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/352d3c6e50f4c64cded06b51ef81d4ac83b4e34c", "html_url": "https://github.com/rust-lang/rust/commit/352d3c6e50f4c64cded06b51ef81d4ac83b4e34c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/352d3c6e50f4c64cded06b51ef81d4ac83b4e34c/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6e78b04d00c9144b70b2477d21076b516d5fca7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6e78b04d00c9144b70b2477d21076b516d5fca7", "html_url": "https://github.com/rust-lang/rust/commit/d6e78b04d00c9144b70b2477d21076b516d5fca7"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "416b6f58061da344580f4d9b672c6006e4749852", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/352d3c6e50f4c64cded06b51ef81d4ac83b4e34c/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/352d3c6e50f4c64cded06b51ef81d4ac83b4e34c/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=352d3c6e50f4c64cded06b51ef81d4ac83b4e34c", "patch": "@@ -1086,23 +1086,23 @@ impl<'db> SemanticsImpl<'db> {\n         self.analyze(call.syntax())?.resolve_method_call(self.db, call)\n     }\n \n-    pub fn resolve_await_to_poll(&self, await_expr: &ast::AwaitExpr) -> Option<FunctionId> {\n+    fn resolve_await_to_poll(&self, await_expr: &ast::AwaitExpr) -> Option<FunctionId> {\n         self.analyze(await_expr.syntax())?.resolve_await_to_poll(self.db, await_expr)\n     }\n \n-    pub fn resolve_prefix_expr(&self, prefix_expr: &ast::PrefixExpr) -> Option<FunctionId> {\n+    fn resolve_prefix_expr(&self, prefix_expr: &ast::PrefixExpr) -> Option<FunctionId> {\n         self.analyze(prefix_expr.syntax())?.resolve_prefix_expr(self.db, prefix_expr)\n     }\n \n-    pub fn resolve_index_expr(&self, index_expr: &ast::IndexExpr) -> Option<FunctionId> {\n+    fn resolve_index_expr(&self, index_expr: &ast::IndexExpr) -> Option<FunctionId> {\n         self.analyze(index_expr.syntax())?.resolve_index_expr(self.db, index_expr)\n     }\n \n-    pub fn resolve_bin_expr(&self, bin_expr: &ast::BinExpr) -> Option<FunctionId> {\n+    fn resolve_bin_expr(&self, bin_expr: &ast::BinExpr) -> Option<FunctionId> {\n         self.analyze(bin_expr.syntax())?.resolve_bin_expr(self.db, bin_expr)\n     }\n \n-    pub fn resolve_try_expr(&self, try_expr: &ast::TryExpr) -> Option<FunctionId> {\n+    fn resolve_try_expr(&self, try_expr: &ast::TryExpr) -> Option<FunctionId> {\n         self.analyze(try_expr.syntax())?.resolve_try_expr(self.db, try_expr)\n     }\n "}, {"sha": "5e0bf7c5fb9fe91afbbcc564a77ae7b020dd52e2", "filename": "crates/hir/src/source_analyzer.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/352d3c6e50f4c64cded06b51ef81d4ac83b4e34c/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/352d3c6e50f4c64cded06b51ef81d4ac83b4e34c/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs?ref=352d3c6e50f4c64cded06b51ef81d4ac83b4e34c", "patch": "@@ -261,7 +261,7 @@ impl SourceAnalyzer {\n         Some(self.resolve_impl_method_or_trait_def(db, f_in_trait, &substs))\n     }\n \n-    pub fn resolve_await_to_poll(\n+    pub(crate) fn resolve_await_to_poll(\n         &self,\n         db: &dyn HirDatabase,\n         await_expr: &ast::AwaitExpr,\n@@ -277,7 +277,7 @@ impl SourceAnalyzer {\n         Some(self.resolve_impl_method_or_trait_def(db, op_fn, &substs))\n     }\n \n-    pub fn resolve_prefix_expr(\n+    pub(crate) fn resolve_prefix_expr(\n         &self,\n         db: &dyn HirDatabase,\n         prefix_expr: &ast::PrefixExpr,\n@@ -298,7 +298,7 @@ impl SourceAnalyzer {\n         Some(self.resolve_impl_method_or_trait_def(db, op_fn, &substs))\n     }\n \n-    pub fn resolve_index_expr(\n+    pub(crate) fn resolve_index_expr(\n         &self,\n         db: &dyn HirDatabase,\n         index_expr: &ast::IndexExpr,\n@@ -320,7 +320,7 @@ impl SourceAnalyzer {\n         Some(self.resolve_impl_method_or_trait_def(db, op_fn, &substs))\n     }\n \n-    pub fn resolve_bin_expr(\n+    pub(crate) fn resolve_bin_expr(\n         &self,\n         db: &dyn HirDatabase,\n         binop_expr: &ast::BinExpr,\n@@ -341,7 +341,7 @@ impl SourceAnalyzer {\n         Some(self.resolve_impl_method_or_trait_def(db, op_fn, &substs))\n     }\n \n-    pub fn resolve_try_expr(\n+    pub(crate) fn resolve_try_expr(\n         &self,\n         db: &dyn HirDatabase,\n         try_expr: &ast::TryExpr,"}]}