{"sha": "208ad97fdc9427f1243ac170c1c25f9f7d6ae964", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwOGFkOTdmZGM5NDI3ZjEyNDNhYzE3MGMxYzI1ZjlmN2Q2YWU5NjQ=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-12-24T16:25:18Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-12-24T16:25:18Z"}, "message": "Remove AsyncOwner", "tree": {"sha": "def2b978483f772d095394404ba9c5cf7404e4b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/def2b978483f772d095394404ba9c5cf7404e4b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/208ad97fdc9427f1243ac170c1c25f9f7d6ae964", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/208ad97fdc9427f1243ac170c1c25f9f7d6ae964", "html_url": "https://github.com/rust-lang/rust/commit/208ad97fdc9427f1243ac170c1c25f9f7d6ae964", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/208ad97fdc9427f1243ac170c1c25f9f7d6ae964/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42813126d92cc1fb145e75752b5a95d884ea9a12", "url": "https://api.github.com/repos/rust-lang/rust/commits/42813126d92cc1fb145e75752b5a95d884ea9a12", "html_url": "https://github.com/rust-lang/rust/commit/42813126d92cc1fb145e75752b5a95d884ea9a12"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "c900a6a183acf8c1eddc2cebc26decd069441012", "filename": "crates/ra_hir_def/src/data.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/208ad97fdc9427f1243ac170c1c25f9f7d6ae964/crates%2Fra_hir_def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/208ad97fdc9427f1243ac170c1c25f9f7d6ae964/crates%2Fra_hir_def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fdata.rs?ref=208ad97fdc9427f1243ac170c1c25f9f7d6ae964", "patch": "@@ -6,9 +6,7 @@ use hir_expand::{\n     name::{name, AsName, Name},\n     AstId, InFile,\n };\n-use ra_syntax::ast::{\n-    self, AstNode, AsyncOwner, ImplItem, ModuleItemOwner, NameOwner, TypeAscriptionOwner,\n-};\n+use ra_syntax::ast::{self, AstNode, ImplItem, ModuleItemOwner, NameOwner, TypeAscriptionOwner};\n \n use crate::{\n     db::DefDatabase,"}, {"sha": "baaef30234848fdc8413ad73cfdd5fc12c9951fb", "filename": "crates/ra_syntax/src/ast/extensions.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/208ad97fdc9427f1243ac170c1c25f9f7d6ae964/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/208ad97fdc9427f1243ac170c1c25f9f7d6ae964/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs?ref=208ad97fdc9427f1243ac170c1c25f9f7d6ae964", "patch": "@@ -221,6 +221,10 @@ impl ast::FnDef {\n             .and_then(|it| it.into_token())\n             .filter(|it| it.kind() == T![;])\n     }\n+\n+    pub fn is_async(&self) -> bool {\n+        self.syntax().children_with_tokens().any(|it| it.kind() == T![async])\n+    }\n }\n \n impl ast::LetStmt {"}, {"sha": "9f9d6e63cb610da083a141278fd874d877f0b578", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/208ad97fdc9427f1243ac170c1c25f9f7d6ae964/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/208ad97fdc9427f1243ac170c1c25f9f7d6ae964/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=208ad97fdc9427f1243ac170c1c25f9f7d6ae964", "patch": "@@ -1129,7 +1129,6 @@ impl ast::NameOwner for FnDef {}\n impl ast::TypeParamsOwner for FnDef {}\n impl ast::AttrsOwner for FnDef {}\n impl ast::DocCommentsOwner for FnDef {}\n-impl ast::AsyncOwner for FnDef {}\n impl FnDef {\n     pub fn param_list(&self) -> Option<ParamList> {\n         AstChildren::new(&self.syntax).next()"}, {"sha": "f99984fe0f69c44f984ae2016b37829422dd949c", "filename": "crates/ra_syntax/src/ast/traits.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/208ad97fdc9427f1243ac170c1c25f9f7d6ae964/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/208ad97fdc9427f1243ac170c1c25f9f7d6ae964/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs?ref=208ad97fdc9427f1243ac170c1c25f9f7d6ae964", "patch": "@@ -8,7 +8,6 @@ use crate::{\n     ast::{self, child_opt, children, AstChildren, AstNode, AstToken},\n     match_ast,\n     syntax_node::{SyntaxElementChildren, SyntaxNodeChildren},\n-    SyntaxKind,\n };\n \n pub trait TypeAscriptionOwner: AstNode {\n@@ -106,12 +105,6 @@ pub trait AttrsOwner: AstNode {\n     }\n }\n \n-pub trait AsyncOwner: AstNode {\n-    fn is_async(&self) -> bool {\n-        self.syntax().children_with_tokens().any(|t| t.kind() == SyntaxKind::ASYNC_KW)\n-    }\n-}\n-\n pub trait DocCommentsOwner: AstNode {\n     fn doc_comments(&self) -> CommentIter {\n         CommentIter { iter: self.syntax().children_with_tokens() }"}, {"sha": "08aafb610d61b4417f398f95c8d492e355d04892", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/208ad97fdc9427f1243ac170c1c25f9f7d6ae964/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/208ad97fdc9427f1243ac170c1c25f9f7d6ae964/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=208ad97fdc9427f1243ac170c1c25f9f7d6ae964", "patch": "@@ -275,8 +275,7 @@ Grammar(\n                 \"NameOwner\",\n                 \"TypeParamsOwner\",\n                 \"AttrsOwner\",\n-                \"DocCommentsOwner\",\n-                \"AsyncOwner\"\n+                \"DocCommentsOwner\"\n             ],\n             options: [ \"ParamList\", [\"body\", \"BlockExpr\"], \"RetType\" ],\n         ),"}]}