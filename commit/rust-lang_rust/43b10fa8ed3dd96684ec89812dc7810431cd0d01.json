{"sha": "43b10fa8ed3dd96684ec89812dc7810431cd0d01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYjEwZmE4ZWQzZGQ5NjY4NGVjODk4MTJkYzc4MTA0MzFjZDBkMDE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-01-08T05:12:33Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-01-08T07:34:37Z"}, "message": "Teach diagnostics to have correctly padded lists\n\nMake the suggestion list have a correct padding:\n\n```\nerror[E0308]: mismatched types\n --> file.rs:3:20\n  |\n3 |     let x: usize = \"\";\n  |                    ^^ expected usize, found reference\n  |\n  = note: expected type `usize`\n  = note:    found type `&'static str`\n  = help: here are some functions which might fulfill your needs:\n          - .len()\n          - .foo()\n          - .bar()\n```", "tree": {"sha": "03a3a7fc2fb16d35528bd70d8aefc4a840642f4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03a3a7fc2fb16d35528bd70d8aefc4a840642f4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43b10fa8ed3dd96684ec89812dc7810431cd0d01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43b10fa8ed3dd96684ec89812dc7810431cd0d01", "html_url": "https://github.com/rust-lang/rust/commit/43b10fa8ed3dd96684ec89812dc7810431cd0d01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43b10fa8ed3dd96684ec89812dc7810431cd0d01/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e38a89a7b970181be083691504825a23e6b0a0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e38a89a7b970181be083691504825a23e6b0a0f", "html_url": "https://github.com/rust-lang/rust/commit/7e38a89a7b970181be083691504825a23e6b0a0f"}], "stats": {"total": 66, "additions": 49, "deletions": 17}, "files": [{"sha": "73a8343eafc45218af566604006b19c7e72c5c5b", "filename": "src/librustc_errors/diagnostic.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/43b10fa8ed3dd96684ec89812dc7810431cd0d01/src%2Flibrustc_errors%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43b10fa8ed3dd96684ec89812dc7810431cd0d01/src%2Flibrustc_errors%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic.rs?ref=43b10fa8ed3dd96684ec89812dc7810431cd0d01", "patch": "@@ -32,6 +32,7 @@ pub struct SubDiagnostic {\n     pub message: String,\n     pub span: MultiSpan,\n     pub render_span: Option<RenderSpan>,\n+    pub list: Vec<String>,\n }\n \n impl Diagnostic {\n@@ -132,6 +133,11 @@ impl Diagnostic {\n         self\n     }\n \n+    pub fn help_with_list(&mut self , msg: &str, list: Vec<String>) -> &mut Self {\n+        self.sub_with_list(Level::Help, msg, MultiSpan::new(), None, list);\n+        self\n+    }\n+\n     pub fn span_help<S: Into<MultiSpan>>(&mut self,\n                                          sp: S,\n                                          msg: &str)\n@@ -191,11 +197,23 @@ impl Diagnostic {\n            message: &str,\n            span: MultiSpan,\n            render_span: Option<RenderSpan>) {\n+        self.sub_with_list(level, message, span, render_span, vec![]);\n+    }\n+\n+    /// Convenience function for internal use, clients should use one of the\n+    /// public methods above.\n+    fn sub_with_list(&mut self,\n+           level: Level,\n+           message: &str,\n+           span: MultiSpan,\n+           render_span: Option<RenderSpan>,\n+           list: Vec<String>) {\n         let sub = SubDiagnostic {\n             level: level,\n             message: message.to_owned(),\n             span: span,\n             render_span: render_span,\n+            list: list,\n         };\n         self.children.push(sub);\n     }"}, {"sha": "24f1b86739da6fa36f05454c23242e1a9c1b908a", "filename": "src/librustc_errors/diagnostic_builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/43b10fa8ed3dd96684ec89812dc7810431cd0d01/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43b10fa8ed3dd96684ec89812dc7810431cd0d01/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic_builder.rs?ref=43b10fa8ed3dd96684ec89812dc7810431cd0d01", "patch": "@@ -135,6 +135,7 @@ impl<'a> DiagnosticBuilder<'a> {\n     forward!(pub fn warn(&mut self, msg: &str) -> &mut Self);\n     forward!(pub fn span_warn<S: Into<MultiSpan>>(&mut self, sp: S, msg: &str) -> &mut Self);\n     forward!(pub fn help(&mut self , msg: &str) -> &mut Self);\n+    forward!(pub fn help_with_list(&mut self , msg: &str, list: Vec<String>) -> &mut Self);\n     forward!(pub fn span_help<S: Into<MultiSpan>>(&mut self,\n                                                   sp: S,\n                                                   msg: &str)"}, {"sha": "015997211bb3f07d03a617a8a782b9b962d32662", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/43b10fa8ed3dd96684ec89812dc7810431cd0d01/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43b10fa8ed3dd96684ec89812dc7810431cd0d01/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=43b10fa8ed3dd96684ec89812dc7810431cd0d01", "patch": "@@ -699,6 +699,7 @@ impl EmitterWriter {\n                     .to_string(),\n                 span: MultiSpan::new(),\n                 render_span: None,\n+                list: vec![],\n             });\n         }\n     }\n@@ -923,14 +924,28 @@ impl EmitterWriter {\n                             }\n                         },\n                         None => {\n+                            let msg = if child.list.len() == 0 {\n+                                child.message.to_owned()\n+                            } else {\n+                                format!(\"{}\\n{}\",\n+                                        &child.message,\n+                                        &child.list.iter().map(|item| {\n+                                            format!(\"{}         - {}\",\n+                                                    (0..max_line_num_len)\n+                                                          .map(|_| \" \")\n+                                                          .collect::<String>(),\n+                                                    item)\n+                                        }).collect::<Vec<String>>()\n+                                        .join(\"\\n\"))\n+                            };\n                             match self.emit_message_default(&child.span,\n-                                                            &child.message,\n+                                                            &msg,\n                                                             &None,\n                                                             &child.level,\n                                                             max_line_num_len,\n                                                             true) {\n                                 Err(e) => panic!(\"failed to emit error: {}\", e),\n-                                _ => ()\n+                                _ => (),\n                             }\n                         }\n                     }"}, {"sha": "06d629c173256d4c4cd9fb77318d040e9f5372d1", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/43b10fa8ed3dd96684ec89812dc7810431cd0d01/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43b10fa8ed3dd96684ec89812dc7810431cd0d01/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=43b10fa8ed3dd96684ec89812dc7810431cd0d01", "patch": "@@ -70,9 +70,8 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                                          ast::DUMMY_NODE_ID);\n             let mut err = self.report_mismatched_types(&cause, expected, expr_ty, e);\n             if suggestions.len() > 0 {\n-                err.help(&format!(\"here are some functions which \\\n-                                   might fulfill your needs:\\n - {}\",\n-                                  self.get_best_match(&suggestions)));\n+                err.help_with_list(\"here are some functions which might fulfill your needs:\",\n+                                   self.get_best_match(&suggestions));\n             };\n             err.emit();\n         }\n@@ -88,15 +87,14 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 })\n     }\n \n-    fn display_suggested_methods(&self, methods: &[AssociatedItem]) -> String {\n+    fn display_suggested_methods(&self, methods: &[AssociatedItem]) -> Vec<String> {\n         methods.iter()\n                .take(5)\n                .map(|method| self.format_method_suggestion(&*method))\n                .collect::<Vec<String>>()\n-               .join(\"\\n - \")\n     }\n \n-    fn get_best_match(&self, methods: &[AssociatedItem]) -> String {\n+    fn get_best_match(&self, methods: &[AssociatedItem]) -> Vec<String> {\n         let no_argument_methods: Vec<_> =\n             methods.iter()\n                    .filter(|ref x| self.has_no_input_arg(&*x))"}, {"sha": "bb6f310fec81387c3c1003078f303f9c5251641f", "filename": "src/test/ui/resolve/token-error-correct-3.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/43b10fa8ed3dd96684ec89812dc7810431cd0d01/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43b10fa8ed3dd96684ec89812dc7810431cd0d01/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr?ref=43b10fa8ed3dd96684ec89812dc7810431cd0d01", "patch": "@@ -37,9 +37,9 @@ error[E0308]: mismatched types\n    = note: expected type `()`\n    = note:    found type `std::result::Result<bool, std::io::Error>`\n    = help: here are some functions which might fulfill your needs:\n- - .unwrap()\n- - .unwrap_err()\n- - .unwrap_or_default()\n+           - .unwrap()\n+           - .unwrap_err()\n+           - .unwrap_or_default()\n \n error: aborting due to previous error\n "}, {"sha": "ed1bcd318a4f69f280b1d6e86ee46c9b547b71a5", "filename": "src/test/ui/span/coerce-suggestions.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/43b10fa8ed3dd96684ec89812dc7810431cd0d01/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43b10fa8ed3dd96684ec89812dc7810431cd0d01/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr?ref=43b10fa8ed3dd96684ec89812dc7810431cd0d01", "patch": "@@ -7,8 +7,8 @@ error[E0308]: mismatched types\n    = note: expected type `usize`\n    = note:    found type `std::string::String`\n    = help: here are some functions which might fulfill your needs:\n- - .capacity()\n- - .len()\n+           - .capacity()\n+           - .len()\n \n error[E0308]: mismatched types\n   --> $DIR/coerce-suggestions.rs:23:19\n@@ -19,10 +19,10 @@ error[E0308]: mismatched types\n    = note: expected type `&str`\n    = note:    found type `std::string::String`\n    = help: here are some functions which might fulfill your needs:\n- - .as_str()\n- - .trim()\n- - .trim_left()\n- - .trim_right()\n+           - .as_str()\n+           - .trim()\n+           - .trim_left()\n+           - .trim_right()\n \n error[E0308]: mismatched types\n   --> $DIR/coerce-suggestions.rs:30:10"}]}