{"sha": "03240e1359f68bdddcdb236f3a89f9907b907449", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMjQwZTEzNTlmNjhiZGRkY2RiMjM2ZjNhODlmOTkwN2I5MDc0NDk=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-01-17T02:27:18Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-01-17T02:55:23Z"}, "message": "review comments", "tree": {"sha": "9294d99b4c3e21da86d177f1e56e18ce837247c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9294d99b4c3e21da86d177f1e56e18ce837247c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03240e1359f68bdddcdb236f3a89f9907b907449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03240e1359f68bdddcdb236f3a89f9907b907449", "html_url": "https://github.com/rust-lang/rust/commit/03240e1359f68bdddcdb236f3a89f9907b907449", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03240e1359f68bdddcdb236f3a89f9907b907449/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10a9ea4c2622544d52ecef47fea0404a7ce0ace4", "url": "https://api.github.com/repos/rust-lang/rust/commits/10a9ea4c2622544d52ecef47fea0404a7ce0ace4", "html_url": "https://github.com/rust-lang/rust/commit/10a9ea4c2622544d52ecef47fea0404a7ce0ace4"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "b0e0cb611afaffb60711b97e46c21e669ff2d4dc", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/03240e1359f68bdddcdb236f3a89f9907b907449/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03240e1359f68bdddcdb236f3a89f9907b907449/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=03240e1359f68bdddcdb236f3a89f9907b907449", "patch": "@@ -1475,7 +1475,11 @@ impl EmitterWriter {\n             Some(ref sm) => sm,\n             None => return Ok(()),\n         };\n-        if !suggestion.has_valid_spans(&**sm) {\n+\n+        // Render the replacements for each suggestion\n+        let suggestions = suggestion.splice_lines(&**sm);\n+\n+        if suggestions.is_empty() {\n             // Suggestions coming from macros can have malformed spans. This is a heavy handed\n             // approach to avoid ICEs by ignoring the suggestion outright.\n             return Ok(());\n@@ -1497,9 +1501,6 @@ impl EmitterWriter {\n             Some(Style::HeaderMsg),\n         );\n \n-        // Render the replacements for each suggestion\n-        let suggestions = suggestion.splice_lines(&**sm);\n-\n         let mut row_num = 2;\n         let mut notice_capitalization = false;\n         for (complete, parts, only_capitalization) in suggestions.iter().take(MAX_SUGGESTIONS) {"}, {"sha": "827e9b831f32d711978c1b0c960fc90aabc4ab49", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/03240e1359f68bdddcdb236f3a89f9907b907449/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03240e1359f68bdddcdb236f3a89f9907b907449/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=03240e1359f68bdddcdb236f3a89f9907b907449", "patch": "@@ -144,18 +144,6 @@ pub struct SubstitutionPart {\n }\n \n impl CodeSuggestion {\n-    /// Suggestions coming from macros can have malformed spans. This is a heavy handed approach\n-    /// to avoid ICEs by ignoring the suggestion outright.\n-    pub fn has_valid_spans(&self, cm: &SourceMap) -> bool {\n-        !self.substitutions.iter().any(|subst| {\n-            let invalid = subst.parts.iter().any(|item| cm.is_valid_span(item.span).is_err());\n-            if invalid {\n-                debug!(\"malformed span in suggestion: {:?}\", subst);\n-            }\n-            invalid\n-        })\n-    }\n-\n     /// Returns the assembled code suggestions, whether they should be shown with an underline\n     /// and whether the substitution only differs in capitalization.\n     pub fn splice_lines(&self, cm: &SourceMap) -> Vec<(String, Vec<SubstitutionPart>, bool)> {\n@@ -187,6 +175,15 @@ impl CodeSuggestion {\n \n         self.substitutions\n             .iter()\n+            .filter(|subst| {\n+                // Suggestions coming from macros can have malformed spans. This is a heavy\n+                // handed approach to avoid ICEs by ignoring the suggestion outright.\n+                let invalid = subst.parts.iter().any(|item| cm.is_valid_span(item.span).is_err());\n+                if invalid {\n+                    debug!(\"splice_lines: suggestion contains an invalid span: {:?}\", subst);\n+                }\n+                !invalid\n+            })\n             .cloned()\n             .map(|mut substitution| {\n                 // Assumption: all spans are in the same file, and all spans"}, {"sha": "0d7fb845a40eeffb1cba2bc8193a1c8455e27d92", "filename": "src/test/ui/consts/miri_unleashed/mutable_const2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03240e1359f68bdddcdb236f3a89f9907b907449/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/03240e1359f68bdddcdb236f3a89f9907b907449/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const2.stderr?ref=03240e1359f68bdddcdb236f3a89f9907b907449", "patch": "@@ -10,7 +10,7 @@ error: internal compiler error: mutable allocation in constant\n LL | const MUTABLE_BEHIND_RAW: *mut i32 = &UnsafeCell::new(42) as *const _ as *mut _;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-thread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:359:17\n+thread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:356:17\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n \n error: internal compiler error: unexpected panic"}]}