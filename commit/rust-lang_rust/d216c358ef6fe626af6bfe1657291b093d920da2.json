{"sha": "d216c358ef6fe626af6bfe1657291b093d920da2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMTZjMzU4ZWY2ZmU2MjZhZjZiZmUxNjU3MjkxYjA5M2Q5MjBkYTI=", "commit": {"author": {"name": "Jason Dusek", "email": "jason.dusek@gmail.com", "date": "2016-03-09T05:52:58Z"}, "committer": {"name": "Jason Dusek", "email": "jason.dusek@gmail.com", "date": "2016-03-11T08:15:26Z"}, "message": "Write non-output to stderr when there is output", "tree": {"sha": "825a54586d80482b52f9d1475536d851b37a2992", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/825a54586d80482b52f9d1475536d851b37a2992"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d216c358ef6fe626af6bfe1657291b093d920da2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d216c358ef6fe626af6bfe1657291b093d920da2", "html_url": "https://github.com/rust-lang/rust/commit/d216c358ef6fe626af6bfe1657291b093d920da2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d216c358ef6fe626af6bfe1657291b093d920da2/comments", "author": {"login": "solidsnack", "id": 153008, "node_id": "MDQ6VXNlcjE1MzAwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/153008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solidsnack", "html_url": "https://github.com/solidsnack", "followers_url": "https://api.github.com/users/solidsnack/followers", "following_url": "https://api.github.com/users/solidsnack/following{/other_user}", "gists_url": "https://api.github.com/users/solidsnack/gists{/gist_id}", "starred_url": "https://api.github.com/users/solidsnack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solidsnack/subscriptions", "organizations_url": "https://api.github.com/users/solidsnack/orgs", "repos_url": "https://api.github.com/users/solidsnack/repos", "events_url": "https://api.github.com/users/solidsnack/events{/privacy}", "received_events_url": "https://api.github.com/users/solidsnack/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solidsnack", "id": 153008, "node_id": "MDQ6VXNlcjE1MzAwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/153008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solidsnack", "html_url": "https://github.com/solidsnack", "followers_url": "https://api.github.com/users/solidsnack/followers", "following_url": "https://api.github.com/users/solidsnack/following{/other_user}", "gists_url": "https://api.github.com/users/solidsnack/gists{/gist_id}", "starred_url": "https://api.github.com/users/solidsnack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solidsnack/subscriptions", "organizations_url": "https://api.github.com/users/solidsnack/orgs", "repos_url": "https://api.github.com/users/solidsnack/repos", "events_url": "https://api.github.com/users/solidsnack/events{/privacy}", "received_events_url": "https://api.github.com/users/solidsnack/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93029638a03e7002d2073d2cfcf843745118800d", "url": "https://api.github.com/repos/rust-lang/rust/commits/93029638a03e7002d2073d2cfcf843745118800d", "html_url": "https://github.com/rust-lang/rust/commit/93029638a03e7002d2073d2cfcf843745118800d"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "b7492fdc2fe3c7515b24d28acc9cb1b1a12d9807", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d216c358ef6fe626af6bfe1657291b093d920da2/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d216c358ef6fe626af6bfe1657291b093d920da2/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=d216c358ef6fe626af6bfe1657291b093d920da2", "patch": "@@ -28,6 +28,15 @@ use std::str::FromStr;\n \n use getopts::{Matches, Options};\n \n+macro_rules! msg(\n+    ($($arg:tt)*) => (\n+        match writeln!(&mut ::std::io::stderr(), $($arg)* ) {\n+            Ok(_) => {},\n+            Err(x) => panic!(\"Unable to write to stderr: {}\", x),\n+        }\n+    )\n+);\n+\n /// Rustfmt operations.\n enum Operation {\n     /// Format files and their child modules.\n@@ -203,7 +212,7 @@ fn execute() -> i32 {\n                 path = path_tmp;\n             };\n             if let Some(path) = path.as_ref() {\n-                println!(\"Using rustfmt config file {}\", path.display());\n+                msg!(\"Using rustfmt config file {}\", path.display());\n             }\n             for file in files {\n                 // Check the file directory if the config-path could not be read or not provided\n@@ -213,7 +222,7 @@ fn execute() -> i32 {\n                                                                        for {}\",\n                                                                       file.display()));\n                     if let Some(path) = path_tmp.as_ref() {\n-                        println!(\"Using rustfmt config file {} for {}\",\n+                        msg!(\"Using rustfmt config file {} for {}\",\n                                  path.display(),\n                                  file.display());\n                     }"}]}