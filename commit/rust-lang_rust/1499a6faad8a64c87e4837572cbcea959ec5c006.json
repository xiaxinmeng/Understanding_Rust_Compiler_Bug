{"sha": "1499a6faad8a64c87e4837572cbcea959ec5c006", "node_id": "C_kwDOAAsO6NoAKDE0OTlhNmZhYWQ4YTY0Yzg3ZTQ4Mzc1NzJjYmNlYTk1OWVjNWMwMDY", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-04-06T21:19:22Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-04-06T21:24:47Z"}, "message": "UnwindAction::Terminate edge is also critical edge", "tree": {"sha": "6e20c4167dff665d2054ca818a836ca94c9e1e67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e20c4167dff665d2054ca818a836ca94c9e1e67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1499a6faad8a64c87e4837572cbcea959ec5c006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1499a6faad8a64c87e4837572cbcea959ec5c006", "html_url": "https://github.com/rust-lang/rust/commit/1499a6faad8a64c87e4837572cbcea959ec5c006", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1499a6faad8a64c87e4837572cbcea959ec5c006/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04126398c227d3ba9994bbb303e6c2a26d9198b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/04126398c227d3ba9994bbb303e6c2a26d9198b2", "html_url": "https://github.com/rust-lang/rust/commit/04126398c227d3ba9994bbb303e6c2a26d9198b2"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "e1e354efa1c4fcfaa0d605123d9665374f1376d8", "filename": "compiler/rustc_mir_transform/src/add_call_guards.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1499a6faad8a64c87e4837572cbcea959ec5c006/compiler%2Frustc_mir_transform%2Fsrc%2Fadd_call_guards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1499a6faad8a64c87e4837572cbcea959ec5c006/compiler%2Frustc_mir_transform%2Fsrc%2Fadd_call_guards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fadd_call_guards.rs?ref=1499a6faad8a64c87e4837572cbcea959ec5c006", "patch": "@@ -53,7 +53,8 @@ impl AddCallGuards {\n                     kind: TerminatorKind::Call { target: Some(ref mut destination), unwind, .. },\n                     source_info,\n                 }) if pred_count[*destination] > 1\n-                    && (matches!(unwind, UnwindAction::Cleanup(_)) || self == &AllCallEdges) =>\n+                    && (matches!(unwind, UnwindAction::Cleanup(_) | UnwindAction::Terminate)\n+                        || self == &AllCallEdges) =>\n                 {\n                     // It's a critical edge, break it\n                     let call_guard = BasicBlockData {"}]}