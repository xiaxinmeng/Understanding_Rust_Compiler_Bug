{"sha": "5d971ab5f27e802409c49a3ee5642c433b2cca3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkOTcxYWI1ZjI3ZTgwMjQwOWM0OWEzZWU1NjQyYzQzM2IyY2NhM2I=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-12-18T00:37:40Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-12-22T02:18:03Z"}, "message": "save-analysis signature stuff for json-api flavour.", "tree": {"sha": "9ddb303b1852493d79501c3de8e7e94e4766bd2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ddb303b1852493d79501c3de8e7e94e4766bd2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d971ab5f27e802409c49a3ee5642c433b2cca3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d971ab5f27e802409c49a3ee5642c433b2cca3b", "html_url": "https://github.com/rust-lang/rust/commit/5d971ab5f27e802409c49a3ee5642c433b2cca3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d971ab5f27e802409c49a3ee5642c433b2cca3b/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8492367bf9de1baeeb18498f521be6f180ff89d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8492367bf9de1baeeb18498f521be6f180ff89d", "html_url": "https://github.com/rust-lang/rust/commit/d8492367bf9de1baeeb18498f521be6f180ff89d"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "342c33af2f8963854b65a15e5a60e6c0e76c78a9", "filename": "src/librustc_save_analysis/json_api_dumper.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5d971ab5f27e802409c49a3ee5642c433b2cca3b/src%2Flibrustc_save_analysis%2Fjson_api_dumper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d971ab5f27e802409c49a3ee5642c433b2cca3b/src%2Flibrustc_save_analysis%2Fjson_api_dumper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fjson_api_dumper.rs?ref=5d971ab5f27e802409c49a3ee5642c433b2cca3b", "patch": "@@ -222,7 +222,7 @@ impl From<EnumData> for Option<Def> {\n                 children: data.variants.into_iter().map(|id| From::from(id)).collect(),\n                 decl_id: None,\n                 docs: data.docs,\n-                sig: None,\n+                sig: Some(From::from(data.sig)),\n             }),\n             _ => None,\n         }\n@@ -242,7 +242,7 @@ impl From<TupleVariantData> for Option<Def> {\n             children: vec![],\n             decl_id: None,\n             docs: data.docs,\n-            sig: None,\n+            sig: Some(From::from(data.sig)),\n         })\n     }\n }\n@@ -259,7 +259,7 @@ impl From<StructVariantData> for Option<Def> {\n             children: vec![],\n             decl_id: None,\n             docs: data.docs,\n-            sig: None,\n+            sig: Some(From::from(data.sig)),\n         })\n     }\n }\n@@ -297,7 +297,7 @@ impl From<TraitData> for Option<Def> {\n                 parent: None,\n                 decl_id: None,\n                 docs: data.docs,\n-                sig: None,\n+                sig: Some(From::from(data.sig)),\n             }),\n             _ => None,\n         }\n@@ -317,7 +317,7 @@ impl From<FunctionData> for Option<Def> {\n                 parent: data.parent.map(|id| From::from(id)),\n                 decl_id: None,\n                 docs: data.docs,\n-                sig: None,\n+                sig: Some(From::from(data.sig)),\n             }),\n             _ => None,\n         }\n@@ -337,7 +337,7 @@ impl From<MethodData> for Option<Def> {\n                 parent: data.parent.map(|id| From::from(id)),\n                 decl_id: data.decl_id.map(|id| From::from(id)),\n                 docs: data.docs,\n-                sig: None,\n+                sig: Some(From::from(data.sig)),\n             }),\n             _ => None,\n         }\n@@ -374,7 +374,7 @@ impl From<ModData> for Option<Def> {\n                 parent: None,\n                 decl_id: None,\n                 docs: data.docs,\n-                sig: None,\n+                sig: Some(From::from(data.sig)),\n             }),\n             _ => None,\n         }\n@@ -394,7 +394,7 @@ impl From<TypeDefData> for Option<Def> {\n                 parent: data.parent.map(|id| From::from(id)),\n                 decl_id: None,\n                 docs: String::new(),\n-                sig: None,\n+                sig: data.sig.map(|s| From::from(s)),\n             }),\n             _ => None,\n         }"}, {"sha": "491521a3239495454e9bb5680bf1535b26b1dff0", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5d971ab5f27e802409c49a3ee5642c433b2cca3b/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d971ab5f27e802409c49a3ee5642c433b2cca3b/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=5d971ab5f27e802409c49a3ee5642c433b2cca3b", "patch": "@@ -414,7 +414,6 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n \n         let name = name.to_string();\n         let text = self.span_utils.signature_string_for_span(span);\n-        println!(\"text: `{}`, name: `{}`\", text, name);\n         let ident_start = text.find(&name).unwrap();\n         let ident_end = ident_start + name.len();\n         let sig = Signature {"}]}