{"sha": "389b7ff19074988a3855bbc5ba7b19eb903a6fb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4OWI3ZmYxOTA3NDk4OGEzODU1YmJjNWJhN2IxOWViOTAzYTZmYjQ=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-09-16T21:57:20Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-09-19T22:21:08Z"}, "message": "Do not link LLVM tools to LLVM dylib unless rustc is\n\nPreviously we would have some platforms where LLVM was linked to rustc\nstatically, but to the LLVM tools dynamically. That meant we were distributing\ntwo copies of LLVM: one as a separate dylib and one statically linked in to\nlibrustc_driver.", "tree": {"sha": "82ea34308a176c80f5fd698e3fcd5a66cd6d622c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82ea34308a176c80f5fd698e3fcd5a66cd6d622c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/389b7ff19074988a3855bbc5ba7b19eb903a6fb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/389b7ff19074988a3855bbc5ba7b19eb903a6fb4", "html_url": "https://github.com/rust-lang/rust/commit/389b7ff19074988a3855bbc5ba7b19eb903a6fb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/389b7ff19074988a3855bbc5ba7b19eb903a6fb4/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e9d5db8392c44a2e94008168fa3506ecddaa357", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e9d5db8392c44a2e94008168fa3506ecddaa357", "html_url": "https://github.com/rust-lang/rust/commit/8e9d5db8392c44a2e94008168fa3506ecddaa357"}], "stats": {"total": 31, "additions": 13, "deletions": 18}, "files": [{"sha": "044507c398f2f73173e3542ce373e9da9fef7bab", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/389b7ff19074988a3855bbc5ba7b19eb903a6fb4/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/389b7ff19074988a3855bbc5ba7b19eb903a6fb4/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=389b7ff19074988a3855bbc5ba7b19eb903a6fb4", "patch": "@@ -2401,14 +2401,11 @@ fn maybe_install_llvm(builder: &Builder<'_>, target: TargetSelection, dst_libdir\n         return;\n     }\n \n-    // On macOS for some reason the llvm-config binary behaves differently and\n-    // and fails on missing .a files if run without --link-shared. If run with\n-    // that option, it still fails, but because we only ship a libLLVM.dylib\n-    // rather than libLLVM-11-rust-....dylib file.\n-    //\n-    // For now just don't use llvm-config here on macOS; that will fail to\n-    // support CI-built LLVM, but until we work out the different behavior that\n-    // is fine as it is off by default.\n+    // On macOS, rustc (and LLVM tools) link to an unversioned libLLVM.dylib\n+    // instead of libLLVM-11-rust-....dylib, as on linux. It's not entirely\n+    // clear why this is the case, though. llvm-config will emit the versioned\n+    // paths and we don't want those in the sysroot (as we're expecting\n+    // unversioned paths).\n     if target.contains(\"apple-darwin\") {\n         let src_libdir = builder.llvm_out(target).join(\"lib\");\n         let llvm_dylib_path = src_libdir.join(\"libLLVM.dylib\");"}, {"sha": "71b35c0433a9cef37e7bc01f6f6984a1d640298b", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/389b7ff19074988a3855bbc5ba7b19eb903a6fb4/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/389b7ff19074988a3855bbc5ba7b19eb903a6fb4/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=389b7ff19074988a3855bbc5ba7b19eb903a6fb4", "patch": "@@ -129,8 +129,10 @@ impl Step for Llvm {\n                 Err(m) => m,\n             };\n \n-        if builder.config.llvm_link_shared && target.contains(\"windows\") {\n-            panic!(\"shared linking to LLVM is not currently supported on Windows\");\n+        if builder.config.llvm_link_shared\n+            && (target.contains(\"windows\") || target.contains(\"apple-darwin\"))\n+        {\n+            panic!(\"shared linking to LLVM is not currently supported on {}\", target.triple);\n         }\n \n         builder.info(&format!(\"Building LLVM for {}\", target));\n@@ -209,7 +211,10 @@ impl Step for Llvm {\n         // which saves both memory during parallel links and overall disk space\n         // for the tools. We don't do this on every platform as it doesn't work\n         // equally well everywhere.\n-        if builder.llvm_link_tools_dynamically(target) {\n+        //\n+        // If we're not linking rustc to a dynamic LLVM, though, then don't link\n+        // tools to it.\n+        if builder.llvm_link_tools_dynamically(target) && builder.config.llvm_link_shared {\n             cfg.define(\"LLVM_LINK_LLVM_DYLIB\", \"ON\");\n         }\n "}, {"sha": "5231aa2e7661979f0ff006deeb5093682900311e", "filename": "src/ci/run.sh", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/389b7ff19074988a3855bbc5ba7b19eb903a6fb4/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/389b7ff19074988a3855bbc5ba7b19eb903a6fb4/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=389b7ff19074988a3855bbc5ba7b19eb903a6fb4", "patch": "@@ -75,13 +75,6 @@ if [ \"$DEPLOY$DEPLOY_ALT\" = \"1\" ]; then\n   RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --set rust.remap-debuginfo\"\n   RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --debuginfo-level-std=1\"\n \n-  # If we're distributing binaries, we want a shared LLVM link. We're already\n-  # going to link LLVM to the LLVM tools dynamically, so we need to ship a\n-  # libLLVM library anyway.\n-  if !isWindows; then\n-    RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --set llvm.link-shared=true\"\n-  fi\n-\n   if [ \"$NO_LLVM_ASSERTIONS\" = \"1\" ]; then\n     RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-llvm-assertions\"\n   elif [ \"$DEPLOY_ALT\" != \"\" ]; then"}]}