{"sha": "d04b838a44b914411d967e32704d66d7f9e0b16f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwNGI4MzhhNDRiOTE0NDExZDk2N2UzMjcwNGQ2NmQ3ZjllMGIxNmY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-30T01:20:07Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-30T01:20:07Z"}, "message": "move is_builtin_attr to syntax::attr", "tree": {"sha": "33e992c72fcc2aa1edf55b45ebe099db65dc9eb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33e992c72fcc2aa1edf55b45ebe099db65dc9eb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d04b838a44b914411d967e32704d66d7f9e0b16f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d04b838a44b914411d967e32704d66d7f9e0b16f", "html_url": "https://github.com/rust-lang/rust/commit/d04b838a44b914411d967e32704d66d7f9e0b16f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d04b838a44b914411d967e32704d66d7f9e0b16f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d9fde59aec621a2ea5c5ce3c1d7de3d2599d9ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d9fde59aec621a2ea5c5ce3c1d7de3d2599d9ae", "html_url": "https://github.com/rust-lang/rust/commit/4d9fde59aec621a2ea5c5ce3c1d7de3d2599d9ae"}], "stats": {"total": 30, "additions": 13, "deletions": 17}, "files": [{"sha": "5a29a56ad5472b0498f3bef77e1a0e193ef7f447", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d04b838a44b914411d967e32704d66d7f9e0b16f/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d04b838a44b914411d967e32704d66d7f9e0b16f/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=d04b838a44b914411d967e32704d66d7f9e0b16f", "patch": "@@ -14,7 +14,6 @@ use rustc_parse::validate_attr;\n use syntax::ast::*;\n use syntax::attr;\n use syntax::expand::is_proc_macro_attr;\n-use syntax::feature_gate::is_builtin_attr;\n use syntax::print::pprust;\n use syntax::source_map::Spanned;\n use syntax::symbol::{kw, sym};\n@@ -257,7 +256,7 @@ impl<'a> AstValidator<'a> {\n             .flat_map(|i| i.attrs.as_ref())\n             .filter(|attr| {\n                 let arr = [sym::allow, sym::cfg, sym::cfg_attr, sym::deny, sym::forbid, sym::warn];\n-                !arr.contains(&attr.name_or_empty()) && is_builtin_attr(attr)\n+                !arr.contains(&attr.name_or_empty()) && attr::is_builtin_attr(attr)\n             })\n             .for_each(|attr| if attr.is_doc_comment() {\n                 let mut err = self.err_handler().struct_span_err("}, {"sha": "a621d54cf923bf98449539fc5f7dc68b644bff69", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d04b838a44b914411d967e32704d66d7f9e0b16f/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d04b838a44b914411d967e32704d66d7f9e0b16f/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=d04b838a44b914411d967e32704d66d7f9e0b16f", "patch": "@@ -29,10 +29,8 @@ use errors::Applicability;\n \n use syntax::ast::{Name, Ident};\n use syntax::attr;\n-\n use syntax::ast::{self, Block, ForeignItem, ForeignItemKind, Item, ItemKind, NodeId};\n use syntax::ast::{MetaItemKind, StmtKind, TraitItem, TraitItemKind};\n-use syntax::feature_gate::is_builtin_attr;\n use syntax::token::{self, Token};\n use syntax::print::pprust;\n use syntax::{span_err, struct_span_err};\n@@ -1231,7 +1229,7 @@ impl<'a, 'b> Visitor<'b> for BuildReducedGraphVisitor<'a, 'b> {\n     }\n \n     fn visit_attribute(&mut self, attr: &'b ast::Attribute) {\n-        if !attr.is_doc_comment() && is_builtin_attr(attr) {\n+        if !attr.is_doc_comment() && attr::is_builtin_attr(attr) {\n             self.r.builtin_attrs.push(\n                 (attr.get_normal_item().path.segments[0].ident, self.parent_scope)\n             );"}, {"sha": "2623386f58439b7c95ca92a063e41de99243b31d", "filename": "src/libsyntax/attr/builtin.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d04b838a44b914411d967e32704d66d7f9e0b16f/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d04b838a44b914411d967e32704d66d7f9e0b16f/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fbuiltin.rs?ref=d04b838a44b914411d967e32704d66d7f9e0b16f", "patch": "@@ -2,6 +2,7 @@\n \n use crate::ast::{self, Attribute, MetaItem, NestedMetaItem};\n use crate::feature_gate::{find_gated_cfg, emit_feature_err, GatedCfg, GateIssue};\n+use crate::feature_gate::is_builtin_attr_name;\n use crate::print::pprust;\n use crate::sess::ParseSess;\n \n@@ -10,12 +11,17 @@ use std::num::NonZeroU32;\n use syntax_pos::hygiene::Transparency;\n use syntax_pos::{symbol::Symbol, symbol::sym, Span};\n use rustc_feature::Features;\n+\n use rustc_macros::HashStable_Generic;\n \n use super::{mark_used, MetaItemKind};\n \n use rustc_error_codes::*;\n \n+pub fn is_builtin_attr(attr: &Attribute) -> bool {\n+    attr.ident().filter(|ident| is_builtin_attr_name(ident.name)).is_some()\n+}\n+\n enum AttrError {\n     MultipleItem(String),\n     UnknownMetaItem(String, &'static [&'static str]),"}, {"sha": "9b764d64c492fb98ddc1f41e07170f73dd572a29", "filename": "src/libsyntax/feature_gate/builtin_attrs.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d04b838a44b914411d967e32704d66d7f9e0b16f/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d04b838a44b914411d967e32704d66d7f9e0b16f/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs?ref=d04b838a44b914411d967e32704d66d7f9e0b16f", "patch": "@@ -3,12 +3,9 @@\n use AttributeType::*;\n use AttributeGate::*;\n \n+use rustc_data_structures::fx::FxHashMap;\n use rustc_feature::{Features, Stability};\n-\n-use crate::ast;\n-\n use syntax_pos::symbol::{Symbol, sym};\n-use rustc_data_structures::fx::FxHashMap;\n use lazy_static::lazy_static;\n \n type GateFn = fn(&Features) -> bool;\n@@ -580,14 +577,10 @@ pub fn deprecated_attributes() -> Vec<&'static BuiltinAttribute> {\n     BUILTIN_ATTRIBUTES.iter().filter(|(.., gate)| gate.is_deprecated()).collect()\n }\n \n-pub fn is_builtin_attr_name(name: ast::Name) -> bool {\n+pub fn is_builtin_attr_name(name: Symbol) -> bool {\n     BUILTIN_ATTRIBUTE_MAP.get(&name).is_some()\n }\n \n-pub fn is_builtin_attr(attr: &ast::Attribute) -> bool {\n-    attr.ident().and_then(|ident| BUILTIN_ATTRIBUTE_MAP.get(&ident.name)).is_some()\n-}\n-\n lazy_static! {\n     pub static ref BUILTIN_ATTRIBUTE_MAP: FxHashMap<Symbol, &'static BuiltinAttribute> = {\n         let mut map = FxHashMap::default();"}, {"sha": "74036bdcfb732c9cd13587f9ec2b8fa905082f91", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d04b838a44b914411d967e32704d66d7f9e0b16f/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d04b838a44b914411d967e32704d66d7f9e0b16f/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=d04b838a44b914411d967e32704d66d7f9e0b16f", "patch": "@@ -103,7 +103,7 @@ pub mod feature_gate {\n     pub use builtin_attrs::{\n         AttributeGate, AttributeTemplate, AttributeType, find_gated_cfg, GatedCfg,\n         BuiltinAttribute, BUILTIN_ATTRIBUTES, BUILTIN_ATTRIBUTE_MAP,\n-        deprecated_attributes, is_builtin_attr,  is_builtin_attr_name,\n+        deprecated_attributes, is_builtin_attr_name,\n     };\n }\n pub mod mut_visit;"}, {"sha": "e4c4f4c43e64fe19123f604fbd4edaea8500b69a", "filename": "src/libsyntax_expand/expand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d04b838a44b914411d967e32704d66d7f9e0b16f/src%2Flibsyntax_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d04b838a44b914411d967e32704d66d7f9e0b16f/src%2Flibsyntax_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fexpand.rs?ref=d04b838a44b914411d967e32704d66d7f9e0b16f", "patch": "@@ -12,9 +12,9 @@ use rustc_parse::parser::Parser;\n use rustc_parse::validate_attr;\n use syntax::ast::{self, AttrItem, Block, Ident, LitKind, NodeId, PatKind, Path};\n use syntax::ast::{MacStmtStyle, StmtKind, ItemKind};\n-use syntax::attr::{self, HasAttrs};\n+use syntax::attr::{self, HasAttrs, is_builtin_attr};\n use syntax::source_map::respan;\n-use syntax::feature_gate::{self, GateIssue, is_builtin_attr, emit_feature_err};\n+use syntax::feature_gate::{self, GateIssue, emit_feature_err};\n use syntax::mut_visit::*;\n use syntax::print::pprust;\n use syntax::ptr::P;"}]}