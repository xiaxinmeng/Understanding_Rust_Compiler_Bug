{"sha": "4445e465182f13590fb7c938881ee1225175740d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NDVlNDY1MTgyZjEzNTkwZmI3YzkzODg4MWVlMTIyNTE3NTc0MGQ=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-09-19T15:27:56Z"}, "committer": {"name": "oli", "email": "oli@uhura.edef.eu", "date": "2020-10-27T13:28:45Z"}, "message": "Add test where diagnostic span points to just the inlined function's body", "tree": {"sha": "f104941444186c8e2e3d71f5be51cef60205101b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f104941444186c8e2e3d71f5be51cef60205101b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4445e465182f13590fb7c938881ee1225175740d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4445e465182f13590fb7c938881ee1225175740d", "html_url": "https://github.com/rust-lang/rust/commit/4445e465182f13590fb7c938881ee1225175740d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4445e465182f13590fb7c938881ee1225175740d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20b1e05a8d0e1773dc840a3286aa37916e87d84b", "url": "https://api.github.com/repos/rust-lang/rust/commits/20b1e05a8d0e1773dc840a3286aa37916e87d84b", "html_url": "https://github.com/rust-lang/rust/commit/20b1e05a8d0e1773dc840a3286aa37916e87d84b"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "b163c1d3c40007a9e954e76be4195aebe330ab60", "filename": "src/test/ui/const_prop/inline_spans.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4445e465182f13590fb7c938881ee1225175740d/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4445e465182f13590fb7c938881ee1225175740d/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans.rs?ref=4445e465182f13590fb7c938881ee1225175740d", "patch": "@@ -0,0 +1,14 @@\n+// build-fail\n+// compile-flags: -Zmir-opt-level=2\n+\n+#![deny(warnings)]\n+\n+fn main() {\n+    let _ = add(u8::MAX, 1);\n+}\n+\n+#[inline(always)]\n+fn add(x: u8, y: u8) -> u8 {\n+    x + y\n+    //~^ ERROR this arithmetic operation will overflow\n+}"}, {"sha": "c85c9d3843bb3a8e300befc1a3efea5c3576843e", "filename": "src/test/ui/const_prop/inline_spans.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4445e465182f13590fb7c938881ee1225175740d/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4445e465182f13590fb7c938881ee1225175740d/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans.stderr?ref=4445e465182f13590fb7c938881ee1225175740d", "patch": "@@ -0,0 +1,10 @@\n+error: this arithmetic operation will overflow\n+  --> $DIR/inline_spans.rs:12:5\n+   |\n+LL |     x + y\n+   |     ^^^^^ attempt to compute `u8::MAX + 1_u8` which would overflow\n+   |\n+   = note: `#[deny(arithmetic_overflow)]` on by default\n+\n+error: aborting due to previous error\n+"}]}