{"sha": "4bc56ebd936cc1b580ef88c40eead2ba3209cdbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYzU2ZWJkOTM2Y2MxYjU4MGVmODhjNDBlZWFkMmJhMzIwOWNkYmU=", "commit": {"author": {"name": "Veetaha", "email": "veetaha2@gmail.com", "date": "2020-08-29T14:47:13Z"}, "committer": {"name": "Veetaha", "email": "veetaha2@gmail.com", "date": "2020-08-29T14:47:13Z"}, "message": "Replace custom `not_bash::fs2` setup with fs_err crate", "tree": {"sha": "c0224114ff4821fae9fa4cc19e1c67106d242f7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0224114ff4821fae9fa4cc19e1c67106d242f7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bc56ebd936cc1b580ef88c40eead2ba3209cdbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bc56ebd936cc1b580ef88c40eead2ba3209cdbe", "html_url": "https://github.com/rust-lang/rust/commit/4bc56ebd936cc1b580ef88c40eead2ba3209cdbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bc56ebd936cc1b580ef88c40eead2ba3209cdbe/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8146700f82b75cd3cda5191108b4277a9908c744", "url": "https://api.github.com/repos/rust-lang/rust/commits/8146700f82b75cd3cda5191108b4277a9908c744", "html_url": "https://github.com/rust-lang/rust/commit/8146700f82b75cd3cda5191108b4277a9908c744"}], "stats": {"total": 57, "additions": 12, "deletions": 45}, "files": [{"sha": "cec4462f2045429574028263e68f24f9aefd981a", "filename": "Cargo.lock", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4bc56ebd936cc1b580ef88c40eead2ba3209cdbe/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/4bc56ebd936cc1b580ef88c40eead2ba3209cdbe/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=4bc56ebd936cc1b580ef88c40eead2ba3209cdbe", "patch": "@@ -385,6 +385,12 @@ dependencies = [\n  \"toolchain\",\n ]\n \n+[[package]]\n+name = \"fs-err\"\n+version = \"2.3.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"c1a51f8b7158efbe531f7baa74e38e49fbc41239e5d66720bb37ed39c27c241a\"\n+\n [[package]]\n name = \"fsevent\"\n version = \"2.0.2\"\n@@ -1875,6 +1881,7 @@ version = \"0.1.0\"\n dependencies = [\n  \"anyhow\",\n  \"flate2\",\n+ \"fs-err\",\n  \"pico-args\",\n  \"proc-macro2\",\n  \"quote\","}, {"sha": "01a8388253876cac635950159cab1a1b38ae370f", "filename": "xtask/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4bc56ebd936cc1b580ef88c40eead2ba3209cdbe/xtask%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4bc56ebd936cc1b580ef88c40eead2ba3209cdbe/xtask%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2FCargo.toml?ref=4bc56ebd936cc1b580ef88c40eead2ba3209cdbe", "patch": "@@ -18,4 +18,5 @@ quote = \"1.0.2\"\n ungrammar = \"1.1.3\"\n walkdir = \"2.3.1\"\n write-json =  \"0.1.0\"\n+fs-err = \"2.3\"\n # Avoid adding more dependencies to this crate"}, {"sha": "aa7d949677dc0d3ac6f525d012e09d7cc9844921", "filename": "xtask/src/dist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bc56ebd936cc1b580ef88c40eead2ba3209cdbe/xtask%2Fsrc%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bc56ebd936cc1b580ef88c40eead2ba3209cdbe/xtask%2Fsrc%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fdist.rs?ref=4bc56ebd936cc1b580ef88c40eead2ba3209cdbe", "patch": "@@ -115,7 +115,7 @@ impl Patch {\n         self\n     }\n \n-    fn commit(&self) -> Result<()> {\n+    fn commit(&self) -> io::Result<()> {\n         fs2::write(&self.path, &self.contents)\n     }\n }"}, {"sha": "038898993ac046cea756fefa0851b02d379d19ab", "filename": "xtask/src/not_bash.rs", "status": "modified", "additions": 3, "deletions": 44, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/4bc56ebd936cc1b580ef88c40eead2ba3209cdbe/xtask%2Fsrc%2Fnot_bash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bc56ebd936cc1b580ef88c40eead2ba3209cdbe/xtask%2Fsrc%2Fnot_bash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fnot_bash.rs?ref=4bc56ebd936cc1b580ef88c40eead2ba3209cdbe", "patch": "@@ -4,55 +4,14 @@ use std::{\n     cell::RefCell,\n     env,\n     ffi::OsString,\n-    io::Write,\n+    io::{self, Write},\n     path::{Path, PathBuf},\n     process::{Command, Stdio},\n };\n \n use anyhow::{bail, Context, Result};\n \n-pub mod fs2 {\n-    use std::{fs, path::Path};\n-\n-    use anyhow::{Context, Result};\n-\n-    pub fn read_dir<P: AsRef<Path>>(path: P) -> Result<fs::ReadDir> {\n-        let path = path.as_ref();\n-        fs::read_dir(path).with_context(|| format!(\"Failed to read {}\", path.display()))\n-    }\n-\n-    pub fn read_to_string<P: AsRef<Path>>(path: P) -> Result<String> {\n-        let path = path.as_ref();\n-        fs::read_to_string(path).with_context(|| format!(\"Failed to read {}\", path.display()))\n-    }\n-\n-    pub fn write<P: AsRef<Path>, C: AsRef<[u8]>>(path: P, contents: C) -> Result<()> {\n-        let path = path.as_ref();\n-        fs::write(path, contents).with_context(|| format!(\"Failed to write {}\", path.display()))\n-    }\n-\n-    pub fn copy<P: AsRef<Path>, Q: AsRef<Path>>(from: P, to: Q) -> Result<u64> {\n-        let from = from.as_ref();\n-        let to = to.as_ref();\n-        fs::copy(from, to)\n-            .with_context(|| format!(\"Failed to copy {} to {}\", from.display(), to.display()))\n-    }\n-\n-    pub fn remove_file<P: AsRef<Path>>(path: P) -> Result<()> {\n-        let path = path.as_ref();\n-        fs::remove_file(path).with_context(|| format!(\"Failed to remove file {}\", path.display()))\n-    }\n-\n-    pub fn remove_dir_all<P: AsRef<Path>>(path: P) -> Result<()> {\n-        let path = path.as_ref();\n-        fs::remove_dir_all(path).with_context(|| format!(\"Failed to remove dir {}\", path.display()))\n-    }\n-\n-    pub fn create_dir_all<P: AsRef<Path>>(path: P) -> Result<()> {\n-        let path = path.as_ref();\n-        fs::create_dir_all(path).with_context(|| format!(\"Failed to create dir {}\", path.display()))\n-    }\n-}\n+pub use fs_err as fs2;\n \n #[macro_export]\n macro_rules! run {\n@@ -98,7 +57,7 @@ impl Drop for Pushenv {\n     }\n }\n \n-pub fn rm_rf(path: impl AsRef<Path>) -> Result<()> {\n+pub fn rm_rf(path: impl AsRef<Path>) -> io::Result<()> {\n     let path = path.as_ref();\n     if !path.exists() {\n         return Ok(());"}]}