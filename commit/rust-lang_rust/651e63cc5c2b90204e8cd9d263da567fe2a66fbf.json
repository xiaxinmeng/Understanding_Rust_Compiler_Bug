{"sha": "651e63cc5c2b90204e8cd9d263da567fe2a66fbf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1MWU2M2NjNWMyYjkwMjA0ZThjZDlkMjYzZGE1NjdmZTJhNjZmYmY=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-09-14T16:51:24Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-09-15T20:38:41Z"}, "message": "libcore: rename *flate_buf to *flate_bytes (#3444)", "tree": {"sha": "84e68f80d8141a0468304062939071908a7c414c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84e68f80d8141a0468304062939071908a7c414c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/651e63cc5c2b90204e8cd9d263da567fe2a66fbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/651e63cc5c2b90204e8cd9d263da567fe2a66fbf", "html_url": "https://github.com/rust-lang/rust/commit/651e63cc5c2b90204e8cd9d263da567fe2a66fbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/651e63cc5c2b90204e8cd9d263da567fe2a66fbf/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1f57392564a89155b404a8d326fac9d6923626b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1f57392564a89155b404a8d326fac9d6923626b", "html_url": "https://github.com/rust-lang/rust/commit/f1f57392564a89155b404a8d326fac9d6923626b"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "234f2730233c43b618002ea15f4a88f83f50d248", "filename": "src/libcore/flate.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/651e63cc5c2b90204e8cd9d263da567fe2a66fbf/src%2Flibcore%2Fflate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/651e63cc5c2b90204e8cd9d263da567fe2a66fbf/src%2Flibcore%2Fflate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fflate.rs?ref=651e63cc5c2b90204e8cd9d263da567fe2a66fbf", "patch": "@@ -18,8 +18,8 @@ const lz_fast : c_int = 0x1;   // LZ with only one probe\n const lz_norm : c_int = 0x80;  // LZ with 128 probes, \"normal\"\n const lz_best : c_int = 0xfff; // LZ with 4095 probes, \"best\"\n \n-fn deflate_buf(buf: &[const u8]) -> ~[u8] {\n-    do vec::as_const_buf(buf) |b, len| {\n+fn deflate_bytes(bytes: &[const u8]) -> ~[u8] {\n+    do vec::as_const_buf(bytes) |b, len| {\n         unsafe {\n             let mut outsz : size_t = 0;\n             let res =\n@@ -36,8 +36,8 @@ fn deflate_buf(buf: &[const u8]) -> ~[u8] {\n     }\n }\n \n-fn inflate_buf(buf: &[const u8]) -> ~[u8] {\n-    do vec::as_const_buf(buf) |b, len| {\n+fn inflate_bytes(bytes: &[const u8]) -> ~[u8] {\n+    do vec::as_const_buf(bytes) |b, len| {\n         unsafe {\n             let mut outsz : size_t = 0;\n             let res =\n@@ -69,11 +69,11 @@ fn test_flate_round_trip() {\n         }\n         debug!(\"de/inflate of %u bytes of random word-sequences\",\n                in.len());\n-        let cmp = flate::deflate_buf(in);\n-        let out = flate::inflate_buf(cmp);\n+        let cmp = flate::deflate_bytes(in);\n+        let out = flate::inflate_bytes(cmp);\n         debug!(\"%u bytes deflated to %u (%.1f%% size)\",\n                in.len(), cmp.len(),\n                100.0 * ((cmp.len() as float) / (in.len() as float)));\n         assert(in == out);\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "8994cac35d2fc63466fe7aff7892ea4e5e683845", "filename": "src/rustc/metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/651e63cc5c2b90204e8cd9d263da567fe2a66fbf/src%2Frustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/651e63cc5c2b90204e8cd9d263da567fe2a66fbf/src%2Frustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fencoder.rs?ref=651e63cc5c2b90204e8cd9d263da567fe2a66fbf", "patch": "@@ -1178,7 +1178,7 @@ fn encode_metadata(parms: encode_parms, crate: @crate) -> ~[u8] {\n \n     (do str::as_bytes(~\"rust\\x00\\x00\\x00\\x01\") |bytes| {\n         vec::slice(bytes, 0, 8)\n-    }) + flate::deflate_buf(io::mem_buffer_buf(buf))\n+    }) + flate::deflate_bytes(io::mem_buffer_buf(buf))\n }\n \n // Get the encoded string for a type"}, {"sha": "348e4f0bfc1f369aae9f6649be13848aa22c5c7d", "filename": "src/rustc/metadata/loader.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/651e63cc5c2b90204e8cd9d263da567fe2a66fbf/src%2Frustc%2Fmetadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/651e63cc5c2b90204e8cd9d263da567fe2a66fbf/src%2Frustc%2Fmetadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Floader.rs?ref=651e63cc5c2b90204e8cd9d263da567fe2a66fbf", "patch": "@@ -202,8 +202,8 @@ fn get_metadata_section(os: os,\n                 let cvbuf1 = ptr::offset(cvbuf, vlen);\n                 debug!(\"inflating %u bytes of compressed metadata\",\n                        csz - vlen);\n-                do vec::raw::form_slice(cvbuf1, csz-vlen) |buf| {\n-                    let inflated = flate::inflate_buf(buf);\n+                do vec::raw::form_slice(cvbuf1, csz-vlen) |bytes| {\n+                    let inflated = flate::inflate_bytes(bytes);\n                     found = move Some(@(move inflated));\n                 }\n                 if found != None {"}]}