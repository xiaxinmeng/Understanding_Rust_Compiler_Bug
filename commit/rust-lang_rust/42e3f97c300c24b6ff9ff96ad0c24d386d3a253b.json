{"sha": "42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyZTNmOTdjMzAwYzI0YjZmZjlmZjk2YWQwYzI0ZDM4NmQzYTI1M2I=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-23T16:15:01Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-24T14:40:18Z"}, "message": "Support labels in reference search", "tree": {"sha": "4142c4c99b034035bbc4e2b35ecd0f7e185b6855", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4142c4c99b034035bbc4e2b35ecd0f7e185b6855"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "html_url": "https://github.com/rust-lang/rust/commit/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1acb0ca5ca2162be068fd6a07f7cc4ae171ed81", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1acb0ca5ca2162be068fd6a07f7cc4ae171ed81", "html_url": "https://github.com/rust-lang/rust/commit/e1acb0ca5ca2162be068fd6a07f7cc4ae171ed81"}], "stats": {"total": 156, "additions": 142, "deletions": 14}, "files": [{"sha": "6431e7d6dbfd1f9a30382d975ecbfaf52cd285c4", "filename": "crates/ide/src/display/navigation_target.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -5,7 +5,7 @@ use std::fmt;\n use either::Either;\n use hir::{AssocItem, Documentation, FieldSource, HasAttrs, HasSource, InFile, ModuleSource};\n use ide_db::{\n-    base_db::{FileId, SourceDatabase},\n+    base_db::{FileId, FileRange, SourceDatabase},\n     symbol_index::FileSymbolKind,\n };\n use ide_db::{defs::Definition, RootDatabase};\n@@ -28,6 +28,7 @@ pub enum SymbolKind {\n     ValueParam,\n     SelfParam,\n     Local,\n+    Label,\n     Function,\n     Const,\n     Static,\n@@ -223,6 +224,7 @@ impl TryToNav for Definition {\n             Definition::Local(it) => Some(it.to_nav(db)),\n             Definition::TypeParam(it) => Some(it.to_nav(db)),\n             Definition::LifetimeParam(it) => Some(it.to_nav(db)),\n+            Definition::Label(it) => Some(it.to_nav(db)),\n         }\n     }\n }\n@@ -421,6 +423,27 @@ impl ToNav for hir::Local {\n     }\n }\n \n+impl ToNav for hir::Label {\n+    fn to_nav(&self, db: &RootDatabase) -> NavigationTarget {\n+        let src = self.source(db);\n+        let node = src.value.syntax();\n+        let FileRange { file_id, range } = src.with_value(node).original_file_range(db);\n+        let focus_range =\n+            src.value.lifetime().and_then(|lt| lt.lifetime_ident_token()).map(|lt| lt.text_range());\n+        let name = self.name(db).to_string().into();\n+        NavigationTarget {\n+            file_id,\n+            name,\n+            kind: Some(SymbolKind::Label),\n+            full_range: range,\n+            focus_range,\n+            container_name: None,\n+            description: None,\n+            docs: None,\n+        }\n+    }\n+}\n+\n impl ToNav for hir::TypeParam {\n     fn to_nav(&self, db: &RootDatabase) -> NavigationTarget {\n         let src = self.source(db);"}, {"sha": "e10516f43ac4eaf6a3db4720fd0eaf9414fa614a", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -193,7 +193,8 @@ fn rewrite_intra_doc_link(\n         Definition::SelfType(_)\n         | Definition::Local(_)\n         | Definition::TypeParam(_)\n-        | Definition::LifetimeParam(_) => return None,\n+        | Definition::LifetimeParam(_)\n+        | Definition::Label(_) => return None,\n     }?;\n     let krate = resolved.module(db)?.krate();\n     let canonical_path = resolved.canonical_path(db)?;"}, {"sha": "65e45c92024f14a827f13fa9a9ab535293e1a41a", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -1105,4 +1105,19 @@ fn foo<T>() where T: for<'a> Foo<&'a<|> (u8, u16)>, {}\n \"#,\n         );\n     }\n+\n+    #[test]\n+    fn goto_label() {\n+        check(\n+            r#\"\n+fn foo<'foo>(_: &'foo ()) {\n+    'foo: {\n+  //^^^^\n+        'bar: loop {\n+            break 'foo<|>;\n+        }\n+    }\n+}\"#,\n+        )\n+    }\n }"}, {"sha": "73245fbe752700709a1ff802c0704dad14bd836b", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -370,7 +370,7 @@ fn hover_for_definition(db: &RootDatabase, def: Definition) -> Option<Markup> {\n                 Adt::Enum(it) => from_def_source(db, it, mod_path),\n             })\n         }\n-        Definition::TypeParam(_) | Definition::LifetimeParam(_) => {\n+        Definition::TypeParam(_) | Definition::LifetimeParam(_) | Definition::Label(_) => {\n             // FIXME: Hover for generic param\n             None\n         }"}, {"sha": "21b2d7ca1cdbf198225155ea05293d296de06ee1", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -130,7 +130,7 @@ pub(crate) fn find_all_refs(\n                 kind = ReferenceKind::FieldShorthandForLocal;\n             }\n         }\n-    } else if let Definition::LifetimeParam(_) = def {\n+    } else if matches!(def, Definition::LifetimeParam(_) | Definition::Label(_)) {\n         kind = ReferenceKind::Lifetime;\n     };\n \n@@ -1122,4 +1122,26 @@ fn main() {\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn test_find_labels() {\n+        check(\n+            r#\"\n+fn foo<'a>() -> &'a () {\n+    'a: loop {\n+        'b: loop {\n+            continue 'a<|>;\n+        }\n+        break 'a;\n+    }\n+}\n+\"#,\n+            expect![[r#\"\n+                'a Label FileId(0) 29..32 29..31 Lifetime\n+\n+                FileId(0) 80..82 Lifetime\n+                FileId(0) 108..110 Lifetime\n+            \"#]],\n+        );\n+    }\n }"}, {"sha": "4f353852f8903788d7925199b3970736387b292a", "filename": "crates/ide/src/references/rename.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences%2Frename.rs?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -1523,4 +1523,29 @@ fn main() {\n }\"#,\n         );\n     }\n+\n+    #[test]\n+    fn test_rename_label() {\n+        check(\n+            \"'foo\",\n+            r#\"\n+fn foo<'a>() -> &'a () {\n+    'a: {\n+        'b: loop {\n+            break 'a<|>;\n+        }\n+    }\n+}\n+\"#,\n+            r#\"\n+fn foo<'a>() -> &'a () {\n+    'foo: {\n+        'b: loop {\n+            break 'foo;\n+        }\n+    }\n+}\n+\"#,\n+        )\n+    }\n }"}, {"sha": "5ad96581bd3a923c35265763db350cb84be457db", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -560,10 +560,20 @@ fn highlight_element(\n         CHAR => HighlightTag::CharLiteral.into(),\n         QUESTION => Highlight::new(HighlightTag::Operator) | HighlightModifier::ControlFlow,\n         LIFETIME => {\n-            let h = Highlight::new(HighlightTag::Symbol(SymbolKind::LifetimeParam));\n-            match element.parent().map(|it| it.kind()) {\n-                Some(LIFETIME_PARAM) | Some(LABEL) => h | HighlightModifier::Definition,\n-                _ => h,\n+            let lifetime = element.into_node().and_then(ast::Lifetime::cast).unwrap();\n+\n+            match NameClass::classify_lifetime(sema, &lifetime) {\n+                Some(NameClass::Definition(def)) => {\n+                    highlight_def(db, def) | HighlightModifier::Definition\n+                }\n+                None => match NameRefClass::classify_lifetime(sema, &lifetime) {\n+                    Some(NameRefClass::Definition(def)) => highlight_def(db, def),\n+                    _ => Highlight::new(HighlightTag::Symbol(SymbolKind::LifetimeParam)),\n+                },\n+                _ => {\n+                    Highlight::new(HighlightTag::Symbol(SymbolKind::LifetimeParam))\n+                        | HighlightModifier::Definition\n+                }\n             }\n         }\n         p if p.is_punct() => match p {\n@@ -825,6 +835,7 @@ fn highlight_def(db: &RootDatabase, def: Definition) -> Highlight {\n             return h;\n         }\n         Definition::LifetimeParam(_) => HighlightTag::Symbol(SymbolKind::LifetimeParam),\n+        Definition::Label(_) => HighlightTag::Symbol(SymbolKind::Label),\n     }\n     .into()\n }"}, {"sha": "99ba3a59d38e185da2832f088a9ca09ebcadd5be", "filename": "crates/ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -64,6 +64,7 @@ body                { margin: 0; }\n pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n \n .lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n .comment            { color: #7F9F7F; }\n .documentation      { color: #629755; }\n .injected           { opacity: 0.65 ; }"}, {"sha": "2a6cc0cab661a9f35dd76595c70d32ab3c1e4a0e", "filename": "crates/ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -80,6 +80,7 @@ impl HighlightTag {\n                 SymbolKind::LifetimeParam => \"lifetime\",\n                 SymbolKind::Macro => \"macro\",\n                 SymbolKind::Local => \"variable\",\n+                SymbolKind::Label => \"label\",\n                 SymbolKind::ValueParam => \"value_param\",\n                 SymbolKind::SelfParam => \"self_keyword\",\n                 SymbolKind::Impl => \"self_type\","}, {"sha": "506ebe60e71e5d41b9cc6d9f6cc0b5d5a27838b9", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_assoc_functions.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -4,6 +4,7 @@\n pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n \n .lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n .comment            { color: #7F9F7F; }\n .documentation      { color: #629755; }\n .injected           { opacity: 0.65 ; }"}, {"sha": "4dd7413ba0b850a5a10a0404a9ce17fa5d7a0379", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_doctest.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -4,6 +4,7 @@\n pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n \n .lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n .comment            { color: #7F9F7F; }\n .documentation      { color: #629755; }\n .injected           { opacity: 0.65 ; }"}, {"sha": "ed452586adb449531984545dec0df613b028cc77", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_extern_crate.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_extern_crate.html", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_extern_crate.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_extern_crate.html?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -4,6 +4,7 @@\n pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n \n .lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n .comment            { color: #7F9F7F; }\n .documentation      { color: #629755; }\n .injected           { opacity: 0.65 ; }"}, {"sha": "92e7dc3e4f75423ac1cacfb693b1a39415fd795b", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_injection.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -4,6 +4,7 @@\n pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n \n .lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n .comment            { color: #7F9F7F; }\n .documentation      { color: #629755; }\n .injected           { opacity: 0.65 ; }"}, {"sha": "31dad5d42952822da0035e61cd0179030b3873db", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_strings.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -4,6 +4,7 @@\n pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n \n .lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n .comment            { color: #7F9F7F; }\n .documentation      { color: #629755; }\n .injected           { opacity: 0.65 ; }"}, {"sha": "e3a0aa317d17a73a5f635436c3ea74aeec1561db", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_unsafe.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -4,6 +4,7 @@\n pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n \n .lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n .comment            { color: #7F9F7F; }\n .documentation      { color: #629755; }\n .injected           { opacity: 0.65 ; }"}, {"sha": "72ff9dd40e9def2f5c6063ab0a65307382544c20", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -4,6 +4,7 @@\n pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n \n .lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n .comment            { color: #7F9F7F; }\n .documentation      { color: #629755; }\n .injected           { opacity: 0.65 ; }\n@@ -194,6 +195,11 @@\n     <span class=\"keyword\">let</span> <span class=\"variable declaration\">baz</span> <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"variable\">baz</span><span class=\"punctuation\">;</span>\n \n     <span class=\"keyword\">let</span> <span class=\"punctuation\">_</span> <span class=\"operator\">=</span> <span class=\"operator\">!</span><span class=\"bool_literal\">true</span><span class=\"punctuation\">;</span>\n+\n+    <span class=\"label declaration\">'foo</span><span class=\"punctuation\">:</span> <span class=\"keyword control\">loop</span> <span class=\"punctuation\">{</span>\n+        <span class=\"keyword control\">break</span> <span class=\"label\">'foo</span><span class=\"punctuation\">;</span>\n+        <span class=\"keyword control\">continue</span> <span class=\"label\">'foo</span><span class=\"punctuation\">;</span>\n+    <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">enum</span> <span class=\"enum declaration\">Option</span><span class=\"punctuation\">&lt;</span><span class=\"type_param declaration\">T</span><span class=\"punctuation\">&gt;</span> <span class=\"punctuation\">{</span>"}, {"sha": "8b3dfa69f9b9076b8bf4088ee2c1734466a381a2", "filename": "crates/ide/src/syntax_highlighting/test_data/rainbow_highlighting.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Frainbow_highlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Frainbow_highlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Frainbow_highlighting.html?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -4,6 +4,7 @@\n pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n \n .lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n .comment            { color: #7F9F7F; }\n .documentation      { color: #629755; }\n .injected           { opacity: 0.65 ; }"}, {"sha": "e0df0d2b5228690c98735756b6d2dd6943724fb5", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -168,6 +168,11 @@ fn main() {\n     let baz = -baz;\n \n     let _ = !true;\n+\n+    'foo: loop {\n+        break 'foo;\n+        continue 'foo;\n+    }\n }\n \n enum Option<T> {"}, {"sha": "d33a6cb863ba256aad0fe1e7f6c7b797622e3f70", "filename": "crates/ide_db/src/defs.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Fide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fdefs.rs?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -6,8 +6,8 @@\n // FIXME: this badly needs rename/rewrite (matklad, 2020-02-06).\n \n use hir::{\n-    db::HirDatabase, Crate, Field, HasVisibility, Impl, LifetimeParam, Local, MacroDef, Module,\n-    ModuleDef, Name, PathResolution, Semantics, TypeParam, Visibility,\n+    db::HirDatabase, Crate, Field, HasVisibility, Impl, Label, LifetimeParam, Local, MacroDef,\n+    Module, ModuleDef, Name, PathResolution, Semantics, TypeParam, Visibility,\n };\n use syntax::{\n     ast::{self, AstNode},\n@@ -26,7 +26,7 @@ pub enum Definition {\n     Local(Local),\n     TypeParam(TypeParam),\n     LifetimeParam(LifetimeParam),\n-    // FIXME: Label\n+    Label(Label),\n }\n \n impl Definition {\n@@ -39,6 +39,7 @@ impl Definition {\n             Definition::Local(it) => Some(it.module(db)),\n             Definition::TypeParam(it) => Some(it.module(db)),\n             Definition::LifetimeParam(it) => Some(it.module(db)),\n+            Definition::Label(it) => Some(it.module(db)),\n         }\n     }\n \n@@ -51,6 +52,7 @@ impl Definition {\n             Definition::Local(_) => None,\n             Definition::TypeParam(_) => None,\n             Definition::LifetimeParam(_) => None,\n+            Definition::Label(_) => None,\n         }\n     }\n \n@@ -77,6 +79,7 @@ impl Definition {\n             Definition::Local(it) => it.name(db)?,\n             Definition::TypeParam(it) => it.name(db),\n             Definition::LifetimeParam(it) => it.name(db),\n+            Definition::Label(it) => it.name(db),\n         };\n         Some(name)\n     }\n@@ -248,7 +251,10 @@ impl NameClass {\n                     let def = sema.to_def(&it)?;\n                     Some(NameClass::Definition(Definition::LifetimeParam(def)))\n                 },\n-                ast::Label(_it) => None,\n+                ast::Label(it) => {\n+                    let def = sema.to_def(&it)?;\n+                    Some(NameClass::Definition(Definition::Label(def)))\n+                },\n                 _ => None,\n             }\n         }\n@@ -370,6 +376,9 @@ impl NameRefClass {\n         let _p = profile::span(\"classify_lifetime_ref\").detail(|| lifetime.to_string());\n         let parent = lifetime.syntax().parent()?;\n         match parent.kind() {\n+            SyntaxKind::BREAK_EXPR | SyntaxKind::CONTINUE_EXPR => {\n+                sema.resolve_label(lifetime).map(Definition::Label).map(NameRefClass::Definition)\n+            }\n             SyntaxKind::LIFETIME_ARG\n             | SyntaxKind::SELF_PARAM\n             | SyntaxKind::TYPE_BOUND\n@@ -387,7 +396,6 @@ impl NameRefClass {\n                     .map(Definition::LifetimeParam)\n                     .map(NameRefClass::Definition)\n             }\n-            SyntaxKind::BREAK_EXPR | SyntaxKind::CONTINUE_EXPR => None,\n             _ => None,\n         }\n     }"}, {"sha": "c2f6a655d4ec76816b3acf29716c0a640d6ebb74", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -45,6 +45,7 @@ define_semantic_token_types![\n     (FORMAT_SPECIFIER, \"formatSpecifier\"),\n     (GENERIC, \"generic\"),\n     (LIFETIME, \"lifetime\"),\n+    (LABEL, \"label\"),\n     (PUNCTUATION, \"punctuation\"),\n     (SELF_KEYWORD, \"selfKeyword\"),\n     (TYPE_ALIAS, \"typeAlias\"),"}, {"sha": "753aad628640c63920cfb429d7dab893b82a2a2a", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42e3f97c300c24b6ff9ff96ad0c24d386d3a253b/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=42e3f97c300c24b6ff9ff96ad0c24d386d3a253b", "patch": "@@ -46,7 +46,8 @@ pub(crate) fn symbol_kind(symbol_kind: SymbolKind) -> lsp_types::SymbolKind {\n         SymbolKind::Local\n         | SymbolKind::SelfParam\n         | SymbolKind::LifetimeParam\n-        | SymbolKind::ValueParam => lsp_types::SymbolKind::Variable,\n+        | SymbolKind::ValueParam\n+        | SymbolKind::Label => lsp_types::SymbolKind::Variable,\n         SymbolKind::Union => lsp_types::SymbolKind::Struct,\n     }\n }\n@@ -378,6 +379,7 @@ fn semantic_token_type_and_modifiers(\n             SymbolKind::Field => lsp_types::SemanticTokenType::PROPERTY,\n             SymbolKind::TypeParam => lsp_types::SemanticTokenType::TYPE_PARAMETER,\n             SymbolKind::LifetimeParam => semantic_tokens::LIFETIME,\n+            SymbolKind::Label => semantic_tokens::LABEL,\n             SymbolKind::ValueParam => lsp_types::SemanticTokenType::PARAMETER,\n             SymbolKind::SelfParam => semantic_tokens::SELF_KEYWORD,\n             SymbolKind::Local => lsp_types::SemanticTokenType::VARIABLE,"}]}