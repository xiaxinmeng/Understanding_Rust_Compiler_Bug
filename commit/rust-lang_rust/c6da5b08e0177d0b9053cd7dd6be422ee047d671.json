{"sha": "c6da5b08e0177d0b9053cd7dd6be422ee047d671", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2ZGE1YjA4ZTAxNzdkMGI5MDUzY2Q3ZGQ2YmU0MjJlZTA0N2Q2NzE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-08-22T18:52:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-22T18:52:52Z"}, "message": "Rollup merge of #88077 - kit-981:feature/fix-minimum-os-version-in-header, r=petrochenkov\n\nGenerate an iOS LLVM target with a specific version\n\nThis commit adds the `LC_VERSION_MIN_IPHONEOS` load command to the Mach-O header generated for `aarch64-apple-ios` binaries. The operating system will look for this load command to determine the minimum supported operating system version and will not allow the binary to run if it's absent. This logic already exists for the simulator toolchain.\n\nI've been using `otool` from a [cctools](https://github.com/tpoechtrager/cctools-port) toolchain to parse the header and validate that this change adds the required load command.\n\nThis change appears to be enough to build Rust binaries that can run on a jailbroken iPhone.", "tree": {"sha": "ce8165d46e1860d5bfdf50cbda0dec5f804de27c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce8165d46e1860d5bfdf50cbda0dec5f804de27c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6da5b08e0177d0b9053cd7dd6be422ee047d671", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhIp0ECRBK7hj4Ov3rIwAA87AIAFJW/R9Q6TYMzvOaeDPAs0Y1\nJjsCHujf3/srKcy4Pvyfs1YpC1bPb+4SmfDZYQ5eED78De1bgtpUvU0E6kNdDgQm\nKg+Xt6Rj34wJqpQD3PN0Cq5NvpYsRVFtQpkKW4FLetKrn1JAzAliKpSUbebrbo6+\n2yVJti7reI1QoBLU9Y/KFjCRbpOuXMDytIq7/GeMBdtOvnEoxK4sACoOmsMVMr8R\nm5Dt/VRiFp0/0NvImgpZ91v1q7wAdM+zQvddPFoR4a4qDo9ZXA/QTs46OV4ik4lr\non8AqQyZOdbR3AOURq6+4uI+meCKksx3LvFkRdktM04LcyJCmrsqzQTH+BGKpsQ=\n=8zis\n-----END PGP SIGNATURE-----\n", "payload": "tree ce8165d46e1860d5bfdf50cbda0dec5f804de27c\nparent 3b1e7b1fc9853497140f7f5371882234f0295893\nparent 13e2f807a19398e735ca3addab19366cda133a31\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1629658372 +0200\ncommitter GitHub <noreply@github.com> 1629658372 +0200\n\nRollup merge of #88077 - kit-981:feature/fix-minimum-os-version-in-header, r=petrochenkov\n\nGenerate an iOS LLVM target with a specific version\n\nThis commit adds the `LC_VERSION_MIN_IPHONEOS` load command to the Mach-O header generated for `aarch64-apple-ios` binaries. The operating system will look for this load command to determine the minimum supported operating system version and will not allow the binary to run if it's absent. This logic already exists for the simulator toolchain.\n\nI've been using `otool` from a [cctools](https://github.com/tpoechtrager/cctools-port) toolchain to parse the header and validate that this change adds the required load command.\n\nThis change appears to be enough to build Rust binaries that can run on a jailbroken iPhone.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6da5b08e0177d0b9053cd7dd6be422ee047d671", "html_url": "https://github.com/rust-lang/rust/commit/c6da5b08e0177d0b9053cd7dd6be422ee047d671", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6da5b08e0177d0b9053cd7dd6be422ee047d671/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b1e7b1fc9853497140f7f5371882234f0295893", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b1e7b1fc9853497140f7f5371882234f0295893", "html_url": "https://github.com/rust-lang/rust/commit/3b1e7b1fc9853497140f7f5371882234f0295893"}, {"sha": "13e2f807a19398e735ca3addab19366cda133a31", "url": "https://api.github.com/repos/rust-lang/rust/commits/13e2f807a19398e735ca3addab19366cda133a31", "html_url": "https://github.com/rust-lang/rust/commit/13e2f807a19398e735ca3addab19366cda133a31"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "6468419fce7c3e5b973dad2b43552dc4c62a50e8", "filename": "compiler/rustc_target/src/spec/aarch64_apple_ios.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c6da5b08e0177d0b9053cd7dd6be422ee047d671/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6da5b08e0177d0b9053cd7dd6be422ee047d671/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_apple_ios.rs?ref=c6da5b08e0177d0b9053cd7dd6be422ee047d671", "patch": "@@ -2,8 +2,15 @@ use super::apple_sdk_base::{opts, Arch};\n use crate::spec::{FramePointer, Target, TargetOptions};\n \n pub fn target() -> Target {\n+    // Clang automatically chooses a more specific target based on\n+    // IPHONEOS_DEPLOYMENT_TARGET.\n+    // This is required for the target to pick the right\n+    // MACH-O commands, so we do too.\n+    let arch = \"arm64\";\n+    let llvm_target = super::apple_base::ios_llvm_target(arch);\n+\n     Target {\n-        llvm_target: \"arm64-apple-ios\".to_string(),\n+        llvm_target,\n         pointer_width: 64,\n         data_layout: \"e-m:o-i64:64-i128:128-n32:64-S128\".to_string(),\n         arch: \"aarch64\".to_string(),"}, {"sha": "cff0b3651e170b683ff7652d24ff8256f7c0f567", "filename": "compiler/rustc_target/src/spec/apple_base.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c6da5b08e0177d0b9053cd7dd6be422ee047d671/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6da5b08e0177d0b9053cd7dd6be422ee047d671/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs?ref=c6da5b08e0177d0b9053cd7dd6be422ee047d671", "patch": "@@ -91,6 +91,11 @@ fn ios_deployment_target() -> (u32, u32) {\n     deployment_target(\"IPHONEOS_DEPLOYMENT_TARGET\").unwrap_or((7, 0))\n }\n \n+pub fn ios_llvm_target(arch: &str) -> String {\n+    let (major, minor) = ios_deployment_target();\n+    format!(\"{}-apple-ios{}.{}.0\", arch, major, minor)\n+}\n+\n pub fn ios_sim_llvm_target(arch: &str) -> String {\n     let (major, minor) = ios_deployment_target();\n     format!(\"{}-apple-ios{}.{}.0-simulator\", arch, major, minor)"}]}