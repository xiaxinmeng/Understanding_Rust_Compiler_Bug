{"sha": "9f609f9feff30324a2fc99ed0f25010d64205dd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmNjA5ZjlmZWZmMzAzMjRhMmZjOTllZDBmMjUwMTBkNjQyMDVkZDY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-09-20T19:22:02Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-12-11T11:18:55Z"}, "message": "Fix Ref inhabitedness comment", "tree": {"sha": "ac5d50630f01b9d25ca204f68e0ae9e5e3534a9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac5d50630f01b9d25ca204f68e0ae9e5e3534a9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f609f9feff30324a2fc99ed0f25010d64205dd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f609f9feff30324a2fc99ed0f25010d64205dd6", "html_url": "https://github.com/rust-lang/rust/commit/9f609f9feff30324a2fc99ed0f25010d64205dd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f609f9feff30324a2fc99ed0f25010d64205dd6/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64c2a310e1bb489a97e6e8624201b632e31de5aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/64c2a310e1bb489a97e6e8624201b632e31de5aa", "html_url": "https://github.com/rust-lang/rust/commit/64c2a310e1bb489a97e6e8624201b632e31de5aa"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "0c859dea8da9c6c255546b5ed1310eb00a0b6dca", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9f609f9feff30324a2fc99ed0f25010d64205dd6/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f609f9feff30324a2fc99ed0f25010d64205dd6/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=9f609f9feff30324a2fc99ed0f25010d64205dd6", "patch": "@@ -1574,10 +1574,9 @@ impl<'a, 'gcx, 'tcx> TyS<'tcx> {\n                 }\n             }\n             ty::Ref(..) => {\n-                // Though references to uninhabited types are trivially uninhabited\n-                // theoretically, null references are permitted in unsafe code (as\n-                // long as the value is not dereferenced), so we treat all references\n-                // as inhabited.\n+                // References to uninitialised memory is valid for any type, including\n+                // uninhabited types, in unsafe code, so we treat all references as\n+                // inhabited.\n                 false\n             }\n             _ => false,"}]}