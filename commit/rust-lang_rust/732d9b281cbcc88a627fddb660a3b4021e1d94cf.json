{"sha": "732d9b281cbcc88a627fddb660a3b4021e1d94cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczMmQ5YjI4MWNiY2M4OGE2MjdmZGRiNjYwYTNiNDAyMWUxZDk0Y2Y=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-10-25T21:03:07Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-10-27T00:26:53Z"}, "message": "Return 0 when ./x.py has no subcommand", "tree": {"sha": "d9beb93314bb62681c4471ee68b090de4b80a4b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9beb93314bb62681c4471ee68b090de4b80a4b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/732d9b281cbcc88a627fddb660a3b4021e1d94cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/732d9b281cbcc88a627fddb660a3b4021e1d94cf", "html_url": "https://github.com/rust-lang/rust/commit/732d9b281cbcc88a627fddb660a3b4021e1d94cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/732d9b281cbcc88a627fddb660a3b4021e1d94cf/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f5ae25a34077aad82a5dc41c2684cd21279df58", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f5ae25a34077aad82a5dc41c2684cd21279df58", "html_url": "https://github.com/rust-lang/rust/commit/2f5ae25a34077aad82a5dc41c2684cd21279df58"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "b5d51598fab882009004091425de1e8fe7c5472e", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/732d9b281cbcc88a627fddb660a3b4021e1d94cf/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/732d9b281cbcc88a627fddb660a3b4021e1d94cf/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=732d9b281cbcc88a627fddb660a3b4021e1d94cf", "patch": "@@ -136,9 +136,12 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\");\n         let subcommand = match subcommand {\n             Some(s) => s,\n             None => {\n-                // No subcommand -- show the general usage and subcommand help\n+                // No or an invalid subcommand -- show the general usage and subcommand help\n+                // An exit code will be 0 when no subcommand is given, and 1 in case of an invalid\n+                // subcommand.\n                 println!(\"{}\\n\", subcommand_help);\n-                process::exit(1);\n+                let exit_code = if args.is_empty() { 0 } else { 1 };\n+                process::exit(exit_code);\n             }\n         };\n "}]}