{"sha": "9b66527075fafba9c058137a6943cf2e0d312000", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliNjY1MjcwNzVmYWZiYTljMDU4MTM3YTY5NDNjZjJlMGQzMTIwMDA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-28T08:23:29Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-29T12:31:54Z"}, "message": "more sensible slack", "tree": {"sha": "2594f3f15d28974e58382696b773538b597778d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2594f3f15d28974e58382696b773538b597778d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b66527075fafba9c058137a6943cf2e0d312000", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b66527075fafba9c058137a6943cf2e0d312000", "html_url": "https://github.com/rust-lang/rust/commit/9b66527075fafba9c058137a6943cf2e0d312000", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b66527075fafba9c058137a6943cf2e0d312000/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0b44ca98cab26289e3e6c435bab5574f30f0a09", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0b44ca98cab26289e3e6c435bab5574f30f0a09", "html_url": "https://github.com/rust-lang/rust/commit/c0b44ca98cab26289e3e6c435bab5574f30f0a09"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "df7217965c8147de281e5fe5ccb887e95cfdc4fc", "filename": "src/intptrcast.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9b66527075fafba9c058137a6943cf2e0d312000/src%2Fintptrcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b66527075fafba9c058137a6943cf2e0d312000/src%2Fintptrcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintptrcast.rs?ref=9b66527075fafba9c058137a6943cf2e0d312000", "patch": "@@ -84,7 +84,8 @@ impl<'mir, 'tcx> GlobalState {\n                 // Leave some space to the previous allocation, to give it some chance to be less aligned.\n                 let slack = {\n                     let mut rng = memory.extra.rng.as_ref().unwrap().borrow_mut();\n-                    rng.gen_range(0, align)\n+                    // This means that `(global_state.next_base_addr + slack) % 16` is uniformly distributed.\n+                    rng.gen_range(0, 16)\n                 };\n                 // From next_base_addr + slack, round up to adjust for alignment.\n                 let base_addr = Self::align_addr(global_state.next_base_addr + slack, align);"}]}