{"sha": "2ec294b2232038c6f886d4d2fd0274845d6946b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlYzI5NGIyMjMyMDM4YzZmODg2ZDRkMmZkMDI3NDg0NWQ2OTQ2YjM=", "commit": {"author": {"name": "Luc Street", "email": "lucis-fluxum@users.noreply.github.com", "date": "2016-12-29T22:21:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-12-29T22:21:07Z"}, "message": "Fix typo in PartialOrd docs", "tree": {"sha": "4f270d1efdee022925b5f7b795dbfad5ea464ae0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f270d1efdee022925b5f7b795dbfad5ea464ae0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ec294b2232038c6f886d4d2fd0274845d6946b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ec294b2232038c6f886d4d2fd0274845d6946b3", "html_url": "https://github.com/rust-lang/rust/commit/2ec294b2232038c6f886d4d2fd0274845d6946b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ec294b2232038c6f886d4d2fd0274845d6946b3/comments", "author": {"login": "lucis-fluxum", "id": 92240462, "node_id": "U_kgDOBX96Tg", "avatar_url": "https://avatars.githubusercontent.com/u/92240462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucis-fluxum", "html_url": "https://github.com/lucis-fluxum", "followers_url": "https://api.github.com/users/lucis-fluxum/followers", "following_url": "https://api.github.com/users/lucis-fluxum/following{/other_user}", "gists_url": "https://api.github.com/users/lucis-fluxum/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucis-fluxum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucis-fluxum/subscriptions", "organizations_url": "https://api.github.com/users/lucis-fluxum/orgs", "repos_url": "https://api.github.com/users/lucis-fluxum/repos", "events_url": "https://api.github.com/users/lucis-fluxum/events{/privacy}", "received_events_url": "https://api.github.com/users/lucis-fluxum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7c788af75c92c3e0f8e547f28d734757136527f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7c788af75c92c3e0f8e547f28d734757136527f", "html_url": "https://github.com/rust-lang/rust/commit/e7c788af75c92c3e0f8e547f28d734757136527f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "54fb70278cac6818420e1fd879d3c8745a31647d", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ec294b2232038c6f886d4d2fd0274845d6946b3/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ec294b2232038c6f886d4d2fd0274845d6946b3/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=2ec294b2232038c6f886d4d2fd0274845d6946b3", "patch": "@@ -429,7 +429,7 @@ impl PartialOrd for Ordering {\n /// This trait can be used with `#[derive]`. When `derive`d, it will produce a lexicographic\n /// ordering based on the top-to-bottom declaration order of the struct's members.\n ///\n-/// ## How can I implement `Ord`?\n+/// ## How can I implement `PartialOrd`?\n ///\n /// PartialOrd only requires implementation of the `partial_cmp` method, with the others generated\n /// from default implementations."}]}