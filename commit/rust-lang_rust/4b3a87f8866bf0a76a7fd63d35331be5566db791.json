{"sha": "4b3a87f8866bf0a76a7fd63d35331be5566db791", "node_id": "C_kwDOAAsO6NoAKDRiM2E4N2Y4ODY2YmYwYTc2YTdmZDYzZDM1MzMxYmU1NTY2ZGI3OTE", "commit": {"author": {"name": "Piotr Mikulski", "email": "piotr@near.org", "date": "2021-12-24T05:47:31Z"}, "committer": {"name": "Piotr Mikulski", "email": "piotr@near.org", "date": "2021-12-24T05:47:31Z"}, "message": "clippy", "tree": {"sha": "9184022ee8c2102ed5d4fd0b9f64134b901648fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9184022ee8c2102ed5d4fd0b9f64134b901648fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b3a87f8866bf0a76a7fd63d35331be5566db791", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b3a87f8866bf0a76a7fd63d35331be5566db791", "html_url": "https://github.com/rust-lang/rust/commit/4b3a87f8866bf0a76a7fd63d35331be5566db791", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b3a87f8866bf0a76a7fd63d35331be5566db791/comments", "author": {"login": "pmnoxx", "id": 7828365, "node_id": "MDQ6VXNlcjc4MjgzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7828365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmnoxx", "html_url": "https://github.com/pmnoxx", "followers_url": "https://api.github.com/users/pmnoxx/followers", "following_url": "https://api.github.com/users/pmnoxx/following{/other_user}", "gists_url": "https://api.github.com/users/pmnoxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmnoxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmnoxx/subscriptions", "organizations_url": "https://api.github.com/users/pmnoxx/orgs", "repos_url": "https://api.github.com/users/pmnoxx/repos", "events_url": "https://api.github.com/users/pmnoxx/events{/privacy}", "received_events_url": "https://api.github.com/users/pmnoxx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmnoxx", "id": 7828365, "node_id": "MDQ6VXNlcjc4MjgzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7828365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmnoxx", "html_url": "https://github.com/pmnoxx", "followers_url": "https://api.github.com/users/pmnoxx/followers", "following_url": "https://api.github.com/users/pmnoxx/following{/other_user}", "gists_url": "https://api.github.com/users/pmnoxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmnoxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmnoxx/subscriptions", "organizations_url": "https://api.github.com/users/pmnoxx/orgs", "repos_url": "https://api.github.com/users/pmnoxx/repos", "events_url": "https://api.github.com/users/pmnoxx/events{/privacy}", "received_events_url": "https://api.github.com/users/pmnoxx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b19845ffb7b9b6fd760f0bf8066731028377237", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b19845ffb7b9b6fd760f0bf8066731028377237", "html_url": "https://github.com/rust-lang/rust/commit/8b19845ffb7b9b6fd760f0bf8066731028377237"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "14185503092f49fc0393ae28ebfaf359691f4db6", "filename": "clippy_lints/src/methods/unwrap_or_else_default.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4b3a87f8866bf0a76a7fd63d35331be5566db791/clippy_lints%2Fsrc%2Fmethods%2Funwrap_or_else_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b3a87f8866bf0a76a7fd63d35331be5566db791/clippy_lints%2Fsrc%2Fmethods%2Funwrap_or_else_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funwrap_or_else_default.rs?ref=4b3a87f8866bf0a76a7fd63d35331be5566db791", "patch": "@@ -26,13 +26,8 @@ pub(super) fn check<'tcx>(\n     let is_default_eq = match &u_arg.kind {\n         hir::ExprKind::Path(qpath) => {\n             if let Some(repl_def_id) = cx.qpath_res(qpath, u_arg.hir_id).opt_def_id() {\n-                if is_diag_trait_item(cx, repl_def_id, sym::Default)\n+                is_diag_trait_item(cx, repl_def_id, sym::Default)\n                     || is_default_equivalent_ctor(cx, repl_def_id, qpath)\n-                {\n-                    true\n-                } else {\n-                    false\n-                }\n             } else {\n                 false\n             }"}]}