{"sha": "595fda0de7fda252559b717e2e56b3b1eef1961e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NWZkYTBkZTdmZGEyNTI1NTliNzE3ZTJlNTZiM2IxZWVmMTk2MWU=", "commit": {"author": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2015-08-27T06:20:00Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2015-08-27T16:48:35Z"}, "message": "fix some more unstable issue annotations", "tree": {"sha": "cc1d3473672957f2fe120398bd9453e46a8471b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc1d3473672957f2fe120398bd9453e46a8471b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/595fda0de7fda252559b717e2e56b3b1eef1961e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/595fda0de7fda252559b717e2e56b3b1eef1961e", "html_url": "https://github.com/rust-lang/rust/commit/595fda0de7fda252559b717e2e56b3b1eef1961e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/595fda0de7fda252559b717e2e56b3b1eef1961e/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd302a95e1197e5f8401ecaa15f2cb0f81c830c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd302a95e1197e5f8401ecaa15f2cb0f81c830c3", "html_url": "https://github.com/rust-lang/rust/commit/fd302a95e1197e5f8401ecaa15f2cb0f81c830c3"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "fe06e3fb2093ed456b9be851087fc9c48f0afe94", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/595fda0de7fda252559b717e2e56b3b1eef1961e/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/595fda0de7fda252559b717e2e56b3b1eef1961e/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=595fda0de7fda252559b717e2e56b3b1eef1961e", "patch": "@@ -113,7 +113,7 @@ mod std {\n }\n \n /// An endpoint of a range of keys.\n-#[unstable(feature = \"collections_bound\", issue = \"27711\")]\n+#[unstable(feature = \"collections_bound\", issue = \"27787\")]\n #[derive(Clone, Copy, Debug, Hash, PartialEq, Eq)]\n pub enum Bound<T> {\n     /// An inclusive bound."}, {"sha": "7ee2c369e19a81f2a8a29333c1ed8ae4058765a8", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/595fda0de7fda252559b717e2e56b3b1eef1961e/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/595fda0de7fda252559b717e2e56b3b1eef1961e/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=595fda0de7fda252559b717e2e56b3b1eef1961e", "patch": "@@ -734,7 +734,8 @@ impl String {\n     ///\n     /// Note that this will drop any excess capacity.\n     #[unstable(feature = \"box_str\",\n-               reason = \"recently added, matches RFC\")]\n+               reason = \"recently added, matches RFC\",\n+               issue = \"27785\")]\n     #[deprecated(since = \"1.4.0\", reason = \"renamed to `into_boxed_str`\")]\n     pub fn into_boxed_slice(self) -> Box<str> {\n         self.into_boxed_str()"}, {"sha": "08dd6d76f3b32dde61a9a9102025ab37eb599840", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/595fda0de7fda252559b717e2e56b3b1eef1961e/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/595fda0de7fda252559b717e2e56b3b1eef1961e/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=595fda0de7fda252559b717e2e56b3b1eef1961e", "patch": "@@ -239,7 +239,8 @@ macro_rules! writeln {\n /// ```\n #[macro_export]\n #[unstable(feature = \"core\",\n-           reason = \"relationship with panic is unclear\")]\n+           reason = \"relationship with panic is unclear\",\n+           issue = \"27701\")]\n macro_rules! unreachable {\n     () => ({\n         panic!(\"internal error: entered unreachable code\")\n@@ -256,7 +257,8 @@ macro_rules! unreachable {\n /// message `\"not yet implemented\"` when executed.\n #[macro_export]\n #[unstable(feature = \"core\",\n-           reason = \"relationship with panic is unclear\")]\n+           reason = \"relationship with panic is unclear\",\n+           issue = \"27701\")]\n macro_rules! unimplemented {\n     () => (panic!(\"not yet implemented\"))\n }"}, {"sha": "317130f5f0e0200ebfad05563aae67658857653c", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/595fda0de7fda252559b717e2e56b3b1eef1961e/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/595fda0de7fda252559b717e2e56b3b1eef1961e/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=595fda0de7fda252559b717e2e56b3b1eef1961e", "patch": "@@ -168,7 +168,7 @@ macro_rules! try {\n ///\n /// For more information about select, see the `std::sync::mpsc::Select` structure.\n #[macro_export]\n-#[unstable(feature = \"mpsc_select\")]\n+#[unstable(feature = \"mpsc_select\", issue = \"27800\")]\n macro_rules! select {\n     (\n         $($name:pat = $rx:ident.$meth:ident() => $code:expr),+"}]}