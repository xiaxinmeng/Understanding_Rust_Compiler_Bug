{"sha": "e0de2475208765a171f335dfffde764f96243d41", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwZGUyNDc1MjA4NzY1YTE3MWYzMzVkZmZmZGU3NjRmOTYyNDNkNDE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-11T10:30:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-11T10:30:39Z"}, "message": "Merge #5708\n\n5708: Use Hygiene in completion r=jonas-schievink a=lnicola\n\n\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "0d93bf6afa9934f92d5cc924c6943a08dd5d2f7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d93bf6afa9934f92d5cc924c6943a08dd5d2f7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0de2475208765a171f335dfffde764f96243d41", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfMnNPCRBK7hj4Ov3rIwAAdHIIAAAG9f/1SZTPpkaEAHm5TQNZ\n3OlJwbmOsgWA6xN5ObMZ9kTHtOrP6bYSmpXh34RqWZgIiQFpID+ynbEhhuIe5jNJ\nxRUkF/CypdekENafVr8SapEHO8WDdXZBoGjglbow4zqsGM/V7/ZnensBO5s3c2xk\nSqcL+hU9wylC6LB7jxvj/duzSTJGVZPCQLZYiZNOEkQWrNU9eUANyVu0Azjauy5r\nzKOIruILeC6MEH4jCyqFWLLRTuHFWgO3GpU30k0HnHPku/KZkoPXi8QOdAqUB8QI\npROjRK7sQSrTOQ5x/yU2YK6mB8VLKjDb6xxSdgwQMdPWja1nOmcEol31x+MTyYE=\n=7IVv\n-----END PGP SIGNATURE-----\n", "payload": "tree 0d93bf6afa9934f92d5cc924c6943a08dd5d2f7b\nparent ef20dfc78d2092f8b99db6716dde1928b15133a0\nparent fc01c7846d5c6970e194dd223e49b863b3189432\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1597141839 +0000\ncommitter GitHub <noreply@github.com> 1597141839 +0000\n\nMerge #5708\n\n5708: Use Hygiene in completion r=jonas-schievink a=lnicola\n\n\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0de2475208765a171f335dfffde764f96243d41", "html_url": "https://github.com/rust-lang/rust/commit/e0de2475208765a171f335dfffde764f96243d41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0de2475208765a171f335dfffde764f96243d41/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef20dfc78d2092f8b99db6716dde1928b15133a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef20dfc78d2092f8b99db6716dde1928b15133a0", "html_url": "https://github.com/rust-lang/rust/commit/ef20dfc78d2092f8b99db6716dde1928b15133a0"}, {"sha": "fc01c7846d5c6970e194dd223e49b863b3189432", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc01c7846d5c6970e194dd223e49b863b3189432", "html_url": "https://github.com/rust-lang/rust/commit/fc01c7846d5c6970e194dd223e49b863b3189432"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "4aa761148d80aa868cd66a1a88635819c3f9cce4", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e0de2475208765a171f335dfffde764f96243d41/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0de2475208765a171f335dfffde764f96243d41/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=e0de2475208765a171f335dfffde764f96243d41", "patch": "@@ -27,7 +27,7 @@ pub(crate) struct CompletionContext<'a> {\n     pub(super) scope: SemanticsScope<'a>,\n     pub(super) db: &'a RootDatabase,\n     pub(super) config: &'a CompletionConfig,\n-    pub(super) offset: TextSize,\n+    pub(super) position: FilePosition,\n     /// The token before the cursor, in the original file.\n     pub(super) original_token: SyntaxToken,\n     /// The token before the cursor, in the macro-expanded file.\n@@ -117,7 +117,7 @@ impl<'a> CompletionContext<'a> {\n             config,\n             original_token,\n             token,\n-            offset: position.offset,\n+            position,\n             krate,\n             expected_type: None,\n             name_ref_syntax: None,\n@@ -209,7 +209,7 @@ impl<'a> CompletionContext<'a> {\n             mark::hit!(completes_if_prefix_is_keyword);\n             self.original_token.text_range()\n         } else {\n-            TextRange::empty(self.offset)\n+            TextRange::empty(self.position.offset)\n         }\n     }\n \n@@ -379,8 +379,8 @@ impl<'a> CompletionContext<'a> {\n             self.is_path_type = path.syntax().parent().and_then(ast::PathType::cast).is_some();\n             self.has_type_args = segment.generic_arg_list().is_some();\n \n-            #[allow(deprecated)]\n-            if let Some(path) = hir::Path::from_ast(path.clone()) {\n+            let hygiene = hir::Hygiene::new(self.db, self.position.file_id.into());\n+            if let Some(path) = hir::Path::from_src(path.clone(), &hygiene) {\n                 if let Some(path_prefix) = path.qualifier() {\n                     self.path_prefix = Some(path_prefix);\n                     return;"}]}