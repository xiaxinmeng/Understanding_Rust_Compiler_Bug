{"sha": "f8b15d85ded26b45aeed62ea541008a91e922096", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YjE1ZDg1ZGVkMjZiNDVhZWVkNjJlYTU0MTAwOGE5MWU5MjIwOTY=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-03-07T16:51:43Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-03-07T16:57:23Z"}, "message": "rustdoc: Don't enter an infer_ctxt in get_blanket_impls for impls that aren't blanket impls", "tree": {"sha": "6bf26796c080acd0e04ddce9cd9291428dd49ae5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bf26796c080acd0e04ddce9cd9291428dd49ae5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8b15d85ded26b45aeed62ea541008a91e922096", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8b15d85ded26b45aeed62ea541008a91e922096", "html_url": "https://github.com/rust-lang/rust/commit/f8b15d85ded26b45aeed62ea541008a91e922096", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8b15d85ded26b45aeed62ea541008a91e922096/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66ec64ccf31883cd2c28d045912a76179c0c6ed2", "url": "https://api.github.com/repos/rust-lang/rust/commits/66ec64ccf31883cd2c28d045912a76179c0c6ed2", "html_url": "https://github.com/rust-lang/rust/commit/66ec64ccf31883cd2c28d045912a76179c0c6ed2"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "ec02b48ad9dfbc53ad63233193e47a0f7f52872a", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f8b15d85ded26b45aeed62ea541008a91e922096/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8b15d85ded26b45aeed62ea541008a91e922096/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=f8b15d85ded26b45aeed62ea541008a91e922096", "patch": "@@ -32,12 +32,8 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n                     trait_def_id, impl_def_id\n                 );\n                 let trait_ref = self.cx.tcx.impl_trait_ref(impl_def_id).unwrap();\n-                let may_apply = self.cx.tcx.infer_ctxt().enter(|infcx| {\n-                    match trait_ref.self_ty().kind() {\n-                        ty::Param(_) => {}\n-                        _ => return false,\n-                    }\n-\n+                let is_param = matches!(trait_ref.self_ty().kind(), ty::Param(_));\n+                let may_apply = is_param && self.cx.tcx.infer_ctxt().enter(|infcx| {\n                     let substs = infcx.fresh_substs_for_item(DUMMY_SP, item_def_id);\n                     let ty = ty.subst(infcx.tcx, substs);\n                     let param_env = param_env.subst(infcx.tcx, substs);"}]}