{"sha": "c66a789a045c3c521620af73c1f06314fbe315bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2NmE3ODlhMDQ1YzNjNTIxNjIwYWY3M2MxZjA2MzE0ZmJlMzE1YmI=", "commit": {"author": {"name": "uHOOCCOOHu", "email": "hooccooh1896@gmail.com", "date": "2019-09-10T05:33:02Z"}, "committer": {"name": "uHOOCCOOHu", "email": "hooccooh1896@gmail.com", "date": "2019-09-10T05:33:02Z"}, "message": "Show macro definition in hover text", "tree": {"sha": "e9d58a7d19140a6f6b610ca4f64250b989eeac0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9d58a7d19140a6f6b610ca4f64250b989eeac0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c66a789a045c3c521620af73c1f06314fbe315bb", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEXLDp5dXVcfV/VA/qztOS3gxIPQAFAl13NaMACgkQztOS3gxI\nPQBhThAArAD/68BcCunM2eslHsN29Rxq8TEyFjH+k84P0RvYqGVhP+vyOdi2Yp52\nfccB1+vWKRzF4+v96U9plwLlO2JvHiWuOVDwq/JiKFhmdWVD8DE6KOZREJzk34pS\nDltz3aHbLVqOfQ0rS6CKQYucaIDHU1d2Jg7rmSNoSRCcHty+IWuhVUMPbDPqLEPk\nE7rZ69bJ3Kc9k9f0CmqNvcFPiU9Zg1Hk3mrURBc5kE48Dn468dQwPlGNeDgM6UNs\nfN9QNbVRuuQZoMgzdUQfgVGj59dyHS3cnBfxu4RMUiWgQDQijiR29COm+joMQQ5u\n7MUd7Rv/Fkqa84eZ3cB67ViC4hXzQtB3k5vnJ4pLR6v16vXDoQ/0h5RHO8tmIDFs\niVQ8P/11LWevmyc8FUCzgL3itPMnUI1qfHQGErYAFhSdQHz4xCCsj7u2bUEwcpvz\nSWJ0ixmnCtJsTHC6XU5g0CNUpVGBaw0W9yT1nr96u+X8/WVhwZ2agc9ODB5TSSmA\nNUP6kNmqLmRfZ9X/oWNl8FrdVllFvKqBW0aO/KqsddGAGWxuCpcJlE9SKkyIh/N5\nB5krtKTDtX2ftEX/trB0ERtVpVo247O5embbDz4cnFkSl69irNimBwC2v8r2I2ZQ\nR4eezUUccvoMLb7IEt9Ot/dMiiBrJhdcIP+coShPQ6/EglPfd2U=\n=eTmV\n-----END PGP SIGNATURE-----", "payload": "tree e9d58a7d19140a6f6b610ca4f64250b989eeac0c\nparent 7de9537cccc7a6338bcd9c892a1fdb4a6008dc1a\nauthor uHOOCCOOHu <hooccooh1896@gmail.com> 1568093582 +0800\ncommitter uHOOCCOOHu <hooccooh1896@gmail.com> 1568093582 +0800\n\nShow macro definition in hover text\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c66a789a045c3c521620af73c1f06314fbe315bb", "html_url": "https://github.com/rust-lang/rust/commit/c66a789a045c3c521620af73c1f06314fbe315bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c66a789a045c3c521620af73c1f06314fbe315bb/comments", "author": null, "committer": null, "parents": [{"sha": "7de9537cccc7a6338bcd9c892a1fdb4a6008dc1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7de9537cccc7a6338bcd9c892a1fdb4a6008dc1a", "html_url": "https://github.com/rust-lang/rust/commit/7de9537cccc7a6338bcd9c892a1fdb4a6008dc1a"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "4b7847de852ee2586f458e6dffa863e05b1e657a", "filename": "crates/ra_ide_api/src/hover.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c66a789a045c3c521620af73c1f06314fbe315bb/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c66a789a045c3c521620af73c1f06314fbe315bb/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=c66a789a045c3c521620af73c1f06314fbe315bb", "patch": "@@ -12,8 +12,8 @@ use ra_syntax::{\n use crate::{\n     db::RootDatabase,\n     display::{\n-        description_from_symbol, docs_from_symbol, rust_code_markup, rust_code_markup_with_doc,\n-        ShortLabel,\n+        description_from_symbol, docs_from_symbol, macro_label, rust_code_markup,\n+        rust_code_markup_with_doc, ShortLabel,\n     },\n     name_ref_kind::{classify_name_ref, NameRefKind::*},\n     FilePosition, FileRange, RangeInfo,\n@@ -108,7 +108,7 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n             Some(Method(it)) => res.extend(from_def_source(db, it)),\n             Some(Macro(it)) => {\n                 let src = it.source(db);\n-                res.extend(hover_text(src.ast.doc_comment_text(), None));\n+                res.extend(hover_text(src.ast.doc_comment_text(), Some(macro_label(&src.ast))));\n             }\n             Some(FieldAccess(it)) => {\n                 let src = it.source(db);\n@@ -700,4 +700,22 @@ fn func(foo: i32) { if true { <|>foo; }; }\n         assert_eq!(trim_markup_opt(hover.info.first()), Some(\"i32\"));\n         assert_eq!(hover.info.is_exact(), true);\n     }\n+\n+    #[test]\n+    fn test_hover_macro_invocation() {\n+        let (analysis, position) = single_file_with_position(\n+            \"\n+            macro_rules! foo {\n+                () => {}\n+            }\n+\n+            fn f() {\n+                fo<|>o!();\n+            }\n+            \",\n+        );\n+        let hover = analysis.hover(position).unwrap().unwrap();\n+        assert_eq!(trim_markup_opt(hover.info.first()), Some(\"macro_rules! foo\"));\n+        assert_eq!(hover.info.is_exact(), true);\n+    }\n }"}]}