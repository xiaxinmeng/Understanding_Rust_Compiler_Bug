{"sha": "757a2afb6b80cb4dbdcb8069f1af511ec42e8670", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1N2EyYWZiNmI4MGNiNGRiZGNiODA2OWYxYWY1MTFlYzQyZTg2NzA=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2012-12-10T20:36:01Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-17T03:27:05Z"}, "message": "priority_queue: make to_vec/to_sorted_vec methods", "tree": {"sha": "ad81e85686b70dea87c47f6f2df277d54ccafb1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad81e85686b70dea87c47f6f2df277d54ccafb1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/757a2afb6b80cb4dbdcb8069f1af511ec42e8670", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/757a2afb6b80cb4dbdcb8069f1af511ec42e8670", "html_url": "https://github.com/rust-lang/rust/commit/757a2afb6b80cb4dbdcb8069f1af511ec42e8670", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/757a2afb6b80cb4dbdcb8069f1af511ec42e8670/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd2b32be56945824e1e900d9748274633d6db6c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd2b32be56945824e1e900d9748274633d6db6c1", "html_url": "https://github.com/rust-lang/rust/commit/dd2b32be56945824e1e900d9748274633d6db6c1"}], "stats": {"total": 37, "additions": 17, "deletions": 20}, "files": [{"sha": "31d6e04ae62677b66515bda7411cebf1a91a4646", "filename": "src/libstd/priority_queue.rs", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/757a2afb6b80cb4dbdcb8069f1af511ec42e8670/src%2Flibstd%2Fpriority_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/757a2afb6b80cb4dbdcb8069f1af511ec42e8670/src%2Flibstd%2Fpriority_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpriority_queue.rs?ref=757a2afb6b80cb4dbdcb8069f1af511ec42e8670", "patch": "@@ -76,6 +76,21 @@ impl <T: Copy Ord> PriorityQueue<T> {\n         ret\n     }\n \n+    /// Consume the PriorityQueue and return the underlying vector\n+    pure fn to_vec(self) -> ~[T] { let PriorityQueue{data: v} = self; v }\n+\n+    /// Consume the PriorityQueue and return a vector in sorted (ascending) order\n+    pure fn to_sorted_vec(self) -> ~[T] {\n+        let mut q = self;\n+        let mut end = q.len() - 1;\n+        while end > 0 {\n+            q.data[end] <-> q.data[0];\n+            end -= 1;\n+            unsafe { q.siftup_range(0, end) } // purity-checking workaround\n+        }\n+        q.to_vec()\n+    }\n+\n     priv fn siftdown(&mut self, startpos: uint, pos: uint) {\n         let mut pos = pos;\n         let newitem = self.data[pos];\n@@ -118,24 +133,6 @@ impl <T: Copy Ord> PriorityQueue<T> {\n     }\n }\n \n-/// Consume the PriorityQueue and return the underlying vector\n-pub pure fn to_vec<T: Copy Ord>(q: PriorityQueue<T>) -> ~[T] {\n-    let PriorityQueue{data: v} = q;\n-    v\n-}\n-\n-/// Consume the PriorityQueue and return a vector in sorted (ascending) order\n-pub pure fn to_sorted_vec<T: Copy Ord>(q: PriorityQueue<T>) -> ~[T] {\n-    let mut q = q;\n-    let mut end = q.len() - 1;\n-    while end > 0 {\n-        q.data[end] <-> q.data[0];\n-        end -= 1;\n-        unsafe { q.siftup_range(0, end) } // purity-checking workaround\n-    }\n-    to_vec(q)\n-}\n-\n pub pure fn from_vec<T: Copy Ord>(xs: ~[T]) -> PriorityQueue<T> {\n     let mut q = PriorityQueue{data: xs,};\n     let mut n = q.len() / 2;\n@@ -215,7 +212,7 @@ mod tests {\n     #[test]\n     fn test_to_sorted_vec() {\n         let data = ~[2, 4, 6, 2, 1, 8, 10, 3, 5, 7, 0, 9, 1];\n-        assert to_sorted_vec(from_vec(data)) == merge_sort(data, le);\n+        assert from_vec(data).to_sorted_vec() == merge_sort(data, le);\n     }\n \n     #[test]\n@@ -248,6 +245,6 @@ mod tests {\n     fn test_to_vec() {\n         let data = ~[1, 3, 5, 7, 9, 2, 4, 6, 8, 0];\n         let heap = from_vec(copy data);\n-        assert merge_sort(to_vec(heap), le) == merge_sort(data, le);\n+        assert merge_sort(heap.to_vec(), le) == merge_sort(data, le);\n     }\n }"}]}