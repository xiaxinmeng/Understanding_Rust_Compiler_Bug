{"sha": "2f2d3b2fd4d38f1ea0c63eb8e880085a2ccf0987", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMmQzYjJmZDRkMzhmMWVhMGM2M2ViOGU4ODAwODVhMmNjZjA5ODc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-12T10:03:18Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-12T10:04:17Z"}, "message": "Avoid iadd for ptr const val with zero offset", "tree": {"sha": "39959373c70db880814696fa70d561395e0e16c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39959373c70db880814696fa70d561395e0e16c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f2d3b2fd4d38f1ea0c63eb8e880085a2ccf0987", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f2d3b2fd4d38f1ea0c63eb8e880085a2ccf0987", "html_url": "https://github.com/rust-lang/rust/commit/2f2d3b2fd4d38f1ea0c63eb8e880085a2ccf0987", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f2d3b2fd4d38f1ea0c63eb8e880085a2ccf0987/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd2fc77b0ee166be15c71963b036dfc7a65df63d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd2fc77b0ee166be15c71963b036dfc7a65df63d", "html_url": "https://github.com/rust-lang/rust/commit/cd2fc77b0ee166be15c71963b036dfc7a65df63d"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "1b514958a4809dfec736410a8db1d98c38e2a4d6", "filename": "src/constant.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2f2d3b2fd4d38f1ea0c63eb8e880085a2ccf0987/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f2d3b2fd4d38f1ea0c63eb8e880085a2ccf0987/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=2f2d3b2fd4d38f1ea0c63eb8e880085a2ccf0987", "patch": "@@ -225,10 +225,13 @@ pub(crate) fn trans_const_value<'tcx>(\n                         }\n                         None => bug!(\"missing allocation {:?}\", ptr.alloc_id),\n                     };\n-                    let val = fx\n-                        .bcx\n-                        .ins()\n-                        .iadd_imm(base_addr, i64::try_from(ptr.offset.bytes()).unwrap());\n+                    let val = if ptr.offset.bytes() != 0 {\n+                        fx.bcx\n+                            .ins()\n+                            .iadd_imm(base_addr, i64::try_from(ptr.offset.bytes()).unwrap())\n+                    } else {\n+                        base_addr\n+                    };\n                     return CValue::by_val(val, layout);\n                 }\n             }"}]}