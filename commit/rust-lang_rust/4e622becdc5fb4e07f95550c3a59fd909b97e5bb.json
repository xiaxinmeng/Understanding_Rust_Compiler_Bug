{"sha": "4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNjIyYmVjZGM1ZmI0ZTA3Zjk1NTUwYzNhNTlmZDkwOWI5N2U1YmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-06T10:01:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-06T10:01:49Z"}, "message": "auto merge of #11118 : jhasse/rust/patch-rustlibdir, r=alexcrichton\n\n...stlib. Fixes #3319", "tree": {"sha": "babf157da0344fec32e29830dd61cf0500e2df5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/babf157da0344fec32e29830dd61cf0500e2df5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "html_url": "https://github.com/rust-lang/rust/commit/4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c58bb2352157732a1b525b0ed20ad7588b975b08", "url": "https://api.github.com/repos/rust-lang/rust/commits/c58bb2352157732a1b525b0ed20ad7588b975b08", "html_url": "https://github.com/rust-lang/rust/commit/c58bb2352157732a1b525b0ed20ad7588b975b08"}, {"sha": "6abe0ef32eb88965a7263f8e37a275a408fce5c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6abe0ef32eb88965a7263f8e37a275a408fce5c8", "html_url": "https://github.com/rust-lang/rust/commit/6abe0ef32eb88965a7263f8e37a275a408fce5c8"}], "stats": {"total": 67, "additions": 53, "deletions": 14}, "files": [{"sha": "be1d0fc62c2f1a8973dad1f7a5e94c333dff34a8", "filename": "Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "patch": "@@ -33,7 +33,7 @@\n # stageN - this is the system root, corresponding to, e.g. /usr\n #   bin - binaries compiled for the host\n #   lib - libraries used by the host compiler\n-#     rustc - rustc's own place to organize libraries\n+#     rustlib - rustc's own place to organize libraries\n #       $(target) - target-specific artifacts\n #         bin - binaries for target architectures\n #         lib - libraries for target architectures\n@@ -415,6 +415,7 @@ export CFG_LLVM_ROOT\n export CFG_ENABLE_MINGW_CROSS\n export CFG_PREFIX\n export CFG_LIBDIR\n+export CFG_RUSTLIBDIR\n \n ######################################################################\n # Subprograms\n@@ -435,7 +436,7 @@ HBIN$(1)_H_$(3) = $$(HROOT$(1)_H_$(3))/bin\n HLIB$(1)_H_$(3) = $$(HROOT$(1)_H_$(3))/$$(CFG_LIBDIR)\n \n # Destinations of artifacts for target architectures\n-TROOT$(1)_T_$(2)_H_$(3) = $$(HLIB$(1)_H_$(3))/rustc/$(2)\n+TROOT$(1)_T_$(2)_H_$(3) = $$(HLIB$(1)_H_$(3))/$$(CFG_RUSTLIBDIR)/$(2)\n TBIN$(1)_T_$(2)_H_$(3) = $$(TROOT$(1)_T_$(2)_H_$(3))/bin\n TLIB$(1)_T_$(2)_H_$(3) = $$(TROOT$(1)_T_$(2)_H_$(3))/$$(CFG_LIBDIR)\n "}, {"sha": "dbbd1a2bb5f59e96c512e61a53c15e383470209b", "filename": "configure", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/configure", "raw_url": "https://github.com/rust-lang/rust/raw/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "patch": "@@ -398,6 +398,7 @@ valopt datadir \"${CFG_PREFIX}/share\" \"install data\"\n valopt infodir \"${CFG_PREFIX}/share/info\" \"install additional info\"\n valopt mandir \"${CFG_PREFIX}/share/man\" \"install man pages in PATH\"\n valopt libdir \"${CFG_PREFIX}/lib\" \"install libraries\"\n+valopt rustlibdir \"rustlib\" \"subdirectory name for rustc's libraries\"\n \n # Validate Options\n step_msg \"validating $CFG_SELF args\"\n@@ -775,11 +776,16 @@ do\n             make_dir $h/stage$i/test\n \n             # target bin dir\n-            make_dir $h/stage$i/$CFG_LIBDIR/rustc/$t/bin\n+            make_dir $h/stage$i/$CFG_LIBDIR/$CFG_RUSTLIBDIR/$t/bin\n \n             # target lib dir\n-            make_dir $h/stage$i/$CFG_LIBDIR/rustc/$t/$CFG_LIBDIR\n+            make_dir $h/stage$i/$CFG_LIBDIR/$CFG_RUSTLIBDIR/$t/$CFG_LIBDIR\n         done\n+\n+        # Fix stage0:\n+        make_dir $h/stage0/$CFG_LIBDIR/rustc/$t/bin\n+        make_dir $h/stage0/$CFG_LIBDIR/rustc/$t/$CFG_LIBDIR\n+\n     done\n \n     make_dir $h/test/run-pass\n@@ -1031,6 +1037,7 @@ putvar CFG_HOST\n putvar CFG_TARGET\n putvar CFG_C_COMPILER\n putvar CFG_LIBDIR\n+putvar CFG_RUSTLIBDIR\n putvar CFG_DISABLE_MANAGE_SUBMODULES\n putvar CFG_ANDROID_CROSS_PATH\n putvar CFG_MINGW32_CROSS_PATH"}, {"sha": "5dc11d6efbfdc2c1e9642a8c2f4f6ee3c53cec7e", "filename": "mk/install.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "patch": "@@ -74,7 +74,7 @@ TB$(1)$(2) = $$(TBIN$$(ISTAGE)_T_$(1)_H_$(2))\n TL$(1)$(2) = $$(TLIB$$(ISTAGE)_T_$(1)_H_$(2))\n \n # PT{R,B,L} == Prefix Target {Root, Bin, Lib}\n-PTR$(1)$(2) = $$(PREFIX_LIB)/rustc/$(1)\n+PTR$(1)$(2) = $$(PREFIX_LIB)/$(CFG_RUSTLIBDIR)/$(1)\n PTB$(1)$(2) = $$(PTR$(1)$(2))/bin\n PTL$(1)$(2) = $$(PTR$(1)$(2))/$(CFG_LIBDIR)\n "}, {"sha": "5582e50b7c42f36a53d45557d06e86c68c29c089", "filename": "mk/stage0.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/mk%2Fstage0.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/mk%2Fstage0.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage0.mk?ref=4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "patch": "@@ -15,7 +15,7 @@ $(SNAPSHOT_RUSTC_POST_CLEANUP):\t\t\t\t\t\t\\\n #   Note: the variable \"SNAPSHOT_FILE\" is generally not set, and so\n #   we generally only pass one argument to this script.\n ifdef CFG_ENABLE_LOCAL_RUST\n-\t$(Q)$(S)src/etc/local_stage0.sh $(CFG_BUILD) $(CFG_LOCAL_RUST_ROOT)\n+\t$(Q)$(S)src/etc/local_stage0.sh $(CFG_BUILD) $(CFG_LOCAL_RUST_ROOT) $(CFG_RUSTLIBDIR)\n else\n \t$(Q)$(CFG_PYTHON) $(S)src/etc/get-snapshot.py $(CFG_BUILD) $(SNAPSHOT_FILE)\n ifdef CFG_ENABLE_PAX_FLAGS"}, {"sha": "293f134fb44dc4dc35f88a02ca96638bae04967d", "filename": "mk/target.mk", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "patch": "@@ -59,6 +59,10 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_STDLIB_$(2)): \\\n \t\t$$(TSREQ$(1)_T_$(2)_H_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n+ifeq ($(1),0)\n+\t$$(Q)cp $(3)/stage0/$(CFG_LIBDIR)/rustlib/$(2)/$(CFG_LIBDIR)/* \\\n+\t\t$(3)/stage0/$(CFG_LIBDIR)/rustc/$(2)/$(CFG_LIBDIR)/\n+endif\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(STDLIB_GLOB_$(2)),$$(notdir $$@))\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(STDLIB_RGLOB_$(2)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) --out-dir $$(@D) $$< && touch $$@\n@@ -71,6 +75,10 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_EXTRALIB_$(2)): \\\n \t\t$$(TSREQ$(1)_T_$(2)_H_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n+ifeq ($(1),0)\n+\t$$(Q)cp $(3)/stage0/$(CFG_LIBDIR)/rustlib/$(2)/$(CFG_LIBDIR)/* \\\n+\t\t$(3)/stage0/$(CFG_LIBDIR)/rustc/$(2)/$(CFG_LIBDIR)/\n+endif\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(EXTRALIB_GLOB_$(2)),$$(notdir $$@))\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(EXTRALIB_RGLOB_$(2)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) --out-dir $$(@D) $$< && touch $$@\n@@ -127,6 +135,10 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBSYNTAX_$(3)): \\\n \t\t$$(TEXTRALIB_DEFAULT$(1)_T_$(2)_H_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n+ifeq ($(1),0)\n+\t$$(Q)cp $(3)/stage0/$(CFG_LIBDIR)/rustlib/$(2)/$(CFG_LIBDIR)/* \\\n+\t\t$(3)/stage0/$(CFG_LIBDIR)/rustc/$(2)/$(CFG_LIBDIR)/\n+endif\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBSYNTAX_GLOB_$(2)),$$(notdir $$@))\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBSYNTAX_RGLOB_$(2)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) $(BORROWCK) --out-dir $$(@D) $$< && touch $$@\n@@ -152,6 +164,10 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3)):\t\t\\\n                 $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_RUSTLLVM_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n+ifeq ($(1),0)\n+\t$$(Q)cp $(3)/stage0/$(CFG_LIBDIR)/rustlib/$(2)/$(CFG_LIBDIR)/* \\\n+\t\t$(3)/stage0/$(CFG_LIBDIR)/rustc/$(2)/$(CFG_LIBDIR)/\n+endif\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_GLOB_$(2)),$$(notdir $$@))\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_RGLOB_$(2)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) \\\n@@ -166,6 +182,10 @@ $$(TBIN$(1)_T_$(2)_H_$(3))/rustc$$(X_$(3)):\t\t\t\\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3)) \\\n \t\t| $$(TBIN$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n+ifeq ($(1),0)\n+\t$$(Q)cp $(3)/stage0/$(CFG_LIBDIR)/rustlib/$(2)/$(CFG_LIBDIR)/* \\\n+\t\t$(3)/stage0/$(CFG_LIBDIR)/rustc/$(2)/$(CFG_LIBDIR)/\n+endif\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) --cfg rustc -o $$@ $$<\n ifdef CFG_ENABLE_PAX_FLAGS\n \t@$$(call E, apply PaX flags: $$@)"}, {"sha": "45e45c42d8407afd3fcebd29d325dde0e58e6a19", "filename": "mk/tests.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "patch": "@@ -108,7 +108,7 @@ ifdef CFG_WINDOWSY_$(1)\n                stage2/$$(CFG_LIBDIR), \\\n                $$(if $$(findstring stage3,$$(1)), \\\n                     stage3/$$(CFG_LIBDIR), \\\n-               )))))/rustc/$$(CFG_BUILD)/$$(CFG_LIBDIR)\n+               )))))/$$(CFG_RUSTLIBDIR)/$$(CFG_BUILD)/$$(CFG_LIBDIR)\n   CFG_RUN_TEST_$(1)=$$(call CFG_RUN_$(1),$$(call CFG_TESTLIB_$(1),$$(1),$$(3)),$$(1))\n endif\n "}, {"sha": "a0785cbad2b58e7b4cd2109343ceb2ed0c2ded0e", "filename": "src/etc/local_stage0.sh", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/src%2Fetc%2Flocal_stage0.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/src%2Fetc%2Flocal_stage0.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flocal_stage0.sh?ref=4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "patch": "@@ -2,6 +2,7 @@\n \n TARG_DIR=$1\n PREFIX=$2\n+RUSTLIBDIR=$3\n \n LIB_DIR=lib\n LIB_PREFIX=lib\n@@ -43,7 +44,7 @@ if [ -z $TARG_DIR ]; then\n fi\n \n cp ${PREFIX}/bin/rustc${BIN_SUF} ${TARG_DIR}/stage0/bin/\n-cp ${PREFIX}/${LIB_DIR}/rustc/${TARG_DIR}/${LIB_DIR}/* ${TARG_DIR}/stage0/${LIB_DIR}/\n+cp ${PREFIX}/${LIB_DIR}/${RUSTLIBDIR}/${TARG_DIR}/${LIB_DIR}/* ${TARG_DIR}/stage0/${LIB_DIR}/\n cp ${PREFIX}/${LIB_DIR}/${LIB_PREFIX}extra*${LIB_SUF} ${TARG_DIR}/stage0/${LIB_DIR}/\n cp ${PREFIX}/${LIB_DIR}/${LIB_PREFIX}rust*${LIB_SUF} ${TARG_DIR}/stage0/${LIB_DIR}/\n cp ${PREFIX}/${LIB_DIR}/${LIB_PREFIX}std*${LIB_SUF} ${TARG_DIR}/stage0/${LIB_DIR}/"}, {"sha": "ecf4dd95cecb4b8ff8e4546511f753290631c2ab", "filename": "src/librustc/back/rpath.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/src%2Flibrustc%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/src%2Flibrustc%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Frpath.rs?ref=4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "patch": "@@ -185,6 +185,7 @@ mod test {\n     use back::rpath::{get_absolute_rpath, get_install_prefix_rpath};\n     use back::rpath::{minimize_rpaths, rpaths_to_flags, get_rpath_relative_to_output};\n     use syntax::abi;\n+    use metadata::filesearch;\n \n     #[test]\n     fn test_rpaths_to_flags() {\n@@ -196,7 +197,9 @@ mod test {\n     fn test_prefix_rpath() {\n         let res = get_install_prefix_rpath(\"triple\");\n         let mut d = Path::new(env!(\"CFG_PREFIX\"));\n-        d.push(\"lib/rustc/triple/lib\");\n+        d.push(\"lib\");\n+        d.push(filesearch::rustlibdir());\n+        d.push(\"triple/lib\");\n         debug!(\"test_prefix_path: {} vs. {}\",\n                res,\n                d.display());"}, {"sha": "3e99cbeb7274f99b5129940a41c29bf61c8dc68e", "filename": "src/librustc/metadata/filesearch.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs?ref=4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "patch": "@@ -157,7 +157,7 @@ pub fn relative_target_lib_path(target_triple: &str) -> Path {\n     let dir = libdir();\n     let mut p = Path::new(dir.as_slice());\n     assert!(p.is_relative());\n-    p.push(\"rustc\");\n+    p.push(rustlibdir());\n     p.push(target_triple);\n     p.push(dir);\n     p\n@@ -247,3 +247,9 @@ pub fn rust_path() -> ~[Path] {\n pub fn libdir() -> ~str {\n     (env!(\"CFG_LIBDIR\")).to_owned()\n }\n+\n+// The name of rustc's own place to organize libraries.\n+// Used to be \"rustc\", now the default is \"rustlib\"\n+pub fn rustlibdir() -> ~str {\n+    (env!(\"CFG_RUSTLIBDIR\")).to_owned()\n+}"}, {"sha": "a1b8a48108c99ed36d30925fa3fbeef0054177d8", "filename": "src/librustpkg/context.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/src%2Flibrustpkg%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/src%2Flibrustpkg%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Fcontext.rs?ref=4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "patch": "@@ -12,6 +12,7 @@\n \n use extra::workcache;\n use rustc::driver::session;\n+use rustc::metadata::filesearch::rustlibdir;\n \n use std::hashmap::HashSet;\n \n@@ -168,13 +169,13 @@ impl Context {\n     }\n }\n \n-/// We assume that if ../../rustc exists, then we're running\n+/// We assume that if ../../rustlib exists, then we're running\n /// rustpkg from a Rust target directory. This is part of a\n /// kludgy hack used to adjust the sysroot.\n pub fn in_target(sysroot: &Path) -> bool {\n     debug!(\"Checking whether {} is in target\", sysroot.display());\n     let mut p = sysroot.dir_path();\n-    p.set_filename(\"rustc\");\n+    p.set_filename(rustlibdir());\n     p.is_dir()\n }\n "}, {"sha": "ffa5f1e9d5b07e366d29396650491c7e6ee8e8d7", "filename": "src/librustpkg/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/src%2Flibrustpkg%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e622becdc5fb4e07f95550c3a59fd909b97e5bb/src%2Flibrustpkg%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Ftests.rs?ref=4e622becdc5fb4e07f95550c3a59fd909b97e5bb", "patch": "@@ -33,7 +33,7 @@ use path_util::{target_executable_in_workspace, target_test_in_workspace,\n                built_library_in_workspace, built_executable_in_workspace, target_build_dir,\n                chmod_read_only, platform_library_name};\n use rustc::back::link::get_cc_prog;\n-use rustc::metadata::filesearch::rust_path;\n+use rustc::metadata::filesearch::{rust_path, libdir, rustlibdir};\n use rustc::driver::session;\n use rustc::driver::driver::{build_session, build_session_options, host_triple, optgroups};\n use syntax::diagnostic;\n@@ -220,7 +220,7 @@ fn test_sysroot() -> Path {\n fn rustpkg_exec() -> Path {\n     // Ugh\n     let first_try = test_sysroot().join_many(\n-        [~\"lib\", ~\"rustc\", host_triple(), ~\"bin\", ~\"rustpkg\"]);\n+        [libdir(), rustlibdir(), host_triple(), ~\"bin\", ~\"rustpkg\"]);\n     if is_executable(&first_try) {\n         first_try\n     }"}]}