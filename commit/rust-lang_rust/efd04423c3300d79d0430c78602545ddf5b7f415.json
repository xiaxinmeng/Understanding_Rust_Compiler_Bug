{"sha": "efd04423c3300d79d0430c78602545ddf5b7f415", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZDA0NDIzYzMzMDBkNzlkMDQzMGM3ODYwMjU0NWRkZjViN2Y0MTU=", "commit": {"author": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-03-25T03:41:34Z"}, "committer": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-03-25T03:41:34Z"}, "message": "Add backticks", "tree": {"sha": "8553f3ff47efee5015b2a7896ab659bee1a955ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8553f3ff47efee5015b2a7896ab659bee1a955ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efd04423c3300d79d0430c78602545ddf5b7f415", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efd04423c3300d79d0430c78602545ddf5b7f415", "html_url": "https://github.com/rust-lang/rust/commit/efd04423c3300d79d0430c78602545ddf5b7f415", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efd04423c3300d79d0430c78602545ddf5b7f415/comments", "author": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1af952cc490b62a1f43f48c9fd809cf99aff2630", "url": "https://api.github.com/repos/rust-lang/rust/commits/1af952cc490b62a1f43f48c9fd809cf99aff2630", "html_url": "https://github.com/rust-lang/rust/commit/1af952cc490b62a1f43f48c9fd809cf99aff2630"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "bc2c9f522d3b0c35c69b3d33028a9f24923efaf4", "filename": "src/libstd/net/addr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/efd04423c3300d79d0430c78602545ddf5b7f415/src%2Flibstd%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efd04423c3300d79d0430c78602545ddf5b7f415/src%2Flibstd%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Faddr.rs?ref=efd04423c3300d79d0430c78602545ddf5b7f415", "patch": "@@ -64,7 +64,7 @@ pub enum SocketAddr {\n ///\n /// See [`SocketAddr`] for a type encompassing both IPv4 and IPv6 socket addresses.\n ///\n-/// The size of a SocketAddrV4 struct may vary depending on the target operating\n+/// The size of a `SocketAddrV4` struct may vary depending on the target operating\n /// system.\n ///\n /// [IETF RFC 793]: https://tools.ietf.org/html/rfc793\n@@ -94,7 +94,7 @@ pub struct SocketAddrV4 { inner: c::sockaddr_in }\n ///\n /// See [`SocketAddr`] for a type encompassing both IPv4 and IPv6 socket addresses.\n ///\n-/// The size of a SocketAddrV6 struct may vary depending on the target operating\n+/// The size of a `SocketAddrV6` struct may vary depending on the target operating\n /// system.\n ///\n /// [IETF RFC 2553, Section 3.3]: https://tools.ietf.org/html/rfc2553#section-3.3"}, {"sha": "031fae6d59bf8be0407bf999e731fd1e48e20494", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/efd04423c3300d79d0430c78602545ddf5b7f415/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efd04423c3300d79d0430c78602545ddf5b7f415/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=efd04423c3300d79d0430c78602545ddf5b7f415", "patch": "@@ -26,7 +26,7 @@ use sys_common::{AsInner, FromInner};\n /// This enum can contain either an [`Ipv4Addr`] or an [`Ipv6Addr`], see their\n /// respective documentation for more details.\n ///\n-/// The size of an IpAddr instance may vary depending on the target operating\n+/// The size of an `IpAddr` instance may vary depending on the target operating\n /// system.\n ///\n /// [`Ipv4Addr`]: ../../std/net/struct.Ipv4Addr.html\n@@ -64,7 +64,7 @@ pub enum IpAddr {\n ///\n /// See [`IpAddr`] for a type encompassing both IPv4 and IPv6 addresses.\n ///\n-/// The size of an Ipv4Addr struct may vary depending on the target operating\n+/// The size of an `Ipv4Addr` struct may vary depending on the target operating\n /// system.\n ///\n /// [IETF RFC 791]: https://tools.ietf.org/html/rfc791\n@@ -99,7 +99,7 @@ pub struct Ipv4Addr {\n ///\n /// See [`IpAddr`] for a type encompassing both IPv4 and IPv6 addresses.\n ///\n-/// The size of an Ipv6Addr struct may vary depending on the target operating\n+/// The size of an `Ipv6Addr` struct may vary depending on the target operating\n /// system.\n ///\n /// [IETF RFC 4291]: https://tools.ietf.org/html/rfc4291"}, {"sha": "7256ac43e27e48272f97a59d9675176bfd58ecce", "filename": "src/libstd/time.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/efd04423c3300d79d0430c78602545ddf5b7f415/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efd04423c3300d79d0430c78602545ddf5b7f415/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=efd04423c3300d79d0430c78602545ddf5b7f415", "patch": "@@ -49,7 +49,7 @@ pub use core::time::Duration;\n /// allows measuring the duration between two instants (or comparing two\n /// instants).\n ///\n-/// The size of an Instant struct may vary depending on the target operating\n+/// The size of an `Instant` struct may vary depending on the target operating\n /// system.\n ///\n /// Example:\n@@ -91,7 +91,7 @@ pub struct Instant(time::Instant);\n /// fixed point in time, a `SystemTime` can be converted to a human-readable time,\n /// or perhaps some other string representation.\n ///\n-/// The size of a SystemTime struct may vary depending on the target operating\n+/// The size of a `SystemTime` struct may vary depending on the target operating\n /// system.\n ///\n /// [`Instant`]: ../../std/time/struct.Instant.html"}]}