{"sha": "cf7a9ae8699033c5d2dd860dc0b2360851c49356", "node_id": "C_kwDOAAsO6NoAKGNmN2E5YWU4Njk5MDMzYzVkMmRkODYwZGMwYjIzNjA4NTFjNDkzNTY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-09T22:00:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-09T22:00:26Z"}, "message": "Rollup merge of #100040 - ChrisDenton:broken-pipe, r=davidtwco\n\nError on broken pipe but do not backtrace or ICE\n\nWindows will report a broken pipe as a normal error which in turn `println!` will panic on. Currently this causes rustc to produce a backtrace and ICE. However, this is not a bug with rustc so a backtrace is overly verbose and ultimately unhelpful to the user.\n\nKind of fixes #98700. Although this is admittedly a bit of a hack because at panic time all we have is a string to inspect. On zulip it was suggested that libstd might someday provide a way to indicate a soft panic but that day isn't today.", "tree": {"sha": "1086193f641d33bcf8810791270b0cf2ead7eb89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1086193f641d33bcf8810791270b0cf2ead7eb89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf7a9ae8699033c5d2dd860dc0b2360851c49356", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi8tj6CRBK7hj4Ov3rIwAAXjIIAIW0HVsHmVfNiOQ1guNVFjsT\nuSEEXJuRq+VlaHZfu12mPocRrb70VKcfs87c1wsV1Zkq2ZnOYJgs72zfq6eRUoZy\nHNGigoklRo+agj56mH8O0kDNxYtpB67LWMr63iSzw+Xc8s/a1wnocw4jtNardb3w\nEYJGLku6o0t/BTJpxgCV++g2anm9p48/C7ylc6L+FSGAPeggkNBeAjaoNHYY1rBX\nnizCkNRDgGLyHGTftYcWv+am6JqkQGHFLgpZj9hakd0Nf5ETbmP6EGH07nfV1BPO\nDIlJ+a0GyiSMajsdnANA+urIAchMhHowvvf4sg+FIwAoD14UWLsfJ/8YWyMsSKQ=\n=ZYr6\n-----END PGP SIGNATURE-----\n", "payload": "tree 1086193f641d33bcf8810791270b0cf2ead7eb89\nparent 0dc39c7bd9795927b903c8c24e89a00788ce3e33\nparent 27b9b166d13024ca103dc8d611724b06c32302da\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1660082426 +0200\ncommitter GitHub <noreply@github.com> 1660082426 +0200\n\nRollup merge of #100040 - ChrisDenton:broken-pipe, r=davidtwco\n\nError on broken pipe but do not backtrace or ICE\n\nWindows will report a broken pipe as a normal error which in turn `println!` will panic on. Currently this causes rustc to produce a backtrace and ICE. However, this is not a bug with rustc so a backtrace is overly verbose and ultimately unhelpful to the user.\n\nKind of fixes #98700. Although this is admittedly a bit of a hack because at panic time all we have is a string to inspect. On zulip it was suggested that libstd might someday provide a way to indicate a soft panic but that day isn't today.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf7a9ae8699033c5d2dd860dc0b2360851c49356", "html_url": "https://github.com/rust-lang/rust/commit/cf7a9ae8699033c5d2dd860dc0b2360851c49356", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf7a9ae8699033c5d2dd860dc0b2360851c49356/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dc39c7bd9795927b903c8c24e89a00788ce3e33", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dc39c7bd9795927b903c8c24e89a00788ce3e33", "html_url": "https://github.com/rust-lang/rust/commit/0dc39c7bd9795927b903c8c24e89a00788ce3e33"}, {"sha": "27b9b166d13024ca103dc8d611724b06c32302da", "url": "https://api.github.com/repos/rust-lang/rust/commits/27b9b166d13024ca103dc8d611724b06c32302da", "html_url": "https://github.com/rust-lang/rust/commit/27b9b166d13024ca103dc8d611724b06c32302da"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "94639bf8e1ee4f1d122cd6bf52e382d9e79d52dd", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cf7a9ae8699033c5d2dd860dc0b2360851c49356/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf7a9ae8699033c5d2dd860dc0b2360851c49356/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=cf7a9ae8699033c5d2dd860dc0b2360851c49356", "patch": "@@ -1148,6 +1148,17 @@ static DEFAULT_HOOK: LazyLock<Box<dyn Fn(&panic::PanicInfo<'_>) + Sync + Send +\n     LazyLock::new(|| {\n         let hook = panic::take_hook();\n         panic::set_hook(Box::new(|info| {\n+            // If the error was caused by a broken pipe then this is not a bug.\n+            // Write the error and return immediately. See #98700.\n+            #[cfg(windows)]\n+            if let Some(msg) = info.payload().downcast_ref::<String>() {\n+                if msg.starts_with(\"failed printing to stdout: \") && msg.ends_with(\"(os error 232)\")\n+                {\n+                    early_error_no_abort(ErrorOutputType::default(), &msg);\n+                    return;\n+                }\n+            };\n+\n             // Invoke the default handler, which prints the actual panic message and optionally a backtrace\n             (*DEFAULT_HOOK)(info);\n "}]}