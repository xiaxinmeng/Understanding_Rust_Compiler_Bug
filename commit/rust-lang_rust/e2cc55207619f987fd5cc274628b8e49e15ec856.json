{"sha": "e2cc55207619f987fd5cc274628b8e49e15ec856", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyY2M1NTIwNzYxOWY5ODdmZDVjYzI3NDYyOGI4ZTQ5ZTE1ZWM4NTY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-08T11:51:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-08T11:51:25Z"}, "message": "Remove dead code", "tree": {"sha": "58c7129484d48fdaebf75acee52f89a489f29c27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58c7129484d48fdaebf75acee52f89a489f29c27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2cc55207619f987fd5cc274628b8e49e15ec856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2cc55207619f987fd5cc274628b8e49e15ec856", "html_url": "https://github.com/rust-lang/rust/commit/e2cc55207619f987fd5cc274628b8e49e15ec856", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2cc55207619f987fd5cc274628b8e49e15ec856/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b37c6a746b6c7cf85dc1ec6e40ac41455b8f2ec0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b37c6a746b6c7cf85dc1ec6e40ac41455b8f2ec0", "html_url": "https://github.com/rust-lang/rust/commit/b37c6a746b6c7cf85dc1ec6e40ac41455b8f2ec0"}], "stats": {"total": 33, "additions": 0, "deletions": 33}, "files": [{"sha": "7ac1bf461a4fa67cc37ac4262eb3105f96e73afa", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e2cc55207619f987fd5cc274628b8e49e15ec856/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2cc55207619f987fd5cc274628b8e49e15ec856/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=e2cc55207619f987fd5cc274628b8e49e15ec856", "patch": "@@ -507,30 +507,6 @@ impl Function {\n         db.function_data(self.id).params.clone()\n     }\n \n-    /// The containing impl block, if this is a method.\n-    pub fn impl_block(self, db: &impl DefDatabase) -> Option<ImplBlock> {\n-        match self.container(db) {\n-            Some(Container::ImplBlock(it)) => Some(it),\n-            _ => None,\n-        }\n-    }\n-\n-    /// The containing trait, if this is a trait method definition.\n-    pub fn parent_trait(self, db: &impl DefDatabase) -> Option<Trait> {\n-        match self.container(db) {\n-            Some(Container::Trait(it)) => Some(it),\n-            _ => None,\n-        }\n-    }\n-\n-    pub fn container(self, db: &impl DefDatabase) -> Option<Container> {\n-        match self.id.lookup(db).container {\n-            ContainerId::TraitId(it) => Some(Container::Trait(it.into())),\n-            ContainerId::ImplId(it) => Some(Container::ImplBlock(it.into())),\n-            ContainerId::ModuleId(_) => None,\n-        }\n-    }\n-\n     pub fn diagnostics(self, db: &impl HirDatabase, sink: &mut DiagnosticSink) {\n         let infer = db.infer(self.id.into());\n         infer.add_diagnostics(db, self.id, sink);\n@@ -709,15 +685,6 @@ impl AssocItem {\n             AssocItem::TypeAlias(t) => t.module(db),\n         }\n     }\n-\n-    pub fn container(self, db: &impl DefDatabase) -> Container {\n-        match self {\n-            AssocItem::Function(f) => f.container(db),\n-            AssocItem::Const(c) => c.container(db),\n-            AssocItem::TypeAlias(t) => t.container(db),\n-        }\n-        .expect(\"AssocItem without container\")\n-    }\n }\n \n #[derive(Clone, Copy, PartialEq, Eq, Debug, Hash)]"}]}