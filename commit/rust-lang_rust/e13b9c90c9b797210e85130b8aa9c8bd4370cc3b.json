{"sha": "e13b9c90c9b797210e85130b8aa9c8bd4370cc3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxM2I5YzkwYzliNzk3MjEwZTg1MTMwYjhhYTljOGJkNDM3MGNjM2I=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-09-03T11:30:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-03T11:30:50Z"}, "message": "Rollup merge of #88610 - m-ou-se:array-into-iter-docs, r=Amanieu\n\nUpdate outdated docs of array::IntoIter::new.", "tree": {"sha": "0a8aefb5862a0bdb01af0042a514f02e0e6ff774", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a8aefb5862a0bdb01af0042a514f02e0e6ff774"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e13b9c90c9b797210e85130b8aa9c8bd4370cc3b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhMgdrCRBK7hj4Ov3rIwAAkVIIADu6stnidkwG23cqLMnUbggU\nqIRpu69E1Aw2YppuiGiRxyxZiVOb+a9AJCRFeYr07NMrBm+8CMtjwy5eTfYsD9Gz\nOJF05RIdYUy/yvh9x1EXnw1QrtZ+D85JdiU5ZNBgX7FhUIf5LR/xT2F9tFpYnTQc\nf2gv48j6SGyzxNq5Knk6i4o582iK7RAQtYh29w6ufWPAH22OGvHr9j/rrUwmhUSe\nGTW/fRhZqsA/VdT/9m6cKTTNCOooGfuFOAZd1ZcziloV8tQIWEqYhZWHHDm+0fVX\nbV0lI6nbPROOQ1OzELdLblhXT61rBtkD4TLnSKv7QFAzl3Ad8NKlX+f+HMy6PY4=\n=2Ddj\n-----END PGP SIGNATURE-----\n", "payload": "tree 0a8aefb5862a0bdb01af0042a514f02e0e6ff774\nparent 01775b60279e543c34d45800606033a51bbd7a57\nparent 5ea45f35c07ff8a52483ecdd697e9d23fdf53666\nauthor Mara Bos <m-ou.se@m-ou.se> 1630668650 +0200\ncommitter GitHub <noreply@github.com> 1630668650 +0200\n\nRollup merge of #88610 - m-ou-se:array-into-iter-docs, r=Amanieu\n\nUpdate outdated docs of array::IntoIter::new.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e13b9c90c9b797210e85130b8aa9c8bd4370cc3b", "html_url": "https://github.com/rust-lang/rust/commit/e13b9c90c9b797210e85130b8aa9c8bd4370cc3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e13b9c90c9b797210e85130b8aa9c8bd4370cc3b/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01775b60279e543c34d45800606033a51bbd7a57", "url": "https://api.github.com/repos/rust-lang/rust/commits/01775b60279e543c34d45800606033a51bbd7a57", "html_url": "https://github.com/rust-lang/rust/commit/01775b60279e543c34d45800606033a51bbd7a57"}, {"sha": "5ea45f35c07ff8a52483ecdd697e9d23fdf53666", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ea45f35c07ff8a52483ecdd697e9d23fdf53666", "html_url": "https://github.com/rust-lang/rust/commit/5ea45f35c07ff8a52483ecdd697e9d23fdf53666"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "ecdbf09881985a9ee7e4ab997c3750994a6142cd", "filename": "library/core/src/array/iter.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e13b9c90c9b797210e85130b8aa9c8bd4370cc3b/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e13b9c90c9b797210e85130b8aa9c8bd4370cc3b/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fiter.rs?ref=e13b9c90c9b797210e85130b8aa9c8bd4370cc3b", "patch": "@@ -37,7 +37,7 @@ impl<T, const N: usize> IntoIter<T, N> {\n     /// Creates a new iterator over the given `array`.\n     ///\n     /// *Note*: this method might be deprecated in the future,\n-    /// after [`IntoIterator` is implemented for arrays][array-into-iter].\n+    /// since [`IntoIterator`] is now implemented for arrays.\n     ///\n     /// # Examples\n     ///\n@@ -48,8 +48,13 @@ impl<T, const N: usize> IntoIter<T, N> {\n     ///     // The type of `value` is an `i32` here, instead of `&i32`\n     ///     let _: i32 = value;\n     /// }\n+    ///\n+    /// // Since Rust 1.53, arrays implement IntoIterator directly:\n+    /// for value in [1, 2, 3, 4, 5] {\n+    ///     // The type of `value` is an `i32` here, instead of `&i32`\n+    ///     let _: i32 = value;\n+    /// }\n     /// ```\n-    /// [array-into-iter]: https://github.com/rust-lang/rust/pull/65819\n     #[stable(feature = \"array_value_iter\", since = \"1.51.0\")]\n     pub fn new(array: [T; N]) -> Self {\n         // SAFETY: The transmute here is actually safe. The docs of `MaybeUninit`"}]}