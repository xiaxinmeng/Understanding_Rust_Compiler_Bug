{"sha": "96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2YmNkYWM5ZTQ4M2UwZTdkOGEwMmY4MmMwYWI5NjFhNTM2Y2FmYzQ=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-06-25T02:30:20Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-07-07T22:56:27Z"}, "message": "Make sufficiently old or low-impact compatibility lints deny-by-default", "tree": {"sha": "008bb8627d6179ea901734ded8806ff6bfdac268", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/008bb8627d6179ea901734ded8806ff6bfdac268"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "html_url": "https://github.com/rust-lang/rust/commit/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "affb8ee8316c7720a1f752d70d3fa2542100f425", "url": "https://api.github.com/repos/rust-lang/rust/commits/affb8ee8316c7720a1f752d70d3fa2542100f425", "html_url": "https://github.com/rust-lang/rust/commit/affb8ee8316c7720a1f752d70d3fa2542100f425"}], "stats": {"total": 97, "additions": 24, "deletions": 73}, "files": [{"sha": "dd6e78b87afb95eea87986c2252623611fdac11f", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -144,20 +144,20 @@ declare_lint! {\n \n declare_lint! {\n     pub RESOLVE_TRAIT_ON_DEFAULTED_UNIT,\n-    Warn,\n+    Deny,\n     \"attempt to resolve a trait on an expression whose type cannot be inferred but which \\\n      currently defaults to ()\"\n }\n \n declare_lint! {\n     pub SAFE_EXTERN_STATICS,\n-    Warn,\n+    Deny,\n     \"safe access to extern statics was erroneously allowed\"\n }\n \n declare_lint! {\n     pub PATTERNS_IN_FNS_WITHOUT_BODY,\n-    Warn,\n+    Deny,\n     \"patterns in functions without body were erroneously allowed\"\n }\n \n@@ -169,14 +169,14 @@ declare_lint! {\n \n declare_lint! {\n     pub LEGACY_DIRECTORY_OWNERSHIP,\n-    Warn,\n+    Deny,\n     \"non-inline, non-`#[path]` modules (e.g. `mod foo;`) were erroneously allowed in some files \\\n      not named `mod.rs`\"\n }\n \n declare_lint! {\n     pub LEGACY_IMPORTS,\n-    Warn,\n+    Deny,\n     \"detects names that resolve to ambiguous glob imports with RFC 1560\"\n }\n \n@@ -188,13 +188,13 @@ declare_lint! {\n \n declare_lint! {\n     pub MISSING_FRAGMENT_SPECIFIER,\n-    Warn,\n+    Deny,\n     \"detects missing fragment specifiers in unused `macro_rules!` patterns\"\n }\n \n declare_lint! {\n     pub PARENTHESIZED_PARAMS_IN_TYPES_AND_MODULES,\n-    Warn,\n+    Deny,\n     \"detects parenthesized generic parameters in type and module names\"\n }\n "}, {"sha": "3f4e1cce548b9e79dc12e0271ac5402ed658f015", "filename": "src/test/compile-fail/defaulted-unit-warning.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fdefaulted-unit-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fdefaulted-unit-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdefaulted-unit-warning.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -8,9 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(dead_code)]\n-#![allow(unreachable_code)]\n-#![deny(resolve_trait_on_defaulted_unit)]\n+#![allow(unused)]\n \n trait Deserialize: Sized {\n     fn deserialize() -> Result<Self, String>;\n@@ -38,4 +36,3 @@ fn smeg() {\n fn main() {\n     smeg();\n }\n-"}, {"sha": "519792dfa3a8feaada3f784e84433c6338aab89c", "filename": "src/test/compile-fail/directory_ownership/backcompat-warnings.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fbackcompat-warnings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fbackcompat-warnings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fbackcompat-warnings.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -10,12 +10,8 @@\n \n // error-pattern: cannot declare a new module at this location\n // error-pattern: will become a hard error\n-// error-pattern: compilation successful\n-\n-#![feature(rustc_attrs)]\n \n #[path=\"mod_file_not_owning_aux3.rs\"]\n mod foo;\n \n-#[rustc_error]\n fn main() {}"}, {"sha": "95bdf5e9b156557e5c10327e9d0c1fe658c154e5", "filename": "src/test/compile-fail/imports/rfc-1560-warning-cycle.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fimports%2Frfc-1560-warning-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fimports%2Frfc-1560-warning-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimports%2Frfc-1560-warning-cycle.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(rustc_attrs)]\n #![allow(unused)]\n \n pub struct Foo;\n@@ -20,12 +19,11 @@ mod bar {\n         use *; //~ NOTE `Foo` could refer to the name imported here\n         use bar::*; //~ NOTE `Foo` could also refer to the name imported here\n         fn f(_: Foo) {}\n-        //~^ WARN `Foo` is ambiguous\n+        //~^ ERROR `Foo` is ambiguous\n         //~| WARN hard error in a future release\n         //~| NOTE see issue #38260\n-        //~| NOTE #[warn(legacy_imports)] on by default\n+        //~| NOTE #[deny(legacy_imports)] on by default\n     }\n }\n \n-#[rustc_error]\n-fn main() {} //~ ERROR compilation successful\n+fn main() {}"}, {"sha": "0e917ad95d95b264bd7eaac75557aa616363c8f8", "filename": "src/test/compile-fail/issue-32995-2.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fissue-32995-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fissue-32995-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32995-2.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -8,23 +8,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![deny(parenthesized_params_in_types_and_modules)]\n-//~^ NOTE lint level defined here\n-//~| NOTE lint level defined here\n-//~| NOTE lint level defined here\n-#![allow(dead_code, unused_variables)]\n #![feature(conservative_impl_trait)]\n+#![allow(unused)]\n \n fn main() {\n     { fn f<X: ::std::marker()::Send>() {} }\n     //~^ ERROR parenthesized parameters may only be used with a trait\n     //~| WARN previously accepted\n-    //~| NOTE issue #42238\n \n     { fn f() -> impl ::std::marker()::Send { } }\n     //~^ ERROR parenthesized parameters may only be used with a trait\n     //~| WARN previously accepted\n-    //~| NOTE issue #42238\n }\n \n #[derive(Clone)]\n@@ -33,4 +27,3 @@ struct X;\n impl ::std::marker()::Copy for X {}\n //~^ ERROR parenthesized parameters may only be used with a trait\n //~| WARN previously accepted\n-//~| NOTE issue #42238"}, {"sha": "4b7f82943bac107fc1d4f9db620661de1422b984", "filename": "src/test/compile-fail/issue-32995.rs", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fissue-32995.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fissue-32995.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32995.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -8,26 +8,16 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![deny(parenthesized_params_in_types_and_modules)]\n-//~^ NOTE lint level defined here\n-//~| NOTE lint level defined here\n-//~| NOTE lint level defined here\n-//~| NOTE lint level defined here\n-//~| NOTE lint level defined here\n-//~| NOTE lint level defined here\n-//~| NOTE lint level defined here\n-#![allow(dead_code, unused_variables)]\n+#![allow(unused)]\n \n fn main() {\n     let x: usize() = 1;\n     //~^ ERROR parenthesized parameters may only be used with a trait\n     //~| WARN previously accepted\n-    //~| NOTE issue #42238\n \n     let b: ::std::boxed()::Box<_> = Box::new(1);\n     //~^ ERROR parenthesized parameters may only be used with a trait\n     //~| WARN previously accepted\n-    //~| NOTE issue #42238\n \n     macro_rules! pathexpr {\n         ($p:path) => { $p }\n@@ -36,27 +26,22 @@ fn main() {\n     let p = pathexpr!(::std::str()::from_utf8)(b\"foo\").unwrap();\n     //~^ ERROR parenthesized parameters may only be used with a trait\n     //~| WARN previously accepted\n-    //~| NOTE issue #42238\n \n     let p = pathexpr!(::std::str::from_utf8())(b\"foo\").unwrap();\n     //~^ ERROR parenthesized parameters may only be used with a trait\n     //~| WARN previously accepted\n-    //~| NOTE issue #42238\n \n     let o : Box<::std::marker()::Send> = Box::new(1);\n     //~^ ERROR parenthesized parameters may only be used with a trait\n     //~| WARN previously accepted\n-    //~| NOTE issue #42238\n \n     let o : Box<Send + ::std::marker()::Sync> = Box::new(1);\n     //~^ ERROR parenthesized parameters may only be used with a trait\n     //~| WARN previously accepted\n-    //~| NOTE issue #42238\n }\n \n fn foo<X:Default>() {\n     let d : X() = Default::default();\n     //~^ ERROR parenthesized parameters may only be used with a trait\n     //~| WARN previously accepted\n-    //~| NOTE issue #42238\n }"}, {"sha": "bd352b204bddf2339f924fc62dada670e8652008", "filename": "src/test/compile-fail/issue-38293.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fissue-38293.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fissue-38293.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-38293.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -11,7 +11,6 @@\n // Test that `fn foo::bar::{self}` only imports `bar` in the type namespace.\n \n #![allow(unused)]\n-#![deny(legacy_imports)]\n \n mod foo {\n     pub fn f() { }"}, {"sha": "56bfe27a4ffd05812c2887038cc67414917b8d03", "filename": "src/test/compile-fail/issue-39404.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fissue-39404.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fissue-39404.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-39404.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -8,12 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![deny(missing_fragment_specifier)] //~ NOTE lint level defined here\n-#![allow(unused_macros)]\n+#![allow(unused)]\n \n macro_rules! m { ($i) => {} }\n //~^ ERROR missing fragment specifier\n //~| WARN previously accepted\n-//~| NOTE issue #40107\n \n fn main() {}"}, {"sha": "ca5ba4c063c7136915cf8867d9bf4f7204b46160", "filename": "src/test/compile-fail/no-patterns-in-args-2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fno-patterns-in-args-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fno-patterns-in-args-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-patterns-in-args-2.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -8,15 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![deny(patterns_in_fns_without_body)]\n-\n trait Tr {\n     fn f1(mut arg: u8); //~ ERROR patterns aren't allowed in methods without bodies\n                         //~^ WARN was previously accepted\n     fn f2(&arg: u8); //~ ERROR patterns aren't allowed in methods without bodies\n                      //~^ WARN was previously accepted\n     fn g1(arg: u8); // OK\n     fn g2(_: u8); // OK\n+    #[allow(anonymous_parameters)]\n     fn g3(u8); // OK\n }\n "}, {"sha": "ed8d5900776a9f79be0576a736a69b67d3718b75", "filename": "src/test/compile-fail/safe-extern-statics-mut.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fsafe-extern-statics-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fsafe-extern-statics-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsafe-extern-statics-mut.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -10,9 +10,6 @@\n \n // aux-build:extern-statics.rs\n \n-#![allow(unused)]\n-#![deny(safe_extern_statics)]\n-\n extern crate extern_statics;\n use extern_statics::*;\n "}, {"sha": "4d939f33c46dccd67ce03f54812efed0a7d2615c", "filename": "src/test/compile-fail/safe-extern-statics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fsafe-extern-statics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Fsafe-extern-statics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsafe-extern-statics.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -11,7 +11,6 @@\n // aux-build:extern-statics.rs\n \n #![allow(unused)]\n-#![deny(safe_extern_statics)]\n \n extern crate extern_statics;\n use extern_statics::*;"}, {"sha": "f424cbf0c32a646f3e4f9d513ee043fdbfcb98a3", "filename": "src/test/compile-fail/type-parameter-invalid-lint.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Ftype-parameter-invalid-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fcompile-fail%2Ftype-parameter-invalid-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-parameter-invalid-lint.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -10,7 +10,6 @@\n \n // gate-test-default_type_parameter_fallback\n \n-#![deny(invalid_type_param_default)]\n #![allow(unused)]\n \n fn avg<T=i32>(_: T) {}"}, {"sha": "eab01e9e9826870503ed9c419dee11c6ab061bd9", "filename": "src/test/ui/compare-method/proj-outlives-region.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fui%2Fcompare-method%2Fproj-outlives-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fui%2Fcompare-method%2Fproj-outlives-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fproj-outlives-region.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(dead_code)]\n-#![deny(extra_requirement_in_impl)]\n-\n // Test that we elaborate `Type: 'region` constraints and infer various important things.\n \n trait Master<'a, T: ?Sized, U> {"}, {"sha": "b1b5aedea70d848ff53e8b0e12db1ffc41cba173", "filename": "src/test/ui/compare-method/proj-outlives-region.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fui%2Fcompare-method%2Fproj-outlives-region.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fui%2Fcompare-method%2Fproj-outlives-region.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fproj-outlives-region.stderr?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -1,10 +1,10 @@\n error[E0276]: impl has stricter requirements than trait\n-  --> $DIR/proj-outlives-region.rs:22:5\n+  --> $DIR/proj-outlives-region.rs:19:5\n    |\n-17 |     fn foo() where T: 'a;\n+14 |     fn foo() where T: 'a;\n    |     --------------------- definition of `foo` from trait\n ...\n-22 |     fn foo() where U: 'a { } //~ ERROR E0276\n+19 |     fn foo() where U: 'a { } //~ ERROR E0276\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `U: 'a`\n    |\n    = note: #[deny(extra_requirement_in_impl)] on by default"}, {"sha": "e359f08096885c0034666d0620c0592e9b2b3889", "filename": "src/test/ui/compare-method/region-extra.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(dead_code)]\n-#![deny(extra_requirement_in_impl)]\n-\n // Test that you cannot add an extra where clause in the impl relating\n // two regions.\n "}, {"sha": "bc42b505818b88f7864f5d5399416c13e389eed4", "filename": "src/test/ui/compare-method/region-extra.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra.stderr?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -1,10 +1,10 @@\n error[E0276]: impl has stricter requirements than trait\n-  --> $DIR/region-extra.rs:22:5\n+  --> $DIR/region-extra.rs:19:5\n    |\n-18 |     fn foo();\n+15 |     fn foo();\n    |     --------- definition of `foo` from trait\n ...\n-22 |     fn foo() where 'a: 'b { }\n+19 |     fn foo() where 'a: 'b { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `'a: 'b`\n \n error: aborting due to previous error"}, {"sha": "719e15fdb61fe0f68cb9c618d94ad1e577d21005", "filename": "src/test/ui/compare-method/region-unrelated.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fui%2Fcompare-method%2Fregion-unrelated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fui%2Fcompare-method%2Fregion-unrelated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fregion-unrelated.rs?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(dead_code)]\n-#![deny(extra_requirement_in_impl)]\n-\n // Test that we elaborate `Type: 'region` constraints and infer various important things.\n \n trait Master<'a, T: ?Sized, U> {"}, {"sha": "b02aa5eeb2f54a44f99f3ba9868e0ec4cc7d149c", "filename": "src/test/ui/compare-method/region-unrelated.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fui%2Fcompare-method%2Fregion-unrelated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/96bcdac9e483e0e7d8a02f82c0ab961a536cafc4/src%2Ftest%2Fui%2Fcompare-method%2Fregion-unrelated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fregion-unrelated.stderr?ref=96bcdac9e483e0e7d8a02f82c0ab961a536cafc4", "patch": "@@ -1,10 +1,10 @@\n error[E0276]: impl has stricter requirements than trait\n-  --> $DIR/region-unrelated.rs:22:5\n+  --> $DIR/region-unrelated.rs:19:5\n    |\n-17 |     fn foo() where T: 'a;\n+14 |     fn foo() where T: 'a;\n    |     --------------------- definition of `foo` from trait\n ...\n-22 |     fn foo() where V: 'a { }\n+19 |     fn foo() where V: 'a { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `V: 'a`\n    |\n    = note: #[deny(extra_requirement_in_impl)] on by default"}]}