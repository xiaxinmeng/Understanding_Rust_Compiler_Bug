{"sha": "035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNTA3OGY3M2UzYThhOTExZjBiZDlhM2MyMjVhNGMzZDhlZTgwZmE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-26T16:56:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-26T16:56:55Z"}, "message": "Rollup merge of #62964 - RalfJung:ty-tests, r=Centril\n\nclarify and unify some type test names\n\n* `is_mutable_pointer`: use `ptr` suffix for consistency with `is_region_ptr`, `is_fn_ptr`, `is_unsafe_ptr`.\n* `is_pointer_sized`: the name is misleading as this only tests for pointer-sized *integers*, so rename to `is_ptr_sized_integral`.", "tree": {"sha": "4d4de7247da252dd51a9a4b25b6bde06cd721592", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d4de7247da252dd51a9a4b25b6bde06cd721592"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdOzDXCRBK7hj4Ov3rIwAAdHIIAFhBqFLwoTsT5E8IJypXBNJJ\n6oH8BBAYDa7Qg7Qvc48WYmzq/WNbGuo3vhQz9ethvS104QM0AQr8zEWjxga+eC/X\nMBr0vlRnwob6PTCUy2hr5++BsVoEbm33RZp8gY39tRTS6E5kjayywcAdGzic9es5\n90MggMLDvnwZG1SQqECDFeoSwfmvadEEp66Mbz+tQDNwJ1Ts7Ez8Q2QHkwStEAIk\n8qyYKBB0exDcRUXoVCWr5frLE81XJvT4r6/l6LH2hgfjbADaTXJM9lGNhMDNbrZD\nodYssMV2SrTb3pe46xrdSAqTxalQijPRZSukd+ydsaM7eyI3GRwYXHmrqrH/qow=\n=iXiz\n-----END PGP SIGNATURE-----\n", "payload": "tree 4d4de7247da252dd51a9a4b25b6bde06cd721592\nparent 1893ac6db3b20d9fdd777ec28b286987a13b543d\nparent 057606264f23872b18dca2d18ef02ca5936339b0\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1564160215 +0200\ncommitter GitHub <noreply@github.com> 1564160215 +0200\n\nRollup merge of #62964 - RalfJung:ty-tests, r=Centril\n\nclarify and unify some type test names\n\n* `is_mutable_pointer`: use `ptr` suffix for consistency with `is_region_ptr`, `is_fn_ptr`, `is_unsafe_ptr`.\n* `is_pointer_sized`: the name is misleading as this only tests for pointer-sized *integers*, so rename to `is_ptr_sized_integral`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa", "html_url": "https://github.com/rust-lang/rust/commit/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1893ac6db3b20d9fdd777ec28b286987a13b543d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1893ac6db3b20d9fdd777ec28b286987a13b543d", "html_url": "https://github.com/rust-lang/rust/commit/1893ac6db3b20d9fdd777ec28b286987a13b543d"}, {"sha": "057606264f23872b18dca2d18ef02ca5936339b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/057606264f23872b18dca2d18ef02ca5936339b0", "html_url": "https://github.com/rust-lang/rust/commit/057606264f23872b18dca2d18ef02ca5936339b0"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "77b8ebba216699a7121ecbe4c265c2cadecbff9d", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa", "patch": "@@ -1847,7 +1847,7 @@ impl<'tcx> TyS<'tcx> {\n     }\n \n     #[inline]\n-    pub fn is_mutable_pointer(&self) -> bool {\n+    pub fn is_mutable_ptr(&self) -> bool {\n         match self.sty {\n             RawPtr(TypeAndMut { mutbl: hir::Mutability::MutMutable, .. }) |\n             Ref(_, _, hir::Mutability::MutMutable) => true,\n@@ -2002,7 +2002,7 @@ impl<'tcx> TyS<'tcx> {\n     }\n \n     #[inline]\n-    pub fn is_pointer_sized(&self) -> bool {\n+    pub fn is_ptr_sized_integral(&self) -> bool {\n         match self.sty {\n             Int(ast::IntTy::Isize) | Uint(ast::UintTy::Usize) => true,\n             _ => false,"}, {"sha": "c767279dd8c7abad2b852e87174b9b0d33a9d2b2", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa", "patch": "@@ -536,7 +536,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         let base_ty = Place::ty_from(deref_base.base, deref_base.projection, self.body, tcx).ty;\n         if base_ty.is_unsafe_ptr() {\n             BorrowedContentSource::DerefRawPointer\n-        } else if base_ty.is_mutable_pointer() {\n+        } else if base_ty.is_mutable_ptr() {\n             BorrowedContentSource::DerefMutableRef\n         } else {\n             BorrowedContentSource::DerefSharedRef"}, {"sha": "92774bbb7a6b4d509381c58ec521a15bc619218f", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa", "patch": "@@ -1329,7 +1329,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                 base: PlaceBase::Local(local),\n                 projection: None,\n             }) if self.body.local_decls[local].is_user_variable.is_none() => {\n-                if self.body.local_decls[local].ty.is_mutable_pointer() {\n+                if self.body.local_decls[local].ty.is_mutable_ptr() {\n                     // The variable will be marked as mutable by the borrow.\n                     return;\n                 }"}, {"sha": "567bac777d2657bb7f39181d4c5bc00603daf541", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa", "patch": "@@ -1171,7 +1171,7 @@ pub fn is_useful<'p, 'a, 'tcx>(\n         // For privately empty and non-exhaustive enums, we work as if there were an \"extra\"\n         // `_` constructor for the type, so we can never match over all constructors.\n         let is_non_exhaustive = is_privately_empty || is_declared_nonexhaustive ||\n-            (pcx.ty.is_pointer_sized() && !cx.tcx.features().precise_pointer_size_matching);\n+            (pcx.ty.is_ptr_sized_integral() && !cx.tcx.features().precise_pointer_size_matching);\n \n         if cheap_missing_ctors == MissingCtors::Empty && !is_non_exhaustive {\n             split_grouped_constructors(cx.tcx, all_ctors, matrix, pcx.ty).into_iter().map(|c| {\n@@ -1488,7 +1488,7 @@ fn should_treat_range_exhaustively(tcx: TyCtxt<'tcx>, ctor: &Constructor<'tcx>)\n         _ => return false,\n     };\n     if let ty::Char | ty::Int(_) | ty::Uint(_) = ty.sty {\n-        !ty.is_pointer_sized() || tcx.features().precise_pointer_size_matching\n+        !ty.is_ptr_sized_integral() || tcx.features().precise_pointer_size_matching\n     } else {\n         false\n     }"}, {"sha": "408c267555c9ef0008ab481fc561eaa5564ea9ca", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=035078f73e3a8a911f0bd9a3c225a4c3d8ee80fa", "patch": "@@ -86,7 +86,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 trait_name,\n                 item_name,\n                 if rcvr_ty.is_region_ptr() && args.is_some() {\n-                    if rcvr_ty.is_mutable_pointer() {\n+                    if rcvr_ty.is_mutable_ptr() {\n                         \"&mut \"\n                     } else {\n                         \"&\""}]}