{"sha": "d687d46f68295c5e8aa318492500d22450d89b20", "node_id": "C_kwDOAAsO6NoAKGQ2ODdkNDZmNjgyOTVjNWU4YWEzMTg0OTI1MDBkMjI0NTBkODliMjA", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-11-03T20:51:44Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-11-23T20:17:47Z"}, "message": "Tweak output in for loops\n\nDo not suggest `.clone()` as we already suggest borrowing the iterated\nvalue.", "tree": {"sha": "4f8f9285dd4a4659986724f258f50873cd95bf2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f8f9285dd4a4659986724f258f50873cd95bf2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d687d46f68295c5e8aa318492500d22450d89b20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d687d46f68295c5e8aa318492500d22450d89b20", "html_url": "https://github.com/rust-lang/rust/commit/d687d46f68295c5e8aa318492500d22450d89b20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d687d46f68295c5e8aa318492500d22450d89b20/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0e481731ba72eb120a74da454bb806397ca165c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0e481731ba72eb120a74da454bb806397ca165c", "html_url": "https://github.com/rust-lang/rust/commit/c0e481731ba72eb120a74da454bb806397ca165c"}], "stats": {"total": 30, "additions": 11, "deletions": 19}, "files": [{"sha": "e917d527eb3e496e831bf0919d036463542c6dee", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d687d46f68295c5e8aa318492500d22450d89b20/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d687d46f68295c5e8aa318492500d22450d89b20/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=d687d46f68295c5e8aa318492500d22450d89b20", "patch": "@@ -397,8 +397,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                         && let Some(node) = hir.find(hir.local_def_id_to_hir_id(def_id))\n                         && let Some(fn_sig) = node.fn_sig()\n                         && let Some(ident) = node.ident()\n-                        && let Some(pos) = args.iter()\n-                            .position(|arg| arg.hir_id == expr.hir_id)\n+                        && let Some(pos) = args.iter().position(|arg| arg.hir_id == expr.hir_id)\n                         && let Some(arg) = fn_sig.decl.inputs.get(pos + offset)\n                     {\n                         let mut span: MultiSpan = arg.span.into();\n@@ -425,7 +424,16 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                     }\n                     let place = &self.move_data.move_paths[mpi].place;\n                     let ty = place.ty(self.body, self.infcx.tcx).ty;\n-                    self.suggest_cloning(err, ty, move_span);\n+                    if let hir::Node::Expr(parent_expr) = parent\n+                        && let hir::ExprKind::Call(call_expr, _) = parent_expr.kind\n+                        && let hir::ExprKind::Path(\n+                            hir::QPath::LangItem(LangItem::IntoIterIntoIter, _, _)\n+                        ) = call_expr.kind\n+                    {\n+                        // Do not suggest `.clone()` in a `for` loop, we already suggest borrowing.\n+                    } else {\n+                        self.suggest_cloning(err, ty, move_span);\n+                    }\n                 }\n             }\n             if let Some(pat) = finder.pat && !seen_spans.contains(&pat.span) {"}, {"sha": "e5b671d7b7ab0b71bbf6e871864094dd35c6ed2a", "filename": "src/test/ui/issues/issue-61108.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d687d46f68295c5e8aa318492500d22450d89b20/src%2Ftest%2Fui%2Fissues%2Fissue-61108.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d687d46f68295c5e8aa318492500d22450d89b20/src%2Ftest%2Fui%2Fissues%2Fissue-61108.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-61108.stderr?ref=d687d46f68295c5e8aa318492500d22450d89b20", "patch": "@@ -14,10 +14,6 @@ note: this function takes ownership of the receiver `self`, which moves `bad_let\n    |\n LL |     fn into_iter(self) -> Self::IntoIter;\n    |                  ^^^^\n-help: consider cloning the value if the performance cost is acceptable\n-   |\n-LL |     for l in bad_letters.clone() {\n-   |                         ++++++++\n help: consider iterating over a slice of the `Vec<char>`'s content to avoid moving into the `for` loop\n    |\n LL |     for l in &bad_letters {"}, {"sha": "ef178bbd155388f94e8b832d5c48c2a6bb65ade4", "filename": "src/test/ui/issues/issue-64559.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d687d46f68295c5e8aa318492500d22450d89b20/src%2Ftest%2Fui%2Fissues%2Fissue-64559.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d687d46f68295c5e8aa318492500d22450d89b20/src%2Ftest%2Fui%2Fissues%2Fissue-64559.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-64559.stderr?ref=d687d46f68295c5e8aa318492500d22450d89b20", "patch": "@@ -15,10 +15,6 @@ note: this function takes ownership of the receiver `self`, which moves `orig`\n    |\n LL |     fn into_iter(self) -> Self::IntoIter;\n    |                  ^^^^\n-help: consider cloning the value if the performance cost is acceptable\n-   |\n-LL |     for _val in orig.clone() {}\n-   |                     ++++++++\n help: consider iterating over a slice of the `Vec<bool>`'s content to avoid moving into the `for` loop\n    |\n LL |     for _val in &orig {}"}, {"sha": "c13dc58826eb83bfa27ff49b2575db210dd877ee", "filename": "src/test/ui/moves/move-fn-self-receiver.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d687d46f68295c5e8aa318492500d22450d89b20/src%2Ftest%2Fui%2Fmoves%2Fmove-fn-self-receiver.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d687d46f68295c5e8aa318492500d22450d89b20/src%2Ftest%2Fui%2Fmoves%2Fmove-fn-self-receiver.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmove-fn-self-receiver.stderr?ref=d687d46f68295c5e8aa318492500d22450d89b20", "patch": "@@ -127,10 +127,6 @@ LL |     for _val in implicit_into_iter {}\n LL |     implicit_into_iter;\n    |     ^^^^^^^^^^^^^^^^^^ value used here after move\n    |\n-help: consider cloning the value if the performance cost is acceptable\n-   |\n-LL |     for _val in implicit_into_iter.clone() {}\n-   |                                   ++++++++\n help: consider iterating over a slice of the `Vec<bool>`'s content to avoid moving into the `for` loop\n    |\n LL |     for _val in &implicit_into_iter {}"}, {"sha": "0cc8994fe1f2d7589f564287f46c730d45824769", "filename": "src/test/ui/suggestions/borrow-for-loop-head.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d687d46f68295c5e8aa318492500d22450d89b20/src%2Ftest%2Fui%2Fsuggestions%2Fborrow-for-loop-head.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d687d46f68295c5e8aa318492500d22450d89b20/src%2Ftest%2Fui%2Fsuggestions%2Fborrow-for-loop-head.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fborrow-for-loop-head.stderr?ref=d687d46f68295c5e8aa318492500d22450d89b20", "patch": "@@ -21,10 +21,6 @@ note: this function takes ownership of the receiver `self`, which moves `a`\n    |\n LL |     fn into_iter(self) -> Self::IntoIter;\n    |                  ^^^^\n-help: consider cloning the value if the performance cost is acceptable\n-   |\n-LL |         for j in a.clone() {\n-   |                   ++++++++\n help: consider iterating over a slice of the `Vec<i32>`'s content to avoid moving into the `for` loop\n    |\n LL |         for j in &a {"}]}