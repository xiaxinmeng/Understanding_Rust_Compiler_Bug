{"sha": "0def42fd7b508edcd199859d59a8d0ffaab69607", "node_id": "C_kwDOAAsO6NoAKDBkZWY0MmZkN2I1MDhlZGNkMTk5ODU5ZDU5YThkMGZmYWFiNjk2MDc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-15T10:27:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-15T10:27:29Z"}, "message": "Auto merge of #7974 - matthiaskrgr:7973_opt_map_or_else_dont_expand_sugg_macro, r=flip1995\n\noption_if_let_else: don't expand macros in suggestion\n\nFixes #7973\n\nchangelog: don't expand macros in suggestion of clippy::option_if_let_else", "tree": {"sha": "b44dbc8c2eb50f5d72297c219c4f4b3cb15cbc63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b44dbc8c2eb50f5d72297c219c4f4b3cb15cbc63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0def42fd7b508edcd199859d59a8d0ffaab69607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0def42fd7b508edcd199859d59a8d0ffaab69607", "html_url": "https://github.com/rust-lang/rust/commit/0def42fd7b508edcd199859d59a8d0ffaab69607", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0def42fd7b508edcd199859d59a8d0ffaab69607/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f82bf470d029cc4c998bfbe15acec8ec701c2aab", "url": "https://api.github.com/repos/rust-lang/rust/commits/f82bf470d029cc4c998bfbe15acec8ec701c2aab", "html_url": "https://github.com/rust-lang/rust/commit/f82bf470d029cc4c998bfbe15acec8ec701c2aab"}, {"sha": "3fe11e776c223201045ff9938f8eaec6053ceb3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fe11e776c223201045ff9938f8eaec6053ceb3a", "html_url": "https://github.com/rust-lang/rust/commit/3fe11e776c223201045ff9938f8eaec6053ceb3a"}], "stats": {"total": 56, "additions": 48, "deletions": 8}, "files": [{"sha": "f7c19baf7f92ecd59d983bd34519e2dc36e54b3e", "filename": "clippy_lints/src/option_if_let_else.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0def42fd7b508edcd199859d59a8d0ffaab69607/clippy_lints%2Fsrc%2Foption_if_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0def42fd7b508edcd199859d59a8d0ffaab69607/clippy_lints%2Fsrc%2Foption_if_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foption_if_let_else.rs?ref=0def42fd7b508edcd199859d59a8d0ffaab69607", "patch": "@@ -111,7 +111,7 @@ fn extract_body_from_expr<'a>(expr: &'a Expr<'a>) -> Option<&'a Expr<'a>> {\n fn format_option_in_sugg(cx: &LateContext<'_>, cond_expr: &Expr<'_>, as_ref: bool, as_mut: bool) -> String {\n     format!(\n         \"{}{}\",\n-        Sugg::hir(cx, cond_expr, \"..\").maybe_par(),\n+        Sugg::hir_with_macro_callsite(cx, cond_expr, \"..\").maybe_par(),\n         if as_mut {\n             \".as_mut()\"\n         } else if as_ref {\n@@ -184,8 +184,8 @@ fn detect_option_if_let_else<'tcx>(cx: &LateContext<'tcx>, expr: &Expr<'tcx>) ->\n             Some(OptionIfLetElseOccurence {\n                 option: format_option_in_sugg(cx, cond_expr, as_ref, as_mut),\n                 method_sugg: method_sugg.to_string(),\n-                some_expr: format!(\"|{}{}| {}\", capture_mut, capture_name, Sugg::hir(cx, some_body, \"..\")),\n-                none_expr: format!(\"{}{}\", if method_sugg == \"map_or\" { \"\" } else { \"|| \" }, Sugg::hir(cx, none_body, \"..\")),\n+                some_expr: format!(\"|{}{}| {}\", capture_mut, capture_name, Sugg::hir_with_macro_callsite(cx, some_body, \"..\")),\n+                none_expr: format!(\"{}{}\", if method_sugg == \"map_or\" { \"\" } else { \"|| \" }, Sugg::hir_with_macro_callsite(cx, none_body, \"..\")),\n             })\n         } else {\n             None"}, {"sha": "9fdea79fe71b9531cba33caaca37f16fef58dbdd", "filename": "tests/ui/option_if_let_else.fixed", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0def42fd7b508edcd199859d59a8d0ffaab69607/tests%2Fui%2Foption_if_let_else.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0def42fd7b508edcd199859d59a8d0ffaab69607/tests%2Fui%2Foption_if_let_else.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.fixed?ref=0def42fd7b508edcd199859d59a8d0ffaab69607", "patch": "@@ -75,6 +75,17 @@ fn negative_tests(arg: Option<u32>) -> u32 {\n     7\n }\n \n+// #7973\n+fn pattern_to_vec(pattern: &str) -> Vec<String> {\n+    pattern\n+        .trim_matches('/')\n+        .split('/')\n+        .flat_map(|s| {\n+            s.find('.').map_or_else(|| vec![s.to_string()], |idx| vec![s[..idx].to_string(), s[idx..].to_string()])\n+        })\n+        .collect::<Vec<_>>()\n+}\n+\n fn main() {\n     let optional = Some(5);\n     let _ = optional.map_or(5, |x| x + 2);\n@@ -146,4 +157,6 @@ fn main() {\n         // Don't lint. `await` can't be moved into a closure.\n         let _ = if let Some(x) = Some(0) { _f1(x).await } else { 0 };\n     }\n+\n+    let _ = pattern_to_vec(\"hello world\");\n }"}, {"sha": "c228b2f43d10c41420440776d50a9f6c9c47d945", "filename": "tests/ui/option_if_let_else.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0def42fd7b508edcd199859d59a8d0ffaab69607/tests%2Fui%2Foption_if_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0def42fd7b508edcd199859d59a8d0ffaab69607/tests%2Fui%2Foption_if_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.rs?ref=0def42fd7b508edcd199859d59a8d0ffaab69607", "patch": "@@ -94,6 +94,21 @@ fn negative_tests(arg: Option<u32>) -> u32 {\n     7\n }\n \n+// #7973\n+fn pattern_to_vec(pattern: &str) -> Vec<String> {\n+    pattern\n+        .trim_matches('/')\n+        .split('/')\n+        .flat_map(|s| {\n+            if let Some(idx) = s.find('.') {\n+                vec![s[..idx].to_string(), s[idx..].to_string()]\n+            } else {\n+                vec![s.to_string()]\n+            }\n+        })\n+        .collect::<Vec<_>>()\n+}\n+\n fn main() {\n     let optional = Some(5);\n     let _ = if let Some(x) = optional { x + 2 } else { 5 };\n@@ -171,4 +186,6 @@ fn main() {\n         // Don't lint. `await` can't be moved into a closure.\n         let _ = if let Some(x) = Some(0) { _f1(x).await } else { 0 };\n     }\n+\n+    let _ = pattern_to_vec(\"hello world\");\n }"}, {"sha": "d7711bc1c47ad8fde71be741608d9c2e59070b36", "filename": "tests/ui/option_if_let_else.stderr", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0def42fd7b508edcd199859d59a8d0ffaab69607/tests%2Fui%2Foption_if_let_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0def42fd7b508edcd199859d59a8d0ffaab69607/tests%2Fui%2Foption_if_let_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.stderr?ref=0def42fd7b508edcd199859d59a8d0ffaab69607", "patch": "@@ -142,14 +142,24 @@ LL +         y\n LL ~     }, |x| x * x * x * x);\n    |\n \n+error: use Option::map_or_else instead of an if let/else\n+  --> $DIR/option_if_let_else.rs:103:13\n+   |\n+LL | /             if let Some(idx) = s.find('.') {\n+LL | |                 vec![s[..idx].to_string(), s[idx..].to_string()]\n+LL | |             } else {\n+LL | |                 vec![s.to_string()]\n+LL | |             }\n+   | |_____________^ help: try: `s.find('.').map_or_else(|| vec![s.to_string()], |idx| vec![s[..idx].to_string(), s[idx..].to_string()])`\n+\n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:99:13\n+  --> $DIR/option_if_let_else.rs:114:13\n    |\n LL |     let _ = if let Some(x) = optional { x + 2 } else { 5 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `optional.map_or(5, |x| x + 2)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:108:13\n+  --> $DIR/option_if_let_else.rs:123:13\n    |\n LL |       let _ = if let Some(x) = Some(0) {\n    |  _____________^\n@@ -171,13 +181,13 @@ LL ~         });\n    |\n \n error: use Option::map_or_else instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:136:13\n+  --> $DIR/option_if_let_else.rs:151:13\n    |\n LL |     let _ = if let Some(x) = Some(0) { s.len() + x } else { s.len() };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Some(0).map_or_else(|| s.len(), |x| s.len() + x)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:140:13\n+  --> $DIR/option_if_let_else.rs:155:13\n    |\n LL |       let _ = if let Some(x) = Some(0) {\n    |  _____________^\n@@ -196,5 +206,5 @@ LL +         s.len() + x\n LL ~     });\n    |\n \n-error: aborting due to 14 previous errors\n+error: aborting due to 15 previous errors\n "}]}