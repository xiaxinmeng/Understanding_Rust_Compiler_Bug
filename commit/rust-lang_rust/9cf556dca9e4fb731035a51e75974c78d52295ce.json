{"sha": "9cf556dca9e4fb731035a51e75974c78d52295ce", "node_id": "C_kwDOAAsO6NoAKDljZjU1NmRjYTllNGZiNzMxMDM1YTUxZTc1OTc0Yzc4ZDUyMjk1Y2U", "commit": {"author": {"name": "Daniel Sommermann", "email": "dcsommer@gmail.com", "date": "2022-08-01T18:47:32Z"}, "committer": {"name": "Daniel Sommermann", "email": "dcsommer@gmail.com", "date": "2022-08-02T22:47:18Z"}, "message": "Fix backwards-compatibility check for tests with `+whole-archive`\n\nFixes #100066", "tree": {"sha": "2b8a60f3966384f8dcf46f12f85cb5897fb20be4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b8a60f3966384f8dcf46f12f85cb5897fb20be4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cf556dca9e4fb731035a51e75974c78d52295ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cf556dca9e4fb731035a51e75974c78d52295ce", "html_url": "https://github.com/rust-lang/rust/commit/9cf556dca9e4fb731035a51e75974c78d52295ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cf556dca9e4fb731035a51e75974c78d52295ce/comments", "author": {"login": "dcsommer", "id": 1082656, "node_id": "MDQ6VXNlcjEwODI2NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1082656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcsommer", "html_url": "https://github.com/dcsommer", "followers_url": "https://api.github.com/users/dcsommer/followers", "following_url": "https://api.github.com/users/dcsommer/following{/other_user}", "gists_url": "https://api.github.com/users/dcsommer/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcsommer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcsommer/subscriptions", "organizations_url": "https://api.github.com/users/dcsommer/orgs", "repos_url": "https://api.github.com/users/dcsommer/repos", "events_url": "https://api.github.com/users/dcsommer/events{/privacy}", "received_events_url": "https://api.github.com/users/dcsommer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dcsommer", "id": 1082656, "node_id": "MDQ6VXNlcjEwODI2NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1082656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcsommer", "html_url": "https://github.com/dcsommer", "followers_url": "https://api.github.com/users/dcsommer/followers", "following_url": "https://api.github.com/users/dcsommer/following{/other_user}", "gists_url": "https://api.github.com/users/dcsommer/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcsommer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcsommer/subscriptions", "organizations_url": "https://api.github.com/users/dcsommer/orgs", "repos_url": "https://api.github.com/users/dcsommer/repos", "events_url": "https://api.github.com/users/dcsommer/events{/privacy}", "received_events_url": "https://api.github.com/users/dcsommer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4493a0f4724c0bae1436242d76cccc9c0a287b80", "url": "https://api.github.com/repos/rust-lang/rust/commits/4493a0f4724c0bae1436242d76cccc9c0a287b80", "html_url": "https://github.com/rust-lang/rust/commit/4493a0f4724c0bae1436242d76cccc9c0a287b80"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "326dce8011eae6c7c55b335abbad645d64d92a56", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cf556dca9e4fb731035a51e75974c78d52295ce/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cf556dca9e4fb731035a51e75974c78d52295ce/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=9cf556dca9e4fb731035a51e75974c78d52295ce", "patch": "@@ -2267,7 +2267,7 @@ fn add_local_native_libraries(\n                     // be added explicitly if necessary, see the error in `fn link_rlib`) compiled\n                     // as an executable due to `--test`. Use whole-archive implicitly, like before\n                     // the introduction of native lib modifiers.\n-                    || (bundle != Some(false) && sess.opts.test)\n+                    || (whole_archive == None && bundle != Some(false) && sess.opts.test)\n                 {\n                     cmd.link_whole_staticlib(\n                         name,"}, {"sha": "967cb065cad1aaeae17d0d20c31911b665b296ea", "filename": "src/test/run-make/native-link-modifier-whole-archive/Makefile", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9cf556dca9e4fb731035a51e75974c78d52295ce/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/9cf556dca9e4fb731035a51e75974c78d52295ce/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2FMakefile?ref=9cf556dca9e4fb731035a51e75974c78d52295ce", "patch": "@@ -1,7 +1,7 @@\n # ignore-cross-compile -- compiling C++ code does not work well when cross-compiling\n \n-# This test case makes sure that native libraries are linked with --whole-archive semantics\n-# when the `-bundle,+whole-archive` modifiers are applied to them.\n+# This test case makes sure that native libraries are linked with appropriate semantics\n+# when the `[+-]bundle,[+-]whole-archive` modifiers are applied to them.\n #\n # The test works by checking that the resulting executables produce the expected output,\n # part of which is emitted by otherwise unreferenced C code. If +whole-archive didn't work\n@@ -10,15 +10,28 @@\n \n -include ../../run-make-fulldeps/tools.mk\n \n-all: $(TMPDIR)/$(call BIN,directly_linked) $(TMPDIR)/$(call BIN,indirectly_linked) $(TMPDIR)/$(call BIN,indirectly_linked_via_attr)\n+all: $(TMPDIR)/$(call BIN,directly_linked) \\\n+     $(TMPDIR)/$(call BIN,directly_linked_test_plus_whole_archive) \\\n+     $(TMPDIR)/$(call BIN,directly_linked_test_minus_whole_archive) \\\n+     $(TMPDIR)/$(call BIN,indirectly_linked) \\\n+     $(TMPDIR)/$(call BIN,indirectly_linked_via_attr)\n \t$(call RUN,directly_linked) | $(CGREP) 'static-initializer.directly_linked.'\n+\t$(call RUN,directly_linked_test_plus_whole_archive) --nocapture | $(CGREP) 'static-initializer.'\n+\t$(call RUN,directly_linked_test_minus_whole_archive) --nocapture | $(CGREP) -v 'static-initializer.'\n \t$(call RUN,indirectly_linked) | $(CGREP) 'static-initializer.indirectly_linked.'\n \t$(call RUN,indirectly_linked_via_attr) | $(CGREP) 'static-initializer.native_lib_in_src.'\n \n # Native lib linked directly into executable\n $(TMPDIR)/$(call BIN,directly_linked): $(call NATIVE_STATICLIB,c_static_lib_with_constructor)\n \t$(RUSTC) directly_linked.rs -l static:+whole-archive=c_static_lib_with_constructor\n \n+# Native lib linked into test executable, +whole-archive\n+$(TMPDIR)/$(call BIN,directly_linked_test_plus_whole_archive): $(call NATIVE_STATICLIB,c_static_lib_with_constructor)\n+\t$(RUSTC) directly_linked_test_plus_whole_archive.rs --test -l static:+whole-archive=c_static_lib_with_constructor\n+# Native lib linked into test executable, -whole-archive\n+$(TMPDIR)/$(call BIN,directly_linked_test_minus_whole_archive): $(call NATIVE_STATICLIB,c_static_lib_with_constructor)\n+\t$(RUSTC) directly_linked_test_minus_whole_archive.rs --test -l static:-whole-archive=c_static_lib_with_constructor\n+\n # Native lib linked into RLIB via `-l static:-bundle,+whole-archive`, RLIB linked into executable\n $(TMPDIR)/$(call BIN,indirectly_linked): $(TMPDIR)/librlib_with_cmdline_native_lib.rlib\n \t$(RUSTC) indirectly_linked.rs"}, {"sha": "20ed8d9d4cd1091316e226a696838bedede69b01", "filename": "src/test/run-make/native-link-modifier-whole-archive/directly_linked_test_minus_whole_archive.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9cf556dca9e4fb731035a51e75974c78d52295ce/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2Fdirectly_linked_test_minus_whole_archive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cf556dca9e4fb731035a51e75974c78d52295ce/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2Fdirectly_linked_test_minus_whole_archive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2Fdirectly_linked_test_minus_whole_archive.rs?ref=9cf556dca9e4fb731035a51e75974c78d52295ce", "patch": "@@ -0,0 +1,7 @@\n+use std::io::Write;\n+\n+#[test]\n+fn test_thing() {\n+    print!(\"ran the test\");\n+    std::io::stdout().flush().unwrap();\n+}"}, {"sha": "20ed8d9d4cd1091316e226a696838bedede69b01", "filename": "src/test/run-make/native-link-modifier-whole-archive/directly_linked_test_plus_whole_archive.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9cf556dca9e4fb731035a51e75974c78d52295ce/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2Fdirectly_linked_test_plus_whole_archive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cf556dca9e4fb731035a51e75974c78d52295ce/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2Fdirectly_linked_test_plus_whole_archive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2Fdirectly_linked_test_plus_whole_archive.rs?ref=9cf556dca9e4fb731035a51e75974c78d52295ce", "patch": "@@ -0,0 +1,7 @@\n+use std::io::Write;\n+\n+#[test]\n+fn test_thing() {\n+    print!(\"ran the test\");\n+    std::io::stdout().flush().unwrap();\n+}"}]}