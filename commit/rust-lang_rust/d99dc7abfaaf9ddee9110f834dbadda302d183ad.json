{"sha": "d99dc7abfaaf9ddee9110f834dbadda302d183ad", "node_id": "C_kwDOAAsO6NoAKGQ5OWRjN2FiZmFhZjlkZGVlOTExMGY4MzRkYmFkZGEzMDJkMTgzYWQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-30T12:37:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-30T12:37:03Z"}, "message": "Rollup merge of #90396 - b-naber:type_flags_ices_default_anon_consts, r=lcnr\n\nPrevent type flags assertions being thrown in default_anon_const_substs if errors occurred\n\nFixes https://github.com/rust-lang/rust/issues/90364\nFixes https://github.com/rust-lang/rust/issues/88997\n\nr? ``@lcnr``", "tree": {"sha": "0fdf40c263811e126db5d870fcaa4229d5b33862", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fdf40c263811e126db5d870fcaa4229d5b33862"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d99dc7abfaaf9ddee9110f834dbadda302d183ad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhfTxvCRBK7hj4Ov3rIwAA2d0IAA8v/pBj6uyjE3vc2qGrsGy/\nbBQxece1RAHK/NXIv12s+vsqE/MwkUjv+BtqOny1GDAPFZRLHEeFS+PvghxkbiGD\nh5SBbhLzVdvRDmeadWftBCaBluat0UVn1LDJpfUPdQgz5V9UPbOmictktAQduwyM\nKvqB08ZOk6sitIa4l8S7i0E+cBIJW2FuStFSVRDC3fchVMeGG0S7isYOXXz07c4m\nuehdu+dP57gmxmOtDh0s5n79E3wG+hfPPkFcZyxNgmORMuLs3ijBrYSzs6NFDotg\nH1jxXpmLWjuQ5BOIf01kc6viHhX3uNVq830eMXpg620My55UHHku/Ah58DoWmWw=\n=qBc6\n-----END PGP SIGNATURE-----\n", "payload": "tree 0fdf40c263811e126db5d870fcaa4229d5b33862\nparent 88e0bea7ca8966c5ee57915cf5afa128168595b2\nparent 87fbf3c5aaff62cb70cf95ccfd756f4f147e8fea\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635597423 +0200\ncommitter GitHub <noreply@github.com> 1635597423 +0200\n\nRollup merge of #90396 - b-naber:type_flags_ices_default_anon_consts, r=lcnr\n\nPrevent type flags assertions being thrown in default_anon_const_substs if errors occurred\n\nFixes https://github.com/rust-lang/rust/issues/90364\nFixes https://github.com/rust-lang/rust/issues/88997\n\nr? ``@lcnr``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d99dc7abfaaf9ddee9110f834dbadda302d183ad", "html_url": "https://github.com/rust-lang/rust/commit/d99dc7abfaaf9ddee9110f834dbadda302d183ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d99dc7abfaaf9ddee9110f834dbadda302d183ad/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88e0bea7ca8966c5ee57915cf5afa128168595b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/88e0bea7ca8966c5ee57915cf5afa128168595b2", "html_url": "https://github.com/rust-lang/rust/commit/88e0bea7ca8966c5ee57915cf5afa128168595b2"}, {"sha": "87fbf3c5aaff62cb70cf95ccfd756f4f147e8fea", "url": "https://api.github.com/repos/rust-lang/rust/commits/87fbf3c5aaff62cb70cf95ccfd756f4f147e8fea", "html_url": "https://github.com/rust-lang/rust/commit/87fbf3c5aaff62cb70cf95ccfd756f4f147e8fea"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "96211be8cdcf7576984a2791ef08a50bfc8e3004", "filename": "compiler/rustc_typeck/src/collect/type_of.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d99dc7abfaaf9ddee9110f834dbadda302d183ad/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99dc7abfaaf9ddee9110f834dbadda302d183ad/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs?ref=d99dc7abfaaf9ddee9110f834dbadda302d183ad", "patch": "@@ -292,7 +292,8 @@ pub(super) fn default_anon_const_substs(tcx: TyCtxt<'_>, def_id: DefId) -> Subst\n     // Getting this wrong can lead to ICE and unsoundness, so we assert it here.\n     for arg in substs.iter() {\n         let allowed_flags = ty::TypeFlags::MAY_NEED_DEFAULT_CONST_SUBSTS\n-            | ty::TypeFlags::STILL_FURTHER_SPECIALIZABLE;\n+            | ty::TypeFlags::STILL_FURTHER_SPECIALIZABLE\n+            | ty::TypeFlags::HAS_ERROR;\n         assert!(!arg.has_type_flags(!allowed_flags));\n     }\n     substs"}, {"sha": "7666a514101dade5785a217a32289c566340da8c", "filename": "src/test/ui/const-generics/issues/issue-88997.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d99dc7abfaaf9ddee9110f834dbadda302d183ad/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-88997.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99dc7abfaaf9ddee9110f834dbadda302d183ad/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-88997.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-88997.rs?ref=d99dc7abfaaf9ddee9110f834dbadda302d183ad", "patch": "@@ -0,0 +1,14 @@\n+#![allow(incomplete_features)]\n+#![feature(generic_const_exprs)]\n+\n+struct ConstAssert<const COND: bool>;\n+trait True {}\n+impl True for ConstAssert<true> {}\n+\n+struct Range<T: PartialOrd, const MIN: T, const MAX: T>(T)\n+//~^ ERROR the type of const parameters must not depend on other generic parameters\n+//~| ERROR the type of const parameters must not depend on other generic parameters\n+where\n+    ConstAssert<{ MIN <= MAX }>: True;\n+\n+fn main() {}"}, {"sha": "505ba0da23214c72791762ef3d8dcb374bb7a1a1", "filename": "src/test/ui/const-generics/issues/issue-88997.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d99dc7abfaaf9ddee9110f834dbadda302d183ad/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-88997.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d99dc7abfaaf9ddee9110f834dbadda302d183ad/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-88997.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-88997.stderr?ref=d99dc7abfaaf9ddee9110f834dbadda302d183ad", "patch": "@@ -0,0 +1,15 @@\n+error[E0770]: the type of const parameters must not depend on other generic parameters\n+  --> $DIR/issue-88997.rs:8:40\n+   |\n+LL | struct Range<T: PartialOrd, const MIN: T, const MAX: T>(T)\n+   |                                        ^ the type must not depend on the parameter `T`\n+\n+error[E0770]: the type of const parameters must not depend on other generic parameters\n+  --> $DIR/issue-88997.rs:8:54\n+   |\n+LL | struct Range<T: PartialOrd, const MIN: T, const MAX: T>(T)\n+   |                                                      ^ the type must not depend on the parameter `T`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0770`."}, {"sha": "b11b07b5023b2348d3bbbb0a89f6327084b92599", "filename": "src/test/ui/const-generics/issues/issue-90364.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d99dc7abfaaf9ddee9110f834dbadda302d183ad/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-90364.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99dc7abfaaf9ddee9110f834dbadda302d183ad/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-90364.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-90364.rs?ref=d99dc7abfaaf9ddee9110f834dbadda302d183ad", "patch": "@@ -0,0 +1,9 @@\n+#![feature(generic_const_exprs)]\n+#![allow(incomplete_features)]\n+\n+pub struct Foo<T, const H: T>(T)\n+//~^ ERROR the type of const parameters must not depend on other generic parameters\n+where\n+    [(); 1]:;\n+\n+fn main() {}"}, {"sha": "e85bd136ef6dcba08a7fdbc3e10ba91cbb8a4da5", "filename": "src/test/ui/const-generics/issues/issue-90364.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d99dc7abfaaf9ddee9110f834dbadda302d183ad/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-90364.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d99dc7abfaaf9ddee9110f834dbadda302d183ad/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-90364.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-90364.stderr?ref=d99dc7abfaaf9ddee9110f834dbadda302d183ad", "patch": "@@ -0,0 +1,9 @@\n+error[E0770]: the type of const parameters must not depend on other generic parameters\n+  --> $DIR/issue-90364.rs:4:28\n+   |\n+LL | pub struct Foo<T, const H: T>(T)\n+   |                            ^ the type must not depend on the parameter `T`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0770`."}]}