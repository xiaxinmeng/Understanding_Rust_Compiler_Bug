{"sha": "c587386fd6eb21b5cc53cad2456e9745ec327855", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ODczODZmZDZlYjIxYjVjYzUzY2FkMjQ1NmU5NzQ1ZWMzMjc4NTU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-17T21:09:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-17T21:09:33Z"}, "message": "Rollup merge of #74452 - Manishearth:module-type-ns, r=jyn514\n\nintra-doc links: resolve modules in the type namespace\n\nFixes https://github.com/rust-lang/rust/issues/62830\n\nModules actually live in the type namespace, not all three, and it's not possible to clash a type with a module.", "tree": {"sha": "2d4c9ecdcd068e028ae8367e165b9d54a8669633", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d4c9ecdcd068e028ae8367e165b9d54a8669633"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c587386fd6eb21b5cc53cad2456e9745ec327855", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfEhONCRBK7hj4Ov3rIwAAdHIIAB7qGfoVe/0MblJmk8orp9wY\nGO+7yvqDS1KfP40vbjXQ1dgAGYi2c9Esn5mLD0i6JoY6gkYYFrqk/xm2XXH+ZcGF\n0C9ubkgyqkw5s44MHiN0YlNS3Lc53cI47Q/n93LZZYIkEjhiUAe7dPQn5b8W2CXz\nBm/vKKPnp2x9VRu8QP9L0f4c8ohKP0eiV70Xz87QndgqeYZ3MlP9Ux5QZj2lWF3r\nOKavWlMZimBU+4F2fDVx5DF7aQnKH24dH26AjBRfMScQQ4Bq0VihJMwhEPY2bldF\nVRC0ysBPL9tE4whGzcd5+wRyFUBWH7vyjn7LmCXGkzNqm/hOxQRZXptLWTrIvO8=\n=8DSa\n-----END PGP SIGNATURE-----\n", "payload": "tree 2d4c9ecdcd068e028ae8367e165b9d54a8669633\nparent ff1c53f811dcc395297ca5ce70f7acd84566ff4a\nparent 69dab507620aada3085b45ccd0189de3bf8c8734\nauthor Manish Goregaokar <manishsmail@gmail.com> 1595020173 -0700\ncommitter GitHub <noreply@github.com> 1595020173 -0700\n\nRollup merge of #74452 - Manishearth:module-type-ns, r=jyn514\n\nintra-doc links: resolve modules in the type namespace\n\nFixes https://github.com/rust-lang/rust/issues/62830\n\nModules actually live in the type namespace, not all three, and it's not possible to clash a type with a module.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c587386fd6eb21b5cc53cad2456e9745ec327855", "html_url": "https://github.com/rust-lang/rust/commit/c587386fd6eb21b5cc53cad2456e9745ec327855", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c587386fd6eb21b5cc53cad2456e9745ec327855/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff1c53f811dcc395297ca5ce70f7acd84566ff4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff1c53f811dcc395297ca5ce70f7acd84566ff4a", "html_url": "https://github.com/rust-lang/rust/commit/ff1c53f811dcc395297ca5ce70f7acd84566ff4a"}, {"sha": "69dab507620aada3085b45ccd0189de3bf8c8734", "url": "https://api.github.com/repos/rust-lang/rust/commits/69dab507620aada3085b45ccd0189de3bf8c8734", "html_url": "https://github.com/rust-lang/rust/commit/69dab507620aada3085b45ccd0189de3bf8c8734"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "e187b9251f71e5194d002060dbca21f94b2211e7", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c587386fd6eb21b5cc53cad2456e9745ec327855/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c587386fd6eb21b5cc53cad2456e9745ec327855/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=c587386fd6eb21b5cc53cad2456e9745ec327855", "patch": "@@ -584,25 +584,18 @@ impl<'a, 'tcx> DocFolder for LinkCollector<'a, 'tcx> {\n             let (res, fragment) = {\n                 let mut kind = None;\n                 let mut disambiguator = None;\n-                path_str = if let Some(prefix) = [\"struct@\", \"enum@\", \"type@\", \"trait@\", \"union@\"]\n-                    .iter()\n-                    .find(|p| link.starts_with(**p))\n+                path_str = if let Some(prefix) =\n+                    [\"struct@\", \"enum@\", \"type@\", \"trait@\", \"union@\", \"module@\", \"mod@\"]\n+                        .iter()\n+                        .find(|p| link.starts_with(**p))\n                 {\n                     kind = Some(TypeNS);\n                     disambiguator = Some(&prefix[..prefix.len() - 1]);\n                     link.trim_start_matches(prefix)\n-                } else if let Some(prefix) = [\n-                    \"const@\",\n-                    \"static@\",\n-                    \"value@\",\n-                    \"function@\",\n-                    \"mod@\",\n-                    \"fn@\",\n-                    \"module@\",\n-                    \"method@\",\n-                ]\n-                .iter()\n-                .find(|p| link.starts_with(**p))\n+                } else if let Some(prefix) =\n+                    [\"const@\", \"static@\", \"value@\", \"function@\", \"fn@\", \"method@\"]\n+                        .iter()\n+                        .find(|p| link.starts_with(**p))\n                 {\n                     kind = Some(ValueNS);\n                     disambiguator = Some(&prefix[..prefix.len() - 1]);"}, {"sha": "65187f48539a4e8967e12f0c9ce92138de6ca6ec", "filename": "src/test/rustdoc/intra-doc-link-mod-ambiguity.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c587386fd6eb21b5cc53cad2456e9745ec327855/src%2Ftest%2Frustdoc%2Fintra-doc-link-mod-ambiguity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c587386fd6eb21b5cc53cad2456e9745ec327855/src%2Ftest%2Frustdoc%2Fintra-doc-link-mod-ambiguity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc-link-mod-ambiguity.rs?ref=c587386fd6eb21b5cc53cad2456e9745ec327855", "patch": "@@ -0,0 +1,18 @@\n+// ignore-tidy-linelength\n+\n+#![deny(intra_doc_link_resolution_failure)]\n+\n+\n+pub fn foo() {\n+\n+}\n+\n+pub mod foo {}\n+// @has intra_doc_link_mod_ambiguity/struct.A.html '//a/@href' '../intra_doc_link_mod_ambiguity/foo/index.html'\n+/// Module is [`module@foo`]\n+pub struct A;\n+\n+\n+// @has intra_doc_link_mod_ambiguity/struct.B.html '//a/@href' '../intra_doc_link_mod_ambiguity/fn.foo.html'\n+/// Function is [`fn@foo`]\n+pub struct B;"}]}