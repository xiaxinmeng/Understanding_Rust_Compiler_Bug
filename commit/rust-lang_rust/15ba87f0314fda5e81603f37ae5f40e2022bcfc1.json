{"sha": "15ba87f0314fda5e81603f37ae5f40e2022bcfc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1YmE4N2YwMzE0ZmRhNWU4MTYwM2YzN2FlNWY0MGUyMDIyYmNmYzE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-13T19:32:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-13T19:32:21Z"}, "message": "auto merge of #18887 : aturon/rust/controlled-inherit, r=alexcrichton\n\nThis patch tweaks the stability inheritance infrastructure so that\r\n`#{stable]` attributes are not inherited. Doing so solves two problems:\r\n\r\n1. It allows us to mark module *names* as stable without accidentally\r\nmarking the items they contain as stable.\r\n\r\n2. It means that a `#[stable]` attribution must always appear directly\r\non the item it applies to, which makes it easier for reviewers to catch\r\nchanges to stable APIs.\r\n\r\nFixes #17484", "tree": {"sha": "b65785eae17a8f621ee5a2f71c29f76a68e85e6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b65785eae17a8f621ee5a2f71c29f76a68e85e6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15ba87f0314fda5e81603f37ae5f40e2022bcfc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15ba87f0314fda5e81603f37ae5f40e2022bcfc1", "html_url": "https://github.com/rust-lang/rust/commit/15ba87f0314fda5e81603f37ae5f40e2022bcfc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15ba87f0314fda5e81603f37ae5f40e2022bcfc1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37ea270accf97fc4eed21a7373c3e7e62de7bbeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/37ea270accf97fc4eed21a7373c3e7e62de7bbeb", "html_url": "https://github.com/rust-lang/rust/commit/37ea270accf97fc4eed21a7373c3e7e62de7bbeb"}, {"sha": "83521954267b3555bfb3a185a187b2c2d929e453", "url": "https://api.github.com/repos/rust-lang/rust/commits/83521954267b3555bfb3a185a187b2c2d929e453", "html_url": "https://github.com/rust-lang/rust/commit/83521954267b3555bfb3a185a187b2c2d929e453"}], "stats": {"total": 46, "additions": 32, "deletions": 14}, "files": [{"sha": "3b7ad9e8f6b344cf4358556134c12c14381dd42c", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/15ba87f0314fda5e81603f37ae5f40e2022bcfc1/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15ba87f0314fda5e81603f37ae5f40e2022bcfc1/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=15ba87f0314fda5e81603f37ae5f40e2022bcfc1", "patch": "@@ -17,8 +17,7 @@ use syntax::{attr, visit};\n use syntax::ast;\n use syntax::ast::{Attribute, Block, Crate, DefId, FnDecl, NodeId, Variant};\n use syntax::ast::{Item, RequiredMethod, ProvidedMethod, TraitItem};\n-use syntax::ast::{TypeMethod, Method, Generics, StructDef, StructField};\n-use syntax::ast::{Ident, TypeTraitItem};\n+use syntax::ast::{TypeMethod, Method, Generics, StructField, TypeTraitItem};\n use syntax::ast_util::is_local;\n use syntax::attr::Stability;\n use syntax::visit::{FnKind, FkMethod, Visitor};\n@@ -48,9 +47,15 @@ impl Annotator {\n         match attr::find_stability(attrs.as_slice()) {\n             Some(stab) => {\n                 self.index.local.insert(id, stab.clone());\n-                let parent = replace(&mut self.parent, Some(stab));\n-                f(self);\n-                self.parent = parent;\n+\n+                // Don't inherit #[stable]\n+                if stab.level != attr::Stable {\n+                    let parent = replace(&mut self.parent, Some(stab));\n+                    f(self);\n+                    self.parent = parent;\n+                } else {\n+                    f(self);\n+                }\n             }\n             None => {\n                 self.parent.clone().map(|stab| self.index.local.insert(id, stab));\n@@ -63,6 +68,15 @@ impl Annotator {\n impl<'v> Visitor<'v> for Annotator {\n     fn visit_item(&mut self, i: &Item) {\n         self.annotate(i.id, &i.attrs, |v| visit::walk_item(v, i));\n+\n+        match i.node {\n+            ast::ItemStruct(ref sd, _) => {\n+                sd.ctor_id.map(|id| {\n+                    self.annotate(id, &i.attrs, |_| {})\n+                });\n+            }\n+            _ => {}\n+        }\n     }\n \n     fn visit_fn(&mut self, fk: FnKind<'v>, fd: &'v FnDecl,\n@@ -95,13 +109,6 @@ impl<'v> Visitor<'v> for Annotator {\n         self.annotate(var.node.id, &var.node.attrs, |v| visit::walk_variant(v, var, g))\n     }\n \n-    fn visit_struct_def(&mut self, s: &StructDef, _: Ident, _: &Generics, _: NodeId) {\n-        match s.ctor_id {\n-            Some(id) => self.annotate(id, &vec![], |v| visit::walk_struct_def(v, s)),\n-            None => visit::walk_struct_def(self, s)\n-        }\n-    }\n-\n     fn visit_struct_field(&mut self, s: &StructField) {\n         self.annotate(s.node.id, &s.node.attrs, |v| visit::walk_struct_field(v, s));\n     }"}, {"sha": "5691ce3bfa7404e373bad991b7df0cf64face8a8", "filename": "src/test/auxiliary/inherited_stability.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/15ba87f0314fda5e81603f37ae5f40e2022bcfc1/src%2Ftest%2Fauxiliary%2Finherited_stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15ba87f0314fda5e81603f37ae5f40e2022bcfc1/src%2Ftest%2Fauxiliary%2Finherited_stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Finherited_stability.rs?ref=15ba87f0314fda5e81603f37ae5f40e2022bcfc1", "patch": "@@ -18,12 +18,20 @@ pub fn stable() {}\n \n #[stable]\n pub mod stable_mod {\n-    #[experimental]\n     pub fn experimental() {}\n \n+    #[stable]\n     pub fn stable() {}\n }\n \n+#[unstable]\n+pub mod unstable_mod {\n+    #[experimental]\n+    pub fn experimental() {}\n+\n+    pub fn unstable() {}\n+}\n+\n pub mod experimental_mod {\n     pub fn experimental() {}\n \n@@ -33,9 +41,9 @@ pub mod experimental_mod {\n \n #[stable]\n pub trait Stable {\n-    #[experimental]\n     fn experimental(&self);\n \n+    #[stable]\n     fn stable(&self);\n }\n "}, {"sha": "ba8559c8008bf5af4641fb01de6e69dad7005314", "filename": "src/test/compile-fail/lint-stability.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/15ba87f0314fda5e81603f37ae5f40e2022bcfc1/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15ba87f0314fda5e81603f37ae5f40e2022bcfc1/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability.rs?ref=15ba87f0314fda5e81603f37ae5f40e2022bcfc1", "patch": "@@ -165,6 +165,9 @@ mod inheritance {\n         stable_mod::experimental(); //~ ERROR use of experimental item\n         stable_mod::stable();\n \n+        unstable_mod::experimental(); //~ ERROR use of experimental item\n+        unstable_mod::unstable(); //~ ERROR use of unstable item\n+\n         experimental_mod::experimental(); //~ ERROR use of experimental item\n         experimental_mod::stable();\n "}]}