{"sha": "eb58ac126e638287998959a20aa91ffa730b95c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNThhYzEyNmU2MzgyODc5OTg5NTlhMjBhYTkxZmZhNzMwYjk1YzI=", "commit": {"author": {"name": "Victor Berger", "email": "victor.berger@m4x.org", "date": "2014-09-17T22:15:36Z"}, "committer": {"name": "Victor Berger", "email": "victor.berger@m4x.org", "date": "2014-09-22T17:28:07Z"}, "message": "Lint stability now checks macro arguments.\n\nCloses #17185.", "tree": {"sha": "498addaa91b117fe62b203a6d3e4f1cf04b3734a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/498addaa91b117fe62b203a6d3e4f1cf04b3734a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb58ac126e638287998959a20aa91ffa730b95c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb58ac126e638287998959a20aa91ffa730b95c2", "html_url": "https://github.com/rust-lang/rust/commit/eb58ac126e638287998959a20aa91ffa730b95c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb58ac126e638287998959a20aa91ffa730b95c2/comments", "author": {"login": "elinorbgr", "id": 3009227, "node_id": "MDQ6VXNlcjMwMDkyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/3009227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elinorbgr", "html_url": "https://github.com/elinorbgr", "followers_url": "https://api.github.com/users/elinorbgr/followers", "following_url": "https://api.github.com/users/elinorbgr/following{/other_user}", "gists_url": "https://api.github.com/users/elinorbgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/elinorbgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elinorbgr/subscriptions", "organizations_url": "https://api.github.com/users/elinorbgr/orgs", "repos_url": "https://api.github.com/users/elinorbgr/repos", "events_url": "https://api.github.com/users/elinorbgr/events{/privacy}", "received_events_url": "https://api.github.com/users/elinorbgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "elinorbgr", "id": 3009227, "node_id": "MDQ6VXNlcjMwMDkyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/3009227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elinorbgr", "html_url": "https://github.com/elinorbgr", "followers_url": "https://api.github.com/users/elinorbgr/followers", "following_url": "https://api.github.com/users/elinorbgr/following{/other_user}", "gists_url": "https://api.github.com/users/elinorbgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/elinorbgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elinorbgr/subscriptions", "organizations_url": "https://api.github.com/users/elinorbgr/orgs", "repos_url": "https://api.github.com/users/elinorbgr/repos", "events_url": "https://api.github.com/users/elinorbgr/events{/privacy}", "received_events_url": "https://api.github.com/users/elinorbgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3907a13f697feb007ab4824ee26f998d56a1311f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3907a13f697feb007ab4824ee26f998d56a1311f", "html_url": "https://github.com/rust-lang/rust/commit/3907a13f697feb007ab4824ee26f998d56a1311f"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "6c3f96bbec64b84125e3a0cd1b73e879081d6e9c", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/eb58ac126e638287998959a20aa91ffa730b95c2/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb58ac126e638287998959a20aa91ffa730b95c2/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=eb58ac126e638287998959a20aa91ffa730b95c2", "patch": "@@ -1490,8 +1490,27 @@ impl LintPass for Stability {\n     }\n \n     fn check_expr(&mut self, cx: &Context, e: &ast::Expr) {\n-        // if the expression was produced by a macro expansion,\n-        if e.span.expn_id != NO_EXPANSION { return }\n+        // skip if `e` is not from macro arguments\n+        let skip = cx.tcx.sess.codemap().with_expn_info(e.span.expn_id, |expninfo| {\n+            match expninfo {\n+                Some(ref info) => {\n+                    if info.call_site.expn_id != NO_EXPANSION ||\n+                       !( e.span.lo > info.call_site.lo && e.span.hi < info.call_site.hi ) {\n+                        // This code is not from the arguments,\n+                        // or this macro call was generated by an other macro\n+                        // We can't handle it.\n+                        true\n+                    } else if info.callee.span.is_none() {\n+                        // We don't want to mess with compiler builtins.\n+                        true\n+                    } else {\n+                        false\n+                    }\n+                },\n+                _ => { false }\n+            }\n+        });\n+        if skip { return; }\n \n         let id = match e.node {\n             ast::ExprPath(..) | ast::ExprStruct(..) => {"}, {"sha": "bae86f04b23b6c243f2732c479ebff2d940b360a", "filename": "src/test/auxiliary/lint_stability.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb58ac126e638287998959a20aa91ffa730b95c2/src%2Ftest%2Fauxiliary%2Flint_stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb58ac126e638287998959a20aa91ffa730b95c2/src%2Ftest%2Fauxiliary%2Flint_stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flint_stability.rs?ref=eb58ac126e638287998959a20aa91ffa730b95c2", "patch": "@@ -181,3 +181,13 @@ pub struct LockedTupleStruct(pub int);\n macro_rules! macro_test(\n     () => (deprecated());\n )\n+\n+#[macro_export]\n+macro_rules! macro_test_arg(\n+    ($func:expr) => ($func);\n+)\n+\n+#[macro_export]\n+macro_rules! macro_test_arg_nested(\n+    ($func:ident) => (macro_test_arg!($func()));\n+)"}, {"sha": "6a36e2707404785a7983567abf2c1eb844fa8bad", "filename": "src/test/compile-fail/lint-stability.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eb58ac126e638287998959a20aa91ffa730b95c2/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb58ac126e638287998959a20aa91ffa730b95c2/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability.rs?ref=eb58ac126e638287998959a20aa91ffa730b95c2", "patch": "@@ -109,12 +109,14 @@ mod cross_crate {\n         let _ = FrozenTupleStruct (1);\n         let _ = LockedTupleStruct (1);\n \n-        // At the moment, the following just checks that the stability\n-        // level of expanded code does not trigger the\n-        // lint. Eventually, we will want to lint the contents of the\n+        // At the moment, the lint checker only checks stability in\n+        // in the arguments of macros.\n+        // Eventually, we will want to lint the contents of the\n         // macro in the module *defining* it. Also, stability levels\n         // on macros themselves are not yet linted.\n         macro_test!();\n+        macro_test_arg!(deprecated_text()); //~ ERROR use of deprecated item: text\n+        macro_test_arg_nested!(deprecated_text);\n     }\n \n     fn test_method_param<F: Trait>(foo: F) {"}]}