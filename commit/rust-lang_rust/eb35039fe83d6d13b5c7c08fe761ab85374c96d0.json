{"sha": "eb35039fe83d6d13b5c7c08fe761ab85374c96d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViMzUwMzlmZTgzZDZkMTNiNWM3YzA4ZmU3NjFhYjg1Mzc0Yzk2ZDA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-18T18:57:03Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-18T19:18:00Z"}, "message": "Change 'must' to 'should' in non_camel_case_types message", "tree": {"sha": "1d0aef0463a8c15d2f9fca7c83a35c51169832ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d0aef0463a8c15d2f9fca7c83a35c51169832ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb35039fe83d6d13b5c7c08fe761ab85374c96d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb35039fe83d6d13b5c7c08fe761ab85374c96d0", "html_url": "https://github.com/rust-lang/rust/commit/eb35039fe83d6d13b5c7c08fe761ab85374c96d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb35039fe83d6d13b5c7c08fe761ab85374c96d0/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e9d38ede0f0eff5fec3ad8713897c080211d5ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e9d38ede0f0eff5fec3ad8713897c080211d5ea", "html_url": "https://github.com/rust-lang/rust/commit/5e9d38ede0f0eff5fec3ad8713897c080211d5ea"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "889bd085e332233b07a0b1f0d8929dbe48079545", "filename": "src/rustc/middle/lint.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb35039fe83d6d13b5c7c08fe761ab85374c96d0/src%2Frustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb35039fe83d6d13b5c7c08fe761ab85374c96d0/src%2Frustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Flint.rs?ref=eb35039fe83d6d13b5c7c08fe761ab85374c96d0", "patch": "@@ -156,7 +156,7 @@ fn get_lint_dict() -> lint_dict {\n \n         (~\"non_camel_case_types\",\n          @{lint: non_camel_case_types,\n-           desc: ~\"types, variants and traits must have camel case names\",\n+           desc: ~\"types, variants and traits should have camel case names\",\n            default: warn}),\n \n         (~\"managed_heap_memory\",\n@@ -605,7 +605,8 @@ fn check_item_non_camel_case_types(cx: ty::ctxt, it: @ast::item) {\n         if !is_camel_case(cx, ident) {\n             cx.sess.span_lint(\n                 non_camel_case_types, expr_id, item_id, span,\n-                ~\"type, variant, or trait must be camel case\");\n+                ~\"type, variant, or trait should have \\\n+                  a camel case identifier\");\n         }\n     }\n "}, {"sha": "6d9777fda4296fe327236d3d7a87fdff434e7ff9", "filename": "src/test/compile-fail/lint-non-camel-case-types.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eb35039fe83d6d13b5c7c08fe761ab85374c96d0/src%2Ftest%2Fcompile-fail%2Flint-non-camel-case-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb35039fe83d6d13b5c7c08fe761ab85374c96d0/src%2Ftest%2Fcompile-fail%2Flint-non-camel-case-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-non-camel-case-types.rs?ref=eb35039fe83d6d13b5c7c08fe761ab85374c96d0", "patch": "@@ -1,24 +1,24 @@\n #[forbid(non_camel_case_types)];\n \n-struct foo { //~ ERROR type, variant, or trait must be camel case\n+struct foo { //~ ERROR type, variant, or trait should have a camel case identifier\n     bar: int,\n }\n \n-enum foo2 { //~ ERROR type, variant, or trait must be camel case\n+enum foo2 { //~ ERROR type, variant, or trait should have a camel case identifier\n     Bar\n }\n \n-struct foo3 { //~ ERROR type, variant, or trait must be camel case\n+struct foo3 { //~ ERROR type, variant, or trait should have a camel case identifier\n     bar: int\n }\n \n-type foo4 = int; //~ ERROR type, variant, or trait must be camel case\n+type foo4 = int; //~ ERROR type, variant, or trait should have a camel case identifier\n \n enum Foo5 {\n-    bar //~ ERROR type, variant, or trait must be camel case\n+    bar //~ ERROR type, variant, or trait should have a camel case identifier\n }\n \n-trait foo6 { //~ ERROR type, variant, or trait must be camel case\n+trait foo6 { //~ ERROR type, variant, or trait should have a camel case identifier\n }\n \n fn main() { }\n\\ No newline at end of file"}]}