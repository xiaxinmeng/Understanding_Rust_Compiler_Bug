{"sha": "1f5c655d0c379754c2c0e5a6b8194bd2ee91e455", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNWM2NTVkMGMzNzk3NTRjMmMwZTVhNmI4MTk0YmQyZWU5MWU0NTU=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-10-28T19:50:08Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-10-30T19:38:46Z"}, "message": "Fix query cycle when tracing explicit_item_bounds", "tree": {"sha": "bc3de0c184faab2de374e4f5a2fec7194280e747", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc3de0c184faab2de374e4f5a2fec7194280e747"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f5c655d0c379754c2c0e5a6b8194bd2ee91e455", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f5c655d0c379754c2c0e5a6b8194bd2ee91e455", "html_url": "https://github.com/rust-lang/rust/commit/1f5c655d0c379754c2c0e5a6b8194bd2ee91e455", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f5c655d0c379754c2c0e5a6b8194bd2ee91e455/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffe52882ed79be67344dd6085559e308241e7f60", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffe52882ed79be67344dd6085559e308241e7f60", "html_url": "https://github.com/rust-lang/rust/commit/ffe52882ed79be67344dd6085559e308241e7f60"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "3ea30fcf9f486f6329106a23a9069e1a90272ecf", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f5c655d0c379754c2c0e5a6b8194bd2ee91e455/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f5c655d0c379754c2c0e5a6b8194bd2ee91e455/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=1f5c655d0c379754c2c0e5a6b8194bd2ee91e455", "patch": "@@ -65,7 +65,7 @@ thread_local! {\n /// Avoids running any queries during any prints that occur\n /// during the closure. This may alter the appearance of some\n /// types (e.g. forcing verbose printing for opaque types).\n-/// This method is used during some queries (e.g. `predicates_of`\n+/// This method is used during some queries (e.g. `explicit_item_bounds`\n /// for opaque types), to ensure that any debug printing that\n /// occurs during the query computation does not end up recursively\n /// calling the same query."}, {"sha": "e596dd1a396c910d3c68ce292b139bed2c863b3b", "filename": "compiler/rustc_typeck/src/collect/item_bounds.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1f5c655d0c379754c2c0e5a6b8194bd2ee91e455/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Fitem_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f5c655d0c379754c2c0e5a6b8194bd2ee91e455/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Fitem_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Fitem_bounds.rs?ref=1f5c655d0c379754c2c0e5a6b8194bd2ee91e455", "patch": "@@ -61,23 +61,23 @@ fn opaque_type_bounds<'tcx>(\n     bounds: &'tcx [hir::GenericBound<'tcx>],\n     span: Span,\n ) -> &'tcx [(ty::Predicate<'tcx>, Span)] {\n-    let item_ty =\n-        tcx.mk_opaque(opaque_def_id, InternalSubsts::identity_for_item(tcx, opaque_def_id));\n+    ty::print::with_no_queries(|| {\n+        let item_ty =\n+            tcx.mk_opaque(opaque_def_id, InternalSubsts::identity_for_item(tcx, opaque_def_id));\n \n-    let bounds = ty::print::with_no_queries(|| {\n-        AstConv::compute_bounds(\n+        let bounds = AstConv::compute_bounds(\n             &ItemCtxt::new(tcx, opaque_def_id),\n             item_ty,\n             bounds,\n             SizedByDefault::Yes,\n             span,\n         )\n-    });\n+        .predicates(tcx, item_ty);\n \n-    let bounds = bounds.predicates(tcx, item_ty);\n-    debug!(\"opaque_type_bounds({}) = {:?}\", tcx.def_path_str(opaque_def_id), bounds);\n+        debug!(\"opaque_type_bounds({}) = {:?}\", tcx.def_path_str(opaque_def_id), bounds);\n \n-    tcx.arena.alloc_slice(&bounds)\n+        tcx.arena.alloc_slice(&bounds)\n+    })\n }\n \n pub(super) fn explicit_item_bounds("}]}