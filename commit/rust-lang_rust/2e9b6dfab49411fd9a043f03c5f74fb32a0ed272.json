{"sha": "2e9b6dfab49411fd9a043f03c5f74fb32a0ed272", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlOWI2ZGZhYjQ5NDExZmQ5YTA0M2YwM2M1Zjc0ZmIzMmEwZWQyNzI=", "commit": {"author": {"name": "Kevin Yeh", "email": "kevinyeah@utexas.edu", "date": "2015-11-20T02:49:24Z"}, "committer": {"name": "Kevin Yeh", "email": "kevinyeah@utexas.edu", "date": "2015-11-20T02:49:24Z"}, "message": "Combine rewrite_single_line_fn and rewrite_fn", "tree": {"sha": "a1bcf0972fd1d6a8f53f15a128a175cb5ca32062", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1bcf0972fd1d6a8f53f15a128a175cb5ca32062"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e9b6dfab49411fd9a043f03c5f74fb32a0ed272", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e9b6dfab49411fd9a043f03c5f74fb32a0ed272", "html_url": "https://github.com/rust-lang/rust/commit/2e9b6dfab49411fd9a043f03c5f74fb32a0ed272", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e9b6dfab49411fd9a043f03c5f74fb32a0ed272/comments", "author": {"login": "kyeah", "id": 2308368, "node_id": "MDQ6VXNlcjIzMDgzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2308368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyeah", "html_url": "https://github.com/kyeah", "followers_url": "https://api.github.com/users/kyeah/followers", "following_url": "https://api.github.com/users/kyeah/following{/other_user}", "gists_url": "https://api.github.com/users/kyeah/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyeah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyeah/subscriptions", "organizations_url": "https://api.github.com/users/kyeah/orgs", "repos_url": "https://api.github.com/users/kyeah/repos", "events_url": "https://api.github.com/users/kyeah/events{/privacy}", "received_events_url": "https://api.github.com/users/kyeah/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kyeah", "id": 2308368, "node_id": "MDQ6VXNlcjIzMDgzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2308368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyeah", "html_url": "https://github.com/kyeah", "followers_url": "https://api.github.com/users/kyeah/followers", "following_url": "https://api.github.com/users/kyeah/following{/other_user}", "gists_url": "https://api.github.com/users/kyeah/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyeah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyeah/subscriptions", "organizations_url": "https://api.github.com/users/kyeah/orgs", "repos_url": "https://api.github.com/users/kyeah/repos", "events_url": "https://api.github.com/users/kyeah/events{/privacy}", "received_events_url": "https://api.github.com/users/kyeah/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15ec5b291292f87697b32f30cc31f863538959a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/15ec5b291292f87697b32f30cc31f863538959a2", "html_url": "https://github.com/rust-lang/rust/commit/15ec5b291292f87697b32f30cc31f863538959a2"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "c7cfc732fc1be2145a996f3f0c1eac265faef66b", "filename": "src/items.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2e9b6dfab49411fd9a043f03c5f74fb32a0ed272/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e9b6dfab49411fd9a043f03c5f74fb32a0ed272/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=2e9b6dfab49411fd9a043f03c5f74fb32a0ed272", "patch": "@@ -177,7 +177,8 @@ impl<'a> FmtVisitor<'a> {\n                       constness: ast::Constness,\n                       abi: abi::Abi,\n                       vis: ast::Visibility,\n-                      span: Span)\n+                      span: Span,\n+                      block: &ast::Block)\n                       -> Option<String> {\n         let mut newline_brace = self.newline_for_brace(&generics.where_clause);\n \n@@ -212,7 +213,7 @@ impl<'a> FmtVisitor<'a> {\n             result.push(' ');\n         }\n \n-        Some(result)\n+        self.single_line_fn(&result, block).or_else(|| Some(result))\n     }\n \n     pub fn rewrite_required_fn(&mut self,\n@@ -447,10 +448,7 @@ impl<'a> FmtVisitor<'a> {\n         Some((result, force_new_line_for_brace))\n     }\n \n-    pub fn rewrite_single_line_fn(&self,\n-                                  fn_str: &str,\n-                                  block: &ast::Block)\n-                                  -> Option<String> {\n+    fn single_line_fn(&self, fn_str: &str, block: &ast::Block) -> Option<String> {\n \n         if fn_str.contains('\\n') {\n             return None;"}, {"sha": "fa51d70a853fa52b310a5b385fe1e3ffb312c62a", "filename": "src/visitor.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2e9b6dfab49411fd9a043f03c5f74fb32a0ed272/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e9b6dfab49411fd9a043f03c5f74fb32a0ed272/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=2e9b6dfab49411fd9a043f03c5f74fb32a0ed272", "patch": "@@ -137,7 +137,8 @@ impl<'a> FmtVisitor<'a> {\n                                 constness,\n                                 abi,\n                                 vis,\n-                                codemap::mk_sp(s.lo, b.span.lo))\n+                                codemap::mk_sp(s.lo, b.span.lo),\n+                                &b)\n             }\n             visit::FnKind::Method(ident, ref sig, vis) => {\n                 self.rewrite_fn(indent,\n@@ -149,19 +150,20 @@ impl<'a> FmtVisitor<'a> {\n                                 sig.constness,\n                                 sig.abi,\n                                 vis.unwrap_or(ast::Visibility::Inherited),\n-                                codemap::mk_sp(s.lo, b.span.lo))\n+                                codemap::mk_sp(s.lo, b.span.lo),\n+                                &b)\n             }\n             visit::FnKind::Closure => None,\n         };\n \n         if let Some(fn_str) = rewrite {\n             self.format_missing_with_indent(s.lo);\n-            if let Some(ref single_line_fn) = self.rewrite_single_line_fn(&fn_str, &b) {\n-                self.buffer.push_str(single_line_fn);\n-                self.last_pos = b.span.hi;\n-                return;\n-            } else {\n-                self.buffer.push_str(&fn_str);\n+            self.buffer.push_str(&fn_str);\n+            if let Some(c) = fn_str.chars().last() {\n+                if c == '}' {\n+                    self.last_pos = b.span.hi;\n+                    return;\n+                }\n             }\n         } else {\n             self.format_missing(b.span.lo);"}]}