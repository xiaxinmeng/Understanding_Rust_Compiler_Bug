{"sha": "4f132cb340c3fdcaedf42a59c6f72f901effe5f4", "node_id": "C_kwDOAAsO6NoAKDRmMTMyY2IzNDBjM2ZkY2FlZGY0MmE1OWM2ZjcyZjkwMWVmZmU1ZjQ", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2021-09-24T15:02:02Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2022-02-28T23:57:25Z"}, "message": "Querify `global_backend_features`\n\nAt the very least this serves to deduplicate the diagnostics that are\noutput about unknown target features provided via CLI.", "tree": {"sha": "ecb552be366e977ba0543540dc11e94b339b088e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecb552be366e977ba0543540dc11e94b339b088e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f132cb340c3fdcaedf42a59c6f72f901effe5f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f132cb340c3fdcaedf42a59c6f72f901effe5f4", "html_url": "https://github.com/rust-lang/rust/commit/4f132cb340c3fdcaedf42a59c6f72f901effe5f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f132cb340c3fdcaedf42a59c6f72f901effe5f4/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "648d038c867a7650a68794940842aa6ab6df6962", "url": "https://api.github.com/repos/rust-lang/rust/commits/648d038c867a7650a68794940842aa6ab6df6962", "html_url": "https://github.com/rust-lang/rust/commit/648d038c867a7650a68794940842aa6ab6df6962"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "20b9b659f1504089615bf797528766b236f78605", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f132cb340c3fdcaedf42a59c6f72f901effe5f4/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f132cb340c3fdcaedf42a59c6f72f901effe5f4/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=4f132cb340c3fdcaedf42a59c6f72f901effe5f4", "patch": "@@ -132,7 +132,7 @@ impl ExtraBackendMethods for GccCodegenBackend {\n         base::compile_codegen_unit(tcx, cgu_name)\n     }\n \n-    fn target_machine_factory(&self, _sess: &Session, _opt_level: OptLevel) -> TargetMachineFactoryFn<Self> {\n+    fn target_machine_factory(&self, _sess: &Session, _opt_level: OptLevel, _features: &[String]) -> TargetMachineFactoryFn<Self> {\n         // TODO(antoyo): set opt level.\n         Arc::new(|_| {\n             Ok(())"}]}