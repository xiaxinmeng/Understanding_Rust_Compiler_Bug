{"sha": "548bdbaa29e0855a87ac5eec073d83babb72d8f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0OGJkYmFhMjllMDg1NWE4N2FjNWVlYzA3M2Q4M2JhYmI3MmQ4ZjI=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-18T11:57:34Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-19T09:19:59Z"}, "message": "std::str: Bench test for char iterators", "tree": {"sha": "7db2ad1ad0c6215df0b26b501f5befca28bb8c90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7db2ad1ad0c6215df0b26b501f5befca28bb8c90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/548bdbaa29e0855a87ac5eec073d83babb72d8f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/548bdbaa29e0855a87ac5eec073d83babb72d8f2", "html_url": "https://github.com/rust-lang/rust/commit/548bdbaa29e0855a87ac5eec073d83babb72d8f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/548bdbaa29e0855a87ac5eec073d83babb72d8f2/comments", "author": null, "committer": null, "parents": [{"sha": "680eb71564ebba5e76ce1e1a8287b30042332cc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/680eb71564ebba5e76ce1e1a8287b30042332cc5", "html_url": "https://github.com/rust-lang/rust/commit/680eb71564ebba5e76ce1e1a8287b30042332cc5"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "3d793bc8e77d8a1897c1512bd41e5750fffe3603", "filename": "src/libstd/str.rs", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/548bdbaa29e0855a87ac5eec073d83babb72d8f2/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/548bdbaa29e0855a87ac5eec073d83babb72d8f2/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=548bdbaa29e0855a87ac5eec073d83babb72d8f2", "patch": "@@ -3267,6 +3267,62 @@ mod tests {\n mod bench {\n     use extra::test::BenchHarness;\n     use super::*;\n+    use prelude::*;\n+\n+    #[bench]\n+    fn char_iterator(bh: &mut BenchHarness) {\n+        let s = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam; Mary had a little lamb, Little lamb\";\n+        let len = s.char_len();\n+\n+        do bh.iter {\n+            assert_eq!(s.iter().len(), len);\n+        }\n+    }\n+\n+    #[bench]\n+    fn char_iterator_ascii(bh: &mut BenchHarness) {\n+        let s = \"Mary had a little lamb, Little lamb\n+        Mary had a little lamb, Little lamb\n+        Mary had a little lamb, Little lamb\n+        Mary had a little lamb, Little lamb\n+        Mary had a little lamb, Little lamb\n+        Mary had a little lamb, Little lamb\";\n+        let len = s.char_len();\n+\n+        do bh.iter {\n+            assert_eq!(s.iter().len(), len);\n+        }\n+    }\n+\n+    #[bench]\n+    fn char_iterator_rev(bh: &mut BenchHarness) {\n+        let s = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam; Mary had a little lamb, Little lamb\";\n+        let len = s.char_len();\n+\n+        do bh.iter {\n+            assert_eq!(s.rev_iter().len(), len);\n+        }\n+    }\n+\n+    #[bench]\n+    fn char_offset_iterator(bh: &mut BenchHarness) {\n+        let s = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam; Mary had a little lamb, Little lamb\";\n+        let len = s.char_len();\n+\n+        do bh.iter {\n+            assert_eq!(s.char_offset_iter().len(), len);\n+        }\n+    }\n+\n+    #[bench]\n+    fn char_offset_iterator_rev(bh: &mut BenchHarness) {\n+        let s = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam; Mary had a little lamb, Little lamb\";\n+        let len = s.char_len();\n+\n+        do bh.iter {\n+            assert_eq!(s.char_offset_rev_iter().len(), len);\n+        }\n+    }\n \n     #[bench]\n     fn is_utf8_100_ascii(bh: &mut BenchHarness) {"}]}