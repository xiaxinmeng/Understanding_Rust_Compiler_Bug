{"sha": "a2e5827866876e9bafcf1f4e94f4e354e500420a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZTU4Mjc4NjY4NzZlOWJhZmNmMWY0ZTk0ZjRlMzU0ZTUwMDQyMGE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-15T03:24:15Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-15T03:49:22Z"}, "message": "core::rt: All context switches are followed by a cleanup action", "tree": {"sha": "3f537c799d0aa8f3e20e8bff7de94c1f0c491a83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f537c799d0aa8f3e20e8bff7de94c1f0c491a83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2e5827866876e9bafcf1f4e94f4e354e500420a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2e5827866876e9bafcf1f4e94f4e354e500420a", "html_url": "https://github.com/rust-lang/rust/commit/a2e5827866876e9bafcf1f4e94f4e354e500420a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2e5827866876e9bafcf1f4e94f4e354e500420a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f52aecb1e7a53bf46280d057654746c34e89859", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f52aecb1e7a53bf46280d057654746c34e89859", "html_url": "https://github.com/rust-lang/rust/commit/5f52aecb1e7a53bf46280d057654746c34e89859"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "7cfb5b7903f7f253f3fac966063c4b7c5420ec96", "filename": "src/libcore/rt/sched.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a2e5827866876e9bafcf1f4e94f4e354e500420a/src%2Flibcore%2Frt%2Fsched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2e5827866876e9bafcf1f4e94f4e354e500420a/src%2Flibcore%2Frt%2Fsched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fsched.rs?ref=a2e5827866876e9bafcf1f4e94f4e354e500420a", "patch": "@@ -60,6 +60,7 @@ impl HackAroundBorrowCk for UnsafeTaskReceiver {\n }\n \n enum CleanupJob {\n+    DoNothing,\n     RescheduleTask(~Task),\n     RecycleTask(~Task),\n     GiveTask(~Task, UnsafeTaskReceiver)\n@@ -148,6 +149,7 @@ pub impl Scheduler {\n \n         // Store the task in the scheduler so it can be grabbed later\n         self.current_task = Some(task);\n+        self.enqueue_cleanup_job(DoNothing);\n \n         // Take pointers to both the task and scheduler's saved registers.\n         {\n@@ -243,14 +245,13 @@ pub impl Scheduler {\n     }\n \n     fn run_cleanup_job(&mut self) {\n-        rtdebug!(\"running cleanup jobs\");\n+        rtdebug!(\"running cleanup job\");\n \n-        if self.cleanup_job.is_none() {\n-            return;\n-        }\n+        assert!(self.cleanup_job.is_some());\n \n         let cleanup_job = self.cleanup_job.swap_unwrap();\n         match cleanup_job {\n+            DoNothing => { }\n             RescheduleTask(task) => {\n                 // NB: Pushing to the *front* of the queue\n                 self.task_queue.push_front(task);\n@@ -278,9 +279,10 @@ pub impl Scheduler {\n             Some(GiveTask(~ref task, _)) => {\n                 Some(task)\n             }\n-            None => {\n+            Some(DoNothing) => {\n                 None\n             }\n+            None => fail!(fmt!(\"all context switches should have a cleanup job\"))\n         };\n         // XXX: Pattern matching mutable pointers above doesn't work\n         // because borrowck thinks the three patterns are conflicting"}]}