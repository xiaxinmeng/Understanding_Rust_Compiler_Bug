{"sha": "bcbd2ccc8d4591705fd5b63a5d5f5fc320cd89be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYmQyY2NjOGQ0NTkxNzA1ZmQ1YjYzYTVkNWY1ZmMzMjBjZDg5YmU=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-09-23T21:25:23Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-09-23T21:25:23Z"}, "message": "Add `keep-stage-std` to `x.py`\n\nThis keeps only the `std` artifacts compiled by the given stage, not the\ncompiler. This is useful when working on the latter stages of the\ncompiler in tandem with the standard library, since you don't have to\nrebuild the *entire* compiler when the standard library changes.", "tree": {"sha": "a9969e5fa340e6fc4fefc3236ae593e29e0b46a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9969e5fa340e6fc4fefc3236ae593e29e0b46a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcbd2ccc8d4591705fd5b63a5d5f5fc320cd89be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcbd2ccc8d4591705fd5b63a5d5f5fc320cd89be", "html_url": "https://github.com/rust-lang/rust/commit/bcbd2ccc8d4591705fd5b63a5d5f5fc320cd89be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcbd2ccc8d4591705fd5b63a5d5f5fc320cd89be/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6008fac97f81a3fc51668b0c7fa0e2e6f2a599b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6008fac97f81a3fc51668b0c7fa0e2e6f2a599b", "html_url": "https://github.com/rust-lang/rust/commit/a6008fac97f81a3fc51668b0c7fa0e2e6f2a599b"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "02095c27335e4aa3f0fdd50f44c8ecfaba1fddbd", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bcbd2ccc8d4591705fd5b63a5d5f5fc320cd89be/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcbd2ccc8d4591705fd5b63a5d5f5fc320cd89be/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=bcbd2ccc8d4591705fd5b63a5d5f5fc320cd89be", "patch": "@@ -59,7 +59,9 @@ impl Step for Std {\n         let target = self.target;\n         let compiler = self.compiler;\n \n-        if builder.config.keep_stage.contains(&compiler.stage) {\n+        if builder.config.keep_stage.contains(&compiler.stage)\n+            || builder.config.keep_stage_std.contains(&compiler.stage)\n+        {\n             builder.info(\"Warning: Using a potentially old libstd. This may not behave well.\");\n             builder.ensure(StdLink { compiler, target_compiler: compiler, target });\n             return;\n@@ -472,6 +474,11 @@ impl Step for Rustc {\n \n         if builder.config.keep_stage.contains(&compiler.stage) {\n             builder.info(\"Warning: Using a potentially old librustc. This may not behave well.\");\n+            builder.info(\"Warning: Use `--keep-stage-std` if you want to rebuild the compiler when it changes\");\n+            builder.info(\n+                \"Warning: Please file a GitHub issue if `--keep-stage-std` doesn't work for you.\",\n+            );\n+            builder.info(\"Warning: It may replace `--keep-stage` in the future\");\n             builder.ensure(RustcLink { compiler, target_compiler: compiler, target });\n             return;\n         }"}, {"sha": "53fef7a838df62dc11152491dea44a32ac0d1719", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bcbd2ccc8d4591705fd5b63a5d5f5fc320cd89be/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcbd2ccc8d4591705fd5b63a5d5f5fc320cd89be/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=bcbd2ccc8d4591705fd5b63a5d5f5fc320cd89be", "patch": "@@ -71,6 +71,7 @@ pub struct Config {\n     pub on_fail: Option<String>,\n     pub stage: u32,\n     pub keep_stage: Vec<u32>,\n+    pub keep_stage_std: Vec<u32>,\n     pub src: PathBuf,\n     pub jobs: Option<u32>,\n     pub cmd: Subcommand,\n@@ -539,6 +540,7 @@ impl Config {\n         config.incremental = flags.incremental;\n         config.dry_run = flags.dry_run;\n         config.keep_stage = flags.keep_stage;\n+        config.keep_stage_std = flags.keep_stage_std;\n         config.bindir = \"bin\".into(); // default\n         if let Some(value) = flags.deny_warnings {\n             config.deny_warnings = value;"}, {"sha": "dad31fc77be17677c8e1e61b9ca1aeea96fe6c1a", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bcbd2ccc8d4591705fd5b63a5d5f5fc320cd89be/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcbd2ccc8d4591705fd5b63a5d5f5fc320cd89be/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=bcbd2ccc8d4591705fd5b63a5d5f5fc320cd89be", "patch": "@@ -19,6 +19,7 @@ pub struct Flags {\n     pub on_fail: Option<String>,\n     pub stage: Option<u32>,\n     pub keep_stage: Vec<u32>,\n+    pub keep_stage_std: Vec<u32>,\n \n     pub host: Option<Vec<TargetSelection>>,\n     pub target: Option<Vec<TargetSelection>>,\n@@ -144,6 +145,13 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n             (pass multiple times to keep e.g., both stages 0 and 1)\",\n             \"N\",\n         );\n+        opts.optmulti(\n+            \"\",\n+            \"keep-stage-std\",\n+            \"stage(s) of the standard library to keep without recompiling \\\n+            (pass multiple times to keep e.g., both stages 0 and 1)\",\n+            \"N\",\n+        );\n         opts.optopt(\"\", \"src\", \"path to the root of the rust checkout\", \"DIR\");\n         let j_msg = format!(\n             \"number of jobs to run in parallel; \\\n@@ -510,7 +518,9 @@ Arguments:\n                 println!(\"--stage not supported for x.py check, always treated as stage 0\");\n                 process::exit(1);\n             }\n-            if matches.opt_str(\"keep-stage\").is_some() {\n+            if matches.opt_str(\"keep-stage\").is_some()\n+                || matches.opt_str(\"keep-stage-std\").is_some()\n+            {\n                 println!(\"--keep-stage not supported for x.py check, only one stage available\");\n                 process::exit(1);\n             }\n@@ -528,6 +538,11 @@ Arguments:\n                 .into_iter()\n                 .map(|j| j.parse().expect(\"`keep-stage` should be a number\"))\n                 .collect(),\n+            keep_stage_std: matches\n+                .opt_strs(\"keep-stage-std\")\n+                .into_iter()\n+                .map(|j| j.parse().expect(\"`keep-stage-std` should be a number\"))\n+                .collect(),\n             host: if matches.opt_present(\"host\") {\n                 Some(\n                     split(&matches.opt_strs(\"host\"))"}]}