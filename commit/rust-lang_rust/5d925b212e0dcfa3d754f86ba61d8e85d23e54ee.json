{"sha": "5d925b212e0dcfa3d754f86ba61d8e85d23e54ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkOTI1YjIxMmUwZGNmYTNkNzU0Zjg2YmE2MWQ4ZTg1ZDIzZTU0ZWU=", "commit": {"author": {"name": "Gareth Daniel Smith", "email": "garethdanielsmith@gmail.com", "date": "2012-09-18T20:46:53Z"}, "committer": {"name": "Gareth Daniel Smith", "email": "garethdanielsmith@gmail.com", "date": "2012-09-18T20:46:53Z"}, "message": "Make vec::view a method too.", "tree": {"sha": "3fcd62236d68dde73f5c7c9a27ff68cf4ee52984", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fcd62236d68dde73f5c7c9a27ff68cf4ee52984"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d925b212e0dcfa3d754f86ba61d8e85d23e54ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d925b212e0dcfa3d754f86ba61d8e85d23e54ee", "html_url": "https://github.com/rust-lang/rust/commit/5d925b212e0dcfa3d754f86ba61d8e85d23e54ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d925b212e0dcfa3d754f86ba61d8e85d23e54ee/comments", "author": {"login": "Dretch", "id": 1428731, "node_id": "MDQ6VXNlcjE0Mjg3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1428731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dretch", "html_url": "https://github.com/Dretch", "followers_url": "https://api.github.com/users/Dretch/followers", "following_url": "https://api.github.com/users/Dretch/following{/other_user}", "gists_url": "https://api.github.com/users/Dretch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dretch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dretch/subscriptions", "organizations_url": "https://api.github.com/users/Dretch/orgs", "repos_url": "https://api.github.com/users/Dretch/repos", "events_url": "https://api.github.com/users/Dretch/events{/privacy}", "received_events_url": "https://api.github.com/users/Dretch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dretch", "id": 1428731, "node_id": "MDQ6VXNlcjE0Mjg3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1428731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dretch", "html_url": "https://github.com/Dretch", "followers_url": "https://api.github.com/users/Dretch/followers", "following_url": "https://api.github.com/users/Dretch/following{/other_user}", "gists_url": "https://api.github.com/users/Dretch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dretch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dretch/subscriptions", "organizations_url": "https://api.github.com/users/Dretch/orgs", "repos_url": "https://api.github.com/users/Dretch/repos", "events_url": "https://api.github.com/users/Dretch/events{/privacy}", "received_events_url": "https://api.github.com/users/Dretch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb35039fe83d6d13b5c7c08fe761ab85374c96d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb35039fe83d6d13b5c7c08fe761ab85374c96d0", "html_url": "https://github.com/rust-lang/rust/commit/eb35039fe83d6d13b5c7c08fe761ab85374c96d0"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "9622e3a11b4b3b04777bb10387aa970d71d0d72c", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5d925b212e0dcfa3d754f86ba61d8e85d23e54ee/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d925b212e0dcfa3d754f86ba61d8e85d23e54ee/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=5d925b212e0dcfa3d754f86ba61d8e85d23e54ee", "patch": "@@ -1625,6 +1625,7 @@ impl<T: Copy> &[const T]: CopyableVector<T> {\n }\n \n trait ImmutableVector<T> {\n+    pure fn view(start: uint, end: uint) -> &[T];\n     pure fn foldr<U: Copy>(z: U, p: fn(T, U) -> U) -> U;\n     pure fn iter(f: fn(T));\n     pure fn iteri(f: fn(uint, T));\n@@ -1647,6 +1648,10 @@ trait ImmutableEqVector<T: Eq> {\n \n /// Extension methods for vectors\n impl<T> &[T]: ImmutableVector<T> {\n+    /// Return a slice that points into another slice.\n+    pure fn view(start: uint, end: uint) -> &[T] {\n+        view(self, start, end)\n+    }\n     /// Reduce a vector from right to left\n     #[inline]\n     pure fn foldr<U: Copy>(z: U, p: fn(T, U) -> U) -> U { foldr(self, z, p) }\n@@ -2909,17 +2914,14 @@ mod tests {\n         assert capacity(v) == 10u;\n     }\n \n-/*\n     #[test]\n-    #[ignore] // region inference doesn't work well enough for this yet.\n     fn test_view() {\n         let v = ~[1, 2, 3, 4, 5];\n-        let v = view(v, 1u, 3u);\n+        let v = v.view(1u, 3u);\n         assert(len(v) == 2u);\n         assert(v[0] == 2);\n         assert(v[1] == 3);\n     }\n-*/\n }\n \n // Local Variables:"}]}