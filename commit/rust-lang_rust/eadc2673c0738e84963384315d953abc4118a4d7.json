{"sha": "eadc2673c0738e84963384315d953abc4118a4d7", "node_id": "C_kwDOAAsO6NoAKGVhZGMyNjczYzA3MzhlODQ5NjMzODQzMTVkOTUzYWJjNDExOGE0ZDc", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-22T12:15:09Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-23T12:05:56Z"}, "message": "Regen docs", "tree": {"sha": "04d4f43502af84a33f6e61fdbd59627578cf2161", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04d4f43502af84a33f6e61fdbd59627578cf2161"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eadc2673c0738e84963384315d953abc4118a4d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eadc2673c0738e84963384315d953abc4118a4d7", "html_url": "https://github.com/rust-lang/rust/commit/eadc2673c0738e84963384315d953abc4118a4d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eadc2673c0738e84963384315d953abc4118a4d7/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9", "html_url": "https://github.com/rust-lang/rust/commit/f6f0516603b50d2b4c77fc0bcabd0ee3fe1b09e9"}], "stats": {"total": 120, "additions": 98, "deletions": 22}, "files": [{"sha": "54dcb42d99c789ea142e8873dee91d246114692e", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/eadc2673c0738e84963384315d953abc4118a4d7/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eadc2673c0738e84963384315d953abc4118a4d7/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=eadc2673c0738e84963384315d953abc4118a4d7", "patch": "@@ -385,25 +385,11 @@ config_data! {\n         /// available on a nightly build.\n         rustfmt_rangeFormatting_enable: bool = \"false\",\n \n-        /// Use semantic tokens for strings.\n-        ///\n-        /// In some editors (e.g. vscode) semantic tokens override other highlighting grammars.\n-        /// By disabling semantic tokens for strings, other grammars can be used to highlight\n-        /// their contents.\n-        semanticHighlighting_strings_enable: bool = \"true\",\n-        /// Use semantic tokens for punctuations.\n-        ///\n-        /// When disabled, rust-analyzer will emit semantic tokens only for punctuation tokens when\n-        /// they are tagged with modifiers or have a special role.\n-        semanticHighlighting_punctuation_enable: bool = \"false\",\n-        /// Use specialized semantic tokens for punctuations.\n+        /// Inject additional highlighting into doc comments.\n         ///\n-        /// When enabled, rust-analyzer will emit special token types for punctuation tokens instead\n-        /// of the generic `punctuation` token type.\n-        semanticHighlighting_punctuation_specialization_enable: bool = \"false\",\n-        /// When enabled, rust-analyzer will emit a punctuation semantic token for the `!` of macro\n-        /// calls.\n-        semanticHighlighting_punctuation_separate_macro_bang: bool = \"false\",\n+        /// When enabled, rust-analyzer will highlight rust source in doc comments as well as intra\n+        /// doc links.\n+        semanticHighlighting_doc_comment_inject_enable: bool = \"true\",\n         /// Use semantic tokens for operators.\n         ///\n         /// When disabled, rust-analyzer will emit semantic tokens only for operator tokens when\n@@ -414,11 +400,25 @@ config_data! {\n         /// When enabled, rust-analyzer will emit special token types for operator tokens instead\n         /// of the generic `operator` token type.\n         semanticHighlighting_operator_specialization_enable: bool = \"false\",\n-        /// Inject additional highlighting into doc comments.\n+        /// Use semantic tokens for punctuations.\n         ///\n-        /// When enabled, rust-analyzer will highlight rust source in doc comments as well as intra\n-        /// doc links.\n-        semanticHighlighting_doc_comment_inject_enable: bool = \"true\",\n+        /// When disabled, rust-analyzer will emit semantic tokens only for punctuation tokens when\n+        /// they are tagged with modifiers or have a special role.\n+        semanticHighlighting_punctuation_enable: bool = \"false\",\n+        /// When enabled, rust-analyzer will emit a punctuation semantic token for the `!` of macro\n+        /// calls.\n+        semanticHighlighting_punctuation_separate_macro_bang: bool = \"false\",\n+        /// Use specialized semantic tokens for punctuations.\n+        ///\n+        /// When enabled, rust-analyzer will emit special token types for punctuation tokens instead\n+        /// of the generic `punctuation` token type.\n+        semanticHighlighting_punctuation_specialization_enable: bool = \"false\",\n+        /// Use semantic tokens for strings.\n+        ///\n+        /// In some editors (e.g. vscode) semantic tokens override other highlighting grammars.\n+        /// By disabling semantic tokens for strings, other grammars can be used to highlight\n+        /// their contents.\n+        semanticHighlighting_strings_enable: bool = \"true\",\n \n         /// Show full signature of the callable. Only shows parameters if disabled.\n         signatureInfo_detail: SignatureDetail                           = \"\\\"full\\\"\","}, {"sha": "72b925726479e014c18142acb6b4546bffc2b2b8", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/eadc2673c0738e84963384315d953abc4118a4d7/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/eadc2673c0738e84963384315d953abc4118a4d7/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=eadc2673c0738e84963384315d953abc4118a4d7", "patch": "@@ -587,6 +587,52 @@ Enables the use of rustfmt's unstable range formatting command for the\n `textDocument/rangeFormatting` request. The rustfmt option is unstable and only\n available on a nightly build.\n --\n+[[rust-analyzer.semanticHighlighting.doc.comment.inject.enable]]rust-analyzer.semanticHighlighting.doc.comment.inject.enable (default: `true`)::\n++\n+--\n+Inject additional highlighting into doc comments.\n+\n+When enabled, rust-analyzer will highlight rust source in doc comments as well as intra\n+doc links.\n+--\n+[[rust-analyzer.semanticHighlighting.operator.enable]]rust-analyzer.semanticHighlighting.operator.enable (default: `true`)::\n++\n+--\n+Use semantic tokens for operators.\n+\n+When disabled, rust-analyzer will emit semantic tokens only for operator tokens when\n+they are tagged with modifiers.\n+--\n+[[rust-analyzer.semanticHighlighting.operator.specialization.enable]]rust-analyzer.semanticHighlighting.operator.specialization.enable (default: `false`)::\n++\n+--\n+Use specialized semantic tokens for operators.\n+\n+When enabled, rust-analyzer will emit special token types for operator tokens instead\n+of the generic `operator` token type.\n+--\n+[[rust-analyzer.semanticHighlighting.punctuation.enable]]rust-analyzer.semanticHighlighting.punctuation.enable (default: `false`)::\n++\n+--\n+Use semantic tokens for punctuations.\n+\n+When disabled, rust-analyzer will emit semantic tokens only for punctuation tokens when\n+they are tagged with modifiers or have a special role.\n+--\n+[[rust-analyzer.semanticHighlighting.punctuation.separate.macro.bang]]rust-analyzer.semanticHighlighting.punctuation.separate.macro.bang (default: `false`)::\n++\n+--\n+When enabled, rust-analyzer will emit a punctuation semantic token for the `!` of macro\n+calls.\n+--\n+[[rust-analyzer.semanticHighlighting.punctuation.specialization.enable]]rust-analyzer.semanticHighlighting.punctuation.specialization.enable (default: `false`)::\n++\n+--\n+Use specialized semantic tokens for punctuations.\n+\n+When enabled, rust-analyzer will emit special token types for punctuation tokens instead\n+of the generic `punctuation` token type.\n+--\n [[rust-analyzer.semanticHighlighting.strings.enable]]rust-analyzer.semanticHighlighting.strings.enable (default: `true`)::\n +\n --"}, {"sha": "767c5875bf7e7e844c1178675ee082288ff1ac29", "filename": "editors/code/package.json", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/eadc2673c0738e84963384315d953abc4118a4d7/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/eadc2673c0738e84963384315d953abc4118a4d7/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=eadc2673c0738e84963384315d953abc4118a4d7", "patch": "@@ -1084,6 +1084,36 @@\n                     \"default\": false,\n                     \"type\": \"boolean\"\n                 },\n+                \"rust-analyzer.semanticHighlighting.doc.comment.inject.enable\": {\n+                    \"markdownDescription\": \"Inject additional highlighting into doc comments.\\n\\nWhen enabled, rust-analyzer will highlight rust source in doc comments as well as intra\\ndoc links.\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n+                \"rust-analyzer.semanticHighlighting.operator.enable\": {\n+                    \"markdownDescription\": \"Use semantic tokens for operators.\\n\\nWhen disabled, rust-analyzer will emit semantic tokens only for operator tokens when\\nthey are tagged with modifiers.\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n+                \"rust-analyzer.semanticHighlighting.operator.specialization.enable\": {\n+                    \"markdownDescription\": \"Use specialized semantic tokens for operators.\\n\\nWhen enabled, rust-analyzer will emit special token types for operator tokens instead\\nof the generic `operator` token type.\",\n+                    \"default\": false,\n+                    \"type\": \"boolean\"\n+                },\n+                \"rust-analyzer.semanticHighlighting.punctuation.enable\": {\n+                    \"markdownDescription\": \"Use semantic tokens for punctuations.\\n\\nWhen disabled, rust-analyzer will emit semantic tokens only for punctuation tokens when\\nthey are tagged with modifiers or have a special role.\",\n+                    \"default\": false,\n+                    \"type\": \"boolean\"\n+                },\n+                \"rust-analyzer.semanticHighlighting.punctuation.separate.macro.bang\": {\n+                    \"markdownDescription\": \"When enabled, rust-analyzer will emit a punctuation semantic token for the `!` of macro\\ncalls.\",\n+                    \"default\": false,\n+                    \"type\": \"boolean\"\n+                },\n+                \"rust-analyzer.semanticHighlighting.punctuation.specialization.enable\": {\n+                    \"markdownDescription\": \"Use specialized semantic tokens for punctuations.\\n\\nWhen enabled, rust-analyzer will emit special token types for punctuation tokens instead\\nof the generic `punctuation` token type.\",\n+                    \"default\": false,\n+                    \"type\": \"boolean\"\n+                },\n                 \"rust-analyzer.semanticHighlighting.strings.enable\": {\n                     \"markdownDescription\": \"Use semantic tokens for strings.\\n\\nIn some editors (e.g. vscode) semantic tokens override other highlighting grammars.\\nBy disabling semantic tokens for strings, other grammars can be used to highlight\\ntheir contents.\",\n                     \"default\": true,"}]}