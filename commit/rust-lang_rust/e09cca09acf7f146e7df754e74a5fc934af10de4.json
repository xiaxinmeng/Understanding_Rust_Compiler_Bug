{"sha": "e09cca09acf7f146e7df754e74a5fc934af10de4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwOWNjYTA5YWNmN2YxNDZlN2RmNzU0ZTc0YTVmYzkzNGFmMTBkZTQ=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-08-12T22:42:42Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-08-12T22:42:42Z"}, "message": "Add option to use the new symbol mangling in rustc/std", "tree": {"sha": "4d0c0e683c0f7a931299542658d03c300f14a2b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d0c0e683c0f7a931299542658d03c300f14a2b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e09cca09acf7f146e7df754e74a5fc934af10de4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e09cca09acf7f146e7df754e74a5fc934af10de4", "html_url": "https://github.com/rust-lang/rust/commit/e09cca09acf7f146e7df754e74a5fc934af10de4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e09cca09acf7f146e7df754e74a5fc934af10de4/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1275cc15d6aa0597f0b3bbf8aa0750239f9da7b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1275cc15d6aa0597f0b3bbf8aa0750239f9da7b2", "html_url": "https://github.com/rust-lang/rust/commit/1275cc15d6aa0597f0b3bbf8aa0750239f9da7b2"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "36587cc07844147be96b41801e9f6961fc7d5398", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e09cca09acf7f146e7df754e74a5fc934af10de4/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/e09cca09acf7f146e7df754e74a5fc934af10de4/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=e09cca09acf7f146e7df754e74a5fc934af10de4", "patch": "@@ -475,6 +475,10 @@\n # This only applies from stage 1 onwards, and only for Windows targets.\n #control-flow-guard = false\n \n+# Enable symbol-mangling-version v0. This can be helpful when profiling rustc,\n+# as generics will be preserved in symbols (rather than erased into opaque T).\n+#new-symbol-mangling = false\n+\n # =============================================================================\n # Options for specific targets\n #"}, {"sha": "af153b526b84bfa80cedee60d3cedf554e0e13dd", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e09cca09acf7f146e7df754e74a5fc934af10de4/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e09cca09acf7f146e7df754e74a5fc934af10de4/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=e09cca09acf7f146e7df754e74a5fc934af10de4", "patch": "@@ -859,6 +859,10 @@ impl<'a> Builder<'a> {\n             rustflags.arg(\"--cfg=bootstrap\");\n         }\n \n+        if self.config.rust_new_symbol_mangling {\n+            rustflags.arg(\"-Zsymbol-mangling-version=v0\");\n+        }\n+\n         // FIXME: It might be better to use the same value for both `RUSTFLAGS` and `RUSTDOCFLAGS`,\n         // but this breaks CI. At the very least, stage0 `rustdoc` needs `--cfg bootstrap`. See\n         // #71458."}, {"sha": "70b1c471ac3f0e6f11efc24d4d0b17a17a081354", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e09cca09acf7f146e7df754e74a5fc934af10de4/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e09cca09acf7f146e7df754e74a5fc934af10de4/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=e09cca09acf7f146e7df754e74a5fc934af10de4", "patch": "@@ -112,6 +112,7 @@ pub struct Config {\n     pub rust_verify_llvm_ir: bool,\n     pub rust_thin_lto_import_instr_limit: Option<u32>,\n     pub rust_remap_debuginfo: bool,\n+    pub rust_new_symbol_mangling: bool,\n \n     pub build: TargetSelection,\n     pub hosts: Vec<TargetSelection>,\n@@ -410,6 +411,7 @@ struct Rust {\n     test_compare_mode: Option<bool>,\n     llvm_libunwind: Option<bool>,\n     control_flow_guard: Option<bool>,\n+    new_symbol_mangling: Option<bool>,\n }\n \n /// TOML representation of how each build target is configured.\n@@ -637,6 +639,7 @@ impl Config {\n             debuginfo_level_tests = rust.debuginfo_level_tests;\n             optimize = rust.optimize;\n             ignore_git = rust.ignore_git;\n+            set(&mut config.rust_new_symbol_mangling, rust.new_symbol_mangling);\n             set(&mut config.rust_optimize_tests, rust.optimize_tests);\n             set(&mut config.codegen_tests, rust.codegen_tests);\n             set(&mut config.rust_rpath, rust.rpath);"}]}