{"sha": "5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNjdhYzg3MTk5Y2JmNThkOWNjNDZlM2JhMzRkZDNkNzVjODhlNGM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-02-17T15:32:25Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-02-17T16:01:35Z"}, "message": "add some sample UI error test cases\n\nThese are some samples that I have been focusing on improving over\ntime. In this PR, I mainly want to stem the bleeding where we in some\ncases we show an error that gives you no possible way to divine the\nproblem.", "tree": {"sha": "b6125521b19a548388cf8cac9dd09cc254ea7d01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6125521b19a548388cf8cac9dd09cc254ea7d01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "html_url": "https://github.com/rust-lang/rust/commit/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a", "html_url": "https://github.com/rust-lang/rust/commit/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a"}], "stats": {"total": 243, "additions": 243, "deletions": 0}, "files": [{"sha": "30239f4c0946c0234f36ab67551a0dd6195ca11e", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.rs?ref=5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn foo<'a>(x: &'a i32, y: &i32) -> &'a i32 {\n+    if x > y { x } else { y }\n+}\n+\n+fn main() { }"}, {"sha": "85e05422ab3b2f2e58aae9ec34194294dbc425f6", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr?ref=5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "patch": "@@ -0,0 +1,25 @@\n+error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n+  --> $DIR/ex1-return-one-existing-name-if-else.rs:12:27\n+   |\n+12 |     if x > y { x } else { y }\n+   |                           ^\n+   |\n+note: ...the reference is valid for the lifetime 'a as defined on the body at 11:43...\n+  --> $DIR/ex1-return-one-existing-name-if-else.rs:11:44\n+   |\n+11 |   fn foo<'a>(x: &'a i32, y: &i32) -> &'a i32 {\n+   |  ____________________________________________^ starting here...\n+12 | |     if x > y { x } else { y }\n+13 | | }\n+   | |_^ ...ending here\n+note: ...but the borrowed content is only valid for the anonymous lifetime #1 defined on the body at 11:43\n+  --> $DIR/ex1-return-one-existing-name-if-else.rs:11:44\n+   |\n+11 |   fn foo<'a>(x: &'a i32, y: &i32) -> &'a i32 {\n+   |  ____________________________________________^ starting here...\n+12 | |     if x > y { x } else { y }\n+13 | | }\n+   | |_^ ...ending here\n+\n+error: aborting due to previous error\n+"}, {"sha": "098950e13b3154f8832fd1240afde3319587b08d", "filename": "src/test/ui/lifetime-errors/ex1b-return-no-names-if-else.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex1b-return-no-names-if-else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex1b-return-no-names-if-else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1b-return-no-names-if-else.rs?ref=5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn foo(x: &i32, y: &i32) -> &i32 {\n+    if x > y { x } else { y }\n+}\n+\n+fn main() { }"}, {"sha": "fccc44caac81a5f7e25b11cdb0ca893266387bd7", "filename": "src/test/ui/lifetime-errors/ex1b-return-no-names-if-else.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex1b-return-no-names-if-else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex1b-return-no-names-if-else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1b-return-no-names-if-else.stderr?ref=5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "patch": "@@ -0,0 +1,10 @@\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/ex1b-return-no-names-if-else.rs:11:29\n+   |\n+11 | fn foo(x: &i32, y: &i32) -> &i32 {\n+   |                             ^ expected lifetime parameter\n+   |\n+   = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `x` or `y`\n+\n+error: aborting due to previous error\n+"}, {"sha": "71a1c865e09957e447621d70e0ac45e1717abe1f", "filename": "src/test/ui/lifetime-errors/ex2a-push-one-existing-name.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.rs?ref=5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Ref<'a, T: 'a> {\n+    data: &'a T\n+}\n+\n+fn foo<'a>(x: &mut Vec<Ref<'a, i32>>, y: Ref<i32>) {\n+    x.push(y);\n+}\n+\n+fn main() { }"}, {"sha": "6f42a9f679a6a51225746d8d0f386139afc0f8f4", "filename": "src/test/ui/lifetime-errors/ex2a-push-one-existing-name.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr?ref=5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "patch": "@@ -0,0 +1,27 @@\n+error[E0308]: mismatched types\n+  --> $DIR/ex2a-push-one-existing-name.rs:16:12\n+   |\n+16 |     x.push(y);\n+   |            ^ lifetime mismatch\n+   |\n+   = note: expected type `Ref<'a, i32>`\n+              found type `Ref<'_, i32>`\n+note: the anonymous lifetime #2 defined on the body at 15:51...\n+  --> $DIR/ex2a-push-one-existing-name.rs:15:52\n+   |\n+15 |   fn foo<'a>(x: &mut Vec<Ref<'a, i32>>, y: Ref<i32>) {\n+   |  ____________________________________________________^ starting here...\n+16 | |     x.push(y);\n+17 | | }\n+   | |_^ ...ending here\n+note: ...does not necessarily outlive the lifetime 'a as defined on the body at 15:51\n+  --> $DIR/ex2a-push-one-existing-name.rs:15:52\n+   |\n+15 |   fn foo<'a>(x: &mut Vec<Ref<'a, i32>>, y: Ref<i32>) {\n+   |  ____________________________________________________^ starting here...\n+16 | |     x.push(y);\n+17 | | }\n+   | |_^ ...ending here\n+\n+error: aborting due to previous error\n+"}, {"sha": "09038d8ce9027ce0708f2f314c58bd5e637d61e8", "filename": "src/test/ui/lifetime-errors/ex2b-push-no-existing-names.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.rs?ref=5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Ref<'a, T: 'a> {\n+    data: &'a T\n+}\n+\n+fn foo(x: &mut Vec<Ref<i32>>, y: Ref<i32>) {\n+    x.push(y);\n+}\n+\n+fn main() { }"}, {"sha": "edc1c2362de57c597c75e923f1d8d81cca6dee04", "filename": "src/test/ui/lifetime-errors/ex2b-push-no-existing-names.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.stderr?ref=5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "patch": "@@ -0,0 +1,27 @@\n+error[E0308]: mismatched types\n+  --> $DIR/ex2b-push-no-existing-names.rs:16:12\n+   |\n+16 |     x.push(y);\n+   |            ^ lifetime mismatch\n+   |\n+   = note: expected type `Ref<'_, i32>`\n+              found type `Ref<'_, i32>`\n+note: the anonymous lifetime #3 defined on the body at 15:43...\n+  --> $DIR/ex2b-push-no-existing-names.rs:15:44\n+   |\n+15 |   fn foo(x: &mut Vec<Ref<i32>>, y: Ref<i32>) {\n+   |  ____________________________________________^ starting here...\n+16 | |     x.push(y);\n+17 | | }\n+   | |_^ ...ending here\n+note: ...does not necessarily outlive the anonymous lifetime #2 defined on the body at 15:43\n+  --> $DIR/ex2b-push-no-existing-names.rs:15:44\n+   |\n+15 |   fn foo(x: &mut Vec<Ref<i32>>, y: Ref<i32>) {\n+   |  ____________________________________________^ starting here...\n+16 | |     x.push(y);\n+17 | | }\n+   | |_^ ...ending here\n+\n+error: aborting due to previous error\n+"}, {"sha": "cb083f778deeb7e2e8d0e493988a60342a3efdd5", "filename": "src/test/ui/lifetime-errors/ex2c-push-inference-variable.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.rs?ref=5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Ref<'a, T: 'a> {\n+    data: &'a T\n+}\n+\n+fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {\n+    let z = Ref { data: y.data };\n+    x.push(z);\n+}\n+\n+fn main() { }"}, {"sha": "e34d5f0a2f3a106a2bb061ea1e427910848fc786", "filename": "src/test/ui/lifetime-errors/ex2c-push-inference-variable.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.stderr?ref=5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "patch": "@@ -0,0 +1,8 @@\n+error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n+  --> $DIR/ex2c-push-inference-variable.rs:16:13\n+   |\n+16 |     let z = Ref { data: y.data };\n+   |             ^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "bcb7583beefcf5f28d45b2c0add7323f2fe56cb0", "filename": "src/test/ui/lifetime-errors/ex2d-push-inference-variable-2.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.rs?ref=5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Ref<'a, T: 'a> {\n+    data: &'a T\n+}\n+\n+fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {\n+    let a: &mut Vec<Ref<i32>> = x;\n+    let b = Ref { data: y.data };\n+    a.push(b);\n+}\n+\n+fn main() { }"}, {"sha": "f0799a17a468df2e22636bbcbb681996b1376722", "filename": "src/test/ui/lifetime-errors/ex2d-push-inference-variable-2.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.stderr?ref=5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "patch": "@@ -0,0 +1,8 @@\n+error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n+  --> $DIR/ex2d-push-inference-variable-2.rs:17:13\n+   |\n+17 |     let b = Ref { data: y.data };\n+   |             ^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "2d05adb7ecd370b660bb8b13765cf071ba0e04c5", "filename": "src/test/ui/lifetime-errors/ex2e-push-inference-variable-3.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.rs?ref=5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Ref<'a, T: 'a> {\n+    data: &'a T\n+}\n+\n+fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {\n+    let a: &mut Vec<Ref<i32>> = x;\n+    let b = Ref { data: y.data };\n+    Vec::push(a, b);\n+}\n+\n+fn main() { }"}, {"sha": "c479be88b139c9508b1f510bd0085db9a7daa1a6", "filename": "src/test/ui/lifetime-errors/ex2e-push-inference-variable-3.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.stderr?ref=5167ac87199cbf58d9cc46e3ba34dd3d75c88e4c", "patch": "@@ -0,0 +1,8 @@\n+error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n+  --> $DIR/ex2e-push-inference-variable-3.rs:17:13\n+   |\n+17 |     let b = Ref { data: y.data };\n+   |             ^^^\n+\n+error: aborting due to previous error\n+"}]}