{"sha": "a7c45ec867fe93bdbbb2950ad9a69d5c5cb835e0", "node_id": "C_kwDOAAsO6NoAKGE3YzQ1ZWM4NjdmZTkzYmRiYmIyOTUwYWQ5YTY5ZDVjNWNiODM1ZTA", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-08-01T23:51:51Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-08-05T12:47:49Z"}, "message": "improve documentation of `pointer::align_offset`", "tree": {"sha": "ab924cf36cac3c96b8fb38da47936f89fc8b5ed9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab924cf36cac3c96b8fb38da47936f89fc8b5ed9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7c45ec867fe93bdbbb2950ad9a69d5c5cb835e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c45ec867fe93bdbbb2950ad9a69d5c5cb835e0", "html_url": "https://github.com/rust-lang/rust/commit/a7c45ec867fe93bdbbb2950ad9a69d5c5cb835e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7c45ec867fe93bdbbb2950ad9a69d5c5cb835e0/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "127b6c4c18998695edfafc195c682bf3f42e203e", "url": "https://api.github.com/repos/rust-lang/rust/commits/127b6c4c18998695edfafc195c682bf3f42e203e", "html_url": "https://github.com/rust-lang/rust/commit/127b6c4c18998695edfafc195c682bf3f42e203e"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "716f7c6af8f34c07a788da2d25737941ce94b254", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a7c45ec867fe93bdbbb2950ad9a69d5c5cb835e0/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c45ec867fe93bdbbb2950ad9a69d5c5cb835e0/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=a7c45ec867fe93bdbbb2950ad9a69d5c5cb835e0", "patch": "@@ -1267,20 +1267,21 @@ impl<T: ?Sized> *const T {\n     /// Accessing adjacent `u8` as `u16`\n     ///\n     /// ```\n-    /// # fn foo(n: usize) {\n-    /// # use std::mem::align_of;\n+    /// use std::mem::align_of;\n+    ///\n     /// # unsafe {\n-    /// let x = [5u8, 6, 7, 8, 9];\n-    /// let ptr = x.as_ptr().add(n);\n+    /// let x = [5_u8, 6, 7, 8, 9];\n+    /// let ptr = x.as_ptr();\n     /// let offset = ptr.align_offset(align_of::<u16>());\n-    /// if offset < x.len() - n - 1 {\n-    ///     let u16_ptr = ptr.add(offset) as *const u16;\n-    ///     assert_ne!(*u16_ptr, 500);\n+    ///\n+    /// if offset < x.len() - 1 {\n+    ///     let u16_ptr = ptr.add(offset).cast::<u16>();\n+    ///     assert!(*u16_ptr == u16::from_ne_bytes([5, 6]) || *u16_ptr == u16::from_ne_bytes([6, 7]));\n     /// } else {\n     ///     // while the pointer can be aligned via `offset`, it would point\n     ///     // outside the allocation\n     /// }\n-    /// # } }\n+    /// # }\n     /// ```\n     #[stable(feature = \"align_offset\", since = \"1.36.0\")]\n     #[rustc_const_unstable(feature = \"const_align_offset\", issue = \"90962\")]"}, {"sha": "b8551eeed9e0d6bce32d86399022922738e1a281", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a7c45ec867fe93bdbbb2950ad9a69d5c5cb835e0/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c45ec867fe93bdbbb2950ad9a69d5c5cb835e0/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=a7c45ec867fe93bdbbb2950ad9a69d5c5cb835e0", "patch": "@@ -1545,21 +1545,23 @@ impl<T: ?Sized> *mut T {\n     /// Accessing adjacent `u8` as `u16`\n     ///\n     /// ```\n-    /// # fn foo(n: usize) {\n-    /// # use std::mem::align_of;\n+    /// use std::mem::align_of;\n+    ///\n     /// # unsafe {\n-    /// let mut x = [5u8, 6, 7, 8, 9];\n-    /// let ptr = x.as_mut_ptr().add(n);\n+    /// let mut x = [5_u8, 6, 7, 8, 9];\n+    /// let ptr = x.as_mut_ptr();\n     /// let offset = ptr.align_offset(align_of::<u16>());\n-    /// if offset < x.len() - n - 1 {\n-    ///     let u16_ptr = ptr.add(offset) as *mut u16;\n-    ///     assert_ne!(*u16_ptr, 500);\n+    ///\n+    /// if offset < x.len() - 1 {\n+    ///     let u16_ptr = ptr.add(offset).cast::<u16>();\n     ///     *u16_ptr = 0;\n     /// } else {\n     ///     // while the pointer can be aligned via `offset`, it would point\n     ///     // outside the allocation\n     /// }\n-    /// # } }\n+    ///\n+    /// assert!(x == [0, 0, 7, 8, 9] || x == [5, 0, 0, 8, 9]);\n+    /// # }\n     /// ```\n     #[stable(feature = \"align_offset\", since = \"1.36.0\")]\n     #[rustc_const_unstable(feature = \"const_align_offset\", issue = \"90962\")]"}]}