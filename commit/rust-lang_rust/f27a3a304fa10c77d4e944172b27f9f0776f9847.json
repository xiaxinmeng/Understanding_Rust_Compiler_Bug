{"sha": "f27a3a304fa10c77d4e944172b27f9f0776f9847", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyN2EzYTMwNGZhMTBjNzdkNGU5NDQxNzJiMjdmOWYwNzc2Zjk4NDc=", "commit": {"author": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-02-27T06:56:19Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-02-27T07:01:41Z"}, "message": "fix underflow in DoubleEndedIterator::next_back", "tree": {"sha": "b49477d12a400c9899a9aacfc19849a0456792c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b49477d12a400c9899a9aacfc19849a0456792c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f27a3a304fa10c77d4e944172b27f9f0776f9847", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f27a3a304fa10c77d4e944172b27f9f0776f9847", "html_url": "https://github.com/rust-lang/rust/commit/f27a3a304fa10c77d4e944172b27f9f0776f9847", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f27a3a304fa10c77d4e944172b27f9f0776f9847/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ec3005e451137e51479b77ea3ab4f45dec56ed0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ec3005e451137e51479b77ea3ab4f45dec56ed0", "html_url": "https://github.com/rust-lang/rust/commit/1ec3005e451137e51479b77ea3ab4f45dec56ed0"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "64933d0acf56446a84fbeb1beaba73f0f5490d40", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f27a3a304fa10c77d4e944172b27f9f0776f9847/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27a3a304fa10c77d4e944172b27f9f0776f9847/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=f27a3a304fa10c77d4e944172b27f9f0776f9847", "patch": "@@ -4665,19 +4665,23 @@ impl<A: Step + One> DoubleEndedIterator for ops::RangeInclusive<A> where\n \n             NonEmpty { ref mut start, ref mut end } => {\n                 let one = A::one();\n-                let mut n = &*end - &one;\n-                mem::swap(&mut n, end);\n+                if start <= end {\n+                    let mut n = &*end - &one;\n+                    mem::swap(&mut n, end);\n \n-                (if n == *start { Some(mem::replace(start, one)) } else { None },\n-                 n)\n+                    (if n == *start { Some(mem::replace(start, one)) } else { None },\n+                     Some(n))\n+                } else {\n+                    (Some(mem::replace(end, one)), None)\n+                }\n             }\n         };\n \n         if let Some(start) = finishing {\n             *self = Empty { at: start };\n         }\n \n-        Some(n)\n+        n\n     }\n }\n "}, {"sha": "970ea7cc07817e1218f0a782fed1b396c89886e6", "filename": "src/test/run-pass/range_inclusive.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f27a3a304fa10c77d4e944172b27f9f0776f9847/src%2Ftest%2Frun-pass%2Frange_inclusive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27a3a304fa10c77d4e944172b27f9f0776f9847/src%2Ftest%2Frun-pass%2Frange_inclusive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frange_inclusive.rs?ref=f27a3a304fa10c77d4e944172b27f9f0776f9847", "patch": "@@ -99,6 +99,11 @@ pub fn main() {\n     }\n     assert_eq!(long, RangeInclusive::Empty { at: 251 });\n \n+    // check underflow\n+    let mut narrow = 1...0;\n+    assert_eq!(narrow.next_back(), None);\n+    assert_eq!(narrow, RangeInclusive::Empty { at: 0 });\n+\n     // what happens if you have a nonsense range?\n     let mut nonsense = 10...5;\n     assert_eq!(nonsense.next(), None);"}]}