{"sha": "6ea7d82dcc83d71753189b5f4ce676a31a0e88ab", "node_id": "C_kwDOAAsO6NoAKDZlYTdkODJkY2M4M2Q3MTc1MzE4OWI1ZjRjZTY3NmEzMWEwZTg4YWI", "commit": {"author": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-26T14:25:48Z"}, "committer": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-27T13:52:57Z"}, "message": "Ship `rust-analyzer-proc-macro-srv` binary with dist::Rustc\n\nThis builds `src/tools/rust-analyzer/crates/proc-macro-srv-cli` and\nships it as part of Rustc's dist component. This allows rust-analyzer's\nproc macro support to work on all rustc versions (stable, beta and\nnightly) starting now.", "tree": {"sha": "e051ff3070462c599a4aa39c76d54403170d622a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e051ff3070462c599a4aa39c76d54403170d622a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ea7d82dcc83d71753189b5f4ce676a31a0e88ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ea7d82dcc83d71753189b5f4ce676a31a0e88ab", "html_url": "https://github.com/rust-lang/rust/commit/6ea7d82dcc83d71753189b5f4ce676a31a0e88ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ea7d82dcc83d71753189b5f4ce676a31a0e88ab/comments", "author": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bcd4a2b4cb2ee8299834dbf4a85906fc5b8a2a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bcd4a2b4cb2ee8299834dbf4a85906fc5b8a2a1", "html_url": "https://github.com/rust-lang/rust/commit/8bcd4a2b4cb2ee8299834dbf4a85906fc5b8a2a1"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "0ab4824ac0a7308cb90246c8389016439f9d9899", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6ea7d82dcc83d71753189b5f4ce676a31a0e88ab/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ea7d82dcc83d71753189b5f4ce676a31a0e88ab/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=6ea7d82dcc83d71753189b5f4ce676a31a0e88ab", "patch": "@@ -601,6 +601,7 @@ impl<'a> Builder<'a> {\n                 tool::Cargo,\n                 tool::Rls,\n                 tool::RustAnalyzer,\n+                tool::RustAnalyzerProcMacroSrv,\n                 tool::RustDemangler,\n                 tool::Rustdoc,\n                 tool::Clippy,"}, {"sha": "6291b204e485f0e32c523651804ddb24bf76a1ef", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6ea7d82dcc83d71753189b5f4ce676a31a0e88ab/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ea7d82dcc83d71753189b5f4ce676a31a0e88ab/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=6ea7d82dcc83d71753189b5f4ce676a31a0e88ab", "patch": "@@ -362,6 +362,18 @@ impl Step for Rustc {\n \n             builder.install(&builder.rustdoc(compiler), &image.join(\"bin\"), 0o755);\n \n+            let ra_proc_macro_srv = builder\n+                .ensure(tool::RustAnalyzerProcMacroSrv {\n+                    compiler: builder.compiler_for(\n+                        compiler.stage,\n+                        builder.config.build,\n+                        compiler.host,\n+                    ),\n+                    target: compiler.host,\n+                })\n+                .expect(\"rust-analyzer-proc-macro-server always builds\");\n+            builder.install(&ra_proc_macro_srv, &image.join(\"libexec\"), 0o755);\n+\n             let libdir_relative = builder.libdir_relative(compiler);\n \n             // Copy runtime DLLs needed by the compiler"}, {"sha": "839a6d27199f1364bc7a2e433f3077537b2ce171", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/6ea7d82dcc83d71753189b5f4ce676a31a0e88ab/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ea7d82dcc83d71753189b5f4ce676a31a0e88ab/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=6ea7d82dcc83d71753189b5f4ce676a31a0e88ab", "patch": "@@ -727,6 +727,50 @@ impl Step for RustAnalyzer {\n     }\n }\n \n+#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+pub struct RustAnalyzerProcMacroSrv {\n+    pub compiler: Compiler,\n+    pub target: TargetSelection,\n+}\n+\n+impl Step for RustAnalyzerProcMacroSrv {\n+    type Output = Option<PathBuf>;\n+    const DEFAULT: bool = true;\n+    const ONLY_HOSTS: bool = false;\n+\n+    fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n+        let builder = run.builder;\n+        run.path(\"src/tools/rust-analyzer\").default_condition(\n+            builder.config.extended\n+                && builder\n+                    .config\n+                    .tools\n+                    .as_ref()\n+                    .map_or(true, |tools| tools.iter().any(|tool| tool == \"rust-analyzer\")),\n+        )\n+    }\n+\n+    fn make_run(run: RunConfig<'_>) {\n+        run.builder.ensure(RustAnalyzerProcMacroSrv {\n+            compiler: run.builder.compiler(run.builder.top_stage, run.builder.config.build),\n+            target: run.target,\n+        });\n+    }\n+\n+    fn run(self, builder: &Builder<'_>) -> Option<PathBuf> {\n+        builder.ensure(ToolBuild {\n+            compiler: self.compiler,\n+            target: self.target,\n+            tool: \"rust-analyzer-proc-macro-srv\",\n+            mode: Mode::ToolStd,\n+            path: \"src/tools/rust-analyzer/crates/proc-macro-srv-cli\",\n+            extra_features: vec![\"proc-macro-srv/sysroot-abi\".to_owned()],\n+            is_optional_tool: false,\n+            source_type: SourceType::InTree,\n+        })\n+    }\n+}\n+\n macro_rules! tool_extended {\n     (($sel:ident, $builder:ident),\n        $($name:ident,"}]}