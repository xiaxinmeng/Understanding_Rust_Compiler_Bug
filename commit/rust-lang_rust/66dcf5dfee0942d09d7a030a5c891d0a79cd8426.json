{"sha": "66dcf5dfee0942d09d7a030a5c891d0a79cd8426", "node_id": "C_kwDOAAsO6NoAKDY2ZGNmNWRmZWUwOTQyZDA5ZDdhMDMwYTVjODkxZDBhNzljZDg0MjY", "commit": {"author": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2022-08-14T09:37:03Z"}, "committer": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2022-08-14T09:37:03Z"}, "message": "Enable eager checks for memory sanitizer", "tree": {"sha": "312c17489304190aad3c933bd048f51d34c9100c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/312c17489304190aad3c933bd048f51d34c9100c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66dcf5dfee0942d09d7a030a5c891d0a79cd8426", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66dcf5dfee0942d09d7a030a5c891d0a79cd8426", "html_url": "https://github.com/rust-lang/rust/commit/66dcf5dfee0942d09d7a030a5c891d0a79cd8426", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66dcf5dfee0942d09d7a030a5c891d0a79cd8426/comments", "author": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "committer": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fbc08e2ce64dee45a29cb6133da6b32366268aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fbc08e2ce64dee45a29cb6133da6b32366268aa", "html_url": "https://github.com/rust-lang/rust/commit/2fbc08e2ce64dee45a29cb6133da6b32366268aa"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "37494623e3a845d6eb7b9a249a9581ece5314b67", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/66dcf5dfee0942d09d7a030a5c891d0a79cd8426/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/66dcf5dfee0942d09d7a030a5c891d0a79cd8426/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=66dcf5dfee0942d09d7a030a5c891d0a79cd8426", "patch": "@@ -131,7 +131,12 @@ extern \"C\" LLVMPassRef LLVMRustCreateMemorySanitizerPass(int TrackOrigins, bool\n   const bool CompileKernel = false;\n \n   return wrap(createMemorySanitizerLegacyPassPass(\n-      MemorySanitizerOptions{TrackOrigins, Recover, CompileKernel}));\n+#if LLVM_VERSION_GE(14, 0)\n+      MemorySanitizerOptions{TrackOrigins, Recover, CompileKernel, /*EagerChecks=*/true}\n+#else\n+      MemorySanitizerOptions{TrackOrigins, Recover, CompileKernel}\n+#endif\n+  ));\n #else\n   report_fatal_error(\"Legacy PM not supported with LLVM 15\");\n #endif\n@@ -931,10 +936,18 @@ LLVMRustOptimizeWithNewPassManager(\n \n   if (SanitizerOptions) {\n     if (SanitizerOptions->SanitizeMemory) {\n+#if LLVM_VERSION_GE(14, 0)\n+      MemorySanitizerOptions Options(\n+          SanitizerOptions->SanitizeMemoryTrackOrigins,\n+          SanitizerOptions->SanitizeMemoryRecover,\n+          /*CompileKernel=*/false,\n+          /*EagerChecks=*/true);\n+#else\n       MemorySanitizerOptions Options(\n           SanitizerOptions->SanitizeMemoryTrackOrigins,\n           SanitizerOptions->SanitizeMemoryRecover,\n           /*CompileKernel=*/false);\n+#endif\n       OptimizerLastEPCallbacks.push_back(\n         [Options](ModulePassManager &MPM, OptimizationLevel Level) {\n #if LLVM_VERSION_GE(14, 0)"}, {"sha": "0c51ed6d1c726e55954d5b58a235c6b50a9768f6", "filename": "src/test/ui/sanitize/memory-eager.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/66dcf5dfee0942d09d7a030a5c891d0a79cd8426/src%2Ftest%2Fui%2Fsanitize%2Fmemory-eager.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66dcf5dfee0942d09d7a030a5c891d0a79cd8426/src%2Ftest%2Fui%2Fsanitize%2Fmemory-eager.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsanitize%2Fmemory-eager.rs?ref=66dcf5dfee0942d09d7a030a5c891d0a79cd8426", "patch": "@@ -0,0 +1,35 @@\n+// needs-sanitizer-support\n+// needs-sanitizer-memory\n+// min-llvm-version: 14.0.0\n+//\n+// compile-flags: -Z sanitizer=memory -Zsanitizer-memory-track-origins -O\n+//\n+// run-fail\n+// error-pattern: MemorySanitizer: use-of-uninitialized-value\n+// error-pattern: Uninitialized value was created by an allocation\n+// error-pattern: in the stack frame of function 'random'\n+//\n+// This test case intentionally limits the usage of the std,\n+// since it will be linked with an uninstrumented version of it.\n+\n+#![feature(core_intrinsics)]\n+#![feature(start)]\n+#![feature(bench_black_box)]\n+\n+use std::hint::black_box;\n+use std::mem::MaybeUninit;\n+\n+#[inline(never)]\n+#[no_mangle]\n+#[allow(invalid_value)]\n+fn random() -> char {\n+    let r = unsafe { MaybeUninit::uninit().assume_init() };\n+    // Avoid optimizing everything out.\n+    black_box(r)\n+}\n+\n+#[start]\n+fn main(_: isize, _: *const *const u8) -> isize {\n+    random();\n+    0\n+}"}, {"sha": "85d34668d1baf893b4c31700ca80fae32d1263fe", "filename": "src/test/ui/sanitize/memory.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66dcf5dfee0942d09d7a030a5c891d0a79cd8426/src%2Ftest%2Fui%2Fsanitize%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66dcf5dfee0942d09d7a030a5c891d0a79cd8426/src%2Ftest%2Fui%2Fsanitize%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsanitize%2Fmemory.rs?ref=66dcf5dfee0942d09d7a030a5c891d0a79cd8426", "patch": "@@ -21,9 +21,9 @@ use std::mem::MaybeUninit;\n #[inline(never)]\n #[no_mangle]\n fn random() -> [isize; 32] {\n-    let r = unsafe { MaybeUninit::uninit().assume_init() };\n+    let r = MaybeUninit::uninit();\n     // Avoid optimizing everything out.\n-    black_box(r)\n+    unsafe { std::intrinsics::volatile_load(r.as_ptr()) }\n }\n \n #[inline(never)]\n@@ -38,6 +38,6 @@ fn xor(a: &[isize]) -> isize {\n \n #[start]\n fn main(_: isize, _: *const *const u8) -> isize {\n-    let r = random();\n+    let r = black_box(random as fn() -> [isize; 32])();\n     xor(&r)\n }"}]}