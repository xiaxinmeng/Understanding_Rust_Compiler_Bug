{"sha": "066d38190bb5e086d7ab565bc46d71b49c6d5217", "node_id": "C_kwDOAAsO6NoAKDA2NmQzODE5MGJiNWUwODZkN2FiNTY1YmM0NmQ3MWI0OWM2ZDUyMTc", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2023-06-14T19:56:35Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2023-06-14T20:08:04Z"}, "message": "add RPO to BB CFG cache", "tree": {"sha": "40c89868862da2eff5b98ac84d6a5a8aa50e5376", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40c89868862da2eff5b98ac84d6a5a8aa50e5376"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/066d38190bb5e086d7ab565bc46d71b49c6d5217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/066d38190bb5e086d7ab565bc46d71b49c6d5217", "html_url": "https://github.com/rust-lang/rust/commit/066d38190bb5e086d7ab565bc46d71b49c6d5217", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/066d38190bb5e086d7ab565bc46d71b49c6d5217/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e596579066e611a09557421c348560a89819ad80", "url": "https://api.github.com/repos/rust-lang/rust/commits/e596579066e611a09557421c348560a89819ad80", "html_url": "https://github.com/rust-lang/rust/commit/e596579066e611a09557421c348560a89819ad80"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "29873a93fe630160f2e0fff7869f48f84ebc1ff9", "filename": "compiler/rustc_middle/src/mir/basic_blocks.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/066d38190bb5e086d7ab565bc46d71b49c6d5217/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fbasic_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/066d38190bb5e086d7ab565bc46d71b49c6d5217/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fbasic_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fbasic_blocks.rs?ref=066d38190bb5e086d7ab565bc46d71b49c6d5217", "patch": "@@ -27,6 +27,7 @@ struct Cache {\n     switch_sources: OnceCell<SwitchSources>,\n     is_cyclic: OnceCell<bool>,\n     postorder: OnceCell<Vec<BasicBlock>>,\n+    reverse_postorder: OnceCell<Vec<BasicBlock>>,\n     dominators: OnceCell<Dominators<BasicBlock>>,\n }\n \n@@ -70,6 +71,17 @@ impl<'tcx> BasicBlocks<'tcx> {\n         })\n     }\n \n+    /// Returns basic blocks in a reverse postorder.\n+    #[inline]\n+    pub fn reverse_postorder(&self) -> &[BasicBlock] {\n+        self.cache.reverse_postorder.get_or_init(|| {\n+            let mut rpo: Vec<_> =\n+                Postorder::new(&self.basic_blocks, START_BLOCK).map(|(bb, _)| bb).collect();\n+            rpo.reverse();\n+            rpo\n+        })\n+    }\n+\n     /// `switch_sources()[&(target, switch)]` returns a list of switch\n     /// values that lead to a `target` block from a `switch` block.\n     #[inline]"}]}