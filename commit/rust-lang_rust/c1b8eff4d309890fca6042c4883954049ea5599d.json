{"sha": "c1b8eff4d309890fca6042c4883954049ea5599d", "node_id": "C_kwDOAAsO6NoAKGMxYjhlZmY0ZDMwOTg5MGZjYTYwNDJjNDg4Mzk1NDA0OWVhNTU5OWQ", "commit": {"author": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-11-28T14:41:07Z"}, "committer": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-12-02T16:55:47Z"}, "message": "jsondoclint: Check `links` field", "tree": {"sha": "a66c6d5a4bbfd16c526b98a364bdbed8880239ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a66c6d5a4bbfd16c526b98a364bdbed8880239ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1b8eff4d309890fca6042c4883954049ea5599d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1b8eff4d309890fca6042c4883954049ea5599d", "html_url": "https://github.com/rust-lang/rust/commit/c1b8eff4d309890fca6042c4883954049ea5599d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1b8eff4d309890fca6042c4883954049ea5599d/comments", "author": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cef44f53034eac46be3a0e3eec7b2b3d4ef5140b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cef44f53034eac46be3a0e3eec7b2b3d4ef5140b", "html_url": "https://github.com/rust-lang/rust/commit/cef44f53034eac46be3a0e3eec7b2b3d4ef5140b"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "e15f5fe3ccc968d46d295534015c3831d0ebff85", "filename": "src/tools/jsondoclint/src/validator.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c1b8eff4d309890fca6042c4883954049ea5599d/src%2Ftools%2Fjsondoclint%2Fsrc%2Fvalidator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1b8eff4d309890fca6042c4883954049ea5599d/src%2Ftools%2Fjsondoclint%2Fsrc%2Fvalidator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fjsondoclint%2Fsrc%2Fvalidator.rs?ref=c1b8eff4d309890fca6042c4883954049ea5599d", "patch": "@@ -60,6 +60,8 @@ impl<'a> Validator<'a> {\n \n     fn check_item(&mut self, id: &'a Id) {\n         if let Some(item) = &self.krate.index.get(id) {\n+            item.links.values().for_each(|id| self.add_any_id(id));\n+\n             match &item.inner {\n                 ItemEnum::Import(x) => self.check_import(x),\n                 ItemEnum::Union(x) => self.check_union(x),\n@@ -376,6 +378,10 @@ impl<'a> Validator<'a> {\n         }\n     }\n \n+    fn add_any_id(&mut self, id: &'a Id) {\n+        self.add_id_checked(id, |_| true, \"any kind of item\");\n+    }\n+\n     fn add_field_id(&mut self, id: &'a Id) {\n         self.add_id_checked(id, Kind::is_struct_field, \"StructField\");\n     }\n@@ -446,3 +452,6 @@ fn set_remove<T: Hash + Eq + Clone>(set: &mut HashSet<T>) -> Option<T> {\n         None\n     }\n }\n+\n+#[cfg(test)]\n+mod tests;"}, {"sha": "c4aeee9c53b760162af70925c189148d2fed723c", "filename": "src/tools/jsondoclint/src/validator/tests.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/c1b8eff4d309890fca6042c4883954049ea5599d/src%2Ftools%2Fjsondoclint%2Fsrc%2Fvalidator%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1b8eff4d309890fca6042c4883954049ea5599d/src%2Ftools%2Fjsondoclint%2Fsrc%2Fvalidator%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fjsondoclint%2Fsrc%2Fvalidator%2Ftests.rs?ref=c1b8eff4d309890fca6042c4883954049ea5599d", "patch": "@@ -0,0 +1,50 @@\n+use std::collections::HashMap;\n+\n+use rustdoc_json_types::{Crate, Item, Visibility};\n+\n+use super::*;\n+\n+#[track_caller]\n+fn check(krate: &Crate, errs: &[Error]) {\n+    let mut validator = Validator::new(krate);\n+    validator.check_crate();\n+\n+    assert_eq!(errs, &validator.errs[..]);\n+}\n+\n+fn id(s: &str) -> Id {\n+    Id(s.to_owned())\n+}\n+\n+#[test]\n+fn errors_on_missing_links() {\n+    let k = Crate {\n+        root: id(\"0\"),\n+        crate_version: None,\n+        includes_private: false,\n+        index: HashMap::from_iter([(\n+            id(\"0\"),\n+            Item {\n+                name: Some(\"root\".to_owned()),\n+                id: id(\"\"),\n+                crate_id: 0,\n+                span: None,\n+                visibility: Visibility::Public,\n+                docs: None,\n+                links: HashMap::from_iter([(\"Not Found\".to_owned(), id(\"1\"))]),\n+                attrs: vec![],\n+                deprecation: None,\n+                inner: ItemEnum::Module(Module {\n+                    is_crate: true,\n+                    items: vec![],\n+                    is_stripped: false,\n+                }),\n+            },\n+        )]),\n+        paths: HashMap::new(),\n+        external_crates: HashMap::new(),\n+        format_version: rustdoc_json_types::FORMAT_VERSION,\n+    };\n+\n+    check(&k, &[Error { kind: ErrorKind::NotFound, id: id(\"1\") }]);\n+}"}]}