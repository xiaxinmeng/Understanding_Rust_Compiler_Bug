{"sha": "a2f5c72a2d5e27a617e4d2dcca1053b0c34b36ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZjVjNzJhMmQ1ZTI3YTYxN2U0ZDJkY2NhMTA1M2IwYzM0YjM2ZWQ=", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-01-24T01:37:56Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-01-29T04:24:12Z"}, "message": "Fix has_body for trait methods", "tree": {"sha": "ebbf9897cf593d0def9ba53693bac330a30241c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebbf9897cf593d0def9ba53693bac330a30241c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2f5c72a2d5e27a617e4d2dcca1053b0c34b36ed", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEETdpCnQmiF6hBYUqdfsyTL4sscx4FAmATjewACgkQfsyTL4ss\ncx4yqw//bSlXZTpiS7DUIOpEbfJW/fTV1SzotG4RCwiEMzZX5S7QfuiwTEDM5AvI\noXV1UAy4pV2uE/iDRJrTC9N2sEkihCKrI3tRviY/RxcoP8ZdcwQmyHG2wpGHxiHL\nQo4Bbk+utuuGz/ii1AAtchfCs2kTxJuSx8V5a9+4Oj/1WGtLEnU8H0KNHA32DKEM\niTtVeks+tk5kO+0GtqpPuY2mKTQ7460VVHjIqJGp7uzPTjcVtSszrmYg1tEDJi7d\nYJW94eX7KVwFNeWOdCn286nuc8sf889D7Wa+HQUYbe61lfgpR2aXlfSRxnoCFRf8\nuyT3rlU18JGNkKL3NBuATNzec/QagfQf6L6FrFn6a9fksBCefhnR/9FKN72eX+nk\nZ9Cig9mf+koxmZuYeJ/aMopzLpCQW1B9/duqbqYXOJswUg/iFHwp0GwmSZpUTg4C\nynGTx8o8ufpwn61STqsNVbFrQdZhgNG42SXQsKAdAVoFHIl1MZIvsddBwwIBKOsS\nMStiTqbV6h7EVTZ6VRM7RqkFHEsJ5C6xj3NIy4OVYs0Vjpe84yvmkFzb2fGnP4+q\n3w7cOGMxxkde5FOuyO3TIyPZAlu0NCmCaoMxWcUcB13kLWbRPu8WCRXqYbJ77iSy\nEvboIYPCtNRK5hyxcrsZrI1PTgHQLbUbaHRzomYtC+Nc6XRv9yY=\n=tPH2\n-----END PGP SIGNATURE-----", "payload": "tree ebbf9897cf593d0def9ba53693bac330a30241c8\nparent 74500b99783d126e330184f0392a78f8b93b73ef\nauthor Rune Tynan <runetynan@gmail.com> 1611452276 -0500\ncommitter Rune Tynan <runetynan@gmail.com> 1611894252 -0500\n\nFix has_body for trait methods\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2f5c72a2d5e27a617e4d2dcca1053b0c34b36ed", "html_url": "https://github.com/rust-lang/rust/commit/a2f5c72a2d5e27a617e4d2dcca1053b0c34b36ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2f5c72a2d5e27a617e4d2dcca1053b0c34b36ed/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74500b99783d126e330184f0392a78f8b93b73ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/74500b99783d126e330184f0392a78f8b93b73ef", "html_url": "https://github.com/rust-lang/rust/commit/74500b99783d126e330184f0392a78f8b93b73ef"}], "stats": {"total": 42, "additions": 31, "deletions": 11}, "files": [{"sha": "438a8d57cc222dc592bb55f09733f057357ebb10", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a2f5c72a2d5e27a617e4d2dcca1053b0c34b36ed/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2f5c72a2d5e27a617e4d2dcca1053b0c34b36ed/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=a2f5c72a2d5e27a617e4d2dcca1053b0c34b36ed", "patch": "@@ -162,8 +162,8 @@ impl From<clean::ItemKind> for ItemEnum {\n             ForeignFunctionItem(f) => ItemEnum::FunctionItem(f.into()),\n             TraitItem(t) => ItemEnum::TraitItem(t.into()),\n             TraitAliasItem(t) => ItemEnum::TraitAliasItem(t.into()),\n-            MethodItem(m, _) => ItemEnum::MethodItem(m.into()),\n-            TyMethodItem(m) => ItemEnum::MethodItem(m.into()),\n+            MethodItem(m, _) => ItemEnum::MethodItem(from_function_method(m, true)),\n+            TyMethodItem(m) => ItemEnum::MethodItem(from_function_method(m, false)),\n             ImplItem(i) => ItemEnum::ImplItem(i.into()),\n             StaticItem(s) => ItemEnum::StaticItem(s.into()),\n             ForeignStaticItem(s) => ItemEnum::StaticItem(s.into()),\n@@ -435,15 +435,13 @@ impl From<clean::Impl> for Impl {\n     }\n }\n \n-impl From<clean::Function> for Method {\n-    fn from(function: clean::Function) -> Self {\n-        let clean::Function { header, decl, generics, all_types: _, ret_types: _ } = function;\n-        Method {\n-            decl: decl.into(),\n-            generics: generics.into(),\n-            header: stringify_header(&header),\n-            has_body: true,\n-        }\n+crate fn from_function_method(function: clean::Function, has_body: bool) -> Method {\n+    let clean::Function { header, decl, generics, all_types: _, ret_types: _ } = function;\n+    Method {\n+        decl: decl.into(),\n+        generics: generics.into(),\n+        header: stringify_header(&header),\n+        has_body,\n     }\n }\n "}, {"sha": "853be19a3879f4ba7b1539f8dce8e65ec3d17d0f", "filename": "src/test/rustdoc-json/traits/has_body.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a2f5c72a2d5e27a617e4d2dcca1053b0c34b36ed/src%2Ftest%2Frustdoc-json%2Ftraits%2Fhas_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2f5c72a2d5e27a617e4d2dcca1053b0c34b36ed/src%2Ftest%2Frustdoc-json%2Ftraits%2Fhas_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Ftraits%2Fhas_body.rs?ref=a2f5c72a2d5e27a617e4d2dcca1053b0c34b36ed", "patch": "@@ -0,0 +1,22 @@\n+\n+// @has has_body.json \"$.index[*][?(@.name=='Foo')]\"\n+pub trait Foo {\n+    // @has - \"$.index[*][?(@.name=='no_self')].inner.has_body\" false\n+    fn no_self();\n+    // @has - \"$.index[*][?(@.name=='move_self')].inner.has_body\" false\n+    fn move_self(self);\n+    // @has - \"$.index[*][?(@.name=='ref_self')].inner.has_body\" false\n+    fn ref_self(&self);\n+\n+    // @has - \"$.index[*][?(@.name=='no_self_def')].inner.has_body\" true\n+    fn no_self_def() {}\n+    // @has - \"$.index[*][?(@.name=='move_self_def')].inner.has_body\" true\n+    fn move_self_def(self) {}\n+    // @has - \"$.index[*][?(@.name=='ref_self_def')].inner.has_body\" true\n+    fn ref_self_def(&self) {}\n+}\n+\n+pub trait Bar: Clone {\n+    // @has - \"$.index[*][?(@.name=='method')].inner.has_body\" false\n+    fn method(&self, param: usize);\n+}"}]}