{"sha": "2370e3b439aa01982c33bbfe9823337a6231207f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzNzBlM2I0MzlhYTAxOTgyYzMzYmJmZTk4MjMzMzdhNjIzMTIwN2Y=", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-04-04T20:08:17Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-04-04T21:09:16Z"}, "message": "Get rid of unneeded `aliases` field", "tree": {"sha": "7e541d5fc3c3961a247605e690d91e79241fe41e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e541d5fc3c3961a247605e690d91e79241fe41e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2370e3b439aa01982c33bbfe9823337a6231207f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2370e3b439aa01982c33bbfe9823337a6231207f", "html_url": "https://github.com/rust-lang/rust/commit/2370e3b439aa01982c33bbfe9823337a6231207f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2370e3b439aa01982c33bbfe9823337a6231207f/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f92951d4ff91085ae7af62b2abf43fffde8b35d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f92951d4ff91085ae7af62b2abf43fffde8b35d", "html_url": "https://github.com/rust-lang/rust/commit/5f92951d4ff91085ae7af62b2abf43fffde8b35d"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "3e17db7fa7f23784fb88bdba6953e8130bb9b3b7", "filename": "src/librustdoc/formats/cache.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2370e3b439aa01982c33bbfe9823337a6231207f/src%2Flibrustdoc%2Fformats%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2370e3b439aa01982c33bbfe9823337a6231207f/src%2Flibrustdoc%2Fformats%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Fcache.rs?ref=2370e3b439aa01982c33bbfe9823337a6231207f", "patch": "@@ -120,10 +120,6 @@ crate struct Cache {\n     // when gathering trait documentation on a type, hold impls here while\n     // folding and add them to the cache later on if we find the trait.\n     orphan_trait_impls: Vec<(DefId, FxHashSet<DefId>, Impl)>,\n-\n-    /// Aliases added through `#[doc(alias = \"...\")]`. Since a few items can have the same alias,\n-    /// we need the alias element to have an array of items.\n-    crate aliases: BTreeMap<String, Vec<usize>>,\n }\n \n /// This struct is used to wrap the `cache` and `tcx` in order to run `DocFolder`."}, {"sha": "2265905dcbaf41d5a0e7d212380af1948a8b2728", "filename": "src/librustdoc/html/render/cache.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2370e3b439aa01982c33bbfe9823337a6231207f/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2370e3b439aa01982c33bbfe9823337a6231207f/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs?ref=2370e3b439aa01982c33bbfe9823337a6231207f", "patch": "@@ -87,7 +87,11 @@ crate fn build_index<'tcx>(krate: &clean::Crate, cache: &mut Cache, tcx: TyCtxt<\n         }\n     }\n \n-    let Cache { ref mut search_index, ref paths, ref mut aliases, .. } = *cache;\n+    let Cache { ref mut search_index, ref paths, .. } = *cache;\n+\n+    // Aliases added through `#[doc(alias = \"...\")]`. Since a few items can have the same alias,\n+    // we need the alias element to have an array of items.\n+    let mut aliases: BTreeMap<String, Vec<usize>> = BTreeMap::new();\n \n     // Sort search index items. This improves the compressibility of the search index.\n     search_index.sort_unstable_by(|k1, k2| {\n@@ -210,7 +214,7 @@ crate fn build_index<'tcx>(krate: &clean::Crate, cache: &mut Cache, tcx: TyCtxt<\n             doc: crate_doc,\n             items: crate_items,\n             paths: crate_paths,\n-            aliases,\n+            aliases: &aliases,\n         })\n         .expect(\"failed serde conversion\")\n         // All these `replace` calls are because we have to go through JS string for JSON content."}]}