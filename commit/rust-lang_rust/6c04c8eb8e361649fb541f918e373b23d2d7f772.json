{"sha": "6c04c8eb8e361649fb541f918e373b23d2d7f772", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMDRjOGViOGUzNjE2NDlmYjU0MWY5MThlMzczYjIzZDJkN2Y3NzI=", "commit": {"author": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-03T01:24:10Z"}, "committer": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-07T15:05:22Z"}, "message": "track_caller run-pass test, lint cleanup, PR review.", "tree": {"sha": "b255c3a9c7b54f6eacbfc52c156eac68e850a1b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b255c3a9c7b54f6eacbfc52c156eac68e850a1b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c04c8eb8e361649fb541f918e373b23d2d7f772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c04c8eb8e361649fb541f918e373b23d2d7f772", "html_url": "https://github.com/rust-lang/rust/commit/6c04c8eb8e361649fb541f918e373b23d2d7f772", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c04c8eb8e361649fb541f918e373b23d2d7f772/comments", "author": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "543449d4fdf7bb7fd4a12c2fea96dafbe26eea90", "url": "https://api.github.com/repos/rust-lang/rust/commits/543449d4fdf7bb7fd4a12c2fea96dafbe26eea90", "html_url": "https://github.com/rust-lang/rust/commit/543449d4fdf7bb7fd4a12c2fea96dafbe26eea90"}], "stats": {"total": 63, "additions": 31, "deletions": 32}, "files": [{"sha": "b2671e48be68457076a576cbd89e1f4b90c8ba4f", "filename": "src/librustc/error_codes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Flibrustc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Flibrustc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ferror_codes.rs?ref=6c04c8eb8e361649fb541f918e373b23d2d7f772", "patch": "@@ -1641,13 +1641,13 @@ attribute.\n \"##,\n \n E0900: r##\"\n-TODO: change error number\n-TODO: track_caller: invalid syntax\n+FIXME(anp): change error number\n+FIXME(anp): track_caller: invalid syntax\n \"##,\n \n E0901: r##\"\n-TODO: change error number\n-TODO: track_caller: no naked functions\n+FIXME(anp): change error number\n+FIXME(anp): track_caller: no naked functions\n \"##,\n \n E0522: r##\""}, {"sha": "66415e26281b3de01a7dff5e8d325ffa4ba34187", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=6c04c8eb8e361649fb541f918e373b23d2d7f772", "patch": "@@ -11,7 +11,7 @@ use crate::ty::TyCtxt;\n use crate::ty::query::Providers;\n \n use std::fmt::{self, Display};\n-use syntax::symbol::sym;\n+use syntax::{attr, symbol::sym};\n use syntax_pos::Span;\n \n #[derive(Copy, Clone, PartialEq)]\n@@ -94,7 +94,6 @@ impl CheckAttrVisitor<'tcx> {\n     /// Checks any attribute.\n     fn check_attributes(&self, item: &hir::Item, target: Target) {\n         let mut is_valid = true;\n-        let mut track_caller_span = None;\n         for attr in &item.attrs {\n             is_valid &= if attr.check_name(sym::inline) {\n                 self.check_inline(attr, &item.span, target)\n@@ -105,7 +104,6 @@ impl CheckAttrVisitor<'tcx> {\n             } else if attr.check_name(sym::target_feature) {\n                 self.check_target_feature(attr, item, target)\n             } else if attr.check_name(sym::track_caller) {\n-                track_caller_span = Some(attr.span);\n                 self.check_track_caller(attr, &item, target)\n             } else {\n                 true\n@@ -122,19 +120,6 @@ impl CheckAttrVisitor<'tcx> {\n \n         self.check_repr(item, target);\n         self.check_used(item, target);\n-\n-        // Checks if `#[track_caller]` and `#[naked]` are both used.\n-        if let Some(span) = track_caller_span {\n-            if item.attrs.iter().any(|attr| attr.check_name(sym::naked)) {\n-                struct_span_err!(\n-                    self.tcx.sess,\n-                    span,\n-                    E0901,\n-                    \"cannot use `#[track_caller]` with `#[naked]`\",\n-                )\n-                .emit();\n-            }\n-        }\n     }\n \n     /// Checks if an `#[inline]` is applied to a function or a closure. Returns `true` if valid.\n@@ -152,7 +137,7 @@ impl CheckAttrVisitor<'tcx> {\n         }\n     }\n \n-    /// Checks if a `#[target_feature]` can be applied.\n+    /// Checks if a `#[track_caller]` is applied to a non-naked function. Returns `true` if valid.\n     fn check_track_caller(&self, attr: &hir::Attribute, item: &hir::Item, target: Target) -> bool {\n         if target != Target::Fn {\n             struct_span_err!(\n@@ -164,6 +149,15 @@ impl CheckAttrVisitor<'tcx> {\n             .span_label(item.span, \"not a function\")\n             .emit();\n             false\n+        } else if attr::contains_name(&item.attrs, sym::naked) {\n+            struct_span_err!(\n+                self.tcx.sess,\n+                attr.span,\n+                E0901,\n+                \"cannot use `#[track_caller]` with `#[naked]`\",\n+            )\n+            .emit();\n+            false\n         } else {\n             true\n         }"}, {"sha": "1ebae19c7d90b9d4d3cc9153833c6ae261a56d85", "filename": "src/librustc_typeck/error_codes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Flibrustc_typeck%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Flibrustc_typeck%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Ferror_codes.rs?ref=6c04c8eb8e361649fb541f918e373b23d2d7f772", "patch": "@@ -4909,13 +4909,13 @@ and the pin is required to keep it in the same place in memory.\n \"##,\n \n E0902: r##\"\n-TODO: change error number\n-TODO: track_caller: require Rust ABI to use track_caller\n+FIXME(anp): change error number\n+FIXME(anp): track_caller: require Rust ABI to use track_caller\n \"##,\n \n E0903: r##\"\n-TODO: change error number\n-TODO: track_caller: can't apply in traits\n+FIXME(anp): change error number\n+FIXME(anp): track_caller: can't apply in traits\n \"##,\n \n ;"}, {"sha": "c90b18fc3976f3cbfacce8e91f03ec5d2dde59da", "filename": "src/libsyntax/feature_gate/active.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Flibsyntax%2Ffeature_gate%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Flibsyntax%2Ffeature_gate%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Factive.rs?ref=6c04c8eb8e361649fb541f918e373b23d2d7f772", "patch": "@@ -526,7 +526,7 @@ declare_features! (\n     (active, raw_dylib, \"1.40.0\", Some(58713), None),\n \n     /// Enable accurate caller location reporting during panic (RFC 2091).\n-    (active, track_caller, \"1.37.0\", Some(47809), None),\n+    (active, track_caller, \"1.39.0\", Some(47809), None),\n \n     // -------------------------------------------------------------------------\n     // feature-group-end: actual feature gates"}, {"sha": "ae23cc5cb933c24f631dd48415bc6a1580ff52d6", "filename": "src/libsyntax/feature_gate/builtin_attrs.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs?ref=6c04c8eb8e361649fb541f918e373b23d2d7f772", "patch": "@@ -324,6 +324,7 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n     ),\n \n     gated!(ffi_returns_twice, Whitelisted, template!(Word), experimental!(ffi_returns_twice)),\n+    gated!(track_caller, Whitelisted, template!(Word), experimental!(track_caller)),\n \n     // ==========================================================================\n     // Internal attributes: Stability, deprecation, and unsafe:\n@@ -499,10 +500,6 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n             cfg_fn!(no_debug)\n         )\n     ),\n-    gated!(\n-        track_caller, Whitelisted, template!(Word),\n-        \"the `#[track_caller]` attribute is an experimental feature\",\n-    ),\n     gated!(\n         // Used in resolve:\n         prelude_import, Whitelisted, template!(Word),"}, {"sha": "5865cf0a4f754facf2d04bdfd7ecfb49502b41fb", "filename": "src/test/ui/feature-gates/feature-gate-track_caller.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-track_caller.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-track_caller.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-track_caller.rs?ref=6c04c8eb8e361649fb541f918e373b23d2d7f772", "patch": "@@ -1,4 +1,3 @@\n-\n #[track_caller]\n fn f() {}\n //~^^ ERROR the `#[track_caller]` attribute is an experimental feature"}, {"sha": "b890019ee4f3ced65361613930089ab8980d3ccd", "filename": "src/test/ui/feature-gates/feature-gate-track_caller.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-track_caller.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-track_caller.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-track_caller.stderr?ref=6c04c8eb8e361649fb541f918e373b23d2d7f772", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: the `#[track_caller]` attribute is an experimental feature\n-  --> $DIR/feature-gate-track_caller.rs:2:1\n+  --> $DIR/feature-gate-track_caller.rs:1:1\n    |\n LL | #[track_caller]\n    | ^^^^^^^^^^^^^^^"}, {"sha": "eef83b3d68f970ee91e0816fdf549f726cca076d", "filename": "src/test/ui/rfc-2091-track-caller/pass.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c04c8eb8e361649fb541f918e373b23d2d7f772/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fpass.rs?ref=6c04c8eb8e361649fb541f918e373b23d2d7f772", "patch": "@@ -0,0 +1,9 @@\n+// run-pass\n+#![feature(track_caller)]\n+\n+#[track_caller]\n+fn f() {}\n+\n+fn main() {\n+    f();\n+}"}]}