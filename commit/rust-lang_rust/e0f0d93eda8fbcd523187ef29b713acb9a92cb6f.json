{"sha": "e0f0d93eda8fbcd523187ef29b713acb9a92cb6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwZjBkOTNlZGE4ZmJjZDUyMzE4N2VmMjliNzEzYWNiOWE5MmNiNmY=", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-09-15T16:04:34Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-09-15T16:04:34Z"}, "message": "inline parameters for a function description #6002\n\nSigned-off-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "fc12b815e142d9458cfedf40f5bd5f638c712c9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc12b815e142d9458cfedf40f5bd5f638c712c9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0f0d93eda8fbcd523187ef29b713acb9a92cb6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0f0d93eda8fbcd523187ef29b713acb9a92cb6f", "html_url": "https://github.com/rust-lang/rust/commit/e0f0d93eda8fbcd523187ef29b713acb9a92cb6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0f0d93eda8fbcd523187ef29b713acb9a92cb6f/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e91159cedcf8e2acd9f2f32523cce582a2b89ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e91159cedcf8e2acd9f2f32523cce582a2b89ea", "html_url": "https://github.com/rust-lang/rust/commit/2e91159cedcf8e2acd9f2f32523cce582a2b89ea"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "2484dbbf12bc745ee3f87f3508e7f19f7232f9e5", "filename": "crates/ide/src/display.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e0f0d93eda8fbcd523187ef29b713acb9a92cb6f/crates%2Fide%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0f0d93eda8fbcd523187ef29b713acb9a92cb6f/crates%2Fide%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdisplay.rs?ref=e0f0d93eda8fbcd523187ef29b713acb9a92cb6f", "patch": "@@ -41,11 +41,12 @@ pub(crate) fn function_declaration(node: &ast::Fn) -> String {\n         format_to!(buf, \"{}\", type_params);\n     }\n     if let Some(param_list) = node.param_list() {\n-        let mut params = match param_list.self_param() {\n-            Some(self_param) => vec![self_param.to_string()],\n-            None => vec![],\n-        };\n-        params.extend(param_list.params().map(|param| param.to_string()));\n+        let params: Vec<String> = param_list\n+            .self_param()\n+            .into_iter()\n+            .map(|self_param| self_param.to_string())\n+            .chain(param_list.params().map(|param| param.to_string()))\n+            .collect();\n         // Useful to inline parameters\n         format_to!(buf, \"({})\", params.join(\", \"));\n     }"}]}