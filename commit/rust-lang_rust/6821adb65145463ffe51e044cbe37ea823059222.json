{"sha": "6821adb65145463ffe51e044cbe37ea823059222", "node_id": "C_kwDOAAsO6NoAKDY4MjFhZGI2NTE0NTQ2M2ZmZTUxZTA0NGNiZTM3ZWE4MjMwNTkyMjI", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-01-13T00:27:58Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-01-14T13:05:26Z"}, "message": "Deprioritize fulfillment errors that come from expansions.", "tree": {"sha": "61c71a66a3d3a67453f9a7706857b0e7044a39ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61c71a66a3d3a67453f9a7706857b0e7044a39ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6821adb65145463ffe51e044cbe37ea823059222", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6821adb65145463ffe51e044cbe37ea823059222", "html_url": "https://github.com/rust-lang/rust/commit/6821adb65145463ffe51e044cbe37ea823059222", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6821adb65145463ffe51e044cbe37ea823059222/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44a500c8c187b245638684748f54bd6ec67e0b25", "url": "https://api.github.com/repos/rust-lang/rust/commits/44a500c8c187b245638684748f54bd6ec67e0b25", "html_url": "https://github.com/rust-lang/rust/commit/44a500c8c187b245638684748f54bd6ec67e0b25"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "c75842d18c6299f7d9221aea95ac9a7d53bf7c2f", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6821adb65145463ffe51e044cbe37ea823059222/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6821adb65145463ffe51e044cbe37ea823059222/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=6821adb65145463ffe51e044cbe37ea823059222", "patch": "@@ -453,9 +453,11 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n             }\n         }\n \n-        for (error, suppressed) in iter::zip(errors, is_suppressed) {\n-            if !suppressed {\n-                self.report_fulfillment_error(error, body_id);\n+        for from_expansion in [false, true] {\n+            for (error, suppressed) in iter::zip(errors, &is_suppressed) {\n+                if !suppressed && error.obligation.cause.span.from_expansion() == from_expansion {\n+                    self.report_fulfillment_error(error, body_id);\n+                }\n             }\n         }\n "}, {"sha": "888c321bc479b8269d1c87b8a22fa8ca7a6be61f", "filename": "tests/ui/inference/cannot-infer-partial-try-return.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6821adb65145463ffe51e044cbe37ea823059222/tests%2Fui%2Finference%2Fcannot-infer-partial-try-return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6821adb65145463ffe51e044cbe37ea823059222/tests%2Fui%2Finference%2Fcannot-infer-partial-try-return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finference%2Fcannot-infer-partial-try-return.stderr?ref=6821adb65145463ffe51e044cbe37ea823059222", "patch": "@@ -1,8 +1,6 @@\n error[E0282]: type annotations needed\n   --> $DIR/cannot-infer-partial-try-return.rs:20:9\n    |\n-LL |         infallible()?;\n-   |         ------------- type must be known at this point\n LL |         Ok(())\n    |         ^^ cannot infer type of the type parameter `E` declared on the enum `Result`\n    |"}, {"sha": "a9cb7e5257c83d1db6c8fa8df7e3a1fed7811586", "filename": "tests/ui/inference/question-mark-type-infer.stderr", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6821adb65145463ffe51e044cbe37ea823059222/tests%2Fui%2Finference%2Fquestion-mark-type-infer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6821adb65145463ffe51e044cbe37ea823059222/tests%2Fui%2Finference%2Fquestion-mark-type-infer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finference%2Fquestion-mark-type-infer.stderr?ref=6821adb65145463ffe51e044cbe37ea823059222", "patch": "@@ -1,8 +1,13 @@\n error[E0282]: type annotations needed\n-  --> $DIR/question-mark-type-infer.rs:10:30\n+  --> $DIR/question-mark-type-infer.rs:10:21\n    |\n LL |     l.iter().map(f).collect()?\n-   |                              ^ cannot infer type\n+   |                     ^^^^^^^ cannot infer type of the type parameter `B` declared on the associated function `collect`\n+   |\n+help: consider specifying the generic argument\n+   |\n+LL |     l.iter().map(f).collect::<Vec<_>>()?\n+   |                            ++++++++++\n \n error: aborting due to previous error\n "}, {"sha": "fc343bb54aace29f40aa5fd3cd5e87a2497de3e3", "filename": "tests/ui/issues/issue-69455.stderr", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6821adb65145463ffe51e044cbe37ea823059222/tests%2Fui%2Fissues%2Fissue-69455.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6821adb65145463ffe51e044cbe37ea823059222/tests%2Fui%2Fissues%2Fissue-69455.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-69455.stderr?ref=6821adb65145463ffe51e044cbe37ea823059222", "patch": "@@ -1,14 +1,16 @@\n-error[E0282]: type annotations needed\n-  --> $DIR/issue-69455.rs:29:20\n+error[E0284]: type annotations needed\n+  --> $DIR/issue-69455.rs:29:41\n    |\n LL |     println!(\"{}\", 23u64.test(xs.iter().sum()));\n-   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `T` declared on the associated function `new_display`\n+   |                          ----           ^^^ cannot infer type of the type parameter `S` declared on the associated function `sum`\n+   |                          |\n+   |                          type must be known at this point\n    |\n-   = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n+   = note: cannot satisfy `<u64 as Test<_>>::Output == _`\n help: consider specifying the generic argument\n    |\n-LL |     println!(\"{}\", 23u64.test(xs.iter().sum())::<T>);\n-   |                                               +++++\n+LL |     println!(\"{}\", 23u64.test(xs.iter().sum::<S>()));\n+   |                                            +++++\n \n error[E0283]: type annotations needed\n   --> $DIR/issue-69455.rs:29:41\n@@ -33,5 +35,5 @@ LL |     println!(\"{}\", 23u64.test(xs.iter().sum::<S>()));\n \n error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0282, E0283.\n-For more information about an error, try `rustc --explain E0282`.\n+Some errors have detailed explanations: E0283, E0284.\n+For more information about an error, try `rustc --explain E0283`."}, {"sha": "e544b369515489ba17258e2eac2ea7eb50575cb5", "filename": "tests/ui/type/type-check/cannot_infer_local_or_vec_in_tuples.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6821adb65145463ffe51e044cbe37ea823059222/tests%2Fui%2Ftype%2Ftype-check%2Fcannot_infer_local_or_vec_in_tuples.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6821adb65145463ffe51e044cbe37ea823059222/tests%2Fui%2Ftype%2Ftype-check%2Fcannot_infer_local_or_vec_in_tuples.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Ftype-check%2Fcannot_infer_local_or_vec_in_tuples.stderr?ref=6821adb65145463ffe51e044cbe37ea823059222", "patch": "@@ -2,7 +2,7 @@ error[E0282]: type annotations needed for `(Vec<T>,)`\n   --> $DIR/cannot_infer_local_or_vec_in_tuples.rs:2:9\n    |\n LL |     let (x, ) = (vec![], );\n-   |         ^^^^^\n+   |         ^^^^^   ---------- type must be known at this point\n    |\n help: consider giving this pattern a type, where the type for type parameter `T` is specified\n    |"}]}