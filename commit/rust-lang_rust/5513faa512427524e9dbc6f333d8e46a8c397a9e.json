{"sha": "5513faa512427524e9dbc6f333d8e46a8c397a9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MTNmYWE1MTI0Mjc1MjRlOWRiYzZmMzMzZDhlNDZhOGMzOTdhOWU=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2020-12-03T20:39:33Z"}, "committer": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-06-18T16:45:04Z"}, "message": "ErrorKind: Reformat the mapping table (unix)\n\n* Sort the single matches alphabetically.\n* use ErrorKind::*;\n\nSigned-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "6965ef7d539c3deae3c7e70a4986b9591bf08e9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6965ef7d539c3deae3c7e70a4986b9591bf08e9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5513faa512427524e9dbc6f333d8e46a8c397a9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5513faa512427524e9dbc6f333d8e46a8c397a9e", "html_url": "https://github.com/rust-lang/rust/commit/5513faa512427524e9dbc6f333d8e46a8c397a9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5513faa512427524e9dbc6f333d8e46a8c397a9e/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f092501737cb7beb9f5568efa61505db769e179c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f092501737cb7beb9f5568efa61505db769e179c", "html_url": "https://github.com/rust-lang/rust/commit/f092501737cb7beb9f5568efa61505db769e179c"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "387067a505b091265d62d605f26ff6e780f54aec", "filename": "library/std/src/sys/unix/mod.rs", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/5513faa512427524e9dbc6f333d8e46a8c397a9e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5513faa512427524e9dbc6f333d8e46a8c397a9e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs?ref=5513faa512427524e9dbc6f333d8e46a8c397a9e", "patch": "@@ -133,29 +133,31 @@ pub use crate::sys::android::signal;\n pub use libc::signal;\n \n pub fn decode_error_kind(errno: i32) -> ErrorKind {\n+    use ErrorKind::*;\n     match errno as libc::c_int {\n-        libc::ECONNREFUSED => ErrorKind::ConnectionRefused,\n-        libc::ECONNRESET => ErrorKind::ConnectionReset,\n-        libc::EPERM | libc::EACCES => ErrorKind::PermissionDenied,\n-        libc::EPIPE => ErrorKind::BrokenPipe,\n-        libc::ENOTCONN => ErrorKind::NotConnected,\n-        libc::ECONNABORTED => ErrorKind::ConnectionAborted,\n-        libc::EADDRNOTAVAIL => ErrorKind::AddrNotAvailable,\n-        libc::EADDRINUSE => ErrorKind::AddrInUse,\n-        libc::ENOENT => ErrorKind::NotFound,\n-        libc::EINTR => ErrorKind::Interrupted,\n-        libc::EINVAL => ErrorKind::InvalidInput,\n-        libc::ETIMEDOUT => ErrorKind::TimedOut,\n-        libc::EEXIST => ErrorKind::AlreadyExists,\n-        libc::ENOSYS => ErrorKind::Unsupported,\n-        libc::ENOMEM => ErrorKind::OutOfMemory,\n+        libc::EADDRINUSE => AddrInUse,\n+        libc::EADDRNOTAVAIL => AddrNotAvailable,\n+        libc::ECONNABORTED => ConnectionAborted,\n+        libc::ECONNREFUSED => ConnectionRefused,\n+        libc::ECONNRESET => ConnectionReset,\n+        libc::EEXIST => AlreadyExists,\n+        libc::EINTR => Interrupted,\n+        libc::EINVAL => InvalidInput,\n+        libc::ENOENT => NotFound,\n+        libc::ENOMEM => OutOfMemory,\n+        libc::ENOSYS => Unsupported,\n+        libc::ENOTCONN => NotConnected,\n+        libc::EPIPE => BrokenPipe,\n+        libc::ETIMEDOUT => TimedOut,\n+\n+        libc::EACCES | libc::EPERM  => PermissionDenied,\n \n         // These two constants can have the same value on some systems,\n         // but different values on others, so we can't use a match\n         // clause\n-        x if x == libc::EAGAIN || x == libc::EWOULDBLOCK => ErrorKind::WouldBlock,\n+        x if x == libc::EAGAIN || x == libc::EWOULDBLOCK => WouldBlock,\n \n-        _ => ErrorKind::Uncategorized,\n+        _ => Uncategorized,\n     }\n }\n "}]}