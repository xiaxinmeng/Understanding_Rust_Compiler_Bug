{"sha": "cf9d93a5d60163db1169f0a3369f8871feab2b9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmOWQ5M2E1ZDYwMTYzZGIxMTY5ZjBhMzM2OWY4ODcxZmVhYjJiOWE=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-07-01T11:10:57Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-07-01T11:10:57Z"}, "message": "Don't implement Eq for CrateGraph", "tree": {"sha": "e50a8d20b24a738b4a779bd5debbfdd20b123265", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e50a8d20b24a738b4a779bd5debbfdd20b123265"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf9d93a5d60163db1169f0a3369f8871feab2b9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf9d93a5d60163db1169f0a3369f8871feab2b9a", "html_url": "https://github.com/rust-lang/rust/commit/cf9d93a5d60163db1169f0a3369f8871feab2b9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf9d93a5d60163db1169f0a3369f8871feab2b9a/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8c4d736486426ad8a4a161ae6f3c09c153903e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8c4d736486426ad8a4a161ae6f3c09c153903e4", "html_url": "https://github.com/rust-lang/rust/commit/c8c4d736486426ad8a4a161ae6f3c09c153903e4"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "0b80e9e47d72b251f8a460935e927218aad6e66c", "filename": "crates/base_db/src/input.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cf9d93a5d60163db1169f0a3369f8871feab2b9a/crates%2Fbase_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf9d93a5d60163db1169f0a3369f8871feab2b9a/crates%2Fbase_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Finput.rs?ref=cf9d93a5d60163db1169f0a3369f8871feab2b9a", "patch": "@@ -67,7 +67,7 @@ impl SourceRoot {\n /// Note that `CrateGraph` is build-system agnostic: it's a concept of the Rust\n /// language proper, not a concept of the build system. In practice, we get\n /// `CrateGraph` by lowering `cargo metadata` output.\n-#[derive(Debug, Clone, Default, PartialEq, Eq)]\n+#[derive(Debug, Clone, Default)]\n pub struct CrateGraph {\n     arena: FxHashMap<CrateId, CrateData>,\n }\n@@ -170,14 +170,7 @@ pub struct ProcMacro {\n     pub expander: Arc<dyn ProcMacroExpander>,\n }\n \n-impl Eq for ProcMacro {}\n-impl PartialEq for ProcMacro {\n-    fn eq(&self, other: &ProcMacro) -> bool {\n-        self.name == other.name && Arc::ptr_eq(&self.expander, &other.expander)\n-    }\n-}\n-\n-#[derive(Debug, Clone, PartialEq, Eq)]\n+#[derive(Debug, Clone)]\n pub struct CrateData {\n     pub root_file_id: FileId,\n     pub edition: Edition,"}]}