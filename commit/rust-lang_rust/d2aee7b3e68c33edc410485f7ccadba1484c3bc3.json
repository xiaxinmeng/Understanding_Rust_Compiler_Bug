{"sha": "d2aee7b3e68c33edc410485f7ccadba1484c3bc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyYWVlN2IzZTY4YzMzZWRjNDEwNDg1ZjdjY2FkYmExNDg0YzNiYzM=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-19T22:48:02Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-28T16:51:16Z"}, "message": "s/parse_purity/parse_unsafety", "tree": {"sha": "c6354b76341e100a06be90c4efdb53ea68230465", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6354b76341e100a06be90c4efdb53ea68230465"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2aee7b3e68c33edc410485f7ccadba1484c3bc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2aee7b3e68c33edc410485f7ccadba1484c3bc3", "html_url": "https://github.com/rust-lang/rust/commit/d2aee7b3e68c33edc410485f7ccadba1484c3bc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2aee7b3e68c33edc410485f7ccadba1484c3bc3/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1abc1be81ad47ed97f37ca98429156e4392df12c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1abc1be81ad47ed97f37ca98429156e4392df12c", "html_url": "https://github.com/rust-lang/rust/commit/1abc1be81ad47ed97f37ca98429156e4392df12c"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "724a5d46c350d9949b60cc8f08693ce9e12e9b1f", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d2aee7b3e68c33edc410485f7ccadba1484c3bc3/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2aee7b3e68c33edc410485f7ccadba1484c3bc3/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=d2aee7b3e68c33edc410485f7ccadba1484c3bc3", "patch": "@@ -367,7 +367,7 @@ pub impl Parser {\n \n         let opt_abis = self.parse_opt_abis();\n         let abis = opt_abis.get_or_default(AbiSet::Rust());\n-        let purity = self.parse_purity();\n+        let purity = self.parse_unsafety();\n         self.expect_keyword(&~\"fn\");\n         let (decl, lifetimes) = self.parse_ty_fn_decl();\n         return ty_bare_fn(@TyBareFn {\n@@ -401,7 +401,7 @@ pub impl Parser {\n         // At this point, the allocation type and lifetime bound have been\n         // parsed.\n \n-        let purity = self.parse_purity();\n+        let purity = self.parse_unsafety();\n         let onceness = parse_onceness(self);\n         self.expect_keyword(&~\"fn\");\n \n@@ -426,7 +426,8 @@ pub impl Parser {\n         }\n     }\n \n-    fn parse_purity(&self) -> purity {\n+    // looks like this should be called parse_unsafety\n+    fn parse_unsafety(&self) -> purity {\n         if self.eat_keyword(&~\"pure\") {\n             self.obsolete(*self.last_span, ObsoletePurity);\n             return impure_fn;"}]}