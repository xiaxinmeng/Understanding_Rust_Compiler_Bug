{"sha": "1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhMGE1ZGExYTQ4ODAzM2U0YjlmZGI0YzRjZDMyODU0ZmYyODU5ZDY=", "commit": {"author": {"name": "Alexander Gonzalez", "email": "alexfertel97@gmail.com", "date": "2021-07-26T16:14:14Z"}, "committer": {"name": "Alexander Gonzalez", "email": "alexfertel97@gmail.com", "date": "2021-07-27T22:29:22Z"}, "message": "refactor: Make handle_hover handle ranges too", "tree": {"sha": "c6350f4fc757854a0a4e779f763458e62b0a4450", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6350f4fc757854a0a4e779f763458e62b0a4450"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6", "html_url": "https://github.com/rust-lang/rust/commit/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6/comments", "author": {"login": "alexfertel", "id": 22298999, "node_id": "MDQ6VXNlcjIyMjk4OTk5", "avatar_url": "https://avatars.githubusercontent.com/u/22298999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexfertel", "html_url": "https://github.com/alexfertel", "followers_url": "https://api.github.com/users/alexfertel/followers", "following_url": "https://api.github.com/users/alexfertel/following{/other_user}", "gists_url": "https://api.github.com/users/alexfertel/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexfertel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexfertel/subscriptions", "organizations_url": "https://api.github.com/users/alexfertel/orgs", "repos_url": "https://api.github.com/users/alexfertel/repos", "events_url": "https://api.github.com/users/alexfertel/events{/privacy}", "received_events_url": "https://api.github.com/users/alexfertel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexfertel", "id": 22298999, "node_id": "MDQ6VXNlcjIyMjk4OTk5", "avatar_url": "https://avatars.githubusercontent.com/u/22298999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexfertel", "html_url": "https://github.com/alexfertel", "followers_url": "https://api.github.com/users/alexfertel/followers", "following_url": "https://api.github.com/users/alexfertel/following{/other_user}", "gists_url": "https://api.github.com/users/alexfertel/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexfertel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexfertel/subscriptions", "organizations_url": "https://api.github.com/users/alexfertel/orgs", "repos_url": "https://api.github.com/users/alexfertel/repos", "events_url": "https://api.github.com/users/alexfertel/events{/privacy}", "received_events_url": "https://api.github.com/users/alexfertel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b5798e927a24d58e38e7cd4d5c96cb68a00d82a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b5798e927a24d58e38e7cd4d5c96cb68a00d82a", "html_url": "https://github.com/rust-lang/rust/commit/2b5798e927a24d58e38e7cd4d5c96cb68a00d82a"}], "stats": {"total": 126, "additions": 42, "deletions": 84}, "files": [{"sha": "91544067125de524f676e14e48ffdce010efca17", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6", "patch": "@@ -423,7 +423,7 @@ impl Analysis {\n         self.with_db(|db| hover::hover(db, position, config))\n     }\n \n-    /// Returns a short text displaying the type for the expression.\n+    /// Returns a short text displaying the type of the expression.\n     pub fn hover_range(\n         &self,\n         config: &HoverConfig,"}, {"sha": "90202fdcecc8f77cb314be69a31d75176063c48e", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 20, "deletions": 29, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6", "patch": "@@ -36,7 +36,10 @@ use crate::{\n     from_proto,\n     global_state::{GlobalState, GlobalStateSnapshot},\n     line_index::LineEndings,\n-    lsp_ext::{self, InlayHint, InlayHintsParams, ViewCrateGraphParams, WorkspaceSymbolParams},\n+    lsp_ext::{\n+        self, InlayHint, InlayHintsParams, PositionOrRange, ViewCrateGraphParams,\n+        WorkspaceSymbolParams,\n+    },\n     lsp_utils::all_edits_are_disjoint,\n     to_proto, LspError, Result,\n };\n@@ -867,42 +870,30 @@ pub(crate) fn handle_signature_help(\n \n pub(crate) fn handle_hover(\n     snap: GlobalStateSnapshot,\n-    params: lsp_types::HoverParams,\n+    params: lsp_ext::HoverParams,\n ) -> Result<Option<lsp_ext::Hover>> {\n     let _p = profile::span(\"handle_hover\");\n-    let position = from_proto::file_position(&snap, params.text_document_position_params)?;\n-    let info = match snap.analysis.hover(&snap.config.hover(), position)? {\n-        None => return Ok(None),\n-        Some(info) => info,\n-    };\n-\n-    let line_index = snap.file_line_index(position.file_id)?;\n-    let range = to_proto::range(&line_index, info.range);\n-    let hover = lsp_ext::Hover {\n-        hover: lsp_types::Hover {\n-            contents: HoverContents::Markup(to_proto::markup_content(info.info.markup)),\n-            range: Some(range),\n-        },\n-        actions: prepare_hover_actions(&snap, &info.info.actions),\n-    };\n-\n-    Ok(Some(hover))\n-}\n-\n-pub(crate) fn handle_hover_range(\n-    snap: GlobalStateSnapshot,\n-    params: lsp_ext::HoverRangeParams,\n-) -> Result<Option<lsp_ext::Hover>> {\n-    let _p = profile::span(\"handle_hover_range\");\n     let file_id = from_proto::file_id(&snap, &params.text_document.uri)?;\n-    let range = from_proto::file_range(&snap, params.text_document, params.range)?;\n+    let hover_result = match params.position {\n+        PositionOrRange::Position(position) => {\n+            let position = from_proto::file_position(\n+                &snap,\n+                lsp_types::TextDocumentPositionParams::new(params.text_document, position),\n+            )?;\n+            snap.analysis.hover(&snap.config.hover(), position)?\n+        }\n+        PositionOrRange::Range(range) => {\n+            let range = from_proto::file_range(&snap, params.text_document, range)?;\n+            snap.analysis.hover_range(&snap.config.hover(), range)?\n+        }\n+    };\n \n-    let info = match snap.analysis.hover_range(&snap.config.hover(), range)? {\n+    let info = match hover_result {\n         None => return Ok(None),\n         Some(info) => info,\n     };\n \n-    let line_index = snap.file_line_index(range.file_id)?;\n+    let line_index = snap.file_line_index(file_id)?;\n     let range = to_proto::range(&line_index, info.range);\n     let hover = lsp_ext::Hover {\n         hover: lsp_types::Hover {"}, {"sha": "d697ec44d1554629f79525d7edf628f7ba3de671", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6", "patch": "@@ -376,24 +376,26 @@ pub struct SnippetTextEdit {\n pub enum HoverRequest {}\n \n impl Request for HoverRequest {\n-    type Params = lsp_types::HoverParams;\n+    type Params = HoverParams;\n     type Result = Option<Hover>;\n     const METHOD: &'static str = \"textDocument/hover\";\n }\n \n-pub enum HoverRangeRequest {}\n+#[derive(Debug, Eq, PartialEq, Clone, Deserialize, Serialize)]\n+#[serde(rename_all = \"camelCase\")]\n+pub struct HoverParams {\n+    pub text_document: TextDocumentIdentifier,\n+    pub position: PositionOrRange,\n \n-impl Request for HoverRangeRequest {\n-    type Params = HoverRangeParams;\n-    type Result = Option<Hover>;\n-    const METHOD: &'static str = \"rust-analyzer/hoverRange\";\n+    #[serde(flatten)]\n+    pub work_done_progress_params: WorkDoneProgressParams,\n }\n \n-#[derive(Deserialize, Serialize, Debug)]\n-#[serde(rename_all = \"camelCase\")]\n-pub struct HoverRangeParams {\n-    pub text_document: TextDocumentIdentifier,\n-    pub range: Range,\n+#[derive(Debug, Eq, PartialEq, Clone, Deserialize, Serialize)]\n+#[serde(untagged)]\n+pub enum PositionOrRange {\n+    Position(lsp_types::Position),\n+    Range(lsp_types::Range),\n }\n \n #[derive(Debug, PartialEq, Clone, Deserialize, Serialize)]"}, {"sha": "35fce79f5eb6a4dafaa1baf4e9c53d36e3bc7249", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6", "patch": "@@ -542,7 +542,6 @@ impl GlobalState {\n             .on::<lsp_ext::CodeActionRequest>(handlers::handle_code_action)\n             .on::<lsp_ext::CodeActionResolveRequest>(handlers::handle_code_action_resolve)\n             .on::<lsp_ext::HoverRequest>(handlers::handle_hover)\n-            .on::<lsp_ext::HoverRangeRequest>(handlers::handle_hover_range)\n             .on::<lsp_ext::ExternalDocs>(handlers::handle_open_docs)\n             .on::<lsp_ext::OpenCargoToml>(handlers::handle_open_cargo_toml)\n             .on::<lsp_ext::MoveItem>(handlers::handle_move_item)"}, {"sha": "272cfca66d8eb8a33ec71259a3a89a9fd204eea3", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 5, "deletions": 39, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6", "patch": "@@ -57,45 +57,11 @@ export function createClient(serverPath: string, workspace: Workspace, extraEnv:\n         middleware: {\n             async provideHover(document: vscode.TextDocument, position: vscode.Position, token: vscode.CancellationToken, _next: lc.ProvideHoverSignature) {\n                 const editor = vscode.window.activeTextEditor;\n-                const selection = editor?.selection;\n-                return selection?.contains(position)\n-                  ? client\n-                      .sendRequest(\n-                        ra.hoverRange,\n-                        {\n-                          textDocument:\n-                            client.code2ProtocolConverter.asTextDocumentIdentifier(\n-                              document\n-                            ),\n-                          range: client.code2ProtocolConverter.asRange(\n-                            editor?.selection\n-                          ),\n-                        },\n-                        token\n-                      )\n-                      .then(\n-                        (result) =>\n-                          client.protocol2CodeConverter.asHover(result),\n-                        (error) => {\n-                          client.handleFailedRequest(\n-                            lc.HoverRequest.type,\n-                            undefined,\n-                            error,\n-                            null\n-                          );\n-                          return Promise.resolve(null);\n-                        }\n-                      )\n-                  : client\n-                      .sendRequest(\n-                        lc.HoverRequest.type,\n-                        client.code2ProtocolConverter.asTextDocumentPositionParams(\n-                          document,\n-                          position\n-                        ),\n-                        token\n-                      )\n-                      .then(\n+                const positionOrRange = editor?.selection?.contains(position) ? client.code2ProtocolConverter.asRange(editor.selection) : client.code2ProtocolConverter.asPosition(position);\n+                return client.sendRequest(ra.hover, {\n+                    textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n+                    position: positionOrRange\n+                }, token).then(\n                         (result) => {\n                           const hover =\n                             client.protocol2CodeConverter.asHover(result);"}, {"sha": "deb0db56eeea4c5958b4430b923e59f380e679ab", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=1a0a5da1a488033e4b9fdb4c4cd32854ff2859d6", "patch": "@@ -19,11 +19,11 @@ export const serverStatus = new lc.NotificationType<ServerStatusParams>(\"experim\n \n export const reloadWorkspace = new lc.RequestType0<null, void>(\"rust-analyzer/reloadWorkspace\");\n \n-export const hoverRange = new lc.RequestType<HoverRangeParams, lc.Hover | null, void>(\"rust-analyzer/hoverRange\");\n+export const hover = new lc.RequestType<HoverParams, lc.Hover | null, void>(\"textDocument/hover\");\n \n-export interface HoverRangeParams {\n+export interface HoverParams extends lc.WorkDoneProgressParams{\n     textDocument: lc.TextDocumentIdentifier;\n-    range: lc.Range;\n+    position: lc.Range | lc.Position;\n }\n \n export interface SyntaxTreeParams {"}]}