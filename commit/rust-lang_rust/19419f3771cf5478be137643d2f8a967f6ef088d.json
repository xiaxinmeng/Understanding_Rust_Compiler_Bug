{"sha": "19419f3771cf5478be137643d2f8a967f6ef088d", "node_id": "C_kwDOAAsO6NoAKDE5NDE5ZjM3NzFjZjU0NzhiZTEzNzY0M2QyZjhhOTY3ZjZlZjA4OGQ", "commit": {"author": {"name": "Mahdi Dibaiee", "email": "mdibaiee@pm.me", "date": "2022-01-03T10:28:01Z"}, "committer": {"name": "Mahdi Dibaiee", "email": "mdibaiee@pm.me", "date": "2022-01-05T08:04:40Z"}, "message": "add a test case for each supported primitive type", "tree": {"sha": "3a7583377f7179ad7ff2e367dca568c6b8d2d4a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a7583377f7179ad7ff2e367dca568c6b8d2d4a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19419f3771cf5478be137643d2f8a967f6ef088d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYxDoXUzfgu5d8FXXuroRW98MWYoFAmHVURoACgkQuroRW98M\nWYpU6g/+PKw0OWNsQrRPiv4O3TrWmtahFXBXd1jqFKIvpMgqA9qWqEOXHZ2Yozxn\n21mhz4DqyKehXTZ/97d3Ad7Yb0eTCoUzDdyuQsEzYxP1RE7gC+L872R8pnkaEY0a\n3NcwXK4XBzHFMR/RFGZiv77L5cvhQxmDeWSj4GAzR2nLHVY8bYy5fD/6cRisC4nz\nApcsSXl19kRhmDyQhYFCGsTop795se1puoRMcFTa1WbwZNkWLvb2V0rHFlKdPJ75\nS14LZhlXtHVmPWjyxm+WMYWNEd5j1Evw9z+f3AHuSeKFKr2jBSYnTYF+E/789SdC\neaE7Y851OAVCuFU5Z8u2jlNAyznWJUoC0lrwgDvQkMMI0Z6sJdFIhNG5SCAhemGZ\nMAlOntBMFhIUav2nbX1+628oDpDbDee/xEdy0GsvG/Bvm3TbP4wJFxXxMverSYwU\nx3GTCiyymIg9YZntjKvzRrv6ZMHLi67vqhdd8lwyY3yjCHCL12/nQXGuNuEKxAKx\ncX7O1OpGk7+/VzKQZN2xIxUlTraAnDq12aWGsEHny1Lg8uUh215Il84micQwG+Ho\nkT8z0q8Y7NJI0hC4z+1tyC/OSICOZA/ItYVcpe45RaOp9qpVAsLyKLYiy1Br517c\n7+t1pTvy9f4X7IgAxHJ6LMAV1P2YvN0NCI+Gz1zrimr0LxVn6wc=\n=ShzH\n-----END PGP SIGNATURE-----", "payload": "tree 3a7583377f7179ad7ff2e367dca568c6b8d2d4a0\nparent 83487b8f27a11c95a4d7a1a7e086f1c2ed86b6b0\nauthor Mahdi Dibaiee <mdibaiee@pm.me> 1641205681 +0000\ncommitter Mahdi Dibaiee <mdibaiee@pm.me> 1641369880 +0000\n\nadd a test case for each supported primitive type\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19419f3771cf5478be137643d2f8a967f6ef088d", "html_url": "https://github.com/rust-lang/rust/commit/19419f3771cf5478be137643d2f8a967f6ef088d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19419f3771cf5478be137643d2f8a967f6ef088d/comments", "author": {"login": "mdibaiee", "id": 2807772, "node_id": "MDQ6VXNlcjI4MDc3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2807772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdibaiee", "html_url": "https://github.com/mdibaiee", "followers_url": "https://api.github.com/users/mdibaiee/followers", "following_url": "https://api.github.com/users/mdibaiee/following{/other_user}", "gists_url": "https://api.github.com/users/mdibaiee/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdibaiee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdibaiee/subscriptions", "organizations_url": "https://api.github.com/users/mdibaiee/orgs", "repos_url": "https://api.github.com/users/mdibaiee/repos", "events_url": "https://api.github.com/users/mdibaiee/events{/privacy}", "received_events_url": "https://api.github.com/users/mdibaiee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdibaiee", "id": 2807772, "node_id": "MDQ6VXNlcjI4MDc3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2807772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdibaiee", "html_url": "https://github.com/mdibaiee", "followers_url": "https://api.github.com/users/mdibaiee/followers", "following_url": "https://api.github.com/users/mdibaiee/following{/other_user}", "gists_url": "https://api.github.com/users/mdibaiee/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdibaiee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdibaiee/subscriptions", "organizations_url": "https://api.github.com/users/mdibaiee/orgs", "repos_url": "https://api.github.com/users/mdibaiee/repos", "events_url": "https://api.github.com/users/mdibaiee/events{/privacy}", "received_events_url": "https://api.github.com/users/mdibaiee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83487b8f27a11c95a4d7a1a7e086f1c2ed86b6b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/83487b8f27a11c95a4d7a1a7e086f1c2ed86b6b0", "html_url": "https://github.com/rust-lang/rust/commit/83487b8f27a11c95a4d7a1a7e086f1c2ed86b6b0"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "8639a24f7f3864e46410b2b185a38d8382fda71e", "filename": "src/test/rustdoc/intra-doc/prim-associated-traits.rs", "status": "modified", "additions": 42, "deletions": 3, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/19419f3771cf5478be137643d2f8a967f6ef088d/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-associated-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19419f3771cf5478be137643d2f8a967f6ef088d/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-associated-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-associated-traits.rs?ref=19419f3771cf5478be137643d2f8a967f6ef088d", "patch": "@@ -1,7 +1,46 @@\n-use std::{num::ParseFloatError, str::FromStr};\n+#![feature(never_type)]\n+use std::str::FromStr;\n \n // @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.f64.html#method.from_str\"]' 'f64::from_str()'\n-/// Uses the rules from [`f64::from_str()`].\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.f32.html#method.from_str\"]' 'f32::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.isize.html#method.from_str\"]' 'isize::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.i8.html#method.from_str\"]' 'i8::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.i16.html#method.from_str\"]' 'i16::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.i32.html#method.from_str\"]' 'i32::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.i64.html#method.from_str\"]' 'i64::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.i128.html#method.from_str\"]' 'i128::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.usize.html#method.from_str\"]' 'usize::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.u8.html#method.from_str\"]' 'u8::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.u16.html#method.from_str\"]' 'u16::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.u32.html#method.from_str\"]' 'u32::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.u64.html#method.from_str\"]' 'u64::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.u128.html#method.from_str\"]' 'u128::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.char.html#method.from_str\"]' 'char::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.bool.html#method.from_str\"]' 'bool::from_str()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.str.html#method.eq\"]' 'str::eq()'\n+// @has 'prim_associated_traits/struct.Number.html' '//a[@href=\"{{channel}}/std/primitive.never.html#method.eq\"]' 'never::eq()'\n+/// [`f64::from_str()`] [`f32::from_str()`] [`isize::from_str()`] [`i8::from_str()`]\n+/// [`i16::from_str()`] [`i32::from_str()`] [`i64::from_str()`] [`i128::from_str()`]\n+/// [`u16::from_str()`] [`u32::from_str()`] [`u64::from_str()`] [`u128::from_str()`]\n+/// [`usize::from_str()`] [`u8::from_str()`] [`char::from_str()`] [`bool::from_str()`]\n+/// [`str::eq()`] [`never::eq()`]\n pub struct Number {\n-    pub value: f64,\n+    pub f_64: f64,\n+    pub f_32: f32,\n+    pub i_size: isize,\n+    pub i_8: i8,\n+    pub i_16: i16,\n+    pub i_32: i32,\n+    pub i_64: i64,\n+    pub i_128: i128,\n+    pub u_size: usize,\n+    pub u_8: u8,\n+    pub u_16: u16,\n+    pub u_32: u32,\n+    pub u_64: u64,\n+    pub u_128: u128,\n+    pub ch: char,\n+    pub boolean: bool,\n+    pub string: str,\n+    pub n: !,\n }"}]}