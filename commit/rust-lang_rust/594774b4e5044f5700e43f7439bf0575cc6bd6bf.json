{"sha": "594774b4e5044f5700e43f7439bf0575cc6bd6bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NDc3NGI0ZTUwNDRmNTcwMGU0M2Y3NDM5YmYwNTc1Y2M2YmQ2YmY=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-09-19T14:19:24Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-09-19T14:19:24Z"}, "message": "Update tests", "tree": {"sha": "a30707dc8f17cda01d02ff86513a92a4ed99c519", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a30707dc8f17cda01d02ff86513a92a4ed99c519"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/594774b4e5044f5700e43f7439bf0575cc6bd6bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/594774b4e5044f5700e43f7439bf0575cc6bd6bf", "html_url": "https://github.com/rust-lang/rust/commit/594774b4e5044f5700e43f7439bf0575cc6bd6bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/594774b4e5044f5700e43f7439bf0575cc6bd6bf/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "829dbfabe94004b6a535c9e1ffdd55eefef7c59f", "url": "https://api.github.com/repos/rust-lang/rust/commits/829dbfabe94004b6a535c9e1ffdd55eefef7c59f", "html_url": "https://github.com/rust-lang/rust/commit/829dbfabe94004b6a535c9e1ffdd55eefef7c59f"}], "stats": {"total": 106, "additions": 70, "deletions": 36}, "files": [{"sha": "2945f836a6b1d4b3950258ed111c58b0b43cc2fe", "filename": "tests/target/chains.rs", "status": "modified", "additions": 42, "deletions": 22, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains.rs?ref=594774b4e5044f5700e43f7439bf0575cc6bd6bf", "patch": "@@ -38,7 +38,8 @@ fn main() {\n         .method_call_a(aaaaa, bbbbb, |c| {\n             let x = c;\n             x\n-        }).method_call_b(aaaaa, bbbbb, |c| {\n+        })\n+        .method_call_b(aaaaa, bbbbb, |c| {\n             let x = c;\n             x\n         });\n@@ -55,7 +56,8 @@ fn main() {\n     body.fold(Body::new(), |mut body, chunk| {\n         body.extend(chunk);\n         Ok(body)\n-    }).and_then(move |body| {\n+    })\n+    .and_then(move |body| {\n         let req = Request::from_parts(parts, body);\n         f(req).map_err(|_| io::Error::new(io::ErrorKind::Other, \"\"))\n     });\n@@ -64,7 +66,8 @@ fn main() {\n         .map(|x| {\n             x += 1;\n             x\n-        }).filter(some_mod::some_filter)\n+        })\n+        .filter(some_mod::some_filter)\n }\n \n fn floaters() {\n@@ -76,24 +79,27 @@ fn floaters() {\n     let x = Foo {\n         field1: val1,\n         field2: val2,\n-    }.method_call()\n+    }\n+    .method_call()\n     .method_call();\n \n     let y = if cond {\n         val1\n     } else {\n         val2\n-    }.method_call();\n+    }\n+    .method_call();\n \n     {\n         match x {\n             PushParam => {\n                 // params are 1-indexed\n                 stack.push(\n                     mparams[match cur.to_digit(10) {\n-                                Some(d) => d as usize - 1,\n-                                None => return Err(\"bad param number\".to_owned()),\n-                            }].clone(),\n+                        Some(d) => d as usize - 1,\n+                        None => return Err(\"bad param number\".to_owned()),\n+                    }]\n+                    .clone(),\n                 );\n             }\n         }\n@@ -103,28 +109,34 @@ fn floaters() {\n         some();\n     } else {\n         none();\n-    }.bar()\n+    }\n+    .bar()\n     .baz();\n \n     Foo {\n         x: val,\n-    }.baz(|| {\n+    }\n+    .baz(|| {\n         force();\n         multiline();\n-    }).quux();\n+    })\n+    .quux();\n \n     Foo {\n         y: i_am_multi_line,\n         z: ok,\n-    }.baz(|| {\n+    }\n+    .baz(|| {\n         force();\n         multiline();\n-    }).quux();\n+    })\n+    .quux();\n \n     a + match x {\n         true => \"yay!\",\n         false => \"boo!\",\n-    }.bar()\n+    }\n+    .bar()\n }\n \n fn is_replaced_content() -> bool {\n@@ -184,7 +196,8 @@ fn issue1392() {\n         else {\n             b();\n         }\n-        \"#.trim(),\n+        \"#\n+        .trim(),\n     );\n }\n \n@@ -234,7 +247,8 @@ impl Foo {\n                         }\n                     }\n                 })\n-            }).collect();\n+            })\n+            .collect();\n     }\n }\n \n@@ -247,19 +261,23 @@ fn issue2415() {\n         Ok((|| {\n             // stuff\n             Some(value.to_string())\n-        })().ok_or(\"\")?)\n-    })().unwrap_or_else(|_: Box<::std::error::Error>| String::from(\"\"));\n+        })()\n+        .ok_or(\"\")?)\n+    })()\n+    .unwrap_or_else(|_: Box<::std::error::Error>| String::from(\"\"));\n }\n \n impl issue_2786 {\n     fn thing(&self) {\n         foo(|a| {\n             println!(\"a\");\n             println!(\"b\");\n-        }).bar(|c| {\n+        })\n+        .bar(|c| {\n             println!(\"a\");\n             println!(\"b\");\n-        }).baz(|c| {\n+        })\n+        .baz(|c| {\n             println!(\"a\");\n             println!(\"b\");\n         })\n@@ -271,10 +289,12 @@ fn issue_2773() {\n     bar.or_else(|| {\n         // do stuff\n         None\n-    }).or_else(|| {\n+    })\n+    .or_else(|| {\n         // do other stuff\n         None\n-    }).and_then(|val| {\n+    })\n+    .and_then(|val| {\n         // do this stuff\n         None\n     });"}, {"sha": "f3107d19c2fbfc0322672e9208947b39d95f7f09", "filename": "tests/target/closure.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fclosure.rs?ref=594774b4e5044f5700e43f7439bf0575cc6bd6bf", "patch": "@@ -171,7 +171,8 @@ fn issue1329() {\n         .map(|x| {\n             x += 1;\n             x\n-        }).filter\n+        })\n+        .filter\n }\n \n fn issue325() {"}, {"sha": "19c44dc019a264b1a384786b0eaf720c32953f87", "filename": "tests/target/configs/indent_style/block_call.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_call.rs?ref=594774b4e5044f5700e43f7439bf0575cc6bd6bf", "patch": "@@ -61,7 +61,8 @@ fn issue1420() {\n         # Getting started\n         ...\n     \"#,\n-    ).running(waltz)\n+    )\n+    .running(waltz)\n }\n \n // #1563\n@@ -117,7 +118,8 @@ impl Cursor {\n                     debug_assert_eq!(n, -1);\n                     None\n                 }\n-            }).or_else(|| {\n+            })\n+            .or_else(|| {\n                 let canonical = self.canonical();\n                 if canonical != *self {\n                     canonical.num_template_args()"}, {"sha": "3d452cbde39b55605b2c770fcf50fe399edaeddc", "filename": "tests/target/expr-block.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr-block.rs?ref=594774b4e5044f5700e43f7439bf0575cc6bd6bf", "patch": "@@ -141,7 +141,8 @@ fn issue_1450() {\n             Relaxed,\n             Release,\n             Relaxed,\n-        ).is_ok()\n+        )\n+        .is_ok()\n     {\n         return;\n     }"}, {"sha": "13820ec293faf74fc50dc6ef6e4923e7238e1e29", "filename": "tests/target/file-lines-1.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Ffile-lines-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Ffile-lines-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffile-lines-1.rs?ref=594774b4e5044f5700e43f7439bf0575cc6bd6bf", "patch": "@@ -4,7 +4,8 @@ fn floaters() {\n     let x = Foo {\n         field1: val1,\n         field2: val2,\n-    }.method_call()\n+    }\n+    .method_call()\n     .method_call();\n \n     let y = if cond {"}, {"sha": "77d6fb26355813a84e5fd18b68a934d3af8482a9", "filename": "tests/target/file-lines-3.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Ffile-lines-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Ffile-lines-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffile-lines-3.rs?ref=594774b4e5044f5700e43f7439bf0575cc6bd6bf", "patch": "@@ -4,7 +4,8 @@ fn floaters() {\n     let x = Foo {\n         field1: val1,\n         field2: val2,\n-    }.method_call()\n+    }\n+    .method_call()\n     .method_call();\n \n     let y = if cond { val1 } else { val2 }.method_call();"}, {"sha": "902765302eacb775ffe609de7ff7bd9839fc9d74", "filename": "tests/target/issue-1681.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fissue-1681.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fissue-1681.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1681.rs?ref=594774b4e5044f5700e43f7439bf0575cc6bd6bf", "patch": "@@ -16,5 +16,6 @@ fn foo() {\n                 Ok(entry.insert(try!(statement)))\n             }\n         }\n-    }).map(MaybeCached::Cached)\n+    })\n+    .map(MaybeCached::Cached)\n }"}, {"sha": "b7176ec66f85047b2cfe4b91cf09848242ff9986", "filename": "tests/target/issue-2759.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fissue-2759.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fissue-2759.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2759.rs?ref=594774b4e5044f5700e43f7439bf0575cc6bd6bf", "patch": "@@ -55,7 +55,8 @@ fn bar() {}\n ///                 .resource(\"/\", |r| r.f(|r| HttpResponse::Ok()))\n ///                 .boxed(),\n ///         ]\n-///     }).bind(\"127.0.0.1:8080\")\n+///     })\n+///     .bind(\"127.0.0.1:8080\")\n ///     .unwrap()\n ///     .run()\n ///     # });"}, {"sha": "e2c3247f1441da96b1c1eff88e658a0fa6594607", "filename": "tests/target/issue-2896.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fissue-2896.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fissue-2896.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2896.rs?ref=594774b4e5044f5700e43f7439bf0575cc6bd6bf", "patch": "@@ -52,7 +52,8 @@ fn main() {\n                         assert!(row_sum_a > 0);\n                         (item_b, (item_a, num_cooccurrences, row_sum_a))\n                     },\n-                ).join_map(\n+                )\n+                .join_map(\n                     &row_sums,\n                     |&item_b, &(item_a, num_cooccurrences, row_sum_a), &row_sum_b| {\n                         assert!(row_sum_a > 0);\n@@ -159,5 +160,6 @@ fn main() {\n                 worker.step();\n             }\n         }\n-    }).unwrap();\n+    })\n+    .unwrap();\n }"}, {"sha": "400ae0bcdad80b8ee084ffd121e59b58517a1723", "filename": "tests/target/macros.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=594774b4e5044f5700e43f7439bf0575cc6bd6bf", "patch": "@@ -173,7 +173,8 @@ fn issue1739() {\n         ..,\n         init_size[1] - extreeeeeeeeeeeeeeeeeeeeeeeem..init_size[1],\n         ..\n-    ]).par_map_inplace(|el| *el = 0.);\n+    ])\n+    .par_map_inplace(|el| *el = 0.);\n }\n \n fn issue_1885() {\n@@ -183,7 +184,8 @@ fn issue_1885() {\n             chan_select! {\n                 rx.recv() => {}\n             }\n-        }).collect::<Vec<_>>();\n+        })\n+        .collect::<Vec<_>>();\n }\n \n fn issue_1917() {"}, {"sha": "cda0ed2abe57fe294762080648d2c8a82ae01c1b", "filename": "tests/target/match.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=594774b4e5044f5700e43f7439bf0575cc6bd6bf", "patch": "@@ -381,7 +381,8 @@ fn issue1456() {\n                     .iter()\n                     .map(|node| {\n                         XPathNodeReader::new(node, &context).and_then(|r| ArtistRef::from_xml(&r))\n-                    }).collect();\n+                    })\n+                    .collect();\n                 res?\n             }\n             _ => Vec::new(),"}, {"sha": "fe7190d0abaa30ff96774c177be9768aa8e8b028", "filename": "tests/target/nested-visual-block.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fnested-visual-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594774b4e5044f5700e43f7439bf0575cc6bd6bf/tests%2Ftarget%2Fnested-visual-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fnested-visual-block.rs?ref=594774b4e5044f5700e43f7439bf0575cc6bd6bf", "patch": "@@ -29,7 +29,8 @@ fn main() {\n                     expr.rewrite(\n                         inner_context,\n                         &Constraints::new(try_opt!(v_budget.checked_sub(2)), indent + 2),\n-                    ).map(|s| format!(\"..{}\", s))\n+                    )\n+                    .map(|s| format!(\"..{}\", s))\n                 }\n             }\n         },"}]}