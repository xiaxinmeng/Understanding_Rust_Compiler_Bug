{"sha": "8ae01a90088fd62987030ff382733ed67791d4f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhZTAxYTkwMDg4ZmQ2Mjk4NzAzMGZmMzgyNzMzZWQ2Nzc5MWQ0Zjg=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-05-23T05:31:43Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-05-27T04:05:05Z"}, "message": "Use `Symbol` equality in `is_ident_named`.", "tree": {"sha": "d6f6c82e6947ad24823f60df40b2d5d89f6c72ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6f6c82e6947ad24823f60df40b2d5d89f6c72ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ae01a90088fd62987030ff382733ed67791d4f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ae01a90088fd62987030ff382733ed67791d4f8", "html_url": "https://github.com/rust-lang/rust/commit/8ae01a90088fd62987030ff382733ed67791d4f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ae01a90088fd62987030ff382733ed67791d4f8/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "303bf1509bdf5ffd150539acf44f1c500c7079bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/303bf1509bdf5ffd150539acf44f1c500c7079bd", "html_url": "https://github.com/rust-lang/rust/commit/303bf1509bdf5ffd150539acf44f1c500c7079bd"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "b3d49524d7668599e9d37ed6d46907db65981776", "filename": "src/libsyntax/parse/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8ae01a90088fd62987030ff382733ed67791d4f8/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ae01a90088fd62987030ff382733ed67791d4f8/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs?ref=8ae01a90088fd62987030ff382733ed67791d4f8", "patch": "@@ -8,7 +8,7 @@ use crate::parse::parser::{BlockMode, PathStyle, SemiColonMode, TokenType, Token\n use crate::print::pprust;\n use crate::ptr::P;\n use crate::source_map::Spanned;\n-use crate::symbol::kw;\n+use crate::symbol::{kw, sym};\n use crate::ThinVec;\n use crate::util::parser::AssocOp;\n use errors::{Applicability, DiagnosticBuilder, DiagnosticId};\n@@ -263,15 +263,15 @@ impl<'a> Parser<'a> {\n         };\n         self.last_unexpected_token_span = Some(self.span);\n         let mut err = self.fatal(&msg_exp);\n-        if self.token.is_ident_named(\"and\") {\n+        if self.token.is_ident_named(sym::and) {\n             err.span_suggestion_short(\n                 self.span,\n                 \"use `&&` instead of `and` for the boolean operator\",\n                 \"&&\".to_string(),\n                 Applicability::MaybeIncorrect,\n             );\n         }\n-        if self.token.is_ident_named(\"or\") {\n+        if self.token.is_ident_named(sym::or) {\n             err.span_suggestion_short(\n                 self.span,\n                 \"use `||` instead of `or` for the boolean operator\","}, {"sha": "07efeaa4cf264ce03b45d5e1c13f52d1c8422a8a", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8ae01a90088fd62987030ff382733ed67791d4f8/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ae01a90088fd62987030ff382733ed67791d4f8/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=8ae01a90088fd62987030ff382733ed67791d4f8", "patch": "@@ -2759,7 +2759,7 @@ impl<'a> Parser<'a> {\n                 let (span, e) = self.interpolated_or_expr_span(e)?;\n                 (lo.to(span), ExprKind::Box(e))\n             }\n-            token::Ident(..) if self.token.is_ident_named(\"not\") => {\n+            token::Ident(..) if self.token.is_ident_named(sym::not) => {\n                 // `not` is just an ordinary identifier in Rust-the-language,\n                 // but as `rustc`-the-compiler, we can issue clever diagnostics\n                 // for confused users who really want to say `!`\n@@ -4592,15 +4592,15 @@ impl<'a> Parser<'a> {\n             let do_not_suggest_help =\n                 self.token.is_keyword(kw::In) || self.token == token::Colon;\n \n-            if self.token.is_ident_named(\"and\") {\n+            if self.token.is_ident_named(sym::and) {\n                 e.span_suggestion_short(\n                     self.span,\n                     \"use `&&` instead of `and` for the boolean operator\",\n                     \"&&\".to_string(),\n                     Applicability::MaybeIncorrect,\n                 );\n             }\n-            if self.token.is_ident_named(\"or\") {\n+            if self.token.is_ident_named(sym::or) {\n                 e.span_suggestion_short(\n                     self.span,\n                     \"use `||` instead of `or` for the boolean operator\","}, {"sha": "47185df8d616563a0cf23bf24372cb5ad32d9a71", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ae01a90088fd62987030ff382733ed67791d4f8/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ae01a90088fd62987030ff382733ed67791d4f8/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=8ae01a90088fd62987030ff382733ed67791d4f8", "patch": "@@ -391,9 +391,9 @@ impl Token {\n \n     /// Returns `true` if the token is a identifier whose name is the given\n     /// string slice.\n-    crate fn is_ident_named(&self, name: &str) -> bool {\n+    crate fn is_ident_named(&self, name: Symbol) -> bool {\n         match self.ident() {\n-            Some((ident, _)) => ident.as_str() == name,\n+            Some((ident, _)) => ident.name == name,\n             None => false\n         }\n     }"}, {"sha": "da6c41adfd96e4483963e6482c7c05c6ed576b26", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ae01a90088fd62987030ff382733ed67791d4f8/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ae01a90088fd62987030ff382733ed67791d4f8/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=8ae01a90088fd62987030ff382733ed67791d4f8", "patch": "@@ -133,6 +133,7 @@ symbols! {\n         allow_internal_unstable,\n         allow_internal_unstable_backcompat_hack,\n         always,\n+        and,\n         any,\n         arbitrary_self_types,\n         Arguments,\n@@ -420,6 +421,7 @@ symbols! {\n         option,\n         Option,\n         opt_out_copy,\n+        or,\n         Ord,\n         Ordering,\n         Output,"}]}