{"sha": "3d268fe6662a8fc659a08e6e038e1e0ac89ddfb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkMjY4ZmU2NjYyYThmYzY1OWEwOGU2ZTAzOGUxZTBhYzg5ZGRmYjA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-21T03:06:33Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-21T16:15:23Z"}, "message": "std: Change hash to reexport its own Writer\n\nOne of the long-term goals of the libstd facade is to move the collections\nlibrary underneath the standard library. This would imply that libcollections\ntoday would invert its dependency with libstd.\n\nOne of the primary blockers for doing this is the HashMap collection. Of its two\nmajor dependencies, hashing and randomness, this commit is the first step in\ndealing with hashing.\n\nWhen moving the hash module beneath libstd, it must break its primary dependence\non the io::Writer trait (used as the hashing state). The proposed strategy for\nbreaking this dependence is taking a similar path as core::fmt, which is to have\nthe hash module define its own \"writer trait\". This trait would be similar to\nstd::io::Writer, except that it would not return errors and it would have fewer\nconvenience methods.\n\nThe Hash trait today has its type parameter behind a feature gate (default type\nparameters), so this pending change will likely break no code which hasn't opted\nin to the feature gate. The SipState struct will lose its implementation of\nio::Writer, but it will regain similar methods for dealing with writing data.\n\nThis change specifically prepares for the hash migration by modifying\nderiving(Hash) to use the std::hash::Writer bound instead of the std::io::Writer\nbound. This bound is currently wired to std::io::Writer, but after a snapshot it\nwill have no need to be wired to the io writer trait.", "tree": {"sha": "e208a5a7c274b8080c9d8b4d61af220730eb1131", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e208a5a7c274b8080c9d8b4d61af220730eb1131"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d268fe6662a8fc659a08e6e038e1e0ac89ddfb0", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d268fe6662a8fc659a08e6e038e1e0ac89ddfb0", "html_url": "https://github.com/rust-lang/rust/commit/3d268fe6662a8fc659a08e6e038e1e0ac89ddfb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d268fe6662a8fc659a08e6e038e1e0ac89ddfb0/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e546452727379f701f2104eb826141a29d4b39fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e546452727379f701f2104eb826141a29d4b39fd", "html_url": "https://github.com/rust-lang/rust/commit/e546452727379f701f2104eb826141a29d4b39fd"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "7daba38fe41d4e22316bd6073b0edb3e9f2c212e", "filename": "src/libstd/hash/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3d268fe6662a8fc659a08e6e038e1e0ac89ddfb0/src%2Flibstd%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d268fe6662a8fc659a08e6e038e1e0ac89ddfb0/src%2Flibstd%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fhash%2Fmod.rs?ref=3d268fe6662a8fc659a08e6e038e1e0ac89ddfb0", "patch": "@@ -65,7 +65,6 @@\n \n use container::Container;\n use intrinsics::TypeId;\n-use io::Writer;\n use iter::Iterator;\n use option::{Option, Some, None};\n use owned::Box;\n@@ -78,6 +77,8 @@ use vec::Vec;\n /// Reexport the `sip::hash` function as our default hasher.\n pub use hash = self::sip::hash;\n \n+pub use Writer = io::Writer;\n+\n pub mod sip;\n \n /// A trait that represents a hashable type. The `S` type parameter is an"}, {"sha": "3e6b8d522d4f9a6b425b55e275b0331f65973254", "filename": "src/libsyntax/ext/deriving/hash.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3d268fe6662a8fc659a08e6e038e1e0ac89ddfb0/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d268fe6662a8fc659a08e6e038e1e0ac89ddfb0/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs?ref=3d268fe6662a8fc659a08e6e038e1e0ac89ddfb0", "patch": "@@ -27,7 +27,8 @@ pub fn expand_deriving_hash(cx: &mut ExtCtxt,\n                     vec!(box Literal(Path::new_local(\"__S\"))), true),\n          LifetimeBounds {\n              lifetimes: Vec::new(),\n-             bounds: vec!((\"__S\", ast::StaticSize, vec!(Path::new(vec!(\"std\", \"io\", \"Writer\"))))),\n+             bounds: vec!((\"__S\", ast::StaticSize,\n+                           vec!(Path::new(vec!(\"std\", \"hash\", \"Writer\"))))),\n          },\n          Path::new_local(\"__S\"))\n     } else {"}]}