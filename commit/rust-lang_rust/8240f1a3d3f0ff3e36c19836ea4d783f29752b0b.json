{"sha": "8240f1a3d3f0ff3e36c19836ea4d783f29752b0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyNDBmMWEzZDNmMGZmM2UzNmMxOTgzNmVhNGQ3ODNmMjk3NTJiMGI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-05T05:52:45Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-16T22:45:19Z"}, "message": "Fix bad diagnostics for anon params with qualified paths", "tree": {"sha": "b08b0815612310d8db30a3e6cf48fe7a6565e521", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b08b0815612310d8db30a3e6cf48fe7a6565e521"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8240f1a3d3f0ff3e36c19836ea4d783f29752b0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8240f1a3d3f0ff3e36c19836ea4d783f29752b0b", "html_url": "https://github.com/rust-lang/rust/commit/8240f1a3d3f0ff3e36c19836ea4d783f29752b0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8240f1a3d3f0ff3e36c19836ea4d783f29752b0b/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea355bc6be34f7c3c1da0342ade39593a7f5e494", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea355bc6be34f7c3c1da0342ade39593a7f5e494", "html_url": "https://github.com/rust-lang/rust/commit/ea355bc6be34f7c3c1da0342ade39593a7f5e494"}], "stats": {"total": 60, "additions": 46, "deletions": 14}, "files": [{"sha": "975b9cc15bd844edd42a1c5109dcad0534439575", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/8240f1a3d3f0ff3e36c19836ea4d783f29752b0b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8240f1a3d3f0ff3e36c19836ea4d783f29752b0b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=8240f1a3d3f0ff3e36c19836ea4d783f29752b0b", "patch": "@@ -1627,18 +1627,28 @@ impl<'a> Parser<'a> {\n                 ),\n                 // Also catches `fn foo(&a)`.\n                 PatKind::Ref(ref pat, mutab) => {\n-                    if let PatKind::Ident(_, ident, _) = pat.clone().into_inner().kind {\n-                        let mutab = mutab.prefix_str();\n-                        (\n-                            ident,\n-                            format!(\"self: &{}{}\", mutab, ident),\n-                            format!(\"{}: &{}TypeName\", ident, mutab),\n-                            format!(\"_: &{}{}\", mutab, ident),\n-                        )\n-                    } else {\n-                        return None;\n+                    match pat.clone().into_inner().kind {\n+                        PatKind::Ident(_, ident, _) => {\n+                            let mutab = mutab.prefix_str();\n+                            (\n+                                ident,\n+                                format!(\"self: &{}{}\", mutab, ident),\n+                                format!(\"{}: &{}TypeName\", ident, mutab),\n+                                format!(\"_: &{}{}\", mutab, ident),\n+                            )\n+                        }\n+                        PatKind::Path(..) => {\n+                            err.note(\"anonymous parameters are removed in the 2018 edition (see RFC 1685)\");\n+                            return None;\n+                        }\n+                        _ => return None,\n                     }\n                 }\n+                // Also catches `fn foo(<Bar as T>::Baz)`\n+                PatKind::Path(..) => {\n+                    err.note(\"anonymous parameters are removed in the 2018 edition (see RFC 1685)\");\n+                    return None;\n+                }\n                 // Ignore other `PatKind`.\n                 _ => return None,\n             };"}, {"sha": "5487d5c9b032fbeee96b31f1d64ea6d614c0d376", "filename": "src/test/ui/anon-params/anon-params-denied-2018.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8240f1a3d3f0ff3e36c19836ea4d783f29752b0b/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-denied-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8240f1a3d3f0ff3e36c19836ea4d783f29752b0b/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-denied-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-denied-2018.rs?ref=8240f1a3d3f0ff3e36c19836ea4d783f29752b0b", "patch": "@@ -9,6 +9,12 @@ trait T {\n     fn foo_with_ref(&mut i32);\n     //~^ ERROR expected one of `:`, `@`, or `|`, found `)`\n \n+    fn foo_with_qualified_path(<Bar as T>::Baz);\n+    //~^ ERROR expected one of `(`, `...`, `..=`, `..`, `::`, `:`, `{`, or `|`, found `)`\n+\n+    fn foo_with_qualified_path_and_ref(&<Bar as T>::Baz);\n+    //~^ ERROR expected one of `(`, `...`, `..=`, `..`, `::`, `:`, `{`, or `|`, found `)`\n+\n     fn bar_with_default_impl(String, String) {}\n     //~^ ERROR expected one of `:`\n     //~| ERROR expected one of `:`"}, {"sha": "f57578f017489ec96fed8c0627cb6ac6dd50029d", "filename": "src/test/ui/anon-params/anon-params-denied-2018.stderr", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8240f1a3d3f0ff3e36c19836ea4d783f29752b0b/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-denied-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8240f1a3d3f0ff3e36c19836ea4d783f29752b0b/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-denied-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-denied-2018.stderr?ref=8240f1a3d3f0ff3e36c19836ea4d783f29752b0b", "patch": "@@ -38,8 +38,24 @@ help: if this is a type, explicitly ignore the parameter name\n LL |     fn foo_with_ref(_: &mut i32);\n    |                     ^^^^^^^^^^^\n \n+error: expected one of `(`, `...`, `..=`, `..`, `::`, `:`, `{`, or `|`, found `)`\n+  --> $DIR/anon-params-denied-2018.rs:12:47\n+   |\n+LL |     fn foo_with_qualified_path(<Bar as T>::Baz);\n+   |                                               ^ expected one of 8 possible tokens\n+   |\n+   = note: anonymous parameters are removed in the 2018 edition (see RFC 1685)\n+\n+error: expected one of `(`, `...`, `..=`, `..`, `::`, `:`, `{`, or `|`, found `)`\n+  --> $DIR/anon-params-denied-2018.rs:15:56\n+   |\n+LL |     fn foo_with_qualified_path_and_ref(&<Bar as T>::Baz);\n+   |                                                        ^ expected one of 8 possible tokens\n+   |\n+   = note: anonymous parameters are removed in the 2018 edition (see RFC 1685)\n+\n error: expected one of `:`, `@`, or `|`, found `,`\n-  --> $DIR/anon-params-denied-2018.rs:12:36\n+  --> $DIR/anon-params-denied-2018.rs:18:36\n    |\n LL |     fn bar_with_default_impl(String, String) {}\n    |                                    ^ expected one of `:`, `@`, or `|`\n@@ -59,7 +75,7 @@ LL |     fn bar_with_default_impl(_: String, String) {}\n    |                              ^^^^^^^^^\n \n error: expected one of `:`, `@`, or `|`, found `)`\n-  --> $DIR/anon-params-denied-2018.rs:12:44\n+  --> $DIR/anon-params-denied-2018.rs:18:44\n    |\n LL |     fn bar_with_default_impl(String, String) {}\n    |                                            ^ expected one of `:`, `@`, or `|`\n@@ -75,7 +91,7 @@ LL |     fn bar_with_default_impl(String, _: String) {}\n    |                                      ^^^^^^^^^\n \n error: expected one of `:`, `@`, or `|`, found `,`\n-  --> $DIR/anon-params-denied-2018.rs:17:22\n+  --> $DIR/anon-params-denied-2018.rs:23:22\n    |\n LL |     fn baz(a:usize, b, c: usize) -> usize {\n    |                      ^ expected one of `:`, `@`, or `|`\n@@ -90,5 +106,5 @@ help: if this is a type, explicitly ignore the parameter name\n LL |     fn baz(a:usize, _: b, c: usize) -> usize {\n    |                     ^^^^\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 7 previous errors\n "}]}