{"sha": "f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2Y2VjY2VhOTM1ZTJlZDdmNTUxMDliOWEyY2MyYWRkZmU4OTRkZmY=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2019-09-28T16:15:06Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2019-09-28T16:15:06Z"}, "message": "Upgrade async/await to \"used\" keywords.", "tree": {"sha": "70f7b6f47694bcda8c388b5a582c5d3ff88aef7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70f7b6f47694bcda8c388b5a582c5d3ff88aef7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "html_url": "https://github.com/rust-lang/rust/commit/f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3c8eba643a815d720e7f20699b3dca144c845c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3c8eba643a815d720e7f20699b3dca144c845c4", "html_url": "https://github.com/rust-lang/rust/commit/f3c8eba643a815d720e7f20699b3dca144c845c4"}], "stats": {"total": 122, "additions": 61, "deletions": 61}, "files": [{"sha": "44a34070deccd9ac39fb760e5a6f2b30b3cd7531", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -83,11 +83,11 @@ symbols! {\n         Yield:              \"yield\",\n \n         // Edition-specific keywords that are used in stable Rust.\n+        Async:              \"async\", // >= 2018 Edition only\n+        Await:              \"await\", // >= 2018 Edition only\n         Dyn:                \"dyn\", // >= 2018 Edition only\n \n         // Edition-specific keywords that are used in unstable Rust or reserved for future use.\n-        Async:              \"async\", // >= 2018 Edition only\n-        Await:              \"await\", // >= 2018 Edition only\n         Try:                \"try\", // >= 2018 Edition only\n \n         // Special lifetime names\n@@ -1088,11 +1088,11 @@ pub mod sym {\n \n impl Symbol {\n     fn is_used_keyword_2018(self) -> bool {\n-        self == kw::Dyn\n+        self >= kw::Async && self <= kw::Dyn\n     }\n \n     fn is_unused_keyword_2018(self) -> bool {\n-        self >= kw::Async && self <= kw::Try\n+        self == kw::Try\n     }\n \n     /// Used for sanity checking rustdoc keyword sections."}, {"sha": "9e78f7c512014ac225eba8dd07f582d0a3eac61c", "filename": "src/test/ui/async-await/await-keyword/2018-edition-error-in-non-macro-position.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2018-edition-error-in-non-macro-position.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2018-edition-error-in-non-macro-position.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2018-edition-error-in-non-macro-position.rs?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -3,21 +3,21 @@\n #![allow(non_camel_case_types)]\n \n mod outer_mod {\n-    pub mod await { //~ ERROR expected identifier, found reserved keyword `await`\n-        pub struct await; //~ ERROR expected identifier, found reserved keyword `await`\n+    pub mod await { //~ ERROR expected identifier, found keyword `await`\n+        pub struct await; //~ ERROR expected identifier, found keyword `await`\n     }\n }\n-use self::outer_mod::await::await; //~ ERROR expected identifier, found reserved keyword `await`\n-//~^ ERROR expected identifier, found reserved keyword `await`\n+use self::outer_mod::await::await; //~ ERROR expected identifier, found keyword `await`\n+//~^ ERROR expected identifier, found keyword `await`\n \n struct Foo { await: () }\n-//~^ ERROR expected identifier, found reserved keyword `await`\n+//~^ ERROR expected identifier, found keyword `await`\n \n impl Foo { fn await() {} }\n-//~^ ERROR expected identifier, found reserved keyword `await`\n+//~^ ERROR expected identifier, found keyword `await`\n \n macro_rules! await {\n-//~^ ERROR expected identifier, found reserved keyword `await`\n+//~^ ERROR expected identifier, found keyword `await`\n     () => {}\n }\n "}, {"sha": "0e859466322c0dac773081a756abc5a66e447996", "filename": "src/test/ui/async-await/await-keyword/2018-edition-error-in-non-macro-position.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2018-edition-error-in-non-macro-position.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2018-edition-error-in-non-macro-position.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2018-edition-error-in-non-macro-position.stderr?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -1,68 +1,68 @@\n-error: expected identifier, found reserved keyword `await`\n+error: expected identifier, found keyword `await`\n   --> $DIR/2018-edition-error-in-non-macro-position.rs:6:13\n    |\n LL |     pub mod await {\n-   |             ^^^^^ expected identifier, found reserved keyword\n+   |             ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL |     pub mod r#await {\n    |             ^^^^^^^\n \n-error: expected identifier, found reserved keyword `await`\n+error: expected identifier, found keyword `await`\n   --> $DIR/2018-edition-error-in-non-macro-position.rs:7:20\n    |\n LL |         pub struct await;\n-   |                    ^^^^^ expected identifier, found reserved keyword\n+   |                    ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL |         pub struct r#await;\n    |                    ^^^^^^^\n \n-error: expected identifier, found reserved keyword `await`\n+error: expected identifier, found keyword `await`\n   --> $DIR/2018-edition-error-in-non-macro-position.rs:10:22\n    |\n LL | use self::outer_mod::await::await;\n-   |                      ^^^^^ expected identifier, found reserved keyword\n+   |                      ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL | use self::outer_mod::r#await::await;\n    |                      ^^^^^^^\n \n-error: expected identifier, found reserved keyword `await`\n+error: expected identifier, found keyword `await`\n   --> $DIR/2018-edition-error-in-non-macro-position.rs:10:29\n    |\n LL | use self::outer_mod::await::await;\n-   |                             ^^^^^ expected identifier, found reserved keyword\n+   |                             ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL | use self::outer_mod::await::r#await;\n    |                             ^^^^^^^\n \n-error: expected identifier, found reserved keyword `await`\n+error: expected identifier, found keyword `await`\n   --> $DIR/2018-edition-error-in-non-macro-position.rs:13:14\n    |\n LL | struct Foo { await: () }\n-   |              ^^^^^ expected identifier, found reserved keyword\n+   |              ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL | struct Foo { r#await: () }\n    |              ^^^^^^^\n \n-error: expected identifier, found reserved keyword `await`\n+error: expected identifier, found keyword `await`\n   --> $DIR/2018-edition-error-in-non-macro-position.rs:16:15\n    |\n LL | impl Foo { fn await() {} }\n-   |               ^^^^^ expected identifier, found reserved keyword\n+   |               ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL | impl Foo { fn r#await() {} }\n    |               ^^^^^^^\n \n-error: expected identifier, found reserved keyword `await`\n+error: expected identifier, found keyword `await`\n   --> $DIR/2018-edition-error-in-non-macro-position.rs:19:14\n    |\n LL | macro_rules! await {\n-   |              ^^^^^ expected identifier, found reserved keyword\n+   |              ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL | macro_rules! r#await {"}, {"sha": "7ce52259acac317d7c0d5db2e8959c0648f2a689", "filename": "src/test/ui/async-await/await-keyword/2018-edition-error.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2018-edition-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2018-edition-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2018-edition-error.rs?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -7,9 +7,9 @@ mod outer_mod {\n     }\n }\n use self::outer_mod::await::await; //~ ERROR expected identifier\n-    //~^ ERROR expected identifier, found reserved keyword `await`\n+    //~^ ERROR expected identifier, found keyword `await`\n \n-macro_rules! await { () => {}; } //~ ERROR expected identifier, found reserved keyword `await`\n+macro_rules! await { () => {}; } //~ ERROR expected identifier, found keyword `await`\n \n fn main() {\n     await!(); //~ ERROR expected expression, found `)`"}, {"sha": "71f403f278eb3193b4012400fd5f4f761c681e45", "filename": "src/test/ui/async-await/await-keyword/2018-edition-error.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2018-edition-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2018-edition-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2F2018-edition-error.stderr?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -1,48 +1,48 @@\n-error: expected identifier, found reserved keyword `await`\n+error: expected identifier, found keyword `await`\n   --> $DIR/2018-edition-error.rs:5:13\n    |\n LL |     pub mod await {\n-   |             ^^^^^ expected identifier, found reserved keyword\n+   |             ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL |     pub mod r#await {\n    |             ^^^^^^^\n \n-error: expected identifier, found reserved keyword `await`\n+error: expected identifier, found keyword `await`\n   --> $DIR/2018-edition-error.rs:6:20\n    |\n LL |         pub struct await;\n-   |                    ^^^^^ expected identifier, found reserved keyword\n+   |                    ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL |         pub struct r#await;\n    |                    ^^^^^^^\n \n-error: expected identifier, found reserved keyword `await`\n+error: expected identifier, found keyword `await`\n   --> $DIR/2018-edition-error.rs:9:22\n    |\n LL | use self::outer_mod::await::await;\n-   |                      ^^^^^ expected identifier, found reserved keyword\n+   |                      ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL | use self::outer_mod::r#await::await;\n    |                      ^^^^^^^\n \n-error: expected identifier, found reserved keyword `await`\n+error: expected identifier, found keyword `await`\n   --> $DIR/2018-edition-error.rs:9:29\n    |\n LL | use self::outer_mod::await::await;\n-   |                             ^^^^^ expected identifier, found reserved keyword\n+   |                             ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL | use self::outer_mod::await::r#await;\n    |                             ^^^^^^^\n \n-error: expected identifier, found reserved keyword `await`\n+error: expected identifier, found keyword `await`\n   --> $DIR/2018-edition-error.rs:12:14\n    |\n LL | macro_rules! await { () => {}; }\n-   |              ^^^^^ expected identifier, found reserved keyword\n+   |              ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL | macro_rules! r#await { () => {}; }"}, {"sha": "ef7edf85049527da8c18e56036a22c6266d7a929", "filename": "src/test/ui/async-await/no-const-async.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fasync-await%2Fno-const-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fasync-await%2Fno-const-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-const-async.rs?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -3,5 +3,5 @@\n // compile-flags: --crate-type lib\n \n pub const async fn x() {}\n-//~^ ERROR expected identifier, found reserved keyword `async`\n+//~^ ERROR expected identifier, found keyword `async`\n //~^^ expected `:`, found keyword `fn`"}, {"sha": "fe0591457853e3dfd72b931a413294b536f8abf8", "filename": "src/test/ui/async-await/no-const-async.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fasync-await%2Fno-const-async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fasync-await%2Fno-const-async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-const-async.stderr?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -1,8 +1,8 @@\n-error: expected identifier, found reserved keyword `async`\n+error: expected identifier, found keyword `async`\n   --> $DIR/no-const-async.rs:5:11\n    |\n LL | pub const async fn x() {}\n-   |           ^^^^^ expected identifier, found reserved keyword\n+   |           ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL | pub const r#async fn x() {}"}, {"sha": "9f34a3887b7f1dcc4102a7d8f9272cabaacbad19", "filename": "src/test/ui/editions/edition-keywords-2015-2018-expansion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.rs?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -5,7 +5,7 @@\n extern crate edition_kw_macro_2018;\n \n mod one_async {\n-    produces_async! {} //~ ERROR expected identifier, found reserved keyword\n+    produces_async! {} //~ ERROR expected identifier, found keyword\n }\n mod two_async {\n     produces_async_raw! {} // OK"}, {"sha": "04a70cf98302f3c022bd3aa0fa58748791b7161b", "filename": "src/test/ui/editions/edition-keywords-2015-2018-expansion.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.stderr?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -1,8 +1,8 @@\n-error: expected identifier, found reserved keyword `async`\n+error: expected identifier, found keyword `async`\n   --> $DIR/edition-keywords-2015-2018-expansion.rs:8:5\n    |\n LL |     produces_async! {}\n-   |     ^^^^^^^^^^^^^^^^^^ expected identifier, found reserved keyword\n+   |     ^^^^^^^^^^^^^^^^^^ expected identifier, found keyword\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n help: you can escape reserved keywords to use them as identifiers"}, {"sha": "dbc0465b08e77931a29d1d10b1137e98829f140f", "filename": "src/test/ui/editions/edition-keywords-2018-2015-parsing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2015-parsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2015-parsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2015-parsing.rs?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -5,7 +5,7 @@\n extern crate edition_kw_macro_2015;\n \n pub fn check_async() {\n-    let mut async = 1; //~ ERROR expected identifier, found reserved keyword `async`\n+    let mut async = 1; //~ ERROR expected identifier, found keyword `async`\n     let mut r#async = 1; // OK\n \n     r#async = consumes_async!(async); // OK\n@@ -15,6 +15,6 @@ pub fn check_async() {\n \n     if passes_ident!(async) == 1 {}\n     if passes_ident!(r#async) == 1 {} // OK\n-    module::async(); //~ ERROR expected identifier, found reserved keyword `async`\n+    module::async(); //~ ERROR expected identifier, found keyword `async`\n     module::r#async(); // OK\n }"}, {"sha": "be991cd0c81283faea65874a5db4e60e8484e069", "filename": "src/test/ui/editions/edition-keywords-2018-2015-parsing.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2015-parsing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2015-parsing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2015-parsing.stderr?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -1,18 +1,18 @@\n-error: expected identifier, found reserved keyword `async`\n+error: expected identifier, found keyword `async`\n   --> $DIR/edition-keywords-2018-2015-parsing.rs:8:13\n    |\n LL |     let mut async = 1;\n-   |             ^^^^^ expected identifier, found reserved keyword\n+   |             ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL |     let mut r#async = 1;\n    |             ^^^^^^^\n \n-error: expected identifier, found reserved keyword `async`\n+error: expected identifier, found keyword `async`\n   --> $DIR/edition-keywords-2018-2015-parsing.rs:18:13\n    |\n LL |     module::async();\n-   |             ^^^^^ expected identifier, found reserved keyword\n+   |             ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL |     module::r#async();"}, {"sha": "a8e69fed6959ee679922c511db5e8f11276b7fc4", "filename": "src/test/ui/editions/edition-keywords-2018-2018-expansion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-expansion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-expansion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-expansion.rs?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -5,7 +5,7 @@\n extern crate edition_kw_macro_2018;\n \n mod one_async {\n-    produces_async! {} //~ ERROR expected identifier, found reserved keyword `async`\n+    produces_async! {} //~ ERROR expected identifier, found keyword `async`\n }\n mod two_async {\n     produces_async_raw! {} // OK"}, {"sha": "fb12051eed4090c52f82264124e3bf5b5b52e53e", "filename": "src/test/ui/editions/edition-keywords-2018-2018-expansion.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-expansion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-expansion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-expansion.stderr?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -1,8 +1,8 @@\n-error: expected identifier, found reserved keyword `async`\n+error: expected identifier, found keyword `async`\n   --> $DIR/edition-keywords-2018-2018-expansion.rs:8:5\n    |\n LL |     produces_async! {}\n-   |     ^^^^^^^^^^^^^^^^^^ expected identifier, found reserved keyword\n+   |     ^^^^^^^^^^^^^^^^^^ expected identifier, found keyword\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n help: you can escape reserved keywords to use them as identifiers"}, {"sha": "5aca0839f0f15cfefc8c19ea23b20b3273dfe454", "filename": "src/test/ui/editions/edition-keywords-2018-2018-parsing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-parsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-parsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-parsing.rs?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -5,7 +5,7 @@\n extern crate edition_kw_macro_2018;\n \n pub fn check_async() {\n-    let mut async = 1; //~ ERROR expected identifier, found reserved keyword `async`\n+    let mut async = 1; //~ ERROR expected identifier, found keyword `async`\n     let mut r#async = 1; // OK\n \n     r#async = consumes_async!(async); // OK\n@@ -15,6 +15,6 @@ pub fn check_async() {\n \n     if passes_ident!(async) == 1 {}\n     if passes_ident!(r#async) == 1 {} // OK\n-    module::async(); //~ ERROR expected identifier, found reserved keyword `async`\n+    module::async(); //~ ERROR expected identifier, found keyword `async`\n     module::r#async(); // OK\n }"}, {"sha": "93a7627f88713fc10ea1ebde6cf95723c27a55d5", "filename": "src/test/ui/editions/edition-keywords-2018-2018-parsing.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-parsing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-parsing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-parsing.stderr?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -1,18 +1,18 @@\n-error: expected identifier, found reserved keyword `async`\n+error: expected identifier, found keyword `async`\n   --> $DIR/edition-keywords-2018-2018-parsing.rs:8:13\n    |\n LL |     let mut async = 1;\n-   |             ^^^^^ expected identifier, found reserved keyword\n+   |             ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL |     let mut r#async = 1;\n    |             ^^^^^^^\n \n-error: expected identifier, found reserved keyword `async`\n+error: expected identifier, found keyword `async`\n   --> $DIR/edition-keywords-2018-2018-parsing.rs:18:13\n    |\n LL |     module::async();\n-   |             ^^^^^ expected identifier, found reserved keyword\n+   |             ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL |     module::r#async();"}, {"sha": "66fd5893af5ee69b4e2ba754cc278d17d30d285a", "filename": "src/test/ui/parser/mut-patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.rs?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -28,7 +28,7 @@ pub fn main() {\n     //~| ERROR `mut` must be attached to each individual binding\n     //~| ERROR expected identifier, found reserved keyword `yield`\n     //~| ERROR expected identifier, found reserved keyword `become`\n-    //~| ERROR expected identifier, found reserved keyword `await`\n+    //~| ERROR expected identifier, found keyword `await`\n \n     struct W<T, U>(T, U);\n     struct B { f: Box<u8> }"}, {"sha": "b1cf99189f17dcbb30fa0d9631b356b527b261a2", "filename": "src/test/ui/parser/mut-patterns.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6ceccea935e2ed7f55109b9a2cc2addfe894dff/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.stderr?ref=f6ceccea935e2ed7f55109b9a2cc2addfe894dff", "patch": "@@ -62,11 +62,11 @@ help: you can escape reserved keywords to use them as identifiers\n LL |     let mut mut yield(r#become, await) = r#yield(0, 0);\n    |                       ^^^^^^^^\n \n-error: expected identifier, found reserved keyword `await`\n+error: expected identifier, found keyword `await`\n   --> $DIR/mut-patterns.rs:26:31\n    |\n LL |     let mut mut yield(become, await) = r#yield(0, 0);\n-   |                               ^^^^^ expected identifier, found reserved keyword\n+   |                               ^^^^^ expected identifier, found keyword\n help: you can escape reserved keywords to use them as identifiers\n    |\n LL |     let mut mut yield(become, r#await) = r#yield(0, 0);"}]}