{"sha": "be4977da7fa78ae386b595ef2227d034ebb3a7e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlNDk3N2RhN2ZhNzhhZTM4NmI1OTVlZjIyMjdkMDM0ZWJiM2E3ZTU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-24T08:31:42Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-24T08:34:54Z"}, "message": "Don't try to enable proposed API's on stable", "tree": {"sha": "2f7b655ad1b2b6bdec281e498632c1c89f4333dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f7b655ad1b2b6bdec281e498632c1c89f4333dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be4977da7fa78ae386b595ef2227d034ebb3a7e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be4977da7fa78ae386b595ef2227d034ebb3a7e5", "html_url": "https://github.com/rust-lang/rust/commit/be4977da7fa78ae386b595ef2227d034ebb3a7e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be4977da7fa78ae386b595ef2227d034ebb3a7e5/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9494f114798f66b5f2174cf518a2951a82571d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9494f114798f66b5f2174cf518a2951a82571d3", "html_url": "https://github.com/rust-lang/rust/commit/f9494f114798f66b5f2174cf518a2951a82571d3"}], "stats": {"total": 38, "additions": 17, "deletions": 21}, "files": [{"sha": "82ca749f306cf6c801ffc3e735593622f0333327", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/be4977da7fa78ae386b595ef2227d034ebb3a7e5/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/be4977da7fa78ae386b595ef2227d034ebb3a7e5/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=be4977da7fa78ae386b595ef2227d034ebb3a7e5", "patch": "@@ -99,8 +99,10 @@ export async function createClient(config: Config, serverPath: string): Promise<\n     // Note that while the CallHierarchyFeature is stable the LSP protocol is not.\n     res.registerFeature(new CallHierarchyFeature(res));\n \n-    if (config.highlightingSemanticTokens) {\n-        res.registerFeature(new SemanticTokensFeature(res));\n+    if (config.package.enableProposedApi) {\n+        if (config.highlightingSemanticTokens) {\n+            res.registerFeature(new SemanticTokensFeature(res));\n+        }\n     }\n \n     return res;"}, {"sha": "602538ea177074e624dba656184f30ab104a7f17", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/be4977da7fa78ae386b595ef2227d034ebb3a7e5/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/be4977da7fa78ae386b595ef2227d034ebb3a7e5/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=be4977da7fa78ae386b595ef2227d034ebb3a7e5", "patch": "@@ -38,17 +38,11 @@ export class Config {\n     ]\n         .map(opt => `${this.rootSection}.${opt}`);\n \n-    readonly packageJsonVersion: string = vscode\n-        .extensions\n-        .getExtension(this.extensionId)!\n-        .packageJSON\n-        .version;\n-\n-    readonly releaseTag: string | undefined = vscode\n-        .extensions\n-        .getExtension(this.extensionId)!\n-        .packageJSON\n-        .releaseTag ?? undefined;\n+    readonly package: {\n+        version: string;\n+        releaseTag: string | undefined;\n+        enableProposedApi: boolean | undefined;\n+    } = vscode.extensions.getExtension(this.extensionId)!.packageJSON;\n \n     private cfg!: vscode.WorkspaceConfiguration;\n \n@@ -62,7 +56,7 @@ export class Config {\n         const enableLogging = this.cfg.get(\"trace.extension\") as boolean;\n         log.setEnabled(enableLogging);\n         log.debug(\n-            \"Extension version:\", this.packageJsonVersion,\n+            \"Extension version:\", this.package.version,\n             \"using configuration:\", this.cfg\n         );\n     }"}, {"sha": "7b7c19dfcf0b17626707302eb73ece043906b223", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/be4977da7fa78ae386b595ef2227d034ebb3a7e5/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/be4977da7fa78ae386b595ef2227d034ebb3a7e5/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=be4977da7fa78ae386b595ef2227d034ebb3a7e5", "patch": "@@ -110,9 +110,9 @@ async function bootstrap(config: Config, state: PersistentState): Promise<string\n }\n \n async function bootstrapExtension(config: Config, state: PersistentState): Promise<void> {\n-    if (config.releaseTag === undefined) return;\n+    if (config.package.releaseTag === undefined) return;\n     if (config.channel === \"stable\") {\n-        if (config.releaseTag === NIGHTLY_TAG) {\n+        if (config.package.releaseTag === NIGHTLY_TAG) {\n             vscode.window.showWarningMessage(`You are running a nightly version of rust-analyzer extension.\n To switch to stable, uninstall the extension and re-install it from the marketplace`);\n         }\n@@ -185,7 +185,7 @@ async function getServer(config: Config, state: PersistentState): Promise<string\n         }\n         return explicitPath;\n     };\n-    if (config.releaseTag === undefined) return \"rust-analyzer\";\n+    if (config.package.releaseTag === undefined) return \"rust-analyzer\";\n \n     let binaryName: string | undefined = undefined;\n     if (process.arch === \"x64\" || process.arch === \"x32\") {\n@@ -211,21 +211,21 @@ async function getServer(config: Config, state: PersistentState): Promise<string\n         await state.updateServerVersion(undefined);\n     }\n \n-    if (state.serverVersion === config.packageJsonVersion) return dest;\n+    if (state.serverVersion === config.package.version) return dest;\n \n     if (config.askBeforeDownload) {\n         const userResponse = await vscode.window.showInformationMessage(\n-            `Language server version ${config.packageJsonVersion} for rust-analyzer is not installed.`,\n+            `Language server version ${config.package.version} for rust-analyzer is not installed.`,\n             \"Download now\"\n         );\n         if (userResponse !== \"Download now\") return dest;\n     }\n \n-    const release = await fetchRelease(config.releaseTag);\n+    const release = await fetchRelease(config.package.releaseTag);\n     const artifact = release.assets.find(artifact => artifact.name === binaryName);\n     assert(!!artifact, `Bad release: ${JSON.stringify(release)}`);\n \n     await download(artifact.browser_download_url, dest, \"Downloading rust-analyzer server\", { mode: 0o755 });\n-    await state.updateServerVersion(config.packageJsonVersion);\n+    await state.updateServerVersion(config.package.version);\n     return dest;\n }"}]}