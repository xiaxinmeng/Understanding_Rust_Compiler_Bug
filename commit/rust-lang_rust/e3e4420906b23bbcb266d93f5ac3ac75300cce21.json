{"sha": "e3e4420906b23bbcb266d93f5ac3ac75300cce21", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZTQ0MjA5MDZiMjNiYmNiMjY2ZDkzZjVhYzNhYzc1MzAwY2NlMjE=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-06T12:53:11Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-15T18:53:03Z"}, "message": "Make layout_depth thread-safe", "tree": {"sha": "08f04833d706a55a4d9a66cf0baa5228f52fabb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08f04833d706a55a4d9a66cf0baa5228f52fabb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3e4420906b23bbcb266d93f5ac3ac75300cce21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3e4420906b23bbcb266d93f5ac3ac75300cce21", "html_url": "https://github.com/rust-lang/rust/commit/e3e4420906b23bbcb266d93f5ac3ac75300cce21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3e4420906b23bbcb266d93f5ac3ac75300cce21/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7360d6dd678d186d9c9b46311b75ba6840e61aa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7360d6dd678d186d9c9b46311b75ba6840e61aa2", "html_url": "https://github.com/rust-lang/rust/commit/7360d6dd678d186d9c9b46311b75ba6840e61aa2"}], "stats": {"total": 40, "additions": 23, "deletions": 17}, "files": [{"sha": "9da83199ec983db0ce88c1a6cae75396c5522967", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e3e4420906b23bbcb266d93f5ac3ac75300cce21/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3e4420906b23bbcb266d93f5ac3ac75300cce21/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=e3e4420906b23bbcb266d93f5ac3ac75300cce21", "patch": "@@ -62,7 +62,6 @@ use rustc_data_structures::indexed_vec::IndexVec;\n use rustc_data_structures::sync::{Lrc, Lock};\n use std::any::Any;\n use std::borrow::Borrow;\n-use std::cell::Cell;\n use std::cmp::Ordering;\n use std::collections::hash_map::{self, Entry};\n use std::hash::{Hash, Hasher};\n@@ -915,9 +914,6 @@ pub struct GlobalCtxt<'tcx> {\n     /// Data layout specification for the current target.\n     pub data_layout: TargetDataLayout,\n \n-    /// Used to prevent layout from recursing too deeply.\n-    pub layout_depth: Cell<usize>,\n-\n     stability_interner: Lock<FxHashSet<&'tcx attr::Stability>>,\n \n     pub interpret_interner: InterpretInterner<'tcx>,\n@@ -1292,7 +1288,6 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             crate_name: Symbol::intern(crate_name),\n             data_layout,\n             layout_interner: Lock::new(FxHashSet()),\n-            layout_depth: Cell::new(0),\n             stability_interner: Lock::new(FxHashSet()),\n             interpret_interner: Default::default(),\n             tx_to_llvm_workers: Lock::new(tx),\n@@ -1574,6 +1569,7 @@ impl<'gcx: 'tcx, 'tcx> GlobalCtxt<'gcx> {\n             let new_icx = ty::tls::ImplicitCtxt {\n                 tcx,\n                 query: icx.query.clone(),\n+                layout_depth: icx.layout_depth,\n             };\n             ty::tls::enter_context(&new_icx, |new_icx| {\n                 f(new_icx.tcx)\n@@ -1768,6 +1764,9 @@ pub mod tls {\n         /// The current query job, if any. This is updated by start_job in\n         /// ty::maps::plumbing when executing a query\n         pub query: Option<Lrc<maps::QueryJob<'gcx>>>,\n+\n+        /// Used to prevent layout from recursing too deeply.\n+        pub layout_depth: usize,\n     }\n \n     // A thread local value which stores a pointer to the current ImplicitCtxt\n@@ -1853,6 +1852,7 @@ pub mod tls {\n             let icx = ImplicitCtxt {\n                 tcx,\n                 query: None,\n+                layout_depth: 0,\n             };\n             enter_context(&icx, |_| {\n                 f(tcx)"}, {"sha": "6bd833568d4f39dc2c84d1db179116cb983b7d71", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e3e4420906b23bbcb266d93f5ac3ac75300cce21/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3e4420906b23bbcb266d93f5ac3ac75300cce21/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=e3e4420906b23bbcb266d93f5ac3ac75300cce21", "patch": "@@ -896,21 +896,26 @@ fn layout_raw<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                         query: ty::ParamEnvAnd<'tcx, Ty<'tcx>>)\n                         -> Result<&'tcx LayoutDetails, LayoutError<'tcx>>\n {\n-    let (param_env, ty) = query.into_parts();\n+    ty::tls::with_related_context(tcx, move |icx| {\n+        let rec_limit = *tcx.sess.recursion_limit.get();\n+        let (param_env, ty) = query.into_parts();\n \n-    let rec_limit = *tcx.sess.recursion_limit.get();\n-    let depth = tcx.layout_depth.get();\n-    if depth > rec_limit {\n-        tcx.sess.fatal(\n-            &format!(\"overflow representing the type `{}`\", ty));\n-    }\n+        if icx.layout_depth > rec_limit {\n+            tcx.sess.fatal(\n+                &format!(\"overflow representing the type `{}`\", ty));\n+        }\n \n-    tcx.layout_depth.set(depth+1);\n-    let cx = LayoutCx { tcx, param_env };\n-    let layout = cx.layout_raw_uncached(ty);\n-    tcx.layout_depth.set(depth);\n+        // Update the ImplicitCtxt to increase the layout_depth\n+        let icx = ty::tls::ImplicitCtxt {\n+            layout_depth: icx.layout_depth + 1,\n+            ..icx.clone()\n+        };\n \n-    layout\n+        ty::tls::enter_context(&icx, |_| {\n+            let cx = LayoutCx { tcx, param_env };\n+            cx.layout_raw_uncached(ty)\n+        })\n+    })\n }\n \n pub fn provide(providers: &mut ty::maps::Providers) {"}, {"sha": "185db623c6f160303334884cb331341203b00c09", "filename": "src/librustc/ty/maps/plumbing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e3e4420906b23bbcb266d93f5ac3ac75300cce21/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3e4420906b23bbcb266d93f5ac3ac75300cce21/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs?ref=e3e4420906b23bbcb266d93f5ac3ac75300cce21", "patch": "@@ -522,6 +522,7 @@ macro_rules! define_maps {\n                         let icx = ty::tls::ImplicitCtxt {\n                             tcx,\n                             query: Some(job.clone()),\n+                            layout_depth: icx.layout_depth,\n                         };\n \n                         // Use the ImplicitCtxt while we execute the query"}]}