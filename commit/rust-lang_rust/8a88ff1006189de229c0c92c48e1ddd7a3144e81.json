{"sha": "8a88ff1006189de229c0c92c48e1ddd7a3144e81", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhODhmZjEwMDYxODlkZTIyOWMwYzkyYzQ4ZTFkZGQ3YTMxNDRlODE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-22T11:55:31Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-26T21:50:17Z"}, "message": "Comments should start capitalized and end in a period", "tree": {"sha": "07cc92bf35046e010d8fc367e6881e0e5655c68f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07cc92bf35046e010d8fc367e6881e0e5655c68f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a88ff1006189de229c0c92c48e1ddd7a3144e81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a88ff1006189de229c0c92c48e1ddd7a3144e81", "html_url": "https://github.com/rust-lang/rust/commit/8a88ff1006189de229c0c92c48e1ddd7a3144e81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a88ff1006189de229c0c92c48e1ddd7a3144e81/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41d58185dd797b0223bdf12463f7a8718b8f6738", "url": "https://api.github.com/repos/rust-lang/rust/commits/41d58185dd797b0223bdf12463f7a8718b8f6738", "html_url": "https://github.com/rust-lang/rust/commit/41d58185dd797b0223bdf12463f7a8718b8f6738"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "3ab7c6b891c702df9d2e5289b378a74aa3c7b96a", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8a88ff1006189de229c0c92c48e1ddd7a3144e81/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a88ff1006189de229c0c92c48e1ddd7a3144e81/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=8a88ff1006189de229c0c92c48e1ddd7a3144e81", "patch": "@@ -187,15 +187,15 @@ impl<'rt, 'mir, 'tcx, M: CompileTimeMachine<'mir, 'tcx>> ValueVisitor<'mir, 'tcx\n         if let ty::Ref(_, referenced_ty, mutability) = ty.kind {\n             let value = self.ecx.read_immediate(mplace.into())?;\n             let mplace = self.ecx.ref_to_mplace(value)?;\n-            // Handle trait object vtables\n+            // Handle trait object vtables.\n             if let ty::Dynamic(..) =\n                 self.ecx.tcx.struct_tail_erasing_lifetimes(referenced_ty, self.ecx.param_env).kind\n             {\n                 // Validation has already errored on an invalid vtable pointer so we can safely not\n-                // do anything if this is not a real pointer\n+                // do anything if this is not a real pointer.\n                 if let Scalar::Ptr(vtable) = mplace.meta.unwrap() {\n-                    // explitly choose `Immutable` here, since vtables are immutable, even\n-                    // if the reference of the fat pointer is mutable\n+                    // Explitly choose `Immutable` here, since vtables are immutable, even\n+                    // if the reference of the fat pointer is mutable.\n                     self.intern_shallow(vtable.alloc_id, Mutability::Not, None)?;\n                 } else {\n                     self.ecx().tcx.sess.delay_span_bug("}]}