{"sha": "144f4b88ac338add740009626b91f278030f660b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NGY0Yjg4YWMzMzhhZGQ3NDAwMDk2MjZiOTFmMjc4MDMwZjY2MGI=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-11-23T05:20:26Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2015-01-04T03:15:49Z"}, "message": "Update influence list", "tree": {"sha": "4704c0da0cf774c23d3d594cf10b07a26efed51b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4704c0da0cf774c23d3d594cf10b07a26efed51b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/144f4b88ac338add740009626b91f278030f660b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/144f4b88ac338add740009626b91f278030f660b", "html_url": "https://github.com/rust-lang/rust/commit/144f4b88ac338add740009626b91f278030f660b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/144f4b88ac338add740009626b91f278030f660b/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "496dc4eae7de9d14cd49511a9acfbf5f11ae6c3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/496dc4eae7de9d14cd49511a9acfbf5f11ae6c3f", "html_url": "https://github.com/rust-lang/rust/commit/496dc4eae7de9d14cd49511a9acfbf5f11ae6c3f"}], "stats": {"total": 89, "additions": 22, "deletions": 67}, "files": [{"sha": "94207677dd3a9cc8931b13d462f1b860a71b0f7c", "filename": "src/doc/reference.md", "status": "modified", "additions": 22, "deletions": 67, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/144f4b88ac338add740009626b91f278030f660b/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/144f4b88ac338add740009626b91f278030f660b/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=144f4b88ac338add740009626b91f278030f660b", "patch": "@@ -4316,73 +4316,28 @@ fine-grained control is desired over the output format of a Rust crate.\n \n *TODO*.\n \n-# Appendix: Influences and further references\n-\n-## Influences\n-\n->  The essential problem that must be solved in making a fault-tolerant\n->  software system is therefore that of fault-isolation. Different programmers\n->  will write different modules, some modules will be correct, others will have\n->  errors. We do not want the errors in one module to adversely affect the\n->  behaviour of a module which does not have any errors.\n->\n->  &mdash; Joe Armstrong\n-\n->  In our approach, all data is private to some process, and processes can\n->  only communicate through communications channels. *Security*, as used\n->  in this paper, is the property which guarantees that processes in a system\n->  cannot affect each other except by explicit communication.\n->\n->  When security is absent, nothing which can be proven about a single module\n->  in isolation can be guaranteed to hold when that module is embedded in a\n->  system [...]\n->\n->  &mdash; Robert Strom and Shaula Yemini\n-\n->  Concurrent and applicative programming complement each other. The\n->  ability to send messages on channels provides I/O without side effects,\n->  while the avoidance of shared data helps keep concurrent processes from\n->  colliding.\n->\n->  &mdash; Rob Pike\n-\n-Rust is not a particularly original language. It may however appear unusual by\n-contemporary standards, as its design elements are drawn from a number of\n-\"historical\" languages that have, with a few exceptions, fallen out of favour.\n-Five prominent lineages contribute the most, though their influences have come\n-and gone during the course of Rust's development:\n-\n-* The NIL (1981) and Hermes (1990) family. These languages were developed by\n-  Robert Strom, Shaula Yemini, David Bacon and others in their group at IBM\n-  Watson Research Center (Yorktown Heights, NY, USA).\n-\n-* The Erlang (1987) language, developed by Joe Armstrong, Robert Virding, Claes\n-  Wikstr&ouml;m, Mike Williams and others in their group at the Ericsson Computer\n-  Science Laboratory (&Auml;lvsj&ouml;, Stockholm, Sweden) .\n-\n-* The Sather (1990) language, developed by Stephen Omohundro, Chu-Cheow Lim,\n-  Heinz Schmidt and others in their group at The International Computer\n-  Science Institute of the University of California, Berkeley (Berkeley, CA,\n-  USA).\n-\n-* The Newsqueak (1988), Alef (1995), and Limbo (1996) family. These\n-  languages were developed by Rob Pike, Phil Winterbottom, Sean Dorward and\n-  others in their group at Bell Labs Computing Sciences Research Center\n-  (Murray Hill, NJ, USA).\n-\n-* The Napier (1985) and Napier88 (1988) family. These languages were\n-  developed by Malcolm Atkinson, Ron Morrison and others in their group at\n-  the University of St. Andrews (St. Andrews, Fife, UK).\n-\n-Additional specific influences can be seen from the following languages:\n-\n-* The structural algebraic types and compilation manager of SML.\n-* The attribute and assembly systems of C#.\n-* The references and deterministic destructor system of C++.\n-* The memory region systems of the ML Kit and Cyclone.\n-* The typeclass system of Haskell.\n-* The lexical identifier rule of Python.\n-* The block syntax of Ruby.\n+# Appendix: Influences\n+\n+Rust is not a particularly original language, with design elements coming from\n+a wide range of sources. Some of these are listed below (including elements\n+that have since been removed):\n+\n+* SML, OCaml: algebraic datatypes, pattern matching, type inference,\n+  semicolon statement separation\n+* C++: references, RAII, smart pointers, move semantics, monomorphisation,\n+  memory model\n+* ML Kit, Cyclone: region based memory management\n+* Haskell (GHC): typeclasses, type families\n+* Newsqueak, Alef, Limbo: channels, concurrency\n+* Erlang: message passing, task failure, ~~linked task failure~~,\n+  ~~lightweight concurrency~~\n+* Swift: optional bindings\n+* Scheme: hygienic macros\n+* C#: attributes\n+* Ruby: ~~block syntax~~\n+* NIL, Hermes: ~~typestate~~\n+* [Unicode Annex #31](http://www.unicode.org/reports/tr31/): identifier and\n+  pattern syntax\n \n [ffi]: guide-ffi.html\n [plugin]: guide-plugin.html"}]}