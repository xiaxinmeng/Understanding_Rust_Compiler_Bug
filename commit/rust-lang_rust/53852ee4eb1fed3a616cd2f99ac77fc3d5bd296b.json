{"sha": "53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b", "node_id": "C_kwDOAAsO6NoAKDUzODUyZWU0ZWIxZmVkM2E2MTZjZDJmOTlhYzc3ZmMzZDViZDI5NmI", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-11-10T12:17:31Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-11-14T14:24:12Z"}, "message": "Move most of unwind's build script to lib.rs\n\nOnly the android libunwind detection remains in the build script\n\n* Reduces dependence on build scripts for building the standard library\n* Reduces dependence on exact target names in favor of using semantic\n  cfg(target_*) usage.\n* Keeps almost all code related to linking of the unwinder in one file", "tree": {"sha": "36e8c73530a94305d37f8b5b3747cd401cbe8cb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36e8c73530a94305d37f8b5b3747cd401cbe8cb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b", "html_url": "https://github.com/rust-lang/rust/commit/53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96ddd32c4bfb1d78f0cd03eb068b1710a8cebeef", "url": "https://api.github.com/repos/rust-lang/rust/commits/96ddd32c4bfb1d78f0cd03eb068b1710a8cebeef", "html_url": "https://github.com/rust-lang/rust/commit/96ddd32c4bfb1d78f0cd03eb068b1710a8cebeef"}], "stats": {"total": 48, "additions": 24, "deletions": 24}, "files": [{"sha": "5c3c02fb6adace904655f6b8597faffb29259321", "filename": "library/unwind/build.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b/library%2Funwind%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b/library%2Funwind%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Funwind%2Fbuild.rs?ref=53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b", "patch": "@@ -21,29 +21,5 @@ fn main() {\n         if has_unwind {\n             println!(\"cargo:rustc-cfg=feature=\\\"system-llvm-libunwind\\\"\");\n         }\n-    } else if target.contains(\"freebsd\") {\n-        println!(\"cargo:rustc-link-lib=gcc_s\");\n-    } else if target.contains(\"netbsd\") {\n-        println!(\"cargo:rustc-link-lib=gcc_s\");\n-    } else if target.contains(\"openbsd\") {\n-        if target.contains(\"sparc64\") {\n-            println!(\"cargo:rustc-link-lib=gcc\");\n-        } else {\n-            println!(\"cargo:rustc-link-lib=c++abi\");\n-        }\n-    } else if target.contains(\"solaris\") {\n-        println!(\"cargo:rustc-link-lib=gcc_s\");\n-    } else if target.contains(\"illumos\") {\n-        println!(\"cargo:rustc-link-lib=gcc_s\");\n-    } else if target.contains(\"dragonfly\") {\n-        println!(\"cargo:rustc-link-lib=gcc_pic\");\n-    } else if target.ends_with(\"pc-windows-gnu\") {\n-        // This is handled in the target spec with late_link_args_[static|dynamic]\n-    } else if target.contains(\"uwp-windows-gnu\") {\n-        println!(\"cargo:rustc-link-lib=unwind\");\n-    } else if target.contains(\"haiku\") {\n-        println!(\"cargo:rustc-link-lib=gcc_s\");\n-    } else if target.contains(\"redox\") {\n-        // redox is handled in lib.rs\n     }\n }"}, {"sha": "3753071d5f0c1fb6bacd8a04a2fd687ae9c3c615", "filename": "library/unwind/src/lib.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b/library%2Funwind%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b/library%2Funwind%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Funwind%2Fsrc%2Flib.rs?ref=53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b", "patch": "@@ -103,3 +103,27 @@ extern \"C\" {}\n #[cfg(all(target_vendor = \"fortanix\", target_env = \"sgx\"))]\n #[link(name = \"unwind\", kind = \"static\", modifiers = \"-bundle\")]\n extern \"C\" {}\n+\n+#[cfg(any(target_os = \"freebsd\", target_os = \"netbsd\"))]\n+#[link(name = \"gcc_s\")]\n+extern \"C\" {}\n+\n+#[cfg(all(target_os = \"openbsd\", target_arch = \"sparc64\"))]\n+#[link(name = \"gcc\")]\n+extern \"C\" {}\n+\n+#[cfg(all(target_os = \"openbsd\", not(target_arch = \"sparc64\")))]\n+#[link(name = \"c++abi\")]\n+extern \"C\" {}\n+\n+#[cfg(any(target_os = \"solaris\", target_os = \"illumos\"))]\n+#[link(name = \"gcc_s\")]\n+extern \"C\" {}\n+\n+#[cfg(target_os = \"dragonfly\")]\n+#[link(name = \"gcc_pic\")]\n+extern \"C\" {}\n+\n+#[cfg(target_os = \"haiku\")]\n+#[link(name = \"gcc_s\")]\n+extern \"C\" {}"}]}