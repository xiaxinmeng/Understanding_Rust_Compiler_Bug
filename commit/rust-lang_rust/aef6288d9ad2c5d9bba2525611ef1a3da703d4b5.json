{"sha": "aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZjYyODhkOWFkMmM1ZDliYmEyNTI1NjExZWYxYTNkYTcwM2Q0YjU=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-30T18:20:53Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-09T09:20:44Z"}, "message": "const fn feature gate is not needed anymore in a lot of tests", "tree": {"sha": "8202bdc95283c999b532263a67d357ed7d5e4c5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8202bdc95283c999b532263a67d357ed7d5e4c5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "html_url": "https://github.com/rust-lang/rust/commit/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a49acea80de0a78b421319ad340d4bc5e84a4dfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/a49acea80de0a78b421319ad340d4bc5e84a4dfe", "html_url": "https://github.com/rust-lang/rust/commit/a49acea80de0a78b421319ad340d4bc5e84a4dfe"}], "stats": {"total": 75, "additions": 38, "deletions": 37}, "files": [{"sha": "10a4c31f24ed4eb25c6c41d101842463c10185ee", "filename": "src/test/run-pass/ctfe/const-block-non-item-statement-3.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Frun-pass%2Fctfe%2Fconst-block-non-item-statement-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Frun-pass%2Fctfe%2Fconst-block-non-item-statement-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fctfe%2Fconst-block-non-item-statement-3.rs?ref=aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "patch": "@@ -3,4 +3,6 @@\n \n type Array = [u32; {  let x = 2; 5 }];\n \n-pub fn main() {}\n+pub fn main() {\n+    let _: Array = [0; 5];\n+}"}, {"sha": "a1b9b586ad0384e70e2fffc0c66a141c51972dd9", "filename": "src/test/run-pass/ctfe/const-block-non-item-statement.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Frun-pass%2Fctfe%2Fconst-block-non-item-statement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Frun-pass%2Fctfe%2Fconst-block-non-item-statement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fctfe%2Fconst-block-non-item-statement.rs?ref=aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "patch": "@@ -1,8 +1,11 @@\n // run-pass\n #![allow(dead_code)]\n \n+#[repr(u8)]\n enum Foo {\n     Bar = { let x = 1; 3 }\n }\n \n-pub fn main() {}\n+pub fn main() {\n+    assert_eq!(3, Foo::Bar as u8);\n+}"}, {"sha": "95d50171a847bca7d0db0f0a2705106d669ffc58", "filename": "src/test/run-pass/ctfe/locals-in-const-fn.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Frun-pass%2Fctfe%2Flocals-in-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Frun-pass%2Fctfe%2Flocals-in-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fctfe%2Flocals-in-const-fn.rs?ref=aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "patch": "@@ -2,8 +2,6 @@\n \n // https://github.com/rust-lang/rust/issues/48821\n \n-#![feature(const_fn)]\n-\n const fn foo(i: usize) -> usize {\n     let x = i;\n     x"}, {"sha": "1c44237e49b7a2f20c0e3506df439630c4f4fa86", "filename": "src/test/ui/consts/const_let_assign2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign2.rs?ref=aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "patch": "@@ -1,7 +1,5 @@\n // compile-pass\n \n-#![feature(const_fn)]\n-\n pub struct AA {\n     pub data: [u8; 10],\n }"}, {"sha": "cbe73923e9c424b961abec029bb092733899827f", "filename": "src/test/ui/consts/const_let_assign3.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.rs?ref=aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "patch": "@@ -17,9 +17,14 @@ const FOO: S = {\n     s\n };\n \n-type Array = [u32; { let mut x = 2; let y = &mut x; *y = 42; *y}];\n+type Array = [u32; {\n+    let mut x = 2;\n+    let y = &mut x;\n //~^ ERROR references in constants may only refer to immutable values\n-//~| ERROR constant contains unimplemented expression type\n+    *y = 42;\n+//~^ ERROR constant contains unimplemented expression type\n+    *y\n+}];\n \n fn main() {\n     assert_eq!(FOO.state, 3);"}, {"sha": "6649fb997cce471ef79b22c267ebfd51abba6a90", "filename": "src/test/ui/consts/const_let_assign3.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.stderr?ref=aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "patch": "@@ -11,16 +11,16 @@ LL |     s.foo(3); //~ ERROR references in constants may only refer to immutable\n    |     ^ constants require immutable values\n \n error[E0017]: references in constants may only refer to immutable values\n-  --> $DIR/const_let_assign3.rs:20:45\n+  --> $DIR/const_let_assign3.rs:22:13\n    |\n-LL | type Array = [u32; { let mut x = 2; let y = &mut x; *y = 42; *y}];\n-   |                                             ^^^^^^ constants require immutable values\n+LL |     let y = &mut x;\n+   |             ^^^^^^ constants require immutable values\n \n error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/const_let_assign3.rs:20:53\n+  --> $DIR/const_let_assign3.rs:24:5\n    |\n-LL | type Array = [u32; { let mut x = 2; let y = &mut x; *y = 42; *y}];\n-   |                                                     ^^^^^^^\n+LL |     *y = 42;\n+   |     ^^^^^^^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "a2364c392f26bd945bf232a315f343d498197bdf", "filename": "src/test/ui/consts/const_let_eq.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Fconsts%2Fconst_let_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Fconsts%2Fconst_let_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_let_eq.rs?ref=aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "patch": "@@ -1,5 +1,3 @@\n-#![feature(const_fn)]\n-\n // run-pass\n \n struct Foo<T>(T);"}, {"sha": "c93c84b5fb7732d342cb1b68597cdb0091aa845e", "filename": "src/test/ui/issues/issue-32829-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Fissues%2Fissue-32829-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Fissues%2Fissue-32829-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32829-2.rs?ref=aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "patch": "@@ -1,7 +1,5 @@\n // ignore-tidy-linelength\n \n-#![feature(const_fn)]\n-\n const bad : u32 = {\n     {\n         5;"}, {"sha": "8d7423f29ae97acc537b695bd25c0096994067b6", "filename": "src/test/ui/issues/issue-32829-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Fissues%2Fissue-32829-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Fissues%2Fissue-32829-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32829-2.stderr?ref=aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "patch": "@@ -1,17 +1,17 @@\n error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/issue-32829-2.rs:14:9\n+  --> $DIR/issue-32829-2.rs:12:9\n    |\n LL |         invalid();\n    |         ^^^^^^^^^\n \n error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/issue-32829-2.rs:36:9\n+  --> $DIR/issue-32829-2.rs:34:9\n    |\n LL |         invalid();\n    |         ^^^^^^^^^\n \n error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/issue-32829-2.rs:58:9\n+  --> $DIR/issue-32829-2.rs:56:9\n    |\n LL |         invalid();\n    |         ^^^^^^^^^"}, {"sha": "788f49f743cda3a667987939dd2d61be5f5dd9b1", "filename": "src/test/ui/unsafe/ranged_ints2_const.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Funsafe%2Franged_ints2_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Funsafe%2Franged_ints2_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Franged_ints2_const.rs?ref=aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "patch": "@@ -1,4 +1,4 @@\n-#![feature(rustc_attrs, const_fn)]\n+#![feature(rustc_attrs)]\n \n #[rustc_layout_scalar_valid_range_start(1)]\n #[repr(transparent)]\n@@ -8,13 +8,13 @@ fn main() {\n \n const fn foo() -> NonZero<u32> {\n     let mut x = unsafe { NonZero(1) };\n-    let y = &mut x.0; //~ ERROR references in constant functions may only refer to immutable\n+    let y = &mut x.0; //~ ERROR references in const fn are unstable\n     //~^ ERROR mutation of layout constrained field is unsafe\n     unsafe { NonZero(1) }\n }\n \n const fn bar() -> NonZero<u32> {\n     let mut x = unsafe { NonZero(1) };\n-    let y = unsafe { &mut x.0 }; //~ ERROR references in constant functions may only refer to immut\n+    let y = unsafe { &mut x.0 }; //~ ERROR mutable references in const fn are unstable\n     unsafe { NonZero(1) }\n }"}, {"sha": "39a55190b17deed7328383bfe2bbe25c6a154aa3", "filename": "src/test/ui/unsafe/ranged_ints2_const.stderr", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Funsafe%2Franged_ints2_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Funsafe%2Franged_ints2_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Franged_ints2_const.stderr?ref=aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "patch": "@@ -1,24 +1,23 @@\n-error[E0017]: references in constant functions may only refer to immutable values\n-  --> $DIR/ranged_ints2_const.rs:11:13\n+error: mutable references in const fn are unstable\n+  --> $DIR/ranged_ints2_const.rs:11:9\n    |\n-LL |     let y = &mut x.0; //~ ERROR references in constant functions may only refer to immutable\n-   |             ^^^^^^^^ constant functions require immutable values\n+LL |     let y = &mut x.0; //~ ERROR references in const fn are unstable\n+   |         ^\n \n-error[E0017]: references in constant functions may only refer to immutable values\n-  --> $DIR/ranged_ints2_const.rs:18:22\n+error: mutable references in const fn are unstable\n+  --> $DIR/ranged_ints2_const.rs:18:9\n    |\n-LL |     let y = unsafe { &mut x.0 }; //~ ERROR references in constant functions may only refer to immut\n-   |                      ^^^^^^^^ constant functions require immutable values\n+LL |     let y = unsafe { &mut x.0 }; //~ ERROR mutable references in const fn are unstable\n+   |         ^\n \n error[E0133]: mutation of layout constrained field is unsafe and requires unsafe function or block\n   --> $DIR/ranged_ints2_const.rs:11:13\n    |\n-LL |     let y = &mut x.0; //~ ERROR references in constant functions may only refer to immutable\n+LL |     let y = &mut x.0; //~ ERROR references in const fn are unstable\n    |             ^^^^^^^^ mutation of layout constrained field\n    |\n    = note: mutating layout constrained fields cannot statically be checked for valid values\n \n error: aborting due to 3 previous errors\n \n-Some errors occurred: E0017, E0133.\n-For more information about an error, try `rustc --explain E0017`.\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "7b03d8eda9380ef1bf3125b7a64ac44ed5ef7035", "filename": "src/test/ui/unsafe/ranged_ints3_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Funsafe%2Franged_ints3_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Funsafe%2Franged_ints3_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Franged_ints3_const.rs?ref=aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "patch": "@@ -1,4 +1,4 @@\n-#![feature(rustc_attrs, const_fn)]\n+#![feature(rustc_attrs)]\n \n use std::cell::Cell;\n "}, {"sha": "f09168c3d3f9ca48a8225cc0b165cb0d62d6fb1a", "filename": "src/test/ui/unsafe/ranged_ints4_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Funsafe%2Franged_ints4_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5/src%2Ftest%2Fui%2Funsafe%2Franged_ints4_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Franged_ints4_const.rs?ref=aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "patch": "@@ -1,4 +1,4 @@\n-#![feature(rustc_attrs, const_fn)]\n+#![feature(rustc_attrs)]\n \n #[rustc_layout_scalar_valid_range_start(1)]\n #[repr(transparent)]"}]}