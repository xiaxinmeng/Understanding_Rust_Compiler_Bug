{"sha": "d993df74c39d7c0938194485d7c41ba94ed419ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5OTNkZjc0YzM5ZDdjMDkzODE5NDQ4NWQ3YzQxYmE5NGVkNDE5ZWM=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-05-24T17:23:46Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-05-24T22:06:56Z"}, "message": "Teach parser and related things to understand const kind bounds.", "tree": {"sha": "eb87842e74ba8db2a456c5d3a2fd7767c3559567", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb87842e74ba8db2a456c5d3a2fd7767c3559567"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d993df74c39d7c0938194485d7c41ba94ed419ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d993df74c39d7c0938194485d7c41ba94ed419ec", "html_url": "https://github.com/rust-lang/rust/commit/d993df74c39d7c0938194485d7c41ba94ed419ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d993df74c39d7c0938194485d7c41ba94ed419ec/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30f8555544481e998f52d196c5a0f4d04cbcf334", "url": "https://api.github.com/repos/rust-lang/rust/commits/30f8555544481e998f52d196c5a0f4d04cbcf334", "html_url": "https://github.com/rust-lang/rust/commit/30f8555544481e998f52d196c5a0f4d04cbcf334"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "f0a3006b8c67cd59537f6f78cd45a5574be2812a", "filename": "src/librustsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Flibrustsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Flibrustsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fast.rs?ref=d993df74c39d7c0938194485d7c41ba94ed419ec", "patch": "@@ -59,6 +59,7 @@ const crate_node_id: node_id = 0;\n enum ty_param_bound {\n     bound_copy,\n     bound_send,\n+    bound_const,\n     bound_iface(@ty),\n }\n "}, {"sha": "9a6afd830ba841b406d2bd19deb9a0d3eae28842", "filename": "src/librustsyntax/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Flibrustsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Flibrustsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Ffold.rs?ref=d993df74c39d7c0938194485d7c41ba94ed419ec", "patch": "@@ -137,7 +137,7 @@ fn fold_fn_decl(decl: ast::fn_decl, fld: ast_fold) -> ast::fn_decl {\n \n fn fold_ty_param_bound(tpb: ty_param_bound, fld: ast_fold) -> ty_param_bound {\n     alt tpb {\n-      bound_copy | bound_send { tpb }\n+      bound_copy | bound_send | bound_const { tpb }\n       bound_iface(ty) { bound_iface(fld.fold_ty(ty)) }\n     }\n }"}, {"sha": "3814a7ada00845027ec6127de08d21b050999a1e", "filename": "src/librustsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Flibrustsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Flibrustsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fparse%2Fparser.rs?ref=d993df74c39d7c0938194485d7c41ba94ed419ec", "patch": "@@ -1676,8 +1676,11 @@ class parser {\n         let ident = self.parse_ident();\n         if self.eat(token::COLON) {\n             while self.token != token::COMMA && self.token != token::GT {\n-                if self.eat_keyword(\"send\") { bounds += [bound_send]; }\n-                else if self.eat_keyword(\"copy\") { bounds += [bound_copy]; }\n+                if self.eat_keyword(self, \"send\") { bounds += [bound_send]; }\n+                else if self.eat_keyword(self, \"copy\")\n+                    { bounds += [bound_copy]; }\n+                else if self.eat_keyword(self, \"const\")\n+                    { bounds += [bound_const]; }\n                 else { bounds += [bound_iface(self.parse_ty(false))]; }\n             }\n         }"}, {"sha": "52c7ce241abd73eaad222c5f943706565df5e6e2", "filename": "src/librustsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Flibrustsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Flibrustsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fprint%2Fpprust.rs?ref=d993df74c39d7c0938194485d7c41ba94ed419ec", "patch": "@@ -1400,6 +1400,7 @@ fn print_bounds(s: ps, bounds: @[ast::ty_param_bound]) {\n             alt bound {\n               ast::bound_copy { word(s.s, \"copy\"); }\n               ast::bound_send { word(s.s, \"send\"); }\n+              ast::bound_const { word(s.s, \"const\"); }\n               ast::bound_iface(t) { print_type(s, t); }\n             }\n         }"}, {"sha": "3ebc5616c1c875f0debe636731aac86415b9d7c9", "filename": "src/librustsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Flibrustsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Flibrustsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fvisit.rs?ref=d993df74c39d7c0938194485d7c41ba94ed419ec", "patch": "@@ -261,7 +261,7 @@ fn visit_ty_params<E>(tps: [ty_param], e: E, v: vt<E>) {\n         for vec::each(*tp.bounds) {|bound|\n             alt bound {\n               bound_iface(t) { v.visit_ty(t, e, v); }\n-              bound_copy | bound_send { }\n+              bound_copy | bound_send | bound_const { }\n             }\n         }\n     }"}, {"sha": "7d242a7e9e0536ddce8fa82e286fdad2d1b88f8b", "filename": "src/rustc/metadata/tydecode.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Frustc%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Frustc%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Ftydecode.rs?ref=d993df74c39d7c0938194485d7c41ba94ed419ec", "patch": "@@ -501,6 +501,7 @@ fn parse_bounds(st: @pstate, conv: conv_did) -> @[ty::param_bound] {\n         bounds += [alt check next(st) {\n           'S' { ty::bound_send }\n           'C' { ty::bound_copy }\n+          'K' { ty::bound_const }\n           'I' { ty::bound_iface(parse_ty(st, conv)) }\n           '.' { break; }\n         }];"}, {"sha": "cd2f86715e08a6f838447bac1fc9b1845eb05ada", "filename": "src/rustc/metadata/tyencode.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Frustc%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Frustc%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Ftyencode.rs?ref=d993df74c39d7c0938194485d7c41ba94ed419ec", "patch": "@@ -392,6 +392,7 @@ fn enc_bounds(w: io::writer, cx: @ctxt, bs: @[ty::param_bound]) {\n         alt bound {\n           ty::bound_send { w.write_char('S'); }\n           ty::bound_copy { w.write_char('C'); }\n+          ty::bound_const { w.write_char('K'); }\n           ty::bound_iface(tp) {\n             w.write_char('I');\n             enc_ty(w, cx, tp);"}, {"sha": "f1371b42598400f5934f471da0fb9f399b8c0396", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=d993df74c39d7c0938194485d7c41ba94ed419ec", "patch": "@@ -401,6 +401,7 @@ enum type_err {\n enum param_bound {\n     bound_copy,\n     bound_send,\n+    bound_const,\n     bound_iface(t),\n }\n "}, {"sha": "0d89e246e911ce3201973e175b850289e6de58f7", "filename": "src/rustc/middle/typeck/check/method.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs?ref=d993df74c39d7c0938194485d7c41ba94ed419ec", "patch": "@@ -47,7 +47,9 @@ impl methods for lookup {\n         let bounds = tcx.ty_param_bounds.get(did.node);\n         for vec::each(*bounds) {|bound|\n             let (iid, bound_substs) = alt bound {\n-              ty::bound_copy | ty::bound_send { cont; /* ok */ }\n+              ty::bound_copy | ty::bound_send | ty::bound_const {\n+                cont; /* ok */\n+              }\n               ty::bound_iface(bound_t) {\n                 alt check ty::get(bound_t).struct {\n                   ty::ty_iface(i, substs) { (i, substs) }"}, {"sha": "f279cab012f026567ae2f9ee5ff4837001b534fe", "filename": "src/rustc/middle/typeck/check/vtable.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs?ref=d993df74c39d7c0938194485d7c41ba94ed419ec", "patch": "@@ -67,7 +67,9 @@ fn lookup_vtable(fcx: @fn_ctxt, isc: resolve::iscopes, sp: span,\n         let mut n_bound = 0u;\n         for vec::each(*tcx.ty_param_bounds.get(did.node)) { |bound|\n             alt bound {\n-              ty::bound_send | ty::bound_copy { /* ignore */ }\n+              ty::bound_send | ty::bound_copy | ty::bound_const {\n+                /* ignore */\n+              }\n               ty::bound_iface(ity) {\n                 alt check ty::get(ity).struct {\n                   ty::ty_iface(idid, substs) {"}, {"sha": "edaa25396a8389c42ffbb8d1ff6ffd26c5cdea7f", "filename": "src/rustc/middle/typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Frustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Frustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=d993df74c39d7c0938194485d7c41ba94ed419ec", "patch": "@@ -657,6 +657,7 @@ fn ty_param_bounds(ccx: @crate_ctxt,\n             alt b {\n               ast::bound_send { [ty::bound_send] }\n               ast::bound_copy { [ty::bound_copy] }\n+              ast::bound_const { [ty::bound_const] }\n               ast::bound_iface(t) {\n                 let ity = ast_ty_to_ty(ccx, empty_rscope, t);\n                 alt ty::get(ity).struct {"}, {"sha": "7b7b188c67ec308c8f3f458c5ab2150af3ed1353", "filename": "src/test/run-pass/const-bound.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Ftest%2Frun-pass%2Fconst-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d993df74c39d7c0938194485d7c41ba94ed419ec/src%2Ftest%2Frun-pass%2Fconst-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-bound.rs?ref=d993df74c39d7c0938194485d7c41ba94ed419ec", "patch": "@@ -0,0 +1,13 @@\n+// Make sure const bounds work on things, and test that a few types\n+// are const.\n+\n+\n+fn foo<T: copy const>(x: T) -> T { x }\n+\n+fn main() {\n+    foo(1);\n+    foo(\"hi\");\n+    foo([1, 2, 3]);\n+    foo({field: 42});\n+    foo((1, 2u));\n+}"}]}