{"sha": "26518236149dd3435e1d1f15627b56dc713e8524", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2NTE4MjM2MTQ5ZGQzNDM1ZTFkMWYxNTYyN2I1NmRjNzEzZTg1MjQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-27T06:14:59Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-27T16:37:04Z"}, "message": "Rollup merge of #22837 - eddyb:issue-21721, r=dotdash\n\n Closes #21721.", "tree": {"sha": "a83ce1e8e74aa924c75e4a28e259568f036007f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a83ce1e8e74aa924c75e4a28e259568f036007f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26518236149dd3435e1d1f15627b56dc713e8524", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26518236149dd3435e1d1f15627b56dc713e8524", "html_url": "https://github.com/rust-lang/rust/commit/26518236149dd3435e1d1f15627b56dc713e8524", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26518236149dd3435e1d1f15627b56dc713e8524/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "204adc9ab83ff7ab4873fa5ee7bd58190799c538", "url": "https://api.github.com/repos/rust-lang/rust/commits/204adc9ab83ff7ab4873fa5ee7bd58190799c538", "html_url": "https://github.com/rust-lang/rust/commit/204adc9ab83ff7ab4873fa5ee7bd58190799c538"}, {"sha": "704ce1d735cc885718fc5d1d4b2b5ca55410271e", "url": "https://api.github.com/repos/rust-lang/rust/commits/704ce1d735cc885718fc5d1d4b2b5ca55410271e", "html_url": "https://github.com/rust-lang/rust/commit/704ce1d735cc885718fc5d1d4b2b5ca55410271e"}], "stats": {"total": 37, "additions": 23, "deletions": 14}, "files": [{"sha": "06828911471466d2e1e3eb58786eb04567aacf1a", "filename": "src/librand/reseeding.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/26518236149dd3435e1d1f15627b56dc713e8524/src%2Flibrand%2Freseeding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26518236149dd3435e1d1f15627b56dc713e8524/src%2Flibrand%2Freseeding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Freseeding.rs?ref=26518236149dd3435e1d1f15627b56dc713e8524", "patch": "@@ -134,11 +134,7 @@ pub trait Reseeder<R> {\n /// Reseed an RNG using a `Default` instance. This reseeds by\n /// replacing the RNG with the result of a `Default::default` call.\n #[derive(Copy)]\n-pub struct ReseedWithDefault { __hack: [u8; 0] }\n-// FIXME(#21721) used to be an unit struct but that can cause\n-// certain LLVM versions to abort during optimizations.\n-#[allow(non_upper_case_globals)]\n-pub const ReseedWithDefault: ReseedWithDefault = ReseedWithDefault { __hack: [] };\n+pub struct ReseedWithDefault;\n \n impl<R: Rng + Default> Reseeder<R> for ReseedWithDefault {\n     fn reseed(&mut self, rng: &mut R) {"}, {"sha": "896b0ee57a04cb47186e29aaafd7b5a634d2fed6", "filename": "src/test/bench/task-perf-alloc-unwind.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/26518236149dd3435e1d1f15627b56dc713e8524/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26518236149dd3435e1d1f15627b56dc713e8524/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs?ref=26518236149dd3435e1d1f15627b56dc713e8524", "patch": "@@ -40,9 +40,7 @@ fn run(repeat: int, depth: int) {\n     }\n }\n \n-// FIXME(#21721) used to be `List<()>` but that can cause\n-// certain LLVM versions to abort during optimizations.\n-type nillist = List<[u8; 0]>;\n+type nillist = List<()>;\n \n // Filled with things that have to be unwound\n \n@@ -83,11 +81,11 @@ fn recurse_or_panic(depth: int, st: Option<State>) {\n             }\n             Some(st) => {\n                 let mut v = st.vec.clone();\n-                v.push_all(&[box List::Cons([], st.vec.last().unwrap().clone())]);\n+                v.push_all(&[box List::Cons((), st.vec.last().unwrap().clone())]);\n                 State {\n-                    unique: box List::Cons([], box *st.unique),\n+                    unique: box List::Cons((), box *st.unique),\n                     vec: v,\n-                    res: r(box List::Cons([], st.res._l.clone())),\n+                    res: r(box List::Cons((), st.res._l.clone())),\n                 }\n             }\n         };"}, {"sha": "aa53a7658e1291fd5985ac06abeb89ac5d765516", "filename": "src/test/run-pass/issue-17216.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26518236149dd3435e1d1f15627b56dc713e8524/src%2Ftest%2Frun-pass%2Fissue-17216.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26518236149dd3435e1d1f15627b56dc713e8524/src%2Ftest%2Frun-pass%2Fissue-17216.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17216.rs?ref=26518236149dd3435e1d1f15627b56dc713e8524", "patch": "@@ -25,9 +25,7 @@ fn main() {\n     let mut dropped = false;\n     {\n         let leak = Leak { dropped: &mut dropped };\n-        // FIXME(#21721) \"hack\" used to be () but that can cause\n-        // certain LLVM versions to abort during optimizations.\n-        for (_, leaked) in Some((\"hack\", leak)).into_iter() {}\n+        for ((), leaked) in Some(((), leak)).into_iter() {}\n     }\n \n     assert!(dropped);"}, {"sha": "fee14061c566ab5e6feba90476b636f053fd5619", "filename": "src/test/run-pass/issue-21721.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/26518236149dd3435e1d1f15627b56dc713e8524/src%2Ftest%2Frun-pass%2Fissue-21721.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26518236149dd3435e1d1f15627b56dc713e8524/src%2Ftest%2Frun-pass%2Fissue-21721.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-21721.rs?ref=26518236149dd3435e1d1f15627b56dc713e8524", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    static NONE: Option<((), &'static u8)> = None;\n+    let ptr = unsafe {\n+        *(&NONE as *const _ as *const *const u8)\n+    };\n+    assert!(ptr.is_null());\n+}"}]}