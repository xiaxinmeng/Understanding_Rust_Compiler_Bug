{"sha": "fd505d7fd52983a374f4087f46e2ae490b9cdb86", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNTA1ZDdmZDUyOTgzYTM3NGY0MDg3ZjQ2ZTJhZTQ5MGI5Y2RiODY=", "commit": {"author": {"name": "Nils Liberg", "email": "nils@nilsliberg.se", "date": "2019-09-27T11:54:05Z"}, "committer": {"name": "Nils Liberg", "email": "nils@nilsliberg.se", "date": "2019-09-28T09:49:45Z"}, "message": "Improve wording in documentation of MaybeUninit", "tree": {"sha": "f39859e7e4b18014c97051168e3f6a87080f9af6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f39859e7e4b18014c97051168e3f6a87080f9af6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd505d7fd52983a374f4087f46e2ae490b9cdb86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd505d7fd52983a374f4087f46e2ae490b9cdb86", "html_url": "https://github.com/rust-lang/rust/commit/fd505d7fd52983a374f4087f46e2ae490b9cdb86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd505d7fd52983a374f4087f46e2ae490b9cdb86/comments", "author": {"login": "nliberg", "id": 5557152, "node_id": "MDQ6VXNlcjU1NTcxNTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5557152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nliberg", "html_url": "https://github.com/nliberg", "followers_url": "https://api.github.com/users/nliberg/followers", "following_url": "https://api.github.com/users/nliberg/following{/other_user}", "gists_url": "https://api.github.com/users/nliberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/nliberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nliberg/subscriptions", "organizations_url": "https://api.github.com/users/nliberg/orgs", "repos_url": "https://api.github.com/users/nliberg/repos", "events_url": "https://api.github.com/users/nliberg/events{/privacy}", "received_events_url": "https://api.github.com/users/nliberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nliberg", "id": 5557152, "node_id": "MDQ6VXNlcjU1NTcxNTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5557152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nliberg", "html_url": "https://github.com/nliberg", "followers_url": "https://api.github.com/users/nliberg/followers", "following_url": "https://api.github.com/users/nliberg/following{/other_user}", "gists_url": "https://api.github.com/users/nliberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/nliberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nliberg/subscriptions", "organizations_url": "https://api.github.com/users/nliberg/orgs", "repos_url": "https://api.github.com/users/nliberg/repos", "events_url": "https://api.github.com/users/nliberg/events{/privacy}", "received_events_url": "https://api.github.com/users/nliberg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59367b074f1523353dddefa678ffe3cac9fd4e50", "url": "https://api.github.com/repos/rust-lang/rust/commits/59367b074f1523353dddefa678ffe3cac9fd4e50", "html_url": "https://github.com/rust-lang/rust/commit/59367b074f1523353dddefa678ffe3cac9fd4e50"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "792ce9dfad419b0770094bef9c5af8c02c081130", "filename": "src/libcore/mem/maybe_uninit.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fd505d7fd52983a374f4087f46e2ae490b9cdb86/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd505d7fd52983a374f4087f46e2ae490b9cdb86/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs?ref=fd505d7fd52983a374f4087f46e2ae490b9cdb86", "patch": "@@ -5,12 +5,12 @@ use crate::mem::ManuallyDrop;\n ///\n /// # Initialization invariant\n ///\n-/// The compiler, in general, assumes that variables are properly initialized\n-/// at their respective type. For example, a variable of reference type must\n-/// be aligned and non-NULL. This is an invariant that must *always* be upheld,\n-/// even in unsafe code. As a consequence, zero-initializing a variable of reference\n-/// type causes instantaneous [undefined behavior][ub], no matter whether that reference\n-/// ever gets used to access memory:\n+/// The compiler, in general, assumes that a variable is properly initialized\n+/// according to the requirements of the variable's type. For example, a variable of\n+/// reference type must be aligned and non-NULL. This is an invariant that must\n+/// *always* be upheld, even in unsafe code. As a consequence, zero-initializing a\n+/// variable of reference type causes instantaneous [undefined behavior][ub],\n+/// no matter whether that reference ever gets used to access memory:\n ///\n /// ```rust,no_run\n /// # #![allow(invalid_value)]"}]}