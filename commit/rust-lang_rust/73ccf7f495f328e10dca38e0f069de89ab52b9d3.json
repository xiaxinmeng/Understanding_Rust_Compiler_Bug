{"sha": "73ccf7f495f328e10dca38e0f069de89ab52b9d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczY2NmN2Y0OTVmMzI4ZTEwZGNhMzhlMGYwNjlkZTg5YWI1MmI5ZDM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-07T13:07:18Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-07T13:07:18Z"}, "message": "Reorder imports", "tree": {"sha": "220b6f36f1fcea91f7971d03d9ea80e416d5a2a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/220b6f36f1fcea91f7971d03d9ea80e416d5a2a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73ccf7f495f328e10dca38e0f069de89ab52b9d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73ccf7f495f328e10dca38e0f069de89ab52b9d3", "html_url": "https://github.com/rust-lang/rust/commit/73ccf7f495f328e10dca38e0f069de89ab52b9d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73ccf7f495f328e10dca38e0f069de89ab52b9d3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7e5d94bda362ffc21174a79aa0be113c3288e1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7e5d94bda362ffc21174a79aa0be113c3288e1e", "html_url": "https://github.com/rust-lang/rust/commit/b7e5d94bda362ffc21174a79aa0be113c3288e1e"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "780a98aea21b173355838dfb58e3beac350a5fc5", "filename": "crates/ra_ide/src/completion/complete_record.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/73ccf7f495f328e10dca38e0f069de89ab52b9d3/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73ccf7f495f328e10dca38e0f069de89ab52b9d3/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record.rs?ref=73ccf7f495f328e10dca38e0f069de89ab52b9d3", "patch": "@@ -1,7 +1,8 @@\n //! Complete fields in record literals and patterns.\n-use crate::completion::{CompletionContext, Completions};\n use ra_syntax::{ast, ast::NameOwner, SmolStr};\n \n+use crate::completion::{CompletionContext, Completions};\n+\n pub(super) fn complete_record(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n     let (ty, variant, already_present_fields) =\n         match (ctx.record_lit_pat.as_ref(), ctx.record_lit_syntax.as_ref()) {\n@@ -59,9 +60,10 @@ fn pattern_ascribed_fields(record_pat: &ast::RecordPat) -> Vec<SmolStr> {\n #[cfg(test)]\n mod tests {\n     mod record_lit_tests {\n-        use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n         use insta::assert_debug_snapshot;\n \n+        use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n+\n         fn complete(code: &str) -> Vec<CompletionItem> {\n             do_completion(code, CompletionKind::Reference)\n         }\n@@ -204,9 +206,10 @@ mod tests {\n     }\n \n     mod record_pat_tests {\n-        use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n         use insta::assert_debug_snapshot;\n \n+        use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n+\n         fn complete(code: &str) -> Vec<CompletionItem> {\n             do_completion(code, CompletionKind::Reference)\n         }"}]}