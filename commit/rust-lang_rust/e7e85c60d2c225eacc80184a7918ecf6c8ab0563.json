{"sha": "e7e85c60d2c225eacc80184a7918ecf6c8ab0563", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ZTg1YzYwZDJjMjI1ZWFjYzgwMTg0YTc5MThlY2Y2YzhhYjA1NjM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-14T06:41:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-14T06:55:24Z"}, "message": "Move original_file to Expander", "tree": {"sha": "d578f2e3e973c4718bdee2c95bc5585fe969a2e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d578f2e3e973c4718bdee2c95bc5585fe969a2e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7e85c60d2c225eacc80184a7918ecf6c8ab0563", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7e85c60d2c225eacc80184a7918ecf6c8ab0563", "html_url": "https://github.com/rust-lang/rust/commit/e7e85c60d2c225eacc80184a7918ecf6c8ab0563", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7e85c60d2c225eacc80184a7918ecf6c8ab0563/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c8ef1432e1891809f48ff691f949047d6527c07", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c8ef1432e1891809f48ff691f949047d6527c07", "html_url": "https://github.com/rust-lang/rust/commit/8c8ef1432e1891809f48ff691f949047d6527c07"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "1c9c864490fe546f44fa1207ee4042695b2e2602", "filename": "crates/ra_hir_def/src/body.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7e85c60d2c225eacc80184a7918ecf6c8ab0563/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7e85c60d2c225eacc80184a7918ecf6c8ab0563/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody.rs?ref=e7e85c60d2c225eacc80184a7918ecf6c8ab0563", "patch": "@@ -18,14 +18,20 @@ use crate::{\n \n pub struct Expander {\n     crate_def_map: Arc<CrateDefMap>,\n+    original_file_id: HirFileId,\n     current_file_id: HirFileId,\n     module: ModuleId,\n }\n \n impl Expander {\n     pub fn new(db: &impl DefDatabase2, current_file_id: HirFileId, module: ModuleId) -> Expander {\n         let crate_def_map = db.crate_def_map(module.krate);\n-        Expander { crate_def_map, current_file_id, module }\n+        Expander { crate_def_map, original_file_id: current_file_id, current_file_id, module }\n+    }\n+\n+    // FIXME: remove this.\n+    fn is_in_expansion(&self) -> bool {\n+        self.original_file_id != self.current_file_id\n     }\n \n     fn resolve_path_as_macro(&self, db: &impl DefDatabase2, path: &Path) -> Option<MacroDefId> {"}, {"sha": "602bcb220bd25f74fa7410c69a34c99e5561ae97", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e7e85c60d2c225eacc80184a7918ecf6c8ab0563/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7e85c60d2c225eacc80184a7918ecf6c8ab0563/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=e7e85c60d2c225eacc80184a7918ecf6c8ab0563", "patch": "@@ -4,7 +4,7 @@ use hir_expand::{\n     either::Either,\n     hygiene::Hygiene,\n     name::{self, AsName, Name},\n-    AstId, HirFileId, MacroCallLoc, MacroFileKind, Source,\n+    AstId, MacroCallLoc, MacroFileKind, Source,\n };\n use ra_arena::Arena;\n use ra_syntax::{\n@@ -34,12 +34,9 @@ pub(super) fn lower(\n     params: Option<ast::ParamList>,\n     body: Option<ast::Expr>,\n ) -> (Body, BodySourceMap) {\n-    let original_file_id = expander.current_file_id;\n-\n     ExprCollector {\n         expander,\n         db,\n-        original_file_id,\n         source_map: BodySourceMap::default(),\n         body: Body {\n             exprs: Arena::default(),\n@@ -54,7 +51,6 @@ pub(super) fn lower(\n struct ExprCollector<DB> {\n     db: DB,\n     expander: Expander,\n-    original_file_id: HirFileId,\n \n     body: Body,\n     source_map: BodySourceMap,\n@@ -100,7 +96,7 @@ where\n     fn alloc_expr(&mut self, expr: Expr, ptr: AstPtr<ast::Expr>) -> ExprId {\n         let ptr = Either::A(ptr);\n         let id = self.body.exprs.alloc(expr);\n-        if self.expander.current_file_id == self.original_file_id {\n+        if !self.expander.is_in_expansion() {\n             self.source_map.expr_map.insert(ptr, id);\n         }\n         self.source_map\n@@ -116,7 +112,7 @@ where\n     fn alloc_expr_field_shorthand(&mut self, expr: Expr, ptr: AstPtr<ast::RecordField>) -> ExprId {\n         let ptr = Either::B(ptr);\n         let id = self.body.exprs.alloc(expr);\n-        if self.expander.current_file_id == self.original_file_id {\n+        if !self.expander.is_in_expansion() {\n             self.source_map.expr_map.insert(ptr, id);\n         }\n         self.source_map\n@@ -126,7 +122,7 @@ where\n     }\n     fn alloc_pat(&mut self, pat: Pat, ptr: PatPtr) -> PatId {\n         let id = self.body.pats.alloc(pat);\n-        if self.expander.current_file_id == self.original_file_id {\n+        if !self.expander.is_in_expansion() {\n             self.source_map.pat_map.insert(ptr, id);\n         }\n         self.source_map"}]}