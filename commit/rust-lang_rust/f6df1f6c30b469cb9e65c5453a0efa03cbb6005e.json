{"sha": "f6df1f6c30b469cb9e65c5453a0efa03cbb6005e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ZGYxZjZjMzBiNDY5Y2I5ZTY1YzU0NTNhMGVmYTAzY2JiNjAwNWU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-09T21:56:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-09T21:56:17Z"}, "message": "Rollup merge of #60675 - cramertj:no-await-macro, r=nikomatsakis,Centril\n\nRemove the old await! macro\n\nThis doesn't work anymore, and its continued presence is cause for confusion. `yield` can no longer be used to return `Pending` from an `async` body.\n\ncc https://github.com/rust-lang/rust/issues/60660\ncc @taiki-e\ncc https://github.com/tokio-rs/tokio/pull/1080", "tree": {"sha": "3c26534878efa7713b6879a5d7b54fa1d9bd0bd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c26534878efa7713b6879a5d7b54fa1d9bd0bd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6df1f6c30b469cb9e65c5453a0efa03cbb6005e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc1KIBCRBK7hj4Ov3rIwAAdHIIAFtiyVa2NKoADEeFv+69knxw\nUmn8/t1BnvW7lIi2hZMDZ5P71O0Az6kil0win0lbW6GmHOH/tWiKB1H/xAiUVYrd\nBeK62v40m3bzqq9A0S3WIWZO3tldJXKJDEWjvAiZYv7ruqFXC+JLGYn2pU4pRRO+\nCIfr/c80DviYe+hq2T369rflYecQvArXz5Wydptw/rzc01KO+eHpNYJqCw3F2cD8\nD7e2F6/VSCOY8WxCy1MXN5HJFvzSxMNeufZHl+RI1jX5Cc6Pbk2G2kMFHE0MzKHy\nBYV/Z5rM/UOvrDGaRAcSF1llnJHWlirEnfiBUJ5pwuvUAGMlsNzLawA7D3dkn+g=\n=uIKH\n-----END PGP SIGNATURE-----\n", "payload": "tree 3c26534878efa7713b6879a5d7b54fa1d9bd0bd6\nparent f27f14b60fd6ad5150dbbfd6413d8a0226ae42eb\nparent df41e4f695a057fb14fdbc63b9009dafe4d7f681\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1557438977 +0200\ncommitter GitHub <noreply@github.com> 1557438977 +0200\n\nRollup merge of #60675 - cramertj:no-await-macro, r=nikomatsakis,Centril\n\nRemove the old await! macro\n\nThis doesn't work anymore, and its continued presence is cause for confusion. `yield` can no longer be used to return `Pending` from an `async` body.\n\ncc https://github.com/rust-lang/rust/issues/60660\ncc @taiki-e\ncc https://github.com/tokio-rs/tokio/pull/1080\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6df1f6c30b469cb9e65c5453a0efa03cbb6005e", "html_url": "https://github.com/rust-lang/rust/commit/f6df1f6c30b469cb9e65c5453a0efa03cbb6005e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6df1f6c30b469cb9e65c5453a0efa03cbb6005e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f27f14b60fd6ad5150dbbfd6413d8a0226ae42eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/f27f14b60fd6ad5150dbbfd6413d8a0226ae42eb", "html_url": "https://github.com/rust-lang/rust/commit/f27f14b60fd6ad5150dbbfd6413d8a0226ae42eb"}, {"sha": "df41e4f695a057fb14fdbc63b9009dafe4d7f681", "url": "https://api.github.com/repos/rust-lang/rust/commits/df41e4f695a057fb14fdbc63b9009dafe4d7f681", "html_url": "https://github.com/rust-lang/rust/commit/df41e4f695a057fb14fdbc63b9009dafe4d7f681"}], "stats": {"total": 23, "additions": 0, "deletions": 23}, "files": [{"sha": "03aebeda47c4851f707c2d2ffb39682e166c4dcf", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f6df1f6c30b469cb9e65c5453a0efa03cbb6005e/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6df1f6c30b469cb9e65c5453a0efa03cbb6005e/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=f6df1f6c30b469cb9e65c5453a0efa03cbb6005e", "patch": "@@ -357,29 +357,6 @@ macro_rules! dbg {\n     };\n }\n \n-/// Awaits the completion of an async call.\n-#[macro_export]\n-#[unstable(feature = \"await_macro\", issue = \"50547\")]\n-#[allow_internal_unstable(gen_future, generators)]\n-#[allow_internal_unsafe]\n-macro_rules! r#await {\n-    ($e:expr) => { {\n-        let mut pinned = $e;\n-        loop {\n-            if let $crate::task::Poll::Ready(x) =\n-                $crate::future::poll_with_tls_context(unsafe {\n-                    $crate::pin::Pin::new_unchecked(&mut pinned)\n-                })\n-            {\n-                break x;\n-            }\n-            // FIXME(cramertj) prior to stabilizing await, we have to ensure that this\n-            // can't be used to create a generator on stable via `|| await!()`.\n-            yield\n-        }\n-    } }\n-}\n-\n /// Selects the first successful receive event from a number of receivers.\n ///\n /// This macro is used to wait for the first event to occur on a number of"}]}