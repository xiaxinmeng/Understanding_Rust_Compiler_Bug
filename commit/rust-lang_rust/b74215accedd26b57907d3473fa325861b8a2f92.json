{"sha": "b74215accedd26b57907d3473fa325861b8a2f92", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NDIxNWFjY2VkZDI2YjU3OTA3ZDM0NzNmYTMyNTg2MWI4YTJmOTI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-09-15T16:14:10Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-09-15T16:14:10Z"}, "message": "Switch wasm math symbols to their original names\n\nThe names `Math_*` were given to help undefined symbol messages indicate how to\nimplement them, but these are all implemented in compiler-rt now so there's no\nneed to rename them! This change should make it so wasm binaries by default, no\nmatter the math symbols used, will not have unresolved symbols.", "tree": {"sha": "324eb4f31b4c83e14e8be9740e9de590d269f7ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/324eb4f31b4c83e14e8be9740e9de590d269f7ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b74215accedd26b57907d3473fa325861b8a2f92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b74215accedd26b57907d3473fa325861b8a2f92", "html_url": "https://github.com/rust-lang/rust/commit/b74215accedd26b57907d3473fa325861b8a2f92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b74215accedd26b57907d3473fa325861b8a2f92/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a1eed73be3e420cf3b3fc9f5cadd64725a17c9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a1eed73be3e420cf3b3fc9f5cadd64725a17c9f", "html_url": "https://github.com/rust-lang/rust/commit/7a1eed73be3e420cf3b3fc9f5cadd64725a17c9f"}], "stats": {"total": 29, "additions": 1, "deletions": 28}, "files": [{"sha": "64fc14d42d9b77f0884c5a4749bb336ca0c237e1", "filename": "src/libstd/sys/wasm/cmath.rs", "status": "modified", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b74215accedd26b57907d3473fa325861b8a2f92/src%2Flibstd%2Fsys%2Fwasm%2Fcmath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b74215accedd26b57907d3473fa325861b8a2f92/src%2Flibstd%2Fsys%2Fwasm%2Fcmath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasm%2Fcmath.rs?ref=b74215accedd26b57907d3473fa325861b8a2f92", "patch": "@@ -74,46 +74,19 @@ pub unsafe fn tanhf(n: f32) -> f32 {\n     f64::tanh(n as f64) as f32\n }\n \n-// Right now all these functions, the f64 version of the functions above, all\n-// shell out to random names. These names aren't actually defined anywhere, per\n-// se, but we need this to compile somehow.\n-//\n-// The idea with this is that when you're using wasm then, for now, we have no\n-// way of providing an implementation of these which delegates to a \"correct\"\n-// implementation. For example most wasm applications probably just want to\n-// delegate to the javascript `Math` object and its related functions, but wasm\n-// doesn't currently have the ability to seamlessly do that (when you\n-// instantiate a module you have to set that up).\n-//\n-// As a result these are just defined here with \"hopefully helpful\" names. The\n-// symbols won't ever be needed or show up unless these functions are called,\n-// and hopefully when they're called the errors are self-explanatory enough to\n-// figure out what's going on.\n-\n+// These symbols are all defined in `compiler-builtins`\n extern {\n-    #[link_name = \"Math_acos\"]\n     pub fn acos(n: f64) -> f64;\n-    #[link_name = \"Math_asin\"]\n     pub fn asin(n: f64) -> f64;\n-    #[link_name = \"Math_atan\"]\n     pub fn atan(n: f64) -> f64;\n-    #[link_name = \"Math_atan2\"]\n     pub fn atan2(a: f64, b: f64) -> f64;\n-    #[link_name = \"Math_cbrt\"]\n     pub fn cbrt(n: f64) -> f64;\n-    #[link_name = \"Math_cosh\"]\n     pub fn cosh(n: f64) -> f64;\n-    #[link_name = \"Math_expm1\"]\n     pub fn expm1(n: f64) -> f64;\n     pub fn fdim(a: f64, b: f64) -> f64;\n-    #[link_name = \"Math_log1p\"]\n     pub fn log1p(n: f64) -> f64;\n-    #[link_name = \"Math_sinh\"]\n     pub fn sinh(n: f64) -> f64;\n-    #[link_name = \"Math_tan\"]\n     pub fn tan(n: f64) -> f64;\n-    #[link_name = \"Math_tanh\"]\n     pub fn tanh(n: f64) -> f64;\n-    #[link_name = \"Math_hypot\"]\n     pub fn hypot(x: f64, y: f64) -> f64;\n }"}]}