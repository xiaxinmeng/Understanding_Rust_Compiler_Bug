{"sha": "598072afa46d3c4fca7659c49ef3c9dc9f85787e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ODA3MmFmYTQ2ZDNjNGZjYTc2NTljNDllZjNjOWRjOWY4NTc4N2U=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-08-21T22:43:50Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-08-21T22:57:22Z"}, "message": "Don't fail in port.try_recv() the second time. Close #7800.", "tree": {"sha": "f009a9d0492e66ddca9dd26923aba64ebdf21e43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f009a9d0492e66ddca9dd26923aba64ebdf21e43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/598072afa46d3c4fca7659c49ef3c9dc9f85787e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/598072afa46d3c4fca7659c49ef3c9dc9f85787e", "html_url": "https://github.com/rust-lang/rust/commit/598072afa46d3c4fca7659c49ef3c9dc9f85787e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/598072afa46d3c4fca7659c49ef3c9dc9f85787e/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b81f5c547c41571be3814ad4b2802f3305e12152", "url": "https://api.github.com/repos/rust-lang/rust/commits/b81f5c547c41571be3814ad4b2802f3305e12152", "html_url": "https://github.com/rust-lang/rust/commit/b81f5c547c41571be3814ad4b2802f3305e12152"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "a3d06378ed45fd756dcfafde91a6b562f80ce53c", "filename": "src/libstd/cell.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/598072afa46d3c4fca7659c49ef3c9dc9f85787e/src%2Flibstd%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/598072afa46d3c4fca7659c49ef3c9dc9f85787e/src%2Flibstd%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcell.rs?ref=598072afa46d3c4fca7659c49ef3c9dc9f85787e", "patch": "@@ -50,6 +50,12 @@ impl<T> Cell<T> {\n         this.value.take_unwrap()\n     }\n \n+    /// Yields the value if the cell is full, or `None` if it is empty.\n+    pub fn take_opt(&self) -> Option<T> {\n+        let this = unsafe { transmute_mut(self) };\n+        this.value.take()\n+    }\n+\n     /// Returns the value, failing if the cell is full.\n     pub fn put_back(&self, value: T) {\n         let this = unsafe { transmute_mut(self) };"}, {"sha": "c6b87d88979613d24ee2d73a0a0dd9e1245f0989", "filename": "src/libstd/rt/comm.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/598072afa46d3c4fca7659c49ef3c9dc9f85787e/src%2Flibstd%2Frt%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/598072afa46d3c4fca7659c49ef3c9dc9f85787e/src%2Flibstd%2Frt%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fcomm.rs?ref=598072afa46d3c4fca7659c49ef3c9dc9f85787e", "patch": "@@ -499,13 +499,14 @@ impl<T> GenericPort<T> for Port<T> {\n     }\n \n     fn try_recv(&self) -> Option<T> {\n-        let pone = self.next.take();\n-        match pone.try_recv() {\n-            Some(StreamPayload { val, next }) => {\n-                self.next.put_back(next);\n-                Some(val)\n+        do self.next.take_opt().map_move_default(None) |pone| {\n+            match pone.try_recv() {\n+                Some(StreamPayload { val, next }) => {\n+                    self.next.put_back(next);\n+                    Some(val)\n+                }\n+                None => None\n             }\n-            None => None\n         }\n     }\n }"}]}