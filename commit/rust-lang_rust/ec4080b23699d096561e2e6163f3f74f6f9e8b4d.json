{"sha": "ec4080b23699d096561e2e6163f3f74f6f9e8b4d", "node_id": "C_kwDOAAsO6NoAKGVjNDA4MGIyMzY5OWQwOTY1NjFlMmU2MTYzZjNmNzRmNmY5ZThiNGQ", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-12-02T16:41:25Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-12-02T16:47:57Z"}, "message": "Fix async track caller for assoc fn and trait impl fn", "tree": {"sha": "240f0d8eabe615c0ec0ae587abec138bc6aefe08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/240f0d8eabe615c0ec0ae587abec138bc6aefe08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec4080b23699d096561e2e6163f3f74f6f9e8b4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec4080b23699d096561e2e6163f3f74f6f9e8b4d", "html_url": "https://github.com/rust-lang/rust/commit/ec4080b23699d096561e2e6163f3f74f6f9e8b4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec4080b23699d096561e2e6163f3f74f6f9e8b4d/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c73b646328d4adeb66fe67bae57c8206803eef8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c73b646328d4adeb66fe67bae57c8206803eef8", "html_url": "https://github.com/rust-lang/rust/commit/4c73b646328d4adeb66fe67bae57c8206803eef8"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "7ad6ba6ed7358da15f20a76edb4741fe62ea11ff", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec4080b23699d096561e2e6163f3f74f6f9e8b4d/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec4080b23699d096561e2e6163f3f74f6f9e8b4d/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=ec4080b23699d096561e2e6163f3f74f6f9e8b4d", "patch": "@@ -771,6 +771,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n \n     fn lower_trait_item(&mut self, i: &AssocItem) -> &'hir hir::TraitItem<'hir> {\n         let hir_id = self.lower_node_id(i.id);\n+        self.lower_attrs(hir_id, &i.attrs);\n         let trait_item_def_id = hir_id.expect_owner();\n \n         let (generics, kind, has_default) = match &i.kind {\n@@ -829,7 +830,6 @@ impl<'hir> LoweringContext<'_, 'hir> {\n             AssocItemKind::MacCall(..) => panic!(\"macro item shouldn't exist at this point\"),\n         };\n \n-        self.lower_attrs(hir_id, &i.attrs);\n         let item = hir::TraitItem {\n             owner_id: trait_item_def_id,\n             ident: self.lower_ident(i.ident),\n@@ -869,6 +869,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         let has_value = true;\n         let (defaultness, _) = self.lower_defaultness(i.kind.defaultness(), has_value);\n         let hir_id = self.lower_node_id(i.id);\n+        self.lower_attrs(hir_id, &i.attrs);\n \n         let (generics, kind) = match &i.kind {\n             AssocItemKind::Const(_, ty, expr) => {\n@@ -920,7 +921,6 @@ impl<'hir> LoweringContext<'_, 'hir> {\n             AssocItemKind::MacCall(..) => panic!(\"`TyMac` should have been expanded by now\"),\n         };\n \n-        self.lower_attrs(hir_id, &i.attrs);\n         let item = hir::ImplItem {\n             owner_id: hir_id.expect_owner(),\n             ident: self.lower_ident(i.ident),"}, {"sha": "5ebfeb3f36ac162f402dc3b780f6767c2911d35a", "filename": "src/test/ui/async-await/track-caller/panic-track-caller.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ec4080b23699d096561e2e6163f3f74f6f9e8b4d/src%2Ftest%2Fui%2Fasync-await%2Ftrack-caller%2Fpanic-track-caller.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec4080b23699d096561e2e6163f3f74f6f9e8b4d/src%2Ftest%2Fui%2Fasync-await%2Ftrack-caller%2Fpanic-track-caller.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Ftrack-caller%2Fpanic-track-caller.rs?ref=ec4080b23699d096561e2e6163f3f74f6f9e8b4d", "patch": "@@ -54,6 +54,19 @@ async fn foo_track_caller() {\n     bar_track_caller().await\n }\n \n+struct Foo;\n+\n+impl Foo {\n+    #[track_caller]\n+    async fn bar_assoc() {\n+        panic!();\n+    }\n+}\n+\n+async fn foo_assoc() {\n+    Foo::bar_assoc().await\n+}\n+\n fn panicked_at(f: impl FnOnce() + panic::UnwindSafe) -> u32 {\n     let loc = Arc::new(Mutex::new(None));\n \n@@ -73,4 +86,5 @@ fn panicked_at(f: impl FnOnce() + panic::UnwindSafe) -> u32 {\n fn main() {\n     assert_eq!(panicked_at(|| block_on(foo())), 41);\n     assert_eq!(panicked_at(|| block_on(foo_track_caller())), 54);\n+    assert_eq!(panicked_at(|| block_on(foo_assoc())), 67);\n }"}]}