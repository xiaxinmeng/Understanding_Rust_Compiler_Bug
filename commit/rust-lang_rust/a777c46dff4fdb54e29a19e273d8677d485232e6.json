{"sha": "a777c46dff4fdb54e29a19e273d8677d485232e6", "node_id": "C_kwDOAAsO6NoAKGE3NzdjNDZkZmY0ZmRiNTRlMjlhMTllMjczZDg2NzdkNDg1MjMyZTY", "commit": {"author": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2022-11-03T19:02:09Z"}, "committer": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2022-11-03T19:02:09Z"}, "message": "Use `derive(Subdiagnostic)` for `ChangeFieldsToBeOfUnitType`.", "tree": {"sha": "77f897f5a90aab53cea0fdd11fec1a9437b5e3d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77f897f5a90aab53cea0fdd11fec1a9437b5e3d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a777c46dff4fdb54e29a19e273d8677d485232e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a777c46dff4fdb54e29a19e273d8677d485232e6", "html_url": "https://github.com/rust-lang/rust/commit/a777c46dff4fdb54e29a19e273d8677d485232e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a777c46dff4fdb54e29a19e273d8677d485232e6/comments", "author": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "113e8dfb7293cc070214b42541781b2eeac25ae1", "url": "https://api.github.com/repos/rust-lang/rust/commits/113e8dfb7293cc070214b42541781b2eeac25ae1", "html_url": "https://github.com/rust-lang/rust/commit/113e8dfb7293cc070214b42541781b2eeac25ae1"}], "stats": {"total": 29, "additions": 4, "deletions": 25}, "files": [{"sha": "a7cb9f14e8247e60d5c0265bb6c711b2aa34b154", "filename": "compiler/rustc_error_messages/locales/en-US/passes.ftl", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a777c46dff4fdb54e29a19e273d8677d485232e6/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fpasses.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/a777c46dff4fdb54e29a19e273d8677d485232e6/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fpasses.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fpasses.ftl?ref=a777c46dff4fdb54e29a19e273d8677d485232e6", "patch": "@@ -685,8 +685,7 @@ passes_change_fields_to_be_of_unit_type =\n     consider changing the { $num ->\n       [one] field\n      *[other] fields\n-    } to be of unit type to suppress this warning\n-    while preserving the field numbering, or remove the { $num ->\n+    } to be of unit type to suppress this warning while preserving the field numbering, or remove the { $num ->\n       [one] field\n      *[other] fields\n     }"}, {"sha": "83a51bcd097a8960a9b8403439365c2337991c81", "filename": "compiler/rustc_passes/src/errors.rs", "status": "modified", "additions": 3, "deletions": 23, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a777c46dff4fdb54e29a19e273d8677d485232e6/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a777c46dff4fdb54e29a19e273d8677d485232e6/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs?ref=a777c46dff4fdb54e29a19e273d8677d485232e6", "patch": "@@ -12,8 +12,6 @@ use rustc_macros::{Diagnostic, LintDiagnostic, Subdiagnostic};\n use rustc_middle::ty::{MainDefinition, Ty};\n use rustc_span::{Span, Symbol, DUMMY_SP};\n \n-use rustc_errors::{pluralize, AddToDiagnostic, Diagnostic, SubdiagnosticMessage};\n-\n use crate::lang_items::Duplicate;\n \n #[derive(LintDiagnostic)]\n@@ -1502,28 +1500,10 @@ pub struct IgnoredDerivedImpls {\n     pub trait_list_len: usize,\n }\n \n+#[derive(Subdiagnostic)]\n+#[multipart_suggestion(passes_change_fields_to_be_of_unit_type, applicability = \"has-placeholders\")]\n pub struct ChangeFieldsToBeOfUnitType {\n     pub num: usize,\n+    #[suggestion_part(code = \"()\")]\n     pub spans: Vec<Span>,\n }\n-\n-// FIXME: Replace this impl with a derive.\n-impl AddToDiagnostic for ChangeFieldsToBeOfUnitType {\n-    fn add_to_diagnostic_with<F>(self, diag: &mut Diagnostic, _: F)\n-    where\n-        F: Fn(&mut Diagnostic, SubdiagnosticMessage) -> SubdiagnosticMessage,\n-    {\n-        diag.multipart_suggestion(\n-            &format!(\n-                \"consider changing the field{s} to be of unit type to \\\n-                          suppress this warning while preserving the field \\\n-                          numbering, or remove the field{s}\",\n-                s = pluralize!(self.num)\n-            ),\n-            self.spans.iter().map(|sp| (*sp, \"()\".to_string())).collect(),\n-            // \"HasPlaceholders\" because applying this fix by itself isn't\n-            // enough: All constructor calls have to be adjusted as well\n-            Applicability::HasPlaceholders,\n-        );\n-    }\n-}"}]}