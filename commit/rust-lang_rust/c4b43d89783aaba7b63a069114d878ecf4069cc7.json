{"sha": "c4b43d89783aaba7b63a069114d878ecf4069cc7", "node_id": "C_kwDOAAsO6NoAKGM0YjQzZDg5NzgzYWFiYTdiNjNhMDY5MTE0ZDg3OGVjZjQwNjljYzc", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-06-13T10:51:51Z"}, "committer": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-06-13T10:51:51Z"}, "message": "Add some more regression tests for #67945", "tree": {"sha": "36b0b144e93b985266e7309f98da8822ece5ea71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36b0b144e93b985266e7309f98da8822ece5ea71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4b43d89783aaba7b63a069114d878ecf4069cc7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEClCZYSKPPkQPouAvN5zu/dY+XdcFAmKnFscACgkQN5zu/dY+\nXderkg//QUouPc69zrH/iuhHkaJdsSgnqv2dLwAFBSp4W5XRQBIn1LqgCa1GdTxF\ngNQR9sxEtiKByuRoTx1Vwq4zKNot+MuDYtxmzZvQq7JAoBrrIYdrrsNoQYTvw2jw\nk9uvXQ1zwNPRqZ7cKBTuDc5uoBMOg5qmKePTZOO2FN97/xO8M/mt3mMw6sSpUSbP\nJhodQFW9k72L1eETEPuWVzw+WtwHb6LJwXOugklxLjnAdMmthUtEOwT4FOe1FjPo\n2xydqMWiqKZEVj+n4t+ekEjN3l4LF0McyEZeVXw17uLf0Ul9avnOkPqQeVI2yAEu\naMYPDRpp8FzdBbjtbmOz+Pvoqhy02oSGmF5x3VZl4HEdi3BOiEgw/cnSnZdOfuL+\nVRe5U/jZ2prcs8Fz5+bvCUp7xSXJVY8jhphlV7ptEA1BKLAXEH6yYwJKMoF+DbIJ\nejacvcTyG4wAwWEyzmw5kAe+OAAyuDND7BAq/qQFazqsvuRxBGM/IXAEg6SCozXJ\nXUPhv6nSOYpWQNHVyyC34rpJGXsGgEaMhXeUuGZY5DSdx9x5DUNaTwRkbwkc1Xom\nNQzHUDDCjO6UJe630mr+PR52cbpRfrjT9oPrS3mexKIPdeE3S82dfLQ/K5VfEwZA\nXs7Aevhr6T6GYNs1Ik2bTyToVqVOQfuy9f3UWbBstUOppGZOqtA=\n=LelC\n-----END PGP SIGNATURE-----", "payload": "tree 36b0b144e93b985266e7309f98da8822ece5ea71\nparent 083721a1a7365d3afe1521cd2661b2201aac0450\nauthor Yuki Okushi <jtitor@2k36.org> 1655117511 +0900\ncommitter Yuki Okushi <jtitor@2k36.org> 1655117511 +0900\n\nAdd some more regression tests for #67945\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4b43d89783aaba7b63a069114d878ecf4069cc7", "html_url": "https://github.com/rust-lang/rust/commit/c4b43d89783aaba7b63a069114d878ecf4069cc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4b43d89783aaba7b63a069114d878ecf4069cc7/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "083721a1a7365d3afe1521cd2661b2201aac0450", "url": "https://api.github.com/repos/rust-lang/rust/commits/083721a1a7365d3afe1521cd2661b2201aac0450", "html_url": "https://github.com/rust-lang/rust/commit/083721a1a7365d3afe1521cd2661b2201aac0450"}], "stats": {"total": 107, "additions": 107, "deletions": 0}, "files": [{"sha": "d3d9452d316eaac8730b36e6101a06be674e5ebe", "filename": "src/test/ui/const-generics/issues/issue-67945-3.full.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c4b43d89783aaba7b63a069114d878ecf4069cc7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-3.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c4b43d89783aaba7b63a069114d878ecf4069cc7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-3.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-3.full.stderr?ref=c4b43d89783aaba7b63a069114d878ecf4069cc7", "patch": "@@ -0,0 +1,16 @@\n+error: overly complex generic constant\n+  --> $DIR/issue-67945-3.rs:10:13\n+   |\n+LL |       A: [(); {\n+   |  _____________^\n+LL | |         let x: Option<S> = None;\n+LL | |\n+LL | |         0\n+LL | |     }],\n+   | |_____^ blocks are not supported in generic constant\n+   |\n+   = help: consider moving this anonymous constant into a `const` function\n+   = note: this operation may be supported in the future\n+\n+error: aborting due to previous error\n+"}, {"sha": "8e6b4b20409ce5931a1e778f982278186ef8a420", "filename": "src/test/ui/const-generics/issues/issue-67945-3.min.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c4b43d89783aaba7b63a069114d878ecf4069cc7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-3.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c4b43d89783aaba7b63a069114d878ecf4069cc7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-3.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-3.min.stderr?ref=c4b43d89783aaba7b63a069114d878ecf4069cc7", "patch": "@@ -0,0 +1,21 @@\n+error: generic parameters may not be used in const operations\n+  --> $DIR/issue-67945-3.rs:11:23\n+   |\n+LL |         let x: Option<S> = None;\n+   |                       ^ cannot perform const operation using `S`\n+   |\n+   = note: type parameters may not be used in const expressions\n+   = help: use `#![feature(generic_const_exprs)]` to allow generic const expressions\n+\n+error[E0392]: parameter `S` is never used\n+  --> $DIR/issue-67945-3.rs:9:12\n+   |\n+LL | struct Bug<S> {\n+   |            ^ unused parameter\n+   |\n+   = help: consider removing `S`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `S` to be a const parameter, use `const S: usize` instead\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0392`."}, {"sha": "fd8a393effe72051f2142ec0ede94544c1c97ce7", "filename": "src/test/ui/const-generics/issues/issue-67945-3.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c4b43d89783aaba7b63a069114d878ecf4069cc7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4b43d89783aaba7b63a069114d878ecf4069cc7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-3.rs?ref=c4b43d89783aaba7b63a069114d878ecf4069cc7", "patch": "@@ -0,0 +1,17 @@\n+// Regression test for\n+// https://github.com/rust-lang/rust/issues/67945#issuecomment-572617285\n+// Make sure we don't emit an E0277 error.\n+\n+// revisions: full min\n+#![cfg_attr(full, feature(generic_const_exprs))]\n+#![cfg_attr(full, allow(incomplete_features))]\n+\n+struct Bug<S> { //[min]~ ERROR: parameter `S` is never used\n+    A: [(); { //[full]~ ERROR: overly complex generic constant\n+        let x: Option<S> = None;\n+        //[min]~^ ERROR: generic parameters may not be used in const operations\n+        0\n+    }],\n+}\n+\n+fn main() {}"}, {"sha": "9604eb35d02b2abc1f68adf27a960755610f4a3d", "filename": "src/test/ui/const-generics/issues/issue-67945-4.full.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c4b43d89783aaba7b63a069114d878ecf4069cc7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-4.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c4b43d89783aaba7b63a069114d878ecf4069cc7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-4.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-4.full.stderr?ref=c4b43d89783aaba7b63a069114d878ecf4069cc7", "patch": "@@ -0,0 +1,16 @@\n+error: overly complex generic constant\n+  --> $DIR/issue-67945-4.rs:9:13\n+   |\n+LL |       A: [(); {\n+   |  _____________^\n+LL | |         let x: Option<Box<S>> = None;\n+LL | |\n+LL | |         0\n+LL | |     }],\n+   | |_____^ blocks are not supported in generic constant\n+   |\n+   = help: consider moving this anonymous constant into a `const` function\n+   = note: this operation may be supported in the future\n+\n+error: aborting due to previous error\n+"}, {"sha": "f9520872ddd27d8b9dbeef579acc1559608fb880", "filename": "src/test/ui/const-generics/issues/issue-67945-4.min.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c4b43d89783aaba7b63a069114d878ecf4069cc7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-4.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c4b43d89783aaba7b63a069114d878ecf4069cc7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-4.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-4.min.stderr?ref=c4b43d89783aaba7b63a069114d878ecf4069cc7", "patch": "@@ -0,0 +1,21 @@\n+error: generic parameters may not be used in const operations\n+  --> $DIR/issue-67945-4.rs:10:27\n+   |\n+LL |         let x: Option<Box<S>> = None;\n+   |                           ^ cannot perform const operation using `S`\n+   |\n+   = note: type parameters may not be used in const expressions\n+   = help: use `#![feature(generic_const_exprs)]` to allow generic const expressions\n+\n+error[E0392]: parameter `S` is never used\n+  --> $DIR/issue-67945-4.rs:8:12\n+   |\n+LL | struct Bug<S> {\n+   |            ^ unused parameter\n+   |\n+   = help: consider removing `S`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `S` to be a const parameter, use `const S: usize` instead\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0392`."}, {"sha": "9a27bf09f881460dab30deda158abd112a759c71", "filename": "src/test/ui/const-generics/issues/issue-67945-4.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c4b43d89783aaba7b63a069114d878ecf4069cc7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4b43d89783aaba7b63a069114d878ecf4069cc7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-67945-4.rs?ref=c4b43d89783aaba7b63a069114d878ecf4069cc7", "patch": "@@ -0,0 +1,16 @@\n+// Regression test for\n+// https://github.com/rust-lang/rust/issues/67945#issuecomment-572617285\n+\n+// revisions: full min\n+#![cfg_attr(full, feature(generic_const_exprs))]\n+#![cfg_attr(full, allow(incomplete_features))]\n+\n+struct Bug<S> { //[min]~ ERROR: parameter `S` is never used\n+    A: [(); { //[full]~ ERROR: overly complex generic constant\n+        let x: Option<Box<S>> = None;\n+        //[min]~^ ERROR: generic parameters may not be used in const operations\n+        0\n+    }],\n+}\n+\n+fn main() {}"}]}