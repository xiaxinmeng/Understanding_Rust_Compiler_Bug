{"sha": "5a91e0f7e36cb9495e41d9ccd91d815320069487", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhOTFlMGY3ZTM2Y2I5NDk1ZTQxZDljY2Q5MWQ4MTUzMjAwNjk0ODc=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-11-15T03:46:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-15T03:46:15Z"}, "message": "Merge pull request #2154 from topecongiro/issue-2151\n\nLook for a newline after match arm only when there is one", "tree": {"sha": "f2e0a95729e33c19e4085f8d64daa4ada004d26f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2e0a95729e33c19e4085f8d64daa4ada004d26f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a91e0f7e36cb9495e41d9ccd91d815320069487", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaC7iHCRBK7hj4Ov3rIwAAdHIIAFwILtUKZvJuN2E+Xyjtbj+j\nF9vti7iFHNynoA4+B0iuxwd1beHKAmlBU8dBJK4sA9+tGZiO9cYDU4xBIVnMxbjy\nO1yclqIY7n61JGSEZuE5X4A8leshNTcKzWDgZQPZqLTJvHPyHYv3RtML3Q0LvOkc\nj3d/R2i8+6IFysEcnFhsyUTcpyVVqwPUWwl5eicoYd23qa6XASIvvRrYKBELckqi\nRto3SsfvCxNVOzNw7hxevmXYq1PcVDlLtZbHJ114bzcWPEdrQKIlBVIjkSLXTBKL\nVljfVkHA2ZCza3BcBHsmdcvGUHgnY9wx1+uyRY7E9e6xMCDFp54ixqtbbWEX38o=\n=FJKX\n-----END PGP SIGNATURE-----\n", "payload": "tree f2e0a95729e33c19e4085f8d64daa4ada004d26f\nparent a90b76a731f1d43e745b24d4e8a9f2fae9f34658\nparent 1dc9b927af2718b4547ae193a02e6bb310516734\nauthor Nick Cameron <nrc@ncameron.org> 1510717575 +1300\ncommitter GitHub <noreply@github.com> 1510717575 +1300\n\nMerge pull request #2154 from topecongiro/issue-2151\n\nLook for a newline after match arm only when there is one "}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a91e0f7e36cb9495e41d9ccd91d815320069487", "html_url": "https://github.com/rust-lang/rust/commit/5a91e0f7e36cb9495e41d9ccd91d815320069487", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a91e0f7e36cb9495e41d9ccd91d815320069487/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a90b76a731f1d43e745b24d4e8a9f2fae9f34658", "url": "https://api.github.com/repos/rust-lang/rust/commits/a90b76a731f1d43e745b24d4e8a9f2fae9f34658", "html_url": "https://github.com/rust-lang/rust/commit/a90b76a731f1d43e745b24d4e8a9f2fae9f34658"}, {"sha": "1dc9b927af2718b4547ae193a02e6bb310516734", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc9b927af2718b4547ae193a02e6bb310516734", "html_url": "https://github.com/rust-lang/rust/commit/1dc9b927af2718b4547ae193a02e6bb310516734"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "a5d2334dcdab0b21df1c2f33b36d1ce8cd7d73bf", "filename": "src/lists.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5a91e0f7e36cb9495e41d9ccd91d815320069487/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a91e0f7e36cb9495e41d9ccd91d815320069487/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=5a91e0f7e36cb9495e41d9ccd91d815320069487", "patch": "@@ -602,7 +602,11 @@ where\n                         // Match arms may not have trailing comma. In any case, for match arms,\n                         // we will assume that the post comment belongs to the next arm if they\n                         // do not end with trailing comma.\n-                        1\n+                        if let Some(newline_index) = newline_index {\n+                            newline_index + 1\n+                        } else {\n+                            0\n+                        }\n                     }\n                 }\n                 None => post_snippet"}, {"sha": "23df0d3b6813bee0b96d5e69e6c759e9d46d6e1f", "filename": "tests/source/match.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5a91e0f7e36cb9495e41d9ccd91d815320069487/tests%2Fsource%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a91e0f7e36cb9495e41d9ccd91d815320069487/tests%2Fsource%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmatch.rs?ref=5a91e0f7e36cb9495e41d9ccd91d815320069487", "patch": "@@ -435,6 +435,15 @@ impl<'tcx> Const<'tcx> {\n     }\n }\n \n+// #2151\n+fn issue_2151() {\n+    match either {\n+        x => {\n+\n+        }y => ()\n+    }\n+}\n+\n // #2152\n fn issue_2152() {\n     match m {"}, {"sha": "3e04f4ca4be2558d85e26822711468d99369488f", "filename": "tests/target/match.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5a91e0f7e36cb9495e41d9ccd91d815320069487/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a91e0f7e36cb9495e41d9ccd91d815320069487/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=5a91e0f7e36cb9495e41d9ccd91d815320069487", "patch": "@@ -128,15 +128,13 @@ fn issue339() {\n         h => {\n             // comment above block\n         }\n-        i => {}\n-        // comment below block\n+        i => {} // comment below block\n         j => {\n             // comment inside block\n         }\n         j2 => {\n             // comments inside...\n-        }\n-        // ... and after\n+        } // ... and after\n         // TODO uncomment when vertical whitespace is handled better\n         // k => {\n         //\n@@ -476,6 +474,14 @@ impl<'tcx> Const<'tcx> {\n     }\n }\n \n+// #2151\n+fn issue_2151() {\n+    match either {\n+        x => {}\n+        y => (),\n+    }\n+}\n+\n // #2152\n fn issue_2152() {\n     match m {"}]}