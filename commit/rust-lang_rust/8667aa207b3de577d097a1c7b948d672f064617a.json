{"sha": "8667aa207b3de577d097a1c7b948d672f064617a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NjdhYTIwN2IzZGU1NzdkMDk3YTFjN2I5NDhkNjcyZjA2NDYxN2E=", "commit": {"author": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2015-10-10T18:50:26Z"}, "committer": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2015-10-11T00:46:23Z"}, "message": "Clarify the behavior of `std::env::home_dir` and `std::env::temp_dir`\n\nThis concern was raised by #28940.", "tree": {"sha": "0068550e2c8248093c41621c38b499714558ffb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0068550e2c8248093c41621c38b499714558ffb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8667aa207b3de577d097a1c7b948d672f064617a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8667aa207b3de577d097a1c7b948d672f064617a", "html_url": "https://github.com/rust-lang/rust/commit/8667aa207b3de577d097a1c7b948d672f064617a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8667aa207b3de577d097a1c7b948d672f064617a/comments", "author": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d3e79ad3728f6723f8e49908696e66a68d7db95", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d3e79ad3728f6723f8e49908696e66a68d7db95", "html_url": "https://github.com/rust-lang/rust/commit/9d3e79ad3728f6723f8e49908696e66a68d7db95"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "518c67bbe7f5858ff36d26fe3c7d409c5b8ee452", "filename": "src/libstd/env.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8667aa207b3de577d097a1c7b948d672f064617a/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8667aa207b3de577d097a1c7b948d672f064617a/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=8667aa207b3de577d097a1c7b948d672f064617a", "patch": "@@ -416,7 +416,10 @@ impl Error for JoinPathsError {\n /// Returns the value of the 'HOME' environment variable if it is\n /// set and not equal to the empty string. Otherwise, returns the value of the\n /// 'USERPROFILE' environment variable if it is set and not equal to the empty\n-/// string.\n+/// string. If both do not exist, [`GetUserProfileDirectory`][msdn] is used to\n+/// return the appropriate path.\n+///\n+/// [msdn]: https://msdn.microsoft.com/en-us/library/windows/desktop/bb762280(v=vs.85).aspx\n ///\n /// # Examples\n ///\n@@ -442,7 +445,11 @@ pub fn home_dir() -> Option<PathBuf> {\n ///\n /// On Windows, returns the value of, in order, the 'TMP', 'TEMP',\n /// 'USERPROFILE' environment variable  if any are set and not the empty\n-/// string. Otherwise, tmpdir returns the path to the Windows directory.\n+/// string. Otherwise, tmpdir returns the path to the Windows directory. This\n+/// behavior is identical to that of [GetTempPath][msdn], which this function\n+/// uses internally.\n+///\n+/// [msdn]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa364992(v=vs.85).aspx\n ///\n /// ```\n /// use std::env;"}]}