{"sha": "0cd9b06125c5a4ffce659bc92328946be94ccc2b", "node_id": "C_kwDOAAsO6NoAKDBjZDliMDYxMjVjNWE0ZmZjZTY1OWJjOTIzMjg5NDZiZTk0Y2NjMmI", "commit": {"author": {"name": "Niki4tap", "email": "rombiklol2@gmail.com", "date": "2022-12-22T21:56:50Z"}, "committer": {"name": "Niki4tap", "email": "rombiklol2@gmail.com", "date": "2022-12-22T21:56:50Z"}, "message": "Small code style adjustments", "tree": {"sha": "09ef5e16ff0b7e52472f3a864731fa2e02fa69b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09ef5e16ff0b7e52472f3a864731fa2e02fa69b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cd9b06125c5a4ffce659bc92328946be94ccc2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cd9b06125c5a4ffce659bc92328946be94ccc2b", "html_url": "https://github.com/rust-lang/rust/commit/0cd9b06125c5a4ffce659bc92328946be94ccc2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cd9b06125c5a4ffce659bc92328946be94ccc2b/comments", "author": {"login": "Niki4tap", "id": 66798058, "node_id": "MDQ6VXNlcjY2Nzk4MDU4", "avatar_url": "https://avatars.githubusercontent.com/u/66798058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Niki4tap", "html_url": "https://github.com/Niki4tap", "followers_url": "https://api.github.com/users/Niki4tap/followers", "following_url": "https://api.github.com/users/Niki4tap/following{/other_user}", "gists_url": "https://api.github.com/users/Niki4tap/gists{/gist_id}", "starred_url": "https://api.github.com/users/Niki4tap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Niki4tap/subscriptions", "organizations_url": "https://api.github.com/users/Niki4tap/orgs", "repos_url": "https://api.github.com/users/Niki4tap/repos", "events_url": "https://api.github.com/users/Niki4tap/events{/privacy}", "received_events_url": "https://api.github.com/users/Niki4tap/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Niki4tap", "id": 66798058, "node_id": "MDQ6VXNlcjY2Nzk4MDU4", "avatar_url": "https://avatars.githubusercontent.com/u/66798058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Niki4tap", "html_url": "https://github.com/Niki4tap", "followers_url": "https://api.github.com/users/Niki4tap/followers", "following_url": "https://api.github.com/users/Niki4tap/following{/other_user}", "gists_url": "https://api.github.com/users/Niki4tap/gists{/gist_id}", "starred_url": "https://api.github.com/users/Niki4tap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Niki4tap/subscriptions", "organizations_url": "https://api.github.com/users/Niki4tap/orgs", "repos_url": "https://api.github.com/users/Niki4tap/repos", "events_url": "https://api.github.com/users/Niki4tap/events{/privacy}", "received_events_url": "https://api.github.com/users/Niki4tap/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fe3727c391ec5bf18019f304d87132a3e3c5211", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fe3727c391ec5bf18019f304d87132a3e3c5211", "html_url": "https://github.com/rust-lang/rust/commit/4fe3727c391ec5bf18019f304d87132a3e3c5211"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "0da50450512c2f5827b3d96ff4c46e0037d6dde9", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/0cd9b06125c5a4ffce659bc92328946be94ccc2b/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cd9b06125c5a4ffce659bc92328946be94ccc2b/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=0cd9b06125c5a4ffce659bc92328946be94ccc2b", "patch": "@@ -210,22 +210,25 @@ fn check_final_expr<'tcx>(\n             // if desugar of `do yeet`, don't lint\n             if let Some(inner_expr) = inner\n                 && let ExprKind::Call(path_expr, _) = inner_expr.kind\n-                && let ExprKind::Path(QPath::LangItem(LangItem::TryTraitFromYeet, _, _)) = path_expr.kind {\n-                    return;\n+                && let ExprKind::Path(QPath::LangItem(LangItem::TryTraitFromYeet, _, _)) = path_expr.kind\n+            {\n+                return;\n             }\n-            if cx.tcx.hir().attrs(expr.hir_id).is_empty() {\n-                let borrows = inner.map_or(false, |inner| last_statement_borrows(cx, inner));\n-                if !borrows {\n-                    // check if expr return nothing\n-                    let ret_span = if inner.is_none() && replacement == RetReplacement::Empty {\n-                        extend_span_to_previous_non_ws(cx, peeled_drop_expr.span)\n-                    } else {\n-                        peeled_drop_expr.span\n-                    };\n-\n-                    emit_return_lint(cx, ret_span, semi_spans, inner.as_ref().map(|i| i.span), replacement);\n-                }\n+            if !cx.tcx.hir().attrs(expr.hir_id).is_empty() {\n+                return;\n+            }\n+            let borrows = inner.map_or(false, |inner| last_statement_borrows(cx, inner));\n+            if borrows {\n+                return;\n             }\n+            // check if expr return nothing\n+            let ret_span = if inner.is_none() && replacement == RetReplacement::Empty {\n+                extend_span_to_previous_non_ws(cx, peeled_drop_expr.span)\n+            } else {\n+                peeled_drop_expr.span\n+            };\n+\n+            emit_return_lint(cx, ret_span, semi_spans, inner.as_ref().map(|i| i.span), replacement);\n         },\n         ExprKind::If(_, then, else_clause_opt) => {\n             check_block_return(cx, &then.kind, semi_spans.clone());"}]}