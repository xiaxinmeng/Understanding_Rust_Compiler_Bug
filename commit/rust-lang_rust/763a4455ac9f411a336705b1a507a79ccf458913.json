{"sha": "763a4455ac9f411a336705b1a507a79ccf458913", "node_id": "C_kwDOAAsO6NoAKDc2M2E0NDU1YWM5ZjQxMWEzMzY3MDViMWE1MDdhNzljY2Y0NTg5MTM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-21T03:40:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-21T03:40:28Z"}, "message": "Auto merge of #1918 - RalfJung:simd_basics, r=RalfJung\n\nportable SIMD: basic binops\n\nFirst steps towards https://github.com/rust-lang/miri/issues/1912. Requires https://github.com/rust-lang/rust/pull/90999.", "tree": {"sha": "1f21c2136821609d001dc149ccdc0acf818dff6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f21c2136821609d001dc149ccdc0acf818dff6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/763a4455ac9f411a336705b1a507a79ccf458913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/763a4455ac9f411a336705b1a507a79ccf458913", "html_url": "https://github.com/rust-lang/rust/commit/763a4455ac9f411a336705b1a507a79ccf458913", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/763a4455ac9f411a336705b1a507a79ccf458913/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c700f544ca3ae815b4bb2edb65f85208f78bbb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c700f544ca3ae815b4bb2edb65f85208f78bbb6", "html_url": "https://github.com/rust-lang/rust/commit/8c700f544ca3ae815b4bb2edb65f85208f78bbb6"}, {"sha": "84027dcd228848e29ce3fa552caa615a9b7d5de5", "url": "https://api.github.com/repos/rust-lang/rust/commits/84027dcd228848e29ce3fa552caa615a9b7d5de5", "html_url": "https://github.com/rust-lang/rust/commit/84027dcd228848e29ce3fa552caa615a9b7d5de5"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "e7e504a38a7c74f4c6723f80614b3b6dea3df04c", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/763a4455ac9f411a336705b1a507a79ccf458913/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/763a4455ac9f411a336705b1a507a79ccf458913/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=763a4455ac9f411a336705b1a507a79ccf458913", "patch": "@@ -1 +1 @@\n-c9c4b5d7276297679387189d96a952f2b760e7ad\n+5bc98076f37dd8c1476de4bbe0515c55a65332b7"}, {"sha": "d684b41ed81d916b21b58c998369e0d5cf98137d", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/763a4455ac9f411a336705b1a507a79ccf458913/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/763a4455ac9f411a336705b1a507a79ccf458913/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=763a4455ac9f411a336705b1a507a79ccf458913", "patch": "@@ -305,6 +305,32 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(res, dest)?;\n             }\n \n+            // SIMD operations\n+            \"simd_add\" | \"simd_sub\" | \"simd_mul\" | \"simd_div\" => {\n+                let &[ref left, ref right] = check_arg_count(args)?;\n+                let (left, left_len) = this.operand_to_simd(left)?;\n+                let (right, right_len) = this.operand_to_simd(right)?;\n+                let (dest, dest_len) = this.place_to_simd(dest)?;\n+\n+                assert_eq!(dest_len, left_len);\n+                assert_eq!(dest_len, right_len);\n+\n+                let op = match intrinsic_name {\n+                    \"simd_add\" => mir::BinOp::Add,\n+                    \"simd_sub\" => mir::BinOp::Sub,\n+                    \"simd_mul\" => mir::BinOp::Mul,\n+                    \"simd_div\" => mir::BinOp::Div,\n+                    _ => unreachable!(),\n+                };\n+\n+                for i in 0..dest_len {\n+                    let left = this.read_immediate(&this.mplace_index(&left, i)?.into())?;\n+                    let right = this.read_immediate(&this.mplace_index(&right, i)?.into())?;\n+                    let dest = this.mplace_index(&dest, i)?.into();\n+                    this.binop_ignore_overflow(op, &left, &right, &dest)?;\n+                }\n+            }\n+\n             // Atomic operations\n             \"atomic_load\" => this.atomic_load(args, dest, AtomicReadOp::SeqCst)?,\n             \"atomic_load_relaxed\" => this.atomic_load(args, dest, AtomicReadOp::Relaxed)?,"}, {"sha": "42a6befd868be73f4c284019abff601a79195936", "filename": "tests/run-pass/portable-simd.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/763a4455ac9f411a336705b1a507a79ccf458913/tests%2Frun-pass%2Fportable-simd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/763a4455ac9f411a336705b1a507a79ccf458913/tests%2Frun-pass%2Fportable-simd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fportable-simd.rs?ref=763a4455ac9f411a336705b1a507a79ccf458913", "patch": "@@ -0,0 +1,27 @@\n+#![feature(portable_simd)]\n+use std::simd::*;\n+\n+fn simd_ops_f32() {\n+    let a = f32x4::splat(10.0);\n+    let b = f32x4::from_array([1.0, 2.0, 3.0, 4.0]);\n+    assert_eq!(a + b, f32x4::from_array([11.0, 12.0, 13.0, 14.0]));\n+    assert_eq!(a - b, f32x4::from_array([9.0, 8.0, 7.0, 6.0]));\n+    assert_eq!(a * b, f32x4::from_array([10.0, 20.0, 30.0, 40.0]));\n+    assert_eq!(b / a, f32x4::from_array([0.1, 0.2, 0.3, 0.4]));\n+    assert_eq!(a / 2.0, f32x4::splat(5.0));\n+}\n+\n+fn simd_ops_i32() {\n+    let a = i32x4::splat(10);\n+    let b = i32x4::from_array([1, 2, 3, 4]);\n+    assert_eq!(a + b, i32x4::from_array([11, 12, 13, 14]));\n+    assert_eq!(a - b, i32x4::from_array([9, 8, 7, 6]));\n+    assert_eq!(a * b, i32x4::from_array([10, 20, 30, 40]));\n+    assert_eq!(a / b, i32x4::from_array([10, 5, 3, 2]));\n+    assert_eq!(a / 2, i32x4::splat(5));\n+}\n+\n+fn main() {\n+    simd_ops_f32();\n+    simd_ops_i32();\n+}"}]}