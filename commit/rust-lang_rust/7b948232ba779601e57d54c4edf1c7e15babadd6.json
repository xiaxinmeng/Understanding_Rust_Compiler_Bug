{"sha": "7b948232ba779601e57d54c4edf1c7e15babadd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiOTQ4MjMyYmE3Nzk2MDFlNTdkNTRjNGVkZjFjN2UxNWJhYmFkZDY=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-03-07T06:21:41Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-03-07T06:26:53Z"}, "message": "Enable rustfix on `unused_unit` tests", "tree": {"sha": "3af704a45b24efc5e08fc373923ef152b5ed35a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3af704a45b24efc5e08fc373923ef152b5ed35a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b948232ba779601e57d54c4edf1c7e15babadd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b948232ba779601e57d54c4edf1c7e15babadd6", "html_url": "https://github.com/rust-lang/rust/commit/7b948232ba779601e57d54c4edf1c7e15babadd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b948232ba779601e57d54c4edf1c7e15babadd6/comments", "author": null, "committer": null, "parents": [{"sha": "fbcf7eefb91b687e927a273e42380623b750d31a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbcf7eefb91b687e927a273e42380623b750d31a", "html_url": "https://github.com/rust-lang/rust/commit/fbcf7eefb91b687e927a273e42380623b750d31a"}], "stats": {"total": 69, "additions": 58, "deletions": 11}, "files": [{"sha": "641245896839daafc5224f8ecb224c69acb72463", "filename": "tests/ui/unused_unit.fixed", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/7b948232ba779601e57d54c4edf1c7e15babadd6/tests%2Fui%2Funused_unit.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7b948232ba779601e57d54c4edf1c7e15babadd6/tests%2Fui%2Funused_unit.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.fixed?ref=7b948232ba779601e57d54c4edf1c7e15babadd6", "patch": "@@ -0,0 +1,44 @@\n+// run-rustfix\n+\n+// The output for humans should just highlight the whole span without showing\n+// the suggested replacement, but we also want to test that suggested\n+// replacement only removes one set of parentheses, rather than na\u00efvely\n+// stripping away any starting or ending parenthesis characters\u2014hence this\n+// test of the JSON error format.\n+\n+#![feature(custom_inner_attributes)]\n+#![rustfmt::skip]\n+\n+#![deny(clippy::unused_unit)]\n+\n+struct Unitter;\n+impl Unitter {\n+    // try to disorient the lint with multiple unit returns and newlines\n+    #[allow(clippy::no_effect)]\n+    pub fn get_unit<F: Fn() -> (), G>(&self, f: F, _g: G) \n+    where G: Fn() -> () {\n+        let _y: &Fn() -> () = &f;\n+        (); // this should not lint, as it's not in return type position\n+    }\n+}\n+\n+impl Into<()> for Unitter {\n+    #[rustfmt::skip]\n+    fn into(self)  {\n+        \n+    }\n+}\n+\n+fn return_unit()  {  }\n+\n+#[allow(clippy::needless_return)]\n+#[allow(clippy::never_loop)]\n+fn main() {\n+    let u = Unitter;\n+    assert_eq!(u.get_unit(|| {}, return_unit), u.into());\n+    return_unit();\n+    loop {\n+        break;\n+    }\n+    return;\n+}"}, {"sha": "8e31385b70c9318f92c5dc5990704c617dede45e", "filename": "tests/ui/unused_unit.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7b948232ba779601e57d54c4edf1c7e15babadd6/tests%2Fui%2Funused_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b948232ba779601e57d54c4edf1c7e15babadd6/tests%2Fui%2Funused_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.rs?ref=7b948232ba779601e57d54c4edf1c7e15babadd6", "patch": "@@ -1,19 +1,20 @@\n-// compile-pass\n+// run-rustfix\n \n // The output for humans should just highlight the whole span without showing\n // the suggested replacement, but we also want to test that suggested\n // replacement only removes one set of parentheses, rather than na\u00efvely\n // stripping away any starting or ending parenthesis characters\u2014hence this\n // test of the JSON error format.\n \n-#![deny(clippy::unused_unit)]\n-#![allow(clippy::needless_return)]\n #![feature(custom_inner_attributes)]\n #![rustfmt::skip]\n \n+#![deny(clippy::unused_unit)]\n+\n struct Unitter;\n impl Unitter {\n     // try to disorient the lint with multiple unit returns and newlines\n+    #[allow(clippy::no_effect)]\n     pub fn get_unit<F: Fn() -> (), G>(&self, f: F, _g: G) ->\n         ()\n     where G: Fn() -> () {\n@@ -31,6 +32,8 @@ impl Into<()> for Unitter {\n \n fn return_unit() -> () { () }\n \n+#[allow(clippy::needless_return)]\n+#[allow(clippy::never_loop)]\n fn main() {\n     let u = Unitter;\n     assert_eq!(u.get_unit(|| {}, return_unit), u.into());"}, {"sha": "c33a220b98c0867cb6ecf20bc169d0112dbd3e4d", "filename": "tests/ui/unused_unit.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7b948232ba779601e57d54c4edf1c7e15babadd6/tests%2Fui%2Funused_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7b948232ba779601e57d54c4edf1c7e15babadd6/tests%2Fui%2Funused_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.stderr?ref=7b948232ba779601e57d54c4edf1c7e15babadd6", "patch": "@@ -1,49 +1,49 @@\n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:17:59\n+  --> $DIR/unused_unit.rs:18:59\n    |\n LL |       pub fn get_unit<F: Fn() -> (), G>(&self, f: F, _g: G) ->\n    |  ___________________________________________________________^\n LL | |         ()\n    | |__________^ help: remove the `-> ()`\n    |\n note: lint level defined here\n-  --> $DIR/unused_unit.rs:9:9\n+  --> $DIR/unused_unit.rs:12:9\n    |\n LL | #![deny(clippy::unused_unit)]\n    |         ^^^^^^^^^^^^^^^^^^^\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:27:19\n+  --> $DIR/unused_unit.rs:28:19\n    |\n LL |     fn into(self) -> () {\n    |                   ^^^^^ help: remove the `-> ()`\n \n error: unneeded unit expression\n-  --> $DIR/unused_unit.rs:28:9\n+  --> $DIR/unused_unit.rs:29:9\n    |\n LL |         ()\n    |         ^^ help: remove the final `()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:32:18\n+  --> $DIR/unused_unit.rs:33:18\n    |\n LL | fn return_unit() -> () { () }\n    |                  ^^^^^ help: remove the `-> ()`\n \n error: unneeded unit expression\n-  --> $DIR/unused_unit.rs:32:26\n+  --> $DIR/unused_unit.rs:33:26\n    |\n LL | fn return_unit() -> () { () }\n    |                          ^^ help: remove the final `()`\n \n error: unneeded `()`\n-  --> $DIR/unused_unit.rs:39:14\n+  --> $DIR/unused_unit.rs:42:14\n    |\n LL |         break();\n    |              ^^ help: remove the `()`\n \n error: unneeded `()`\n-  --> $DIR/unused_unit.rs:41:11\n+  --> $DIR/unused_unit.rs:44:11\n    |\n LL |     return();\n    |           ^^ help: remove the `()`"}]}