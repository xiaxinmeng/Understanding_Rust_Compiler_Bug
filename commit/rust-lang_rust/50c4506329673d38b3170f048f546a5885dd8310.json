{"sha": "50c4506329673d38b3170f048f546a5885dd8310", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYzQ1MDYzMjk2NzNkMzhiMzE3MGYwNDhmNTQ2YTU4ODVkZDgzMTA=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2018-05-14T11:58:28Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2018-05-14T11:58:28Z"}, "message": "Switch Vec from doubling size on growth to using RawVec's reserve\n\nOn growth, Vec does not require to exactly double its size for correctness,\nlike, for example, VecDeque does.\n\nUsing reserve instead better expresses this intent. It also allows to reuse\nExcess capacity on growth and for better growth-policies to be provided by\nRawVec.", "tree": {"sha": "7c62848363047e2e1cac7cb78e183cab79297e02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c62848363047e2e1cac7cb78e183cab79297e02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50c4506329673d38b3170f048f546a5885dd8310", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50c4506329673d38b3170f048f546a5885dd8310", "html_url": "https://github.com/rust-lang/rust/commit/50c4506329673d38b3170f048f546a5885dd8310", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50c4506329673d38b3170f048f546a5885dd8310/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f39dbae8cdc4418d3f79c719bd91d8b4f09c86b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f39dbae8cdc4418d3f79c719bd91d8b4f09c86b", "html_url": "https://github.com/rust-lang/rust/commit/8f39dbae8cdc4418d3f79c719bd91d8b4f09c86b"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ffaff20bcc9f265c26da16efe2f935332ac0549a", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50c4506329673d38b3170f048f546a5885dd8310/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c4506329673d38b3170f048f546a5885dd8310/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=50c4506329673d38b3170f048f546a5885dd8310", "patch": "@@ -840,7 +840,7 @@ impl<T> Vec<T> {\n \n         // space for the new element\n         if len == self.buf.cap() {\n-            self.buf.double();\n+            self.reserve(1);\n         }\n \n         unsafe {\n@@ -1060,7 +1060,7 @@ impl<T> Vec<T> {\n         // This will panic or abort if we would allocate > isize::MAX bytes\n         // or if the length increment would overflow for zero-sized types.\n         if self.len == self.buf.cap() {\n-            self.buf.double();\n+            self.reserve(1);\n         }\n         unsafe {\n             let end = self.as_mut_ptr().offset(self.len as isize);"}]}