{"sha": "909ec370286b193f67e738e7b9d6437cf32c014c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwOWVjMzcwMjg2YjE5M2Y2N2U3MzhlN2I5ZDY0MzdjZjMyYzAxNGM=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-03T21:22:14Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-05T17:59:01Z"}, "message": "Simpler code path for subtracting from FixedLenSlice", "tree": {"sha": "630cb47f4cb6138e511007aa990a21725927bbef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/630cb47f4cb6138e511007aa990a21725927bbef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/909ec370286b193f67e738e7b9d6437cf32c014c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/909ec370286b193f67e738e7b9d6437cf32c014c", "html_url": "https://github.com/rust-lang/rust/commit/909ec370286b193f67e738e7b9d6437cf32c014c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/909ec370286b193f67e738e7b9d6437cf32c014c/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e092a170528c964dddb0ed9764e8593d9ac8b370", "url": "https://api.github.com/repos/rust-lang/rust/commits/e092a170528c964dddb0ed9764e8593d9ac8b370", "html_url": "https://github.com/rust-lang/rust/commit/e092a170528c964dddb0ed9764e8593d9ac8b370"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "31984daa5df63ee90cf6ad99819cfcc57e7e0768", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/909ec370286b193f67e738e7b9d6437cf32c014c/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/909ec370286b193f67e738e7b9d6437cf32c014c/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=909ec370286b193f67e738e7b9d6437cf32c014c", "patch": "@@ -672,7 +672,15 @@ impl<'tcx> Constructor<'tcx> {\n                     vec![self.clone()]\n                 }\n             }\n-            FixedLenSlice(_) | VarLenSlice(_) => {\n+            FixedLenSlice(self_len) => {\n+                let overlaps = |c: &Constructor<'_>| match c {\n+                    FixedLenSlice(other_len) => other_len == self_len,\n+                    VarLenSlice(other_len) => other_len <= self_len,\n+                    _ => false,\n+                };\n+                if other_ctors.iter().any(overlaps) { vec![] } else { vec![self.clone()] }\n+            }\n+            VarLenSlice(_) => {\n                 let mut remaining_ctors = if let VarLenSlice(len) = self {\n                     (*len..pcx.max_slice_length + 1).map(FixedLenSlice).collect()\n                 } else {"}]}