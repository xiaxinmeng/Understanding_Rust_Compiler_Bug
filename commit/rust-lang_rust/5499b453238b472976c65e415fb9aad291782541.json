{"sha": "5499b453238b472976c65e415fb9aad291782541", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0OTliNDUzMjM4YjQ3Mjk3NmM2NWU0MTVmYjlhYWQyOTE3ODI1NDE=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2013-12-12T14:01:47Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2013-12-12T14:01:47Z"}, "message": "Remove fk_anon", "tree": {"sha": "ec17a32861137da406ac0953279551dc683253e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec17a32861137da406ac0953279551dc683253e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5499b453238b472976c65e415fb9aad291782541", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5499b453238b472976c65e415fb9aad291782541", "html_url": "https://github.com/rust-lang/rust/commit/5499b453238b472976c65e415fb9aad291782541", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5499b453238b472976c65e415fb9aad291782541/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b12dca7f97a51c6cbb4f47ea6e095d841a97c1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b12dca7f97a51c6cbb4f47ea6e095d841a97c1a", "html_url": "https://github.com/rust-lang/rust/commit/1b12dca7f97a51c6cbb4f47ea6e095d841a97c1a"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "6d4450ec2e00bac0aee1f487d4972ad65049c7dd", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5499b453238b472976c65e415fb9aad291782541/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5499b453238b472976c65e415fb9aad291782541/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=5499b453238b472976c65e415fb9aad291782541", "patch": "@@ -699,7 +699,6 @@ fn check_loans_in_fn<'a>(this: &mut CheckLoanCtxt<'a>,\n             return;\n         }\n \n-        visit::fk_anon(..) |\n         visit::fk_fn_block(..) => {\n             check_captured_variables(this, id, sp);\n         }"}, {"sha": "c07a7767c24a04c559c57d98fd10f503ef10a52a", "filename": "src/librustc/middle/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5499b453238b472976c65e415fb9aad291782541/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5499b453238b472976c65e415fb9aad291782541/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=5499b453238b472976c65e415fb9aad291782541", "patch": "@@ -140,7 +140,7 @@ fn gather_loans_in_fn(this: &mut GatherLoanCtxt,\n         }\n \n         // Visit closures as part of the containing item.\n-        &visit::fk_anon(..) | &visit::fk_fn_block(..) => {\n+        &visit::fk_fn_block(..) => {\n             this.push_repeating_id(body.id);\n             visit::walk_fn(this, fk, decl, body, sp, id, ());\n             this.pop_repeating_id(body.id);"}, {"sha": "bbe2efa3c55613a08737e13ed10ce512c88997a2", "filename": "src/librustc/middle/borrowck/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5499b453238b472976c65e415fb9aad291782541/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5499b453238b472976c65e415fb9aad291782541/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs?ref=5499b453238b472976c65e415fb9aad291782541", "patch": "@@ -127,7 +127,6 @@ fn borrowck_fn(this: &mut BorrowckCtxt,\n                sp: Span,\n                id: ast::NodeId) {\n     match fk {\n-        &visit::fk_anon(..) |\n         &visit::fk_fn_block(..) => {\n             // Closures are checked as part of their containing fn item.\n         }"}, {"sha": "ca9acf61aa8d57c1ecea9f268c51484d80b5f55f", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5499b453238b472976c65e415fb9aad291782541/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5499b453238b472976c65e415fb9aad291782541/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=5499b453238b472976c65e415fb9aad291782541", "patch": "@@ -401,7 +401,7 @@ fn visit_fn(v: &mut LivenessVisitor,\n                 sty_static => {}\n             }\n         }\n-        visit::fk_item_fn(..) | visit::fk_anon(..) | visit::fk_fn_block(..) => {}\n+        visit::fk_item_fn(..) | visit::fk_fn_block(..) => {}\n     }\n \n     // gather up the various local variables, significant expressions,"}, {"sha": "32d86eb96296068dc6a12ea7856cdb03cee38392", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5499b453238b472976c65e415fb9aad291782541/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5499b453238b472976c65e415fb9aad291782541/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=5499b453238b472976c65e415fb9aad291782541", "patch": "@@ -456,7 +456,6 @@ fn resolve_fn(visitor: &mut RegionResolutionVisitor,\n         visit::fk_method(..) => {\n             Context {parent: None, var_parent: None, ..cx}\n         }\n-        visit::fk_anon(..) |\n         visit::fk_fn_block(..) => {\n             cx\n         }"}, {"sha": "74f7b37265a725ec3b5033e38a9bd4269ce0282a", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5499b453238b472976c65e415fb9aad291782541/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5499b453238b472976c65e415fb9aad291782541/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=5499b453238b472976c65e415fb9aad291782541", "patch": "@@ -97,7 +97,7 @@ impl<'a> Visitor<&'a ScopeChain<'a>> for LifetimeContext {\n                 visit::walk_fn(self, fk, fd, b, s, n, &scope1);\n                 debug!(\"popping fn scope id={} due to item/method\", n);\n             }\n-            visit::fk_anon(..) | visit::fk_fn_block(..) => {\n+            visit::fk_fn_block(..) => {\n                 visit::walk_fn(self, fk, fd, b, s, n, scope);\n             }\n         }"}, {"sha": "8744827868782a91b816f9f66b9aaa8090710b2f", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5499b453238b472976c65e415fb9aad291782541/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5499b453238b472976c65e415fb9aad291782541/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=5499b453238b472976c65e415fb9aad291782541", "patch": "@@ -542,7 +542,7 @@ impl<'a, O: IdVisitingOperation> Visitor<()> for IdVisitor<'a, O> {\n                 self.operation.visit_id(method.self_id);\n                 self.visit_generics_helper(generics)\n             }\n-            visit::fk_anon(_) | visit::fk_fn_block => {}\n+            visit::fk_fn_block => {}\n         }\n \n         for argument in function_declaration.inputs.iter() {"}, {"sha": "5d36109e4543fd08f92ea384096f38c1b8d1593a", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5499b453238b472976c65e415fb9aad291782541/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5499b453238b472976c65e415fb9aad291782541/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=5499b453238b472976c65e415fb9aad291782541", "patch": "@@ -35,10 +35,8 @@ pub enum fn_kind<'a> {\n     // fn foo(&self)\n     fk_method(Ident, &'a Generics, &'a method),\n \n-    // @fn(x, y) { ... }\n-    fk_anon(ast::Sigil),\n-\n     // |x, y| ...\n+    // proc(x, y) ...\n     fk_fn_block,\n }\n \n@@ -47,7 +45,7 @@ pub fn name_of_fn(fk: &fn_kind) -> Ident {\n       fk_item_fn(name, _, _, _) | fk_method(name, _, _) => {\n           name\n       }\n-      fk_anon(..) | fk_fn_block(..) => parse::token::special_idents::anon,\n+      fk_fn_block(..) => parse::token::special_idents::anon,\n     }\n }\n \n@@ -57,7 +55,7 @@ pub fn generics_of_fn(fk: &fn_kind) -> Generics {\n         fk_method(_, generics, _) => {\n             (*generics).clone()\n         }\n-        fk_anon(..) | fk_fn_block(..) => {\n+        fk_fn_block(..) => {\n             Generics {\n                 lifetimes: opt_vec::Empty,\n                 ty_params: opt_vec::Empty,\n@@ -507,7 +505,7 @@ pub fn walk_fn<E:Clone, V:Visitor<E>>(visitor: &mut V,\n \n             visitor.visit_explicit_self(&method.explicit_self, env.clone());\n         }\n-        fk_anon(..) | fk_fn_block(..) => {\n+        fk_fn_block(..) => {\n         }\n     }\n "}]}