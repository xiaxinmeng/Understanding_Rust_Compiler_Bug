{"sha": "02381db8e0cd4412bec4254fd78e140e7b036fa7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMzgxZGI4ZTBjZDQ0MTJiZWM0MjU0ZmQ3OGUxNDBlN2IwMzZmYTc=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-29T17:54:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-29T17:54:02Z"}, "message": "Rollup merge of #69581 - RalfJung:align_to_mut, r=Centril\n\nfix aliasing violation in align_to_mut\n\nFixes https://github.com/rust-lang/rust/issues/68549\n\nI decided to add the testcase here to make it all one PR, but if you prefer I can also add that test case in the Miri repo instead.", "tree": {"sha": "297c8e798f66c0e210e9463ba3f15473986b01dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/297c8e798f66c0e210e9463ba3f15473986b01dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02381db8e0cd4412bec4254fd78e140e7b036fa7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWqU6CRBK7hj4Ov3rIwAAdHIIAG+sysp9mvgWo5KcCL61ECrQ\nfhUlDkRQ6+5gzW+ZNKivXqwKFsu6g06sfbiJgOWghILGXlA8FgXb3dEDPhqCi525\nxTIY9j6prhUSJF+y4ir9j08Vsc/xtXxewurCSU79zv+YZcqXCx/imc2gF9lr2/f0\naOnFMuwOFS3NVY7p8pUVtEEloTsRFaV3hgt10swpnjeJpSfPnzXvyfrG+OCIStKw\nE9Uhp+2i2H8sDlOfbE9A2DIms/cmTg9aj4dBgGpvELsYNbJlztYHcr/yxi99flrJ\nrHCt992/Yi8Euh4JiVtREvtfjrX5+wL6IbnrquXkvyUQ7Qn4+2dVRDVPDAKL1RE=\n=qyyc\n-----END PGP SIGNATURE-----\n", "payload": "tree 297c8e798f66c0e210e9463ba3f15473986b01dc\nparent 7d43997053f940d3aa656a5054995a08edf5f3d4\nparent c34451ffb78e0a0851c7aa97897a1621beed8c82\nauthor Dylan DPC <dylan.dpc@gmail.com> 1582998842 +0100\ncommitter GitHub <noreply@github.com> 1582998842 +0100\n\nRollup merge of #69581 - RalfJung:align_to_mut, r=Centril\n\nfix aliasing violation in align_to_mut\n\nFixes https://github.com/rust-lang/rust/issues/68549\n\nI decided to add the testcase here to make it all one PR, but if you prefer I can also add that test case in the Miri repo instead.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02381db8e0cd4412bec4254fd78e140e7b036fa7", "html_url": "https://github.com/rust-lang/rust/commit/02381db8e0cd4412bec4254fd78e140e7b036fa7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02381db8e0cd4412bec4254fd78e140e7b036fa7/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d43997053f940d3aa656a5054995a08edf5f3d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d43997053f940d3aa656a5054995a08edf5f3d4", "html_url": "https://github.com/rust-lang/rust/commit/7d43997053f940d3aa656a5054995a08edf5f3d4"}, {"sha": "c34451ffb78e0a0851c7aa97897a1621beed8c82", "url": "https://api.github.com/repos/rust-lang/rust/commits/c34451ffb78e0a0851c7aa97897a1621beed8c82", "html_url": "https://github.com/rust-lang/rust/commit/c34451ffb78e0a0851c7aa97897a1621beed8c82"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "1670c8418421f62f3120a584ade7603490707f13", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02381db8e0cd4412bec4254fd78e140e7b036fa7/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02381db8e0cd4412bec4254fd78e140e7b036fa7/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=02381db8e0cd4412bec4254fd78e140e7b036fa7", "patch": "@@ -2571,11 +2571,13 @@ impl<T> [T] {\n             let (left, rest) = self.split_at_mut(offset);\n             // now `rest` is definitely aligned, so `from_raw_parts_mut` below is okay\n             let (us_len, ts_len) = rest.align_to_offsets::<U>();\n+            let rest_len = rest.len();\n             let mut_ptr = rest.as_mut_ptr();\n+            // We can't use `rest` again after this, that would invalidate its alias `mut_ptr`!\n             (\n                 left,\n                 from_raw_parts_mut(mut_ptr as *mut U, us_len),\n-                from_raw_parts_mut(mut_ptr.add(rest.len() - ts_len), ts_len),\n+                from_raw_parts_mut(mut_ptr.add(rest_len - ts_len), ts_len),\n             )\n         }\n     }"}, {"sha": "dbab433e33f4823d5f08667272f37819bd3dd10b", "filename": "src/libcore/tests/slice.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/02381db8e0cd4412bec4254fd78e140e7b036fa7/src%2Flibcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02381db8e0cd4412bec4254fd78e140e7b036fa7/src%2Flibcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fslice.rs?ref=02381db8e0cd4412bec4254fd78e140e7b036fa7", "patch": "@@ -1570,6 +1570,18 @@ fn test_align_to_empty_mid() {\n     }\n }\n \n+#[test]\n+fn test_align_to_mut_aliasing() {\n+    let mut val = [1u8, 2, 3, 4, 5];\n+    // `align_to_mut` used to create `mid` in a way that there was some intermediate\n+    // incorrect aliasing, invalidating the resulting `mid` slice.\n+    let (begin, mid, end) = unsafe { val.align_to_mut::<[u8; 2]>() };\n+    assert!(begin.len() == 0);\n+    assert!(end.len() == 1);\n+    mid[0] = mid[1];\n+    assert_eq!(val, [3, 4, 3, 4, 5])\n+}\n+\n #[test]\n fn test_slice_partition_dedup_by() {\n     let mut slice: [i32; 9] = [1, -1, 2, 3, 1, -5, 5, -2, 2];"}]}