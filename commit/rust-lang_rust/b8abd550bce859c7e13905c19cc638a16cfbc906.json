{"sha": "b8abd550bce859c7e13905c19cc638a16cfbc906", "node_id": "C_kwDOAAsO6NoAKGI4YWJkNTUwYmNlODU5YzdlMTM5MDVjMTljYzYzOGExNmNmYmM5MDY", "commit": {"author": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2021-10-30T03:18:41Z"}, "committer": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2021-10-31T20:11:01Z"}, "message": "Pull `self.v.len()` out in `RChunks::next` as suggested in review comments", "tree": {"sha": "e061737bd9d83cc42673ea23002e804c330a198f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e061737bd9d83cc42673ea23002e804c330a198f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8abd550bce859c7e13905c19cc638a16cfbc906", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEh0+qV0hta6XFe2D54u/UMJ4RyKgFAmF++FUACgkQ4u/UMJ4R\nyKj8uQ/7BRyDdP5GGV1KdQ8hhmn/C1wnV5wlV8U1Cec/NuLpqNmBuo1mpGiEInRZ\n6FHAa7ssXA5MOWzmGpFyW2WXhGh968UuDxLGLU+V4C5TWPRLFxeDaeDnl7d1gwnI\nuMxvq+gfVfQGFaQyExW/3Vo0HEletBPiDBJDxyAoDDzbfZTKNlGuIQHRK8AcS6uk\nxdlCQKYj1tgKT7qkVZ/gUjQa4bM8CMxkX+cdenQsp+H3skn3Zmu5igTY8cFEZE8B\n7YVHDNUCbWwFvAef85INZ4wbVQl4miSjx5hwoboG8r83EB6ETSBzL/bxA0iDt8TM\nN3h6KfSch4q5EL9l+Bw6QEzNT+qKGKDfBdWRGv3k92EjTSg3+cnM/5BAojop5AGo\nxDuE/zOxyYpqyHU5i+5med4rC3ViXXCdCeshyNaKDGb8Yxh4YOL9PBozCHbhfRDu\n0N2S6eZZi1kHJrsTkCA3+I9pCqi1KlYaPr+lInxv4y7m3APO24+qtsybgb059cYk\nCzD5rJxoIPRsnuXb5VsgJJ6dyGteiMQ+DNEAeQStPTSBJl52R73S8RvvzJbk9nAZ\nB/l3ib+BCAmuUDChrOHQ2IsOFIQ5puMHYXUGIxNR0TEkUj5LFg31WVo2ZubZ/ROy\nCuIXmSI2tRyLP3ULbB5+MntPZfOmTccxfIO4WBKAAANSd4kSLdA=\n=nkP9\n-----END PGP SIGNATURE-----", "payload": "tree e061737bd9d83cc42673ea23002e804c330a198f\nparent b54381640d0cd844f6a739812eaaa202f08aeb03\nauthor Thom Chiovoloni <chiovolonit@gmail.com> 1635563921 -0700\ncommitter Thom Chiovoloni <chiovolonit@gmail.com> 1635711061 -0700\n\nPull `self.v.len()` out in `RChunks::next` as suggested in review comments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8abd550bce859c7e13905c19cc638a16cfbc906", "html_url": "https://github.com/rust-lang/rust/commit/b8abd550bce859c7e13905c19cc638a16cfbc906", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8abd550bce859c7e13905c19cc638a16cfbc906/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b54381640d0cd844f6a739812eaaa202f08aeb03", "url": "https://api.github.com/repos/rust-lang/rust/commits/b54381640d0cd844f6a739812eaaa202f08aeb03", "html_url": "https://github.com/rust-lang/rust/commit/b54381640d0cd844f6a739812eaaa202f08aeb03"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "44ba494340a1b863d53b0ddde6599043d07e3284", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b8abd550bce859c7e13905c19cc638a16cfbc906/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8abd550bce859c7e13905c19cc638a16cfbc906/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=b8abd550bce859c7e13905c19cc638a16cfbc906", "patch": "@@ -2423,13 +2423,14 @@ impl<'a, T> Iterator for RChunks<'a, T> {\n         if self.v.is_empty() {\n             None\n         } else {\n-            let chunksz = cmp::min(self.v.len(), self.chunk_size);\n+            let len = self.v.len();\n+            let chunksz = cmp::min(len, self.chunk_size);\n             // SAFETY: split_at_unchecked just requires the argument be less\n-            // than the length. This could only happen if the expression\n-            // `self.v.len() - chunksz` overflows. This could only happen if\n-            // `chunksz > self.v.len()`, which is impossible as we initialize it\n-            // as the `min` of `self.v.len()` and `self.chunk_size`.\n-            let (fst, snd) = unsafe { self.v.split_at_unchecked(self.v.len() - chunksz) };\n+            // than the length. This could only happen if the expression `len -\n+            // chunksz` overflows. This could only happen if `chunksz > len`,\n+            // which is impossible as we initialize it as the `min` of `len` and\n+            // `self.chunk_size`.\n+            let (fst, snd) = unsafe { self.v.split_at_unchecked(len - chunksz) };\n             self.v = fst;\n             Some(snd)\n         }"}]}