{"sha": "5253595b3bb6a3cc6502bb2327590e582d1d27e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNTM1OTViM2JiNmEzY2M2NTAyYmIyMzI3NTkwZTU4MmQxZDI3ZTk=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-11-06T18:34:34Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-11-06T18:34:34Z"}, "message": "FROM_ITER_INSTEAD_OF_COLLECT: avoid unwrapping unconditionally\n\nFixes #6302", "tree": {"sha": "2f4a05dfe666faf1ab02b30eefdfad21da73c38c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f4a05dfe666faf1ab02b30eefdfad21da73c38c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5253595b3bb6a3cc6502bb2327590e582d1d27e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5253595b3bb6a3cc6502bb2327590e582d1d27e9", "html_url": "https://github.com/rust-lang/rust/commit/5253595b3bb6a3cc6502bb2327590e582d1d27e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5253595b3bb6a3cc6502bb2327590e582d1d27e9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b20d4c155d2fe3a8391f86dcf9a8c49e17188703", "url": "https://api.github.com/repos/rust-lang/rust/commits/b20d4c155d2fe3a8391f86dcf9a8c49e17188703", "html_url": "https://github.com/rust-lang/rust/commit/b20d4c155d2fe3a8391f86dcf9a8c49e17188703"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "a3fa3bdd36a56a5ed1955b4612068ce5df29db5d", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/5253595b3bb6a3cc6502bb2327590e582d1d27e9/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5253595b3bb6a3cc6502bb2327590e582d1d27e9/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=5253595b3bb6a3cc6502bb2327590e582d1d27e9", "patch": "@@ -3901,21 +3901,24 @@ fn lint_from_iter(cx: &LateContext<'_>, expr: &hir::Expr<'_>, args: &[hir::Expr<\n     let ty = cx.typeck_results().expr_ty(expr);\n     let arg_ty = cx.typeck_results().expr_ty(&args[0]);\n \n-    let from_iter_id = get_trait_def_id(cx, &paths::FROM_ITERATOR).unwrap();\n-    let iter_id = get_trait_def_id(cx, &paths::ITERATOR).unwrap();\n+    if_chain! {\n+        if let Some(from_iter_id) = get_trait_def_id(cx, &paths::FROM_ITERATOR);\n+        if let Some(iter_id) = get_trait_def_id(cx, &paths::ITERATOR);\n \n-    if implements_trait(cx, ty, from_iter_id, &[]) && implements_trait(cx, arg_ty, iter_id, &[]) {\n-        // `expr` implements `FromIterator` trait\n-        let iter_expr = snippet(cx, args[0].span, \"..\");\n-        span_lint_and_sugg(\n-            cx,\n-            FROM_ITER_INSTEAD_OF_COLLECT,\n-            expr.span,\n-            \"usage of `FromIterator::from_iter`\",\n-            \"use `.collect()` instead of `::from_iter()`\",\n-            format!(\"{}.collect()\", iter_expr),\n-            Applicability::MaybeIncorrect,\n-        );\n+        if implements_trait(cx, ty, from_iter_id, &[]) && implements_trait(cx, arg_ty, iter_id, &[]);\n+        then {\n+            // `expr` implements `FromIterator` trait\n+            let iter_expr = snippet(cx, args[0].span, \"..\");\n+            span_lint_and_sugg(\n+                cx,\n+                FROM_ITER_INSTEAD_OF_COLLECT,\n+                expr.span,\n+                \"usage of `FromIterator::from_iter`\",\n+                \"use `.collect()` instead of `::from_iter()`\",\n+                format!(\"{}.collect()\", iter_expr),\n+                Applicability::MaybeIncorrect,\n+            );\n+        }\n     }\n }\n "}]}