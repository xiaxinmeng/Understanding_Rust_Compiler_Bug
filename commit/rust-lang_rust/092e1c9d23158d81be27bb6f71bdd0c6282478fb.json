{"sha": "092e1c9d23158d81be27bb6f71bdd0c6282478fb", "node_id": "C_kwDOAAsO6NoAKDA5MmUxYzlkMjMxNThkODFiZTI3YmI2ZjcxYmRkMGM2MjgyNDc4ZmI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-09T16:03:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-09T16:03:41Z"}, "message": "Auto merge of #92534 - Aaron1011:hash-hir, r=petrochenkov\n\nHash `Ident` spans in all HIR structures\n\nThis PR removes all of the `#[stable_hasher(project(name))]`\nattributes used in HIR structs. While these attributes are not known\nto be causing any issues in practice, we need to hash these in\norder for the incremental system to work correctly -\na query could be otherwise be incorrectly marked green\nwhen a change occures in one of the `Span`s that it uses.", "tree": {"sha": "96b938d24dac068feed482ea7175239623c4a453", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96b938d24dac068feed482ea7175239623c4a453"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/092e1c9d23158d81be27bb6f71bdd0c6282478fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/092e1c9d23158d81be27bb6f71bdd0c6282478fb", "html_url": "https://github.com/rust-lang/rust/commit/092e1c9d23158d81be27bb6f71bdd0c6282478fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/092e1c9d23158d81be27bb6f71bdd0c6282478fb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7bb8e3677ba4277914e85a3060e5d69151aed44", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7bb8e3677ba4277914e85a3060e5d69151aed44", "html_url": "https://github.com/rust-lang/rust/commit/f7bb8e3677ba4277914e85a3060e5d69151aed44"}, {"sha": "467b72607dcb1621ef960dd2179c876b0993b988", "url": "https://api.github.com/repos/rust-lang/rust/commits/467b72607dcb1621ef960dd2179c876b0993b988", "html_url": "https://github.com/rust-lang/rust/commit/467b72607dcb1621ef960dd2179c876b0993b988"}], "stats": {"total": 12, "additions": 2, "deletions": 10}, "files": [{"sha": "f03d8eea40bb3ba292ca5469ab809436db20f8df", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/092e1c9d23158d81be27bb6f71bdd0c6282478fb/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/092e1c9d23158d81be27bb6f71bdd0c6282478fb/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=092e1c9d23158d81be27bb6f71bdd0c6282478fb", "patch": "@@ -205,7 +205,6 @@ impl Path<'_> {\n #[derive(Debug, HashStable_Generic)]\n pub struct PathSegment<'hir> {\n     /// The identifier portion of this path segment.\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     // `id` and `res` are optional. We currently only use these in save-analysis,\n     // any path segments without these will not have save-analysis info and\n@@ -850,7 +849,6 @@ pub struct PatField<'hir> {\n     #[stable_hasher(ignore)]\n     pub hir_id: HirId,\n     /// The identifier for the field.\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     /// The pattern the field is destructured to.\n     pub pat: &'hir Pat<'hir>,\n@@ -2127,7 +2125,6 @@ pub const FN_OUTPUT_NAME: Symbol = sym::Output;\n #[derive(Debug, HashStable_Generic)]\n pub struct TypeBinding<'hir> {\n     pub hir_id: HirId,\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     pub gen_args: &'hir GenericArgs<'hir>,\n     pub kind: TypeBindingKind<'hir>,\n@@ -2515,7 +2512,6 @@ pub struct EnumDef<'hir> {\n #[derive(Debug, HashStable_Generic)]\n pub struct Variant<'hir> {\n     /// Name of the variant.\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     /// Id of the variant (not the constructor, see `VariantData::ctor_hir_id()`).\n     pub id: HirId,\n@@ -2605,7 +2601,6 @@ impl VisibilityKind<'_> {\n #[derive(Debug, HashStable_Generic)]\n pub struct FieldDef<'hir> {\n     pub span: Span,\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     pub vis: Visibility<'hir>,\n     pub hir_id: HirId,\n@@ -2864,7 +2859,6 @@ impl ItemKind<'_> {\n #[derive(Encodable, Debug, HashStable_Generic)]\n pub struct TraitItemRef {\n     pub id: TraitItemId,\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     pub kind: AssocItemKind,\n     pub span: Span,\n@@ -2880,7 +2874,6 @@ pub struct TraitItemRef {\n #[derive(Debug, HashStable_Generic)]\n pub struct ImplItemRef {\n     pub id: ImplItemId,\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     pub kind: AssocItemKind,\n     pub span: Span,\n@@ -2919,7 +2912,6 @@ impl ForeignItemId {\n #[derive(Debug, HashStable_Generic)]\n pub struct ForeignItemRef {\n     pub id: ForeignItemId,\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     pub span: Span,\n }"}, {"sha": "14d6fc87198c4e1dc356de6bce87198ec4165960", "filename": "src/test/incremental/hashes/trait_defs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/092e1c9d23158d81be27bb6f71bdd0c6282478fb/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/092e1c9d23158d81be27bb6f71bdd0c6282478fb/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs?ref=092e1c9d23158d81be27bb6f71bdd0c6282478fb", "patch": "@@ -400,7 +400,7 @@ trait TraitAddUnsafeModifier {\n #[cfg(not(any(cfail1,cfail4)))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddUnsafeModifier {\n     #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n@@ -425,7 +425,7 @@ trait TraitAddExternModifier {\n #[cfg(not(any(cfail1,cfail4)))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddExternModifier {\n     #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]"}]}