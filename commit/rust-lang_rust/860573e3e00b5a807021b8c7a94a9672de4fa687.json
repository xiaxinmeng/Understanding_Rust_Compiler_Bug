{"sha": "860573e3e00b5a807021b8c7a94a9672de4fa687", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MDU3M2UzZTAwYjVhODA3MDIxYjhjN2E5NGE5NjcyZGU0ZmE2ODc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-11T17:31:57Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-11T17:31:57Z"}, "message": "Reword para on diverging functions.", "tree": {"sha": "8e1f91905e881051504a2bc18fdb33c9c89b4753", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e1f91905e881051504a2bc18fdb33c9c89b4753"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/860573e3e00b5a807021b8c7a94a9672de4fa687", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/860573e3e00b5a807021b8c7a94a9672de4fa687", "html_url": "https://github.com/rust-lang/rust/commit/860573e3e00b5a807021b8c7a94a9672de4fa687", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/860573e3e00b5a807021b8c7a94a9672de4fa687/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "012bb7de5ba65bfd7b3483595e65a4cda1d1f682", "url": "https://api.github.com/repos/rust-lang/rust/commits/012bb7de5ba65bfd7b3483595e65a4cda1d1f682", "html_url": "https://github.com/rust-lang/rust/commit/012bb7de5ba65bfd7b3483595e65a4cda1d1f682"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "8846ac9f94536950a9dc77eb8043993ec8bd7715", "filename": "doc/rust.md", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/860573e3e00b5a807021b8c7a94a9672de4fa687/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/860573e3e00b5a807021b8c7a94a9672de4fa687/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=860573e3e00b5a807021b8c7a94a9672de4fa687", "patch": "@@ -936,11 +936,13 @@ fn f(i: int) -> int {\n }\n ~~~~\n \n-The typechecker would complain that `f` doesn't return a value in the\n-`else` branch. Adding the `!` annotation on `my_err` would\n-express that `f` requires no explicit `return`, as if it returns\n-control to the caller, it returns a value (true because it never returns\n-control).\n+This will not compile without the `!` annotation on `my_err`,\n+since the `else` branch of the conditional in `f` does not return an `int`,\n+as required by the signature of `f`.\n+Adding the `!` annotation to `my_err` informs the typechecker that,\n+should control ever enter `my_err`, no further type judgments about `f` need to hold,\n+since control will never resume in any context that relies on those judgments.\n+Thus the return type on `f` only needs to reflect the `if` branch of the conditional.\n \n #### Pure functions\n "}]}