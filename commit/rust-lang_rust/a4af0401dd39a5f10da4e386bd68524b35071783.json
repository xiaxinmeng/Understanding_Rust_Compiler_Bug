{"sha": "a4af0401dd39a5f10da4e386bd68524b35071783", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0YWYwNDAxZGQzOWE1ZjEwZGE0ZTM4NmJkNjg1MjRiMzUwNzE3ODM=", "commit": {"author": {"name": "Klim Tsoutsman", "email": "klimusha@gmail.com", "date": "2021-08-08T14:10:03Z"}, "committer": {"name": "Klim Tsoutsman", "email": "klimusha@gmail.com", "date": "2021-08-08T22:50:46Z"}, "message": "Clarify terms in rustdoc book\n\nChange code blocks to Rust", "tree": {"sha": "ee7334c079778a692701f023f74592f5d83e99d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee7334c079778a692701f023f74592f5d83e99d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4af0401dd39a5f10da4e386bd68524b35071783", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJHBAABCAAxFiEE0RRGy1bF3+8eDajB7xpuP9SruNwFAmEQX8kTHGtsaW11c2hh\nQGdtYWlsLmNvbQAKCRDvGm4/1Ku43P3MD/9d3VIifQ/QOUcqkTcpjH1m6F+W/W+9\n6HfvacqwiWFZaQv/9cIB7DJiZislh9veMtn5dqfJ8s8B1CrhH8z/n6iEGvOmbhHV\n4FAwAy2SVRzV2n+ZZWCJhSWutBRLH+fCPukSPtoJjYxS+Z2GilFFwEzgYY7F2k5t\n0NaEGBO9kZLnZoA9SPMhKKKI6UitH5gRse20nWFzBMGSpoVWf4PQpt5sYamZXJQg\nSgbfH5nfOIM7cHziKTSatsnvHIxqbz0QfZMVcgThaIHqCkBLzBJYksDND091RRnz\ni316zK8v6wCzJojIhqnQjkb6i0XaID6EZ+XQhUPMUXrBmjVWJ+PXM8rgX6IFKBzV\ntwAsDv07cEhdTDKc+zyVeEWCc6JoslSBBbuo+kBUDfPWgXmi/kJfAjXnXRCrhSiG\nmGefSpy+S2j/ukAZ7aZVwkfDlJd5HXYvcet5NyzcA9ZErP5VzYDTV5me83m0ZzvX\n0B3oSgf1Vb8wb9LMnQZMEQ79hfVsbDDapitk4xLbXfPZGheV8VR+I8DdFBgfN1db\nUEzptj+a9/9xTWVLpxFMTP6rfvLrFTMFD1RH+cQuj8npDHf5LgDDaPkd9FBEj8W9\n/FClw7G1IMkhxRiK1WlGAZF8gAMXSz6PK4425bNueuHBDBNq5GDuIfBR5b7Gt4CP\nwdNSC+jRM9jjmQ==\n=16BM\n-----END PGP SIGNATURE-----", "payload": "tree ee7334c079778a692701f023f74592f5d83e99d9\nparent 26bf0ef0b5a70a70a6e0f85533bb3ca1404e9650\nauthor Klim Tsoutsman <klimusha@gmail.com> 1628431803 +1000\ncommitter Klim Tsoutsman <klimusha@gmail.com> 1628463046 +1000\n\nClarify terms in rustdoc book\n\nChange code blocks to Rust\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4af0401dd39a5f10da4e386bd68524b35071783", "html_url": "https://github.com/rust-lang/rust/commit/a4af0401dd39a5f10da4e386bd68524b35071783", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4af0401dd39a5f10da4e386bd68524b35071783/comments", "author": {"login": "tsoutsman", "id": 32662194, "node_id": "MDQ6VXNlcjMyNjYyMTk0", "avatar_url": "https://avatars.githubusercontent.com/u/32662194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsoutsman", "html_url": "https://github.com/tsoutsman", "followers_url": "https://api.github.com/users/tsoutsman/followers", "following_url": "https://api.github.com/users/tsoutsman/following{/other_user}", "gists_url": "https://api.github.com/users/tsoutsman/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsoutsman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsoutsman/subscriptions", "organizations_url": "https://api.github.com/users/tsoutsman/orgs", "repos_url": "https://api.github.com/users/tsoutsman/repos", "events_url": "https://api.github.com/users/tsoutsman/events{/privacy}", "received_events_url": "https://api.github.com/users/tsoutsman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tsoutsman", "id": 32662194, "node_id": "MDQ6VXNlcjMyNjYyMTk0", "avatar_url": "https://avatars.githubusercontent.com/u/32662194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsoutsman", "html_url": "https://github.com/tsoutsman", "followers_url": "https://api.github.com/users/tsoutsman/followers", "following_url": "https://api.github.com/users/tsoutsman/following{/other_user}", "gists_url": "https://api.github.com/users/tsoutsman/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsoutsman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsoutsman/subscriptions", "organizations_url": "https://api.github.com/users/tsoutsman/orgs", "repos_url": "https://api.github.com/users/tsoutsman/repos", "events_url": "https://api.github.com/users/tsoutsman/events{/privacy}", "received_events_url": "https://api.github.com/users/tsoutsman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26bf0ef0b5a70a70a6e0f85533bb3ca1404e9650", "url": "https://api.github.com/repos/rust-lang/rust/commits/26bf0ef0b5a70a70a6e0f85533bb3ca1404e9650", "html_url": "https://github.com/rust-lang/rust/commit/26bf0ef0b5a70a70a6e0f85533bb3ca1404e9650"}], "stats": {"total": 46, "additions": 24, "deletions": 22}, "files": [{"sha": "70900a0bab942fa514533aec0fc3f884c8ab89e2", "filename": "src/doc/rustdoc/src/documentation-tests.md", "status": "modified", "additions": 24, "deletions": 22, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/a4af0401dd39a5f10da4e386bd68524b35071783/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md", "raw_url": "https://github.com/rust-lang/rust/raw/a4af0401dd39a5f10da4e386bd68524b35071783/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md?ref=a4af0401dd39a5f10da4e386bd68524b35071783", "patch": "@@ -297,20 +297,23 @@ we can add the `#[macro_use]` attribute. Second, we\u2019ll need to add our own\n \n ## Attributes\n \n-There are a few annotations that are useful to help `rustdoc` do the right\n+Code blocks can be annotated with attributes that help `rustdoc` do the right\n thing when testing your code:\n \n+The `ignore` attribute tells Rust to ignore your code. This is almost never\n+what you want as it's the most generic. Instead, consider annotating it\n+with `text` if it's not code or using `#`s to get a working example that\n+only shows the part you care about.\n+\n ```rust\n /// ```ignore\n /// fn foo() {\n /// ```\n # fn foo() {}\n ```\n \n-The `ignore` directive tells Rust to ignore your code. This is almost never\n-what you want, as it's the most generic. Instead, consider annotating it\n-with `text` if it's not code, or using `#`s to get a working example that\n-only shows the part you care about.\n+`should_panic` tells `rustdoc` that the code should compile correctly but\n+panic during execution. If the code doesn't panic, the test will fail.\n \n ```rust\n /// ```should_panic\n@@ -319,8 +322,10 @@ only shows the part you care about.\n # fn foo() {}\n ```\n \n-`should_panic` tells `rustdoc` that the code should compile correctly, but\n-not actually pass as a test.\n+The `no_run` attribute will compile your code but not run it. This is\n+important for examples such as \"Here's how to retrieve a web page,\"\n+which you would want to ensure compiles, but might be run in a test\n+environment that has no network access.\n \n ```rust\n /// ```no_run\n@@ -331,24 +336,24 @@ not actually pass as a test.\n # fn foo() {}\n ```\n \n-The `no_run` attribute will compile your code, but not run it. This is\n-important for examples such as \"Here's how to retrieve a web page,\"\n-which you would want to ensure compiles, but might be run in a test\n-environment that has no network access.\n+`compile_fail` tells `rustdoc` that the compilation should fail. If it\n+compiles, then the test will fail. However, please note that code failing\n+with the current Rust release may work in a future release, as new features\n+are added.\n \n-```text\n+```rust\n /// ```compile_fail\n /// let x = 5;\n /// x += 2; // shouldn't compile!\n /// ```\n+# fn foo() {}\n ```\n \n-`compile_fail` tells `rustdoc` that the compilation should fail. If it\n-compiles, then the test will fail. However please note that code failing\n-with the current Rust release may work in a future release, as new features\n-are added.\n+`edition2018` tells `rustdoc` that the code sample should be compiled using\n+the 2018 edition of Rust. Similarly, you can specify `edition2015` to compile\n+the code with the 2015 edition.\n \n-```text\n+```rust\n /// Only runs on the 2018 edition.\n ///\n /// ```edition2018\n@@ -358,12 +363,9 @@ are added.\n ///         + \"3\".parse::<i32>()?\n /// };\n /// ```\n+# fn foo() {}\n ```\n \n-`edition2018` tells `rustdoc` that the code sample should be compiled using\n-the 2018 edition of Rust. Similarly, you can specify `edition2015` to compile\n-the code with the 2015 edition.\n-\n ## Syntax reference\n \n The *exact* syntax for code blocks, including the edge cases, can be found\n@@ -385,7 +387,7 @@ section.\n \n However, it's preferable to use fenced code blocks over indented code blocks.\n Not only are fenced code blocks considered more idiomatic for Rust code,\n-but there is no way to use directives such as `ignore` or `should_panic` with\n+but there is no way to use attributes such as `ignore` or `should_panic` with\n indented code blocks.\n \n ### Include items only when collecting doctests"}]}