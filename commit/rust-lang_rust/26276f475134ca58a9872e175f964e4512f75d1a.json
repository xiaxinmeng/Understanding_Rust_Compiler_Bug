{"sha": "26276f475134ca58a9872e175f964e4512f75d1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2Mjc2ZjQ3NTEzNGNhNThhOTg3MmUxNzVmOTY0ZTQ1MTJmNzVkMWE=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2015-01-29T04:12:00Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2015-01-29T04:12:00Z"}, "message": "Fix up check to bypass internal buffer\n\nWe don't care about how much space the allocation has, but the actual\nusable space in the buffer.", "tree": {"sha": "21ce5030f06af375654e97c896c5df68fa368f89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21ce5030f06af375654e97c896c5df68fa368f89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26276f475134ca58a9872e175f964e4512f75d1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26276f475134ca58a9872e175f964e4512f75d1a", "html_url": "https://github.com/rust-lang/rust/commit/26276f475134ca58a9872e175f964e4512f75d1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26276f475134ca58a9872e175f964e4512f75d1a/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5961ad06d45689b44ff305c15d6ec7ec65755a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5961ad06d45689b44ff305c15d6ec7ec65755a9", "html_url": "https://github.com/rust-lang/rust/commit/c5961ad06d45689b44ff305c15d6ec7ec65755a9"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "586cc1477f8dd6ecc35cd5633330e9d4ef74c7bb", "filename": "src/libstd/old_io/buffered.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26276f475134ca58a9872e175f964e4512f75d1a/src%2Flibstd%2Fold_io%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26276f475134ca58a9872e175f964e4512f75d1a/src%2Flibstd%2Fold_io%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_io%2Fbuffered.rs?ref=26276f475134ca58a9872e175f964e4512f75d1a", "patch": "@@ -111,7 +111,7 @@ impl<R: Reader> Buffer for BufferedReader<R> {\n \n impl<R: Reader> Reader for BufferedReader<R> {\n     fn read(&mut self, buf: &mut [u8]) -> IoResult<uint> {\n-        if self.pos == self.cap && buf.len() >= self.buf.capacity() {\n+        if self.pos == self.cap && buf.len() >= self.buf.len() {\n             return self.inner.read(buf);\n         }\n         let nread = {"}]}