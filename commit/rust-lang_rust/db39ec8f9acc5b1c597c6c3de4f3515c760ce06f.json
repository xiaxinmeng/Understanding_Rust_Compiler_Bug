{"sha": "db39ec8f9acc5b1c597c6c3de4f3515c760ce06f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMzllYzhmOWFjYzViMWM1OTdjNmMzZGU0ZjM1MTVjNzYwY2UwNmY=", "commit": {"author": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2018-05-26T01:38:50Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-05-29T13:19:46Z"}, "message": "store output in FlowState", "tree": {"sha": "4064d187dba300f84fa8775d904d8c0001e5ed9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4064d187dba300f84fa8775d904d8c0001e5ed9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db39ec8f9acc5b1c597c6c3de4f3515c760ce06f", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAlsNU3IACgkQiMlBzaHU\nZDI/rw//eSO6QMWAFZDrPVi2lAa8p1I1NZFIQO1cdyYacM0lzUJU11lfEVpyJgDM\nLwr3gThxOgs2yIxkT3eocDBD2DwuDUj2K1n14isRYLcml6eqiFwSXJWhDA/yKvbM\nIHz+nIq9fZlT7ipgYv100l0YOyLVyQZk1I6TqG4E2zPImz/1kbec8b+omGlu7o6d\n7sr3hMDs5Zu6EVeroYklh6e7L5y50jISrhDNC6cxCojsymB6CQ4wv59I4wVVMGpv\nWxeUX2sw0vKdUmRmzGQi+xWdwkZ7fl+S8+cHpqMG48mWg8KH3B/PZjMJM8HQlmkY\nW1sAQ67Q8AAAcdAv0q1YVOjqRPYOCxxlu77zxzeGsJ7peo4+GuTaJJ7D7pgZhoUs\nC6eMHiOoLa37AhmVNdknm1gMED/1K/buKH8yrwtY9nZd4JscjcGNgHaqUuNfOaMO\nIb5iObhRONLOtAu8FMStGUn85lSlNG0+EbqNDd4el8+fHVzUpCeh52fHL0TWrdZl\n5smuXpjpc8O7epthWbz74+fNS9ATkq3qxrYgIZYfRo3SV9SSns/KRUzwZwJvyD0j\nbfjtGNClmcdJ3HK/Y4xrHNNLSnOPD/MlZppEBOGkBHf3tkrY/KLucjEyYC+kZgf/\nqZjQ1PLybZOC6fl6v6xzSIXnrpaBZ8b7dr0K5E/UmzJW/In0194=\n=3yhA\n-----END PGP SIGNATURE-----", "payload": "tree 4064d187dba300f84fa8775d904d8c0001e5ed9a\nparent 2cd09f27b835d4342ce6f87eaf250eceb2718db8\nauthor Douglas Campos <qmx@qmx.me> 1527298730 +0000\ncommitter Santiago Pastorino <spastorino@gmail.com> 1527599986 -0300\n\nstore output in FlowState\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db39ec8f9acc5b1c597c6c3de4f3515c760ce06f", "html_url": "https://github.com/rust-lang/rust/commit/db39ec8f9acc5b1c597c6c3de4f3515c760ce06f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db39ec8f9acc5b1c597c6c3de4f3515c760ce06f/comments", "author": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cd09f27b835d4342ce6f87eaf250eceb2718db8", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cd09f27b835d4342ce6f87eaf250eceb2718db8", "html_url": "https://github.com/rust-lang/rust/commit/2cd09f27b835d4342ce6f87eaf250eceb2718db8"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "61915646d6fdaf0a75297631a24021bf18726030", "filename": "src/librustc_mir/borrow_check/flows.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/db39ec8f9acc5b1c597c6c3de4f3515c760ce06f/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db39ec8f9acc5b1c597c6c3de4f3515c760ce06f/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs?ref=db39ec8f9acc5b1c597c6c3de4f3515c760ce06f", "patch": "@@ -14,15 +14,21 @@\n //! but is not as ugly as it is right now.\n \n use rustc::mir::{BasicBlock, Location};\n+use rustc::ty::RegionVid;\n use rustc_data_structures::indexed_set::Iter;\n \n+use borrow_check::location::LocationIndex;\n+\n+use polonius_engine::Output;\n+\n use dataflow::{MaybeInitializedPlaces, MaybeUninitializedPlaces};\n use dataflow::{EverInitializedPlaces, MovingOutStatements};\n use dataflow::{Borrows};\n use dataflow::{FlowAtLocation, FlowsAtLocation};\n use dataflow::move_paths::HasMoveData;\n use dataflow::move_paths::indexes::BorrowIndex;\n use std::fmt;\n+use std::rc::Rc;\n \n // (forced to be `pub` due to its use as an associated type below.)\n crate struct Flows<'b, 'gcx: 'tcx, 'tcx: 'b> {\n@@ -31,6 +37,9 @@ crate struct Flows<'b, 'gcx: 'tcx, 'tcx: 'b> {\n     pub uninits: FlowAtLocation<MaybeUninitializedPlaces<'b, 'gcx, 'tcx>>,\n     pub move_outs: FlowAtLocation<MovingOutStatements<'b, 'gcx, 'tcx>>,\n     pub ever_inits: FlowAtLocation<EverInitializedPlaces<'b, 'gcx, 'tcx>>,\n+\n+    /// Polonius Output\n+    pub polonius_output: Option<Rc<Output<RegionVid, BorrowIndex, LocationIndex>>>,\n }\n \n impl<'b, 'gcx, 'tcx> Flows<'b, 'gcx, 'tcx> {\n@@ -40,13 +49,15 @@ impl<'b, 'gcx, 'tcx> Flows<'b, 'gcx, 'tcx> {\n         uninits: FlowAtLocation<MaybeUninitializedPlaces<'b, 'gcx, 'tcx>>,\n         move_outs: FlowAtLocation<MovingOutStatements<'b, 'gcx, 'tcx>>,\n         ever_inits: FlowAtLocation<EverInitializedPlaces<'b, 'gcx, 'tcx>>,\n+        polonius_output: Option<Rc<Output<RegionVid, BorrowIndex, LocationIndex>>>,\n     ) -> Self {\n         Flows {\n             borrows,\n             inits,\n             uninits,\n             move_outs,\n             ever_inits,\n+            polonius_output,\n         }\n     }\n "}, {"sha": "983a2ac2ec1d1833d6901e34628eca537644a52f", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/db39ec8f9acc5b1c597c6c3de4f3515c760ce06f/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db39ec8f9acc5b1c597c6c3de4f3515c760ce06f/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=db39ec8f9acc5b1c597c6c3de4f3515c760ce06f", "patch": "@@ -11,12 +11,11 @@\n //! This query borrow-checks the MIR to (further) ensure it is not broken.\n \n use borrow_check::nll::region_infer::RegionInferenceContext;\n-use borrow_check::location::LocationIndex;\n use rustc::hir;\n use rustc::hir::def_id::DefId;\n use rustc::hir::map::definitions::DefPathData;\n use rustc::infer::InferCtxt;\n-use rustc::ty::{self, ParamEnv, RegionVid, TyCtxt};\n+use rustc::ty::{self, ParamEnv, TyCtxt};\n use rustc::ty::maps::Providers;\n use rustc::lint::builtin::UNUSED_MUT;\n use rustc::mir::{AggregateKind, BasicBlock, BorrowCheckResult, BorrowKind};\n@@ -46,7 +45,6 @@ use dataflow::move_paths::{IllegalMoveOriginKind, MoveError};\n use dataflow::move_paths::{HasMoveData, LookupResult, MoveData, MovePathIndex};\n use util::borrowck_errors::{BorrowckErrors, Origin};\n use util::collect_writes::FindAssignments;\n-use polonius_engine::Output;\n \n use self::borrow_set::{BorrowSet, BorrowData};\n use self::flows::Flows;\n@@ -253,7 +251,6 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n         used_mut_upvars: SmallVec::new(),\n         borrow_set,\n         dominators,\n-        polonius_output,\n     };\n \n     let mut state = Flows::new(\n@@ -262,6 +259,7 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n         flow_uninits,\n         flow_move_outs,\n         flow_ever_inits,\n+        polonius_output,\n     );\n \n     mbcx.analyze_results(&mut state); // entry point for DataflowResultsConsumer\n@@ -376,9 +374,6 @@ pub struct MirBorrowckCtxt<'cx, 'gcx: 'tcx, 'tcx: 'cx> {\n \n     /// Dominators for MIR\n     dominators: Dominators<BasicBlock>,\n-\n-    /// Polonius Output\n-    polonius_output: Option<Rc<Output<RegionVid, BorrowIndex, LocationIndex>>>,\n }\n \n // Check that:"}]}