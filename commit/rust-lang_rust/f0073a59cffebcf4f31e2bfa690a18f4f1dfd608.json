{"sha": "f0073a59cffebcf4f31e2bfa690a18f4f1dfd608", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMDczYTU5Y2ZmZWJjZjRmMzFlMmJmYTY5MGExOGY0ZjFkZmQ2MDg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-31T00:23:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-31T00:23:13Z"}, "message": "Auto merge of #80435 - pietroalbini:compression-formats, r=Mark-Simulacrum\n\nOnly produce .xz tarballs on CI\n\nThis PR adds a `./configure` option to choose which tarball compression formats to produce, and changes our CI configuration to only produce `.xz` tarballs. The release process will then recompress everything into `.gz` when producing a release.\n\nThis will drastically reduce our storage costs for CI artifacts, as we'd stop storing the same data twice. **Stable, beta and nightly releases will not be affected by this at all.**\n\nBefore landing this we'll need to increase the VM size of our release process, to recompress everything in a reasonable amount of time.\nr? `@Mark-Simulacrum`", "tree": {"sha": "c4cb00158f45bda84f3baa0eece0df4c04086ac5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4cb00158f45bda84f3baa0eece0df4c04086ac5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608", "html_url": "https://github.com/rust-lang/rust/commit/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9775ffef2a4c3a36cadb58b72ea60cefb92c86ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/9775ffef2a4c3a36cadb58b72ea60cefb92c86ae", "html_url": "https://github.com/rust-lang/rust/commit/9775ffef2a4c3a36cadb58b72ea60cefb92c86ae"}, {"sha": "5526d902508178293b98b4d8b7b39802107dc395", "url": "https://api.github.com/repos/rust-lang/rust/commits/5526d902508178293b98b4d8b7b39802107dc395", "html_url": "https://github.com/rust-lang/rust/commit/5526d902508178293b98b4d8b7b39802107dc395"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "9e08ce9b27e0cdf7e0d41171162a58a60234ffb3", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=f0073a59cffebcf4f31e2bfa690a18f4f1dfd608", "patch": "@@ -669,3 +669,7 @@ changelog-seen = 2\n \n # Whether to allow failures when building tools\n #missing-tools = false\n+\n+# List of compression formats to use when generating dist tarballs. The list of\n+# formats is provided to rust-installer, which must support all of them.\n+#compression-formats = [\"gz\", \"xz\"]"}, {"sha": "8a3b936d80d5c58340686465b11987a28aa0ccee", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=f0073a59cffebcf4f31e2bfa690a18f4f1dfd608", "patch": "@@ -148,6 +148,7 @@ pub struct Config {\n     pub dist_sign_folder: Option<PathBuf>,\n     pub dist_upload_addr: Option<String>,\n     pub dist_gpg_password_file: Option<PathBuf>,\n+    pub dist_compression_formats: Option<Vec<String>>,\n \n     // libstd features\n     pub backtrace: bool, // support for RUST_BACKTRACE\n@@ -438,6 +439,7 @@ struct Dist {\n     upload_addr: Option<String>,\n     src_tarball: Option<bool>,\n     missing_tools: Option<bool>,\n+    compression_formats: Option<Vec<String>>,\n }\n \n #[derive(Deserialize)]\n@@ -936,6 +938,7 @@ impl Config {\n             config.dist_sign_folder = t.sign_folder.map(PathBuf::from);\n             config.dist_gpg_password_file = t.gpg_password_file.map(PathBuf::from);\n             config.dist_upload_addr = t.upload_addr;\n+            config.dist_compression_formats = t.compression_formats;\n             set(&mut config.rust_dist_src, t.src_tarball);\n             set(&mut config.missing_tools, t.missing_tools);\n         }"}, {"sha": "2cabaee68ea670b632e60d5f9312be9451315f55", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=f0073a59cffebcf4f31e2bfa690a18f4f1dfd608", "patch": "@@ -147,6 +147,8 @@ def v(*args):\n   \"experimental LLVM targets to build\")\n v(\"release-channel\", \"rust.channel\", \"the name of the release channel to build\")\n v(\"release-description\", \"rust.description\", \"optional descriptive string for version output\")\n+v(\"dist-compression-formats\", None,\n+  \"comma-separated list of compression formats to use\")\n \n # Used on systems where \"cc\" is unavailable\n v(\"default-linker\", \"rust.default-linker\", \"the default linker\")\n@@ -349,6 +351,8 @@ def set(key, value):\n     elif option.name == 'option-checking':\n         # this was handled above\n         pass\n+    elif option.name == 'dist-compression-formats':\n+        set('dist.compression-formats', value.split(','))\n     else:\n         raise RuntimeError(\"unhandled option {}\".format(option.name))\n "}, {"sha": "137370fe6cb4f7e61cf4573ebaf02aa1fd9ce06f", "filename": "src/bootstrap/tarball.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608/src%2Fbootstrap%2Ftarball.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608/src%2Fbootstrap%2Ftarball.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftarball.rs?ref=f0073a59cffebcf4f31e2bfa690a18f4f1dfd608", "patch": "@@ -294,11 +294,25 @@ impl<'a> Tarball<'a> {\n \n         build_cli(&self, &mut cmd);\n         cmd.arg(\"--work-dir\").arg(&self.temp_dir);\n+        if let Some(formats) = &self.builder.config.dist_compression_formats {\n+            assert!(!formats.is_empty(), \"dist.compression-formats can't be empty\");\n+            cmd.arg(\"--compression-formats\").arg(formats.join(\",\"));\n+        }\n         self.builder.run(&mut cmd);\n         if self.delete_temp_dir {\n             t!(std::fs::remove_dir_all(&self.temp_dir));\n         }\n \n-        crate::dist::distdir(self.builder).join(format!(\"{}.tar.gz\", package_name))\n+        // Use either the first compression format defined, or \"gz\" as the default.\n+        let ext = self\n+            .builder\n+            .config\n+            .dist_compression_formats\n+            .as_ref()\n+            .and_then(|formats| formats.get(0))\n+            .map(|s| s.as_str())\n+            .unwrap_or(\"gz\");\n+\n+        crate::dist::distdir(self.builder).join(format!(\"{}.tar.{}\", package_name, ext))\n     }\n }"}, {"sha": "1f209f328a2bd98b272a27664a3cc71f6aec28b0", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=f0073a59cffebcf4f31e2bfa690a18f4f1dfd608", "patch": "@@ -1962,7 +1962,7 @@ impl Step for Distcheck {\n         builder.ensure(dist::Src);\n \n         let mut cmd = Command::new(\"tar\");\n-        cmd.arg(\"-xzf\")\n+        cmd.arg(\"-xf\")\n             .arg(builder.ensure(dist::PlainSourceTarball))\n             .arg(\"--strip-components=1\")\n             .current_dir(&dir);\n@@ -1986,10 +1986,7 @@ impl Step for Distcheck {\n         t!(fs::create_dir_all(&dir));\n \n         let mut cmd = Command::new(\"tar\");\n-        cmd.arg(\"-xzf\")\n-            .arg(builder.ensure(dist::Src))\n-            .arg(\"--strip-components=1\")\n-            .current_dir(&dir);\n+        cmd.arg(\"-xf\").arg(builder.ensure(dist::Src)).arg(\"--strip-components=1\").current_dir(&dir);\n         builder.run(&mut cmd);\n \n         let toml = dir.join(\"rust-src/lib/rustlib/src/rust/library/std/Cargo.toml\");"}, {"sha": "1958b6ee41d7fb9374ed619e8a1680e97652fece", "filename": "src/ci/run.sh", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f0073a59cffebcf4f31e2bfa690a18f4f1dfd608/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=f0073a59cffebcf4f31e2bfa690a18f4f1dfd608", "patch": "@@ -53,6 +53,11 @@ RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-locked-deps\"\n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-cargo-native-static\"\n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --set rust.codegen-units-std=1\"\n \n+# Only produce xz tarballs on CI. gz tarballs will be generated by the release\n+# process by recompressing the existing xz ones. This decreases the storage\n+# space required for CI artifacts.\n+RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --dist-compression-formats=xz\"\n+\n if [ \"$DIST_SRC\" = \"\" ]; then\n   RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-dist-src\"\n fi"}, {"sha": "5254dbfd25d5284728ab624dca1969d61427a0db", "filename": "src/tools/rust-installer", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-installer?ref=f0073a59cffebcf4f31e2bfa690a18f4f1dfd608", "patch": "@@ -1 +1 @@\n-Subproject commit d66f476b4d5e7fdf1ec215c9ac16c923dc292324\n+Subproject commit 5254dbfd25d5284728ab624dca1969d61427a0db"}]}