{"sha": "88515b981db65aa994e23ed5a2a9160f0c10613b", "node_id": "C_kwDOAAsO6NoAKDg4NTE1Yjk4MWRiNjVhYTk5NGUyM2VkNWEyYTkxNjBmMGMxMDYxM2I", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-19T05:08:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-19T05:08:47Z"}, "message": "Auto merge of #12809 - lnicola:empty-diagnostics, r=lnicola\n\nfix: Work around Code bug with empty diagnostics\n\nCloses #11404", "tree": {"sha": "2d2213a2c8bbf051a2604f085548cd26158706c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d2213a2c8bbf051a2604f085548cd26158706c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88515b981db65aa994e23ed5a2a9160f0c10613b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88515b981db65aa994e23ed5a2a9160f0c10613b", "html_url": "https://github.com/rust-lang/rust/commit/88515b981db65aa994e23ed5a2a9160f0c10613b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88515b981db65aa994e23ed5a2a9160f0c10613b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "567a5e9ef7c753e03d528cbc19110db99e8d6878", "url": "https://api.github.com/repos/rust-lang/rust/commits/567a5e9ef7c753e03d528cbc19110db99e8d6878", "html_url": "https://github.com/rust-lang/rust/commit/567a5e9ef7c753e03d528cbc19110db99e8d6878"}, {"sha": "474f5eafc790cdd12fa04c518d2443543df72900", "url": "https://api.github.com/repos/rust-lang/rust/commits/474f5eafc790cdd12fa04c518d2443543df72900", "html_url": "https://github.com/rust-lang/rust/commit/474f5eafc790cdd12fa04c518d2443543df72900"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "cff4bd7f66acdaca64197f5c0b3f9971065a657b", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/88515b981db65aa994e23ed5a2a9160f0c10613b/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88515b981db65aa994e23ed5a2a9160f0c10613b/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=88515b981db65aa994e23ed5a2a9160f0c10613b", "patch": "@@ -462,11 +462,6 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n                 message: \"original diagnostic\".to_string(),\n             };\n             for sub in &subdiagnostics {\n-                let mut message = sub.related.message.clone();\n-                // Change empty message to \" \", as they greatly confuse VS Code.\n-                if message.is_empty() {\n-                    message = String::from(\" \");\n-                }\n                 diagnostics.push(MappedRustDiagnostic {\n                     url: sub.related.location.uri.clone(),\n                     fix: sub.suggested_fix.clone(),\n@@ -476,7 +471,7 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n                         code: code.clone().map(lsp_types::NumberOrString::String),\n                         code_description: code_description.clone(),\n                         source: Some(source.clone()),\n-                        message,\n+                        message: sub.related.message.clone(),\n                         related_information: Some(vec![back_ref.clone()]),\n                         tags: None, // don't apply modifiers again\n                         data: None,"}, {"sha": "520aa7d1dd4874d5370bfaeed310d796e10cb3ae", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/88515b981db65aa994e23ed5a2a9160f0c10613b/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88515b981db65aa994e23ed5a2a9160f0c10613b/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=88515b981db65aa994e23ed5a2a9160f0c10613b", "patch": "@@ -1318,7 +1318,8 @@ pub(crate) fn publish_diagnostics(\n                 .unwrap(),\n             }),\n             source: Some(\"rust-analyzer\".to_string()),\n-            message: d.message,\n+            // https://github.com/rust-lang/rust-analyzer/issues/11404\n+            message: if !d.message.is_empty() { d.message } else { \" \".to_string() },\n             related_information: None,\n             tags: if d.unused { Some(vec![DiagnosticTag::UNNECESSARY]) } else { None },\n             data: None,"}, {"sha": "0579cae4ed0d9fcb8a7f0e0d2d372da67806a37a", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/88515b981db65aa994e23ed5a2a9160f0c10613b/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88515b981db65aa994e23ed5a2a9160f0c10613b/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=88515b981db65aa994e23ed5a2a9160f0c10613b", "patch": "@@ -487,7 +487,21 @@ impl GlobalState {\n                 }\n \n                 let url = file_id_to_url(&self.vfs.read().0, file_id);\n-                let diagnostics = self.diagnostics.diagnostics_for(file_id).cloned().collect();\n+                let mut diagnostics =\n+                    self.diagnostics.diagnostics_for(file_id).cloned().collect::<Vec<_>>();\n+                // https://github.com/rust-lang/rust-analyzer/issues/11404\n+                for d in &mut diagnostics {\n+                    if d.message.is_empty() {\n+                        d.message = \" \".to_string();\n+                    }\n+                    if let Some(rds) = d.related_information.as_mut() {\n+                        for rd in rds {\n+                            if rd.message.is_empty() {\n+                                rd.message = \" \".to_string();\n+                            }\n+                        }\n+                    }\n+                }\n                 let version = from_proto::vfs_path(&url)\n                     .map(|path| self.mem_docs.get(&path).map(|it| it.version))\n                     .unwrap_or_default();"}]}