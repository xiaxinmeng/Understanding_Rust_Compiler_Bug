{"sha": "8094e2e5aee1dd1adea235e4033466e058c90321", "node_id": "C_kwDOAAsO6NoAKDgwOTRlMmU1YWVlMWRkMWFkZWEyMzVlNDAzMzQ2NmUwNThjOTAzMjE", "commit": {"author": {"name": "Yuki Okushi", "email": "yuki.okushi@huawei.com", "date": "2021-10-20T19:56:36Z"}, "committer": {"name": "Yuki Okushi", "email": "yuki.okushi@huawei.com", "date": "2021-10-26T02:02:51Z"}, "message": "Properly check `target_features` not to trigger an assertion", "tree": {"sha": "a0b9d25eea18689ff408153715d4885c640e245c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0b9d25eea18689ff408153715d4885c640e245c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8094e2e5aee1dd1adea235e4033466e058c90321", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8094e2e5aee1dd1adea235e4033466e058c90321", "html_url": "https://github.com/rust-lang/rust/commit/8094e2e5aee1dd1adea235e4033466e058c90321", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8094e2e5aee1dd1adea235e4033466e058c90321/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce9faca6310bab58fd145ed95e796eb84d287789", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce9faca6310bab58fd145ed95e796eb84d287789", "html_url": "https://github.com/rust-lang/rust/commit/ce9faca6310bab58fd145ed95e796eb84d287789"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "7c3ed3c5ee9db8d68b0aea669111bd1e9216ad8f", "filename": "src/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8094e2e5aee1dd1adea235e4033466e058c90321/src%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8094e2e5aee1dd1adea235e4033466e058c90321/src%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fasm.rs?ref=8094e2e5aee1dd1adea235e4033466e058c90321", "patch": "@@ -118,7 +118,7 @@ impl<'a, 'gcc, 'tcx> AsmBuilderMethods<'tcx> for Builder<'a, 'gcc, 'tcx> {\n         true\n     }\n \n-    fn codegen_inline_asm(&mut self, template: &[InlineAsmTemplatePiece], rust_operands: &[InlineAsmOperandRef<'tcx, Self>], options: InlineAsmOptions, _span: &[Span]) {\n+    fn codegen_inline_asm(&mut self, template: &[InlineAsmTemplatePiece], rust_operands: &[InlineAsmOperandRef<'tcx, Self>], options: InlineAsmOptions, _span: &[Span], _instance: Instance<'_>) {\n         let asm_arch = self.tcx.sess.asm_arch.unwrap();\n         let is_x86 = matches!(asm_arch, InlineAsmArch::X86 | InlineAsmArch::X86_64);\n         let att_dialect = is_x86 && options.contains(InlineAsmOptions::ATT_SYNTAX);"}]}