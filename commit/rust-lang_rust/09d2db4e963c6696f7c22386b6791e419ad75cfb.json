{"sha": "09d2db4e963c6696f7c22386b6791e419ad75cfb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ZDJkYjRlOTYzYzY2OTZmN2MyMjM4NmI2NzkxZTQxOWFkNzVjZmI=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2018-03-06T18:27:19Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2018-05-01T07:44:44Z"}, "message": "Rework force-frame-pointer\n\nThis reworks the force-frame-pointer PR to explicitly only consider the\nvalue of the flag if it is provided, and use a target default otherwise.\n\nSomething that was tried but not kept was renaming the flag to\n`frame-pointer`, because for flag `frame-pointer=no`, there is no\nguarante, that LLVM will elide *all* the frame pointers; oposite of what\nthe literal reading of the flag would suggest.", "tree": {"sha": "face2460d8fc7b217c6ce884bfd639a1711cb58a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/face2460d8fc7b217c6ce884bfd639a1711cb58a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09d2db4e963c6696f7c22386b6791e419ad75cfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09d2db4e963c6696f7c22386b6791e419ad75cfb", "html_url": "https://github.com/rust-lang/rust/commit/09d2db4e963c6696f7c22386b6791e419ad75cfb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09d2db4e963c6696f7c22386b6791e419ad75cfb/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b800c231f45fcd823a3e958bb942cd620ceb3e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b800c231f45fcd823a3e958bb942cd620ceb3e0", "html_url": "https://github.com/rust-lang/rust/commit/5b800c231f45fcd823a3e958bb942cd620ceb3e0"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "59b40e9e2dc56b489ed986e1a0d54c45f4824394", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/09d2db4e963c6696f7c22386b6791e419ad75cfb/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09d2db4e963c6696f7c22386b6791e419ad75cfb/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=09d2db4e963c6696f7c22386b6791e419ad75cfb", "patch": "@@ -1053,8 +1053,8 @@ options! {CodegenOptions, CodegenSetter, basic_codegen_options,\n          2 = full debug info with variable and type information\"),\n     opt_level: Option<String> = (None, parse_opt_string, [TRACKED],\n         \"optimize with possible levels 0-3, s, or z\"),\n-    force_frame_pointers: bool = (false, parse_bool, [TRACKED],\n-        \"force frame pointers to be used\"),\n+    force_frame_pointers: Option<bool> = (None, parse_opt_bool, [TRACKED],\n+        \"force use of the frame pointers\"),\n     debug_assertions: Option<bool> = (None, parse_opt_bool, [TRACKED],\n         \"explicitly enable the cfg(debug_assertions) directive\"),\n     inline_threshold: Option<usize> = (None, parse_opt_uint, [TRACKED],\n@@ -2968,7 +2968,7 @@ mod tests {\n         assert!(reference.dep_tracking_hash() != opts.dep_tracking_hash());\n \n         opts = reference.clone();\n-        opts.cg.force_frame_pointers = true;\n+        opts.cg.force_frame_pointers = Some(false);\n         assert!(reference.dep_tracking_hash() != opts.dep_tracking_hash());\n \n         opts = reference.clone();"}, {"sha": "2ab72ba20bf4fc4b321ed9bd76b144e60efea2ea", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/09d2db4e963c6696f7c22386b6791e419ad75cfb/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09d2db4e963c6696f7c22386b6791e419ad75cfb/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=09d2db4e963c6696f7c22386b6791e419ad75cfb", "patch": "@@ -658,8 +658,11 @@ impl Session {\n     }\n \n     pub fn must_not_eliminate_frame_pointers(&self) -> bool {\n-        self.opts.debuginfo != DebugInfoLevel::NoDebugInfo\n-            || !self.target.target.options.eliminate_frame_pointer\n+        if let Some(x) = self.opts.cg.force_frame_pointers {\n+            x\n+        } else {\n+            !self.target.target.options.eliminate_frame_pointer\n+        }\n     }\n \n     /// Returns the symbol name for the registrar function,"}, {"sha": "f70e366719882a3112e2606f82c87c389d5c3ce2", "filename": "src/test/codegen/force-frame-pointers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09d2db4e963c6696f7c22386b6791e419ad75cfb/src%2Ftest%2Fcodegen%2Fforce-frame-pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09d2db4e963c6696f7c22386b6791e419ad75cfb/src%2Ftest%2Fcodegen%2Fforce-frame-pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fforce-frame-pointers.rs?ref=09d2db4e963c6696f7c22386b6791e419ad75cfb", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n //\n-// compile-flags: -C no-prepopulate-passes -C force-frame-pointers\n+// compile-flags: -C no-prepopulate-passes -C force-frame-pointers=y\n \n #![crate_type=\"lib\"]\n "}]}