{"sha": "d367cdf1d9c641576aae9e612acc126ae6573b66", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNjdjZGYxZDljNjQxNTc2YWFlOWU2MTJhY2MxMjZhZTY1NzNiNjY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-17T07:10:25Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-17T07:10:25Z"}, "message": "rustdoc: Write headers for modules", "tree": {"sha": "7e50f52a58f0fe2f2b4eb195cf4bf9795e7c5f9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e50f52a58f0fe2f2b4eb195cf4bf9795e7c5f9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d367cdf1d9c641576aae9e612acc126ae6573b66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d367cdf1d9c641576aae9e612acc126ae6573b66", "html_url": "https://github.com/rust-lang/rust/commit/d367cdf1d9c641576aae9e612acc126ae6573b66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d367cdf1d9c641576aae9e612acc126ae6573b66/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8840cbee603786107aa627eed4edcfc1c644b93", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8840cbee603786107aa627eed4edcfc1c644b93", "html_url": "https://github.com/rust-lang/rust/commit/b8840cbee603786107aa627eed4edcfc1c644b93"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "fecfbed8e3622bca4fa8714988a824fdd6ee28a5", "filename": "src/rustdoc/gen.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d367cdf1d9c641576aae9e612acc126ae6573b66/src%2Frustdoc%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d367cdf1d9c641576aae9e612acc126ae6573b66/src%2Frustdoc%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fgen.rs?ref=d367cdf1d9c641576aae9e612acc126ae6573b66", "patch": "@@ -50,6 +50,7 @@ fn write_mod(\n     ctxt: ctxt,\n     moddoc: doc::moddoc\n ) {\n+    write_header(ctxt, #fmt(\"Module `%s`\", moddoc.name));\n     write_mod_contents(ctxt, moddoc);\n }\n \n@@ -140,4 +141,13 @@ mod tests {\n         let markdown = write_markdown_str(doc);\n         assert str::contains(markdown, \"## Function `func`\");\n     }\n+\n+    #[test]\n+    fn write_markdown_should_write_mod_headers() {\n+        let source = \"mod moo { }\";\n+        let ast = parse::from_str(source);\n+        let doc = extract::extract(ast, \"\");\n+        let markdown = write_markdown_str(doc);\n+        assert str::contains(markdown, \"## Module `moo`\");\n+    }\n }\n\\ No newline at end of file"}]}