{"sha": "12d4d12fef4f9024ffcc8eb5fef11f1a21074cd7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyZDRkMTJmZWY0ZjkwMjRmZmNjOGViNWZlZjExZjFhMjEwNzRjZDc=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-06-13T19:57:49Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-06-15T21:48:31Z"}, "message": "implement Error trait for error structs added in allocator API.", "tree": {"sha": "cbea264acfb3a0d9eba389f1476ec19eebad15bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbea264acfb3a0d9eba389f1476ec19eebad15bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12d4d12fef4f9024ffcc8eb5fef11f1a21074cd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12d4d12fef4f9024ffcc8eb5fef11f1a21074cd7", "html_url": "https://github.com/rust-lang/rust/commit/12d4d12fef4f9024ffcc8eb5fef11f1a21074cd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12d4d12fef4f9024ffcc8eb5fef11f1a21074cd7/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57ab9e7e7c481427a8d59e16b932fbd1e5fe4c02", "url": "https://api.github.com/repos/rust-lang/rust/commits/57ab9e7e7c481427a8d59e16b932fbd1e5fe4c02", "html_url": "https://github.com/rust-lang/rust/commit/57ab9e7e7c481427a8d59e16b932fbd1e5fe4c02"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "752acbd0b45b3effc4ab493b3ab742903156c74d", "filename": "src/liballoc/allocator.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/12d4d12fef4f9024ffcc8eb5fef11f1a21074cd7/src%2Fliballoc%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12d4d12fef4f9024ffcc8eb5fef11f1a21074cd7/src%2Fliballoc%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fallocator.rs?ref=12d4d12fef4f9024ffcc8eb5fef11f1a21074cd7", "patch": "@@ -16,6 +16,7 @@\n             issue = \"27700\")]\n \n use core::cmp;\n+use core::fmt;\n use core::mem;\n use core::usize;\n use core::ptr::{self, Unique};\n@@ -335,6 +336,19 @@ impl AllocErr {\n     pub fn is_request_unsupported(&self) -> bool {\n         if let AllocErr::Unsupported { .. } = *self { true } else { false }\n     }\n+    pub fn description(&self) -> &str {\n+        match *self {\n+            AllocErr::Exhausted { .. } => \"allocator memory exhausted\",\n+            AllocErr::Unsupported { .. } => \"unsupported allocator request\",\n+        }\n+    }\n+}\n+\n+// (we need this for downstream impl of trait Error)\n+impl fmt::Display for AllocErr {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        write!(f, \"{}\", self.description())\n+    }\n }\n \n /// The `CannotReallocInPlace` error is used when `grow_in_place` or\n@@ -343,6 +357,20 @@ impl AllocErr {\n #[derive(Clone, PartialEq, Eq, Debug)]\n pub struct CannotReallocInPlace;\n \n+impl CannotReallocInPlace {\n+    pub fn description(&self) -> &str {\n+        \"cannot reallocate allocator's memory in place\"\n+    }\n+}\n+\n+// (we need this for downstream impl of trait Error)\n+impl fmt::Display for CannotReallocInPlace {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        write!(f, \"{}\", self.description())\n+    }\n+}\n+\n+/// An implementation of `Allocator` can allocate, reallocate, and\n /// An implementation of `Alloc` can allocate, reallocate, and\n /// deallocate arbitrary blocks of data described via `Layout`.\n ///"}, {"sha": "3d203429e7b203562bff433938372594c5922eca", "filename": "src/libstd/error.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/12d4d12fef4f9024ffcc8eb5fef11f1a21074cd7/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12d4d12fef4f9024ffcc8eb5fef11f1a21074cd7/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=12d4d12fef4f9024ffcc8eb5fef11f1a21074cd7", "patch": "@@ -51,6 +51,7 @@\n // coherence challenge (e.g., specialization, neg impls, etc) we can\n // reconsider what crate these items belong in.\n \n+use alloc::allocator;\n use any::TypeId;\n use cell;\n use char;\n@@ -221,6 +222,24 @@ impl Error for ! {\n     fn description(&self) -> &str { *self }\n }\n \n+#[unstable(feature = \"allocator_api\",\n+           reason = \"the precise API and guarantees it provides may be tweaked.\",\n+           issue = \"27700\")]\n+impl Error for allocator::AllocErr {\n+    fn description(&self) -> &str {\n+        allocator::AllocErr::description(self)\n+    }\n+}\n+\n+#[unstable(feature = \"allocator_api\",\n+           reason = \"the precise API and guarantees it provides may be tweaked.\",\n+           issue = \"27700\")]\n+impl Error for allocator::CannotReallocInPlace {\n+    fn description(&self) -> &str {\n+        allocator::CannotReallocInPlace::description(self)\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Error for str::ParseBoolError {\n     fn description(&self) -> &str { \"failed to parse bool\" }"}, {"sha": "6938aefb5229054e3ccdff27fdc10d4deeba054a", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/12d4d12fef4f9024ffcc8eb5fef11f1a21074cd7/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12d4d12fef4f9024ffcc8eb5fef11f1a21074cd7/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=12d4d12fef4f9024ffcc8eb5fef11f1a21074cd7", "patch": "@@ -245,6 +245,7 @@\n // std is implemented with unstable features, many of which are internal\n // compiler details that will never be stable\n #![feature(alloc)]\n+#![feature(allocator_api)]\n #![feature(allow_internal_unstable)]\n #![feature(asm)]\n #![feature(associated_consts)]"}]}