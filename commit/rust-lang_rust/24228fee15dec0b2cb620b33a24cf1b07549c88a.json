{"sha": "24228fee15dec0b2cb620b33a24cf1b07549c88a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0MjI4ZmVlMTVkZWMwYjJjYjYyMGIzM2EyNGNmMWIwNzU0OWM4OGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-16T14:20:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-16T14:20:25Z"}, "message": "Auto merge of #29020 - goyox86:goyox86/rustfmting-libarena, r=nrc\n\nHi Rustaceans!\r\n\r\nThis is the result of running latest rustfmt on libarena!\r\n\r\n//cc @nrc", "tree": {"sha": "ef745b3c71cf0e109e1a945ea22def03f7c70381", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef745b3c71cf0e109e1a945ea22def03f7c70381"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24228fee15dec0b2cb620b33a24cf1b07549c88a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24228fee15dec0b2cb620b33a24cf1b07549c88a", "html_url": "https://github.com/rust-lang/rust/commit/24228fee15dec0b2cb620b33a24cf1b07549c88a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24228fee15dec0b2cb620b33a24cf1b07549c88a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05cfd72ed1934c92af08dbcb66fd1af6b1298721", "url": "https://api.github.com/repos/rust-lang/rust/commits/05cfd72ed1934c92af08dbcb66fd1af6b1298721", "html_url": "https://github.com/rust-lang/rust/commit/05cfd72ed1934c92af08dbcb66fd1af6b1298721"}, {"sha": "e7be2c3e99d3bf7287906c4c35c6822784924b10", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7be2c3e99d3bf7287906c4c35c6822784924b10", "html_url": "https://github.com/rust-lang/rust/commit/e7be2c3e99d3bf7287906c4c35c6822784924b10"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "5bc1c44e1b1fb11281cb64f1ec38a710e57da10c", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/24228fee15dec0b2cb620b33a24cf1b07549c88a/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24228fee15dec0b2cb620b33a24cf1b07549c88a/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=24228fee15dec0b2cb620b33a24cf1b07549c88a", "patch": "@@ -245,7 +245,9 @@ impl<'longer_than_self> Arena<'longer_than_self> {\n     }\n \n     #[inline]\n-    fn alloc_copy<T, F>(&self, op: F) -> &mut T where F: FnOnce() -> T {\n+    fn alloc_copy<T, F>(&self, op: F) -> &mut T\n+        where F: FnOnce() -> T\n+    {\n         unsafe {\n             let ptr = self.alloc_copy_inner(mem::size_of::<T>(), mem::align_of::<T>());\n             let ptr = ptr as *mut T;\n@@ -296,7 +298,9 @@ impl<'longer_than_self> Arena<'longer_than_self> {\n     }\n \n     #[inline]\n-    fn alloc_noncopy<T, F>(&self, op: F) -> &mut T where F: FnOnce() -> T {\n+    fn alloc_noncopy<T, F>(&self, op: F) -> &mut T\n+        where F: FnOnce() -> T\n+    {\n         unsafe {\n             let tydesc = get_tydesc::<T>();\n             let (ty_ptr, ptr) = self.alloc_noncopy_inner(mem::size_of::<T>(), mem::align_of::<T>());\n@@ -318,7 +322,9 @@ impl<'longer_than_self> Arena<'longer_than_self> {\n     /// Allocates a new item in the arena, using `op` to initialize the value,\n     /// and returns a reference to it.\n     #[inline]\n-    pub fn alloc<T:'longer_than_self, F>(&self, op: F) -> &mut T where F: FnOnce() -> T {\n+    pub fn alloc<T: 'longer_than_self, F>(&self, op: F) -> &mut T\n+        where F: FnOnce() -> T\n+    {\n         unsafe {\n             if intrinsics::needs_drop::<T>() {\n                 self.alloc_noncopy(op)"}]}