{"sha": "8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiYzQzZWQ1OWQyNGMwMTRjY2ZlNmVkNjNjNmE5YWZkNWUzYjgxMWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-30T14:18:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-30T14:18:28Z"}, "message": "Auto merge of #29929 - michaelwoerister:mir-repr-to-librustc, r=nikomatsakis\n\nThis is done mostly so that we can refer to MIR types in csearch and other metadata related area.\n\nHeads up, @rust-lang/compiler!\n\nr? @nikomatsakis", "tree": {"sha": "f26490fe174d00048b51a35415d394b1aa9aebbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f26490fe174d00048b51a35415d394b1aa9aebbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "html_url": "https://github.com/rust-lang/rust/commit/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd2626cc3f5c3652b5a9b4d3b7f850ff2e8e8590", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd2626cc3f5c3652b5a9b4d3b7f850ff2e8e8590", "html_url": "https://github.com/rust-lang/rust/commit/fd2626cc3f5c3652b5a9b4d3b7f850ff2e8e8590"}, {"sha": "f28a4e93b44aeaacdc9c03d50f6c9986aa998ba2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f28a4e93b44aeaacdc9c03d50f6c9986aa998ba2", "html_url": "https://github.com/rust-lang/rust/commit/f28a4e93b44aeaacdc9c03d50f6c9986aa998ba2"}], "stats": {"total": 137, "additions": 73, "deletions": 64}, "files": [{"sha": "8b69767eee0e0a85626d1b61dd6242bdf1bfb13d", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -136,6 +136,12 @@ pub mod middle {\n     pub mod weak_lang_items;\n }\n \n+pub mod mir {\n+    pub mod repr;\n+    pub mod tcx;\n+    pub mod visit;\n+}\n+\n pub mod session;\n \n pub mod lint;"}, {"sha": "d5d8da248e0811359653f68d91d80a9487de227d", "filename": "src/librustc/mir/repr.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc%2Fmir%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc%2Fmir%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Frepr.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use rustc::middle::const_eval::ConstVal;\n-use rustc::middle::def_id::DefId;\n-use rustc::middle::subst::Substs;\n-use rustc::middle::ty::{AdtDef, ClosureSubsts, FnOutput, Region, Ty};\n+use middle::const_eval::ConstVal;\n+use middle::def_id::DefId;\n+use middle::subst::Substs;\n+use middle::ty::{AdtDef, ClosureSubsts, FnOutput, Region, Ty};\n use rustc_back::slice;\n use rustc_front::hir::InlineAsm;\n use syntax::ast::Name;", "previous_filename": "src/librustc_mir/repr.rs"}, {"sha": "45cc0b8b413ea93641b6785883805890267fe0de", "filename": "src/librustc/mir/tcx.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc%2Fmir%2Ftcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc%2Fmir%2Ftcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Ftcx.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -13,9 +13,9 @@\n  * building is complete.\n  */\n \n-use repr::*;\n-use rustc::middle::subst::Substs;\n-use rustc::middle::ty::{self, AdtDef, Ty};\n+use mir::repr::*;\n+use middle::subst::Substs;\n+use middle::ty::{self, AdtDef, Ty};\n use rustc_front::hir;\n \n #[derive(Copy, Clone, Debug)]", "previous_filename": "src/librustc_mir/tcx/mod.rs"}, {"sha": "ac4f54b4b49627ff05ee7692e73689ea62e889c9", "filename": "src/librustc/mir/visit.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fvisit.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use rustc::middle::ty::Region;\n-use repr::*;\n+use middle::ty::Region;\n+use mir::repr::*;\n \n pub trait Visitor<'tcx> {\n     // Override these, and call `self.super_xxx` to revert back to the", "previous_filename": "src/librustc_mir/visit.rs"}, {"sha": "5f7f87cb86234ecbe7eb73c5dda309b693d716ec", "filename": "src/librustc_mir/build/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fblock.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -10,7 +10,7 @@\n \n use build::{BlockAnd, Builder};\n use hair::*;\n-use repr::*;\n+use rustc::mir::repr::*;\n use rustc_front::hir;\n \n impl<'a,'tcx> Builder<'a,'tcx> {"}, {"sha": "d28724c30aaa0b79730f8dbc7ef375bb11cc3760", "filename": "src/librustc_mir/build/cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fcfg.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -14,7 +14,7 @@\n //! Routines for manipulating the control-flow graph.\n \n use build::CFG;\n-use repr::*;\n+use rustc::mir::repr::*;\n use syntax::codemap::Span;\n \n impl<'tcx> CFG<'tcx> {"}, {"sha": "6f186b8ada426f5ed909861e83639f64e5cadc2a", "filename": "src/librustc_mir/build/expr/as_constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_constant.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -12,7 +12,7 @@\n \n use build::Builder;\n use hair::*;\n-use repr::*;\n+use rustc::mir::repr::*;\n \n impl<'a,'tcx> Builder<'a,'tcx> {\n     /// Compile `expr`, yielding a compile-time constant. Assumes that"}, {"sha": "697799efd143bee9343acd9738413045bb7470f9", "filename": "src/librustc_mir/build/expr/as_lvalue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_lvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_lvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_lvalue.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -10,10 +10,10 @@\n \n //! See docs in build/expr/mod.rs\n \n-use build::{BlockAnd, Builder};\n+use build::{BlockAnd, BlockAndExtension, Builder};\n use build::expr::category::Category;\n use hair::*;\n-use repr::*;\n+use rustc::mir::repr::*;\n \n impl<'a,'tcx> Builder<'a,'tcx> {\n     /// Compile `expr`, yielding an lvalue that we can move from etc."}, {"sha": "7738ebca26b47e17caf5667232bb827ce8e3737d", "filename": "src/librustc_mir/build/expr/as_operand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_operand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_operand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_operand.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -10,10 +10,10 @@\n \n //! See docs in build/expr/mod.rs\n \n-use build::{BlockAnd, Builder};\n+use build::{BlockAnd, BlockAndExtension, Builder};\n use build::expr::category::Category;\n use hair::*;\n-use repr::*;\n+use rustc::mir::repr::*;\n \n impl<'a,'tcx> Builder<'a,'tcx> {\n     /// Compile `expr` into a value that can be used as an operand."}, {"sha": "7f69b9a521f11205a9532f529f780940f9d78f12", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -12,10 +12,10 @@\n \n use rustc_data_structures::fnv::FnvHashMap;\n \n-use build::{BlockAnd, Builder};\n+use build::{BlockAnd, BlockAndExtension, Builder};\n use build::expr::category::{Category, RvalueFunc};\n use hair::*;\n-use repr::*;\n+use rustc::mir::repr::*;\n \n impl<'a,'tcx> Builder<'a,'tcx> {\n     /// Compile `expr`, yielding an rvalue."}, {"sha": "53f8090ad0f2f843c442c60dbb9ed9695bc731e1", "filename": "src/librustc_mir/build/expr/as_temp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_temp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_temp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_temp.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -10,10 +10,10 @@\n \n //! See docs in build/expr/mod.rs\n \n-use build::{BlockAnd, Builder};\n+use build::{BlockAnd, BlockAndExtension, Builder};\n use build::expr::category::Category;\n use hair::*;\n-use repr::*;\n+use rustc::mir::repr::*;\n \n impl<'a,'tcx> Builder<'a,'tcx> {\n     /// Compile `expr` into a fresh temporary. This is used when building"}, {"sha": "ac3e87e6b629a340bffa2f21eaec4117464f5300", "filename": "src/librustc_mir/build/expr/into.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -10,12 +10,12 @@\n \n //! See docs in build/expr/mod.rs\n \n-use build::{BlockAnd, Builder};\n+use build::{BlockAnd, BlockAndExtension, Builder};\n use build::expr::category::{Category, RvalueFunc};\n use build::scope::LoopScope;\n use hair::*;\n-use repr::*;\n use rustc::middle::region::CodeExtent;\n+use rustc::mir::repr::*;\n use syntax::codemap::Span;\n \n impl<'a,'tcx> Builder<'a,'tcx> {"}, {"sha": "66d6c49ef12aaf3b49b0eb5d49ae9a1152fb029b", "filename": "src/librustc_mir/build/into.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Finto.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -14,9 +14,9 @@\n //! wrapped up as expressions (e.g. blocks). To make this ergonomic, we use this\n //! latter `EvalInto` trait.\n \n-use build::{BlockAnd, Builder};\n+use build::{BlockAnd, BlockAndExtension, Builder};\n use hair::*;\n-use repr::*;\n+use rustc::mir::repr::*;\n \n pub trait EvalInto<'tcx> {\n     fn eval_into<'a>(self,"}, {"sha": "0248f2fc49adbf3a3211443a3fc6bef2e6199164", "filename": "src/librustc_mir/build/matches/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -13,12 +13,12 @@\n //! includes the high-level algorithm, the submodules contain the\n //! details.\n \n-use build::{BlockAnd, Builder};\n-use repr::*;\n+use build::{BlockAnd, BlockAndExtension, Builder};\n use rustc_data_structures::fnv::FnvHashMap;\n use rustc::middle::const_eval::ConstVal;\n use rustc::middle::region::CodeExtent;\n use rustc::middle::ty::{AdtDef, Ty};\n+use rustc::mir::repr::*;\n use hair::*;\n use syntax::ast::{Name, NodeId};\n use syntax::codemap::Span;"}, {"sha": "2c8e1c1ccf673e9d44f5e7861552d6b86a0f2ca1", "filename": "src/librustc_mir/build/matches/simplify.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fsimplify.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -22,10 +22,10 @@\n //! sort of test: for example, testing which variant an enum is, or\n //! testing a value against a constant.\n \n-use build::{BlockAnd, Builder};\n+use build::{BlockAnd, BlockAndExtension, Builder};\n use build::matches::{Binding, MatchPair, Candidate};\n use hair::*;\n-use repr::*;\n+use rustc::mir::repr::*;\n \n use std::mem;\n "}, {"sha": "968514cd05c13dc99f23742f6dbde2bc3f627700", "filename": "src/librustc_mir/build/matches/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Ftest.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -18,10 +18,10 @@\n use build::Builder;\n use build::matches::{Candidate, MatchPair, Test, TestKind};\n use hair::*;\n-use repr::*;\n use rustc_data_structures::fnv::FnvHashMap;\n use rustc::middle::const_eval::ConstVal;\n use rustc::middle::ty::{self, Ty};\n+use rustc::mir::repr::*;\n use syntax::codemap::Span;\n \n impl<'a,'tcx> Builder<'a,'tcx> {"}, {"sha": "dbb00a13cd3b4a75c92312159d4e144f7a293b8f", "filename": "src/librustc_mir/build/matches/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Futil.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use build::{BlockAnd, Builder};\n+use build::{BlockAnd, BlockAndExtension, Builder};\n use build::matches::MatchPair;\n use hair::*;\n-use repr::*;\n+use rustc::mir::repr::*;\n use std::u32;\n \n impl<'a,'tcx> Builder<'a,'tcx> {"}, {"sha": "bdcb183c0acfb223e041431aba9a4d9b82fe6a29", "filename": "src/librustc_mir/build/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmisc.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -13,8 +13,8 @@\n \n use build::Builder;\n use hair::*;\n-use repr::*;\n use rustc::middle::ty::Ty;\n+use rustc::mir::repr::*;\n use std::u32;\n use syntax::codemap::Span;\n "}, {"sha": "45368b5a68d22f84bea638ec8cf65c6ce34d3a14", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -11,9 +11,10 @@\n use hair::cx::Cx;\n use rustc::middle::region::CodeExtent;\n use rustc::middle::ty::{FnOutput, Ty};\n+use rustc::mir::repr::*;\n use rustc_data_structures::fnv::FnvHashMap;\n use rustc_front::hir;\n-use repr::*;\n+\n use syntax::ast;\n use syntax::codemap::Span;\n \n@@ -41,7 +42,12 @@ struct CFG<'tcx> {\n #[must_use] // if you don't use one of these results, you're leaving a dangling edge\n struct BlockAnd<T>(BasicBlock, T);\n \n-impl BasicBlock {\n+trait BlockAndExtension {\n+    fn and<T>(self, v: T) -> BlockAnd<T>;\n+    fn unit(self) -> BlockAnd<()>;\n+}\n+\n+impl BlockAndExtension for BasicBlock {\n     fn and<T>(self, v: T) -> BlockAnd<T> {\n         BlockAnd(self, v)\n     }"}, {"sha": "4d136d265e5f4e1b5277634e369427973fdc8c7a", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -86,10 +86,10 @@ should go to.\n \n */\n \n-use build::{BlockAnd, Builder, CFG};\n-use repr::*;\n+use build::{BlockAnd, BlockAndExtension, Builder, CFG};\n use rustc::middle::region::CodeExtent;\n use rustc::middle::ty::Ty;\n+use rustc::mir::repr::*;\n use syntax::codemap::Span;\n \n pub struct Scope<'tcx> {"}, {"sha": "c70b22893ae2e1a35429a3b2e5d8504f067a6eda", "filename": "src/librustc_mir/build/stmt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fbuild%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fstmt.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -8,9 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use build::{BlockAnd, Builder};\n+use build::{BlockAnd, BlockAndExtension, Builder};\n use hair::*;\n-use repr::*;\n+use rustc::mir::repr::*;\n \n impl<'a,'tcx> Builder<'a,'tcx> {\n     pub fn stmts(&mut self, mut block: BasicBlock, stmts: Vec<StmtRef<'tcx>>) -> BlockAnd<()> {"}, {"sha": "f8cec83dc31cc797dea516074614621df2da2894", "filename": "src/librustc_mir/graphviz/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fgraphviz%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fgraphviz%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fgraphviz%2Fmod.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use dot;\n-use repr::*;\n+use rustc::mir::repr::*;\n use std::borrow::IntoCow;\n \n #[derive(Copy, Clone, PartialEq, Eq)]"}, {"sha": "24091d7dc37c6bcc25cc94944e6a26e55e279e2c", "filename": "src/librustc_mir/hair/cx/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use hair::*;\n-use repr::*;\n use rustc_data_structures::fnv::FnvHashMap;\n use hair::cx::Cx;\n use hair::cx::block;\n@@ -19,6 +18,7 @@ use rustc::middle::def;\n use rustc::middle::region::CodeExtent;\n use rustc::middle::pat_util;\n use rustc::middle::ty::{self, VariantDef, Ty};\n+use rustc::mir::repr::*;\n use rustc_front::hir;\n use rustc_front::util as hir_util;\n use syntax::ext::mtwt;"}, {"sha": "8c19e620e46ac56a0be42df6bdba1814295617fb", "filename": "src/librustc_mir/hair/cx/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -16,7 +16,7 @@\n  */\n \n use hair::*;\n-use repr::*;\n+use rustc::mir::repr::*;\n \n use rustc::middle::const_eval::{self, ConstVal};\n use rustc::middle::def_id::DefId;"}, {"sha": "bea7950c33a4150ede06fe80547ca52ea7af885e", "filename": "src/librustc_mir/hair/cx/pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fhair%2Fcx%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fhair%2Fcx%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fpattern.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -10,13 +10,13 @@\n \n use hair::*;\n use hair::cx::Cx;\n-use repr::*;\n use rustc_data_structures::fnv::FnvHashMap;\n use rustc::middle::const_eval;\n use rustc::middle::def;\n use rustc::middle::pat_util::{pat_is_resolved_const, pat_is_binding};\n use rustc::middle::subst::Substs;\n use rustc::middle::ty::{self, Ty};\n+use rustc::mir::repr::*;\n use rustc_front::hir;\n use syntax::ast;\n use syntax::ext::mtwt;"}, {"sha": "9a774ff3f57125902d72eae3323516286526429f", "filename": "src/librustc_mir/hair/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fhair%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fhair%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fmod.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -14,7 +14,7 @@\n //! unit-tested and separated from the Rust source and compiler data\n //! structures.\n \n-use repr::{BinOp, BorrowKind, Field, Literal, Mutability, UnOp};\n+use rustc::mir::repr::{BinOp, BorrowKind, Field, Literal, Mutability, UnOp};\n use rustc::middle::def_id::DefId;\n use rustc::middle::region::CodeExtent;\n use rustc::middle::subst::Substs;"}, {"sha": "710d5ba4b43684d1af0dd32aff4fae439f857f36", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -32,9 +32,6 @@ extern crate syntax;\n pub mod build;\n pub mod mir_map;\n mod hair;\n-pub mod repr;\n mod graphviz;\n pub mod transform;\n-pub mod tcx;\n-pub mod visit;\n "}, {"sha": "39a315f3c41c714fcb5028de3d23fde86341912e", "filename": "src/librustc_mir/mir_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fmir_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Fmir_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmir_map.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -23,7 +23,7 @@ extern crate rustc_front;\n use build;\n use dot;\n use transform::*;\n-use repr::Mir;\n+use rustc::mir::repr::Mir;\n use hair::cx::Cx;\n use std::fs::File;\n "}, {"sha": "1eb3bfd7e02299daeebdf575b1419adebd493c4e", "filename": "src/librustc_mir/transform/erase_regions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -12,8 +12,8 @@\n //! We want to do this once just before trans, so trans does not have to take\n //! care erasing regions all over the place.\n \n-use repr::*;\n use rustc::middle::ty;\n+use rustc::mir::repr::*;\n use transform::MirPass;\n use mir_map::MirMap;\n "}, {"sha": "174718f7b1672a1dbd09b6223dd22a4c4012a564", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -12,7 +12,7 @@ pub mod simplify_cfg;\n pub mod erase_regions;\n mod util;\n \n-use repr::Mir;\n+use rustc::mir::repr::Mir;\n \n pub trait MirPass<'tcx> {\n     fn run_on_mir(&mut self, mir: &mut Mir<'tcx>);"}, {"sha": "558276a13a8b8f033f4157a7c58b8cc7cca280ed", "filename": "src/librustc_mir/transform/simplify_cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Ftransform%2Fsimplify_cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Ftransform%2Fsimplify_cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify_cfg.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use repr::*;\n use rustc::middle::const_eval::ConstVal;\n+use rustc::mir::repr::*;\n use std::mem;\n use transform::util;\n use transform::MirPass;"}, {"sha": "951026945448527b40afda2e515e95e6e4524cca", "filename": "src/librustc_mir/transform/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Ftransform%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_mir%2Ftransform%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Futil.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use repr::*;\n+use rustc::mir::repr::*;\n \n /// Update basic block ids in all terminators using the given replacements,\n /// useful e.g. after removal of several basic blocks to update all terminators"}, {"sha": "fa500ab93552c97a031fa725db158754ed4d8522", "filename": "src/librustc_trans/trans/common.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -40,7 +40,7 @@ use middle::traits;\n use middle::ty::{self, HasTypeFlags, Ty};\n use middle::ty::fold::{TypeFolder, TypeFoldable};\n use rustc_front::hir;\n-use rustc_mir::repr::Mir;\n+use rustc::mir::repr::Mir;\n use util::nodemap::{FnvHashMap, NodeMap};\n \n use arena::TypedArena;\n@@ -1223,4 +1223,4 @@ pub fn get_static_val<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n     } else {\n         base::get_extern_const(ccx, did, ty)\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "9d4c7663cb0d3bcbfca75938ef95284c8601de20", "filename": "src/librustc_trans/trans/mir/analyze.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fanalyze.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -12,8 +12,8 @@\n //! which do not.\n \n use rustc_data_structures::fnv::FnvHashSet;\n-use rustc_mir::repr as mir;\n-use rustc_mir::visit::{Visitor, LvalueContext};\n+use rustc::mir::repr as mir;\n+use rustc::mir::visit::{Visitor, LvalueContext};\n use trans::common::{self, Block};\n use super::rvalue;\n "}, {"sha": "3ce08fb2f60ef76126b87c1cdb9d5f0dc5f466fc", "filename": "src/librustc_trans/trans/mir/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use llvm::BasicBlockRef;\n-use rustc_mir::repr as mir;\n+use rustc::mir::repr as mir;\n use trans::base;\n use trans::build;\n use trans::common::Block;"}, {"sha": "176cc298f965347df7d52169944091cbfc746bd0", "filename": "src/librustc_trans/trans/mir/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -10,7 +10,7 @@\n \n use middle::ty::{Ty, HasTypeFlags};\n use rustc::middle::const_eval::ConstVal;\n-use rustc_mir::repr as mir;\n+use rustc::mir::repr as mir;\n use trans::consts::{self, TrueConst};\n use trans::common::{self, Block};\n use trans::common::{C_bool, C_bytes, C_floating_f64, C_integral, C_str_slice};"}, {"sha": "5d9a1e44ac166bf90d1beec7b66cdda03cb5c51f", "filename": "src/librustc_trans/trans/mir/lvalue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -10,8 +10,8 @@\n \n use llvm::ValueRef;\n use rustc::middle::ty::{self, Ty, HasTypeFlags};\n-use rustc_mir::repr as mir;\n-use rustc_mir::tcx::LvalueTy;\n+use rustc::mir::repr as mir;\n+use rustc::mir::tcx::LvalueTy;\n use trans::adt;\n use trans::base;\n use trans::build;"}, {"sha": "27c9feaad35251beb9a355cc8a6470d9d03ac8b4", "filename": "src/librustc_trans/trans/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fmod.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -10,8 +10,8 @@\n \n use libc::c_uint;\n use llvm::{self, ValueRef};\n-use rustc_mir::repr as mir;\n-use rustc_mir::tcx::LvalueTy;\n+use rustc::mir::repr as mir;\n+use rustc::mir::tcx::LvalueTy;\n use trans::base;\n use trans::build;\n use trans::common::{self, Block};"}, {"sha": "106c1d05ab7f1eb00e4ed1b04283633aac54a9f4", "filename": "src/librustc_trans/trans/mir/operand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -10,7 +10,7 @@\n \n use llvm::ValueRef;\n use rustc::middle::ty::{Ty, HasTypeFlags};\n-use rustc_mir::repr as mir;\n+use rustc::mir::repr as mir;\n use trans::base;\n use trans::common::{self, Block};\n use trans::datum;"}, {"sha": "17e4ec8e8274c77fbfb94244b026f17135174767", "filename": "src/librustc_trans/trans/mir/rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -10,7 +10,7 @@\n \n use llvm::ValueRef;\n use rustc::middle::ty::{self, Ty};\n-use rustc_mir::repr as mir;\n+use rustc::mir::repr as mir;\n \n use trans::asm;\n use trans::base;"}, {"sha": "9894626e284a2495c4ef51d26b6380695cb5bce3", "filename": "src/librustc_trans/trans/mir/statement.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fstatement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fstatement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fstatement.rs?ref=8bc43ed59d24c014ccfe6ed63c6a9afd5e3b811c", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use rustc::middle::ty::LvaluePreference;\n-use rustc_mir::repr as mir;\n+use rustc::mir::repr as mir;\n use trans::common::Block;\n use trans::debuginfo::DebugLoc;\n use trans::glue;"}]}