{"sha": "690955643504b0dea0d49ab5c9d5fd45ce96230f", "node_id": "C_kwDOAAsO6NoAKDY5MDk1NTY0MzUwNGIwZGVhMGQ0OWFiNWM5ZDVmZDQ1Y2U5NjIzMGY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-07T09:36:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-07T09:36:03Z"}, "message": "Auto merge of #13200 - P1n3appl3:sysroot, r=Veykril\n\nUse proc-macro-srv from sysroot in rust-project.json workspaces\n\nThis was discussed [on zulip](https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/.60sysroot.60.20vs.20.60sysroot_src.60.20for.20.60rust-project.2Ejson.60.3F/near/293023920), basically in `rust-project.json` workspaces RA doesn't respect the `sysroot` setting when picking which `proc-macro-srv` to launch, and this causes abi mismatches in practice.\n\nThis is the simple fix that `@Veykril` suggested, and I've verified that it works on Fuchsia by inspecting the cmdline with `pgrep rust-analyzer | xargs ps -fp` to check that it's using the `proc-macro-srv` from our prebuilts which matches the `sysroot` specified in our `rust-project.json`.\n\nCan this be merged as is, or do we need to add tests that exercise this?", "tree": {"sha": "faa8cc3e451d05b6bd9574314de6d297e0ddb779", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faa8cc3e451d05b6bd9574314de6d297e0ddb779"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/690955643504b0dea0d49ab5c9d5fd45ce96230f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/690955643504b0dea0d49ab5c9d5fd45ce96230f", "html_url": "https://github.com/rust-lang/rust/commit/690955643504b0dea0d49ab5c9d5fd45ce96230f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/690955643504b0dea0d49ab5c9d5fd45ce96230f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dfd8aebdfa1ee1824446f01daf5bdb229b32f92", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dfd8aebdfa1ee1824446f01daf5bdb229b32f92", "html_url": "https://github.com/rust-lang/rust/commit/6dfd8aebdfa1ee1824446f01daf5bdb229b32f92"}, {"sha": "5d126a18b4cb779644bace0dfdadb31b058fb618", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d126a18b4cb779644bace0dfdadb31b058fb618", "html_url": "https://github.com/rust-lang/rust/commit/5d126a18b4cb779644bace0dfdadb31b058fb618"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "e47f70fff39e0a3a48a07947d1b925a4c8ad2282", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/690955643504b0dea0d49ab5c9d5fd45ce96230f/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690955643504b0dea0d49ab5c9d5fd45ce96230f/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=690955643504b0dea0d49ab5c9d5fd45ce96230f", "patch": "@@ -314,7 +314,9 @@ impl GlobalState {\n                         let mut args = args.clone();\n                         let mut path = path.clone();\n \n-                        if let ProjectWorkspace::Cargo { sysroot, .. } = ws {\n+                        if let ProjectWorkspace::Cargo { sysroot, .. }\n+                        | ProjectWorkspace::Json { sysroot, .. } = ws\n+                        {\n                             tracing::debug!(\"Found a cargo workspace...\");\n                             if let Some(sysroot) = sysroot.as_ref() {\n                                 tracing::debug!(\"Found a cargo workspace with a sysroot...\");"}]}