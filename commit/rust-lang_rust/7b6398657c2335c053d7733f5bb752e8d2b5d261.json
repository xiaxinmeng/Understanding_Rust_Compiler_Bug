{"sha": "7b6398657c2335c053d7733f5bb752e8d2b5d261", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiNjM5ODY1N2MyMzM1YzA1M2Q3NzMzZjViYjc1MmU4ZDJiNWQyNjE=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-05-31T13:06:51Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-06-19T11:47:04Z"}, "message": "Apply suggestions from code review\n\nCo-authored-by: nikomatsakis <niko@alum.mit.edu>", "tree": {"sha": "85034c79369bbcdbaef1726c204f8f66a8cef51f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85034c79369bbcdbaef1726c204f8f66a8cef51f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b6398657c2335c053d7733f5bb752e8d2b5d261", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b6398657c2335c053d7733f5bb752e8d2b5d261", "html_url": "https://github.com/rust-lang/rust/commit/7b6398657c2335c053d7733f5bb752e8d2b5d261", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b6398657c2335c053d7733f5bb752e8d2b5d261/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39e29ce4d08674734e2f2759607b1486db7d0fde", "url": "https://api.github.com/repos/rust-lang/rust/commits/39e29ce4d08674734e2f2759607b1486db7d0fde", "html_url": "https://github.com/rust-lang/rust/commit/39e29ce4d08674734e2f2759607b1486db7d0fde"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "98c7ac3f2ef17cde30f163dfd658c70a0bfeae45", "filename": "src/liballoc/alloc.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7b6398657c2335c053d7733f5bb752e8d2b5d261/src%2Fliballoc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b6398657c2335c053d7733f5bb752e8d2b5d261/src%2Fliballoc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Falloc.rs?ref=7b6398657c2335c053d7733f5bb752e8d2b5d261", "patch": "@@ -215,14 +215,16 @@ unsafe impl AllocRef for Global {\n             }\n             ReallocPlacement::MayMove => {\n                 // `realloc` probably checks for `new_size > size` or something similar.\n-                unsafe {\n+                let ptr = unsafe {\n                     intrinsics::assume(new_size > size);\n-                    let ptr = realloc(ptr.as_ptr(), layout, new_size);\n-                    let memory =\n-                        MemoryBlock { ptr: NonNull::new(ptr).ok_or(AllocErr)?, size: new_size };\n+                    realloc(ptr.as_ptr(), layout, new_size)\n+                };\n+                let memory =\n+                    MemoryBlock { ptr: NonNull::new(ptr).ok_or(AllocErr)?, size: new_size };\n+                unsafe {\n                     init.init_offset(memory, size);\n-                    Ok(memory)\n                 }\n+                Ok(memory)\n             }\n         }\n     }\n@@ -255,11 +257,11 @@ unsafe impl AllocRef for Global {\n             }\n             ReallocPlacement::MayMove => {\n                 // `realloc` probably checks for `new_size < size` or something similar.\n-                unsafe {\n+                let ptr = unsafe {\n                     intrinsics::assume(new_size < size);\n-                    let ptr = realloc(ptr.as_ptr(), layout, new_size);\n-                    Ok(MemoryBlock { ptr: NonNull::new(ptr).ok_or(AllocErr)?, size: new_size })\n-                }\n+                    realloc(ptr.as_ptr(), layout, new_size)\n+                };\n+                Ok(MemoryBlock { ptr: NonNull::new(ptr).ok_or(AllocErr)?, size: new_size })\n             }\n         }\n     }"}]}