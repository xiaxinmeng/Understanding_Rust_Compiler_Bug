{"sha": "4184cc369a8e08bc74560baf0f47bab14423e26e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxODRjYzM2OWE4ZTA4YmM3NDU2MGJhZjBmNDdiYWIxNDQyM2UyNmU=", "commit": {"author": {"name": "lengyijun", "email": "sjtu5140809011@gmail.com", "date": "2021-08-24T14:06:46Z"}, "committer": {"name": "lengyijun", "email": "sjtu5140809011@gmail.com", "date": "2021-09-04T14:18:23Z"}, "message": "needless_option_as_deref", "tree": {"sha": "c91dbccb83e5782076cc72b8d619a8074fefaaf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c91dbccb83e5782076cc72b8d619a8074fefaaf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4184cc369a8e08bc74560baf0f47bab14423e26e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4184cc369a8e08bc74560baf0f47bab14423e26e", "html_url": "https://github.com/rust-lang/rust/commit/4184cc369a8e08bc74560baf0f47bab14423e26e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4184cc369a8e08bc74560baf0f47bab14423e26e/comments", "author": {"login": "lengyijun", "id": 14830596, "node_id": "MDQ6VXNlcjE0ODMwNTk2", "avatar_url": "https://avatars.githubusercontent.com/u/14830596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lengyijun", "html_url": "https://github.com/lengyijun", "followers_url": "https://api.github.com/users/lengyijun/followers", "following_url": "https://api.github.com/users/lengyijun/following{/other_user}", "gists_url": "https://api.github.com/users/lengyijun/gists{/gist_id}", "starred_url": "https://api.github.com/users/lengyijun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lengyijun/subscriptions", "organizations_url": "https://api.github.com/users/lengyijun/orgs", "repos_url": "https://api.github.com/users/lengyijun/repos", "events_url": "https://api.github.com/users/lengyijun/events{/privacy}", "received_events_url": "https://api.github.com/users/lengyijun/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lengyijun", "id": 14830596, "node_id": "MDQ6VXNlcjE0ODMwNTk2", "avatar_url": "https://avatars.githubusercontent.com/u/14830596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lengyijun", "html_url": "https://github.com/lengyijun", "followers_url": "https://api.github.com/users/lengyijun/followers", "following_url": "https://api.github.com/users/lengyijun/following{/other_user}", "gists_url": "https://api.github.com/users/lengyijun/gists{/gist_id}", "starred_url": "https://api.github.com/users/lengyijun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lengyijun/subscriptions", "organizations_url": "https://api.github.com/users/lengyijun/orgs", "repos_url": "https://api.github.com/users/lengyijun/repos", "events_url": "https://api.github.com/users/lengyijun/events{/privacy}", "received_events_url": "https://api.github.com/users/lengyijun/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8c2c7b712c273f13258de8b87b233918d8726b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8c2c7b712c273f13258de8b87b233918d8726b9", "html_url": "https://github.com/rust-lang/rust/commit/a8c2c7b712c273f13258de8b87b233918d8726b9"}], "stats": {"total": 121, "additions": 119, "deletions": 2}, "files": [{"sha": "0e131ed02af0442b95129a816530051dd3530413", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4184cc369a8e08bc74560baf0f47bab14423e26e/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/4184cc369a8e08bc74560baf0f47bab14423e26e/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=4184cc369a8e08bc74560baf0f47bab14423e26e", "patch": "@@ -2822,6 +2822,7 @@ Released 2018-09-13\n [`needless_doctest_main`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_doctest_main\n [`needless_for_each`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_for_each\n [`needless_lifetimes`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n+[`needless_option_as_deref`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_option_as_deref\n [`needless_pass_by_value`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value\n [`needless_question_mark`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_question_mark\n [`needless_range_loop`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop"}, {"sha": "64b7ff199be6cbab8337436b8dafedf93e265396", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4184cc369a8e08bc74560baf0f47bab14423e26e/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4184cc369a8e08bc74560baf0f47bab14423e26e/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=4184cc369a8e08bc74560baf0f47bab14423e26e", "patch": "@@ -289,6 +289,7 @@ mod needless_borrow;\n mod needless_borrowed_ref;\n mod needless_continue;\n mod needless_for_each;\n+mod needless_option_as_deref;\n mod needless_pass_by_value;\n mod needless_question_mark;\n mod needless_update;\n@@ -847,6 +848,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         needless_borrowed_ref::NEEDLESS_BORROWED_REFERENCE,\n         needless_continue::NEEDLESS_CONTINUE,\n         needless_for_each::NEEDLESS_FOR_EACH,\n+        needless_option_as_deref::NEEDLESS_OPTION_AS_DEREF,\n         needless_pass_by_value::NEEDLESS_PASS_BY_VALUE,\n         needless_question_mark::NEEDLESS_QUESTION_MARK,\n         needless_update::NEEDLESS_UPDATE,\n@@ -1374,6 +1376,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(needless_bool::NEEDLESS_BOOL),\n         LintId::of(needless_borrow::NEEDLESS_BORROW),\n         LintId::of(needless_borrowed_ref::NEEDLESS_BORROWED_REFERENCE),\n+        LintId::of(needless_option_as_deref::NEEDLESS_OPTION_AS_DEREF),\n         LintId::of(needless_question_mark::NEEDLESS_QUESTION_MARK),\n         LintId::of(needless_update::NEEDLESS_UPDATE),\n         LintId::of(neg_cmp_op_on_partial_ord::NEG_CMP_OP_ON_PARTIAL_ORD),\n@@ -1636,6 +1639,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(needless_bool::BOOL_COMPARISON),\n         LintId::of(needless_bool::NEEDLESS_BOOL),\n         LintId::of(needless_borrowed_ref::NEEDLESS_BORROWED_REFERENCE),\n+        LintId::of(needless_option_as_deref::NEEDLESS_OPTION_AS_DEREF),\n         LintId::of(needless_question_mark::NEEDLESS_QUESTION_MARK),\n         LintId::of(needless_update::NEEDLESS_UPDATE),\n         LintId::of(neg_cmp_op_on_partial_ord::NEG_CMP_OP_ON_PARTIAL_ORD),\n@@ -1863,6 +1867,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| Box::new(ptr::Ptr));\n     store.register_late_pass(|| Box::new(ptr_eq::PtrEq));\n     store.register_late_pass(|| Box::new(needless_bool::NeedlessBool));\n+    store.register_late_pass(|| Box::new(needless_option_as_deref::OptionNeedlessDeref));\n     store.register_late_pass(|| Box::new(needless_bool::BoolComparison));\n     store.register_late_pass(|| Box::new(needless_for_each::NeedlessForEach));\n     store.register_late_pass(|| Box::new(approx_const::ApproxConstant));"}, {"sha": "41956650c9f4e7c8a000926f8aa8d7d2b0894207", "filename": "clippy_lints/src/loops/never_loop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4184cc369a8e08bc74560baf0f47bab14423e26e/clippy_lints%2Fsrc%2Floops%2Fnever_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4184cc369a8e08bc74560baf0f47bab14423e26e/clippy_lints%2Fsrc%2Floops%2Fnever_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fnever_loop.rs?ref=4184cc369a8e08bc74560baf0f47bab14423e26e", "patch": "@@ -87,7 +87,7 @@ fn combine_branches(b1: NeverLoopResult, b2: NeverLoopResult) -> NeverLoopResult\n \n fn never_loop_block(block: &Block<'_>, main_loop_id: HirId) -> NeverLoopResult {\n     let stmts = block.stmts.iter().map(stmt_to_expr);\n-    let expr = once(block.expr.as_deref());\n+    let expr = once(block.expr);\n     let mut iter = stmts.chain(expr).flatten();\n     never_loop_expr_seq(&mut iter, main_loop_id)\n }\n@@ -100,7 +100,7 @@ fn never_loop_expr_seq<'a, T: Iterator<Item = &'a Expr<'a>>>(es: &mut T, main_lo\n fn stmt_to_expr<'tcx>(stmt: &Stmt<'tcx>) -> Option<&'tcx Expr<'tcx>> {\n     match stmt.kind {\n         StmtKind::Semi(e, ..) | StmtKind::Expr(e, ..) => Some(e),\n-        StmtKind::Local(local) => local.init.as_deref(),\n+        StmtKind::Local(local) => local.init,\n         StmtKind::Item(..) => None,\n     }\n }"}, {"sha": "67c697da04f40f66439116028c3609c4e0fa735f", "filename": "clippy_lints/src/needless_option_as_deref.rs", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/4184cc369a8e08bc74560baf0f47bab14423e26e/clippy_lints%2Fsrc%2Fneedless_option_as_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4184cc369a8e08bc74560baf0f47bab14423e26e/clippy_lints%2Fsrc%2Fneedless_option_as_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_option_as_deref.rs?ref=4184cc369a8e08bc74560baf0f47bab14423e26e", "patch": "@@ -0,0 +1,69 @@\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::in_macro;\n+use clippy_utils::source::snippet_opt;\n+use clippy_utils::ty::is_type_diagnostic_item;\n+use rustc_errors::Applicability;\n+use rustc_hir::{Expr, ExprKind};\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::TyS;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::symbol::sym;\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for no-op uses of Option::{as_deref,as_deref_mut},\n+    /// for example, `Option<&T>::as_deref()` returns the same type.\n+    ///\n+    /// ### Why is this bad?\n+    /// Redundant code and improving readability.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// let a = Some(&1);\n+    /// let b = a.as_deref(); // goes from Option<&i32> to Option<&i32>\n+    /// ```\n+    /// Could be written as:\n+    /// ```rust\n+    /// let a = Some(&1);\n+    /// let b = a;\n+    /// ```\n+    pub NEEDLESS_OPTION_AS_DEREF,\n+    complexity,\n+    \"no-op use of `deref` or `deref_mut` method to `Option`.\"\n+}\n+\n+declare_lint_pass!(OptionNeedlessDeref=> [\n+    NEEDLESS_OPTION_AS_DEREF,\n+]);\n+\n+impl<'tcx> LateLintPass<'tcx> for OptionNeedlessDeref {\n+    fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n+        if expr.span.from_expansion() {\n+            return;\n+        }\n+        if in_macro(expr.span) {\n+            return;\n+        }\n+        let typeck = cx.typeck_results();\n+        let outer_ty = typeck.expr_ty(expr);\n+\n+        if_chain! {\n+            if is_type_diagnostic_item(cx,outer_ty,sym::option_type);\n+            if let ExprKind::MethodCall(path, _, [sub_expr], _) = expr.kind;\n+            let symbol = path.ident.as_str();\n+            if symbol==\"as_deref\" || symbol==\"as_deref_mut\";\n+            if TyS::same_type( outer_ty, typeck.expr_ty(sub_expr) );\n+            then{\n+                span_lint_and_sugg(\n+                    cx,\n+                    NEEDLESS_OPTION_AS_DEREF,\n+                    expr.span,\n+                    \"derefed type is same as origin\",\n+                    \"try this\",\n+                    snippet_opt(cx,sub_expr.span).unwrap(),\n+                    Applicability::MachineApplicable\n+                );\n+            }\n+        }\n+    }\n+}"}, {"sha": "d721452ae88803431fd289feb9e223100b16f3ea", "filename": "tests/ui/needless_option_as_deref.fixed", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4184cc369a8e08bc74560baf0f47bab14423e26e/tests%2Fui%2Fneedless_option_as_deref.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4184cc369a8e08bc74560baf0f47bab14423e26e/tests%2Fui%2Fneedless_option_as_deref.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_option_as_deref.fixed?ref=4184cc369a8e08bc74560baf0f47bab14423e26e", "patch": "@@ -0,0 +1,13 @@\n+// run-rustfix\n+\n+#[warn(clippy::needless_option_as_deref)]\n+\n+fn main() {\n+    // should lint\n+    let _: Option<&usize> = Some(&1);\n+    let _: Option<&mut usize> = Some(&mut 1);\n+\n+    // should not lint\n+    let _ = Some(Box::new(1)).as_deref();\n+    let _ = Some(Box::new(1)).as_deref_mut();\n+}"}, {"sha": "bb15512adf6aa6c656bba664d822be00aa44364b", "filename": "tests/ui/needless_option_as_deref.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4184cc369a8e08bc74560baf0f47bab14423e26e/tests%2Fui%2Fneedless_option_as_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4184cc369a8e08bc74560baf0f47bab14423e26e/tests%2Fui%2Fneedless_option_as_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_option_as_deref.rs?ref=4184cc369a8e08bc74560baf0f47bab14423e26e", "patch": "@@ -0,0 +1,13 @@\n+// run-rustfix\n+\n+#[warn(clippy::needless_option_as_deref)]\n+\n+fn main() {\n+    // should lint\n+    let _: Option<&usize> = Some(&1).as_deref();\n+    let _: Option<&mut usize> = Some(&mut 1).as_deref_mut();\n+\n+    // should not lint\n+    let _ = Some(Box::new(1)).as_deref();\n+    let _ = Some(Box::new(1)).as_deref_mut();\n+}"}, {"sha": "5dd507b4a71e8fef8207e5ac6b1b579cac4f9b28", "filename": "tests/ui/needless_option_as_deref.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4184cc369a8e08bc74560baf0f47bab14423e26e/tests%2Fui%2Fneedless_option_as_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4184cc369a8e08bc74560baf0f47bab14423e26e/tests%2Fui%2Fneedless_option_as_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_option_as_deref.stderr?ref=4184cc369a8e08bc74560baf0f47bab14423e26e", "patch": "@@ -0,0 +1,16 @@\n+error: derefed type is same as origin\n+  --> $DIR/needless_option_as_deref.rs:7:29\n+   |\n+LL |     let _: Option<&usize> = Some(&1).as_deref();\n+   |                             ^^^^^^^^^^^^^^^^^^^ help: try this: `Some(&1)`\n+   |\n+   = note: `-D clippy::needless-option-as-deref` implied by `-D warnings`\n+\n+error: derefed type is same as origin\n+  --> $DIR/needless_option_as_deref.rs:8:33\n+   |\n+LL |     let _: Option<&mut usize> = Some(&mut 1).as_deref_mut();\n+   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `Some(&mut 1)`\n+\n+error: aborting due to 2 previous errors\n+"}]}