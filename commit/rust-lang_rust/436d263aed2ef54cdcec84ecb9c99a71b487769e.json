{"sha": "436d263aed2ef54cdcec84ecb9c99a71b487769e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNmQyNjNhZWQyZWY1NGNkY2VjODRlY2I5Yzk5YTcxYjQ4Nzc2OWU=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-13T22:39:31Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-16T21:50:46Z"}, "message": "Add a selectable trait.", "tree": {"sha": "650c1b69cf798ae9ce1cafa0d812810f332cb968", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/650c1b69cf798ae9ce1cafa0d812810f332cb968"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/436d263aed2ef54cdcec84ecb9c99a71b487769e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/436d263aed2ef54cdcec84ecb9c99a71b487769e", "html_url": "https://github.com/rust-lang/rust/commit/436d263aed2ef54cdcec84ecb9c99a71b487769e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/436d263aed2ef54cdcec84ecb9c99a71b487769e/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0487663e7d9d7b542a66299dee64204f8c96689c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0487663e7d9d7b542a66299dee64204f8c96689c", "html_url": "https://github.com/rust-lang/rust/commit/0487663e7d9d7b542a66299dee64204f8c96689c"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "618d49dbaf5b219f171033087fbf792e4c4eba39", "filename": "src/libcore/pipes.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/436d263aed2ef54cdcec84ecb9c99a71b487769e/src%2Flibcore%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/436d263aed2ef54cdcec84ecb9c99a71b487769e/src%2Flibcore%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpipes.rs?ref=436d263aed2ef54cdcec84ecb9c99a71b487769e", "patch": "@@ -318,10 +318,22 @@ fn select2<A: send, B: send>(\n     }\n }\n \n-fn selecti<T: send>(endpoints: &[&recv_packet<T>]) -> uint {\n+trait selectable {\n+    pure fn header() -> *packet_header;\n+}\n+\n+fn selecti<T: selectable>(endpoints: &[T]) -> uint {\n     wait_many(endpoints.map(|p| p.header()))\n }\n \n+fn select2i<A: selectable, B: selectable>(a: A, b: B) -> either<(), ()> {\n+    alt wait_many([a.header(), b.header()]/_) {\n+      0 { left(()) }\n+      1 { right(()) }\n+      _ { fail \"wait returned unexpected index\" }\n+    }\n+}\n+\n #[doc = \"Waits on a set of endpoints. Returns a message, its index,\n  and a list of the remaining endpoints.\"]\n fn select<T: send>(+endpoints: ~[recv_packet<T>])\n@@ -552,7 +564,7 @@ class port_set<T: send> {\n     }\n }\n \n-impl private_methods/&<T: send> for pipes::port<T> {\n+impl<T: send> of selectable for pipes::port<T> {\n     pure fn header() -> *pipes::packet_header unchecked {\n         alt self.endp {\n           some(endp) {"}]}