{"sha": "94effb972fa80c89a7d3cf2e209b84b2f301ce3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZWZmYjk3MmZhODBjODlhN2QzY2YyZTIwOWI4NGIyZjMwMWNlM2E=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-20T11:04:02Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-20T11:04:02Z"}, "message": "Rustup to rustc 1.38.0-nightly (e3cebcb3b 2019-07-19)", "tree": {"sha": "a0c130b1dea4e50a07f1d278bb8a967ff6000ea0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0c130b1dea4e50a07f1d278bb8a967ff6000ea0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94effb972fa80c89a7d3cf2e209b84b2f301ce3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94effb972fa80c89a7d3cf2e209b84b2f301ce3a", "html_url": "https://github.com/rust-lang/rust/commit/94effb972fa80c89a7d3cf2e209b84b2f301ce3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94effb972fa80c89a7d3cf2e209b84b2f301ce3a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c9139d51e079a02ae8d6dd7a37b04b10c2fff25", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c9139d51e079a02ae8d6dd7a37b04b10c2fff25", "html_url": "https://github.com/rust-lang/rust/commit/2c9139d51e079a02ae8d6dd7a37b04b10c2fff25"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "45484027edc374882d2cd90d2ece3c800d7a8acb", "filename": "build_sysroot/Cargo.toml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94effb972fa80c89a7d3cf2e209b84b2f301ce3a/build_sysroot%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/94effb972fa80c89a7d3cf2e209b84b2f301ce3a/build_sysroot%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2FCargo.toml?ref=94effb972fa80c89a7d3cf2e209b84b2f301ce3a", "patch": "@@ -18,3 +18,7 @@ compiler_builtins = { path = \"./compiler_builtins\" }\n \n [profile.release]\n debug = true\n+\n+[profile.dev]\n+# FIXME correctly align constants, so that copy_nonoverlapping doesn't complain about alignment\n+debug-assertions = false"}, {"sha": "7fb003d199e0728fdd8501bee72574dd595b2354", "filename": "patches/0001-Disable-stdsimd.patch", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94effb972fa80c89a7d3cf2e209b84b2f301ce3a/patches%2F0001-Disable-stdsimd.patch", "raw_url": "https://github.com/rust-lang/rust/raw/94effb972fa80c89a7d3cf2e209b84b2f301ce3a/patches%2F0001-Disable-stdsimd.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0001-Disable-stdsimd.patch?ref=94effb972fa80c89a7d3cf2e209b84b2f301ce3a", "patch": "@@ -18,7 +18,7 @@ index f2165c6..cdb42c1 100644\n  \n +/*\n  // Pull in the `core_arch` crate directly into libcore. The contents of\n- // `core_arch` are in a different repository: rust-lang-nursery/stdsimd.\n+ // `core_arch` are in a different repository: rust-lang/stdarch.\n  //\n @@ -235,3 +236,4 @@ mod core_arch;\n  \n@@ -53,7 +53,7 @@ index 6dd3a6c..c7401e2 100644\n  \n +/*\n  // Pull in the `std_detect` crate directly into libstd. The contents of\n- // `std_detect` are in a different repository: rust-lang-nursery/stdsimd.\n+ // `std_detect` are in a different repository: rust-lang/stdarch.\n  //\n @@ -505,6 +502,7 @@ mod std_detect;\n  #[unstable(feature = \"stdsimd\", issue = \"48556\")]"}, {"sha": "8f8f9116f597c4a9d93dbc99a0235df78bad2719", "filename": "src/unsize.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/94effb972fa80c89a7d3cf2e209b84b2f301ce3a/src%2Funsize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94effb972fa80c89a7d3cf2e209b84b2f301ce3a/src%2Funsize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Funsize.rs?ref=94effb972fa80c89a7d3cf2e209b84b2f301ce3a", "patch": "@@ -14,7 +14,8 @@ pub fn unsized_info<'a, 'tcx: 'a>(\n     target: Ty<'tcx>,\n     old_info: Option<Value>,\n ) -> Value {\n-    let (source, target) = fx.tcx.struct_lockstep_tails(source, target);\n+    let (source, target) =\n+        fx.tcx.struct_lockstep_tails_erasing_lifetimes(source, target, ParamEnv::reveal_all());\n     match (&source.sty, &target.sty) {\n         (&ty::Array(_, len), &ty::Slice(_)) => fx\n             .bcx"}]}