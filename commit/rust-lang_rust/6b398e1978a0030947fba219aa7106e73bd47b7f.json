{"sha": "6b398e1978a0030947fba219aa7106e73bd47b7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiMzk4ZTE5NzhhMDAzMDk0N2ZiYTIxOWFhNzEwNmU3M2JkNDdiN2Y=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-04-16T19:59:51Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-04-16T19:59:51Z"}, "message": "Merge pull request #2184 from evanmcc/local_rust\n\nadd the configure option --enable-local-rust to pull rust from your environment", "tree": {"sha": "2245d46851b8c1baf1dfcd0acfaf4bc5764a283a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2245d46851b8c1baf1dfcd0acfaf4bc5764a283a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b398e1978a0030947fba219aa7106e73bd47b7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b398e1978a0030947fba219aa7106e73bd47b7f", "html_url": "https://github.com/rust-lang/rust/commit/6b398e1978a0030947fba219aa7106e73bd47b7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b398e1978a0030947fba219aa7106e73bd47b7f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f466a2fa8f7594d6895bb4263a662adc7ed26326", "url": "https://api.github.com/repos/rust-lang/rust/commits/f466a2fa8f7594d6895bb4263a662adc7ed26326", "html_url": "https://github.com/rust-lang/rust/commit/f466a2fa8f7594d6895bb4263a662adc7ed26326"}, {"sha": "2c93b1b2df6500ca52bd2f1ffb179acc0bf368c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c93b1b2df6500ca52bd2f1ffb179acc0bf368c4", "html_url": "https://github.com/rust-lang/rust/commit/2c93b1b2df6500ca52bd2f1ffb179acc0bf368c4"}], "stats": {"total": 66, "additions": 64, "deletions": 2}, "files": [{"sha": "06f385c1da338971b7a15620f4f409776e6a4098", "filename": "configure", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6b398e1978a0030947fba219aa7106e73bd47b7f/configure", "raw_url": "https://github.com/rust-lang/rust/raw/6b398e1978a0030947fba219aa7106e73bd47b7f/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=6b398e1978a0030947fba219aa7106e73bd47b7f", "patch": "@@ -294,7 +294,9 @@ opt fast-make 0 \"use .gitmodules as timestamp for submodule deps\"\n opt manage-submodules 1 \"let the build manage the git submodules\"\n opt mingw-cross 0 \"cross-compile for win32 using mingw\"\n opt clang 0 \"prefer clang to gcc for building the runtime\"\n+opt local-rust 0 \"use an installed rustc rather than downloading a snapshot\"\n valopt prefix \"/usr/local\" \"set installation prefix\"\n+valopt local-rust-root \"/usr/local\" \"set prefix for local rust binary\"\n valopt llvm-root \"\" \"set LLVM root\"\n valopt host-triple \"${DEFAULT_HOST_TRIPLE}\" \"LLVM host triple\"\n valopt target-triples \"${CFG_HOST_TRIPLE}\" \"LLVM target triples\"\n@@ -337,7 +339,6 @@ probe CFG_XETEX            xetex\n probe CFG_LUATEX           luatex\n probe CFG_NODE             nodejs node\n \n-\n if [ ! -z \"$CFG_PANDOC\" ]\n then\n     PV=$(pandoc --version | awk '/^pandoc/ {print $2}')\n@@ -348,6 +349,14 @@ then\n     fi\n fi\n \n+if [ ! -z \"$CFG_ENABLE_LOCAL_RUST\" -a ! -f ${CFG_LOCAL_RUST_ROOT}/bin/rustc ]\n+then\n+    err \"no local rust to use\"\n+else\n+    LRV=`${CFG_LOCAL_RUST_ROOT}/bin/rustc --version`\n+    step_msg \"using rustc at: ${CFG_LOCAL_RUST_ROOT} with version: \" $LRV\n+fi\n+\n if [ -z \"$CFG_ENABLE_CLANG\" -a -z \"$CFG_GCC\" ]\n then\n     err \"either clang or gcc is required\"\n@@ -716,7 +725,6 @@ do\n     putvar $CFG_LLVM_INST_DIR\n done\n \n-\n # Munge any paths that appear in config.mk back to posix-y\n perl -i.bak -p -e 's@ ([a-zA-Z]):[/\\\\]@ /\\1/@go;' \\\n                -e 's@\\\\@/@go;' config.tmp"}, {"sha": "e55b9f70c8ff0134c727dab7fa99cb8d1931ba68", "filename": "mk/stage0.mk", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6b398e1978a0030947fba219aa7106e73bd47b7f/mk%2Fstage0.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6b398e1978a0030947fba219aa7106e73bd47b7f/mk%2Fstage0.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage0.mk?ref=6b398e1978a0030947fba219aa7106e73bd47b7f", "patch": "@@ -1,12 +1,18 @@\n # Extract the snapshot host compiler\n \n+\n+\n $(HBIN0_H_$(CFG_HOST_TRIPLE))/rustc$(X):\t\t\\\n \t\t$(S)src/snapshots.txt\t\t\t\t\t\\\n \t\t$(S)src/etc/get-snapshot.py $(MKFILE_DEPS)\n \t@$(call E, fetch: $@)\n #   Note: the variable \"SNAPSHOT_FILE\" is generally not set, and so\n #   we generally only pass one argument to this script.  \n+ifdef CFG_ENABLE_LOCAL_RUST\n+\t$(Q)$(S)src/etc/local_stage0.sh $(CFG_HOST_TRIPLE) $(CFG_LOCAL_RUST_ROOT)\n+else \n \t$(Q)$(S)src/etc/get-snapshot.py $(CFG_HOST_TRIPLE) $(SNAPSHOT_FILE)\n+endif \n \t$(Q)touch $@\n \n # Host libs will be extracted by the above rule"}, {"sha": "e4d7b61c4a352d64c65ba4f5b61398d5ffb44d60", "filename": "src/etc/local_stage0.sh", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/6b398e1978a0030947fba219aa7106e73bd47b7f/src%2Fetc%2Flocal_stage0.sh", "raw_url": "https://github.com/rust-lang/rust/raw/6b398e1978a0030947fba219aa7106e73bd47b7f/src%2Fetc%2Flocal_stage0.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flocal_stage0.sh?ref=6b398e1978a0030947fba219aa7106e73bd47b7f", "patch": "@@ -0,0 +1,48 @@\n+#!/bin/sh\n+\n+TARG_DIR=$1 \n+PREFIX=$2\n+\n+BINDIR=bin\n+LIBDIR=lib\n+\n+OS=`uname -s`\n+case $OS in \n+    (\"Linux\"|\"FreeBSD\")\n+\tBIN_SUF=\n+\tLIB_SUF=.so\n+\tbreak\n+\t;;\n+    (\"Darwin\")\n+\tBIN_SUF=\n+\tLIB_SUF=.dylib\n+\tbreak\n+\t;;\n+    (*)\n+\tBIN_SUF=.exe\n+\tLIB_SUF=.dll\n+\tLIBDIR=bin\n+\tbreak\n+\t;;\n+esac\n+\n+if [ -z $PREFIX ]; then\n+    echo \"No local rust specified.\"\n+    exit 1\n+fi\n+\n+if [ ! -e ${PREFIX}/bin/rustc ]; then\n+    echo \"No local rust installed at ${PREFIX}\"\n+    exit 1\n+fi\n+\n+if [ -z $TARG_DIR ]; then\n+    echo \"No target directory specified.\"\n+    exit 1\n+fi\n+\n+cp ${PREFIX}/bin/rustc ${TARG_DIR}/stage0/bin/\n+cp ${PREFIX}/lib/rustc/${TARG_DIR}/${LIBDIR}/* ${TARG_DIR}/stage0/${LIBDIR}/\n+cp ${PREFIX}/lib/librust*${LIB_SUF} ${TARG_DIR}/stage0/${LIBDIR}/\n+cp ${PREFIX}/lib/libcore*${LIB_SUF} ${TARG_DIR}/stage0/${LIBDIR}/\n+cp ${PREFIX}/lib/libstd*${LIB_SUF} ${TARG_DIR}/stage0/${LIBDIR}/"}]}