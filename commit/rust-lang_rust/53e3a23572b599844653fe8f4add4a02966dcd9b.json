{"sha": "53e3a23572b599844653fe8f4add4a02966dcd9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzZTNhMjM1NzJiNTk5ODQ0NjUzZmU4ZjRhZGQ0YTAyOTY2ZGNkOWI=", "commit": {"author": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2021-01-12T15:12:03Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2021-01-12T15:12:03Z"}, "message": "Coverage computation needs access to the MIR, too", "tree": {"sha": "61fa07dcdb911f9ade5eb0a0e403880729d0aa11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61fa07dcdb911f9ade5eb0a0e403880729d0aa11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53e3a23572b599844653fe8f4add4a02966dcd9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53e3a23572b599844653fe8f4add4a02966dcd9b", "html_url": "https://github.com/rust-lang/rust/commit/53e3a23572b599844653fe8f4add4a02966dcd9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53e3a23572b599844653fe8f4add4a02966dcd9b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e90b521a15f12863fced1023e700d02e015931a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e90b521a15f12863fced1023e700d02e015931a4", "html_url": "https://github.com/rust-lang/rust/commit/e90b521a15f12863fced1023e700d02e015931a4"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "4b455a6a1ba724ffe9a52066b61dbc4cdd15cae9", "filename": "compiler/rustc_mir/src/transform/coverage/query.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/53e3a23572b599844653fe8f4add4a02966dcd9b/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53e3a23572b599844653fe8f4add4a02966dcd9b/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fquery.rs?ref=53e3a23572b599844653fe8f4add4a02966dcd9b", "patch": "@@ -4,7 +4,7 @@ use rustc_middle::mir::coverage::*;\n use rustc_middle::mir::visit::Visitor;\n use rustc_middle::mir::{self, Coverage, CoverageInfo, Location};\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::def_id::DefId;\n \n /// The `query` provider for `CoverageInfo`, requested by `codegen_coverage()` (to inject each\n@@ -112,7 +112,7 @@ impl Visitor<'_> for CoverageVisitor {\n }\n \n fn coverageinfo_from_mir<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> CoverageInfo {\n-    let mir_body = tcx.optimized_mir(def_id);\n+    let mir_body = mir_body(tcx, def_id);\n \n     let mut coverage_visitor = CoverageVisitor {\n         // num_counters always has at least the `ZERO` counter.\n@@ -129,8 +129,7 @@ fn coverageinfo_from_mir<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> CoverageInfo\n }\n \n fn covered_file_name<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> Option<Symbol> {\n-    let mir_body = tcx.optimized_mir(def_id);\n-    for bb_data in mir_body.basic_blocks().iter() {\n+    for bb_data in mir_body(tcx, def_id).basic_blocks().iter() {\n         for statement in bb_data.statements.iter() {\n             if let StatementKind::Coverage(box ref coverage) = statement.kind {\n                 if let Some(code_region) = coverage.code_region.as_ref() {\n@@ -142,9 +141,17 @@ fn covered_file_name<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> Option<Symbol> {\n     None\n }\n \n+/// This function ensures we obtain the correct MIR for the given item irrespective of\n+/// whether that means const mir or runtime mir. For `const fn` this opts for runtime\n+/// mir.\n+fn mir_body<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> &'tcx mir::Body<'tcx> {\n+    let id = ty::WithOptConstParam::unknown(def_id);\n+    let def = ty::InstanceDef::Item(id);\n+    tcx.instance_mir(def)\n+}\n+\n fn covered_code_regions<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> Vec<&'tcx CodeRegion> {\n-    let mir_body: &'tcx mir::Body<'tcx> = tcx.optimized_mir(def_id);\n-    mir_body\n+    mir_body(tcx, def_id)\n         .basic_blocks()\n         .iter()\n         .map(|data| {"}]}