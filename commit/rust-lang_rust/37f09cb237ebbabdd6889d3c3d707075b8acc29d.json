{"sha": "37f09cb237ebbabdd6889d3c3d707075b8acc29d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3ZjA5Y2IyMzdlYmJhYmRkNjg4OWQzYzNkNzA3MDc1YjhhY2MyOWQ=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-06-13T13:49:33Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-06-24T08:45:20Z"}, "message": "Only allow {declare,impl}_lint_pass macros for implementing LintPass", "tree": {"sha": "b712cd0b68adaa4e2157db24cbb634f75de84cea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b712cd0b68adaa4e2157db24cbb634f75de84cea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37f09cb237ebbabdd6889d3c3d707075b8acc29d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl0QjaAACgkQaTCGhp1Q\nZjdYmBAAhEQc5lo2rW1a2DgpshyixLuLS4NBe5pCNE8o5JOcnH2ZdMErlFUi3Sk3\n42uX2NVE1Qi6FEwu6PzJN657Vwgg7YFyaq4+nxtHkdPj38YQ67iw06VJe/pBENF6\nyRghmTA0EqMMwx0wjvCo1gC7rrmiLBe/z/1AaVs2eAEiJ4U88JPV0WkF3sESXK0D\nCaUnEdrjXQpRo/WfPqO0z6J4UOXyo4NhB0xrilq967ZgBSSJqYDO+fzIVJJi9yR3\nYzU53bLxHZ7immcVFhNC1htSC2JI4ODEOfLp/xfDD0ouDqn34DaFRzL3OZ074OnI\nLa7Uj0bND+kbWXcoxH7nywVT4W5Azmm2T9A0NwqLSwArVAuYVrek8iKSu78s54Zg\nJLlhKkI+XxcD2K2AvonHF585bxJ2vDITISMasRzwxVbQHf/JXK/Tj6uIsWe6GP7o\nKmE+CCDaqFLh0GgTlh1isYtCGvBLsf+Agc44x5Dcs4z2ePQzYAp0HqkgW1modsMm\nDPCQxNns0OrRkDOoq7drbRmlSPOQ5+gUEhdV1y+5Tfwdw8BtbVe345P0sRM9/eZP\nnbmiWT7D2YVTU00Cv3heV6iMSoVPoFxJ9SUhpWByddu1Thd5HPR4C+aNAcXcyoRk\no5G8T8uCC0CbtJ4FV9kvzJchP3/wIXxdjii6SK+V2PS09acrPJw=\n=afXd\n-----END PGP SIGNATURE-----", "payload": "tree b712cd0b68adaa4e2157db24cbb634f75de84cea\nparent 7d0a952e465b6584d2a86d2fca3c8a4b077567cd\nauthor flip1995 <hello@philkrones.com> 1560433773 +0200\ncommitter flip1995 <hello@philkrones.com> 1561365920 +0200\n\nOnly allow {declare,impl}_lint_pass macros for implementing LintPass\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37f09cb237ebbabdd6889d3c3d707075b8acc29d", "html_url": "https://github.com/rust-lang/rust/commit/37f09cb237ebbabdd6889d3c3d707075b8acc29d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37f09cb237ebbabdd6889d3c3d707075b8acc29d/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d0a952e465b6584d2a86d2fca3c8a4b077567cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d0a952e465b6584d2a86d2fca3c8a4b077567cd", "html_url": "https://github.com/rust-lang/rust/commit/7d0a952e465b6584d2a86d2fca3c8a4b077567cd"}], "stats": {"total": 68, "additions": 57, "deletions": 11}, "files": [{"sha": "9763801f0d9a8de599333b1952527994f0f76dd5", "filename": "src/librustc/lint/internal.rs", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/37f09cb237ebbabdd6889d3c3d707075b8acc29d/src%2Flibrustc%2Flint%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37f09cb237ebbabdd6889d3c3d707075b8acc29d/src%2Flibrustc%2Flint%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Finternal.rs?ref=37f09cb237ebbabdd6889d3c3d707075b8acc29d", "patch": "@@ -9,6 +9,7 @@ use errors::Applicability;\n use rustc_data_structures::fx::FxHashMap;\n use syntax::ast::{Ident, Item, ItemKind};\n use syntax::symbol::{sym, Symbol};\n+use syntax_pos::ExpnInfo;\n \n declare_lint! {\n     pub DEFAULT_HASH_TYPES,\n@@ -225,19 +226,32 @@ declare_lint_pass!(LintPassImpl => [LINT_PASS_IMPL_WITHOUT_MACRO]);\n impl EarlyLintPass for LintPassImpl {\n     fn check_item(&mut self, cx: &EarlyContext<'_>, item: &Item) {\n         if let ItemKind::Impl(_, _, _, _, Some(lint_pass), _, _) = &item.node {\n-            if !lint_pass.path.span.ctxt().outer_expn_info().is_some() {\n-                if let Some(last) = lint_pass.path.segments.last() {\n-                    if last.ident.as_str() == \"LintPass\" {\n-                        cx.struct_span_lint(\n-                            LINT_PASS_IMPL_WITHOUT_MACRO,\n-                            lint_pass.path.span,\n-                            \"implementing `LintPass` by hand\",\n-                        )\n-                        .help(\"try using `declare_lint_pass!` or `impl_lint_pass!` instead\")\n-                        .emit();\n+            if let Some(last) = lint_pass.path.segments.last() {\n+                if last.ident.name == sym::LintPass {\n+                    match &lint_pass.path.span.ctxt().outer_expn_info() {\n+                        Some(info) if is_lint_pass_expansion(info) => {}\n+                        _ => {\n+                            cx.struct_span_lint(\n+                                LINT_PASS_IMPL_WITHOUT_MACRO,\n+                                lint_pass.path.span,\n+                                \"implementing `LintPass` by hand\",\n+                            )\n+                            .help(\"try using `declare_lint_pass!` or `impl_lint_pass!` instead\")\n+                            .emit();\n+                        }\n                     }\n                 }\n             }\n         }\n     }\n }\n+\n+fn is_lint_pass_expansion(expn_info: &ExpnInfo) -> bool {\n+    if expn_info.format.name() == sym::impl_lint_pass {\n+        true\n+    } else if let Some(info) = expn_info.call_site.ctxt().outer_expn_info() {\n+        info.format.name() == sym::declare_lint_pass\n+    } else {\n+        false\n+    }\n+}"}, {"sha": "4b8535fa625b96aa80118e4ba1cba6304f49df41", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/37f09cb237ebbabdd6889d3c3d707075b8acc29d/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37f09cb237ebbabdd6889d3c3d707075b8acc29d/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=37f09cb237ebbabdd6889d3c3d707075b8acc29d", "patch": "@@ -214,6 +214,7 @@ symbols! {\n         custom_inner_attributes,\n         custom_test_frameworks,\n         c_variadic,\n+        declare_lint_pass,\n         decl_macro,\n         Default,\n         default_lib_allocator,\n@@ -324,6 +325,7 @@ symbols! {\n         if_while_or_patterns,\n         ignore,\n         impl_header_lifetime_elision,\n+        impl_lint_pass,\n         impl_trait_in_bindings,\n         import_shadowing,\n         index,\n@@ -365,6 +367,7 @@ symbols! {\n         link_llvm_intrinsics,\n         link_name,\n         link_section,\n+        LintPass,\n         lint_reasons,\n         literal,\n         local_inner_macros,"}, {"sha": "89fa838768e8ef2febfcecfd72170389764792a3", "filename": "src/test/ui-fulldeps/internal-lints/lint_pass_impl_without_macro.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/37f09cb237ebbabdd6889d3c3d707075b8acc29d/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37f09cb237ebbabdd6889d3c3d707075b8acc29d/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.rs?ref=37f09cb237ebbabdd6889d3c3d707075b8acc29d", "patch": "@@ -26,6 +26,24 @@ impl LintPass for Foo { //~ERROR implementing `LintPass` by hand\n     }\n }\n \n+macro_rules! custom_lint_pass_macro {\n+    () => {\n+        struct Custom;\n+\n+        impl LintPass for Custom { //~ERROR implementing `LintPass` by hand\n+            fn get_lints(&self) -> LintArray {\n+                lint_array!(TEST_LINT)\n+            }\n+\n+            fn name(&self) -> &'static str {\n+                \"Custom\"\n+            }\n+        }\n+    };\n+}\n+\n+custom_lint_pass_macro!();\n+\n struct Bar;\n \n impl_lint_pass!(Bar => [TEST_LINT]);"}, {"sha": "a033b0a07e0065c57a9c1ca96a07e104351b4288", "filename": "src/test/ui-fulldeps/internal-lints/lint_pass_impl_without_macro.stderr", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/37f09cb237ebbabdd6889d3c3d707075b8acc29d/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37f09cb237ebbabdd6889d3c3d707075b8acc29d/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.stderr?ref=37f09cb237ebbabdd6889d3c3d707075b8acc29d", "patch": "@@ -11,5 +11,16 @@ LL | #![deny(lint_pass_impl_without_macro)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: try using `declare_lint_pass!` or `impl_lint_pass!` instead\n \n-error: aborting due to previous error\n+error: implementing `LintPass` by hand\n+  --> $DIR/lint_pass_impl_without_macro.rs:33:14\n+   |\n+LL |         impl LintPass for Custom {\n+   |              ^^^^^^^^\n+...\n+LL | custom_lint_pass_macro!();\n+   | -------------------------- in this macro invocation\n+   |\n+   = help: try using `declare_lint_pass!` or `impl_lint_pass!` instead\n+\n+error: aborting due to 2 previous errors\n "}]}