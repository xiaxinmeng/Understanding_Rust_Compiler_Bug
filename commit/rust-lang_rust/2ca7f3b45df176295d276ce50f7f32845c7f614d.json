{"sha": "2ca7f3b45df176295d276ce50f7f32845c7f614d", "node_id": "C_kwDOAAsO6NoAKDJjYTdmM2I0NWRmMTc2Mjk1ZDI3NmNlNTBmN2YzMjg0NWM3ZjYxNGQ", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-04-29T22:40:28Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-04-29T22:43:14Z"}, "message": "Resolve clippy::needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/data_race.rs:565:34\n        |\n    565 |         this.validate_atomic_rmw(&place, atomic)?;\n        |                                  ^^^^^^ help: change this to: `place`\n        |\n        = note: `-D clippy::needless-borrow` implied by `-D clippy::all`\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n        --> src/data_race.rs:1413:27\n         |\n    1413 |         clocks.clock.join(&lock);\n         |                           ^^^^^ help: change this to: `lock`\n         |\n         = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/helpers.rs:326:51\n        |\n    326 |                         .size_and_align_of_mplace(&place)?\n        |                                                   ^^^^^^ help: change this to: `place`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/helpers.rs:365:17\n        |\n    365 |                 &self.ecx\n        |                 ^^^^^^^^^ help: change this to: `self.ecx`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/helpers.rs:634:47\n        |\n    634 |         let seconds_place = this.mplace_field(&tp, 0)?;\n        |                                               ^^^ help: change this to: `tp`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/helpers.rs:637:51\n        |\n    637 |         let nanoseconds_place = this.mplace_field(&tp, 1)?;\n        |                                                   ^^^ help: change this to: `tp`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/machine.rs:547:73\n        |\n    547 |         let link_name = match ecx.tcx.sess.first_attr_value_str_by_name(&attrs, sym::link_name) {\n        |                                                                         ^^^^^^ help: change this to: `attrs`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/machine.rs:576:56\n        |\n    576 |             Some(data_race::AllocExtra::new_allocation(&data_race, alloc.size(), kind))\n        |                                                        ^^^^^^^^^^ help: change this to: `data_race`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/foreign_items.rs:241:43\n        |\n    241 |             .first_attr_value_str_by_name(&attrs, sym::link_name)\n        |                                           ^^^^^^ help: change this to: `attrs`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/intrinsics.rs:778:61\n        |\n    778 |                         .read_immediate(&this.operand_index(&index, i)?.into())?\n        |                                                             ^^^^^^ help: change this to: `index`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n        --> src/shims/intrinsics.rs:1195:44\n         |\n    1195 |                 this.write_immediate(*old, &dest)?; // old value is returned\n         |                                            ^^^^^ help: change this to: `dest`\n         |\n         = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n        --> src/shims/intrinsics.rs:1200:44\n         |\n    1200 |                 this.write_immediate(*old, &dest)?; // old value is returned\n         |                                            ^^^^^ help: change this to: `dest`\n         |\n         = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n      --> src/shims/posix/fs.rs:54:12\n       |\n    54 |         Ok(&self)\n       |            ^^^^^ help: change this to: `self`\n       |\n       = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/posix/fs.rs:654:49\n        |\n    654 |                 let io_result = maybe_sync_file(&file, *writable, File::sync_all);\n        |                                                 ^^^^^ help: change this to: `file`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/posix/fs.rs:746:52\n        |\n    746 |                 file_descriptor.write(communicate, &bytes)?.map(|c| i64::try_from(c).unwrap());\n        |                                                    ^^^^^^ help: change this to: `bytes`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n        --> src/shims/posix/fs.rs:1494:45\n         |\n    1494 |             let io_result = maybe_sync_file(&file, *writable, File::sync_all);\n         |                                             ^^^^^ help: change this to: `file`\n         |\n         = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n        --> src/shims/posix/fs.rs:1516:45\n         |\n    1516 |             let io_result = maybe_sync_file(&file, *writable, File::sync_data);\n         |                                             ^^^^^ help: change this to: `file`\n         |\n         = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n        --> src/shims/posix/fs.rs:1561:45\n         |\n    1561 |             let io_result = maybe_sync_file(&file, *writable, File::sync_data);\n         |                                             ^^^^^ help: change this to: `file`\n         |\n         = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/env.rs:232:65\n        |\n    232 |             let var_ptr = alloc_env_var_as_c_str(&name, &value, &mut this)?;\n        |                                                                 ^^^^^^^^^ help: change this to: `this`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/env.rs:277:68\n        |\n    277 |             let var_ptr = alloc_env_var_as_wide_str(&name, &value, &mut this)?;\n        |                                                                    ^^^^^^^^^ help: change this to: `this`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/env.rs:328:37\n        |\n    328 |         let buf = this.read_pointer(&buf_op)?;\n        |                                     ^^^^^^^ help: change this to: `buf_op`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/env.rs:329:37\n        |\n    329 |         let size = this.read_scalar(&size_op)?.to_machine_usize(&*this.tcx)?;\n        |                                     ^^^^^^^^ help: change this to: `size_op`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow", "tree": {"sha": "302e35d12eb77ab44d129cb4c933a488071b9dba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/302e35d12eb77ab44d129cb4c933a488071b9dba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ca7f3b45df176295d276ce50f7f32845c7f614d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmJsagIACgkQ+boUO5X/\nbYKmtxAAoe/FTgK+arecWgW+EeJEc8Gp5dhlqmMax5+GeIABeud/4tKf0KFs8L3W\nscaRcSIR82RcI7KV4Eal6hS/Tsrr+JUlMbDkLPJWnBr3V63qqnQJDmjXWnYuxyC3\naspWqFyhw5hf/GQGni/+Xuy1/IeWPhnv2z/qaD9nudyO3zU5vHdpIxWAuMSXUG4k\naYKWaXEiszwemuxzjxIWZpG3UYnHwaQ9TYCz3IaoqrpqWFZA3visJrkoXFC5JJc5\nVTaga9ELlNziSWBdo6tMEAGdEUqLQ500RXiiSAqJvpgH033Yjxq6NeA0OEThb870\nwBD0pW3lHvRCilAWufBHttWw1tFrFyQ8c6HTyGXlYMFtWUpp91BWNWmGUBy8OFdP\nGL4hiqEQ1AMf1TaDjDxT0BopayttoHjibwUu7agthVf9WUd+k7MwTarlvArQ/wzr\nAsTtnGnai9nOYft3zZt+yPWMnacha1y8GQGfoXP9TVF2GxtWtovXdxJSdFDW/kJ5\n+QzxgplC/GuctjJG1Av4V85uD38zX7pcUsAraxqy1ev16Fqo5CiM4Uw32RhLEWv2\nzS4hx1hjxmCi7ydDQQvwbcZLeM6d/7+JJZWdNO4AtF+OaBPakr19magCmGQNFwbS\nmvMhNddH3cMyCFJQ4UQxNhBIA7cRY7FlOsN490Tr2ntpuZ9lMig=\n=MZX0\n-----END PGP SIGNATURE-----", "payload": "tree 302e35d12eb77ab44d129cb4c933a488071b9dba\nparent 16c2400737d5f919235b9c00efaf9137bc3fd75c\nauthor David Tolnay <dtolnay@gmail.com> 1651272028 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1651272194 -0700\n\nResolve clippy::needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/data_race.rs:565:34\n        |\n    565 |         this.validate_atomic_rmw(&place, atomic)?;\n        |                                  ^^^^^^ help: change this to: `place`\n        |\n        = note: `-D clippy::needless-borrow` implied by `-D clippy::all`\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n        --> src/data_race.rs:1413:27\n         |\n    1413 |         clocks.clock.join(&lock);\n         |                           ^^^^^ help: change this to: `lock`\n         |\n         = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/helpers.rs:326:51\n        |\n    326 |                         .size_and_align_of_mplace(&place)?\n        |                                                   ^^^^^^ help: change this to: `place`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/helpers.rs:365:17\n        |\n    365 |                 &self.ecx\n        |                 ^^^^^^^^^ help: change this to: `self.ecx`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/helpers.rs:634:47\n        |\n    634 |         let seconds_place = this.mplace_field(&tp, 0)?;\n        |                                               ^^^ help: change this to: `tp`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/helpers.rs:637:51\n        |\n    637 |         let nanoseconds_place = this.mplace_field(&tp, 1)?;\n        |                                                   ^^^ help: change this to: `tp`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/machine.rs:547:73\n        |\n    547 |         let link_name = match ecx.tcx.sess.first_attr_value_str_by_name(&attrs, sym::link_name) {\n        |                                                                         ^^^^^^ help: change this to: `attrs`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/machine.rs:576:56\n        |\n    576 |             Some(data_race::AllocExtra::new_allocation(&data_race, alloc.size(), kind))\n        |                                                        ^^^^^^^^^^ help: change this to: `data_race`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/foreign_items.rs:241:43\n        |\n    241 |             .first_attr_value_str_by_name(&attrs, sym::link_name)\n        |                                           ^^^^^^ help: change this to: `attrs`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/intrinsics.rs:778:61\n        |\n    778 |                         .read_immediate(&this.operand_index(&index, i)?.into())?\n        |                                                             ^^^^^^ help: change this to: `index`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n        --> src/shims/intrinsics.rs:1195:44\n         |\n    1195 |                 this.write_immediate(*old, &dest)?; // old value is returned\n         |                                            ^^^^^ help: change this to: `dest`\n         |\n         = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n        --> src/shims/intrinsics.rs:1200:44\n         |\n    1200 |                 this.write_immediate(*old, &dest)?; // old value is returned\n         |                                            ^^^^^ help: change this to: `dest`\n         |\n         = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n      --> src/shims/posix/fs.rs:54:12\n       |\n    54 |         Ok(&self)\n       |            ^^^^^ help: change this to: `self`\n       |\n       = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/posix/fs.rs:654:49\n        |\n    654 |                 let io_result = maybe_sync_file(&file, *writable, File::sync_all);\n        |                                                 ^^^^^ help: change this to: `file`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/posix/fs.rs:746:52\n        |\n    746 |                 file_descriptor.write(communicate, &bytes)?.map(|c| i64::try_from(c).unwrap());\n        |                                                    ^^^^^^ help: change this to: `bytes`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n        --> src/shims/posix/fs.rs:1494:45\n         |\n    1494 |             let io_result = maybe_sync_file(&file, *writable, File::sync_all);\n         |                                             ^^^^^ help: change this to: `file`\n         |\n         = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n        --> src/shims/posix/fs.rs:1516:45\n         |\n    1516 |             let io_result = maybe_sync_file(&file, *writable, File::sync_data);\n         |                                             ^^^^^ help: change this to: `file`\n         |\n         = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n        --> src/shims/posix/fs.rs:1561:45\n         |\n    1561 |             let io_result = maybe_sync_file(&file, *writable, File::sync_data);\n         |                                             ^^^^^ help: change this to: `file`\n         |\n         = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/env.rs:232:65\n        |\n    232 |             let var_ptr = alloc_env_var_as_c_str(&name, &value, &mut this)?;\n        |                                                                 ^^^^^^^^^ help: change this to: `this`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/env.rs:277:68\n        |\n    277 |             let var_ptr = alloc_env_var_as_wide_str(&name, &value, &mut this)?;\n        |                                                                    ^^^^^^^^^ help: change this to: `this`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/env.rs:328:37\n        |\n    328 |         let buf = this.read_pointer(&buf_op)?;\n        |                                     ^^^^^^^ help: change this to: `buf_op`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    error: this expression creates a reference which is immediately dereferenced by the compiler\n       --> src/shims/env.rs:329:37\n        |\n    329 |         let size = this.read_scalar(&size_op)?.to_machine_usize(&*this.tcx)?;\n        |                                     ^^^^^^^^ help: change this to: `size_op`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ca7f3b45df176295d276ce50f7f32845c7f614d", "html_url": "https://github.com/rust-lang/rust/commit/2ca7f3b45df176295d276ce50f7f32845c7f614d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ca7f3b45df176295d276ce50f7f32845c7f614d/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16c2400737d5f919235b9c00efaf9137bc3fd75c", "url": "https://api.github.com/repos/rust-lang/rust/commits/16c2400737d5f919235b9c00efaf9137bc3fd75c", "html_url": "https://github.com/rust-lang/rust/commit/16c2400737d5f919235b9c00efaf9137bc3fd75c"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "b2bd29c5cb19a116083ca06ca965f39b52e5b706", "filename": "src/data_race.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Fdata_race.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Fdata_race.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdata_race.rs?ref=2ca7f3b45df176295d276ce50f7f32845c7f614d", "patch": "@@ -562,7 +562,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: MiriEvalContextExt<'mir, 'tcx> {\n \n         this.allow_data_races_mut(|this| this.write_immediate(**new_val, &(*place).into()))?;\n \n-        this.validate_atomic_rmw(&place, atomic)?;\n+        this.validate_atomic_rmw(place, atomic)?;\n \n         // Return the old value.\n         Ok(old)\n@@ -1410,7 +1410,7 @@ impl GlobalState {\n     /// incremented.\n     pub fn validate_lock_acquire(&self, lock: &VClock, thread: ThreadId) {\n         let (_, mut clocks) = self.load_thread_state_mut(thread);\n-        clocks.clock.join(&lock);\n+        clocks.clock.join(lock);\n     }\n \n     /// Release a lock handle, express that this happens-before"}, {"sha": "1d84b3fdf16ef6f6b8a344e70e6b8cc98ac95e37", "filename": "src/helpers.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=2ca7f3b45df176295d276ce50f7f32845c7f614d", "patch": "@@ -323,7 +323,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     trace!(\"unsafe_cell_action on {:?}\", place.ptr);\n                     // We need a size to go on.\n                     let unsafe_cell_size = this\n-                        .size_and_align_of_mplace(&place)?\n+                        .size_and_align_of_mplace(place)?\n                         .map(|(size, _)| size)\n                         // for extern types, just cover what we can\n                         .unwrap_or_else(|| place.layout.size);\n@@ -362,7 +362,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n             #[inline(always)]\n             fn ecx(&self) -> &MiriEvalContext<'mir, 'tcx> {\n-                &self.ecx\n+                self.ecx\n             }\n \n             // Hook to detect `UnsafeCell`.\n@@ -631,10 +631,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     /// `EINVAL` in this case.\n     fn read_timespec(&mut self, tp: &MPlaceTy<'tcx, Tag>) -> InterpResult<'tcx, Option<Duration>> {\n         let this = self.eval_context_mut();\n-        let seconds_place = this.mplace_field(&tp, 0)?;\n+        let seconds_place = this.mplace_field(tp, 0)?;\n         let seconds_scalar = this.read_scalar(&seconds_place.into())?;\n         let seconds = seconds_scalar.to_machine_isize(this)?;\n-        let nanoseconds_place = this.mplace_field(&tp, 1)?;\n+        let nanoseconds_place = this.mplace_field(tp, 1)?;\n         let nanoseconds_scalar = this.read_scalar(&nanoseconds_place.into())?;\n         let nanoseconds = nanoseconds_scalar.to_machine_isize(this)?;\n "}, {"sha": "598d9cc96ae6f380699bf6925c856c62524943cd", "filename": "src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=2ca7f3b45df176295d276ce50f7f32845c7f614d", "patch": "@@ -18,7 +18,6 @@\n     clippy::from_over_into,\n     clippy::if_same_then_else,\n     clippy::manual_map,\n-    clippy::needless_borrow,\n     clippy::needless_lifetimes,\n     clippy::needless_question_mark,\n     clippy::needless_return,"}, {"sha": "0a8a229c8aa2cc5464133f2449321b4567d6012f", "filename": "src/machine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=2ca7f3b45df176295d276ce50f7f32845c7f614d", "patch": "@@ -544,7 +544,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n         def_id: DefId,\n     ) -> InterpResult<'tcx, Pointer<Tag>> {\n         let attrs = ecx.tcx.get_attrs(def_id);\n-        let link_name = match ecx.tcx.sess.first_attr_value_str_by_name(&attrs, sym::link_name) {\n+        let link_name = match ecx.tcx.sess.first_attr_value_str_by_name(attrs, sym::link_name) {\n             Some(name) => name,\n             None => ecx.tcx.item_name(def_id),\n         };\n@@ -573,7 +573,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n             None\n         };\n         let race_alloc = if let Some(data_race) = &ecx.machine.data_race {\n-            Some(data_race::AllocExtra::new_allocation(&data_race, alloc.size(), kind))\n+            Some(data_race::AllocExtra::new_allocation(data_race, alloc.size(), kind))\n         } else {\n             None\n         };"}, {"sha": "915decc28725ddf2e2aed4f9e7b06e08abf2063d", "filename": "src/shims/env.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=2ca7f3b45df176295d276ce50f7f32845c7f614d", "patch": "@@ -210,7 +210,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         name_op: &OpTy<'tcx, Tag>,\n         value_op: &OpTy<'tcx, Tag>,\n     ) -> InterpResult<'tcx, i32> {\n-        let mut this = self.eval_context_mut();\n+        let this = self.eval_context_mut();\n         let target_os = &this.tcx.sess.target.os;\n         assert!(\n             target_os == \"linux\" || target_os == \"macos\",\n@@ -229,7 +229,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             }\n         }\n         if let Some((name, value)) = new {\n-            let var_ptr = alloc_env_var_as_c_str(&name, &value, &mut this)?;\n+            let var_ptr = alloc_env_var_as_c_str(&name, &value, this)?;\n             if let Some(var) = this.machine.env_vars.map.insert(name, var_ptr) {\n                 this.deallocate_ptr(var, None, MiriMemoryKind::Runtime.into())?;\n             }\n@@ -249,7 +249,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         name_op: &OpTy<'tcx, Tag>,  // LPCWSTR\n         value_op: &OpTy<'tcx, Tag>, // LPCWSTR\n     ) -> InterpResult<'tcx, i32> {\n-        let mut this = self.eval_context_mut();\n+        let this = self.eval_context_mut();\n         this.assert_target_os(\"windows\", \"SetEnvironmentVariableW\");\n \n         let name_ptr = this.read_pointer(name_op)?;\n@@ -274,7 +274,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             Ok(1) // return non-zero on success\n         } else {\n             let value = this.read_os_str_from_wide_str(value_ptr)?;\n-            let var_ptr = alloc_env_var_as_wide_str(&name, &value, &mut this)?;\n+            let var_ptr = alloc_env_var_as_wide_str(&name, &value, this)?;\n             if let Some(var) = this.machine.env_vars.map.insert(name, var_ptr) {\n                 this.deallocate_ptr(var, None, MiriMemoryKind::Runtime.into())?;\n             }\n@@ -325,8 +325,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             \"`getcwd` is only available for the UNIX target family\"\n         );\n \n-        let buf = this.read_pointer(&buf_op)?;\n-        let size = this.read_scalar(&size_op)?.to_machine_usize(&*this.tcx)?;\n+        let buf = this.read_pointer(buf_op)?;\n+        let size = this.read_scalar(size_op)?.to_machine_usize(&*this.tcx)?;\n \n         if let IsolatedOp::Reject(reject_with) = this.machine.isolated_op {\n             this.reject_in_isolation(\"`getcwd`\", reject_with)?;"}, {"sha": "9256013fb157f14d60c5720885d66d94dcd87a5c", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=2ca7f3b45df176295d276ce50f7f32845c7f614d", "patch": "@@ -238,7 +238,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let link_name = this\n             .tcx\n             .sess\n-            .first_attr_value_str_by_name(&attrs, sym::link_name)\n+            .first_attr_value_str_by_name(attrs, sym::link_name)\n             .unwrap_or_else(|| this.tcx.item_name(def_id));\n         let tcx = this.tcx.tcx;\n "}, {"sha": "06537b5d333bf84ef4287abe3ce7de7f20546dde", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=2ca7f3b45df176295d276ce50f7f32845c7f614d", "patch": "@@ -775,7 +775,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n                 for i in 0..dest_len {\n                     let src_index: u64 = this\n-                        .read_immediate(&this.operand_index(&index, i)?.into())?\n+                        .read_immediate(&this.operand_index(index, i)?.into())?\n                         .to_scalar()?\n                         .to_u32()?\n                         .into();\n@@ -1192,12 +1192,12 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         match atomic_op {\n             AtomicOp::Min => {\n                 let old = this.atomic_min_max_scalar(&place, rhs, true, atomic)?;\n-                this.write_immediate(*old, &dest)?; // old value is returned\n+                this.write_immediate(*old, dest)?; // old value is returned\n                 Ok(())\n             }\n             AtomicOp::Max => {\n                 let old = this.atomic_min_max_scalar(&place, rhs, false, atomic)?;\n-                this.write_immediate(*old, &dest)?; // old value is returned\n+                this.write_immediate(*old, dest)?; // old value is returned\n                 Ok(())\n             }\n             AtomicOp::MirOp(op, neg) => {"}, {"sha": "7957edf5c65ebaeea468375201981f86035be019", "filename": "src/shims/posix/fs.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Fshims%2Fposix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca7f3b45df176295d276ce50f7f32845c7f614d/src%2Fshims%2Fposix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Ffs.rs?ref=2ca7f3b45df176295d276ce50f7f32845c7f614d", "patch": "@@ -51,7 +51,7 @@ trait FileDescriptor: std::fmt::Debug {\n \n impl FileDescriptor for FileHandle {\n     fn as_file_handle<'tcx>(&self) -> InterpResult<'tcx, &FileHandle> {\n-        Ok(&self)\n+        Ok(self)\n     }\n \n     fn read<'tcx>(\n@@ -651,7 +651,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             if let Some(file_descriptor) = this.machine.file_handler.handles.get(&fd) {\n                 // FIXME: Support fullfsync for all FDs\n                 let FileHandle { file, writable } = file_descriptor.as_file_handle()?;\n-                let io_result = maybe_sync_file(&file, *writable, File::sync_all);\n+                let io_result = maybe_sync_file(file, *writable, File::sync_all);\n                 this.try_unwrap_io_result(io_result)\n             } else {\n                 this.handle_not_found()\n@@ -743,7 +743,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         if let Some(file_descriptor) = this.machine.file_handler.handles.get(&fd) {\n             let bytes = this.read_bytes_ptr(buf, Size::from_bytes(count))?;\n             let result =\n-                file_descriptor.write(communicate, &bytes)?.map(|c| i64::try_from(c).unwrap());\n+                file_descriptor.write(communicate, bytes)?.map(|c| i64::try_from(c).unwrap());\n             this.try_unwrap_io_result(result)\n         } else {\n             this.handle_not_found()\n@@ -1491,7 +1491,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         if let Some(file_descriptor) = this.machine.file_handler.handles.get(&fd) {\n             // FIXME: Support fsync for all FDs\n             let FileHandle { file, writable } = file_descriptor.as_file_handle()?;\n-            let io_result = maybe_sync_file(&file, *writable, File::sync_all);\n+            let io_result = maybe_sync_file(file, *writable, File::sync_all);\n             this.try_unwrap_io_result(io_result)\n         } else {\n             this.handle_not_found()\n@@ -1513,7 +1513,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         if let Some(file_descriptor) = this.machine.file_handler.handles.get(&fd) {\n             // FIXME: Support fdatasync for all FDs\n             let FileHandle { file, writable } = file_descriptor.as_file_handle()?;\n-            let io_result = maybe_sync_file(&file, *writable, File::sync_data);\n+            let io_result = maybe_sync_file(file, *writable, File::sync_data);\n             this.try_unwrap_io_result(io_result)\n         } else {\n             this.handle_not_found()\n@@ -1558,7 +1558,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         if let Some(file_descriptor) = this.machine.file_handler.handles.get(&fd) {\n             // FIXME: Support sync_data_range for all FDs\n             let FileHandle { file, writable } = file_descriptor.as_file_handle()?;\n-            let io_result = maybe_sync_file(&file, *writable, File::sync_data);\n+            let io_result = maybe_sync_file(file, *writable, File::sync_data);\n             this.try_unwrap_io_result(io_result)\n         } else {\n             this.handle_not_found()"}]}