{"sha": "f41f38044f0d974eac15d58e6d3c6d59fa7413c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0MWYzODA0NGYwZDk3NGVhYzE1ZDU4ZTZkM2M2ZDU5ZmE3NDEzYzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-03T14:13:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-03T14:13:51Z"}, "message": "Auto merge of #7154 - camsteffen:better-conf, r=flip1995\n\n`Conf` macro improvements part 2\n\nchangelog: none\n\nFollow-up to #7150\n\nI made the default value required again for `define_Conf!` so that it can be parsed by the magic Python. I guess it's just as well for readability.\n\nr? `@flip1995`", "tree": {"sha": "d62fd18be0513014df479f76d422be2c73deb7f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d62fd18be0513014df479f76d422be2c73deb7f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f41f38044f0d974eac15d58e6d3c6d59fa7413c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f41f38044f0d974eac15d58e6d3c6d59fa7413c7", "html_url": "https://github.com/rust-lang/rust/commit/f41f38044f0d974eac15d58e6d3c6d59fa7413c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f41f38044f0d974eac15d58e6d3c6d59fa7413c7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "019dfb950252e5df05ac2fc2e7fc9d0197c19619", "url": "https://api.github.com/repos/rust-lang/rust/commits/019dfb950252e5df05ac2fc2e7fc9d0197c19619", "html_url": "https://github.com/rust-lang/rust/commit/019dfb950252e5df05ac2fc2e7fc9d0197c19619"}, {"sha": "ffb0951a4d80cda686349f8f735ac4ac8a0e0cb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffb0951a4d80cda686349f8f735ac4ac8a0e0cb4", "html_url": "https://github.com/rust-lang/rust/commit/ffb0951a4d80cda686349f8f735ac4ac8a0e0cb4"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "dc079663fc97ade07afffd238b2a88500d8f934f", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f41f38044f0d974eac15d58e6d3c6d59fa7413c7/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f41f38044f0d974eac15d58e6d3c6d59fa7413c7/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=f41f38044f0d974eac15d58e6d3c6d59fa7413c7", "patch": "@@ -28,15 +28,15 @@ macro_rules! define_Conf {\n     ($(\n         #[$doc:meta]\n         $(#[conf_deprecated($dep:literal)])?\n-        ($name:ident: $ty:ty $(= $default:expr)?),\n+        ($name:ident: $ty:ty = $default:expr),\n     )*) => {\n         /// Clippy lint configuration\n         pub struct Conf {\n             $(#[$doc] pub $name: $ty,)*\n         }\n \n         mod defaults {\n-            $(pub fn $name() -> $ty { define_Conf!(@default $($default)?) })*\n+            $(pub fn $name() -> $ty { $default })*\n         }\n \n         impl Default for Conf {\n@@ -90,20 +90,19 @@ macro_rules! define_Conf {\n             }\n         }\n     };\n-    (@default) => (Default::default());\n-    (@default $default:expr) => ($default);\n }\n \n+// N.B., this macro is parsed by util/lintlib.py\n define_Conf! {\n     /// Lint: CLONED_INSTEAD_OF_COPIED, REDUNDANT_FIELD_NAMES, REDUNDANT_STATIC_LIFETIMES, FILTER_MAP_NEXT, CHECKED_CONVERSIONS, MANUAL_RANGE_CONTAINS, USE_SELF, MEM_REPLACE_WITH_DEFAULT, MANUAL_NON_EXHAUSTIVE, OPTION_AS_REF_DEREF, MAP_UNWRAP_OR, MATCH_LIKE_MATCHES_MACRO, MANUAL_STRIP, MISSING_CONST_FOR_FN, UNNESTED_OR_PATTERNS, FROM_OVER_INTO, PTR_AS_PTR. The minimum rust version that the project supports\n-    (msrv: Option<String>),\n+    (msrv: Option<String> = None),\n     /// Lint: BLACKLISTED_NAME. The list of blacklisted names to lint about. NB: `bar` is not here since it has legitimate uses\n     (blacklisted_names: Vec<String> = [\"foo\", \"baz\", \"quux\"].iter().map(ToString::to_string).collect()),\n     /// Lint: COGNITIVE_COMPLEXITY. The maximum cognitive complexity a function can have\n     (cognitive_complexity_threshold: u64 = 25),\n     /// DEPRECATED LINT: CYCLOMATIC_COMPLEXITY. Use the Cognitive Complexity lint instead.\n-    #[conf_deprecated(\"Please use `cognitive-complexity-threshold` instead.\")]\n-    (cyclomatic_complexity_threshold: Option<u64>),\n+    #[conf_deprecated(\"Please use `cognitive-complexity-threshold` instead\")]\n+    (cyclomatic_complexity_threshold: Option<u64> = None),\n     /// Lint: DOC_MARKDOWN. The list of words this lint should not consider as identifiers needing ticks\n     (doc_valid_idents: Vec<String> = [\n         \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\",\n@@ -142,7 +141,7 @@ define_Conf! {\n     /// Lint: DECIMAL_LITERAL_REPRESENTATION. The lower bound for linting decimal literals\n     (literal_representation_threshold: u64 = 16384),\n     /// Lint: TRIVIALLY_COPY_PASS_BY_REF. The maximum size (in bytes) to consider a `Copy` type for passing by value instead of by reference.\n-    (trivial_copy_size_limit: Option<u64>),\n+    (trivial_copy_size_limit: Option<u64> = None),\n     /// Lint: LARGE_TYPE_PASS_BY_MOVE. The minimum size (in bytes) to consider a type for passing by reference instead of by value.\n     (pass_by_value_size_limit: u64 = 256),\n     /// Lint: TOO_MANY_LINES. The maximum number of lines a function or method can have\n@@ -158,15 +157,15 @@ define_Conf! {\n     /// Lint: FN_PARAMS_EXCESSIVE_BOOLS. The maximum number of bools function parameters can have\n     (max_fn_params_bools: u64 = 3),\n     /// Lint: WILDCARD_IMPORTS. Whether to allow certain wildcard imports (prelude, super in tests).\n-    (warn_on_all_wildcard_imports: bool),\n+    (warn_on_all_wildcard_imports: bool = false),\n     /// Lint: DISALLOWED_METHOD. The list of disallowed methods, written as fully qualified paths.\n-    (disallowed_methods: Vec<String>),\n+    (disallowed_methods: Vec<String> = Vec::new()),\n     /// Lint: UNREADABLE_LITERAL. Should the fraction of a decimal be linted to include separators.\n     (unreadable_literal_lint_fractions: bool = true),\n     /// Lint: UPPER_CASE_ACRONYMS. Enables verbose mode. Triggers if there is more than one uppercase char next to each other\n-    (upper_case_acronyms_aggressive: bool),\n+    (upper_case_acronyms_aggressive: bool = false),\n     /// Lint: _CARGO_COMMON_METADATA. For internal testing only, ignores the current `publish` settings in the Cargo manifest.\n-    (cargo_ignore_publish: bool),\n+    (cargo_ignore_publish: bool = false),\n }\n \n /// Search for the configuration file."}, {"sha": "5a06afedbf4c2e7b86afff20847a30456b7a6d41", "filename": "doc/adding_lints.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f41f38044f0d974eac15d58e6d3c6d59fa7413c7/doc%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/f41f38044f0d974eac15d58e6d3c6d59fa7413c7/doc%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fadding_lints.md?ref=f41f38044f0d974eac15d58e6d3c6d59fa7413c7", "patch": "@@ -454,7 +454,7 @@ in `clippy_lints/src/utils/conf.rs`:\n ```rust\n define_Conf! {\n     /// Lint: LIST, OF, LINTS, <THE_NEWLY_ADDED_LINT>. The minimum rust version that the project supports\n-    (msrv, \"msrv\": Option<String>, None),\n+    (msrv: Option<String> = None),\n     ...\n }\n ```\n@@ -562,7 +562,7 @@ in the following steps:\n     like this:\n     ```rust\n     /// Lint: LINT_NAME. <The configuration field doc comment>\n-    (configuration_ident, \"configuration_value\": Type, DefaultValue),\n+    (configuration_ident: Type = DefaultValue),\n     ```\n     The configuration value and identifier should usually be the same. The doc comment will be\n     automatically added to the lint documentation."}, {"sha": "90021a034a3d3b358ae1eb472f733904ee8649d1", "filename": "tests/ui-toml/conf_deprecated_key/conf_deprecated_key.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f41f38044f0d974eac15d58e6d3c6d59fa7413c7/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f41f38044f0d974eac15d58e6d3c6d59fa7413c7/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.stderr?ref=f41f38044f0d974eac15d58e6d3c6d59fa7413c7", "patch": "@@ -1,4 +1,4 @@\n-error: error reading Clippy's configuration file `$DIR/clippy.toml`: deprecated field `cyclomatic-complexity-threshold`. Please use `cognitive-complexity-threshold` instead.\n+error: error reading Clippy's configuration file `$DIR/clippy.toml`: deprecated field `cyclomatic-complexity-threshold`. Please use `cognitive-complexity-threshold` instead\n \n error: aborting due to previous error\n "}, {"sha": "5707cf0ce0f8c08177f68866b7065c6c9feb2182", "filename": "util/lintlib.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f41f38044f0d974eac15d58e6d3c6d59fa7413c7/util%2Flintlib.py", "raw_url": "https://github.com/rust-lang/rust/raw/f41f38044f0d974eac15d58e6d3c6d59fa7413c7/util%2Flintlib.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Flintlib.py?ref=f41f38044f0d974eac15d58e6d3c6d59fa7413c7", "patch": "@@ -14,7 +14,7 @@\n group_re = re.compile(r'''\\s*([a-z_][a-z_0-9]+)''')\n conf_re = re.compile(r'''define_Conf! {\\n([^}]*)\\n}''', re.MULTILINE)\n confvar_re = re.compile(\n-    r'''/// Lint: ([\\w,\\s]+)\\. (.*)\\n\\s*\\([^,]+,\\s+\"([^\"]+)\":\\s+([^,]+),\\s+([^\\.\\)]+).*\\),''', re.MULTILINE)\n+    r'''/// Lint: ([\\w,\\s]+)\\. (.*)\\n\\s*\\(([^:]+):\\s*([^\\s=]+)\\s*=\\s*([^\\.\\)]+).*\\),''', re.MULTILINE)\n comment_re = re.compile(r'''\\s*/// ?(.*)''')\n \n lint_levels = {"}]}