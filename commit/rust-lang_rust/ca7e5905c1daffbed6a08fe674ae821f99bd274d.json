{"sha": "ca7e5905c1daffbed6a08fe674ae821f99bd274d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhN2U1OTA1YzFkYWZmYmVkNmEwOGZlNjc0YWU4MjFmOTliZDI3NGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-08T21:51:06Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-09T10:33:16Z"}, "message": "more crate boilerplate", "tree": {"sha": "754bc504f4a2d459e5e90dfbe312d23554fbb1bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/754bc504f4a2d459e5e90dfbe312d23554fbb1bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca7e5905c1daffbed6a08fe674ae821f99bd274d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca7e5905c1daffbed6a08fe674ae821f99bd274d", "html_url": "https://github.com/rust-lang/rust/commit/ca7e5905c1daffbed6a08fe674ae821f99bd274d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca7e5905c1daffbed6a08fe674ae821f99bd274d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c6c7ec2daacdbcaae8fe697b30d4c99aae69090", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c6c7ec2daacdbcaae8fe697b30d4c99aae69090", "html_url": "https://github.com/rust-lang/rust/commit/9c6c7ec2daacdbcaae8fe697b30d4c99aae69090"}], "stats": {"total": 67, "additions": 54, "deletions": 13}, "files": [{"sha": "5cfc064b51ff157ed11fa35358f39ad43cc9abff", "filename": "Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca7e5905c1daffbed6a08fe674ae821f99bd274d/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ca7e5905c1daffbed6a08fe674ae821f99bd274d/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=ca7e5905c1daffbed6a08fe674ae821f99bd274d", "patch": "@@ -1,6 +1,5 @@\n [workspace]\n members = [ \"crates/*\" ]\n-exclude = [ \"crates/rowan\"]\n \n [profile.release]\n debug = true"}, {"sha": "37da8c5495ace7587375eee7c1ffdf3d494b2dfa", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ca7e5905c1daffbed6a08fe674ae821f99bd274d/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca7e5905c1daffbed6a08fe674ae821f99bd274d/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=ca7e5905c1daffbed6a08fe674ae821f99bd274d", "patch": "@@ -20,25 +20,31 @@ pub struct CrateGraph {\n #[derive(Debug, Clone, PartialEq, Eq)]\n struct CrateData {\n     file_id: FileId,\n-    deps: Vec<Dependency>,\n+    dependencies: Vec<Dependency>,\n }\n \n impl CrateData {\n     fn new(file_id: FileId) -> CrateData {\n         CrateData {\n             file_id,\n-            deps: Vec::new(),\n+            dependencies: Vec::new(),\n         }\n     }\n \n     fn add_dep(&mut self, dep: CrateId) {\n-        self.deps.push(Dependency { crate_: dep })\n+        self.dependencies.push(Dependency { crate_id: dep })\n     }\n }\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct Dependency {\n-    crate_: CrateId,\n+    crate_id: CrateId,\n+}\n+\n+impl Dependency {\n+    pub fn crate_id(&self) -> CrateId {\n+        self.crate_id\n+    }\n }\n \n impl CrateGraph {\n@@ -64,6 +70,12 @@ impl CrateGraph {\n             .find(|(_crate_id, data)| data.file_id == file_id)?;\n         Some(crate_id)\n     }\n+    pub fn dependencies<'a>(\n+        &'a self,\n+        crate_id: CrateId,\n+    ) -> impl Iterator<Item = &'a Dependency> + 'a {\n+        self.arena[&crate_id].dependencies.iter()\n+    }\n }\n \n salsa::query_group! {"}, {"sha": "61007cc29ad0f4cad779e6d4071586462f9699a1", "filename": "crates/ra_hir/src/krate.rs", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/ca7e5905c1daffbed6a08fe674ae821f99bd274d/crates%2Fra_hir%2Fsrc%2Fkrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca7e5905c1daffbed6a08fe674ae821f99bd274d/crates%2Fra_hir%2Fsrc%2Fkrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fkrate.rs?ref=ca7e5905c1daffbed6a08fe674ae821f99bd274d", "patch": "@@ -1,15 +1,37 @@\n-use crate::FileId;\n+use crate::{HirDatabase, Module, Cancelable};\n \n-#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n-pub struct CrateId(u32);\n+pub use ra_db::CrateId;\n \n+/// hir::Crate describes a single crate. It's the main inteface with which\n+/// crate's dependencies interact. Mostly, it should be just a proxy for the\n+/// root module.\n #[derive(Debug)]\n pub struct Crate {\n-    root: FileId,\n+    crate_id: CrateId,\n }\n \n impl Crate {\n-    pub fn dependencies(&self) -> Vec<CrateId> {\n-        Vec::new()\n+    pub(crate) fn new(crate_id: CrateId) -> Crate {\n+        Crate { crate_id }\n+    }\n+    pub fn dependencies(&self, db: &impl HirDatabase) -> Vec<Crate> {\n+        let crate_graph = db.crate_graph();\n+        crate_graph\n+            .dependencies(self.crate_id)\n+            .map(|dep| Crate::new(dep.crate_id()))\n+            .collect()\n+    }\n+    pub fn root_module(&self, db: &impl HirDatabase) -> Cancelable<Option<Module>> {\n+        let crate_graph = db.crate_graph();\n+        let file_id = crate_graph.crate_root(self.crate_id);\n+        let source_root_id = db.file_source_root(file_id);\n+        let module_tree = db.module_tree(source_root_id)?;\n+        // FIXME: teach module tree about crate roots instead of guessing\n+        let (module_id, _) = ctry!(module_tree\n+            .modules_with_sources()\n+            .find(|(_, src)| src.file_id() == file_id));\n+\n+        let module = Module::new(db, source_root_id, module_id)?;\n+        Ok(Some(module))\n     }\n }"}, {"sha": "578fde2595f1d0f2ebef1e54e82ddca50a5f28a5", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca7e5905c1daffbed6a08fe674ae821f99bd274d/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca7e5905c1daffbed6a08fe674ae821f99bd274d/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=ca7e5905c1daffbed6a08fe674ae821f99bd274d", "patch": "@@ -26,7 +26,6 @@ mod krate;\n mod module;\n mod function;\n \n-\n use std::ops::Index;\n \n use ra_syntax::{SyntaxNodeRef, SyntaxNode};"}, {"sha": "c6bb76d56dfebdef4e76706450c7973de6974ead", "filename": "crates/ra_hir/src/module.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ca7e5905c1daffbed6a08fe674ae821f99bd274d/crates%2Fra_hir%2Fsrc%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca7e5905c1daffbed6a08fe674ae821f99bd274d/crates%2Fra_hir%2Fsrc%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule.rs?ref=ca7e5905c1daffbed6a08fe674ae821f99bd274d", "patch": "@@ -12,7 +12,7 @@ use ra_db::{SourceRootId, FileId, Cancelable};\n use relative_path::RelativePathBuf;\n \n use crate::{\n-    DefKind, DefLoc, DefId, Path, PathKind, HirDatabase, SourceItemId, SourceFileItemId,\n+    DefKind, DefLoc, DefId, Path, PathKind, HirDatabase, SourceItemId, SourceFileItemId, Crate,\n     arena::{Arena, Id},\n };\n \n@@ -64,6 +64,15 @@ impl Module {\n         })\n     }\n \n+    /// Returns the crate this module is part of.\n+    pub fn krate(&self, db: &impl HirDatabase) -> Option<Crate> {\n+        let root_id = self.module_id.crate_root(&self.tree);\n+        let file_id = root_id.source(&self.tree).file_id();\n+        let crate_graph = db.crate_graph();\n+        let crate_id = crate_graph.crate_id_for_crate_root(file_id)?;\n+        Some(Crate::new(crate_id))\n+    }\n+\n     /// The root of the tree this module is part of\n     pub fn crate_root(&self) -> Module {\n         let root_id = self.module_id.crate_root(&self.tree);"}]}