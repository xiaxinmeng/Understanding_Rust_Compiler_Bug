{"sha": "031243898eaa138056ea7248fb37324ffaa561e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMTI0Mzg5OGVhYTEzODA1NmVhNzI0OGZiMzczMjRmZmFhNTYxZTE=", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-07-19T11:03:29Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-08-26T09:00:30Z"}, "message": "check for cycles in `default_anon_const_substs`", "tree": {"sha": "658d28f4f7f335c4f90318a0dcd4fd0919e5c323", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/658d28f4f7f335c4f90318a0dcd4fd0919e5c323"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/031243898eaa138056ea7248fb37324ffaa561e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/031243898eaa138056ea7248fb37324ffaa561e1", "html_url": "https://github.com/rust-lang/rust/commit/031243898eaa138056ea7248fb37324ffaa561e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/031243898eaa138056ea7248fb37324ffaa561e1/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2140016d6c7239fe02c87c5ac421c0df4b880e15", "url": "https://api.github.com/repos/rust-lang/rust/commits/2140016d6c7239fe02c87c5ac421c0df4b880e15", "html_url": "https://github.com/rust-lang/rust/commit/2140016d6c7239fe02c87c5ac421c0df4b880e15"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "2f0a5eb79bc154f9976037407ccd2f7573e69843", "filename": "compiler/rustc_typeck/src/collect/type_of.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/031243898eaa138056ea7248fb37324ffaa561e1/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/031243898eaa138056ea7248fb37324ffaa561e1/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs?ref=031243898eaa138056ea7248fb37324ffaa561e1", "patch": "@@ -275,6 +275,11 @@ fn get_path_containing_arg_in_pat<'hir>(\n }\n \n pub(super) fn default_anon_const_substs(tcx: TyCtxt<'_>, def_id: DefId) -> SubstsRef<'_> {\n+    let generics = tcx.generics_of(def_id);\n+    if let Some(parent) = generics.parent {\n+        let _cycle_check = tcx.predicates_of(parent);\n+    }\n+\n     let substs = InternalSubsts::identity_for_item(tcx, def_id);\n     // We only expect substs with the following type flags as default substs.\n     //"}]}