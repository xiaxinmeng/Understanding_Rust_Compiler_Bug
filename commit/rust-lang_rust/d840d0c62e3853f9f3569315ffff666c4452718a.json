{"sha": "d840d0c62e3853f9f3569315ffff666c4452718a", "node_id": "C_kwDOAAsO6NoAKGQ4NDBkMGM2MmUzODUzZjlmMzU2OTMxNWZmZmY2NjZjNDQ1MjcxOGE", "commit": {"author": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-01-18T22:02:42Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-01-18T22:25:31Z"}, "message": "Use .. patterns in cfg_build.rs", "tree": {"sha": "72b16bb7f418cd4e077a7cfe842ef6e39b8eb557", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72b16bb7f418cd4e077a7cfe842ef6e39b8eb557"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d840d0c62e3853f9f3569315ffff666c4452718a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d840d0c62e3853f9f3569315ffff666c4452718a", "html_url": "https://github.com/rust-lang/rust/commit/d840d0c62e3853f9f3569315ffff666c4452718a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d840d0c62e3853f9f3569315ffff666c4452718a/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0a5370ef00938db0e76f6d7845befb51be629ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0a5370ef00938db0e76f6d7845befb51be629ff", "html_url": "https://github.com/rust-lang/rust/commit/e0a5370ef00938db0e76f6d7845befb51be629ff"}], "stats": {"total": 60, "additions": 30, "deletions": 30}, "files": [{"sha": "fc150e09484b6fb443712724ae6820ecc445c8bb", "filename": "compiler/rustc_typeck/src/check/generator_interior/drop_ranges/cfg_build.rs", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/d840d0c62e3853f9f3569315ffff666c4452718a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_build.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d840d0c62e3853f9f3569315ffff666c4452718a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_build.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_build.rs?ref=d840d0c62e3853f9f3569315ffff666c4452718a", "patch": "@@ -163,36 +163,36 @@ impl<'a, 'tcx> DropRangeVisitor<'a, 'tcx> {\n             //\n             // Some of these may be interesting in the future\n             ExprKind::Path(..)\n-            | ExprKind::Box(_)\n-            | ExprKind::ConstBlock(_)\n-            | ExprKind::Array(_)\n-            | ExprKind::Call(_, _)\n-            | ExprKind::MethodCall(_, _, _, _)\n-            | ExprKind::Tup(_)\n-            | ExprKind::Binary(_, _, _)\n-            | ExprKind::Unary(_, _)\n-            | ExprKind::Lit(_)\n-            | ExprKind::Cast(_, _)\n-            | ExprKind::Type(_, _)\n-            | ExprKind::DropTemps(_)\n-            | ExprKind::Let(_, _, _)\n-            | ExprKind::If(_, _, _)\n-            | ExprKind::Loop(_, _, _, _)\n-            | ExprKind::Match(_, _, _)\n-            | ExprKind::Closure(_, _, _, _, _)\n-            | ExprKind::Block(_, _)\n-            | ExprKind::Assign(_, _, _)\n-            | ExprKind::AssignOp(_, _, _)\n-            | ExprKind::Index(_, _)\n-            | ExprKind::AddrOf(_, _, _)\n-            | ExprKind::Break(_, _)\n-            | ExprKind::Continue(_)\n-            | ExprKind::Ret(_)\n-            | ExprKind::InlineAsm(_)\n-            | ExprKind::LlvmInlineAsm(_)\n-            | ExprKind::Struct(_, _, _)\n-            | ExprKind::Repeat(_, _)\n-            | ExprKind::Yield(_, _)\n+            | ExprKind::Box(..)\n+            | ExprKind::ConstBlock(..)\n+            | ExprKind::Array(..)\n+            | ExprKind::Call(..)\n+            | ExprKind::MethodCall(..)\n+            | ExprKind::Tup(..)\n+            | ExprKind::Binary(..)\n+            | ExprKind::Unary(..)\n+            | ExprKind::Lit(..)\n+            | ExprKind::Cast(..)\n+            | ExprKind::Type(..)\n+            | ExprKind::DropTemps(..)\n+            | ExprKind::Let(..)\n+            | ExprKind::If(..)\n+            | ExprKind::Loop(..)\n+            | ExprKind::Match(..)\n+            | ExprKind::Closure(..)\n+            | ExprKind::Block(..)\n+            | ExprKind::Assign(..)\n+            | ExprKind::AssignOp(..)\n+            | ExprKind::Index(..)\n+            | ExprKind::AddrOf(..)\n+            | ExprKind::Break(..)\n+            | ExprKind::Continue(..)\n+            | ExprKind::Ret(..)\n+            | ExprKind::InlineAsm(..)\n+            | ExprKind::LlvmInlineAsm(..)\n+            | ExprKind::Struct(..)\n+            | ExprKind::Repeat(..)\n+            | ExprKind::Yield(..)\n             | ExprKind::Err => (),\n         }\n     }"}]}