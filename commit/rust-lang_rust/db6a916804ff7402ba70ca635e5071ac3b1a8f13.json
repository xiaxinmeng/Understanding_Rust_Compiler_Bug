{"sha": "db6a916804ff7402ba70ca635e5071ac3b1a8f13", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNmE5MTY4MDRmZjc0MDJiYTcwY2E2MzVlNTA3MWFjM2IxYThmMTM=", "commit": {"author": {"name": "Ali\u00e9nore Bouttefeux", "email": "alienore.bouttefeux@gmail.com", "date": "2021-04-04T14:53:59Z"}, "committer": {"name": "Ali\u00e9nore Bouttefeux", "email": "alienore.bouttefeux@gmail.com", "date": "2021-04-04T19:02:40Z"}, "message": "added --no-run option", "tree": {"sha": "df3b77139d25e117b0593551f232310cf3c6e69e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df3b77139d25e117b0593551f232310cf3c6e69e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db6a916804ff7402ba70ca635e5071ac3b1a8f13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db6a916804ff7402ba70ca635e5071ac3b1a8f13", "html_url": "https://github.com/rust-lang/rust/commit/db6a916804ff7402ba70ca635e5071ac3b1a8f13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db6a916804ff7402ba70ca635e5071ac3b1a8f13/comments", "author": {"login": "ABouttefeux", "id": 77335613, "node_id": "MDQ6VXNlcjc3MzM1NjEz", "avatar_url": "https://avatars.githubusercontent.com/u/77335613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ABouttefeux", "html_url": "https://github.com/ABouttefeux", "followers_url": "https://api.github.com/users/ABouttefeux/followers", "following_url": "https://api.github.com/users/ABouttefeux/following{/other_user}", "gists_url": "https://api.github.com/users/ABouttefeux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ABouttefeux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ABouttefeux/subscriptions", "organizations_url": "https://api.github.com/users/ABouttefeux/orgs", "repos_url": "https://api.github.com/users/ABouttefeux/repos", "events_url": "https://api.github.com/users/ABouttefeux/events{/privacy}", "received_events_url": "https://api.github.com/users/ABouttefeux/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ABouttefeux", "id": 77335613, "node_id": "MDQ6VXNlcjc3MzM1NjEz", "avatar_url": "https://avatars.githubusercontent.com/u/77335613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ABouttefeux", "html_url": "https://github.com/ABouttefeux", "followers_url": "https://api.github.com/users/ABouttefeux/followers", "following_url": "https://api.github.com/users/ABouttefeux/following{/other_user}", "gists_url": "https://api.github.com/users/ABouttefeux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ABouttefeux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ABouttefeux/subscriptions", "organizations_url": "https://api.github.com/users/ABouttefeux/orgs", "repos_url": "https://api.github.com/users/ABouttefeux/repos", "events_url": "https://api.github.com/users/ABouttefeux/events{/privacy}", "received_events_url": "https://api.github.com/users/ABouttefeux/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f98135b7a24a54964f83ca1dc2dfb6bd1d35b1bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f98135b7a24a54964f83ca1dc2dfb6bd1d35b1bd", "html_url": "https://github.com/rust-lang/rust/commit/f98135b7a24a54964f83ca1dc2dfb6bd1d35b1bd"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "b70baff551102afbeac2b4d6f4f1066a0cd9f7c0", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/db6a916804ff7402ba70ca635e5071ac3b1a8f13/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db6a916804ff7402ba70ca635e5071ac3b1a8f13/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=db6a916804ff7402ba70ca635e5071ac3b1a8f13", "patch": "@@ -121,6 +121,8 @@ crate struct Options {\n     /// For example, using ignore-foo to ignore running the doctest on any target that\n     /// contains \"foo\" as a substring\n     crate enable_per_target_ignores: bool,\n+    /// Compile test but do not run them.\n+    crate no_run: bool,\n \n     /// The path to a rustc-like binary to build tests with. If not set, we\n     /// default to loading from `$sysroot/bin/rustc`.\n@@ -196,6 +198,7 @@ impl fmt::Debug for Options {\n             .field(\"runtool_args\", &self.runtool_args)\n             .field(\"enable-per-target-ignores\", &self.enable_per_target_ignores)\n             .field(\"run_check\", &self.run_check)\n+            .field(\"no_run\", &self.no_run)\n             .finish()\n     }\n }\n@@ -622,6 +625,7 @@ impl Options {\n         let document_hidden = matches.opt_present(\"document-hidden-items\");\n         let run_check = matches.opt_present(\"check\");\n         let generate_redirect_map = matches.opt_present(\"generate-redirect-map\");\n+        let no_run = matches.opt_present(\"no-run\");\n \n         let (lint_opts, describe_lints, lint_cap) = get_cmd_lint_options(matches, error_format);\n \n@@ -658,6 +662,7 @@ impl Options {\n             enable_per_target_ignores,\n             test_builder,\n             run_check,\n+            no_run,\n             render_options: RenderOptions {\n                 output,\n                 external_html,"}, {"sha": "eded40916b52299bcc6d5171e3480deabdc6d482", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/db6a916804ff7402ba70ca635e5071ac3b1a8f13/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db6a916804ff7402ba70ca635e5071ac3b1a8f13/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=db6a916804ff7402ba70ca635e5071ac3b1a8f13", "patch": "@@ -291,7 +291,7 @@ fn run_test(\n     for debugging_option_str in &options.debugging_opts_strs {\n         compiler.arg(\"-Z\").arg(&debugging_option_str);\n     }\n-    if no_run && !compile_fail {\n+    if (no_run || options.no_run) && !compile_fail {\n         compiler.arg(\"--emit=metadata\");\n     }\n     compiler.arg(\"--target\").arg(match target {\n@@ -361,7 +361,7 @@ fn run_test(\n         }\n     }\n \n-    if no_run {\n+    if no_run || options.no_run {\n         return Ok(());\n     }\n "}, {"sha": "3a9651011239b317d87a3be210e35d669ab3a784", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/db6a916804ff7402ba70ca635e5071ac3b1a8f13/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db6a916804ff7402ba70ca635e5071ac3b1a8f13/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=db6a916804ff7402ba70ca635e5071ac3b1a8f13", "patch": "@@ -536,6 +536,7 @@ fn opts() -> Vec<RustcOptGroup> {\n                 \"[unversioned-shared-resources,toolchain-shared-resources,invocation-specific]\",\n             )\n         }),\n+        unstable(\"no-run\", |o| o.optflag(\"\", \"no-run\", \"Compile, but don't run doc tests\")),\n     ]\n }\n "}]}