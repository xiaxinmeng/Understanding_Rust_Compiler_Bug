{"sha": "16e2096f0f15167e8190054c073bce3095453870", "node_id": "C_kwDOAAsO6NoAKDE2ZTIwOTZmMGYxNTE2N2U4MTkwMDU0YzA3M2JjZTMwOTU0NTM4NzA", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-04-22T01:33:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-22T01:33:59Z"}, "message": "Rollup merge of #110660 - compiler-errors:placeholders-pretty, r=wesleywiser,BoxyUwU\n\nPrint ty placeholders pretty\n\nMakes anon placeholders print like `!0` instead of `Placeholder { ... }`.\n\n```\nrustc_trait_selection::solve::compute_well_formed_goal goal=Goal{\n    predicate: !0,\n    param_env: ParamEnv{\n      caller_bounds: [\n        Binder(TraitPredicate(<!0 as std::marker::Copy>, polarity: Positive), []),\n        Binder(TraitPredicate(<!0 as std::clone::Clone>, polarity: Positive), []),\n        Binder(TraitPredicate(<!0 as std::marker::Sized>, polarity: Positive), []),\n      ],\n      reveal: UserFacing,\n      constness: NotConst,\n    }\n  }\n```\n\ncc `@BoxyUwU` who might care about this formatting decision", "tree": {"sha": "968b808219f132be8e56d990b59327e5e4207840", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/968b808219f132be8e56d990b59327e5e4207840"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16e2096f0f15167e8190054c073bce3095453870", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkQzmHCRBK7hj4Ov3rIwAATjkIAFb090VC623acrS4JBseqqhd\n6qw6jJo02g6158hEyTe6fVNOINAgirMobB3rl8IeAx9O+cbx0zEEJF47+6WAEObM\nkrycj6zTcM7TXO45432OCT2NLJMTA/i/xRNUgpvZTomDeqAGp5WSTCJRDGCDtsT3\n+/AUWywzsC58LopfUCSqUrvdmdAMIQBfz8A+ZK9MHR+bk96iivIF2Isr2mSpr9sO\nw2JOJXy500eAZB20/yPGNK1mKFvdHwmZipzitou9um76yKDsomGkCKpFBM7EYZKf\npv2LhjtvOzGcuK2vn2D+XY0wrBEfrXLNGcnn+3z6M1rrxqschBM/AeDovCURqAI=\n=wfWD\n-----END PGP SIGNATURE-----\n", "payload": "tree 968b808219f132be8e56d990b59327e5e4207840\nparent c8a32391c705055f6db2dfd0338562bcac367e44\nparent 1d7a2472bf88da7364235334902321be32408388\nauthor Yuki Okushi <jtitor@2k36.org> 1682127239 +0900\ncommitter GitHub <noreply@github.com> 1682127239 +0900\n\nRollup merge of #110660 - compiler-errors:placeholders-pretty, r=wesleywiser,BoxyUwU\n\nPrint ty placeholders pretty\n\nMakes anon placeholders print like `!0` instead of `Placeholder { ... }`.\n\n```\nrustc_trait_selection::solve::compute_well_formed_goal goal=Goal{\n    predicate: !0,\n    param_env: ParamEnv{\n      caller_bounds: [\n        Binder(TraitPredicate(<!0 as std::marker::Copy>, polarity: Positive), []),\n        Binder(TraitPredicate(<!0 as std::clone::Clone>, polarity: Positive), []),\n        Binder(TraitPredicate(<!0 as std::marker::Sized>, polarity: Positive), []),\n      ],\n      reveal: UserFacing,\n      constness: NotConst,\n    }\n  }\n```\n\ncc `@BoxyUwU` who might care about this formatting decision\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16e2096f0f15167e8190054c073bce3095453870", "html_url": "https://github.com/rust-lang/rust/commit/16e2096f0f15167e8190054c073bce3095453870", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16e2096f0f15167e8190054c073bce3095453870/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8a32391c705055f6db2dfd0338562bcac367e44", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8a32391c705055f6db2dfd0338562bcac367e44", "html_url": "https://github.com/rust-lang/rust/commit/c8a32391c705055f6db2dfd0338562bcac367e44"}, {"sha": "1d7a2472bf88da7364235334902321be32408388", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d7a2472bf88da7364235334902321be32408388", "html_url": "https://github.com/rust-lang/rust/commit/1d7a2472bf88da7364235334902321be32408388"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "888b3a50b77e9f811bdb48bb25a1bc149ba8f3b2", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/16e2096f0f15167e8190054c073bce3095453870/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16e2096f0f15167e8190054c073bce3095453870/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=16e2096f0f15167e8190054c073bce3095453870", "patch": "@@ -738,7 +738,9 @@ pub trait PrettyPrinter<'tcx>:\n                 }\n             }\n             ty::Placeholder(placeholder) => match placeholder.bound.kind {\n-                ty::BoundTyKind::Anon => p!(write(\"Placeholder({:?})\", placeholder)),\n+                ty::BoundTyKind::Anon => {\n+                    self.pretty_print_placeholder_var(placeholder.universe, placeholder.bound.var)?\n+                }\n                 ty::BoundTyKind::Param(_, name) => p!(write(\"{}\", name)),\n             },\n             ty::Alias(ty::Opaque, ty::AliasTy { def_id, substs, .. }) => {\n@@ -1172,6 +1174,18 @@ pub trait PrettyPrinter<'tcx>:\n         }\n     }\n \n+    fn pretty_print_placeholder_var(\n+        &mut self,\n+        ui: ty::UniverseIndex,\n+        var: ty::BoundVar,\n+    ) -> Result<(), Self::Error> {\n+        if ui == ty::UniverseIndex::ROOT {\n+            write!(self, \"!{}\", var.index())\n+        } else {\n+            write!(self, \"!{}_{}\", ui.index(), var.index())\n+        }\n+    }\n+\n     fn ty_infer_name(&self, _: ty::TyVid) -> Option<Symbol> {\n         None\n     }"}, {"sha": "4c1f2dd0e5334b547c821b302f9a739073a8528f", "filename": "compiler/rustc_type_ir/src/sty.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/16e2096f0f15167e8190054c073bce3095453870/compiler%2Frustc_type_ir%2Fsrc%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16e2096f0f15167e8190054c073bce3095453870/compiler%2Frustc_type_ir%2Fsrc%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_type_ir%2Fsrc%2Fsty.rs?ref=16e2096f0f15167e8190054c073bce3095453870", "patch": "@@ -203,6 +203,10 @@ pub enum TyKind<I: Interner> {\n     /// `for<'a, T> &'a (): Trait<T>` and then convert the introduced bound variables\n     /// back to inference variables in a new inference context when inside of the query.\n     ///\n+    /// It is conventional to render anonymous bound types like `^N` or `^D_N`,\n+    /// where `N` is the bound variable's anonymous index into the binder, and\n+    /// `D` is the debruijn index, or totally omitted if the debruijn index is zero.\n+    ///\n     /// See the `rustc-dev-guide` for more details about\n     /// [higher-ranked trait bounds][1] and [canonical queries][2].\n     ///\n@@ -212,6 +216,12 @@ pub enum TyKind<I: Interner> {\n \n     /// A placeholder type, used during higher ranked subtyping to instantiate\n     /// bound variables.\n+    ///\n+    /// It is conventional to render anonymous placeholer types like `!N` or `!U_N`,\n+    /// where `N` is the placeholder variable's anonymous index (which corresponds\n+    /// to the bound variable's index from the binder from which it was instantiated),\n+    /// and `U` is the universe index in which it is instantiated, or totally omitted\n+    /// if the universe index is zero.\n     Placeholder(I::PlaceholderType),\n \n     /// A type variable used during type checking."}]}