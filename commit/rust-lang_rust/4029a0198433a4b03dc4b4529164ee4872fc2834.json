{"sha": "4029a0198433a4b03dc4b4529164ee4872fc2834", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMjlhMDE5ODQzM2E0YjAzZGM0YjQ1MjkxNjRlZTQ4NzJmYzI4MzQ=", "commit": {"author": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2017-12-03T17:57:54Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2017-12-14T17:56:26Z"}, "message": "error on any use of trait alias", "tree": {"sha": "24f1c484e366b1a3162c3daea2e3f774305be436", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24f1c484e366b1a3162c3daea2e3f774305be436"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4029a0198433a4b03dc4b4529164ee4872fc2834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4029a0198433a4b03dc4b4529164ee4872fc2834", "html_url": "https://github.com/rust-lang/rust/commit/4029a0198433a4b03dc4b4529164ee4872fc2834", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4029a0198433a4b03dc4b4529164ee4872fc2834/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63f1c24d8ac1f920da7564aa59027b2bd5c7d1bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/63f1c24d8ac1f920da7564aa59027b2bd5c7d1bd", "html_url": "https://github.com/rust-lang/rust/commit/63f1c24d8ac1f920da7564aa59027b2bd5c7d1bd"}], "stats": {"total": 58, "additions": 49, "deletions": 9}, "files": [{"sha": "3d4d8e65f699d62401c5d19ec903d45dd091cee8", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4029a0198433a4b03dc4b4529164ee4872fc2834/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4029a0198433a4b03dc4b4529164ee4872fc2834/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=4029a0198433a4b03dc4b4529164ee4872fc2834", "patch": "@@ -442,9 +442,8 @@ fn convert_item<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, item_id: ast::NodeId) {\n             tcx.predicates_of(def_id);\n         },\n         hir::ItemTraitAlias(..) => {\n-            tcx.generics_of(def_id);\n-            tcx.trait_def(def_id);\n-            tcx.predicates_of(def_id);\n+            span_err!(tcx.sess, it.span, E0645,\n+                      \"trait aliases are not yet implemented (see issue #41517)\");\n         },\n         hir::ItemStruct(ref struct_def, _) |\n         hir::ItemUnion(ref struct_def, _) => {"}, {"sha": "770d0cd4f1fc4997daa6f01ccc64906f85c7323a", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4029a0198433a4b03dc4b4529164ee4872fc2834/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4029a0198433a4b03dc4b4529164ee4872fc2834/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=4029a0198433a4b03dc4b4529164ee4872fc2834", "patch": "@@ -4721,4 +4721,5 @@ register_diagnostics! {\n     E0632, // cannot provide explicit type parameters when `impl Trait` is used in\n            // argument position.\n     E0641, // cannot cast to/from a pointer with an unknown kind\n+    E0645, // trait aliases not finished\n }"}, {"sha": "5d4112e4a5e4d2e52776d9a2602fe6035e760f6b", "filename": "src/test/compile-fail/trait-alias.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4029a0198433a4b03dc4b4529164ee4872fc2834/src%2Ftest%2Fcompile-fail%2Ftrait-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4029a0198433a4b03dc4b4529164ee4872fc2834/src%2Ftest%2Fcompile-fail%2Ftrait-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-alias.rs?ref=4029a0198433a4b03dc4b4529164ee4872fc2834", "patch": "@@ -9,9 +9,11 @@\n // except according to those terms.\n \n trait Alias1<T> = Default where T: Clone; // ok\n+    //~^ERROR trait aliases are not yet implemented\n trait Alias2<T: Clone = ()> = Default;\n     //~^ERROR type parameters on the left side of a trait alias cannot be bounded\n     //~^^ERROR type parameters on the left side of a trait alias cannot have defaults\n+    //~^^^ERROR trait aliases are not yet implemented\n \n impl Alias1 { //~ERROR expected type, found trait alias\n     fn foo() {}"}, {"sha": "b794bab84704431852788846b54f9bbaa76119b0", "filename": "src/test/ui/trait-alias.rs", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4029a0198433a4b03dc4b4529164ee4872fc2834/src%2Ftest%2Fui%2Ftrait-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4029a0198433a4b03dc4b4529164ee4872fc2834/src%2Ftest%2Fui%2Ftrait-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-alias.rs?ref=4029a0198433a4b03dc4b4529164ee4872fc2834", "patch": "@@ -8,9 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-trait SimpleAlias = Default;\n-trait GenericAlias<T> = Iterator<Item=T>;\n-trait Partial<T> = IntoIterator<Item=T>;\n+trait SimpleAlias = Default; //~ERROR E0645\n+trait GenericAlias<T> = Iterator<Item=T>; //~ERROR E0645\n+trait Partial<T> = IntoIterator<Item=T>; //~ERROR E0645\n \n trait Things<T> {}\n trait Romeo {}\n@@ -19,10 +19,10 @@ struct Fore<T>(T);\n impl<T, U> Things<T> for The<U> {}\n impl<T> Romeo for Fore<T> {}\n \n-trait WithWhere<Art, Thou> = Romeo + Romeo where Fore<(Art, Thou)>: Romeo;\n-trait BareWhere<Wild, Are> = where The<Wild>: Things<Are>;\n+trait WithWhere<Art, Thou> = Romeo + Romeo where Fore<(Art, Thou)>: Romeo; //~ERROR E0645\n+trait BareWhere<Wild, Are> = where The<Wild>: Things<Are>; //~ERROR E0645\n \n-trait CD = Clone + Default;\n+trait CD = Clone + Default; //~ERROR E0645\n \n fn foo<T: CD>() -> (T, T) {\n     let one = T::default();", "previous_filename": "src/test/run-pass/trait-alias.rs"}, {"sha": "4a8de37a393571525acfe42401ed1be3438df5be", "filename": "src/test/ui/trait-alias.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/4029a0198433a4b03dc4b4529164ee4872fc2834/src%2Ftest%2Fui%2Ftrait-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4029a0198433a4b03dc4b4529164ee4872fc2834/src%2Ftest%2Fui%2Ftrait-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-alias.stderr?ref=4029a0198433a4b03dc4b4529164ee4872fc2834", "patch": "@@ -0,0 +1,38 @@\n+error[E0645]: trait aliases are not yet implemented (see issue #41517)\n+  --> $DIR/trait-alias.rs:11:1\n+   |\n+11 | trait SimpleAlias = Default; //~ERROR E0645\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0645]: trait aliases are not yet implemented (see issue #41517)\n+  --> $DIR/trait-alias.rs:12:1\n+   |\n+12 | trait GenericAlias<T> = Iterator<Item=T>; //~ERROR E0645\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0645]: trait aliases are not yet implemented (see issue #41517)\n+  --> $DIR/trait-alias.rs:13:1\n+   |\n+13 | trait Partial<T> = IntoIterator<Item=T>; //~ERROR E0645\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0645]: trait aliases are not yet implemented (see issue #41517)\n+  --> $DIR/trait-alias.rs:22:1\n+   |\n+22 | trait WithWhere<Art, Thou> = Romeo + Romeo where Fore<(Art, Thou)>: Romeo; //~ERROR E0645\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0645]: trait aliases are not yet implemented (see issue #41517)\n+  --> $DIR/trait-alias.rs:23:1\n+   |\n+23 | trait BareWhere<Wild, Are> = where The<Wild>: Things<Are>; //~ERROR E0645\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0645]: trait aliases are not yet implemented (see issue #41517)\n+  --> $DIR/trait-alias.rs:25:1\n+   |\n+25 | trait CD = Clone + Default; //~ERROR E0645\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 6 previous errors\n+"}]}