{"sha": "85c30b1915314487515f69f32dfe5e1a7301ab95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1YzMwYjE5MTUzMTQ0ODc1MTVmNjlmMzJkZmU1ZTFhNzMwMWFiOTU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-11T11:56:12Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-11T11:58:16Z"}, "message": "Continue multiline non-doc comment blocks", "tree": {"sha": "e47b310e3abe307772be9a47ebb4801866ff94ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e47b310e3abe307772be9a47ebb4801866ff94ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85c30b1915314487515f69f32dfe5e1a7301ab95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85c30b1915314487515f69f32dfe5e1a7301ab95", "html_url": "https://github.com/rust-lang/rust/commit/85c30b1915314487515f69f32dfe5e1a7301ab95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85c30b1915314487515f69f32dfe5e1a7301ab95/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90fe534f036b69c220c9db537e736e77508c4d31", "url": "https://api.github.com/repos/rust-lang/rust/commits/90fe534f036b69c220c9db537e736e77508c4d31", "html_url": "https://github.com/rust-lang/rust/commit/90fe534f036b69c220c9db537e736e77508c4d31"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "6bcf2d72b627fac0a1f0f9bca6e1a787c454ee94", "filename": "crates/ra_ide/src/typing/on_enter.rs", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/85c30b1915314487515f69f32dfe5e1a7301ab95/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85c30b1915314487515f69f32dfe5e1a7301ab95/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs?ref=85c30b1915314487515f69f32dfe5e1a7301ab95", "patch": "@@ -32,8 +32,8 @@ pub(crate) fn on_enter(db: &RootDatabase, position: FilePosition) -> Option<Sour\n         return None;\n     }\n \n-    // Continuing non-doc line comments (like this one :) ) is annoying\n-    if prefix == \"//\" && comment_range.end() == position.offset {\n+    // Continuing single-line non-doc comments (like this one :) ) is annoying\n+    if prefix == \"//\" && comment_range.end() == position.offset && !followed_by_comment(&comment) {\n         return None;\n     }\n \n@@ -51,6 +51,17 @@ pub(crate) fn on_enter(db: &RootDatabase, position: FilePosition) -> Option<Sour\n     )\n }\n \n+fn followed_by_comment(comment: &ast::Comment) -> bool {\n+    let ws = match comment.syntax().next_token().and_then(ast::Whitespace::cast) {\n+        Some(it) => it,\n+        None => return false,\n+    };\n+    if ws.spans_multiple_lines() {\n+        return false;\n+    }\n+    ws.syntax().next_token().and_then(ast::Comment::cast).is_some()\n+}\n+\n fn node_indent(file: &SourceFile, token: &SyntaxToken) -> Option<SmolStr> {\n     let ws = match file.syntax().token_at_offset(token.text_range().start()) {\n         TokenAtOffset::Between(l, r) => {\n@@ -152,7 +163,7 @@ fn foo() {\n     }\n \n     #[test]\n-    fn continues_code_comment_in_the_middle() {\n+    fn continues_code_comment_in_the_middle_of_line() {\n         do_check(\n             r\"\n fn main() {\n@@ -170,6 +181,27 @@ fn main() {\n         );\n     }\n \n+    #[test]\n+    fn continues_code_comment_in_the_middle_several_lines() {\n+        do_check(\n+            r\"\n+fn main() {\n+    // Fix<|>\n+    // me\n+    let x = 1 + 1;\n+}\n+\",\n+            r\"\n+fn main() {\n+    // Fix\n+    // <|>\n+    // me\n+    let x = 1 + 1;\n+}\n+\",\n+        );\n+    }\n+\n     #[test]\n     fn does_not_continue_end_of_code_comment() {\n         do_check_noop("}]}