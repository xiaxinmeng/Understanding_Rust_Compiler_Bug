{"sha": "e41329ce87409df929ecfa191297f944472cc999", "node_id": "C_kwDOAAsO6NoAKGU0MTMyOWNlODc0MDlkZjkyOWVjZmExOTEyOTdmOTQ0NDcyY2M5OTk", "commit": {"author": {"name": "Yacin Tmimi", "email": "yacintmimi@gmail.com", "date": "2022-03-20T17:21:44Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-03-21T02:39:12Z"}, "message": "Search for struct body span after any generic arguments\n\nFixes 5273\n\nPreviously, rustfmt searched for the start of a struct body after the\nopening `{`. In most cases this works just fine, but const values can\nalso be defined between `{ }`, which lead to issues when rewriting the\nstruct body.\n\nNow, rustfmt will search for the `{` after the generic argument list to\nguarantee that the `{` it finds is the start of the struct body.", "tree": {"sha": "bdebf3d7bde474cbd31818887d6c8aecc513cd30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdebf3d7bde474cbd31818887d6c8aecc513cd30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e41329ce87409df929ecfa191297f944472cc999", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e41329ce87409df929ecfa191297f944472cc999", "html_url": "https://github.com/rust-lang/rust/commit/e41329ce87409df929ecfa191297f944472cc999", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e41329ce87409df929ecfa191297f944472cc999/comments", "author": {"login": "ytmimi", "id": 29028348, "node_id": "MDQ6VXNlcjI5MDI4MzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/29028348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ytmimi", "html_url": "https://github.com/ytmimi", "followers_url": "https://api.github.com/users/ytmimi/followers", "following_url": "https://api.github.com/users/ytmimi/following{/other_user}", "gists_url": "https://api.github.com/users/ytmimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ytmimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ytmimi/subscriptions", "organizations_url": "https://api.github.com/users/ytmimi/orgs", "repos_url": "https://api.github.com/users/ytmimi/repos", "events_url": "https://api.github.com/users/ytmimi/events{/privacy}", "received_events_url": "https://api.github.com/users/ytmimi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a36dc368d7c914014356c3d1f240f2caaf4692c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a36dc368d7c914014356c3d1f240f2caaf4692c2", "html_url": "https://github.com/rust-lang/rust/commit/a36dc368d7c914014356c3d1f240f2caaf4692c2"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "92f423bbb6275d647e6116a5ca6f6d1c48e8693d", "filename": "src/items.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e41329ce87409df929ecfa191297f944472cc999/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e41329ce87409df929ecfa191297f944472cc999/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=e41329ce87409df929ecfa191297f944472cc999", "patch": "@@ -1273,7 +1273,13 @@ pub(crate) fn format_struct_struct(\n     result.push_str(&header_str);\n \n     let header_hi = struct_parts.ident.span.hi();\n-    let body_lo = context.snippet_provider.span_after(span, \"{\");\n+    let body_lo = if let Some(generics) = struct_parts.generics {\n+        // Adjust the span to start at the end of the generic arguments before searching for the '{'\n+        let span = span.with_lo(generics.span.hi());\n+        context.snippet_provider.span_after(span, \"{\")\n+    } else {\n+        context.snippet_provider.span_after(span, \"{\")\n+    };\n \n     let generics_str = match struct_parts.generics {\n         Some(g) => format_generics("}, {"sha": "3bb9048a5fd3d6a0eae954c7a2baa6543e824011", "filename": "tests/target/issue_5273.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e41329ce87409df929ecfa191297f944472cc999/tests%2Ftarget%2Fissue_5273.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e41329ce87409df929ecfa191297f944472cc999/tests%2Ftarget%2Fissue_5273.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue_5273.rs?ref=e41329ce87409df929ecfa191297f944472cc999", "patch": "@@ -0,0 +1,3 @@\n+struct Example<const N: usize = { 1048576 }> {\n+    //\n+}"}]}