{"sha": "f83446b836900ce9afbaa0816a5b4feda654b51e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4MzQ0NmI4MzY5MDBjZTlhZmJhYTA4MTZhNWI0ZmVkYTY1NGI1MWU=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-13T11:13:09Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-13T11:13:09Z"}, "message": "Reword safety guarantee of Pin::static_{ref,mut}.\n\nCo-authored-by: Peter Todd <pete@petertodd.org>", "tree": {"sha": "2544e6cf2079d0b33010b76a117a828f6206b9f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2544e6cf2079d0b33010b76a117a828f6206b9f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f83446b836900ce9afbaa0816a5b4feda654b51e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f83446b836900ce9afbaa0816a5b4feda654b51e", "html_url": "https://github.com/rust-lang/rust/commit/f83446b836900ce9afbaa0816a5b4feda654b51e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f83446b836900ce9afbaa0816a5b4feda654b51e/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c71f682d74d13ae6673dc701a9bb3a0562f57c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c71f682d74d13ae6673dc701a9bb3a0562f57c0", "html_url": "https://github.com/rust-lang/rust/commit/2c71f682d74d13ae6673dc701a9bb3a0562f57c0"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "633e96eb7d81191a18ef13050e10022732810891", "filename": "library/core/src/pin.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f83446b836900ce9afbaa0816a5b4feda654b51e/library%2Fcore%2Fsrc%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f83446b836900ce9afbaa0816a5b4feda654b51e/library%2Fcore%2Fsrc%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fpin.rs?ref=f83446b836900ce9afbaa0816a5b4feda654b51e", "patch": "@@ -784,12 +784,12 @@ impl<'a, T: ?Sized> Pin<&'a mut T> {\n impl<T: ?Sized> Pin<&'static T> {\n     /// Get a pinned reference from a static reference.\n     ///\n-    /// This is safe, because the `'static` lifetime guarantees the data will\n-    /// never be moved.\n+    /// This is safe, because `T` is borrowed for the `'static` lifetime, which\n+    /// never ends.\n     #[unstable(feature = \"pin_static_ref\", issue = \"none\")]\n     #[rustc_const_unstable(feature = \"const_pin\", issue = \"76654\")]\n     pub const fn static_ref(r: &'static T) -> Pin<&'static T> {\n-        // SAFETY: The 'static lifetime guarantees the data will not be\n+        // SAFETY: The 'static borrow guarantees the data will not be\n         // moved/invalidated until it gets dropped (which is never).\n         unsafe { Pin::new_unchecked(r) }\n     }\n@@ -798,12 +798,12 @@ impl<T: ?Sized> Pin<&'static T> {\n impl<T: ?Sized> Pin<&'static T> {\n     /// Get a pinned mutable reference from a static mutable reference.\n     ///\n-    /// This is safe, because the `'static` lifetime guarantees the data will\n-    /// never be moved.\n+    /// This is safe, because `T` is borrowed for the `'static` lifetime, which\n+    /// never ends.\n     #[unstable(feature = \"pin_static_ref\", issue = \"none\")]\n     #[rustc_const_unstable(feature = \"const_pin\", issue = \"76654\")]\n     pub const fn static_mut(r: &'static mut T) -> Pin<&'static mut T> {\n-        // SAFETY: The 'static lifetime guarantees the data will not be\n+        // SAFETY: The 'static borrow guarantees the data will not be\n         // moved/invalidated until it gets dropped (which is never).\n         unsafe { Pin::new_unchecked(r) }\n     }"}]}