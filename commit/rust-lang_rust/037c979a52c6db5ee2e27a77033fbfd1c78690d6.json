{"sha": "037c979a52c6db5ee2e27a77033fbfd1c78690d6", "node_id": "C_kwDOAAsO6NoAKDAzN2M5NzlhNTJjNmRiNWVlMmUyN2E3NzAzM2ZiZmQxYzc4NjkwZDY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-03T22:20:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-03T22:20:42Z"}, "message": "Rollup merge of #101349 - notriddle:notriddle/flex-basis, r=GuillaumeGomez\n\nrustdoc: remove `.impl-items { flex-basis }` CSS, not in flex container\n\nAdded in 34bd2b845b3acd84c5a9bddae3ff8081c19ec5e9\n\nFor this to actually do anything, [according to MDN] (and Firefox Dev Tools), it must be a \"flex item\", which only happens if its a direct child of a node with `display: flex` on it. It seems like it could not have worked at the time when this rule was added, because the only items in `rustdoc.css` with `display: flex` active were:\n\n* `#help`\n\n  This should not contain anything like this.\n\n* `.impl-items h4, h4.impl, h3.impl`\n\n  These are all headers, so they shouldn't contain `.impl-items` either.\n\n* `.content .impl-items .method, .content .impl-items > .type, .impl-items > .associatedconstant`\n\n  Associated constants and methods definitely shouldn't contain a list of impl items, and the `.type` class seems to refer to type aliases, which, when shown inside of an impl, only show a link to the aliased type.\n\n[according to MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis\n\nNowadays, `display: flex` is a lot more prolific, but `.impl-items` still seems to only be used in plain block parents:\n\n* If it's not a trait impl, then it's nested below a `<div>` with an id but no class, added in a5216cf67d93de97091b41ecba85de2e08f39863. This will be `display: block`, probably. For example, [vec deref]\n* Inherent impls also get a `<div>` tag, for example [vec impl], and they are also wrapped by their own non-flexbox `<details>` tag.\n* If it's a tait implementation, then it's also nested below a `<details>` container, like [deref cstring].\n\n[vec impl]: https://doc.rust-lang.org/1.63.0/std/vec/struct.Vec.html#impl\n[vec deref]: https://doc.rust-lang.org/1.63.0/std/vec/struct.Vec.html#deref-methods-%5BT%5D\n[deref cstring]: https://doc.rust-lang.org/1.63.0/std/ops/trait.Deref.html#impl-Deref\n\nAlso, this would imply that trait items ought to take up as much space as possible, pushing everything else to the edge of the screen. If this is nested directly below the `.rustdoc` container, which has a row basis, that would be bad.", "tree": {"sha": "ee4f472f987483a7218ea845a278123171ad8187", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee4f472f987483a7218ea845a278123171ad8187"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/037c979a52c6db5ee2e27a77033fbfd1c78690d6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjE9M6CRBK7hj4Ov3rIwAA89IIAFsaJnumKhYwMltKpYLSTVnA\nEXj4z3aoA0+3WmS9nXalYL+4bMY95Eo+4QThSObisMyn/bMbMY2e0eHRmsxgZEXQ\nc26A69kMbl0/scoH4AoE0zguQTB3BoOVnwRuD7JY+RNeBFj3HYScgv7lCaAWRbzm\nuQDWI3KEgfKXV6d3F75B5L+/RhclPp4/1egQFDTVAC2e5ICeiv1IjJCy0M4aKHwz\nsFbMts2raZe4ArQFWqJYi105j/m91Mq/jl6rF2ybd3tr3hg1FwjP16FkvFcyuCem\nztm9JiZOFnXoxuW7dOngoTflWnYybFPSiy7cuKgY32Q2Yc/E1dudwOkXaOtiNao=\n=qznn\n-----END PGP SIGNATURE-----\n", "payload": "tree ee4f472f987483a7218ea845a278123171ad8187\nparent d085194539193065d69e4b3785aebdcdd763985d\nparent cee90dd77361406b94d8e1b8eca6bf657ba88ee5\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1662243642 +0200\ncommitter GitHub <noreply@github.com> 1662243642 +0200\n\nRollup merge of #101349 - notriddle:notriddle/flex-basis, r=GuillaumeGomez\n\nrustdoc: remove `.impl-items { flex-basis }` CSS, not in flex container\n\nAdded in 34bd2b845b3acd84c5a9bddae3ff8081c19ec5e9\n\nFor this to actually do anything, [according to MDN] (and Firefox Dev Tools), it must be a \"flex item\", which only happens if its a direct child of a node with `display: flex` on it. It seems like it could not have worked at the time when this rule was added, because the only items in `rustdoc.css` with `display: flex` active were:\n\n* `#help`\n\n  This should not contain anything like this.\n\n* `.impl-items h4, h4.impl, h3.impl`\n\n  These are all headers, so they shouldn't contain `.impl-items` either.\n\n* `.content .impl-items .method, .content .impl-items > .type, .impl-items > .associatedconstant`\n\n  Associated constants and methods definitely shouldn't contain a list of impl items, and the `.type` class seems to refer to type aliases, which, when shown inside of an impl, only show a link to the aliased type.\n\n[according to MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis\n\nNowadays, `display: flex` is a lot more prolific, but `.impl-items` still seems to only be used in plain block parents:\n\n* If it's not a trait impl, then it's nested below a `<div>` with an id but no class, added in a5216cf67d93de97091b41ecba85de2e08f39863. This will be `display: block`, probably. For example, [vec deref]\n* Inherent impls also get a `<div>` tag, for example [vec impl], and they are also wrapped by their own non-flexbox `<details>` tag.\n* If it's a tait implementation, then it's also nested below a `<details>` container, like [deref cstring].\n\n[vec impl]: https://doc.rust-lang.org/1.63.0/std/vec/struct.Vec.html#impl\n[vec deref]: https://doc.rust-lang.org/1.63.0/std/vec/struct.Vec.html#deref-methods-%5BT%5D\n[deref cstring]: https://doc.rust-lang.org/1.63.0/std/ops/trait.Deref.html#impl-Deref\n\nAlso, this would imply that trait items ought to take up as much space as possible, pushing everything else to the edge of the screen. If this is nested directly below the `.rustdoc` container, which has a row basis, that would be bad.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/037c979a52c6db5ee2e27a77033fbfd1c78690d6", "html_url": "https://github.com/rust-lang/rust/commit/037c979a52c6db5ee2e27a77033fbfd1c78690d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/037c979a52c6db5ee2e27a77033fbfd1c78690d6/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d085194539193065d69e4b3785aebdcdd763985d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d085194539193065d69e4b3785aebdcdd763985d", "html_url": "https://github.com/rust-lang/rust/commit/d085194539193065d69e4b3785aebdcdd763985d"}, {"sha": "cee90dd77361406b94d8e1b8eca6bf657ba88ee5", "url": "https://api.github.com/repos/rust-lang/rust/commits/cee90dd77361406b94d8e1b8eca6bf657ba88ee5", "html_url": "https://github.com/rust-lang/rust/commit/cee90dd77361406b94d8e1b8eca6bf657ba88ee5"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "fddff771f1cf016d3bf6d710e7c9d0429c2babe3", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/037c979a52c6db5ee2e27a77033fbfd1c78690d6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/037c979a52c6db5ee2e27a77033fbfd1c78690d6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=037c979a52c6db5ee2e27a77033fbfd1c78690d6", "patch": "@@ -778,10 +778,6 @@ pre, .rustdoc.source .example-wrap {\n \tmargin-bottom: .6em;\n }\n \n-.impl-items {\n-\tflex-basis: 100%;\n-}\n-\n #main-content > .item-info {\n \tmargin-top: 0;\n \tmargin-left: 0;"}]}