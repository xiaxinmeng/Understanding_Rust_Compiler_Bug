{"sha": "31af63748bbe62adab6bed6008deca67911bd0d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxYWY2Mzc0OGJiZTYyYWRhYjZiZWQ2MDA4ZGVjYTY3OTExYmQwZDI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-06T23:37:51Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-06T23:37:51Z"}, "message": "rollup merge of #23091: japaric/phantom\n\nr? @nikomatsakis See the cfail test, it compiles without this patch\ncc #13231", "tree": {"sha": "9e86773c2b5fd566c638e6f8e3f5b24c341681fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e86773c2b5fd566c638e6f8e3f5b24c341681fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31af63748bbe62adab6bed6008deca67911bd0d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31af63748bbe62adab6bed6008deca67911bd0d2", "html_url": "https://github.com/rust-lang/rust/commit/31af63748bbe62adab6bed6008deca67911bd0d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31af63748bbe62adab6bed6008deca67911bd0d2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "697de42f69c6c437b7bd7a3298e991d1a5fc9adc", "url": "https://api.github.com/repos/rust-lang/rust/commits/697de42f69c6c437b7bd7a3298e991d1a5fc9adc", "html_url": "https://github.com/rust-lang/rust/commit/697de42f69c6c437b7bd7a3298e991d1a5fc9adc"}, {"sha": "f0897aa17f98ff41f1eb6a3af40d84123d3d89d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0897aa17f98ff41f1eb6a3af40d84123d3d89d5", "html_url": "https://github.com/rust-lang/rust/commit/f0897aa17f98ff41f1eb6a3af40d84123d3d89d5"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "7dfbccea0dccd160f4c8ecfb6a0470083d6c28c1", "filename": "src/librustc/middle/traits/select.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/31af63748bbe62adab6bed6008deca67911bd0d2/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31af63748bbe62adab6bed6008deca67911bd0d2/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs?ref=31af63748bbe62adab6bed6008deca67911bd0d2", "patch": "@@ -1692,6 +1692,13 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 }\n             }\n \n+            // for `PhantomData<T>`, we pass `T`\n+            ty::ty_struct(def_id, substs)\n+                if Some(def_id) == self.tcx().lang_items.phantom_data() =>\n+            {\n+                Some(substs.types.get_slice(TypeSpace).to_vec())\n+            }\n+\n             ty::ty_struct(def_id, substs) => {\n                 Some(ty::struct_fields(self.tcx(), def_id, substs).iter()\n                      .map(|f| f.mt.ty)"}, {"sha": "c912d084daa86f1ad4ddf3b09b7f452d6f9f1f58", "filename": "src/test/compile-fail/phantom-oibit.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/31af63748bbe62adab6bed6008deca67911bd0d2/src%2Ftest%2Fcompile-fail%2Fphantom-oibit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31af63748bbe62adab6bed6008deca67911bd0d2/src%2Ftest%2Fcompile-fail%2Fphantom-oibit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fphantom-oibit.rs?ref=31af63748bbe62adab6bed6008deca67911bd0d2", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Ensure that OIBIT checks `T` when it encounters a `PhantomData<T>` field, instead of checking\n+// the `PhantomData<T>` type itself (which almost always implements a \"default\" trait\n+// (`impl Trait for ..`))\n+\n+#![feature(optin_builtin_traits)]\n+\n+use std::marker::{MarkerTrait, PhantomData};\n+\n+unsafe trait Zen: MarkerTrait {}\n+\n+unsafe impl Zen for .. {}\n+\n+unsafe impl<'a, T: 'a> Zen for &'a T where T: Sync {}\n+\n+struct Guard<'a, T: 'a> {\n+    _marker: PhantomData<&'a T>,\n+}\n+\n+struct Nested<T>(T);\n+\n+fn is_zen<T: Zen>(_: T) {}\n+\n+fn not_sync<T>(x: Guard<T>) {\n+    is_zen(x)  //~ error: the trait `core::marker::Sync` is not implemented for the type `T`\n+}\n+\n+fn nested_not_sync<T>(x: Nested<Guard<T>>) {\n+    is_zen(x)  //~ error: the trait `core::marker::Sync` is not implemented for the type `T`\n+}\n+\n+fn main() {}"}]}