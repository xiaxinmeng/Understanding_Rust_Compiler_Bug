{"sha": "39c96a0f534366b3970ff0f8cd831be4386961dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5Yzk2YTBmNTM0MzY2YjM5NzBmZjBmOGNkODMxYmU0Mzg2OTYxZGM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-15T00:20:50Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-01-10T19:40:29Z"}, "message": "Point at the span for the definition of crate foreign ADTs", "tree": {"sha": "db76393917ca146591ccf8cc352379061354f95d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db76393917ca146591ccf8cc352379061354f95d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39c96a0f534366b3970ff0f8cd831be4386961dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39c96a0f534366b3970ff0f8cd831be4386961dc", "html_url": "https://github.com/rust-lang/rust/commit/39c96a0f534366b3970ff0f8cd831be4386961dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39c96a0f534366b3970ff0f8cd831be4386961dc/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f795e8a216b44982706d41e5cbfa245d13b83fc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f795e8a216b44982706d41e5cbfa245d13b83fc1", "html_url": "https://github.com/rust-lang/rust/commit/f795e8a216b44982706d41e5cbfa245d13b83fc1"}], "stats": {"total": 268, "additions": 247, "deletions": 21}, "files": [{"sha": "cb7d031fdfef1319d02edd66bc0d346ad9d30240", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -479,6 +479,10 @@ impl CStore {\n         self.get_crate_data(cnum).source.clone()\n     }\n \n+    pub fn get_span_untracked(&self, def_id: DefId, sess: &Session) -> Span {\n+        self.get_crate_data(def_id.krate).get_span(def_id.index, sess)\n+    }\n+\n     pub fn item_generics_num_lifetimes(&self, def_id: DefId, sess: &Session) -> usize {\n         self.get_crate_data(def_id.krate).get_generics(def_id.index, sess).own_counts().lifetimes\n     }"}, {"sha": "6fd45e78f2d953c98c030bd10e43dcf3a7653872", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -9,7 +9,7 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_feature::BUILTIN_ATTRIBUTES;\n use rustc_hir::def::Namespace::{self, *};\n use rustc_hir::def::{self, DefKind, NonMacroAttrKind};\n-use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX};\n+use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::{kw, Symbol};\n@@ -780,8 +780,10 @@ impl<'a> Resolver<'a> {\n                 suggestion.candidate.to_string(),\n                 Applicability::MaybeIncorrect,\n             );\n-            let def_span =\n-                suggestion.res.opt_def_id().and_then(|def_id| self.definitions.opt_span(def_id));\n+            let def_span = suggestion.res.opt_def_id().and_then(|def_id| match def_id.krate {\n+                LOCAL_CRATE => self.definitions.opt_span(def_id),\n+                _ => Some(self.cstore().get_span_untracked(def_id, self.session)),\n+            });\n             if let Some(span) = def_span {\n                 err.span_label(\n                     span,"}, {"sha": "ab382e9284eb73eddc871671bea8128b252d2ee0", "filename": "src/test/ui/derives/deriving-meta-unknown-trait.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fderives%2Fderiving-meta-unknown-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fderives%2Fderiving-meta-unknown-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderiving-meta-unknown-trait.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -3,6 +3,11 @@ error: cannot find derive macro `Eqr` in this scope\n    |\n LL | #[derive(Eqr)]\n    |          ^^^ help: a derive macro with a similar name exists: `Eq`\n+   | \n+  ::: $SRC_DIR/libcore/cmp.rs:LL:COL\n+   |\n+LL | pub macro Eq($item:item) { /* compiler built-in */ }\n+   | ---------------------------------------------------- similarly named derive macro `Eq` defined here\n \n error: cannot find derive macro `Eqr` in this scope\n   --> $DIR/deriving-meta-unknown-trait.rs:1:10"}, {"sha": "cccb06d49a6febaedb32ad4d895fb96eeabe7f44", "filename": "src/test/ui/empty/empty-struct-braces-expr.stderr", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -9,6 +9,11 @@ LL |     let e1 = Empty1;\n    |              |\n    |              did you mean `Empty1 { /* fields */ }`?\n    |              help: a unit struct with a similar name exists: `XEmpty2`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:2:1\n+   |\n+LL | pub struct XEmpty2;\n+   | ------------------- similarly named unit struct `XEmpty2` defined here\n \n error[E0423]: expected function, tuple struct or tuple variant, found struct `Empty1`\n   --> $DIR/empty-struct-braces-expr.rs:16:14\n@@ -21,6 +26,11 @@ LL |     let e1 = Empty1();\n    |              |\n    |              did you mean `Empty1 { /* fields */ }`?\n    |              help: a unit struct with a similar name exists: `XEmpty2`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:2:1\n+   |\n+LL | pub struct XEmpty2;\n+   | ------------------- similarly named unit struct `XEmpty2` defined here\n \n error[E0423]: expected value, found struct variant `E::Empty3`\n   --> $DIR/empty-struct-braces-expr.rs:18:14\n@@ -48,6 +58,11 @@ LL |     let xe1 = XEmpty1;\n    |               |\n    |               did you mean `XEmpty1 { /* fields */ }`?\n    |               help: a unit struct with a similar name exists: `XEmpty2`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:2:1\n+   |\n+LL | pub struct XEmpty2;\n+   | ------------------- similarly named unit struct `XEmpty2` defined here\n \n error[E0423]: expected function, tuple struct or tuple variant, found struct `XEmpty1`\n   --> $DIR/empty-struct-braces-expr.rs:23:15\n@@ -57,6 +72,11 @@ LL |     let xe1 = XEmpty1();\n    |               |\n    |               did you mean `XEmpty1 { /* fields */ }`?\n    |               help: a unit struct with a similar name exists: `XEmpty2`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:2:1\n+   |\n+LL | pub struct XEmpty2;\n+   | ------------------- similarly named unit struct `XEmpty2` defined here\n \n error[E0599]: no variant or associated item named `Empty3` found for type `empty_struct::XE` in the current scope\n   --> $DIR/empty-struct-braces-expr.rs:25:19"}, {"sha": "0ff21c91b78fd25980a09bb4490cf02491e9c1fd", "filename": "src/test/ui/empty/empty-struct-braces-pat-1.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-1.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -15,6 +15,11 @@ LL |         XE::XEmpty3 => ()\n    |         |   |\n    |         |   help: a unit variant with a similar name exists: `XEmpty4`\n    |         did you mean `XE::XEmpty3 { /* fields */ }`?\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:7:5\n+   |\n+LL |     XEmpty4,\n+   |     ------- similarly named unit variant `XEmpty4` defined here\n \n error: aborting due to 2 previous errors\n "}, {"sha": "80c29db8d9b77a8d67fa6e741a50f234cda1a6e0", "filename": "src/test/ui/empty/empty-struct-braces-pat-2.stderr", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-2.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -9,6 +9,11 @@ LL |         Empty1() => ()\n    |         |\n    |         did you mean `Empty1 { /* fields */ }`?\n    |         help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found struct `XEmpty1`\n   --> $DIR/empty-struct-braces-pat-2.rs:18:9\n@@ -18,6 +23,11 @@ LL |         XEmpty1() => ()\n    |         |\n    |         did you mean `XEmpty1 { /* fields */ }`?\n    |         help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found struct `Empty1`\n   --> $DIR/empty-struct-braces-pat-2.rs:21:9\n@@ -30,6 +40,11 @@ LL |         Empty1(..) => ()\n    |         |\n    |         did you mean `Empty1 { /* fields */ }`?\n    |         help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found struct `XEmpty1`\n   --> $DIR/empty-struct-braces-pat-2.rs:24:9\n@@ -39,6 +54,11 @@ LL |         XEmpty1(..) => ()\n    |         |\n    |         did you mean `XEmpty1 { /* fields */ }`?\n    |         help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error: aborting due to 4 previous errors\n "}, {"sha": "05439b39ea39dfe80e321b4dc2dead35cc412c5a", "filename": "src/test/ui/empty/empty-struct-braces-pat-3.stderr", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-3.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -15,6 +15,11 @@ LL |         XE::XEmpty3() => ()\n    |         |   |\n    |         |   help: a tuple variant with a similar name exists: `XEmpty5`\n    |         did you mean `XE::XEmpty3 { /* fields */ }`?\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:8:5\n+   |\n+LL |     XEmpty5(),\n+   |     --------- similarly named tuple variant `XEmpty5` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found struct variant `E::Empty3`\n   --> $DIR/empty-struct-braces-pat-3.rs:25:9\n@@ -33,6 +38,11 @@ LL |         XE::XEmpty3(..) => ()\n    |         |   |\n    |         |   help: a tuple variant with a similar name exists: `XEmpty5`\n    |         did you mean `XE::XEmpty3 { /* fields */ }`?\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:8:5\n+   |\n+LL |     XEmpty5(),\n+   |     --------- similarly named tuple variant `XEmpty5` defined here\n \n error: aborting due to 4 previous errors\n "}, {"sha": "9388ed2665710d7896ce47cff1e9142284f523c7", "filename": "src/test/ui/empty/empty-struct-tuple-pat.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -33,6 +33,11 @@ LL |         XE::XEmpty5 => (),\n    |         |   |\n    |         |   help: a unit variant with a similar name exists: `XEmpty4`\n    |         did you mean `XE::XEmpty5( /* fields */ )`?\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:7:5\n+   |\n+LL |     XEmpty4,\n+   |     ------- similarly named unit variant `XEmpty4` defined here\n \n error: aborting due to 4 previous errors\n "}, {"sha": "8ee14a3d01d899ccde72f5d933f0d85b55f5c15b", "filename": "src/test/ui/empty/empty-struct-unit-pat.stderr", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fempty%2Fempty-struct-unit-pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fempty%2Fempty-struct-unit-pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-unit-pat.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -3,24 +3,44 @@ error[E0532]: expected tuple struct or tuple variant, found unit struct `Empty2`\n    |\n LL |         Empty2() => ()\n    |         ^^^^^^ help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `XEmpty2`\n   --> $DIR/empty-struct-unit-pat.rs:24:9\n    |\n LL |         XEmpty2() => ()\n    |         ^^^^^^^ help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `Empty2`\n   --> $DIR/empty-struct-unit-pat.rs:28:9\n    |\n LL |         Empty2(..) => ()\n    |         ^^^^^^ help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `XEmpty2`\n   --> $DIR/empty-struct-unit-pat.rs:32:9\n    |\n LL |         XEmpty2(..) => ()\n    |         ^^^^^^^ help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found unit variant `E::Empty4`\n   --> $DIR/empty-struct-unit-pat.rs:37:9\n@@ -35,6 +55,11 @@ LL |         XE::XEmpty4() => (),\n    |         ^^^^-------\n    |             |\n    |             help: a tuple variant with a similar name exists: `XEmpty5`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:8:5\n+   |\n+LL |     XEmpty5(),\n+   |     --------- similarly named tuple variant `XEmpty5` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found unit variant `E::Empty4`\n   --> $DIR/empty-struct-unit-pat.rs:46:9\n@@ -49,6 +74,11 @@ LL |         XE::XEmpty4(..) => (),\n    |         ^^^^-------\n    |             |\n    |             help: a tuple variant with a similar name exists: `XEmpty5`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:8:5\n+   |\n+LL |     XEmpty5(),\n+   |     --------- similarly named tuple variant `XEmpty5` defined here\n \n error: aborting due to 8 previous errors\n "}, {"sha": "255521a0be90a61d1b87aa447f97254cac858779", "filename": "src/test/ui/issues/issue-17546.stderr", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -1,8 +1,19 @@\n error[E0573]: expected type, found variant `NoResult`\n   --> $DIR/issue-17546.rs:12:17\n    |\n-LL |     fn new() -> NoResult<MyEnum, String> {\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |       fn new() -> NoResult<MyEnum, String> {\n+   |                   ^^^^^^^^^^^^^^^^^^^^^^^^\n+   | \n+  ::: $SRC_DIR/libcore/result.rs:LL:COL\n+   |\n+LL | / pub enum Result<T, E> {\n+LL | |     /// Contains the success value\n+LL | |     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+LL | |     Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n+...  |\n+LL | |     Err(#[stable(feature = \"rust1\", since = \"1.0.0\")] E),\n+LL | | }\n+   | |_- similarly named enum `Result` defined here\n    |\n help: try using the variant's enum\n    |\n@@ -52,8 +63,19 @@ LL | use std::result::Result;\n error[E0573]: expected type, found variant `NoResult`\n   --> $DIR/issue-17546.rs:33:15\n    |\n-LL | fn newer() -> NoResult<foo::MyEnum, String> {\n-   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |   fn newer() -> NoResult<foo::MyEnum, String> {\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | \n+  ::: $SRC_DIR/libcore/result.rs:LL:COL\n+   |\n+LL | / pub enum Result<T, E> {\n+LL | |     /// Contains the success value\n+LL | |     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+LL | |     Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n+...  |\n+LL | |     Err(#[stable(feature = \"rust1\", since = \"1.0.0\")] E),\n+LL | | }\n+   | |_- similarly named enum `Result` defined here\n    |\n help: try using the variant's enum\n    |"}, {"sha": "40c25b9f78c55f491759a8e386cf96b6e36ed3e2", "filename": "src/test/ui/issues/issue-7607-1.stderr", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fissues%2Fissue-7607-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fissues%2Fissue-7607-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7607-1.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -1,8 +1,17 @@\n error[E0412]: cannot find type `Fo` in this scope\n   --> $DIR/issue-7607-1.rs:5:6\n    |\n-LL | impl Fo {\n-   |      ^^ help: a trait with a similar name exists: `Fn`\n+LL |   impl Fo {\n+   |        ^^ help: a trait with a similar name exists: `Fn`\n+   | \n+  ::: $SRC_DIR/libcore/ops/function.rs:LL:COL\n+   |\n+LL | / pub trait Fn<Args> : FnMut<Args> {\n+LL | |     /// Performs the call operation.\n+LL | |     #[unstable(feature = \"fn_traits\", issue = \"29625\")]\n+LL | |     extern \"rust-call\" fn call(&self, args: Args) -> Self::Output;\n+LL | | }\n+   | |_- similarly named trait `Fn` defined here\n \n error: aborting due to previous error\n "}, {"sha": "7e5dfe20e96166bde3f35dc40360133d0828c841", "filename": "src/test/ui/macros/macro-name-typo.stderr", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -1,8 +1,18 @@\n error: cannot find macro `printlx` in this scope\n   --> $DIR/macro-name-typo.rs:2:5\n    |\n-LL |     printlx!(\"oh noes!\");\n-   |     ^^^^^^^ help: a macro with a similar name exists: `println`\n+LL |       printlx!(\"oh noes!\");\n+   |       ^^^^^^^ help: a macro with a similar name exists: `println`\n+   | \n+  ::: $SRC_DIR/libstd/macros.rs:LL:COL\n+   |\n+LL | / macro_rules! println {\n+LL | |     () => ($crate::print!(\"\\n\"));\n+LL | |     ($($arg:tt)*) => ({\n+LL | |         $crate::io::_print($crate::format_args_nl!($($arg)*));\n+LL | |     })\n+LL | | }\n+   | |_- similarly named macro `println` defined here\n \n error: aborting due to previous error\n "}, {"sha": "3d72cc82cbdfc0ee1c83ee5f83a4b0fad302c2ef", "filename": "src/test/ui/macros/macro-path-prelude-fail-3.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -3,6 +3,11 @@ error: cannot find macro `inline` in this scope\n    |\n LL |     inline!();\n    |     ^^^^^^ help: a macro with a similar name exists: `line`\n+   | \n+  ::: $SRC_DIR/libcore/macros.rs:LL:COL\n+   |\n+LL |     macro_rules! line { () => { /* compiler built-in */ } }\n+   |     ------------------------------------------------------- similarly named macro `line` defined here\n \n error: aborting due to previous error\n "}, {"sha": "d76eb69b3c4c9de1cf96a058a632de323e7b6721", "filename": "src/test/ui/macros/macro-use-wrong-name.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-wrong-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-wrong-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-wrong-name.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -3,6 +3,11 @@ error: cannot find macro `macro_two` in this scope\n    |\n LL |     macro_two!();\n    |     ^^^^^^^^^ help: a macro with a similar name exists: `macro_one`\n+   | \n+  ::: $DIR/auxiliary/two_macros.rs:2:1\n+   |\n+LL | macro_rules! macro_one { () => (\"one\") }\n+   | ---------------------------------------- similarly named macro `macro_one` defined here\n \n error: aborting due to previous error\n "}, {"sha": "13d727de441cb8cef49e2d5546725c2a196269c8", "filename": "src/test/ui/namespace/namespace-mix.stderr", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -24,6 +24,11 @@ error[E0423]: expected value, found type alias `xm1::S`\n    |\n LL |     check(xm1::S);\n    |           ^^^^^^\n+   | \n+  ::: $DIR/auxiliary/namespace-mix.rs:3:5\n+   |\n+LL |     pub struct TS();\n+   |     ---------------- similarly named tuple struct `TS` defined here\n    |\n    = note: can't use a type alias as a constructor\n help: a tuple struct with a similar name exists\n@@ -64,6 +69,11 @@ error[E0423]: expected value, found struct variant `xm7::V`\n    |\n LL |     check(xm7::V);\n    |           ^^^^^^ did you mean `xm7::V { /* fields */ }`?\n+   | \n+  ::: $DIR/auxiliary/namespace-mix.rs:7:9\n+   |\n+LL |         TV(),\n+   |         ---- similarly named tuple variant `TV` defined here\n    |\n help: a tuple variant with a similar name exists\n    |"}, {"sha": "2a36ac78d78c1e55dc016a5b71c2fcec91e0b5e7", "filename": "src/test/ui/proc-macro/parent-source-spans.stderr", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -132,6 +132,11 @@ LL |     parent_source_spans!($($tokens)*);\n ...\n LL |     one!(\"hello\", \"world\");\n    |     ----------------------- in this macro invocation\n+   | \n+  ::: $SRC_DIR/libcore/result.rs:LL:COL\n+   |\n+LL |     Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n+   |     --------------------------------------------------- similarly named tuple variant `Ok` defined here\n \n error[E0425]: cannot find value `ok` in this scope\n   --> $DIR/parent-source-spans.rs:28:5\n@@ -141,6 +146,11 @@ LL |     parent_source_spans!($($tokens)*);\n ...\n LL |     two!(\"yay\", \"rust\");\n    |     -------------------- in this macro invocation\n+   | \n+  ::: $SRC_DIR/libcore/result.rs:LL:COL\n+   |\n+LL |     Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n+   |     --------------------------------------------------- similarly named tuple variant `Ok` defined here\n \n error[E0425]: cannot find value `ok` in this scope\n   --> $DIR/parent-source-spans.rs:28:5\n@@ -150,6 +160,11 @@ LL |     parent_source_spans!($($tokens)*);\n ...\n LL |     three!(\"hip\", \"hop\");\n    |     --------------------- in this macro invocation\n+   | \n+  ::: $SRC_DIR/libcore/result.rs:LL:COL\n+   |\n+LL |     Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n+   |     --------------------------------------------------- similarly named tuple variant `Ok` defined here\n \n error: aborting due to 21 previous errors\n "}, {"sha": "4663a8df9daf0d8e5877e236beddb62310c82075", "filename": "src/test/ui/proc-macro/resolve-error.stderr", "status": "modified", "additions": 41, "deletions": 8, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -1,8 +1,15 @@\n error: cannot find macro `bang_proc_macrp` in this scope\n   --> $DIR/resolve-error.rs:60:5\n    |\n-LL |     bang_proc_macrp!();\n-   |     ^^^^^^^^^^^^^^^ help: a macro with a similar name exists: `bang_proc_macro`\n+LL |       bang_proc_macrp!();\n+   |       ^^^^^^^^^^^^^^^ help: a macro with a similar name exists: `bang_proc_macro`\n+   | \n+  ::: $DIR/auxiliary/test-macros.rs:15:1\n+   |\n+LL | / pub fn empty(_: TokenStream) -> TokenStream {\n+LL | |     TokenStream::new()\n+LL | | }\n+   | |_- similarly named macro `bang_proc_macro` defined here\n \n error: cannot find macro `Dlona` in this scope\n   --> $DIR/resolve-error.rs:57:5\n@@ -53,8 +60,15 @@ LL | #[derive(Dlona)]\n error: cannot find derive macro `Dlona` in this scope\n   --> $DIR/resolve-error.rs:40:10\n    |\n-LL | #[derive(Dlona)]\n-   |          ^^^^^ help: a derive macro with a similar name exists: `Clona`\n+LL |   #[derive(Dlona)]\n+   |            ^^^^^ help: a derive macro with a similar name exists: `Clona`\n+   | \n+  ::: $DIR/auxiliary/derive-clona.rs:11:1\n+   |\n+LL | / pub fn derive_clonea(input: TokenStream) -> TokenStream {\n+LL | |     \"\".parse().unwrap()\n+LL | | }\n+   | |_- similarly named derive macro `Clona` defined here\n \n error: cannot find derive macro `Dlone` in this scope\n   --> $DIR/resolve-error.rs:35:10\n@@ -67,6 +81,11 @@ error: cannot find derive macro `Dlone` in this scope\n    |\n LL | #[derive(Dlone)]\n    |          ^^^^^ help: a derive macro with a similar name exists: `Clone`\n+   | \n+  ::: $SRC_DIR/libcore/clone.rs:LL:COL\n+   |\n+LL | pub macro Clone($item:item) { /* compiler built-in */ }\n+   | ------------------------------------------------------- similarly named derive macro `Clone` defined here\n \n error: cannot find attribute `FooWithLongNan` in this scope\n   --> $DIR/resolve-error.rs:32:3\n@@ -77,14 +96,28 @@ LL | #[FooWithLongNan]\n error: cannot find attribute `attr_proc_macra` in this scope\n   --> $DIR/resolve-error.rs:28:3\n    |\n-LL | #[attr_proc_macra]\n-   |   ^^^^^^^^^^^^^^^ help: an attribute macro with a similar name exists: `attr_proc_macro`\n+LL |   #[attr_proc_macra]\n+   |     ^^^^^^^^^^^^^^^ help: an attribute macro with a similar name exists: `attr_proc_macro`\n+   | \n+  ::: $DIR/auxiliary/test-macros.rs:20:1\n+   |\n+LL | / pub fn empty_attr(_: TokenStream, _: TokenStream) -> TokenStream {\n+LL | |     TokenStream::new()\n+LL | | }\n+   | |_- similarly named attribute macro `attr_proc_macro` defined here\n \n error: cannot find derive macro `FooWithLongNan` in this scope\n   --> $DIR/resolve-error.rs:22:10\n    |\n-LL | #[derive(FooWithLongNan)]\n-   |          ^^^^^^^^^^^^^^ help: a derive macro with a similar name exists: `FooWithLongName`\n+LL |   #[derive(FooWithLongNan)]\n+   |            ^^^^^^^^^^^^^^ help: a derive macro with a similar name exists: `FooWithLongName`\n+   | \n+  ::: $DIR/auxiliary/derive-foo.rs:11:1\n+   |\n+LL | / pub fn derive_foo(input: TokenStream) -> TokenStream {\n+LL | |     \"\".parse().unwrap()\n+LL | | }\n+   | |_- similarly named derive macro `FooWithLongName` defined here\n \n error: cannot find derive macro `FooWithLongNan` in this scope\n   --> $DIR/resolve-error.rs:22:10"}, {"sha": "c7497afd0257d18b533312962a701580366f05a7", "filename": "src/test/ui/resolve/levenshtein.stderr", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -16,8 +16,19 @@ LL | type A = Baz; // Misspelled type name.\n error[E0412]: cannot find type `Opiton` in this scope\n   --> $DIR/levenshtein.rs:12:10\n    |\n-LL | type B = Opiton<u8>; // Misspelled type name from the prelude.\n-   |          ^^^^^^ help: an enum with a similar name exists: `Option`\n+LL |   type B = Opiton<u8>; // Misspelled type name from the prelude.\n+   |            ^^^^^^ help: an enum with a similar name exists: `Option`\n+   | \n+  ::: $SRC_DIR/libcore/option.rs:LL:COL\n+   |\n+LL | / pub enum Option<T> {\n+LL | |     /// No value\n+LL | |     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+LL | |     None,\n+...  |\n+LL | |     Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n+LL | | }\n+   | |_- similarly named enum `Option` defined here\n \n error[E0412]: cannot find type `Baz` in this scope\n   --> $DIR/levenshtein.rs:16:14"}, {"sha": "d91b1cc707cb7c906cd352b4a257dcba51ac2063", "filename": "src/test/ui/suggestions/attribute-typos.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39c96a0f534366b3970ff0f8cd831be4386961dc/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr?ref=39c96a0f534366b3970ff0f8cd831be4386961dc", "patch": "@@ -18,6 +18,11 @@ error: cannot find attribute `tests` in this scope\n    |\n LL | #[tests]\n    |   ^^^^^ help: an attribute macro with a similar name exists: `test`\n+   | \n+  ::: $SRC_DIR/libcore/macros.rs:LL:COL\n+   |\n+LL |     pub macro test($item:item) { /* compiler built-in */ }\n+   |     ------------------------------------------------------ similarly named attribute macro `test` defined here\n \n error: cannot find attribute `deprcated` in this scope\n   --> $DIR/attribute-typos.rs:1:3"}]}