{"sha": "29c372bf8b612dd9e23eb2503a1f1167e2f2f47c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YzM3MmJmOGI2MTJkZDllMjNlYjI1MDNhMWYxMTY3ZTJmMmY0N2M=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-07T14:51:43Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-07T14:51:43Z"}, "message": "Add more documentation", "tree": {"sha": "eadbc872bf0d803288688ffc872dcf34a77c9a08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eadbc872bf0d803288688ffc872dcf34a77c9a08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29c372bf8b612dd9e23eb2503a1f1167e2f2f47c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29c372bf8b612dd9e23eb2503a1f1167e2f2f47c", "html_url": "https://github.com/rust-lang/rust/commit/29c372bf8b612dd9e23eb2503a1f1167e2f2f47c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29c372bf8b612dd9e23eb2503a1f1167e2f2f47c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7f59522b6354d66cf1f08ff0b665d3699acd98c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7f59522b6354d66cf1f08ff0b665d3699acd98c", "html_url": "https://github.com/rust-lang/rust/commit/f7f59522b6354d66cf1f08ff0b665d3699acd98c"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "d2a0798249ad9eaf5ea721725b4488029b641085", "filename": "src/librustc_mir/const_eval/eval_queries.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/29c372bf8b612dd9e23eb2503a1f1167e2f2f47c/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c372bf8b612dd9e23eb2503a1f1167e2f2f47c/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs?ref=29c372bf8b612dd9e23eb2503a1f1167e2f2f47c", "patch": "@@ -124,7 +124,12 @@ pub(super) fn op_to_const<'tcx>(\n             ConstValue::ByRef { alloc, offset: ptr.offset }\n         }\n         Scalar::Raw { data, .. } => {\n-            assert_eq!(data, mplace.layout.align.abi.bytes().into());\n+            assert_eq!(\n+                data,\n+                mplace.layout.align.abi.bytes().into(),\n+                \"this MPlaceTy must come from `try_as_mplace` being used on a zst, so we know what\n+                 value this integer address must have\",\n+            );\n             assert!(mplace.layout.is_zst());\n             ConstValue::Scalar(Scalar::zst())\n         }"}, {"sha": "69563c5a08de108e24fe0cf16b25727c1c6cd868", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c372bf8b612dd9e23eb2503a1f1167e2f2f47c/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c372bf8b612dd9e23eb2503a1f1167e2f2f47c/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=29c372bf8b612dd9e23eb2503a1f1167e2f2f47c", "patch": "@@ -21,7 +21,9 @@ use super::{\n };\n \n #[derive(Copy, Clone, Debug, Hash, PartialEq, Eq, HashStable)]\n+/// Information required for the sound usage of a `MemPlace`.\n pub enum MemPlaceMeta<Tag = (), Id = AllocId> {\n+    /// The unsized payload (e.g. length for slices or vtable pointer for trait objects).\n     Unsized(Scalar<Tag, Id>),\n     /// `Sized` types or unsized `extern type`\n     None,"}]}