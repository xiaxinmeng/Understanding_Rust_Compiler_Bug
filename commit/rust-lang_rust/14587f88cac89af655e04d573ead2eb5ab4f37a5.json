{"sha": "14587f88cac89af655e04d573ead2eb5ab4f37a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NTg3Zjg4Y2FjODlhZjY1NWUwNGQ1NzNlYWQyZWI1YWI0ZjM3YTU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-03-27T22:10:28Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-03-31T22:47:35Z"}, "message": "native: Switch field privacy as necessary", "tree": {"sha": "17a5b5ec16166eb27a9148ef9a5d2a2291a8c3f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17a5b5ec16166eb27a9148ef9a5d2a2291a8c3f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14587f88cac89af655e04d573ead2eb5ab4f37a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14587f88cac89af655e04d573ead2eb5ab4f37a5", "html_url": "https://github.com/rust-lang/rust/commit/14587f88cac89af655e04d573ead2eb5ab4f37a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14587f88cac89af655e04d573ead2eb5ab4f37a5/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f33588d75966b939df288cf2125e9906e15cf82", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f33588d75966b939df288cf2125e9906e15cf82", "html_url": "https://github.com/rust-lang/rust/commit/5f33588d75966b939df288cf2125e9906e15cf82"}], "stats": {"total": 76, "additions": 39, "deletions": 37}, "files": [{"sha": "143228b14e9e47581447d67236ac39f01d733fa8", "filename": "src/libnative/io/file_unix.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Ffile_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Ffile_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ffile_unix.rs?ref=14587f88cac89af655e04d573ead2eb5ab4f37a5", "patch": "@@ -30,7 +30,7 @@ struct Inner {\n }\n \n pub struct FileDesc {\n-    priv inner: UnsafeArc<Inner>\n+    inner: UnsafeArc<Inner>\n }\n \n impl FileDesc {\n@@ -216,8 +216,8 @@ impl Drop for Inner {\n }\n \n pub struct CFile {\n-    priv file: *libc::FILE,\n-    priv fd: FileDesc,\n+    file: *libc::FILE,\n+    fd: FileDesc,\n }\n \n impl CFile {"}, {"sha": "c19e81b5de4571b3057bfe28a9b07047e6759ae2", "filename": "src/libnative/io/file_win32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Ffile_win32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Ffile_win32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ffile_win32.rs?ref=14587f88cac89af655e04d573ead2eb5ab4f37a5", "patch": "@@ -34,7 +34,7 @@ struct Inner {\n }\n \n pub struct FileDesc {\n-    priv inner: UnsafeArc<Inner>\n+    inner: UnsafeArc<Inner>\n }\n \n impl FileDesc {"}, {"sha": "e6e9cbb7ce34f656e7a9b1c8809c521a8830318e", "filename": "src/libnative/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Fmod.rs?ref=14587f88cac89af655e04d573ead2eb5ab4f37a5", "patch": "@@ -215,7 +215,7 @@ fn keep_going(data: &[u8], f: |*u8, uint| -> i64) -> i64 {\n /// Implementation of rt::rtio's IoFactory trait to generate handles to the\n /// native I/O functionality.\n pub struct IoFactory {\n-    priv cannot_construct_outside_of_this_module: ()\n+    cannot_construct_outside_of_this_module: ()\n }\n \n impl IoFactory {"}, {"sha": "bf751be1f7fad13b7f295ef36e86b0adc3bd107a", "filename": "src/libnative/io/net.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Fnet.rs?ref=14587f88cac89af655e04d573ead2eb5ab4f37a5", "patch": "@@ -237,7 +237,7 @@ pub fn init() {\n ////////////////////////////////////////////////////////////////////////////////\n \n pub struct TcpStream {\n-    priv inner: UnsafeArc<Inner>,\n+    inner: UnsafeArc<Inner>,\n }\n \n struct Inner {\n@@ -373,7 +373,7 @@ impl Drop for Inner {\n ////////////////////////////////////////////////////////////////////////////////\n \n pub struct TcpListener {\n-    priv inner: UnsafeArc<Inner>,\n+    inner: UnsafeArc<Inner>,\n }\n \n impl TcpListener {\n@@ -430,7 +430,7 @@ impl rtio::RtioSocket for TcpListener {\n }\n \n pub struct TcpAcceptor {\n-    priv listener: TcpListener,\n+    listener: TcpListener,\n }\n \n impl TcpAcceptor {\n@@ -474,7 +474,7 @@ impl rtio::RtioTcpAcceptor for TcpAcceptor {\n ////////////////////////////////////////////////////////////////////////////////\n \n pub struct UdpSocket {\n-    priv inner: UnsafeArc<Inner>,\n+    inner: UnsafeArc<Inner>,\n }\n \n impl UdpSocket {"}, {"sha": "fb9ac27d830676f3f5f352cf04a5a831eb7676c8", "filename": "src/libnative/io/pipe_unix.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Fpipe_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Fpipe_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Fpipe_unix.rs?ref=14587f88cac89af655e04d573ead2eb5ab4f37a5", "patch": "@@ -106,7 +106,7 @@ fn bind(addr: &CString, ty: libc::c_int) -> IoResult<Inner> {\n ////////////////////////////////////////////////////////////////////////////////\n \n pub struct UnixStream {\n-    priv inner: UnsafeArc<Inner>,\n+    inner: UnsafeArc<Inner>,\n }\n \n impl UnixStream {\n@@ -160,7 +160,7 @@ impl rtio::RtioPipe for UnixStream {\n ////////////////////////////////////////////////////////////////////////////////\n \n pub struct UnixDatagram {\n-    priv inner: UnsafeArc<Inner>,\n+    inner: UnsafeArc<Inner>,\n }\n \n impl UnixDatagram {\n@@ -231,7 +231,7 @@ impl UnixDatagram {\n ////////////////////////////////////////////////////////////////////////////////\n \n pub struct UnixListener {\n-    priv inner: Inner,\n+    inner: Inner,\n }\n \n impl UnixListener {\n@@ -256,7 +256,7 @@ impl rtio::RtioUnixListener for UnixListener {\n }\n \n pub struct UnixAcceptor {\n-    priv listener: UnixListener,\n+    listener: UnixListener,\n }\n \n impl UnixAcceptor {"}, {"sha": "36f2dc7d65c7362fe0030d73d501640c50b202fb", "filename": "src/libnative/io/pipe_win32.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Fpipe_win32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Fpipe_win32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Fpipe_win32.rs?ref=14587f88cac89af655e04d573ead2eb5ab4f37a5", "patch": "@@ -154,9 +154,9 @@ unsafe fn pipe(name: *u16, init: bool) -> libc::HANDLE {\n ////////////////////////////////////////////////////////////////////////////////\n \n pub struct UnixStream {\n-    priv inner: UnsafeArc<Inner>,\n-    priv write: Option<Event>,\n-    priv read: Option<Event>,\n+    inner: UnsafeArc<Inner>,\n+    write: Option<Event>,\n+    read: Option<Event>,\n }\n \n impl UnixStream {\n@@ -349,8 +349,8 @@ impl rtio::RtioPipe for UnixStream {\n ////////////////////////////////////////////////////////////////////////////////\n \n pub struct UnixListener {\n-    priv handle: libc::HANDLE,\n-    priv name: CString,\n+    handle: libc::HANDLE,\n+    name: CString,\n }\n \n impl UnixListener {\n@@ -389,8 +389,8 @@ impl rtio::RtioUnixListener for UnixListener {\n }\n \n pub struct UnixAcceptor {\n-    priv listener: UnixListener,\n-    priv event: Event,\n+    listener: UnixListener,\n+    event: Event,\n }\n \n impl UnixAcceptor {"}, {"sha": "c729473eecdf75afb0f74c55948a1483786495b4", "filename": "src/libnative/io/process.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Fprocess.rs?ref=14587f88cac89af655e04d573ead2eb5ab4f37a5", "patch": "@@ -31,15 +31,15 @@ use super::file;\n  */\n pub struct Process {\n     /// The unique id of the process (this should never be negative).\n-    priv pid: pid_t,\n+    pid: pid_t,\n \n     /// A handle to the process - on unix this will always be NULL, but on\n     /// windows it will be a HANDLE to the process, which will prevent the\n     /// pid being re-used until the handle is closed.\n-    priv handle: *(),\n+    handle: *(),\n \n     /// None until finish() is called.\n-    priv exit_code: Option<p::ProcessExit>,\n+    exit_code: Option<p::ProcessExit>,\n }\n \n impl Process {"}, {"sha": "ea237944bad9fd8af879e3a69b8b0e9ed211ac51", "filename": "src/libnative/io/timer_other.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Ftimer_other.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Ftimer_other.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ftimer_other.rs?ref=14587f88cac89af655e04d573ead2eb5ab4f37a5", "patch": "@@ -59,8 +59,8 @@ use io::IoResult;\n use io::timer_helper;\n \n pub struct Timer {\n-    priv id: uint,\n-    priv inner: Option<~Inner>,\n+    id: uint,\n+    inner: Option<~Inner>,\n }\n \n struct Inner {"}, {"sha": "d7202d9d765d425dc5dea8d78a4ffef7748b2f90", "filename": "src/libnative/io/timer_timerfd.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Ftimer_timerfd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Ftimer_timerfd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ftimer_timerfd.rs?ref=14587f88cac89af655e04d573ead2eb5ab4f37a5", "patch": "@@ -40,8 +40,8 @@ use io::IoResult;\n use io::timer_helper;\n \n pub struct Timer {\n-    priv fd: FileDesc,\n-    priv on_worker: bool,\n+    fd: FileDesc,\n+    on_worker: bool,\n }\n \n #[allow(visible_private_types)]\n@@ -285,24 +285,24 @@ mod imp {\n     #[cfg(target_arch = \"x86_64\")]\n     #[packed]\n     pub struct epoll_event {\n-        events: u32,\n-        data: i64,\n+        pub events: u32,\n+        pub data: i64,\n     }\n \n     #[cfg(not(target_arch = \"x86_64\"))]\n     pub struct epoll_event {\n-        events: u32,\n-        data: i64,\n+        pub events: u32,\n+        pub data: i64,\n     }\n \n     pub struct timespec {\n-        tv_sec: libc::time_t,\n-        tv_nsec: libc::c_long,\n+        pub tv_sec: libc::time_t,\n+        pub tv_nsec: libc::c_long,\n     }\n \n     pub struct itimerspec {\n-        it_interval: timespec,\n-        it_value: timespec,\n+        pub it_interval: timespec,\n+        pub it_value: timespec,\n     }\n \n     extern {"}, {"sha": "a342afa685475fa6da8114b313e4b7888300c635", "filename": "src/libnative/io/timer_win32.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Ftimer_win32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Fio%2Ftimer_win32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ftimer_win32.rs?ref=14587f88cac89af655e04d573ead2eb5ab4f37a5", "patch": "@@ -29,8 +29,8 @@ use io::timer_helper;\n use io::IoResult;\n \n pub struct Timer {\n-    priv obj: libc::HANDLE,\n-    priv on_worker: bool,\n+    obj: libc::HANDLE,\n+    on_worker: bool,\n }\n \n pub enum Req {"}, {"sha": "06b51b563064c06d1875b04339240882fb17ab83", "filename": "src/libnative/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14587f88cac89af655e04d573ead2eb5ab4f37a5/src%2Flibnative%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Flib.rs?ref=14587f88cac89af655e04d573ead2eb5ab4f37a5", "patch": "@@ -51,6 +51,8 @@\n #![deny(unused_result, unused_must_use)]\n #![allow(non_camel_case_types)]\n \n+#![allow(visible_private_types)] // NOTE: remove after a stage0 snap\n+\n // NB this crate explicitly does *not* allow glob imports, please seriously\n //    consider whether they're needed before adding that feature here (the\n //    answer is that you don't need them)"}]}