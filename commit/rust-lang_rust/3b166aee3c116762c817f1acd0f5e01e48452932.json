{"sha": "3b166aee3c116762c817f1acd0f5e01e48452932", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiMTY2YWVlM2MxMTY3NjJjODE3ZjFhY2QwZjVlMDFlNDg0NTI5MzI=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-08T16:36:33Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-08T16:36:33Z"}, "message": "Merge #466\n\n466: switch to newer cargo-metadata r=matklad a=matklad\n\nThis handles renames\r\n\r\ncloses https://github.com/rust-analyzer/rust-analyzer/issues/464\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "02b0ca86931a3c2bcd776245cc3ad75ec042af16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02b0ca86931a3c2bcd776245cc3ad75ec042af16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b166aee3c116762c817f1acd0f5e01e48452932", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b166aee3c116762c817f1acd0f5e01e48452932", "html_url": "https://github.com/rust-lang/rust/commit/3b166aee3c116762c817f1acd0f5e01e48452932", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b166aee3c116762c817f1acd0f5e01e48452932/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "63e3afeb682cb41e0bb00e1d138f962bbb1b1e7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/63e3afeb682cb41e0bb00e1d138f962bbb1b1e7b", "html_url": "https://github.com/rust-lang/rust/commit/63e3afeb682cb41e0bb00e1d138f962bbb1b1e7b"}, {"sha": "141ab166cfc07372322d8de0e8209f2728780706", "url": "https://api.github.com/repos/rust-lang/rust/commits/141ab166cfc07372322d8de0e8209f2728780706", "html_url": "https://github.com/rust-lang/rust/commit/141ab166cfc07372322d8de0e8209f2728780706"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "949a58e86e5c47296639213a20e3c7df1df3e4af", "filename": "Cargo.lock", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3b166aee3c116762c817f1acd0f5e01e48452932/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/3b166aee3c116762c817f1acd0f5e01e48452932/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=3b166aee3c116762c817f1acd0f5e01e48452932", "patch": "@@ -113,7 +113,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n [[package]]\n name = \"cargo_metadata\"\n version = \"0.6.4\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+source = \"git+https://github.com/matklad/cargo_metadata.git?branch=well-typed#2f125128c38beeef34e0bfc1bc27861a24753dfe\"\n dependencies = [\n  \"error-chain 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -724,7 +724,7 @@ dependencies = [\n name = \"ra_lsp_server\"\n version = \"0.1.0\"\n dependencies = [\n- \"cargo_metadata 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"cargo_metadata 0.6.4 (git+https://github.com/matklad/cargo_metadata.git?branch=well-typed)\",\n  \"crossbeam-channel 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"drop_bomb 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1489,7 +1489,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum block-buffer 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a076c298b9ecdb530ed9d967e74a6027d6a7478924520acddcddc24c1c8ab3ab\"\n \"checksum byte-tools 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"560c32574a12a89ecd91f5e742165893f86e3ab98d21f8ea548658eb9eef5f40\"\n \"checksum byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"94f88df23a25417badc922ab0f5716cc1330e87f71ddd9203b3a3ccd9cedf75d\"\n-\"checksum cargo_metadata 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e5d1b4d380e1bab994591a24c2bdd1b054f64b60bef483a8c598c7c345bc3bbe\"\n+\"checksum cargo_metadata 0.6.4 (git+https://github.com/matklad/cargo_metadata.git?branch=well-typed)\" = \"<none>\"\n \"checksum cc 1.0.28 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bb4a8b715cb4597106ea87c7c84b2f1d452c7492033765df7f32651e66fcf749\"\n \"checksum cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"082bb9b28e00d3c9d39cc03e64ce4cea0f1bb9b3fde493f0cbc008472d22bdf4\"\n \"checksum chrono 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"45912881121cb26fad7c38c17ba7daa18764771836b34fab7d3fbd93ed633878\""}, {"sha": "82b08ab40c8a65aad9dd10414b5d428ab991fc0c", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3b166aee3c116762c817f1acd0f5e01e48452932/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3b166aee3c116762c817f1acd0f5e01e48452932/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=3b166aee3c116762c817f1acd0f5e01e48452932", "patch": "@@ -6,3 +6,4 @@ incremental = true\n debug = true\n \n [patch.'crates-io']\n+cargo_metadata = { git = \"https://github.com/matklad/cargo_metadata.git\", branch = \"well-typed\" }"}, {"sha": "ff9befe469123cf86941e9e41295d19752a8a634", "filename": "crates/ra_lsp_server/src/project_model.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3b166aee3c116762c817f1acd0f5e01e48452932/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b166aee3c116762c817f1acd0f5e01e48452932/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs?ref=3b166aee3c116762c817f1acd0f5e01e48452932", "patch": "@@ -2,7 +2,7 @@ use std::path::{Path, PathBuf};\n \n use cargo_metadata::{metadata_run, CargoOpt};\n use ra_syntax::SmolStr;\n-use rustc_hash::{FxHashMap, FxHashSet};\n+use rustc_hash::FxHashMap;\n use failure::{format_err, bail};\n use thread_worker::{WorkerHandle, Worker};\n \n@@ -109,19 +109,15 @@ impl CargoWorkspace {\n         let mut packages = Vec::new();\n         let mut targets = Vec::new();\n \n-        let ws_members: FxHashSet<String> = meta\n-            .workspace_members\n-            .into_iter()\n-            .map(|it| it.raw)\n-            .collect();\n+        let ws_members = &meta.workspace_members;\n \n         for meta_pkg in meta.packages {\n             let pkg = Package(packages.len());\n             let is_member = ws_members.contains(&meta_pkg.id);\n             pkg_by_id.insert(meta_pkg.id.clone(), pkg);\n             let mut pkg_data = PackageData {\n                 name: meta_pkg.name.into(),\n-                manifest: PathBuf::from(meta_pkg.manifest_path),\n+                manifest: meta_pkg.manifest_path.clone(),\n                 targets: Vec::new(),\n                 is_member,\n                 dependencies: Vec::new(),\n@@ -131,7 +127,7 @@ impl CargoWorkspace {\n                 targets.push(TargetData {\n                     pkg,\n                     name: meta_tgt.name.into(),\n-                    root: PathBuf::from(meta_tgt.src_path),\n+                    root: meta_tgt.src_path.clone(),\n                     kind: TargetKind::new(meta_tgt.kind.as_slice()),\n                 });\n                 pkg_data.targets.push(tgt);\n@@ -141,10 +137,11 @@ impl CargoWorkspace {\n         let resolve = meta.resolve.expect(\"metadata executed with deps\");\n         for node in resolve.nodes {\n             let source = pkg_by_id[&node.id];\n-            for id in node.dependencies {\n-                let target = pkg_by_id[&id];\n-                let name: SmolStr = packages[target.0].name.replace('-', \"_\").into();\n-                let dep = PackageDependency { name, pkg: target };\n+            for dep_node in node.deps {\n+                let dep = PackageDependency {\n+                    name: dep_node.name.into(),\n+                    pkg: pkg_by_id[&dep_node.pkg],\n+                };\n                 packages[source.0].dependencies.push(dep);\n             }\n         }"}]}