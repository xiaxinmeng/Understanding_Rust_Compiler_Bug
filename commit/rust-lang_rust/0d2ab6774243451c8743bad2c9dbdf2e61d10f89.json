{"sha": "0d2ab6774243451c8743bad2c9dbdf2e61d10f89", "node_id": "C_kwDOAAsO6NoAKDBkMmFiNjc3NDI0MzQ1MWM4NzQzYmFkMmM5ZGJkZjJlNjFkMTBmODk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-01T04:54:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-01T04:54:37Z"}, "message": "Rollup merge of #107389 - zvavybir:master, r=estebank\n\nFixing confusion between mod and remainder\n\nLike many programming languages, rust too confuses remainder and modulus.  The `%` operator and the associated `Rem` trait is (as the trait name suggests) the remainder, but since most people are linguistically more familiar with the modulus the documentation sometimes claims otherwise.  This PR tries to fix this problem in rustc.", "tree": {"sha": "9066e8c054962a0f98c866e173ab0550a5b7b335", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9066e8c054962a0f98c866e173ab0550a5b7b335"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d2ab6774243451c8743bad2c9dbdf2e61d10f89", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj2fCNCRBK7hj4Ov3rIwAAHkgIAHCm4bslJvQ3g9YvEfgYnOSb\nTSBvL2cPlnIE/upKlew8alZTEqWRJWHnIbte/aM4lmtbtApeSOKXDPJb8eR0Q02+\nRFfwXBJleRneVvWjdHnN/YFj0iGRRX7JBjroqfjunZZzfGzLxeGAj479Y/x+2qd9\nzKA3E0N61WFahKJ2sRTfV0ifKP9eLehpJDhleiMSpDfrElW1tyAfg89JyG6dIZ/a\n7bEntF8v7zrt5pauOSYOhUpCC6ZEJiCbz/WBhHMf6k73oOyB1aVxt57WboQuiAj1\nxBWzR+li9hu0kFwKTpbblIkSWsdRqdZvDDiWdKVYEB9glHUKgfIA2S2KKguXcuQ=\n=m6Li\n-----END PGP SIGNATURE-----\n", "payload": "tree 9066e8c054962a0f98c866e173ab0550a5b7b335\nparent ad8e1dc2863f63c35ef3ceef3064d0851a1d2582\nparent af9671fd28601c95c4770aa47c733f81ad6ab607\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1675227277 +0100\ncommitter GitHub <noreply@github.com> 1675227277 +0100\n\nRollup merge of #107389 - zvavybir:master, r=estebank\n\nFixing confusion between mod and remainder\n\nLike many programming languages, rust too confuses remainder and modulus.  The `%` operator and the associated `Rem` trait is (as the trait name suggests) the remainder, but since most people are linguistically more familiar with the modulus the documentation sometimes claims otherwise.  This PR tries to fix this problem in rustc.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d2ab6774243451c8743bad2c9dbdf2e61d10f89", "html_url": "https://github.com/rust-lang/rust/commit/0d2ab6774243451c8743bad2c9dbdf2e61d10f89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad8e1dc2863f63c35ef3ceef3064d0851a1d2582", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad8e1dc2863f63c35ef3ceef3064d0851a1d2582", "html_url": "https://github.com/rust-lang/rust/commit/ad8e1dc2863f63c35ef3ceef3064d0851a1d2582"}, {"sha": "af9671fd28601c95c4770aa47c733f81ad6ab607", "url": "https://api.github.com/repos/rust-lang/rust/commits/af9671fd28601c95c4770aa47c733f81ad6ab607", "html_url": "https://github.com/rust-lang/rust/commit/af9671fd28601c95c4770aa47c733f81ad6ab607"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "67769fe4478a24a081c41e42f0f63aee00ab70cd", "filename": "compiler/rustc_hir_typeck/src/op.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/compiler%2Frustc_hir_typeck%2Fsrc%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/compiler%2Frustc_hir_typeck%2Fsrc%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fop.rs?ref=0d2ab6774243451c8743bad2c9dbdf2e61d10f89", "patch": "@@ -335,7 +335,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 format!(\"cannot divide `{lhs_ty}` by `{rhs_ty}`\")\n                             }\n                             hir::BinOpKind::Rem => {\n-                                format!(\"cannot mod `{lhs_ty}` by `{rhs_ty}`\")\n+                                format!(\n+                                    \"cannot calculate the remainder of `{lhs_ty}` divided by `{rhs_ty}`\"\n+                                )\n                             }\n                             hir::BinOpKind::BitAnd => {\n                                 format!(\"no implementation for `{lhs_ty} & {rhs_ty}`\")"}, {"sha": "cc13db5c9565beca6844381a896532759c654fae", "filename": "library/core/src/ops/arith.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/library%2Fcore%2Fsrc%2Fops%2Farith.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/library%2Fcore%2Fsrc%2Fops%2Farith.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Farith.rs?ref=0d2ab6774243451c8743bad2c9dbdf2e61d10f89", "patch": "@@ -545,7 +545,7 @@ div_impl_float! { f32 f64 }\n #[lang = \"rem\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_on_unimplemented(\n-    message = \"cannot mod `{Self}` by `{Rhs}`\",\n+    message = \"cannot calculate the remainder of `{Self}` divided by `{Rhs}`\",\n     label = \"no implementation for `{Self} % {Rhs}`\"\n )]\n #[doc(alias = \"%\")]\n@@ -981,7 +981,7 @@ div_assign_impl! { usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 f32 f64 }\n #[lang = \"rem_assign\"]\n #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n #[rustc_on_unimplemented(\n-    message = \"cannot mod-assign `{Self}` by `{Rhs}``\",\n+    message = \"cannot calculate and assign the remainder of `{Self}` divided by `{Rhs}`\",\n     label = \"no implementation for `{Self} %= {Rhs}`\"\n )]\n #[doc(alias = \"%\")]"}, {"sha": "586d2568c306fe4877ba9c4c517d055a5e8b52c3", "filename": "tests/ui/binop/binary-op-on-double-ref.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.fixed?ref=0d2ab6774243451c8743bad2c9dbdf2e61d10f89", "patch": "@@ -3,7 +3,7 @@ fn main() {\n     let v = vec![1, 2, 3, 4, 5, 6, 7, 8, 9];\n     let vr = v.iter().filter(|x| {\n         *x % 2 == 0\n-        //~^ ERROR cannot mod `&&{integer}` by `{integer}`\n+        //~^ ERROR cannot calculate the remainder of `&&{integer}` divided by `{integer}`\n     });\n     println!(\"{:?}\", vr);\n }"}, {"sha": "48ee445466e35a8d37d0b78f5a9368d98100ad4b", "filename": "tests/ui/binop/binary-op-on-double-ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.rs?ref=0d2ab6774243451c8743bad2c9dbdf2e61d10f89", "patch": "@@ -3,7 +3,7 @@ fn main() {\n     let v = vec![1, 2, 3, 4, 5, 6, 7, 8, 9];\n     let vr = v.iter().filter(|x| {\n         x % 2 == 0\n-        //~^ ERROR cannot mod `&&{integer}` by `{integer}`\n+        //~^ ERROR cannot calculate the remainder of `&&{integer}` divided by `{integer}`\n     });\n     println!(\"{:?}\", vr);\n }"}, {"sha": "2e8aeebc681d6ed1cecb10cbd7f04e18a2454971", "filename": "tests/ui/binop/binary-op-on-double-ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.stderr?ref=0d2ab6774243451c8743bad2c9dbdf2e61d10f89", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: cannot mod `&&{integer}` by `{integer}`\n+error[E0369]: cannot calculate the remainder of `&&{integer}` divided by `{integer}`\n   --> $DIR/binary-op-on-double-ref.rs:5:11\n    |\n LL |         x % 2 == 0"}, {"sha": "54c8838e48f113675dbfc6b8ef3cead310657e49", "filename": "tests/ui/binop/issue-28837.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/tests%2Fui%2Fbinop%2Fissue-28837.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/tests%2Fui%2Fbinop%2Fissue-28837.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbinop%2Fissue-28837.rs?ref=0d2ab6774243451c8743bad2c9dbdf2e61d10f89", "patch": "@@ -11,7 +11,7 @@ fn main() {\n \n     a / a; //~ ERROR cannot divide `A` by `A`\n \n-    a % a; //~ ERROR cannot mod `A` by `A`\n+    a % a; //~ ERROR cannot calculate the remainder of `A` divided by `A`\n \n     a & a; //~ ERROR no implementation for `A & A`\n "}, {"sha": "cca1da3b6ac49ee2a0b1316c0eb0d8a004af73de", "filename": "tests/ui/binop/issue-28837.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/tests%2Fui%2Fbinop%2Fissue-28837.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d2ab6774243451c8743bad2c9dbdf2e61d10f89/tests%2Fui%2Fbinop%2Fissue-28837.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbinop%2Fissue-28837.stderr?ref=0d2ab6774243451c8743bad2c9dbdf2e61d10f89", "patch": "@@ -62,7 +62,7 @@ LL | struct A;\n note: the trait `Div` must be implemented\n   --> $SRC_DIR/core/src/ops/arith.rs:LL:COL\n \n-error[E0369]: cannot mod `A` by `A`\n+error[E0369]: cannot calculate the remainder of `A` divided by `A`\n   --> $DIR/issue-28837.rs:14:7\n    |\n LL |     a % a;"}]}