{"sha": "c153bd62377f3c563b9f6e9d6ba7742523c45209", "node_id": "C_kwDOAAsO6NoAKGMxNTNiZDYyMzc3ZjNjNTYzYjlmNmU5ZDZiYTc3NDI1MjNjNDUyMDk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-27T12:58:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-27T12:58:41Z"}, "message": "Auto merge of #9539 - Jarcho:ice_9445, r=flip1995\n\nDon't lint `*_interior_mutable_const` on unions due to potential ICE.\n\nfixes #9445\ncc rust-lang/rust#101113\n\nThis started ICE'ing sometime last month due to stricter UB checks. I'm not sure how we could check the value of a union as MIRI doesn't seem to store which field is currently active.\n\nchangelog: Don't ICE on const unions containing a `!Freeze` type.", "tree": {"sha": "ad026858bbfa1d4cec15a6309a143b1b4c125576", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad026858bbfa1d4cec15a6309a143b1b4c125576"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c153bd62377f3c563b9f6e9d6ba7742523c45209", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c153bd62377f3c563b9f6e9d6ba7742523c45209", "html_url": "https://github.com/rust-lang/rust/commit/c153bd62377f3c563b9f6e9d6ba7742523c45209", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c153bd62377f3c563b9f6e9d6ba7742523c45209/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78dc616a7ae9815ea6bacccbb3aa40d27ed5eb6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/78dc616a7ae9815ea6bacccbb3aa40d27ed5eb6c", "html_url": "https://github.com/rust-lang/rust/commit/78dc616a7ae9815ea6bacccbb3aa40d27ed5eb6c"}, {"sha": "b180d954d600a8c9b98ee31d0298ce1b13b6291f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b180d954d600a8c9b98ee31d0298ce1b13b6291f", "html_url": "https://github.com/rust-lang/rust/commit/b180d954d600a8c9b98ee31d0298ce1b13b6291f"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "ea76ce2c57357c7183e70cdfb97042674c5e0e1b", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c153bd62377f3c563b9f6e9d6ba7742523c45209/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c153bd62377f3c563b9f6e9d6ba7742523c45209/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=c153bd62377f3c563b9f6e9d6ba7742523c45209", "patch": "@@ -149,6 +149,9 @@ fn is_value_unfrozen_raw<'tcx>(\n             // the fact that we have to dig into every structs to search enums\n             // leads us to the point checking `UnsafeCell` directly is the only option.\n             ty::Adt(ty_def, ..) if ty_def.is_unsafe_cell() => true,\n+            // As of 2022-09-08 miri doesn't track which union field is active so there's no safe way to check the\n+            // contained value.\n+            ty::Adt(def, ..) if def.is_union() => false,\n             ty::Array(..) | ty::Adt(..) | ty::Tuple(..) => {\n                 let val = cx.tcx.destructure_mir_constant(cx.param_env, val);\n                 val.fields.iter().any(|field| inner(cx, *field))"}, {"sha": "c67b22f6f8c47b01cdd713dd15bf2e805e6fcd9a", "filename": "tests/ui/crashes/ice-9445.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c153bd62377f3c563b9f6e9d6ba7742523c45209/tests%2Fui%2Fcrashes%2Fice-9445.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c153bd62377f3c563b9f6e9d6ba7742523c45209/tests%2Fui%2Fcrashes%2Fice-9445.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-9445.rs?ref=c153bd62377f3c563b9f6e9d6ba7742523c45209", "patch": "@@ -0,0 +1,3 @@\n+const UNINIT: core::mem::MaybeUninit<core::cell::Cell<&'static ()>> = core::mem::MaybeUninit::uninit();\n+\n+fn main() {}"}]}