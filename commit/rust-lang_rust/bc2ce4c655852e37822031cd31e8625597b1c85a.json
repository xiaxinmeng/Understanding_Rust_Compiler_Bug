{"sha": "bc2ce4c655852e37822031cd31e8625597b1c85a", "node_id": "C_kwDOAAsO6NoAKGJjMmNlNGM2NTU4NTJlMzc4MjIwMzFjZDMxZTg2MjU1OTdiMWM4NWE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-02-27T09:17:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-27T09:17:46Z"}, "message": "Merge #11570\n\n11570: minor: Remove misleading comments r=lnicola a=ChayimFriedman2\n\nThey're not true anymore after #11375.\n\nCo-authored-by: Chayim Refael Friedman <chayimfr@gmail.com>", "tree": {"sha": "cdadd4294438cff78c405c4b743104c844dc39fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdadd4294438cff78c405c4b743104c844dc39fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc2ce4c655852e37822031cd31e8625597b1c85a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiG0G6CRBK7hj4Ov3rIwAAM04IADs04fxbFFFp3ZVAgYd4p1Qq\nF+iG/+xPhCrihb7ausbHLqJX82Y2cv70fyHmA8dxheEpvQzCiw6H/CAjZfi6WBPs\nzerXY0H/5GZphatI2bCgDExfUyrD0D4eNry6S1YJcNqDA6Ccy9Vip6Umh6faDGk9\n6UjU49vgM3N6thzL9KhEBisP43EX86cGdYoINZ5h0M2kl4njgOZHXSUEQkUJtStY\nr0GGKewguDK8XMkzdbZbtrjZywn67xDBQElA3vNUuQ8Vufd/c9dvgqleiW9N21f2\npEZUHQVHHX/e0utv+TQU5V8AMJbzZIW8m0giDCG6FI1x6yG9UCj70Voe0h4SBos=\n=dK8o\n-----END PGP SIGNATURE-----\n", "payload": "tree cdadd4294438cff78c405c4b743104c844dc39fe\nparent b86baa709282a07e6678744a31b0d18e51a60504\nparent 744f0ea2e74fd3df6b83a07e6eb2bc2994af4a23\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1645953466 +0000\ncommitter GitHub <noreply@github.com> 1645953466 +0000\n\nMerge #11570\n\n11570: minor: Remove misleading comments r=lnicola a=ChayimFriedman2\n\nThey're not true anymore after #11375.\n\nCo-authored-by: Chayim Refael Friedman <chayimfr@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc2ce4c655852e37822031cd31e8625597b1c85a", "html_url": "https://github.com/rust-lang/rust/commit/bc2ce4c655852e37822031cd31e8625597b1c85a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc2ce4c655852e37822031cd31e8625597b1c85a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b86baa709282a07e6678744a31b0d18e51a60504", "url": "https://api.github.com/repos/rust-lang/rust/commits/b86baa709282a07e6678744a31b0d18e51a60504", "html_url": "https://github.com/rust-lang/rust/commit/b86baa709282a07e6678744a31b0d18e51a60504"}, {"sha": "744f0ea2e74fd3df6b83a07e6eb2bc2994af4a23", "url": "https://api.github.com/repos/rust-lang/rust/commits/744f0ea2e74fd3df6b83a07e6eb2bc2994af4a23", "html_url": "https://github.com/rust-lang/rust/commit/744f0ea2e74fd3df6b83a07e6eb2bc2994af4a23"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "ad54b72b4b55a075cd18f59fa92856ae36f71f1b", "filename": "crates/hir_ty/src/infer/expr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc2ce4c655852e37822031cd31e8625597b1c85a/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc2ce4c655852e37822031cd31e8625597b1c85a/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=bc2ce4c655852e37822031cd31e8625597b1c85a", "patch": "@@ -84,7 +84,6 @@ impl<'a> InferenceContext<'a> {\n         let ty = match &body[tgt_expr] {\n             Expr::Missing => self.err_ty(),\n             &Expr::If { condition, then_branch, else_branch } => {\n-                // if let is desugared to match, so this is always simple if\n                 self.infer_expr(\n                     condition,\n                     &Expectation::has_type(TyKind::Scalar(Scalar::Bool).intern(Interner)),\n@@ -184,7 +183,6 @@ impl<'a> InferenceContext<'a> {\n                     coerce: CoerceMany::new(self.err_ty()),\n                     label: label.map(|label| self.body[label].name.clone()),\n                 });\n-                // while let is desugared to a match loop, so this is always simple while\n                 self.infer_expr(\n                     *condition,\n                     &Expectation::has_type(TyKind::Scalar(Scalar::Bool).intern(Interner)),"}]}