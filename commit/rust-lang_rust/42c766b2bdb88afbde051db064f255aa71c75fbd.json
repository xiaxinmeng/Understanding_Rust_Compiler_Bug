{"sha": "42c766b2bdb88afbde051db064f255aa71c75fbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyYzc2NmIyYmRiODhhZmJkZTA1MWRiMDY0ZjI1NWFhNzFjNzVmYmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-18T11:16:40Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-18T11:16:40Z"}, "message": "Reduce visibility", "tree": {"sha": "a9ab833a3b7cbe8918447f9bcd1d3d4320ecc044", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9ab833a3b7cbe8918447f9bcd1d3d4320ecc044"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42c766b2bdb88afbde051db064f255aa71c75fbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42c766b2bdb88afbde051db064f255aa71c75fbd", "html_url": "https://github.com/rust-lang/rust/commit/42c766b2bdb88afbde051db064f255aa71c75fbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42c766b2bdb88afbde051db064f255aa71c75fbd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6740060f60fa016ac1c3d420c9ac919d31f6997", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6740060f60fa016ac1c3d420c9ac919d31f6997", "html_url": "https://github.com/rust-lang/rust/commit/b6740060f60fa016ac1c3d420c9ac919d31f6997"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "e08cc30e2e352dd0ad851c6f5e91ee628a8d4488", "filename": "crates/ra_lsp_server/src/cargo_target_spec.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/42c766b2bdb88afbde051db064f255aa71c75fbd/crates%2Fra_lsp_server%2Fsrc%2Fcargo_target_spec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42c766b2bdb88afbde051db064f255aa71c75fbd/crates%2Fra_lsp_server%2Fsrc%2Fcargo_target_spec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fcargo_target_spec.rs?ref=42c766b2bdb88afbde051db064f255aa71c75fbd", "patch": "@@ -54,14 +54,17 @@ pub(crate) fn runnable_args(\n     Ok(res)\n }\n \n-pub struct CargoTargetSpec {\n-    pub package: String,\n-    pub target: String,\n-    pub target_kind: TargetKind,\n+pub(crate) struct CargoTargetSpec {\n+    pub(crate) package: String,\n+    pub(crate) target: String,\n+    pub(crate) target_kind: TargetKind,\n }\n \n impl CargoTargetSpec {\n-    pub fn for_file(world: &WorldSnapshot, file_id: FileId) -> Result<Option<CargoTargetSpec>> {\n+    pub(crate) fn for_file(\n+        world: &WorldSnapshot,\n+        file_id: FileId,\n+    ) -> Result<Option<CargoTargetSpec>> {\n         let &crate_id = match world.analysis().crate_for(file_id)?.first() {\n             Some(crate_id) => crate_id,\n             None => return Ok(None),\n@@ -82,7 +85,7 @@ impl CargoTargetSpec {\n         Ok(res)\n     }\n \n-    pub fn push_to(self, buf: &mut Vec<String>) {\n+    pub(crate) fn push_to(self, buf: &mut Vec<String>) {\n         buf.push(\"--package\".to_string());\n         buf.push(self.package);\n         match self.target_kind {"}]}