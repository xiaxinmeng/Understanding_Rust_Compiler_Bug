{"sha": "7d7a50daf7114fc8af62d74cf3162132dd826eaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkN2E1MGRhZjcxMTRmYzhhZjYyZDc0Y2YzMTYyMTMyZGQ4MjZlYWE=", "commit": {"author": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-10T11:20:24Z"}, "committer": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-10T11:20:24Z"}, "message": "Add clone generation tests", "tree": {"sha": "e199eca67119cd179d24d217c9700357b865f7ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e199eca67119cd179d24d217c9700357b865f7ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d7a50daf7114fc8af62d74cf3162132dd826eaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d7a50daf7114fc8af62d74cf3162132dd826eaa", "html_url": "https://github.com/rust-lang/rust/commit/7d7a50daf7114fc8af62d74cf3162132dd826eaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d7a50daf7114fc8af62d74cf3162132dd826eaa/comments", "author": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b5139e8a5e3ccc0bc960fa2322f61b0e905f235", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b5139e8a5e3ccc0bc960fa2322f61b0e905f235", "html_url": "https://github.com/rust-lang/rust/commit/4b5139e8a5e3ccc0bc960fa2322f61b0e905f235"}], "stats": {"total": 111, "additions": 111, "deletions": 0}, "files": [{"sha": "4281e334959734c99be193b7b4733c80822fc2b2", "filename": "crates/ide_assists/src/handlers/replace_derive_with_manual_impl.rs", "status": "modified", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/rust-lang/rust/blob/7d7a50daf7114fc8af62d74cf3162132dd826eaa/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d7a50daf7114fc8af62d74cf3162132dd826eaa/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs?ref=7d7a50daf7114fc8af62d74cf3162132dd826eaa", "patch": "@@ -443,6 +443,117 @@ impl core::hash::Hash for Foo {\n         core::mem::discriminant(self).hash(state);\n     }\n }\n+\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn add_custom_impl_clone_record_struct() {\n+        check_assist(\n+            replace_derive_with_manual_impl,\n+            r#\"\n+//- minicore: clone\n+#[derive(Clo$0ne)]\n+struct Foo {\n+    bin: usize,\n+    bar: usize,\n+}\n+\"#,\n+            r#\"\n+struct Foo {\n+    bin: usize,\n+    bar: usize,\n+}\n+\n+impl Clone for Foo {\n+    $0fn clone(&self) -> Self {\n+        Self {\n+            bin: self.bin.clone(),\n+            bar: self.bar.clone(),\n+        }\n+    }\n+}\n+\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn add_custom_impl_clone_tuple_struct() {\n+        check_assist(\n+            replace_derive_with_manual_impl,\n+            r#\"\n+//- minicore: clone\n+#[derive(Clo$0ne)]\n+struct Foo(usize, usize);\n+\"#,\n+            r#\"\n+struct Foo(usize, usize);\n+\n+impl Clone for Foo {\n+    $0fn clone(&self) -> Self {\n+        Self(self.0.clone(), self.1.clone())\n+    }\n+}\n+\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn add_custom_impl_clone_enum() {\n+        check_assist(\n+            replace_derive_with_manual_impl,\n+            r#\"\n+//- minicore: clone\n+#[derive(Clo$0ne)]\n+enum Foo {\n+    Bar,\n+    Baz,\n+}\n+\"#,\n+            r#\"\n+enum Foo {\n+    Bar,\n+    Baz,\n+}\n+\n+impl Clone for Foo {\n+    $0fn clone(&self) -> Self {\n+        match self {\n+            Self::Bar => Self::Bar,\n+            Self::Baz => Self::Baz,\n+        }\n+    }\n+}\n+\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn add_custom_impl_clone_tuple_enum() {\n+        check_assist(\n+            replace_derive_with_manual_impl,\n+            r#\"\n+//- minicore: clone\n+#[derive(Clo$0ne)]\n+enum Foo {\n+    Bar,\n+    Baz,\n+}\n+\"#,\n+            r#\"\n+enum Foo {\n+    Bar(String),\n+    Baz,\n+}\n+\n+impl Clone for Foo {\n+    $0fn clone(&self) -> Self {\n+        match self {\n+            Self::Bar(arg1) => Self::Bar(arg1.clone()),\n+            Self::Baz => Self::Baz,\n+        }\n+    }\n+}\n \"#,\n         )\n     }"}]}