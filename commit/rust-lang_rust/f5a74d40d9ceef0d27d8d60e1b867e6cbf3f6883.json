{"sha": "f5a74d40d9ceef0d27d8d60e1b867e6cbf3f6883", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1YTc0ZDQwZDljZWVmMGQyN2Q4ZDYwZTFiODY3ZTZjYmYzZjY4ODM=", "commit": {"author": {"name": "Remy Rakic", "email": "remy.rakic@gmail.com", "date": "2019-01-25T18:35:35Z"}, "committer": {"name": "Re\u0301my Rakic", "email": "remy.rakic@gmail.com", "date": "2019-01-27T09:52:43Z"}, "message": "Test new placeholder error messages in previously untested combinations", "tree": {"sha": "3a06cd23ba3f0d34682df8b00dbcda400b21ae26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a06cd23ba3f0d34682df8b00dbcda400b21ae26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5a74d40d9ceef0d27d8d60e1b867e6cbf3f6883", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5a74d40d9ceef0d27d8d60e1b867e6cbf3f6883", "html_url": "https://github.com/rust-lang/rust/commit/f5a74d40d9ceef0d27d8d60e1b867e6cbf3f6883", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5a74d40d9ceef0d27d8d60e1b867e6cbf3f6883/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a79f135be616588e83d18b4694d97470e986497a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a79f135be616588e83d18b4694d97470e986497a", "html_url": "https://github.com/rust-lang/rust/commit/a79f135be616588e83d18b4694d97470e986497a"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "d5b506f3c2c9ce57dd5b1491a45836a51c91afd1", "filename": "src/test/ui/issues/issue-57362.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f5a74d40d9ceef0d27d8d60e1b867e6cbf3f6883/src%2Ftest%2Fui%2Fissues%2Fissue-57362.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5a74d40d9ceef0d27d8d60e1b867e6cbf3f6883/src%2Ftest%2Fui%2Fissues%2Fissue-57362.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57362.rs?ref=f5a74d40d9ceef0d27d8d60e1b867e6cbf3f6883", "patch": "@@ -0,0 +1,41 @@\n+// Test for issue #57362, ensuring that the self ty is shown in cases of higher-ranked lifetimes\n+// conflicts: the `expected` and `found` trait refs would otherwise be printed the same, leading\n+// to confusing notes such as:\n+//  = note: expected type `Trait`\n+//             found type `Trait`\n+\n+// from issue #57362\n+trait Trait {\n+    fn f(self);\n+}\n+\n+impl<T> Trait for fn(&T) {\n+    fn f(self) {\n+        println!(\"f\");\n+    }\n+}\n+\n+fn f() {\n+    let a: fn(_) = |_: &u8| {};\n+    a.f(); //~ ERROR not general enough\n+}\n+\n+// extracted from a similar issue: #57642\n+trait X {\n+    type G;\n+    fn make_g() -> Self::G;\n+}\n+\n+impl<'a> X for fn(&'a ()) {\n+    type G = &'a ();\n+\n+    fn make_g() -> Self::G {\n+        &()\n+    }\n+}\n+\n+fn g() {\n+    let x = <fn (&())>::make_g(); //~ ERROR not general enough\n+}\n+\n+fn main() {}\n\\ No newline at end of file"}, {"sha": "d7886e5af2710d366fcf90111ca5984ff39ad215", "filename": "src/test/ui/issues/issue-57362.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f5a74d40d9ceef0d27d8d60e1b867e6cbf3f6883/src%2Ftest%2Fui%2Fissues%2Fissue-57362.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f5a74d40d9ceef0d27d8d60e1b867e6cbf3f6883/src%2Ftest%2Fui%2Fissues%2Fissue-57362.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57362.stderr?ref=f5a74d40d9ceef0d27d8d60e1b867e6cbf3f6883", "patch": "@@ -0,0 +1,20 @@\n+error: implementation of `Trait` is not general enough\n+  --> $DIR/issue-57362.rs:20:7\n+   |\n+LL |     a.f(); //~ ERROR not general enough\n+   |       ^\n+   |\n+   = note: `Trait` would have to be implemented for the type `fn(&u8)`\n+   = note: but `Trait` is actually implemented for the type `for<'r> fn(&'r u8)`\n+\n+error: implementation of `X` is not general enough\n+  --> $DIR/issue-57362.rs:38:13\n+   |\n+LL |     let x = <fn (&())>::make_g(); //~ ERROR not general enough\n+   |             ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `X` would have to be implemented for the type `for<'r> fn(&'r ())`\n+   = note: but `X` is actually implemented for the type `fn(&'0 ())`, for the specific lifetime `'0`\n+\n+error: aborting due to 2 previous errors\n+"}]}