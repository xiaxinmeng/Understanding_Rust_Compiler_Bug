{"sha": "a7533b8a6b7d2aa01e0ea8859c6dc7a61c6e90c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3NTMzYjhhNmI3ZDJhYTAxZTBlYTg4NTljNmRjN2E2MWM2ZTkwYzM=", "commit": {"author": {"name": "Josh Haberman", "email": "jhaberman@gmail.com", "date": "2014-11-09T03:34:19Z"}, "committer": {"name": "Josh Haberman", "email": "jhaberman@gmail.com", "date": "2014-11-09T03:34:19Z"}, "message": "Make Int inherit from Ord.\n\nPreviously Int inherited from PartialOrd (via Primitive)\nbut not Ord.  But integers have a total order, so\ninheriting from Ord is appropriate. Fixes #18776.", "tree": {"sha": "ef55e292148620607d855647be355847078d0ad5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef55e292148620607d855647be355847078d0ad5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7533b8a6b7d2aa01e0ea8859c6dc7a61c6e90c3", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7533b8a6b7d2aa01e0ea8859c6dc7a61c6e90c3", "html_url": "https://github.com/rust-lang/rust/commit/a7533b8a6b7d2aa01e0ea8859c6dc7a61c6e90c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7533b8a6b7d2aa01e0ea8859c6dc7a61c6e90c3/comments", "author": {"login": "haberman", "id": 1270, "node_id": "MDQ6VXNlcjEyNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haberman", "html_url": "https://github.com/haberman", "followers_url": "https://api.github.com/users/haberman/followers", "following_url": "https://api.github.com/users/haberman/following{/other_user}", "gists_url": "https://api.github.com/users/haberman/gists{/gist_id}", "starred_url": "https://api.github.com/users/haberman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haberman/subscriptions", "organizations_url": "https://api.github.com/users/haberman/orgs", "repos_url": "https://api.github.com/users/haberman/repos", "events_url": "https://api.github.com/users/haberman/events{/privacy}", "received_events_url": "https://api.github.com/users/haberman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "haberman", "id": 1270, "node_id": "MDQ6VXNlcjEyNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haberman", "html_url": "https://github.com/haberman", "followers_url": "https://api.github.com/users/haberman/followers", "following_url": "https://api.github.com/users/haberman/following{/other_user}", "gists_url": "https://api.github.com/users/haberman/gists{/gist_id}", "starred_url": "https://api.github.com/users/haberman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haberman/subscriptions", "organizations_url": "https://api.github.com/users/haberman/orgs", "repos_url": "https://api.github.com/users/haberman/repos", "events_url": "https://api.github.com/users/haberman/events{/privacy}", "received_events_url": "https://api.github.com/users/haberman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34af03681f2be9aa3ad0fdb567c27ff9f096db39", "url": "https://api.github.com/repos/rust-lang/rust/commits/34af03681f2be9aa3ad0fdb567c27ff9f096db39", "html_url": "https://github.com/rust-lang/rust/commit/34af03681f2be9aa3ad0fdb567c27ff9f096db39"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "d14bcb36944494fc56ec304a4a1fe8fd84898219", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a7533b8a6b7d2aa01e0ea8859c6dc7a61c6e90c3/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7533b8a6b7d2aa01e0ea8859c6dc7a61c6e90c3/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=a7533b8a6b7d2aa01e0ea8859c6dc7a61c6e90c3", "patch": "@@ -19,7 +19,7 @@ use {int, i8, i16, i32, i64};\n use {uint, u8, u16, u32, u64};\n use {f32, f64};\n use clone::Clone;\n-use cmp::{PartialEq, PartialOrd};\n+use cmp::{Ord, PartialEq, PartialOrd};\n use kinds::Copy;\n use mem::size_of;\n use ops::{Add, Sub, Mul, Div, Rem, Neg};\n@@ -386,6 +386,7 @@ trait_impl!(Primitive for uint u8 u16 u32 u64 int i8 i16 i32 i64 f32 f64)\n /// A primitive signed or unsigned integer equipped with various bitwise\n /// operators, bit counting methods, and endian conversion functions.\n pub trait Int: Primitive\n+             + Ord\n              + CheckedAdd\n              + CheckedSub\n              + CheckedMul"}]}