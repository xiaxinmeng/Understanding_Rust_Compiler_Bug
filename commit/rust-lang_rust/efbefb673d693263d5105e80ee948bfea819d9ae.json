{"sha": "efbefb673d693263d5105e80ee948bfea819d9ae", "node_id": "C_kwDOAAsO6NoAKGVmYmVmYjY3M2Q2OTMyNjNkNTEwNWU4MGVlOTQ4YmZlYTgxOWQ5YWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-18T09:26:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-18T09:26:40Z"}, "message": "Rollup merge of #92030 - rukai:stdlib2021, r=m-ou-se\n\nUpdate stdlib to the 2021 edition\n\nprogress towards https://github.com/rust-lang/rust/issues/88638\n\nI couldnt find a way to run the 2018 style panic tests against 2018 so I just deleted them, maybe theres a way to do it that I missed though?", "tree": {"sha": "08e2330fe6bc05c9fd66db8cfca1ae540d9a7827", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08e2330fe6bc05c9fd66db8cfca1ae540d9a7827"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efbefb673d693263d5105e80ee948bfea819d9ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhvalRCRBK7hj4Ov3rIwAA0MAIACA/QtBJ0DnAz2xQPh31fgSw\nhyMg+07egwEqjSEOJXIVZNvmaSmR+E9QMcqEoEvLhqtKHeb4kbyZEjSY03P5L9GO\n4FH8IUCYrnD0q6uRzZfLPxU2Q4I/+fE43Geu6K10OYra8imsu5fcWOpZVdW14Con\nDbMCpvJopkkksLtuyiBMkxBqk0xsnKJTqYJT+LWFji6NWsaaqYE/YColbl2J+rJk\nFmKLNUolGpB2IKpGT2tsDTAIRuCtbpxMzAJWYb2TeYJ0xmb2PhhilakA/bl//6fg\n4CsnPCCkTmgRoeBrttV9RhhWE+wJFS2NO8XasjFzuSacCHOcbhwfVdMupTLZbio=\n=ejaG\n-----END PGP SIGNATURE-----\n", "payload": "tree 08e2330fe6bc05c9fd66db8cfca1ae540d9a7827\nparent e69acdaae479848753a816f6e9b7cab1aa650685\nparent b656384d8398ec03ce5c40056252f818d6c44761\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639819600 +0100\ncommitter GitHub <noreply@github.com> 1639819600 +0100\n\nRollup merge of #92030 - rukai:stdlib2021, r=m-ou-se\n\nUpdate stdlib to the 2021 edition\n\nprogress towards https://github.com/rust-lang/rust/issues/88638\n\nI couldnt find a way to run the 2018 style panic tests against 2018 so I just deleted them, maybe theres a way to do it that I missed though?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efbefb673d693263d5105e80ee948bfea819d9ae", "html_url": "https://github.com/rust-lang/rust/commit/efbefb673d693263d5105e80ee948bfea819d9ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efbefb673d693263d5105e80ee948bfea819d9ae/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e69acdaae479848753a816f6e9b7cab1aa650685", "url": "https://api.github.com/repos/rust-lang/rust/commits/e69acdaae479848753a816f6e9b7cab1aa650685", "html_url": "https://github.com/rust-lang/rust/commit/e69acdaae479848753a816f6e9b7cab1aa650685"}, {"sha": "b656384d8398ec03ce5c40056252f818d6c44761", "url": "https://api.github.com/repos/rust-lang/rust/commits/b656384d8398ec03ce5c40056252f818d6c44761", "html_url": "https://github.com/rust-lang/rust/commit/b656384d8398ec03ce5c40056252f818d6c44761"}], "stats": {"total": 33, "additions": 17, "deletions": 16}, "files": [{"sha": "232ccdf39d456eb7a0be916fb7c976a7676b0e70", "filename": "library/std/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/efbefb673d693263d5105e80ee948bfea819d9ae/library%2Fstd%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/efbefb673d693263d5105e80ee948bfea819d9ae/library%2Fstd%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2FCargo.toml?ref=efbefb673d693263d5105e80ee948bfea819d9ae", "patch": "@@ -4,7 +4,7 @@ version = \"0.0.0\"\n license = \"MIT OR Apache-2.0\"\n repository = \"https://github.com/rust-lang/rust.git\"\n description = \"The Rust Standard Library\"\n-edition = \"2018\"\n+edition = \"2021\"\n \n [lib]\n crate-type = [\"dylib\", \"rlib\"]"}, {"sha": "749d51d4981c3027eeb07fdf01d16d6bef6baf4d", "filename": "library/std/src/fs/tests.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/efbefb673d693263d5105e80ee948bfea819d9ae/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efbefb673d693263d5105e80ee948bfea819d9ae/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs?ref=efbefb673d693263d5105e80ee948bfea819d9ae", "patch": "@@ -38,10 +38,9 @@ macro_rules! error {\n     ($e:expr, $s:expr) => {\n         match $e {\n             Ok(_) => panic!(\"Unexpected success. Should've been: {:?}\", $s),\n-            Err(ref err) => assert!(\n-                err.raw_os_error() == Some($s),\n-                format!(\"`{}` did not have a code of `{}`\", err, $s)\n-            ),\n+            Err(ref err) => {\n+                assert!(err.raw_os_error() == Some($s), \"`{}` did not have a code of `{}`\", err, $s)\n+            }\n         }\n     };\n }\n@@ -58,7 +57,7 @@ macro_rules! error_contains {\n         match $e {\n             Ok(_) => panic!(\"Unexpected success. Should've been: {:?}\", $s),\n             Err(ref err) => {\n-                assert!(err.to_string().contains($s), format!(\"`{}` did not contain `{}`\", err, $s))\n+                assert!(err.to_string().contains($s), \"`{}` did not contain `{}`\", err, $s)\n             }\n         }\n     };"}, {"sha": "e012594dd4648e45a278bb3dda231da1a939aac4", "filename": "library/std/src/process.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/efbefb673d693263d5105e80ee948bfea819d9ae/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efbefb673d693263d5105e80ee948bfea819d9ae/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=efbefb673d693263d5105e80ee948bfea819d9ae", "patch": "@@ -1600,7 +1600,6 @@ impl ExitStatusError {\n     /// ```\n     /// #![feature(exit_status_error)]\n     /// # if cfg!(unix) {\n-    /// use std::convert::TryFrom;\n     /// use std::num::NonZeroI32;\n     /// use std::process::Command;\n     ///"}, {"sha": "4f2c81731a335fd3c163bc849adb1dc1e2e21e80", "filename": "library/std/src/thread/tests.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/efbefb673d693263d5105e80ee948bfea819d9ae/library%2Fstd%2Fsrc%2Fthread%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efbefb673d693263d5105e80ee948bfea819d9ae/library%2Fstd%2Fsrc%2Fthread%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Ftests.rs?ref=efbefb673d693263d5105e80ee948bfea819d9ae", "patch": "@@ -1,6 +1,7 @@\n use super::Builder;\n use crate::any::Any;\n use crate::mem;\n+use crate::panic::panic_any;\n use crate::result;\n use crate::sync::{\n     mpsc::{channel, Sender},\n@@ -183,7 +184,7 @@ fn test_simple_newsched_spawn() {\n }\n \n #[test]\n-fn test_try_panic_message_static_str() {\n+fn test_try_panic_message_string_literal() {\n     match thread::spawn(move || {\n         panic!(\"static string\");\n     })\n@@ -199,9 +200,9 @@ fn test_try_panic_message_static_str() {\n }\n \n #[test]\n-fn test_try_panic_message_owned_str() {\n+fn test_try_panic_any_message_owned_str() {\n     match thread::spawn(move || {\n-        panic!(\"owned string\".to_string());\n+        panic_any(\"owned string\".to_string());\n     })\n     .join()\n     {\n@@ -215,9 +216,9 @@ fn test_try_panic_message_owned_str() {\n }\n \n #[test]\n-fn test_try_panic_message_any() {\n+fn test_try_panic_any_message_any() {\n     match thread::spawn(move || {\n-        panic!(box 413u16 as Box<dyn Any + Send>);\n+        panic_any(box 413u16 as Box<dyn Any + Send>);\n     })\n     .join()\n     {\n@@ -233,10 +234,10 @@ fn test_try_panic_message_any() {\n }\n \n #[test]\n-fn test_try_panic_message_unit_struct() {\n+fn test_try_panic_any_message_unit_struct() {\n     struct Juju;\n \n-    match thread::spawn(move || panic!(Juju)).join() {\n+    match thread::spawn(move || panic_any(Juju)).join() {\n         Err(ref e) if e.is::<Juju>() => {}\n         Err(_) | Ok(()) => panic!(),\n     }"}, {"sha": "f610dbd806aea658bdd6d429ce612702f90c2b2c", "filename": "src/tools/tidy/src/edition.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/efbefb673d693263d5105e80ee948bfea819d9ae/src%2Ftools%2Ftidy%2Fsrc%2Fedition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efbefb673d693263d5105e80ee948bfea819d9ae/src%2Ftools%2Ftidy%2Fsrc%2Fedition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fedition.rs?ref=efbefb673d693263d5105e80ee948bfea819d9ae", "patch": "@@ -23,8 +23,10 @@ pub fn check(path: &Path, bad: &mut bool) {\n                 return;\n             }\n \n-            // Library crates are not yet ready to migrate to 2021.\n-            if path.components().any(|c| c.as_os_str() == \"library\") {\n+            // Not all library crates are ready to migrate to 2021.\n+            if file.components().any(|c| c.as_os_str() == \"library\")\n+                && file.components().all(|c| c.as_os_str() != \"std\")\n+            {\n                 let has = contents.lines().any(is_edition_2018);\n                 if !has {\n                     tidy_error!("}]}