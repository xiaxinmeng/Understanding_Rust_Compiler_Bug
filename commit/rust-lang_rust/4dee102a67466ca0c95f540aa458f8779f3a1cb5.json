{"sha": "4dee102a67466ca0c95f540aa458f8779f3a1cb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkZWUxMDJhNjc0NjZjYTBjOTVmNTQwYWE0NThmODc3OWYzYTFjYjU=", "commit": {"author": {"name": "newpavlov", "email": "newpavlov@gmail.com", "date": "2019-08-20T16:16:01Z"}, "committer": {"name": "newpavlov", "email": "newpavlov@gmail.com", "date": "2019-08-20T16:16:01Z"}, "message": "use new get_args", "tree": {"sha": "91294cf49e9168903f5e166e151489495ccc957d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91294cf49e9168903f5e166e151489495ccc957d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dee102a67466ca0c95f540aa458f8779f3a1cb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dee102a67466ca0c95f540aa458f8779f3a1cb5", "html_url": "https://github.com/rust-lang/rust/commit/4dee102a67466ca0c95f540aa458f8779f3a1cb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dee102a67466ca0c95f540aa458f8779f3a1cb5/comments", "author": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7daf890d752c79b554528716fedd5f0b9abc8914", "url": "https://api.github.com/repos/rust-lang/rust/commits/7daf890d752c79b554528716fedd5f0b9abc8914", "html_url": "https://github.com/rust-lang/rust/commit/7daf890d752c79b554528716fedd5f0b9abc8914"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "2d0ddea385afd0d58be354feecb6062daf0a3ed2", "filename": "src/libstd/sys/wasi/args.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4dee102a67466ca0c95f540aa458f8779f3a1cb5/src%2Flibstd%2Fsys%2Fwasi%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dee102a67466ca0c95f540aa458f8779f3a1cb5/src%2Flibstd%2Fsys%2Fwasi%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Fargs.rs?ref=4dee102a67466ca0c95f540aa458f8779f3a1cb5", "patch": "@@ -12,14 +12,16 @@ pub unsafe fn cleanup() {\n }\n \n pub struct Args {\n-    iter: vec::IntoIter<Vec<u8>>,\n+    iter: vec::IntoIter<OsString>,\n     _dont_send_or_sync_me: PhantomData<*mut ()>,\n }\n \n /// Returns the command line arguments\n pub fn args() -> Args {\n+    let mut buf = Vec::new();\n+    let _ = wasi::get_args(|arg| buf.push(OsString::from_vec(arg.to_vec())));\n     Args {\n-        iter: wasi::get_args().unwrap_or(Vec::new()).into_iter(),\n+        iter: buf.into_iter(),\n         _dont_send_or_sync_me: PhantomData\n     }\n }\n@@ -33,7 +35,7 @@ impl Args {\n impl Iterator for Args {\n     type Item = OsString;\n     fn next(&mut self) -> Option<OsString> {\n-        self.iter.next().map(OsString::from_vec)\n+        self.iter.next()\n     }\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()"}]}