{"sha": "18df72142ae7694c5661f0feb7d78ffc7b433e6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ZGY3MjE0MmFlNzY5NGM1NjYxZjBmZWI3ZDc4ZmZjN2I0MzNlNmI=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-24T14:31:03Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-25T09:13:15Z"}, "message": "Remove `-Znll-dont-emit-read-for-match`", "tree": {"sha": "9976b330631851cdc667f37ae3f08c90af5ed605", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9976b330631851cdc667f37ae3f08c90af5ed605"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18df72142ae7694c5661f0feb7d78ffc7b433e6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18df72142ae7694c5661f0feb7d78ffc7b433e6b", "html_url": "https://github.com/rust-lang/rust/commit/18df72142ae7694c5661f0feb7d78ffc7b433e6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18df72142ae7694c5661f0feb7d78ffc7b433e6b/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83a820047fc154882c4916fb8b21639f3780d209", "url": "https://api.github.com/repos/rust-lang/rust/commits/83a820047fc154882c4916fb8b21639f3780d209", "html_url": "https://github.com/rust-lang/rust/commit/83a820047fc154882c4916fb8b21639f3780d209"}], "stats": {"total": 23, "additions": 1, "deletions": 22}, "files": [{"sha": "e99e00a366d378ffb719888bb157db7acbb741d5", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/18df72142ae7694c5661f0feb7d78ffc7b433e6b/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18df72142ae7694c5661f0feb7d78ffc7b433e6b/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=18df72142ae7694c5661f0feb7d78ffc7b433e6b", "patch": "@@ -1370,19 +1370,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         self.borrowck_mode().migrate()\n     }\n \n-    /// If `true`, make MIR codegen for `match` emit a temp that holds a\n-    /// borrow of the input to the match expression.\n-    pub fn generate_borrow_of_any_match_input(&self) -> bool {\n-        self.emit_read_for_match()\n-    }\n-\n-    /// If `true`, make MIR codegen for `match` emit FakeRead\n-    /// statements (which simulate the maximal effect of executing the\n-    /// patterns in a match arm).\n-    pub fn emit_read_for_match(&self) -> bool {\n-        !self.sess.opts.debugging_opts.nll_dont_emit_read_for_match\n-    }\n-\n     /// What mode(s) of borrowck should we run? AST? MIR? both?\n     /// (Also considers the `#![feature(nll)]` setting.)\n     pub fn borrowck_mode(&self) -> BorrowckMode {"}, {"sha": "60049a3a9fe4799cb24e77a493c1a72a5794900a", "filename": "src/librustc_mir/build/matches/mod.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/18df72142ae7694c5661f0feb7d78ffc7b433e6b/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18df72142ae7694c5661f0feb7d78ffc7b433e6b/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs?ref=18df72142ae7694c5661f0feb7d78ffc7b433e6b", "patch": "@@ -108,8 +108,6 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         scrutinee: ExprRef<'tcx>,\n         arms: Vec<Arm<'tcx>>,\n     ) -> BlockAnd<()> {\n-        let tcx = self.hir.tcx();\n-\n         // Step 1. Evaluate the scrutinee and add the fake read of it.\n \n         let scrutinee_span = scrutinee.span();\n@@ -183,11 +181,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         // The set of places that we are creating fake borrows of. If there are\n         // no match guards then we don't need any fake borrows, so don't track\n         // them.\n-        let mut fake_borrows = if match_has_guard && tcx.generate_borrow_of_any_match_input() {\n-            Some(FxHashSet::default())\n-        } else {\n-            None\n-        };\n+        let mut fake_borrows = if match_has_guard { Some(FxHashSet::default()) } else { None };\n \n         // These candidates are kept sorted such that the highest priority\n         // candidate comes first in the list. (i.e., same order as in source)"}, {"sha": "38c17bbbde7973d226e8978bffeafd3282f999be", "filename": "src/librustc_session/options.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18df72142ae7694c5661f0feb7d78ffc7b433e6b/src%2Flibrustc_session%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18df72142ae7694c5661f0feb7d78ffc7b433e6b/src%2Flibrustc_session%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Foptions.rs?ref=18df72142ae7694c5661f0feb7d78ffc7b433e6b", "patch": "@@ -872,8 +872,6 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"choose which RELRO level to use\"),\n     nll_facts: bool = (false, parse_bool, [UNTRACKED],\n                        \"dump facts from NLL analysis into side files\"),\n-    nll_dont_emit_read_for_match: bool = (false, parse_bool, [UNTRACKED],\n-        \"in match codegen, do not include FakeRead statements (used by mir-borrowck)\"),\n     dont_buffer_diagnostics: bool = (false, parse_bool, [UNTRACKED],\n         \"emit diagnostics rather than buffering (breaks NLL error downgrading, sorting).\"),\n     polonius: bool = (false, parse_bool, [UNTRACKED],"}]}