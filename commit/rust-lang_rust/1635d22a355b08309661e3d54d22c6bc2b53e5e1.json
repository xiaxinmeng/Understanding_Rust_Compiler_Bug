{"sha": "1635d22a355b08309661e3d54d22c6bc2b53e5e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MzVkMjJhMzU1YjA4MzA5NjYxZTNkNTRkMjJjNmJjMmI1M2U1ZTE=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-04-30T10:12:52Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-05-01T12:01:17Z"}, "message": "Add test", "tree": {"sha": "0514b5087e2566814c9d063a49734b41813c3df0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0514b5087e2566814c9d063a49734b41813c3df0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1635d22a355b08309661e3d54d22c6bc2b53e5e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1635d22a355b08309661e3d54d22c6bc2b53e5e1", "html_url": "https://github.com/rust-lang/rust/commit/1635d22a355b08309661e3d54d22c6bc2b53e5e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1635d22a355b08309661e3d54d22c6bc2b53e5e1/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5f2b16366f027ad60c58266a66eb7fbdcbda9f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5f2b16366f027ad60c58266a66eb7fbdcbda9f9", "html_url": "https://github.com/rust-lang/rust/commit/a5f2b16366f027ad60c58266a66eb7fbdcbda9f9"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "1f796876da2cc8a01e936b7ae2acc9d387078e20", "filename": "crates/ra_hir_ty/src/tests/macros.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/1635d22a355b08309661e3d54d22c6bc2b53e5e1/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1635d22a355b08309661e3d54d22c6bc2b53e5e1/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs?ref=1635d22a355b08309661e3d54d22c6bc2b53e5e1", "patch": "@@ -338,6 +338,46 @@ pub fn baz() -> usize { 31usize }\n     assert_eq!(\"(i32, usize)\", type_at_pos(&db, pos));\n }\n \n+#[test]\n+fn infer_macro_with_dollar_crate_is_correct_in_trait_associate_type() {\n+    let (db, pos) = TestDB::with_position(\n+        r#\"\n+//- /main.rs crate:main deps:foo\n+use foo::Trait;\n+\n+fn test() {\n+    let msg = foo::Message(foo::MessageRef);\n+    let r = msg.deref();\n+    r<|>;\n+}\n+\n+//- /lib.rs crate:foo\n+pub struct MessageRef;\n+pub struct Message(MessageRef);\n+\n+pub trait Trait {\n+    type Target;\n+    fn deref(&self) -> &Self::Target;\n+}\n+\n+#[macro_export]\n+macro_rules! expand {\n+    () => {\n+        impl Trait for Message {\n+            type Target = $crate::MessageRef;\n+            fn deref(&self) ->  &Self::Target {\n+                &self.0\n+            }\n+        }\n+    }\n+}\n+\n+expand!();\n+\"#,\n+    );\n+    assert_eq!(\"&MessageRef\", type_at_pos(&db, pos));\n+}\n+\n #[test]\n fn infer_type_value_non_legacy_macro_use_as() {\n     assert_snapshot!("}]}