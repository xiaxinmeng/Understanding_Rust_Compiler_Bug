{"sha": "601c5a2087b5c8acd8491c190e99715e91d020d8", "node_id": "C_kwDOAAsO6NoAKDYwMWM1YTIwODdiNWM4YWNkODQ5MWMxOTBlOTk3MTVlOTFkMDIwZDg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-11T20:39:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-11T20:39:03Z"}, "message": "Rollup merge of #97210 - Milo123459:clippy-args, r=jyn514\n\nSupport `-A`, `-W`, `-D` and `-F` when running `./x.py clippy`\n\nResolves #97059\n\nThis PR adds support for `-A`, `-W`, `-D` and `-F` when running `./x.py clippy`.", "tree": {"sha": "6b1d5ed9f254b9fa2d047d6997db2d2a9abda822", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b1d5ed9f254b9fa2d047d6997db2d2a9abda822"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/601c5a2087b5c8acd8491c190e99715e91d020d8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJizIpoCRBK7hj4Ov3rIwAAH5gIAAUZxQvS1cNfQnYeW1GOdPSY\n72SDxeUT57fiwIegC5muIIRvAH6lAFsoPk+M+EhpDu/1uDKqbFbl4uW2l9yDRHwI\ntvZ7mHwmibQ1dddmc7RutRth9HoYJBUFuOlJd8el6W7fjmaTWAZ3KcSIHXyEVfgN\nv7Rz7yShGJpY88IOn/IhOt5XKdyMnH5SWB0etupgUWVIbUqrNF0/xKns4Ra/xvQl\nS+hUkqDQm0GfWBrtNWrskw1BcgkqrG8eo6CDeF27QX7qc2k19nKSzYTp98TyCVyv\nPciWfdvWw/VttG3IYBMt2KEMen2uZ+UvnnJAFUULVj7y7Xrhqkyp5EJ9qWpDKs0=\n=3s6r\n-----END PGP SIGNATURE-----\n", "payload": "tree 6b1d5ed9f254b9fa2d047d6997db2d2a9abda822\nparent 38b72154ded23847cd08a796d0c6708b5efac265\nparent e3d84b2809c630c8f3b9f776174dd9d72ba62e54\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1657571943 +0200\ncommitter GitHub <noreply@github.com> 1657571943 +0200\n\nRollup merge of #97210 - Milo123459:clippy-args, r=jyn514\n\nSupport `-A`, `-W`, `-D` and `-F` when running `./x.py clippy`\n\nResolves #97059\n\nThis PR adds support for `-A`, `-W`, `-D` and `-F` when running `./x.py clippy`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/601c5a2087b5c8acd8491c190e99715e91d020d8", "html_url": "https://github.com/rust-lang/rust/commit/601c5a2087b5c8acd8491c190e99715e91d020d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/601c5a2087b5c8acd8491c190e99715e91d020d8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38b72154ded23847cd08a796d0c6708b5efac265", "url": "https://api.github.com/repos/rust-lang/rust/commits/38b72154ded23847cd08a796d0c6708b5efac265", "html_url": "https://github.com/rust-lang/rust/commit/38b72154ded23847cd08a796d0c6708b5efac265"}, {"sha": "e3d84b2809c630c8f3b9f776174dd9d72ba62e54", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3d84b2809c630c8f3b9f776174dd9d72ba62e54", "html_url": "https://github.com/rust-lang/rust/commit/e3d84b2809c630c8f3b9f776174dd9d72ba62e54"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "9196b78c513fe3747761b592c83e47e899e0de82", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/601c5a2087b5c8acd8491c190e99715e91d020d8/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/601c5a2087b5c8acd8491c190e99715e91d020d8/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=601c5a2087b5c8acd8491c190e99715e91d020d8", "patch": "@@ -20,7 +20,15 @@ fn args(builder: &Builder<'_>) -> Vec<String> {\n         arr.iter().copied().map(String::from)\n     }\n \n-    if let Subcommand::Clippy { fix, .. } = builder.config.cmd {\n+    if let Subcommand::Clippy {\n+        fix,\n+        clippy_lint_allow,\n+        clippy_lint_deny,\n+        clippy_lint_warn,\n+        clippy_lint_forbid,\n+        ..\n+    } = &builder.config.cmd\n+    {\n         // disable the most spammy clippy lints\n         let ignored_lints = vec![\n             \"many_single_char_names\", // there are a lot in stdarch\n@@ -32,7 +40,7 @@ fn args(builder: &Builder<'_>) -> Vec<String> {\n             \"wrong_self_convention\",\n         ];\n         let mut args = vec![];\n-        if fix {\n+        if *fix {\n             #[rustfmt::skip]\n             args.extend(strings(&[\n                 \"--fix\", \"-Zunstable-options\",\n@@ -44,6 +52,12 @@ fn args(builder: &Builder<'_>) -> Vec<String> {\n         }\n         args.extend(strings(&[\"--\", \"--cap-lints\", \"warn\"]));\n         args.extend(ignored_lints.iter().map(|lint| format!(\"-Aclippy::{}\", lint)));\n+        let mut clippy_lint_levels: Vec<String> = Vec::new();\n+        clippy_lint_allow.iter().for_each(|v| clippy_lint_levels.push(format!(\"-A{}\", v)));\n+        clippy_lint_deny.iter().for_each(|v| clippy_lint_levels.push(format!(\"-D{}\", v)));\n+        clippy_lint_warn.iter().for_each(|v| clippy_lint_levels.push(format!(\"-W{}\", v)));\n+        clippy_lint_forbid.iter().for_each(|v| clippy_lint_levels.push(format!(\"-F{}\", v)));\n+        args.extend(clippy_lint_levels);\n         args\n     } else {\n         vec![]"}, {"sha": "1822c2936b71ff23d499720c7a79d32d83344c0a", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/601c5a2087b5c8acd8491c190e99715e91d020d8/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/601c5a2087b5c8acd8491c190e99715e91d020d8/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=601c5a2087b5c8acd8491c190e99715e91d020d8", "patch": "@@ -91,6 +91,10 @@ pub enum Subcommand {\n     Clippy {\n         fix: bool,\n         paths: Vec<PathBuf>,\n+        clippy_lint_allow: Vec<String>,\n+        clippy_lint_deny: Vec<String>,\n+        clippy_lint_warn: Vec<String>,\n+        clippy_lint_forbid: Vec<String>,\n     },\n     Fix {\n         paths: Vec<PathBuf>,\n@@ -246,6 +250,10 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n         opts.optopt(\"\", \"rust-profile-use\", \"use PGO profile for rustc build\", \"PROFILE\");\n         opts.optflag(\"\", \"llvm-profile-generate\", \"generate PGO profile with llvm built for rustc\");\n         opts.optopt(\"\", \"llvm-profile-use\", \"use PGO profile for llvm build\", \"PROFILE\");\n+        opts.optmulti(\"A\", \"\", \"allow certain clippy lints\", \"OPT\");\n+        opts.optmulti(\"D\", \"\", \"deny certain clippy lints\", \"OPT\");\n+        opts.optmulti(\"W\", \"\", \"warn about certain clippy lints\", \"OPT\");\n+        opts.optmulti(\"F\", \"\", \"forbid certain clippy lints\", \"OPT\");\n \n         // We can't use getopt to parse the options until we have completed specifying which\n         // options are valid, but under the current implementation, some options are conditional on\n@@ -544,7 +552,14 @@ Arguments:\n                 }\n                 Subcommand::Check { paths }\n             }\n-            Kind::Clippy => Subcommand::Clippy { paths, fix: matches.opt_present(\"fix\") },\n+            Kind::Clippy => Subcommand::Clippy {\n+                paths,\n+                fix: matches.opt_present(\"fix\"),\n+                clippy_lint_allow: matches.opt_strs(\"A\"),\n+                clippy_lint_warn: matches.opt_strs(\"W\"),\n+                clippy_lint_deny: matches.opt_strs(\"D\"),\n+                clippy_lint_forbid: matches.opt_strs(\"F\"),\n+            },\n             Kind::Fix => Subcommand::Fix { paths },\n             Kind::Test => Subcommand::Test {\n                 paths,"}]}