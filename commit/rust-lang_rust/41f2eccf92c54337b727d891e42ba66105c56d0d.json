{"sha": "41f2eccf92c54337b727d891e42ba66105c56d0d", "node_id": "C_kwDOAAsO6NoAKDQxZjJlY2NmOTJjNTQzMzdiNzI3ZDg5MWU0MmJhNjYxMDVjNTZkMGQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-06T08:13:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-06T08:13:26Z"}, "message": "Auto merge of #8588 - pitaj:fix-8348, r=flip1995\n\n`indexing_slicing` should not fire if a valid array index comes from a constant function that is evaluated at compile-time\n\nfix #8348\n\nchangelog: [`indexing_slicing`] fewer false positives in `const` contexts and with `const` indices", "tree": {"sha": "86becba30a8cd851e2dfec3a286ee016ce20cc70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86becba30a8cd851e2dfec3a286ee016ce20cc70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41f2eccf92c54337b727d891e42ba66105c56d0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41f2eccf92c54337b727d891e42ba66105c56d0d", "html_url": "https://github.com/rust-lang/rust/commit/41f2eccf92c54337b727d891e42ba66105c56d0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41f2eccf92c54337b727d891e42ba66105c56d0d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a095064062b3a832eea919efdc4761a697803b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a095064062b3a832eea919efdc4761a697803b4", "html_url": "https://github.com/rust-lang/rust/commit/9a095064062b3a832eea919efdc4761a697803b4"}, {"sha": "21eae8ceb6ff58b592b00cab58cda62a96aad51a", "url": "https://api.github.com/repos/rust-lang/rust/commits/21eae8ceb6ff58b592b00cab58cda62a96aad51a", "html_url": "https://github.com/rust-lang/rust/commit/21eae8ceb6ff58b592b00cab58cda62a96aad51a"}], "stats": {"total": 59, "additions": 48, "deletions": 11}, "files": [{"sha": "4ba7477add82a420dc3b160da1782e880adf85a0", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41f2eccf92c54337b727d891e42ba66105c56d0d/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41f2eccf92c54337b727d891e42ba66105c56d0d/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=41f2eccf92c54337b727d891e42ba66105c56d0d", "patch": "@@ -96,6 +96,10 @@ declare_lint_pass!(IndexingSlicing => [INDEXING_SLICING, OUT_OF_BOUNDS_INDEXING]\n \n impl<'tcx> LateLintPass<'tcx> for IndexingSlicing {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n+        if cx.tcx.hir().is_inside_const_context(expr.hir_id) {\n+            return;\n+        }\n+\n         if let ExprKind::Index(array, index) = &expr.kind {\n             let ty = cx.typeck_results().expr_ty(array).peel_refs();\n             if let Some(range) = higher::Range::hir(index) {\n@@ -151,6 +155,10 @@ impl<'tcx> LateLintPass<'tcx> for IndexingSlicing {\n             } else {\n                 // Catchall non-range index, i.e., [n] or [n << m]\n                 if let ty::Array(..) = ty.kind() {\n+                    // Index is a const block.\n+                    if let ExprKind::ConstBlock(..) = index.kind {\n+                        return;\n+                    }\n                     // Index is a constant uint.\n                     if let Some(..) = constant(cx, cx.typeck_results(), index) {\n                         // Let rustc's `const_err` lint handle constant `usize` indexing on arrays."}, {"sha": "45a430edcb58998562e96b35e86d8c2a41db1e8b", "filename": "tests/ui/indexing_slicing_index.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/41f2eccf92c54337b727d891e42ba66105c56d0d/tests%2Fui%2Findexing_slicing_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41f2eccf92c54337b727d891e42ba66105c56d0d/tests%2Fui%2Findexing_slicing_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findexing_slicing_index.rs?ref=41f2eccf92c54337b727d891e42ba66105c56d0d", "patch": "@@ -1,18 +1,34 @@\n+#![feature(inline_const)]\n #![warn(clippy::indexing_slicing)]\n // We also check the out_of_bounds_indexing lint here, because it lints similar things and\n // we want to avoid false positives.\n #![warn(clippy::out_of_bounds_indexing)]\n-#![allow(clippy::no_effect, clippy::unnecessary_operation)]\n+#![allow(const_err, clippy::no_effect, clippy::unnecessary_operation)]\n+\n+const ARR: [i32; 2] = [1, 2];\n+const REF: &i32 = &ARR[idx()]; // Ok, should not produce stderr.\n+const REF_ERR: &i32 = &ARR[idx4()]; // Ok, let rustc handle const contexts.\n+\n+const fn idx() -> usize {\n+    1\n+}\n+const fn idx4() -> usize {\n+    4\n+}\n \n fn main() {\n     let x = [1, 2, 3, 4];\n     let index: usize = 1;\n     x[index];\n-    x[4]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n-    x[1 << 3]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+    x[4]; // Ok, let rustc's `unconditional_panic` lint handle `usize` indexing on arrays.\n+    x[1 << 3]; // Ok, let rustc's `unconditional_panic` lint handle `usize` indexing on arrays.\n \n     x[0]; // Ok, should not produce stderr.\n     x[3]; // Ok, should not produce stderr.\n+    x[const { idx() }]; // Ok, should not produce stderr.\n+    x[const { idx4() }]; // Ok, let rustc's `unconditional_panic` lint handle `usize` indexing on arrays.\n+    const { &ARR[idx()] }; // Ok, should not produce stderr.\n+    const { &ARR[idx4()] }; // Ok, let rustc handle const contexts.\n \n     let y = &x;\n     y[0]; // Ok, referencing shouldn't affect this lint. See the issue 6021\n@@ -25,7 +41,7 @@ fn main() {\n \n     const N: usize = 15; // Out of bounds\n     const M: usize = 3; // In bounds\n-    x[N]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+    x[N]; // Ok, let rustc's `unconditional_panic` lint handle `usize` indexing on arrays.\n     x[M]; // Ok, should not produce stderr.\n     v[N];\n     v[M];"}, {"sha": "83a36f407d5d877b18511182ca893781bbc628aa", "filename": "tests/ui/indexing_slicing_index.stderr", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/41f2eccf92c54337b727d891e42ba66105c56d0d/tests%2Fui%2Findexing_slicing_index.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41f2eccf92c54337b727d891e42ba66105c56d0d/tests%2Fui%2Findexing_slicing_index.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findexing_slicing_index.stderr?ref=41f2eccf92c54337b727d891e42ba66105c56d0d", "patch": "@@ -1,5 +1,17 @@\n+error[E0080]: evaluation of `main::{constant#3}::<&i32>` failed\n+  --> $DIR/indexing_slicing_index.rs:31:14\n+   |\n+LL |     const { &ARR[idx4()] }; // Ok, let rustc handle const contexts.\n+   |              ^^^^^^^^^^^ index out of bounds: the length is 2 but the index is 4\n+\n+error[E0080]: erroneous constant used\n+  --> $DIR/indexing_slicing_index.rs:31:5\n+   |\n+LL |     const { &ARR[idx4()] }; // Ok, let rustc handle const contexts.\n+   |     ^^^^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n+\n error: indexing may panic\n-  --> $DIR/indexing_slicing_index.rs:10:5\n+  --> $DIR/indexing_slicing_index.rs:22:5\n    |\n LL |     x[index];\n    |     ^^^^^^^^\n@@ -8,44 +20,45 @@ LL |     x[index];\n    = help: consider using `.get(n)` or `.get_mut(n)` instead\n \n error: indexing may panic\n-  --> $DIR/indexing_slicing_index.rs:22:5\n+  --> $DIR/indexing_slicing_index.rs:38:5\n    |\n LL |     v[0];\n    |     ^^^^\n    |\n    = help: consider using `.get(n)` or `.get_mut(n)` instead\n \n error: indexing may panic\n-  --> $DIR/indexing_slicing_index.rs:23:5\n+  --> $DIR/indexing_slicing_index.rs:39:5\n    |\n LL |     v[10];\n    |     ^^^^^\n    |\n    = help: consider using `.get(n)` or `.get_mut(n)` instead\n \n error: indexing may panic\n-  --> $DIR/indexing_slicing_index.rs:24:5\n+  --> $DIR/indexing_slicing_index.rs:40:5\n    |\n LL |     v[1 << 3];\n    |     ^^^^^^^^^\n    |\n    = help: consider using `.get(n)` or `.get_mut(n)` instead\n \n error: indexing may panic\n-  --> $DIR/indexing_slicing_index.rs:30:5\n+  --> $DIR/indexing_slicing_index.rs:46:5\n    |\n LL |     v[N];\n    |     ^^^^\n    |\n    = help: consider using `.get(n)` or `.get_mut(n)` instead\n \n error: indexing may panic\n-  --> $DIR/indexing_slicing_index.rs:31:5\n+  --> $DIR/indexing_slicing_index.rs:47:5\n    |\n LL |     v[M];\n    |     ^^^^\n    |\n    = help: consider using `.get(n)` or `.get_mut(n)` instead\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 8 previous errors\n \n+For more information about this error, try `rustc --explain E0080`."}]}