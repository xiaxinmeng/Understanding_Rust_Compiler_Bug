{"sha": "58797b01f1b0925095986e4f42b839cdb2a99ac8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4Nzk3YjAxZjFiMDkyNTA5NTk4NmU0ZjQyYjgzOWNkYjJhOTlhYzg=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-05-12T18:56:11Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-05-12T18:56:11Z"}, "message": "review comments", "tree": {"sha": "33cc3c4cb44f20874c0a9b696c3d8c9be09efe6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33cc3c4cb44f20874c0a9b696c3d8c9be09efe6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58797b01f1b0925095986e4f42b839cdb2a99ac8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58797b01f1b0925095986e4f42b839cdb2a99ac8", "html_url": "https://github.com/rust-lang/rust/commit/58797b01f1b0925095986e4f42b839cdb2a99ac8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58797b01f1b0925095986e4f42b839cdb2a99ac8/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4556130e7d9fdf03bedfa177a658808dbec16b8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4556130e7d9fdf03bedfa177a658808dbec16b8a", "html_url": "https://github.com/rust-lang/rust/commit/4556130e7d9fdf03bedfa177a658808dbec16b8a"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "5c4ba40bf38e3ddbfd26cfc1ae50c1c578480d5c", "filename": "src/librustc_trait_selection/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/58797b01f1b0925095986e4f42b839cdb2a99ac8/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58797b01f1b0925095986e4f42b839cdb2a99ac8/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=58797b01f1b0925095986e4f42b839cdb2a99ac8", "patch": "@@ -175,6 +175,11 @@ fn suggest_restriction(\n     trait_ref: ty::PolyTraitRef<'_>,\n     super_traits: Option<(&Ident, &hir::GenericBounds<'_>)>,\n ) {\n+    // When we are dealing with a trait, `super_traits` will be `Some`:\n+    // Given `trait T: A + B + C {}`\n+    //              -  ^^^^^^^^^ GenericBounds\n+    //              |\n+    //              &Ident\n     let span = generics.where_clause.span_for_predicates_or_empty_place();\n     if span.from_expansion() || span.desugaring_kind().is_some() {\n         return;\n@@ -311,7 +316,8 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                     ident,\n                     kind: hir::ItemKind::Trait(_, _, generics, bounds, _),\n                     ..\n-                }) if param_ty && self_ty == self.tcx.types.self_param => {\n+                }) if self_ty == self.tcx.types.self_param => {\n+                    assert!(param_ty);\n                     // Restricting `Self` for a single method.\n                     suggest_restriction(\n                         &generics,\n@@ -329,7 +335,8 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                     generics,\n                     kind: hir::TraitItemKind::Fn(..),\n                     ..\n-                }) if param_ty && self_ty == self.tcx.types.self_param => {\n+                }) if self_ty == self.tcx.types.self_param => {\n+                    assert!(param_ty);\n                     // Restricting `Self` for a single method.\n                     suggest_restriction(\n                         &generics, \"`Self`\", err, None, projection, trait_ref, None,"}]}