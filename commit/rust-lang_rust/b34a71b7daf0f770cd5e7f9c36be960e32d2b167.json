{"sha": "b34a71b7daf0f770cd5e7f9c36be960e32d2b167", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNGE3MWI3ZGFmMGY3NzBjZDVlN2Y5YzM2YmU5NjBlMzJkMmIxNjc=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-03-22T18:56:08Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-03-22T18:56:08Z"}, "message": "add suggestions to trim_{left,right} deprecations", "tree": {"sha": "964fa1826c6c52abaf4a4a222c62dea47efaa0d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/964fa1826c6c52abaf4a4a222c62dea47efaa0d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b34a71b7daf0f770cd5e7f9c36be960e32d2b167", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlyVL9sWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdCQCB/9v+pCmi6kq/EuKgSZhQJbLVZx/\nZ7V2eGdSOL0MLxw/mmWJ7PZszgAM1+o3ItTIwDxpKzLDPiLCWA8E/gRG1nqg66HG\n9Z0gNsW3Ocy/W8R7L/ueGL0jl56GSmk/M1zn4dxSBBE0smFnHZls1hlpOrmWuokm\nyKpHELD9gTLehqBv4hOkAC88yU/vuWCd03UsYjVnQM7Q9ObhZ+bi/ewoMS0TskUk\nVBJFja3+8opOnPBC/sN0W5CSucbKgKcFEwFXZPGEn7ZDzzhzWigRHRzahMl3M8S7\nvMtUz46BuJdoK41Y/xaPXtxqE+ISjqAhXCpz6DovDPHhEGuQmUlgpogZuue+\n=UCxJ\n-----END PGP SIGNATURE-----", "payload": "tree 964fa1826c6c52abaf4a4a222c62dea47efaa0d1\nparent ed196221d889ae8a87be677402e4319237ef67f4\nauthor Andy Russell <arussell123@gmail.com> 1553280968 -0400\ncommitter Andy Russell <arussell123@gmail.com> 1553280968 -0400\n\nadd suggestions to trim_{left,right} deprecations\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b34a71b7daf0f770cd5e7f9c36be960e32d2b167", "html_url": "https://github.com/rust-lang/rust/commit/b34a71b7daf0f770cd5e7f9c36be960e32d2b167", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b34a71b7daf0f770cd5e7f9c36be960e32d2b167/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed196221d889ae8a87be677402e4319237ef67f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed196221d889ae8a87be677402e4319237ef67f4", "html_url": "https://github.com/rust-lang/rust/commit/ed196221d889ae8a87be677402e4319237ef67f4"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "f54d7badc3ae0cb4a7286074b8721764fd43d319", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b34a71b7daf0f770cd5e7f9c36be960e32d2b167/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34a71b7daf0f770cd5e7f9c36be960e32d2b167/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=b34a71b7daf0f770cd5e7f9c36be960e32d2b167", "patch": "@@ -3601,7 +3601,11 @@ impl str {\n     /// assert!(Some('\u05e2') == s.trim_left().chars().next());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_deprecated(reason = \"superseded by `trim_start`\", since = \"1.33.0\")]\n+    #[rustc_deprecated(\n+        since = \"1.33.0\",\n+        reason = \"superseded by `trim_start`\",\n+        suggestion = \"trim_start\",\n+    )]\n     pub fn trim_left(&self) -> &str {\n         self.trim_start()\n     }\n@@ -3638,7 +3642,11 @@ impl str {\n     /// assert!(Some('\u05ea') == s.trim_right().chars().rev().next());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_deprecated(reason = \"superseded by `trim_end`\", since = \"1.33.0\")]\n+    #[rustc_deprecated(\n+        since = \"1.33.0\",\n+        reason = \"superseded by `trim_end`\",\n+        suggestion = \"trim_end\",\n+    )]\n     pub fn trim_right(&self) -> &str {\n         self.trim_end()\n     }\n@@ -3802,7 +3810,11 @@ impl str {\n     /// assert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_deprecated(reason = \"superseded by `trim_start_matches`\", since = \"1.33.0\")]\n+    #[rustc_deprecated(\n+        since = \"1.33.0\",\n+        reason = \"superseded by `trim_start_matches`\",\n+        suggestion = \"trim_start_matches\",\n+    )]\n     pub fn trim_left_matches<'a, P: Pattern<'a>>(&'a self, pat: P) -> &'a str {\n         self.trim_start_matches(pat)\n     }\n@@ -3840,7 +3852,11 @@ impl str {\n     /// assert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_deprecated(reason = \"superseded by `trim_end_matches`\", since = \"1.33.0\")]\n+    #[rustc_deprecated(\n+        since = \"1.33.0\",\n+        reason = \"superseded by `trim_end_matches`\",\n+        suggestion = \"trim_end_matches\",\n+    )]\n     pub fn trim_right_matches<'a, P: Pattern<'a>>(&'a self, pat: P) -> &'a str\n         where P::Searcher: ReverseSearcher<'a>\n     {"}]}