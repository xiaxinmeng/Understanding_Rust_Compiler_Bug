{"sha": "183aab3575ebd7c82ce1e982fa335b9a84388d12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4M2FhYjM1NzVlYmQ3YzgyY2UxZTk4MmZhMzM1YjlhODQzODhkMTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-26T16:56:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-26T16:56:50Z"}, "message": "Rollup merge of #62907 - nikic:msp430-asmparser, r=alexcrichton\n\nInitialize the MSP430 AsmParser\n\nHopefully fixes #59077.\n\nr? @alexcrichton", "tree": {"sha": "b55cf7c09ca2aaa951b2fba74961bdb8154fe641", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b55cf7c09ca2aaa951b2fba74961bdb8154fe641"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/183aab3575ebd7c82ce1e982fa335b9a84388d12", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdOzDSCRBK7hj4Ov3rIwAAdHIIALEh3kJm0RkbXDpL5aMwmmKn\nRuz1LvHfg0itI6gnzHrkB3D2nyrqiF1OvgSLTKulzMLvGIJWwpHN7nSilCHABDD5\nM9MRv+lhnfhPGKMXzJoeR5wekK9Wjx8JyAzb0Cl1yvS2GBpBVBH3pRpBdeKLIde2\nQGITD5I2dwbS9AvjV6hxY1EIPp//ZkmpaCqz4/86jv2A6+iJDNUg+49VPai7Ko6C\nBfte12s///9Nt63fWYL7PKr0TXfljMOVjsxl7rx1ey9ovsBItahVIhsmWrNF5NQA\n0//Spi0hHFQ8yp6Ye8kINddRDgriV8saFaLkx17SDaWOGQNgjaHPGSiS6dslRoQ=\n=+7Rt\n-----END PGP SIGNATURE-----\n", "payload": "tree b55cf7c09ca2aaa951b2fba74961bdb8154fe641\nparent ba835dffe68148734d82b8d8b4aa2b96b5750f52\nparent 71717b951a2f87720d9d8926e9a21353c120f700\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1564160210 +0200\ncommitter GitHub <noreply@github.com> 1564160210 +0200\n\nRollup merge of #62907 - nikic:msp430-asmparser, r=alexcrichton\n\nInitialize the MSP430 AsmParser\n\nHopefully fixes #59077.\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/183aab3575ebd7c82ce1e982fa335b9a84388d12", "html_url": "https://github.com/rust-lang/rust/commit/183aab3575ebd7c82ce1e982fa335b9a84388d12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/183aab3575ebd7c82ce1e982fa335b9a84388d12/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba835dffe68148734d82b8d8b4aa2b96b5750f52", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba835dffe68148734d82b8d8b4aa2b96b5750f52", "html_url": "https://github.com/rust-lang/rust/commit/ba835dffe68148734d82b8d8b4aa2b96b5750f52"}, {"sha": "71717b951a2f87720d9d8926e9a21353c120f700", "url": "https://api.github.com/repos/rust-lang/rust/commits/71717b951a2f87720d9d8926e9a21353c120f700", "html_url": "https://github.com/rust-lang/rust/commit/71717b951a2f87720d9d8926e9a21353c120f700"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "16cdbb7dd4d39a60cafe27c6b2506a6a96d3509b", "filename": "src/librustc_llvm/build.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/183aab3575ebd7c82ce1e982fa335b9a84388d12/src%2Flibrustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/183aab3575ebd7c82ce1e982fa335b9a84388d12/src%2Flibrustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fbuild.rs?ref=183aab3575ebd7c82ce1e982fa335b9a84388d12", "patch": "@@ -112,6 +112,10 @@ fn main() {\n         println!(\"cargo:rustc-cfg=llvm_component=\\\"{}\\\"\", component);\n     }\n \n+    if major >= 9 {\n+        println!(\"cargo:rustc-cfg=llvm_has_msp430_asm_parser\");\n+    }\n+\n     // Link in our own LLVM shims, compiled with the same flags as LLVM\n     let mut cmd = Command::new(&llvm_config);\n     cmd.arg(\"--cxxflags\");"}, {"sha": "dea7e6ae0a2abf85088602bf6eafbc3e01b7b700", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/183aab3575ebd7c82ce1e982fa335b9a84388d12/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/183aab3575ebd7c82ce1e982fa335b9a84388d12/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=183aab3575ebd7c82ce1e982fa335b9a84388d12", "patch": "@@ -76,6 +76,8 @@ pub fn initialize_available_targets() {\n                  LLVMInitializeMSP430Target,\n                  LLVMInitializeMSP430TargetMC,\n                  LLVMInitializeMSP430AsmPrinter);\n+    init_target!(all(llvm_component = \"msp430\", llvm_has_msp430_asm_parser),\n+                 LLVMInitializeMSP430AsmParser);\n     init_target!(llvm_component = \"riscv\",\n                  LLVMInitializeRISCVTargetInfo,\n                  LLVMInitializeRISCVTarget,"}]}