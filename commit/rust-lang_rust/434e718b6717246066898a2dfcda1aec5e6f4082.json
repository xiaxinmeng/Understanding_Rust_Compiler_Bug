{"sha": "434e718b6717246066898a2dfcda1aec5e6f4082", "node_id": "C_kwDOAAsO6NoAKDQzNGU3MThiNjcxNzI0NjA2Njg5OGEyZGZjZGExYWVjNWU2ZjQwODI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-23T23:15:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-23T23:15:33Z"}, "message": "Auto merge of #12605 - erhuve:fix/determine-doc-link-type-at-start, r=erhuve\n\nfix: doc_links link type - Determine link type at start (fixes #12601)\n\nfixes #12601\nLooked like autolink/inline mismatch happened because end_link_type was parsed from the Text/Code events.\nI changed it to be determined from the Start event, which should hopefully remain accurate while staying true to the cases where link type may need to be changed, according to the comment\n```\n// normally link's type is determined by the type of link tag in the end event,\n// however in some cases we want to change the link type, for example,\n// `Shortcut` type doesn't make sense for url links\n```\nHopefully this is the desired behavior?\n![Untitled](https://user-images.githubusercontent.com/59463268/174696581-3b1140a5-cdf0-4eda-9a11-ec648e4e7d21.gif)", "tree": {"sha": "2e7ae2b894afddf55293e41bc36c59cb046e8e88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e7ae2b894afddf55293e41bc36c59cb046e8e88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/434e718b6717246066898a2dfcda1aec5e6f4082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/434e718b6717246066898a2dfcda1aec5e6f4082", "html_url": "https://github.com/rust-lang/rust/commit/434e718b6717246066898a2dfcda1aec5e6f4082", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/434e718b6717246066898a2dfcda1aec5e6f4082/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32b40ded0f16818918d4a2ca16400526eea369f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/32b40ded0f16818918d4a2ca16400526eea369f2", "html_url": "https://github.com/rust-lang/rust/commit/32b40ded0f16818918d4a2ca16400526eea369f2"}, {"sha": "5107123f9a3a2faaa71a673add58b34002a5122f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5107123f9a3a2faaa71a673add58b34002a5122f", "html_url": "https://github.com/rust-lang/rust/commit/5107123f9a3a2faaa71a673add58b34002a5122f"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "0f2ab6d6955113b89c767e6c65e3020f3b32eb9e", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/434e718b6717246066898a2dfcda1aec5e6f4082/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/434e718b6717246066898a2dfcda1aec5e6f4082/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=434e718b6717246066898a2dfcda1aec5e6f4082", "patch": "@@ -362,14 +362,15 @@ fn map_links<'e>(\n     // holds the origin link target on start event and the rewritten one on end event\n     let mut end_link_target: Option<CowStr> = None;\n     // normally link's type is determined by the type of link tag in the end event,\n-    // however in same cases we want to change the link type, for example,\n-    // `Shortcut` type doesn't make sense for url links\n+    // however in some cases we want to change the link type, for example,\n+    // `Shortcut` type parsed from Start/End tags doesn't make sense for url links\n     let mut end_link_type: Option<LinkType> = None;\n \n     events.map(move |evt| match evt {\n-        Event::Start(Tag::Link(_, ref target, _)) => {\n+        Event::Start(Tag::Link(link_type, ref target, _)) => {\n             in_link = true;\n             end_link_target = Some(target.clone());\n+            end_link_type = Some(link_type);\n             evt\n         }\n         Event::End(Tag::Link(link_type, target, _)) => {\n@@ -384,14 +385,18 @@ fn map_links<'e>(\n             let (link_type, link_target_s, link_name) =\n                 callback(&end_link_target.take().unwrap(), &s);\n             end_link_target = Some(CowStr::Boxed(link_target_s.into()));\n-            end_link_type = link_type;\n+            if !matches!(end_link_type, Some(LinkType::Autolink)) {\n+                end_link_type = link_type;\n+            }\n             Event::Text(CowStr::Boxed(link_name.into()))\n         }\n         Event::Code(s) if in_link => {\n             let (link_type, link_target_s, link_name) =\n                 callback(&end_link_target.take().unwrap(), &s);\n             end_link_target = Some(CowStr::Boxed(link_target_s.into()));\n-            end_link_type = link_type;\n+            if !matches!(end_link_type, Some(LinkType::Autolink)) {\n+                end_link_type = link_type;\n+            }\n             Event::Code(CowStr::Boxed(link_name.into()))\n         }\n         _ => evt,"}, {"sha": "af502e4106567144a34898fd8e4ddc8a4aaaa418", "filename": "crates/ide/src/hover/tests.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/434e718b6717246066898a2dfcda1aec5e6f4082/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/434e718b6717246066898a2dfcda1aec5e6f4082/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs?ref=434e718b6717246066898a2dfcda1aec5e6f4082", "patch": "@@ -3808,6 +3808,7 @@ fn foo() {\n /// [closure]\n /// [closures][closure]\n /// [threads]\n+/// <https://doc.rust-lang.org/nightly/book/ch13-01-closures.html>\n ///\n /// [closure]: ../book/ch13-01-closures.html\n /// [threads]: ../book/ch16-01-threads.html#using-move-closures-with-threads\n@@ -3825,6 +3826,7 @@ mod move_keyword {}\n             [closure](https://doc.rust-lang.org/nightly/book/ch13-01-closures.html)\n             [closures](https://doc.rust-lang.org/nightly/book/ch13-01-closures.html)\n             [threads](https://doc.rust-lang.org/nightly/book/ch16-01-threads.html#using-move-closures-with-threads)\n+            <https://doc.rust-lang.org/nightly/book/ch13-01-closures.html>\n         \"##]],\n     );\n }"}]}