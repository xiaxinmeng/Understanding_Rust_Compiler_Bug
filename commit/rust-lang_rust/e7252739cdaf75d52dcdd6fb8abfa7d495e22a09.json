{"sha": "e7252739cdaf75d52dcdd6fb8abfa7d495e22a09", "node_id": "C_kwDOAAsO6NoAKGU3MjUyNzM5Y2RhZjc1ZDUyZGNkZDZmYjhhYmZhN2Q0OTVlMjJhMDk", "commit": {"author": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "liehr.exchange@gmx.net", "date": "2022-05-20T08:19:23Z"}, "committer": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "liehr.exchange@gmx.net", "date": "2022-05-20T08:19:23Z"}, "message": "Do not warn on inherent doc(hidden) assoc items", "tree": {"sha": "1aa9ea6040c105e1a03afc51c3be74acb488476b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1aa9ea6040c105e1a03afc51c3be74acb488476b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7252739cdaf75d52dcdd6fb8abfa7d495e22a09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7252739cdaf75d52dcdd6fb8abfa7d495e22a09", "html_url": "https://github.com/rust-lang/rust/commit/e7252739cdaf75d52dcdd6fb8abfa7d495e22a09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7252739cdaf75d52dcdd6fb8abfa7d495e22a09/comments", "author": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f24ef2e296ec6fc6fd2e24d7e4bfec3f4cb0577a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f24ef2e296ec6fc6fd2e24d7e4bfec3f4cb0577a", "html_url": "https://github.com/rust-lang/rust/commit/f24ef2e296ec6fc6fd2e24d7e4bfec3f4cb0577a"}], "stats": {"total": 46, "additions": 36, "deletions": 10}, "files": [{"sha": "3d5da114ecfde758cbb09e21d9738b8b0cb1d564", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7252739cdaf75d52dcdd6fb8abfa7d495e22a09/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7252739cdaf75d52dcdd6fb8abfa7d495e22a09/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=e7252739cdaf75d52dcdd6fb8abfa7d495e22a09", "patch": "@@ -832,7 +832,7 @@ impl CheckAttrVisitor<'_> {\n             let parent_hir_id = self.tcx.hir().get_parent_item(hir_id);\n             let containing_item = self.tcx.hir().expect_item(parent_hir_id);\n \n-            if Target::from_item(containing_item) == Target::Impl {\n+            if let hir::ItemKind::Impl(hir::Impl { of_trait: Some(_), .. }) = containing_item.kind {\n                 let meta_items = attr.meta_item_list().unwrap();\n \n                 let (span, replacement_span) = if meta_items.len() == 1 {"}, {"sha": "362ad55707a4a37fc2c715880cd6c6f4df191361", "filename": "src/test/ui/lint/unused/unused-attr-doc-hidden.fixed", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e7252739cdaf75d52dcdd6fb8abfa7d495e22a09/src%2Ftest%2Fui%2Flint%2Funused%2Funused-attr-doc-hidden.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e7252739cdaf75d52dcdd6fb8abfa7d495e22a09/src%2Ftest%2Fui%2Flint%2Funused%2Funused-attr-doc-hidden.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused-attr-doc-hidden.fixed?ref=e7252739cdaf75d52dcdd6fb8abfa7d495e22a09", "patch": "@@ -1,5 +1,7 @@\n-#![deny(unused_attributes)]\n+#![feature(inherent_associated_types)]\n+#![allow(dead_code, incomplete_features)]\n #![crate_type = \"lib\"]\n+#![deny(unused_attributes)]\n // run-rustfix\n \n pub trait Trait {\n@@ -12,6 +14,17 @@ pub trait Trait {\n \n pub struct Implementor;\n \n+impl Implementor {\n+    #[doc(hidden)] // no error\n+    type Inh = ();\n+\n+    #[doc(hidden)] // no error\n+    const INH: () = ();\n+\n+    #[doc(hidden)] // no error\n+    fn inh() {}\n+}\n+\n impl Trait for Implementor {\n     \n     type It = ();"}, {"sha": "d493ed6dae2065ba01f36624ac7b70021df6ca7d", "filename": "src/test/ui/lint/unused/unused-attr-doc-hidden.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e7252739cdaf75d52dcdd6fb8abfa7d495e22a09/src%2Ftest%2Fui%2Flint%2Funused%2Funused-attr-doc-hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7252739cdaf75d52dcdd6fb8abfa7d495e22a09/src%2Ftest%2Fui%2Flint%2Funused%2Funused-attr-doc-hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused-attr-doc-hidden.rs?ref=e7252739cdaf75d52dcdd6fb8abfa7d495e22a09", "patch": "@@ -1,5 +1,7 @@\n-#![deny(unused_attributes)]\n+#![feature(inherent_associated_types)]\n+#![allow(dead_code, incomplete_features)]\n #![crate_type = \"lib\"]\n+#![deny(unused_attributes)]\n // run-rustfix\n \n pub trait Trait {\n@@ -12,6 +14,17 @@ pub trait Trait {\n \n pub struct Implementor;\n \n+impl Implementor {\n+    #[doc(hidden)] // no error\n+    type Inh = ();\n+\n+    #[doc(hidden)] // no error\n+    const INH: () = ();\n+\n+    #[doc(hidden)] // no error\n+    fn inh() {}\n+}\n+\n impl Trait for Implementor {\n     #[doc(hidden)]\n     type It = ();"}, {"sha": "f167bd460db3edd8ccdb3915eb5dae59a3eee5e3", "filename": "src/test/ui/lint/unused/unused-attr-doc-hidden.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e7252739cdaf75d52dcdd6fb8abfa7d495e22a09/src%2Ftest%2Fui%2Flint%2Funused%2Funused-attr-doc-hidden.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e7252739cdaf75d52dcdd6fb8abfa7d495e22a09/src%2Ftest%2Fui%2Flint%2Funused%2Funused-attr-doc-hidden.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused-attr-doc-hidden.stderr?ref=e7252739cdaf75d52dcdd6fb8abfa7d495e22a09", "patch": "@@ -1,19 +1,19 @@\n error: `#[doc(hidden)]` is ignored on trait impl items\n-  --> $DIR/unused-attr-doc-hidden.rs:16:5\n+  --> $DIR/unused-attr-doc-hidden.rs:29:5\n    |\n LL |     #[doc(hidden)]\n    |     ^^^^^^^^^^^^^^ help: remove this attribute\n    |\n note: the lint level is defined here\n-  --> $DIR/unused-attr-doc-hidden.rs:1:9\n+  --> $DIR/unused-attr-doc-hidden.rs:4:9\n    |\n LL | #![deny(unused_attributes)]\n    |         ^^^^^^^^^^^^^^^^^\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: whether the impl item is `doc(hidden)` or not entirely depends on the corresponding trait item\n \n error: `#[doc(hidden)]` is ignored on trait impl items\n-  --> $DIR/unused-attr-doc-hidden.rs:21:5\n+  --> $DIR/unused-attr-doc-hidden.rs:34:5\n    |\n LL |     #[doc(hidden)]\n    |     ^^^^^^^^^^^^^^ help: remove this attribute\n@@ -22,7 +22,7 @@ LL |     #[doc(hidden)]\n    = note: whether the impl item is `doc(hidden)` or not entirely depends on the corresponding trait item\n \n error: `#[doc(hidden)]` is ignored on trait impl items\n-  --> $DIR/unused-attr-doc-hidden.rs:26:11\n+  --> $DIR/unused-attr-doc-hidden.rs:39:11\n    |\n LL |     #[doc(hidden, alias = \"aka\")]\n    |           ^^^^^^--\n@@ -33,7 +33,7 @@ LL |     #[doc(hidden, alias = \"aka\")]\n    = note: whether the impl item is `doc(hidden)` or not entirely depends on the corresponding trait item\n \n error: `#[doc(hidden)]` is ignored on trait impl items\n-  --> $DIR/unused-attr-doc-hidden.rs:31:27\n+  --> $DIR/unused-attr-doc-hidden.rs:44:27\n    |\n LL |     #[doc(alias = \"this\", hidden,)]\n    |                           ^^^^^^-\n@@ -44,7 +44,7 @@ LL |     #[doc(alias = \"this\", hidden,)]\n    = note: whether the impl item is `doc(hidden)` or not entirely depends on the corresponding trait item\n \n error: `#[doc(hidden)]` is ignored on trait impl items\n-  --> $DIR/unused-attr-doc-hidden.rs:36:11\n+  --> $DIR/unused-attr-doc-hidden.rs:49:11\n    |\n LL |     #[doc(hidden, hidden)]\n    |           ^^^^^^--\n@@ -55,7 +55,7 @@ LL |     #[doc(hidden, hidden)]\n    = note: whether the impl item is `doc(hidden)` or not entirely depends on the corresponding trait item\n \n error: `#[doc(hidden)]` is ignored on trait impl items\n-  --> $DIR/unused-attr-doc-hidden.rs:36:19\n+  --> $DIR/unused-attr-doc-hidden.rs:49:19\n    |\n LL |     #[doc(hidden, hidden)]\n    |                   ^^^^^^ help: remove this attribute"}]}