{"sha": "bb933d26dc722315d07d0f048e4185f40d94db8c", "node_id": "C_kwDOAAsO6NoAKGJiOTMzZDI2ZGM3MjIzMTVkMDdkMGYwNDhlNDE4NWY0MGQ5NGRiOGM", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-18T17:32:37Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-18T17:45:27Z"}, "message": "Fix abi for checked multiplication", "tree": {"sha": "44a5753b19839af18ae605565178286ed5920026", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44a5753b19839af18ae605565178286ed5920026"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb933d26dc722315d07d0f048e4185f40d94db8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb933d26dc722315d07d0f048e4185f40d94db8c", "html_url": "https://github.com/rust-lang/rust/commit/bb933d26dc722315d07d0f048e4185f40d94db8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb933d26dc722315d07d0f048e4185f40d94db8c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4991d08bc69f3151ccb55c74e59792910f0776ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/4991d08bc69f3151ccb55c74e59792910f0776ca", "html_url": "https://github.com/rust-lang/rust/commit/4991d08bc69f3151ccb55c74e59792910f0776ca"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "e34b35d5c4a8c481253e4b51764fdaaf72babc79", "filename": "example/std_example.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb933d26dc722315d07d0f048e4185f40d94db8c/example%2Fstd_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb933d26dc722315d07d0f048e4185f40d94db8c/example%2Fstd_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fstd_example.rs?ref=bb933d26dc722315d07d0f048e4185f40d94db8c", "patch": "@@ -58,6 +58,7 @@ fn main() {\n     assert_eq!(0b0000000000000000000000000010000000000000000000000000000000000000_0000000000000000000000000000000000001000000000000000000010000000u128.trailing_zeros(), 7);\n     assert_eq!(core::intrinsics::saturating_sub(0, -170141183460469231731687303715884105728i128), 170141183460469231731687303715884105727i128);\n \n+    std::hint::black_box(std::hint::black_box(7571400400375753350092698930310845914i128) * 10);\n     assert!(0i128.checked_div(2i128).is_some());\n     assert!(0u128.checked_div(2u128).is_some());\n     assert_eq!(1u128 + 2, 3);"}, {"sha": "cb048c0ad45bc057da8ac82b2a98a5c462f5ada5", "filename": "src/codegen_i128.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb933d26dc722315d07d0f048e4185f40d94db8c/src%2Fcodegen_i128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb933d26dc722315d07d0f048e4185f40d94db8c/src%2Fcodegen_i128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcodegen_i128.rs?ref=bb933d26dc722315d07d0f048e4185f40d94db8c", "patch": "@@ -46,7 +46,7 @@ pub(crate) fn maybe_codegen<'tcx>(\n                 let lhs = lhs.load_scalar(fx);\n                 let rhs = rhs.load_scalar(fx);\n                 let oflow_ptr = oflow.to_ptr().get_addr(fx);\n-                let res = fx.lib_call(\n+                let res = fx.lib_call_unadjusted(\n                     \"__muloti4\",\n                     vec![\n                         AbiParam::new(types::I128),"}, {"sha": "f3b963200a0fb022f34bc48a2307b9c114830ace", "filename": "src/compiler_builtins.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb933d26dc722315d07d0f048e4185f40d94db8c/src%2Fcompiler_builtins.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb933d26dc722315d07d0f048e4185f40d94db8c/src%2Fcompiler_builtins.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiler_builtins.rs?ref=bb933d26dc722315d07d0f048e4185f40d94db8c", "patch": "@@ -39,6 +39,7 @@ builtin_functions! {\n \n     // integers\n     fn __multi3(a: i128, b: i128) -> i128;\n+    fn __muloti4(n: i128, d: i128, oflow: &mut i32) -> i128;\n     fn __udivti3(n: u128, d: u128) -> u128;\n     fn __divti3(n: i128, d: i128) -> i128;\n     fn __umodti3(n: u128, d: u128) -> u128;"}]}