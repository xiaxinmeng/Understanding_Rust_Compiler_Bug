{"sha": "8417ac67c3fe979098facad586438ea5244617b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0MTdhYzY3YzNmZTk3OTA5OGZhY2FkNTg2NDM4ZWE1MjQ0NjE3YjM=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-09-21T19:26:15Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-09-21T20:14:10Z"}, "message": "Inline attribute constructors", "tree": {"sha": "69bc8bdae1dab120d4c618749d77fdd065a549e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69bc8bdae1dab120d4c618749d77fdd065a549e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8417ac67c3fe979098facad586438ea5244617b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8417ac67c3fe979098facad586438ea5244617b3", "html_url": "https://github.com/rust-lang/rust/commit/8417ac67c3fe979098facad586438ea5244617b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8417ac67c3fe979098facad586438ea5244617b3/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e41aa8c0d04d9a663638e66a82868f0fbeb83bd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e41aa8c0d04d9a663638e66a82868f0fbeb83bd8", "html_url": "https://github.com/rust-lang/rust/commit/e41aa8c0d04d9a663638e66a82868f0fbeb83bd8"}], "stats": {"total": 31, "additions": 10, "deletions": 21}, "files": [{"sha": "ccd73bb66c6771647503caae3218acabbbabdd64", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8417ac67c3fe979098facad586438ea5244617b3/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8417ac67c3fe979098facad586438ea5244617b3/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=8417ac67c3fe979098facad586438ea5244617b3", "patch": "@@ -640,18 +640,4 @@ impl<'a> ExtCtxt<'a> {\n     pub fn meta_word(&self, sp: Span, w: ast::Name) -> ast::MetaItem {\n         attr::mk_word_item(Ident::new(w, sp))\n     }\n-\n-    pub fn meta_list_item_word(&self, sp: Span, w: ast::Name) -> ast::NestedMetaItem {\n-        attr::mk_nested_word_item(Ident::new(w, sp))\n-    }\n-\n-    pub fn meta_list(&self, sp: Span, name: ast::Name, mis: Vec<ast::NestedMetaItem>)\n-                 -> ast::MetaItem {\n-        attr::mk_list_item(Ident::new(name, sp), mis)\n-    }\n-\n-    pub fn meta_name_value(&self, span: Span, name: ast::Name, lit_kind: ast::LitKind)\n-                       -> ast::MetaItem {\n-        attr::mk_name_value_item(Ident::new(name, span), lit_kind, span)\n-    }\n }"}, {"sha": "c92339dd2fbd5c2141900258d1340a013a063ff4", "filename": "src/libsyntax_ext/deriving/cmp/eq.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8417ac67c3fe979098facad586438ea5244617b3/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8417ac67c3fe979098facad586438ea5244617b3/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Feq.rs?ref=8417ac67c3fe979098facad586438ea5244617b3", "patch": "@@ -2,7 +2,7 @@ use crate::deriving::path_std;\n use crate::deriving::generic::*;\n use crate::deriving::generic::ty::*;\n \n-use syntax::ast::{self, Expr, MetaItem, GenericArg};\n+use syntax::ast::{self, Ident, Expr, MetaItem, GenericArg};\n use syntax::ext::base::{Annotatable, ExtCtxt, SpecialDerives};\n use syntax::ptr::P;\n use syntax::symbol::{sym, Symbol};\n@@ -16,8 +16,8 @@ pub fn expand_deriving_eq(cx: &mut ExtCtxt<'_>,\n     cx.resolver.add_derives(cx.current_expansion.id.expn_data().parent, SpecialDerives::EQ);\n \n     let inline = cx.meta_word(span, sym::inline);\n-    let hidden = cx.meta_list_item_word(span, sym::hidden);\n-    let doc = cx.meta_list(span, sym::doc, vec![hidden]);\n+    let hidden = syntax::attr::mk_nested_word_item(Ident::new(sym::hidden, span));\n+    let doc = syntax::attr::mk_list_item(Ident::new(sym::doc, span), vec![hidden]);\n     let attrs = vec![cx.attribute(inline), cx.attribute(doc)];\n     let trait_def = TraitDef {\n         span,"}, {"sha": "fec035d331dc564ee535990383c9ee1ec0de9149", "filename": "src/libsyntax_ext/deriving/generic/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8417ac67c3fe979098facad586438ea5244617b3/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8417ac67c3fe979098facad586438ea5244617b3/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs?ref=8417ac67c3fe979098facad586438ea5244617b3", "patch": "@@ -672,8 +672,11 @@ impl<'a> TraitDef<'a> {\n         attr::mark_used(&attr);\n         let opt_trait_ref = Some(trait_ref);\n         let unused_qual = {\n-            let word = cx.meta_list_item_word(self.span, Symbol::intern(\"unused_qualifications\"));\n-            cx.attribute(cx.meta_list(self.span, sym::allow, vec![word]))\n+            let word = syntax::attr::mk_nested_word_item(\n+                Ident::new(Symbol::intern(\"unused_qualifications\"), self.span));\n+            let list = syntax::attr::mk_list_item(\n+                Ident::new(sym::allow, self.span), vec![word]);\n+            cx.attribute(list)\n         };\n \n         let mut a = vec![attr, unused_qual];"}, {"sha": "6c7e3e3eb98759185ab381a10d89eeec1a99c347", "filename": "src/libsyntax_ext/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8417ac67c3fe979098facad586438ea5244617b3/src%2Flibsyntax_ext%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8417ac67c3fe979098facad586438ea5244617b3/src%2Flibsyntax_ext%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Ftest.rs?ref=8417ac67c3fe979098facad586438ea5244617b3", "patch": "@@ -145,8 +145,8 @@ pub fn expand_test_or_bench(\n     let mut test_const = cx.item(sp, ast::Ident::new(item.ident.name, sp),\n         vec![\n             // #[cfg(test)]\n-            cx.attribute(cx.meta_list(attr_sp, sym::cfg, vec![\n-                cx.meta_list_item_word(attr_sp, sym::test)\n+            cx.attribute(attr::mk_list_item(ast::Ident::new(sym::cfg, attr_sp), vec![\n+                attr::mk_nested_word_item(ast::Ident::new(sym::test, attr_sp))\n             ])),\n             // #[rustc_test_marker]\n             cx.attribute(cx.meta_word(attr_sp, sym::rustc_test_marker)),"}]}