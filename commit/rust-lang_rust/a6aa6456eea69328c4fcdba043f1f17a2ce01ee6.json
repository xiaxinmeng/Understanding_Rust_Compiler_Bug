{"sha": "a6aa6456eea69328c4fcdba043f1f17a2ce01ee6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2YWE2NDU2ZWVhNjkzMjhjNGZjZGJhMDQzZjFmMTdhMmNlMDFlZTY=", "commit": {"author": {"name": "Kyle Robinson Young", "email": "kyle@dontkry.com", "date": "2015-10-10T16:15:55Z"}, "committer": {"name": "Kyle Robinson Young", "email": "kyle@dontkry.com", "date": "2015-10-10T16:15:55Z"}, "message": "doc: fixing typos", "tree": {"sha": "839b29624e58e0aeb522edf4e293daec00214a1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/839b29624e58e0aeb522edf4e293daec00214a1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6", "html_url": "https://github.com/rust-lang/rust/commit/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6/comments", "author": {"login": "shama", "id": 99604, "node_id": "MDQ6VXNlcjk5NjA0", "avatar_url": "https://avatars.githubusercontent.com/u/99604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shama", "html_url": "https://github.com/shama", "followers_url": "https://api.github.com/users/shama/followers", "following_url": "https://api.github.com/users/shama/following{/other_user}", "gists_url": "https://api.github.com/users/shama/gists{/gist_id}", "starred_url": "https://api.github.com/users/shama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shama/subscriptions", "organizations_url": "https://api.github.com/users/shama/orgs", "repos_url": "https://api.github.com/users/shama/repos", "events_url": "https://api.github.com/users/shama/events{/privacy}", "received_events_url": "https://api.github.com/users/shama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shama", "id": 99604, "node_id": "MDQ6VXNlcjk5NjA0", "avatar_url": "https://avatars.githubusercontent.com/u/99604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shama", "html_url": "https://github.com/shama", "followers_url": "https://api.github.com/users/shama/followers", "following_url": "https://api.github.com/users/shama/following{/other_user}", "gists_url": "https://api.github.com/users/shama/gists{/gist_id}", "starred_url": "https://api.github.com/users/shama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shama/subscriptions", "organizations_url": "https://api.github.com/users/shama/orgs", "repos_url": "https://api.github.com/users/shama/repos", "events_url": "https://api.github.com/users/shama/events{/privacy}", "received_events_url": "https://api.github.com/users/shama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87cd2c08273dec5c8db8e59f4231b8e69aa9b85b", "url": "https://api.github.com/repos/rust-lang/rust/commits/87cd2c08273dec5c8db8e59f4231b8e69aa9b85b", "html_url": "https://github.com/rust-lang/rust/commit/87cd2c08273dec5c8db8e59f4231b8e69aa9b85b"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "403922c5ed1381f2c877f5cd3697cc8db27e8f30", "filename": "src/doc/grammar.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6/src%2Fdoc%2Fgrammar.md", "raw_url": "https://github.com/rust-lang/rust/raw/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6/src%2Fdoc%2Fgrammar.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fgrammar.md?ref=a6aa6456eea69328c4fcdba043f1f17a2ce01ee6", "patch": "@@ -259,7 +259,7 @@ symbol : \"::\" | \"->\"\n ```\n \n Symbols are a general class of printable [tokens](#tokens) that play structural\n-roles in a variety of grammar productions. They are catalogued here for\n+roles in a variety of grammar productions. They are cataloged here for\n completeness as the set of remaining miscellaneous printable tokens that do not\n otherwise appear as [unary operators](#unary-operator-expressions), [binary\n operators](#binary-operator-expressions), or [keywords](#keywords)."}, {"sha": "b93b303f0b96e26667dfee9f2acc0dfe9f52421a", "filename": "src/doc/nomicon/concurrency.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6/src%2Fdoc%2Fnomicon%2Fconcurrency.md", "raw_url": "https://github.com/rust-lang/rust/raw/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6/src%2Fdoc%2Fnomicon%2Fconcurrency.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon%2Fconcurrency.md?ref=a6aa6456eea69328c4fcdba043f1f17a2ce01ee6", "patch": "@@ -1,4 +1,4 @@\n-% Concurrency and Paralellism\n+% Concurrency and Parallelism\n \n Rust as a language doesn't *really* have an opinion on how to do concurrency or\n parallelism. The standard library exposes OS threads and blocking sys-calls"}, {"sha": "604370b636517c8216c9c7fcaf5e169758536ef2", "filename": "src/doc/nomicon/destructors.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6/src%2Fdoc%2Fnomicon%2Fdestructors.md", "raw_url": "https://github.com/rust-lang/rust/raw/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6/src%2Fdoc%2Fnomicon%2Fdestructors.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon%2Fdestructors.md?ref=a6aa6456eea69328c4fcdba043f1f17a2ce01ee6", "patch": "@@ -53,7 +53,7 @@ impl<T> Drop for Box<T> {\n \n and this works fine because when Rust goes to drop the `ptr` field it just sees\n a [Unique] that has no actual `Drop` implementation. Similarly nothing can\n-use-after-free the `ptr` because when drop exits, it becomes inacessible.\n+use-after-free the `ptr` because when drop exits, it becomes inaccessible.\n \n However this wouldn't work:\n "}, {"sha": "e48d5f852f06a435cb03e81819d7d516cf8d9041", "filename": "src/doc/nomicon/lifetimes.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6/src%2Fdoc%2Fnomicon%2Flifetimes.md", "raw_url": "https://github.com/rust-lang/rust/raw/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6/src%2Fdoc%2Fnomicon%2Flifetimes.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon%2Flifetimes.md?ref=a6aa6456eea69328c4fcdba043f1f17a2ce01ee6", "patch": "@@ -195,7 +195,7 @@ println!(\"{}\", x);\n \n The problem here is is bit more subtle and interesting. We want Rust to\n reject this program for the following reason: We have a live shared reference `x`\n-to a descendent of `data` when we try to take a mutable reference to `data`\n+to a descendant of `data` when we try to take a mutable reference to `data`\n to `push`. This would create an aliased mutable reference, which would\n violate the *second* rule of references.\n "}, {"sha": "9ce191ee5897f1b2567294b744a9cd03560c910a", "filename": "src/doc/reference.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=a6aa6456eea69328c4fcdba043f1f17a2ce01ee6", "patch": "@@ -419,7 +419,7 @@ The two values of the boolean type are written `true` and `false`.\n ### Symbols\n \n Symbols are a general class of printable [tokens](#tokens) that play structural\n-roles in a variety of grammar productions. They are catalogued here for\n+roles in a variety of grammar productions. They are cataloged here for\n completeness as the set of remaining miscellaneous printable tokens that do not\n otherwise appear as [unary operators](#unary-operator-expressions), [binary\n operators](#binary-operator-expressions), or [keywords][keywords]."}, {"sha": "5c4e6c0b9dc2aeb866da46123de1ed1542e6cba3", "filename": "src/doc/trpl/dining-philosophers.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6/src%2Fdoc%2Ftrpl%2Fdining-philosophers.md", "raw_url": "https://github.com/rust-lang/rust/raw/a6aa6456eea69328c4fcdba043f1f17a2ce01ee6/src%2Fdoc%2Ftrpl%2Fdining-philosophers.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fdining-philosophers.md?ref=a6aa6456eea69328c4fcdba043f1f17a2ce01ee6", "patch": "@@ -45,7 +45,7 @@ Now, let\u2019s imagine this sequence of events:\n 6. ... ? All the forks are taken, but nobody can eat!\n \n There are different ways to solve this problem. We\u2019ll get to our solution in\n-the tutorial itself. For now, let\u2019s get started modelling the problem itself.\n+the tutorial itself. For now, let\u2019s get started modeling the problem itself.\n We\u2019ll start with the philosophers:\n \n ```rust"}]}