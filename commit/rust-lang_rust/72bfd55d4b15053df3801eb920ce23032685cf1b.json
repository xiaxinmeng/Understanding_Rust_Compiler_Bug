{"sha": "72bfd55d4b15053df3801eb920ce23032685cf1b", "node_id": "C_kwDOAAsO6NoAKDcyYmZkNTVkNGIxNTA1M2RmMzgwMWViOTIwY2UyMzAzMjY4NWNmMWI", "commit": {"author": {"name": "Tomoaki Kawada", "email": "kawada@kmckk.co.jp", "date": "2023-04-11T03:00:36Z"}, "committer": {"name": "Tomoaki Kawada", "email": "kawada@kmckk.co.jp", "date": "2023-04-11T03:00:36Z"}, "message": "kmc-solid: Implement `Socket::read_buf`", "tree": {"sha": "eca22f0ebf3638c76b3c37bf4e9615fb3a0c939b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eca22f0ebf3638c76b3c37bf4e9615fb3a0c939b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72bfd55d4b15053df3801eb920ce23032685cf1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72bfd55d4b15053df3801eb920ce23032685cf1b", "html_url": "https://github.com/rust-lang/rust/commit/72bfd55d4b15053df3801eb920ce23032685cf1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72bfd55d4b15053df3801eb920ce23032685cf1b/comments", "author": {"login": "kawadakk", "id": 81723441, "node_id": "MDQ6VXNlcjgxNzIzNDQx", "avatar_url": "https://avatars.githubusercontent.com/u/81723441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kawadakk", "html_url": "https://github.com/kawadakk", "followers_url": "https://api.github.com/users/kawadakk/followers", "following_url": "https://api.github.com/users/kawadakk/following{/other_user}", "gists_url": "https://api.github.com/users/kawadakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kawadakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kawadakk/subscriptions", "organizations_url": "https://api.github.com/users/kawadakk/orgs", "repos_url": "https://api.github.com/users/kawadakk/repos", "events_url": "https://api.github.com/users/kawadakk/events{/privacy}", "received_events_url": "https://api.github.com/users/kawadakk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kawadakk", "id": 81723441, "node_id": "MDQ6VXNlcjgxNzIzNDQx", "avatar_url": "https://avatars.githubusercontent.com/u/81723441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kawadakk", "html_url": "https://github.com/kawadakk", "followers_url": "https://api.github.com/users/kawadakk/followers", "following_url": "https://api.github.com/users/kawadakk/following{/other_user}", "gists_url": "https://api.github.com/users/kawadakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kawadakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kawadakk/subscriptions", "organizations_url": "https://api.github.com/users/kawadakk/orgs", "repos_url": "https://api.github.com/users/kawadakk/repos", "events_url": "https://api.github.com/users/kawadakk/events{/privacy}", "received_events_url": "https://api.github.com/users/kawadakk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "194a0bb5d6fbdd36e0df58b4698311bb8fed6bca", "url": "https://api.github.com/repos/rust-lang/rust/commits/194a0bb5d6fbdd36e0df58b4698311bb8fed6bca", "html_url": "https://github.com/rust-lang/rust/commit/194a0bb5d6fbdd36e0df58b4698311bb8fed6bca"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "7d7bfae14329a601d700810511dd635f8e11ebc4", "filename": "library/std/src/sys/solid/net.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/72bfd55d4b15053df3801eb920ce23032685cf1b/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72bfd55d4b15053df3801eb920ce23032685cf1b/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Fnet.rs?ref=72bfd55d4b15053df3801eb920ce23032685cf1b", "patch": "@@ -2,7 +2,7 @@ use super::abi;\n use crate::{\n     cmp,\n     ffi::CStr,\n-    io::{self, ErrorKind, IoSlice, IoSliceMut},\n+    io::{self, BorrowedBuf, BorrowedCursor, ErrorKind, IoSlice, IoSliceMut},\n     mem,\n     net::{Shutdown, SocketAddr},\n     ptr, str,\n@@ -294,19 +294,30 @@ impl Socket {\n         self.0.duplicate().map(Socket)\n     }\n \n-    fn recv_with_flags(&self, buf: &mut [u8], flags: c_int) -> io::Result<usize> {\n+    fn recv_with_flags(&self, mut buf: BorrowedCursor<'_>, flags: c_int) -> io::Result<()> {\n         let ret = cvt(unsafe {\n-            netc::recv(self.0.raw(), buf.as_mut_ptr() as *mut c_void, buf.len(), flags)\n+            netc::recv(self.0.raw(), buf.as_mut().as_mut_ptr().cast(), buf.capacity(), flags)\n         })?;\n-        Ok(ret as usize)\n+        unsafe {\n+            buf.advance(ret as usize);\n+        }\n+        Ok(())\n     }\n \n     pub fn read(&self, buf: &mut [u8]) -> io::Result<usize> {\n-        self.recv_with_flags(buf, 0)\n+        let mut buf = BorrowedBuf::from(buf);\n+        self.recv_with_flags(buf.unfilled(), 0)?;\n+        Ok(buf.len())\n     }\n \n     pub fn peek(&self, buf: &mut [u8]) -> io::Result<usize> {\n-        self.recv_with_flags(buf, MSG_PEEK)\n+        let mut buf = BorrowedBuf::from(buf);\n+        self.recv_with_flags(buf.unfilled(), MSG_PEEK)?;\n+        Ok(buf.len())\n+    }\n+\n+    pub fn read_buf(&self, buf: BorrowedCursor<'_>) -> io::Result<()> {\n+        self.recv_with_flags(buf, 0)\n     }\n \n     pub fn read_vectored(&self, bufs: &mut [IoSliceMut<'_>]) -> io::Result<usize> {"}]}