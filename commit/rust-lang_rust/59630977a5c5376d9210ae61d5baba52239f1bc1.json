{"sha": "59630977a5c5376d9210ae61d5baba52239f1bc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NjMwOTc3YTVjNTM3NmQ5MjEwYWU2MWQ1YmFiYTUyMjM5ZjFiYzE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-04-19T17:50:11Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-04-19T17:50:11Z"}, "message": "Fix some find_path bugs around inner items", "tree": {"sha": "0139b400772d8456844a70bef4821cdb2a8dbf10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0139b400772d8456844a70bef4821cdb2a8dbf10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59630977a5c5376d9210ae61d5baba52239f1bc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59630977a5c5376d9210ae61d5baba52239f1bc1", "html_url": "https://github.com/rust-lang/rust/commit/59630977a5c5376d9210ae61d5baba52239f1bc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59630977a5c5376d9210ae61d5baba52239f1bc1/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0741de87e7697a221b56e9cb458e7c3f81afc9c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0741de87e7697a221b56e9cb458e7c3f81afc9c9", "html_url": "https://github.com/rust-lang/rust/commit/0741de87e7697a221b56e9cb458e7c3f81afc9c9"}], "stats": {"total": 63, "additions": 58, "deletions": 5}, "files": [{"sha": "dc3f2908f8a73e9ed623f5bafbe1879666970229", "filename": "crates/hir_def/src/find_path.rs", "status": "modified", "additions": 58, "deletions": 5, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/59630977a5c5376d9210ae61d5baba52239f1bc1/crates%2Fhir_def%2Fsrc%2Ffind_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59630977a5c5376d9210ae61d5baba52239f1bc1/crates%2Fhir_def%2Fsrc%2Ffind_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ffind_path.rs?ref=59630977a5c5376d9210ae61d5baba52239f1bc1", "patch": "@@ -119,8 +119,7 @@ fn find_path_inner(\n \n     // - if the item is the crate root, return `crate`\n     let root = def_map.crate_root(db);\n-    if item == ItemInNs::Types(ModuleDefId::ModuleId(root)) && def_map.block_id().is_none() {\n-        // FIXME: the `block_id()` check should be unnecessary, but affects the result\n+    if item == ItemInNs::Types(ModuleDefId::ModuleId(root)) {\n         return Some(ModPath::from_segments(PathKind::Crate, Vec::new()));\n     }\n \n@@ -131,7 +130,7 @@ fn find_path_inner(\n     }\n \n     // - if the item is the crate root of a dependency crate, return the name from the extern prelude\n-    for (name, def_id) in def_map.extern_prelude() {\n+    for (name, def_id) in root.def_map(db).extern_prelude() {\n         if item == ItemInNs::Types(*def_id) {\n             let name = scope_name.unwrap_or_else(|| name.clone());\n             return Some(ModPath::from_segments(PathKind::Plain, vec![name]));\n@@ -298,6 +297,7 @@ fn find_local_import_locations(\n     let data = &def_map[from.local_id];\n     let mut worklist =\n         data.children.values().map(|child| def_map.module_id(*child)).collect::<Vec<_>>();\n+    // FIXME: do we need to traverse out of block expressions here?\n     for ancestor in iter::successors(from.containing_module(db), |m| m.containing_module(db)) {\n         worklist.push(ancestor);\n     }\n@@ -947,10 +947,11 @@ fn main() {\n     $0\n }\n             \"#,\n+            // FIXME: these could use fewer/better prefixes\n             \"module::CompleteMe\",\n-            \"module::CompleteMe\",\n             \"crate::module::CompleteMe\",\n-            \"self::module::CompleteMe\",\n+            \"crate::module::CompleteMe\",\n+            \"crate::module::CompleteMe\",\n         )\n     }\n \n@@ -977,6 +978,28 @@ mod bar {\n         )\n     }\n \n+    #[test]\n+    fn from_inside_module_with_inner_items() {\n+        check_found_path(\n+            r#\"\n+mod baz {\n+    pub struct Foo {}\n+}\n+\n+mod bar {\n+    fn bar() {\n+        fn inner() {}\n+        $0\n+    }\n+}\n+            \"#,\n+            \"crate::baz::Foo\",\n+            \"crate::baz::Foo\",\n+            \"crate::baz::Foo\",\n+            \"crate::baz::Foo\",\n+        )\n+    }\n+\n     #[test]\n     fn recursive_pub_mod_reexport() {\n         cov_mark::check!(recursive_imports);\n@@ -1004,4 +1027,34 @@ pub mod name {\n             \"self::name::AsName\",\n         );\n     }\n+\n+    #[test]\n+    fn extern_crate() {\n+        check_found_path(\n+            r#\"\n+//- /main.rs crate:main deps:dep\n+$0\n+//- /dep.rs crate:dep\n+\"#,\n+            \"dep\",\n+            \"dep\",\n+            \"dep\",\n+            \"dep\",\n+        );\n+\n+        check_found_path(\n+            r#\"\n+//- /main.rs crate:main deps:dep\n+fn f() {\n+    fn inner() {}\n+    $0\n+}\n+//- /dep.rs crate:dep\n+\"#,\n+            \"dep\",\n+            \"dep\",\n+            \"dep\",\n+            \"dep\",\n+        );\n+    }\n }"}]}