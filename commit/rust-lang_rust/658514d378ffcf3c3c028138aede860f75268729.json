{"sha": "658514d378ffcf3c3c028138aede860f75268729", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ODUxNGQzNzhmZmNmM2MzYzAyODEzOGFlZGU4NjBmNzUyNjg3Mjk=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-15T14:35:31Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-15T14:35:31Z"}, "message": "Don't fold consecutive modules with item lists", "tree": {"sha": "047db3520f64256f2665f0d8a6a16f8993966cd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/047db3520f64256f2665f0d8a6a16f8993966cd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/658514d378ffcf3c3c028138aede860f75268729", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/658514d378ffcf3c3c028138aede860f75268729", "html_url": "https://github.com/rust-lang/rust/commit/658514d378ffcf3c3c028138aede860f75268729", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/658514d378ffcf3c3c028138aede860f75268729/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "190f37afab27a890291a11d9dda2658e676c47bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/190f37afab27a890291a11d9dda2658e676c47bd", "html_url": "https://github.com/rust-lang/rust/commit/190f37afab27a890291a11d9dda2658e676c47bd"}], "stats": {"total": 46, "additions": 26, "deletions": 20}, "files": [{"sha": "60f552fd92b0770f4fd74519128a6202c365670e", "filename": "crates/ide/src/folding_ranges.rs", "status": "modified", "additions": 26, "deletions": 20, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/658514d378ffcf3c3c028138aede860f75268729/crates%2Fide%2Fsrc%2Ffolding_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/658514d378ffcf3c3c028138aede860f75268729/crates%2Fide%2Fsrc%2Ffolding_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ffolding_ranges.rs?ref=658514d378ffcf3c3c028138aede860f75268729", "patch": "@@ -92,12 +92,18 @@ pub(crate) fn folding_ranges(file: &SourceFile) -> Vec<Fold> {\n                 }\n \n                 // Fold groups of mods\n-                if node.kind() == MODULE && !has_visibility(&node) && !visited_mods.contains(&node)\n-                {\n-                    if let Some(range) =\n-                        contiguous_range_for_group_unless(&node, has_visibility, &mut visited_mods)\n+                if let Some(module) = ast::Module::cast(node.clone()) {\n+                    if !has_visibility(&node)\n+                        && !visited_mods.contains(&node)\n+                        && module.item_list().is_none()\n                     {\n-                        res.push(Fold { range, kind: FoldKind::Mods })\n+                        if let Some(range) = contiguous_range_for_group_unless(\n+                            &node,\n+                            has_visibility,\n+                            &mut visited_mods,\n+                        ) {\n+                            res.push(Fold { range, kind: FoldKind::Mods })\n+                        }\n                     }\n                 }\n \n@@ -328,7 +334,8 @@ fn main() <fold block>{\n     //! because it has another flavor</fold>\n     <fold comment>/* As does this\n     multiline comment */</fold>\n-}</fold>\"#,\n+}</fold>\n+\"#,\n         );\n     }\n \n@@ -341,9 +348,7 @@ use std::<fold block>{\n     vec,\n     io as iop\n }</fold>;\n-\n-fn main() <fold block>{\n-}</fold>\"#,\n+\"#,\n         );\n     }\n \n@@ -368,8 +373,13 @@ pub not_folding_single_next;\n mod with_attribute;\n mod with_attribute_next;</fold>\n \n-fn main() <fold block>{\n-}</fold>\"#,\n+mod inline0 {}\n+mod inline1 {}\n+\n+mod inline2 <fold block>{\n+\n+}</fold>\n+\"#,\n         );\n     }\n \n@@ -387,9 +397,7 @@ use std::f64;</fold>\n <fold imports>use std::collections::HashMap;\n // Some random comment\n use std::collections::VecDeque;</fold>\n-\n-fn main() <fold block>{\n-}</fold>\"#,\n+\"#,\n         );\n     }\n \n@@ -409,9 +417,7 @@ use std::collections::<fold block>{\n     VecDeque,\n }</fold>;\n // Some random comment\n-\n-fn main() <fold block>{\n-}</fold>\"#,\n+\"#,\n         );\n     }\n \n@@ -531,7 +537,7 @@ calling_function(x,y);\n             r#\"\n <fold consts>const FIRST_CONST: &str = \"first\";\n const SECOND_CONST: &str = \"second\";</fold>\n-            \"#,\n+\"#,\n         )\n     }\n \n@@ -541,7 +547,7 @@ const SECOND_CONST: &str = \"second\";</fold>\n             r#\"\n <fold statics>static FIRST_STATIC: &str = \"first\";\n static SECOND_STATIC: &str = \"second\";</fold>\n-            \"#,\n+\"#,\n         )\n     }\n \n@@ -574,7 +580,7 @@ fn foo()<fold returntype>-> (\n )</fold> { (true, true) }\n \n fn bar() -> (bool, bool) { (true, true) }\n-            \"#,\n+\"#,\n         )\n     }\n }"}]}