{"sha": "e565329144fec8ab2aa87afa170c41dc17ad018e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1NjUzMjkxNDRmZWM4YWIyYWE4N2FmYTE3MGM0MWRjMTdhZDAxOGU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-11-18T20:34:22Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-11-18T23:23:05Z"}, "message": "Add error code documentation", "tree": {"sha": "b8a2036dd6b9eb342a476acf4d293f692703aaa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8a2036dd6b9eb342a476acf4d293f692703aaa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e565329144fec8ab2aa87afa170c41dc17ad018e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e565329144fec8ab2aa87afa170c41dc17ad018e", "html_url": "https://github.com/rust-lang/rust/commit/e565329144fec8ab2aa87afa170c41dc17ad018e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e565329144fec8ab2aa87afa170c41dc17ad018e/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7678779a168d7b49cc22b073c8b68feb6d02d99", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7678779a168d7b49cc22b073c8b68feb6d02d99", "html_url": "https://github.com/rust-lang/rust/commit/a7678779a168d7b49cc22b073c8b68feb6d02d99"}], "stats": {"total": 84, "additions": 82, "deletions": 2}, "files": [{"sha": "325b79ba25f68626621ed737edcadcc2c485381a", "filename": "src/librustc_error_codes/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e565329144fec8ab2aa87afa170c41dc17ad018e/src%2Flibrustc_error_codes%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e565329144fec8ab2aa87afa170c41dc17ad018e/src%2Flibrustc_error_codes%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes.rs?ref=e565329144fec8ab2aa87afa170c41dc17ad018e", "patch": "@@ -381,6 +381,7 @@ E0700: include_str!(\"./error_codes/E0700.md\"),\n E0701: include_str!(\"./error_codes/E0701.md\"),\n E0704: include_str!(\"./error_codes/E0704.md\"),\n E0705: include_str!(\"./error_codes/E0705.md\"),\n+E0706: include_str!(\"./error_codes/E0706.md\"),\n E0712: include_str!(\"./error_codes/E0712.md\"),\n E0713: include_str!(\"./error_codes/E0713.md\"),\n E0714: include_str!(\"./error_codes/E0714.md\"),\n@@ -595,7 +596,6 @@ E0744: include_str!(\"./error_codes/E0744.md\"),\n     E0696, // `continue` pointing to a labeled block\n //  E0702, // replaced with a generic attribute input check\n     E0703, // invalid ABI\n-    E0706, // `async fn` in trait\n //  E0707, // multiple elided lifetimes used in arguments of `async fn`\n     E0708, // `async` non-`move` closures with parameters are not currently\n            // supported"}, {"sha": "1eb1271a9e82e191680cf6155fc27479309d396f", "filename": "src/librustc_error_codes/error_codes/E0706.md", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/e565329144fec8ab2aa87afa170c41dc17ad018e/src%2Flibrustc_error_codes%2Ferror_codes%2FE0706.md", "raw_url": "https://github.com/rust-lang/rust/raw/e565329144fec8ab2aa87afa170c41dc17ad018e/src%2Flibrustc_error_codes%2Ferror_codes%2FE0706.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0706.md?ref=e565329144fec8ab2aa87afa170c41dc17ad018e", "patch": "@@ -0,0 +1,78 @@\n+ `async fn`s are not yet supported in Rust.\n+\n+Erroneous code example:\n+\n+```compile_fail,edition2018\n+trait T {\n+    // Neither case is currently supported.\n+    async fn foo() {}\n+    async fn bar(&self) {}\n+}\n+```\n+\n+`async fn`s normally return an `impl Future`, making the following two examples equivalent:\n+\n+```edition2018,ignore (example-of-desugaring-equivalence)\n+async fn foo() -> User {\n+    unimplemented!()\n+}\n+// The async fn above gets desugared as follows:\n+fn foo(&self) -> impl Future<Output = User> + '_ {\n+    unimplemented!()\n+}\n+```\n+\n+But when it comes to supporting this in traits, there are [a few implementation\n+issues][async-is-hard], one of which is that returning `impl Trait` in traits is not supported,\n+as it would require [Generic Associated Types] to be supported:\n+\n+```edition2018,ignore (example-of-desugaring-equivalence)\n+impl MyDatabase {\n+    async fn get_user(&self) -> User {\n+        unimplemented!()\n+    }\n+}\n+\n+impl MyDatabase {\n+    fn get_user(&self) -> impl Future<Output = User> + '_ {\n+        unimplemented!()\n+    }\n+}\n+```\n+\n+Until these issues are resolved, you can use the [`async-trait` crate], which allows you to use\n+this feature by sidesteping the language feature issue by desugaring to \"boxed futures\"\n+(`Pin<Box<dyn Future + Send + 'async>>`):\n+\n+```edition2018,ignore (example-of-desugaring-equivalence)\n+#[async_trait]\n+impl MyDatabase {\n+    async fn get_user(&self) -> User {\n+        unimplemented!()\n+    }\n+}\n+\n+// The annotated impl above gets desugared as follows:\n+impl MyDatabase {\n+    fn get_user<'async>(\n+        &'async self,\n+    ) -> Pin<Box<dyn std::future::Future<Output = User> + Send + 'async>>\n+    where\n+        Self: Sync + 'async,\n+    {\n+        unimplemented!()\n+    }\n+}\n+```\n+\n+Note that using these trait methods will result in a heap allocation per-function-call. This is not\n+a significant cost for the vast majority of applications, but should be considered when deciding\n+whether to use this functionality in the public API of a low-level function that is expected to be\n+called millions of times a second.\n+\n+You might be interested in visiting the [async book] for further information.\n+\n+[`async-trait` crate]: https://crates.io/crates/async-trait\n+[async-is-hard]: https://smallcultfollowing.com/babysteps/blog/2019/10/26/async-fn-in-traits-are-hard/\n+[Generic Associated Types]: https://github.com/rust-lang/rust/issues/44265\n+[async book]: https://rust-lang.github.io/async-book/07_workarounds/06_async_in_traits.html\n\\ No newline at end of file"}, {"sha": "9acfa2cc0691294b5de863e4bcb7d1d0aabe96b7", "filename": "src/test/ui/async-await/async-trait-fn.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e565329144fec8ab2aa87afa170c41dc17ad018e/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e565329144fec8ab2aa87afa170c41dc17ad018e/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr?ref=e565329144fec8ab2aa87afa170c41dc17ad018e", "patch": "@@ -18,3 +18,4 @@ LL |     async fn bar(&self) {}\n \n error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0706`."}, {"sha": "bb09ee9a9329633eac10d4738506d82582ca4d98", "filename": "src/test/ui/async-await/edition-deny-async-fns-2015.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e565329144fec8ab2aa87afa170c41dc17ad018e/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e565329144fec8ab2aa87afa170c41dc17ad018e/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr?ref=e565329144fec8ab2aa87afa170c41dc17ad018e", "patch": "@@ -63,4 +63,5 @@ LL |     async fn foo() {}\n \n error: aborting due to 10 previous errors\n \n-For more information about this error, try `rustc --explain E0670`.\n+Some errors have detailed explanations: E0670, E0706.\n+For more information about an error, try `rustc --explain E0670`."}]}