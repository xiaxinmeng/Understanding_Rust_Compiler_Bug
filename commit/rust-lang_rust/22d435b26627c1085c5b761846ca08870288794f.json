{"sha": "22d435b26627c1085c5b761846ca08870288794f", "node_id": "C_kwDOAAsO6NoAKDIyZDQzNWIyNjYyN2MxMDg1YzViNzYxODQ2Y2EwODg3MDI4ODc5NGY", "commit": {"author": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2022-10-25T13:18:50Z"}, "committer": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2022-10-25T13:18:50Z"}, "message": "Remove `lib.register_*` and `src/docs*` in `cargo dev update_lints`", "tree": {"sha": "17e4d37c1ee0608f90ad624297e8caff366c98b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17e4d37c1ee0608f90ad624297e8caff366c98b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22d435b26627c1085c5b761846ca08870288794f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22d435b26627c1085c5b761846ca08870288794f", "html_url": "https://github.com/rust-lang/rust/commit/22d435b26627c1085c5b761846ca08870288794f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22d435b26627c1085c5b761846ca08870288794f/comments", "author": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a425015c07db8a68bdfc44c38601cc974fb4a4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a425015c07db8a68bdfc44c38601cc974fb4a4d", "html_url": "https://github.com/rust-lang/rust/commit/9a425015c07db8a68bdfc44c38601cc974fb4a4d"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "837618c9294b7511f4cb8a22b79c127a23bc7f95", "filename": "clippy_dev/src/update_lints.rs", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/22d435b26627c1085c5b761846ca08870288794f/clippy_dev%2Fsrc%2Fupdate_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22d435b26627c1085c5b761846ca08870288794f/clippy_dev%2Fsrc%2Fupdate_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fupdate_lints.rs?ref=22d435b26627c1085c5b761846ca08870288794f", "patch": "@@ -36,6 +36,60 @@ pub enum UpdateMode {\n pub fn update(update_mode: UpdateMode) {\n     let (lints, deprecated_lints, renamed_lints) = gather_all();\n     generate_lint_files(update_mode, &lints, &deprecated_lints, &renamed_lints);\n+    remove_old_files(update_mode);\n+}\n+\n+/// Remove files no longer needed after <https://github.com/rust-lang/rust-clippy/pull/9541>\n+/// that may be reintroduced unintentionally\n+///\n+/// FIXME: This is a temporary measure that should be removed when there are no more PRs that\n+/// include the stray files\n+fn remove_old_files(update_mode: UpdateMode) {\n+    let mut failed = false;\n+    let mut remove_file = |path: &Path| match update_mode {\n+        UpdateMode::Check => {\n+            if path.exists() {\n+                failed = true;\n+                println!(\"unexpected file: {}\", path.display());\n+            }\n+        },\n+        UpdateMode::Change => {\n+            if fs::remove_file(path).is_ok() {\n+                println!(\"removed file: {}\", path.display());\n+            }\n+        },\n+    };\n+\n+    let files = [\n+        \"clippy_lints/src/lib.register_all.rs\",\n+        \"clippy_lints/src/lib.register_cargo.rs\",\n+        \"clippy_lints/src/lib.register_complexity.rs\",\n+        \"clippy_lints/src/lib.register_correctness.rs\",\n+        \"clippy_lints/src/lib.register_internal.rs\",\n+        \"clippy_lints/src/lib.register_lints.rs\",\n+        \"clippy_lints/src/lib.register_nursery.rs\",\n+        \"clippy_lints/src/lib.register_pedantic.rs\",\n+        \"clippy_lints/src/lib.register_perf.rs\",\n+        \"clippy_lints/src/lib.register_restriction.rs\",\n+        \"clippy_lints/src/lib.register_style.rs\",\n+        \"clippy_lints/src/lib.register_suspicious.rs\",\n+        \"src/docs.rs\",\n+    ];\n+\n+    for file in files {\n+        remove_file(Path::new(file));\n+    }\n+\n+    if let Ok(docs_dir) = fs::read_dir(\"src/docs\") {\n+        for doc_file in docs_dir {\n+            let path = doc_file.unwrap().path();\n+            remove_file(&path);\n+        }\n+    }\n+\n+    if failed {\n+        exit_with_failure();\n+    }\n }\n \n fn generate_lint_files("}]}