{"sha": "a7a6c0461da71ac838708d2b34a629443f860b60", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3YTZjMDQ2MWRhNzFhYzgzODcwOGQyYjM0YTYyOTQ0M2Y4NjBiNjA=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-05T19:05:28Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-05T20:03:02Z"}, "message": "Add environment variable to deactivate wiki links", "tree": {"sha": "f9fda75c1ac5589e88eec7ebda3a8f127284e960", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9fda75c1ac5589e88eec7ebda3a8f127284e960"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7a6c0461da71ac838708d2b34a629443f860b60", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXVIV4AAoJEF5CfHlMukXouwgP/0aYDcQsRHDZsjYwHh1gEAIV\n1JAykc1BMF7ucqxBVV27LWWYsB6ZL3lDCeuW8yFqKO1ruxHP5jVV4yUgSj/yvsoL\nEwhFvk/YwcGkOiI/vth86/XWKY7NM+/wgASeRu0X5rzo4OT5VlE9Vcq3aM1q7hfb\nkhoThSUE9qF5AzMr/n0fdFSuImJJL8jNKtdxn3Nejc+U0f5A0mpqnOE49sW0AUir\n59tdvIBluXbPyEyAmcbzhMIYIkFxXS9DUmsRW1SKYvkHfqkx4Ktv/unmPtSA6ESt\nCqy2XrQgPrjCK1jyDPiJXi3YeruA/exr8sJp+7PCc2YB7v61tiSAIoG/TMOEsGG9\nMJJN+nD1Wc64czkKv3lwEXe9j72g3WBXMgr0+FueDg+LrS2CBi013sr5uS4Rkk31\nd8+VXURiun6WXKYkRWIQU2jnHFR99AeLp2dhTMoNMX93/NYTHBVf5536QHTUec10\nc+4kz8wJ55nUk/bajLtvEmvk3LO7XMpkTBohFtLnXh039ZtLt+IMgR8sdOAhn2QI\neWHVwaQaNBUfz4O14DLgkymx0OVS+lrIX2+YCJrqcT1cqijUJ7vfUaRfuSCVDxj7\nKGl2bc8QF3QkfZsoqZqsUMyW5x8sejLWmygTygPGza86RR0S5z/buCcYFz2WG5AR\n9DIJLC4mN/AV5BTeiHvp\n=Iknh\n-----END PGP SIGNATURE-----", "payload": "tree f9fda75c1ac5589e88eec7ebda3a8f127284e960\nparent 24dc8377df06407a84f3858ab98ba0a175c11bc7\nauthor mcarton <cartonmartin+git@gmail.com> 1465153528 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1465156982 +0200\n\nAdd environment variable to deactivate wiki links\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7a6c0461da71ac838708d2b34a629443f860b60", "html_url": "https://github.com/rust-lang/rust/commit/a7a6c0461da71ac838708d2b34a629443f860b60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7a6c0461da71ac838708d2b34a629443f860b60/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24dc8377df06407a84f3858ab98ba0a175c11bc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/24dc8377df06407a84f3858ab98ba0a175c11bc7", "html_url": "https://github.com/rust-lang/rust/commit/24dc8377df06407a84f3858ab98ba0a175c11bc7"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "51bf4ad2c15c3a6ba038da678ac04ff9ae4e1d30", "filename": "CHANGELOG.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7a6c0461da71ac838708d2b34a629443f860b60/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/a7a6c0461da71ac838708d2b34a629443f860b60/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=a7a6c0461da71ac838708d2b34a629443f860b60", "patch": "@@ -1,6 +1,10 @@\n # Change Log\n All notable changes to this project will be documented in this file.\n \n+## 0.0.74 \u2014 TBR\n+* Add the `CLIPPY_DISABLE_WIKI_LINKS` environment variable to deactivate the\n+  \u201cfor further information visit *wiki-link*\u201d message.\n+\n ## 0.0.73 \u2014 2016-06-05\n * Fix false positives in [`useless_let_if_seq`]\n "}, {"sha": "8f699d2f74174b715e29551fc7f779206f6602b1", "filename": "README.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a7a6c0461da71ac838708d2b34a629443f860b60/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/a7a6c0461da71ac838708d2b34a629443f860b60/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=a7a6c0461da71ac838708d2b34a629443f860b60", "patch": "@@ -318,6 +318,9 @@ You can also specify the path to the configuration file with:\n #![plugin(clippy(conf_file=\"path/to/clippy's/configuration\"))]\n ```\n \n+To deactivate the \u201cfor further information visit *wiki-link*\u201d message you can\n+define the `CLIPPY_DISABLE_WIKI_LINKS` environment variable.\n+\n ## Link with clippy service\n \n `clippy-service` is a rust web initiative providing `rust-clippy` as a web service."}, {"sha": "beec30b32de57062c7028690b8e2a5dafdbb9599", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a7a6c0461da71ac838708d2b34a629443f860b60/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a6c0461da71ac838708d2b34a629443f860b60/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=a7a6c0461da71ac838708d2b34a629443f860b60", "patch": "@@ -10,6 +10,7 @@ use rustc::traits;\n use rustc::ty::subst::Subst;\n use rustc::ty;\n use std::borrow::Cow;\n+use std::env;\n use std::mem;\n use std::ops::{Deref, DerefMut};\n use std::str::FromStr;\n@@ -473,8 +474,10 @@ impl<'a> Deref for DiagnosticWrapper<'a> {\n \n impl<'a> DiagnosticWrapper<'a> {\n     fn wiki_link(&mut self, lint: &'static Lint) {\n-        self.help(&format!(\"for further information visit https://github.com/Manishearth/rust-clippy/wiki#{}\",\n-                           lint.name_lower()));\n+        if env::var(\"CLIPPY_DISABLE_WIKI_LINKS\").is_err() {\n+            self.help(&format!(\"for further information visit https://github.com/Manishearth/rust-clippy/wiki#{}\",\n+                               lint.name_lower()));\n+        }\n     }\n }\n "}, {"sha": "fc220d1ac22279dba26b796c2f7747d9d3d760a3", "filename": "tests/compile-fail/booleans.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a7a6c0461da71ac838708d2b34a629443f860b60/tests%2Fcompile-fail%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a6c0461da71ac838708d2b34a629443f860b60/tests%2Fcompile-fail%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fbooleans.rs?ref=a7a6c0461da71ac838708d2b34a629443f860b60", "patch": "@@ -10,29 +10,27 @@ fn main() {\n     let d: bool = unimplemented!();\n     let e: bool = unimplemented!();\n     let _ = a && b || a; //~ ERROR this boolean expression contains a logic bug\n-    //~| HELP for further information visit\n     //~| HELP this expression can be optimized out\n     //~| HELP it would look like the following\n     //~| SUGGESTION let _ = a;\n     let _ = !(a && b);\n     let _ = !true; //~ ERROR this boolean expression can be simplified\n-    //~| HELP for further information visit\n+    //~| HELP try\n     //~| SUGGESTION let _ = false;\n     let _ = !false; //~ ERROR this boolean expression can be simplified\n-    //~| HELP for further information visit\n+    //~| HELP try\n     //~| SUGGESTION let _ = true;\n     let _ = !!a; //~ ERROR this boolean expression can be simplified\n-    //~| HELP for further information visit\n+    //~| HELP try\n     //~| SUGGESTION let _ = a;\n \n     let _ = false && a; //~ ERROR this boolean expression contains a logic bug\n-    //~| HELP for further information visit\n     //~| HELP this expression can be optimized out\n     //~| HELP it would look like the following\n     //~| SUGGESTION let _ = false;\n \n     let _ = false || a; //~ ERROR this boolean expression can be simplified\n-    //~| HELP for further information visit\n+    //~| HELP try\n     //~| SUGGESTION let _ = a;\n \n     // don't lint on cfgs\n@@ -43,7 +41,7 @@ fn main() {\n     let _ = !(a && b || c);\n \n     let _ = !(!a && b); //~ ERROR this boolean expression can be simplified\n-    //~| HELP for further information visit\n+    //~| HELP try\n     //~| SUGGESTION let _ = !b || a;\n }\n \n@@ -55,32 +53,29 @@ fn equality_stuff() {\n     let d: i32 = unimplemented!();\n     let e: i32 = unimplemented!();\n     let _ = a == b && a != b; //~ ERROR this boolean expression contains a logic bug\n-    //~| HELP for further information visit\n     //~| HELP this expression can be optimized out\n     //~| HELP it would look like the following\n     //~| SUGGESTION let _ = false;\n     let _ = a == b && c == 5 && a == b; //~ ERROR this boolean expression can be simplified\n-    //~| HELP for further information visit\n+    //~| HELP try\n     //~| SUGGESTION let _ = a == b && c == 5;\n     let _ = a == b && c == 5 && b == a; //~ ERROR this boolean expression can be simplified\n-    //~| HELP for further information visit\n+    //~| HELP try\n     //~| SUGGESTION let _ = a == b && c == 5;\n     //~| HELP try\n     //~| SUGGESTION let _ = !(c != 5 || a != b);\n     let _ = a < b && a >= b; //~ ERROR this boolean expression contains a logic bug\n-    //~| HELP for further information visit\n     //~| HELP this expression can be optimized out\n     //~| HELP it would look like the following\n     //~| SUGGESTION let _ = false;\n     let _ = a > b && a <= b; //~ ERROR this boolean expression contains a logic bug\n-    //~| HELP for further information visit\n     //~| HELP this expression can be optimized out\n     //~| HELP it would look like the following\n     //~| SUGGESTION let _ = false;\n     let _ = a > b && a == b;\n \n     let _ = a != b || !(a != b || c == d); //~ ERROR this boolean expression can be simplified\n-    //~| HELP for further information visit\n+    //~| HELP try\n     //~| SUGGESTION let _ = c != d || a != b;\n     //~| HELP try\n     //~| SUGGESTION let _ = !(a == b && c == d);"}, {"sha": "212dc2a96d5058c6b0ea7337605936e08339220d", "filename": "tests/compile-fail/non_expressive_names.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a7a6c0461da71ac838708d2b34a629443f860b60/tests%2Fcompile-fail%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a6c0461da71ac838708d2b34a629443f860b60/tests%2Fcompile-fail%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fnon_expressive_names.rs?ref=a7a6c0461da71ac838708d2b34a629443f860b60", "patch": "@@ -28,10 +28,8 @@ fn main() {\n     //~^ NOTE: existing binding defined here\n     let bpple: i32; //~ ERROR: name is too similar\n     //~| HELP: separate the discriminating character by an underscore like: `b_pple`\n-    //~| HELP: for further information visit\n     let cpple: i32; //~ ERROR: name is too similar\n     //~| HELP: separate the discriminating character by an underscore like: `c_pple`\n-    //~| HELP: for further information visit\n \n     let a_bar: i32;\n     let b_bar: i32;\n@@ -56,13 +54,11 @@ fn main() {\n \n     let blubx: i32; //~ NOTE: existing binding defined here\n     let bluby: i32; //~ ERROR: name is too similar\n-    //~| HELP: for further information visit\n     //~| HELP: separate the discriminating character by an underscore like: `blub_y`\n \n     let cake: i32; //~ NOTE: existing binding defined here\n     let cakes: i32;\n     let coke: i32; //~ ERROR: name is too similar\n-    //~| HELP: for further information visit\n \n     match 5 {\n         cheese @ 1 => {},\n@@ -81,12 +77,10 @@ fn main() {\n     let xyz1abc: i32; //~ NOTE: existing binding defined here\n     let xyz2abc: i32;\n     let xyzeabc: i32; //~ ERROR: name is too similar\n-    //~| HELP: for further information visit\n \n     let parser: i32; //~ NOTE: existing binding defined here\n     let parsed: i32;\n     let parsee: i32; //~ ERROR: name is too similar\n-    //~| HELP: for further information visit\n     //~| HELP: separate the discriminating character by an underscore like: `parse_e`\n \n     let setter: i32;\n@@ -101,7 +95,6 @@ fn foo() {\n     let Foo { apple, bpple } = unimplemented!();\n     let Foo { apple: spring, //~NOTE existing binding defined here\n         bpple: sprang } = unimplemented!(); //~ ERROR: name is too similar\n-    //~^HELP for further information\n }\n \n #[derive(Clone, Debug)]\n@@ -136,18 +129,14 @@ fn bla() {\n         }\n         {\n             let e: i32; //~ ERROR: 5th binding whose name is just one char\n-            //~| HELP: for further information visit\n         }\n         {\n             let e: i32; //~ ERROR: 5th binding whose name is just one char\n-            //~| HELP: for further information visit\n             let f: i32; //~ ERROR: 6th binding whose name is just one char\n-            //~| HELP: for further information visit\n         }\n         match 5 {\n             1 => println!(\"\"),\n             e => panic!(), //~ ERROR: 5th binding whose name is just one char\n-            //~| HELP: for further information visit\n         }\n         match 5 {\n             1 => println!(\"\"),"}, {"sha": "42a7dd96ae293ae738b7f1999002e2228a8447f7", "filename": "tests/compile-test.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a7a6c0461da71ac838708d2b34a629443f860b60/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a6c0461da71ac838708d2b34a629443f860b60/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=a7a6c0461da71ac838708d2b34a629443f860b60", "patch": "@@ -1,7 +1,7 @@\n extern crate compiletest_rs as compiletest;\n \n use std::path::PathBuf;\n-use std::env::{var, temp_dir};\n+use std::env::{set_var, var, temp_dir};\n \n fn run_mode(dir: &'static str, mode: &'static str) {\n     let mut config = compiletest::default_config();\n@@ -23,16 +23,22 @@ fn run_mode(dir: &'static str, mode: &'static str) {\n     compiletest::run_tests(&config);\n }\n \n+fn prepare_env() {\n+    set_var(\"CLIPPY_DISABLE_WIKI_LINKS\", \"true\");\n+}\n+\n #[test]\n #[cfg(not(feature = \"test-regex_macros\"))]\n fn compile_test() {\n+    prepare_env();\n     run_mode(\"run-pass\", \"run-pass\");\n     run_mode(\"compile-fail\", \"compile-fail\");\n }\n \n #[test]\n #[cfg(feature = \"test-regex_macros\")]\n fn compile_test() {\n+    prepare_env();\n     run_mode(\"run-pass-regex_macros\", \"run-pass\");\n     run_mode(\"compile-fail-regex_macros\", \"compile-fail\");\n }"}]}