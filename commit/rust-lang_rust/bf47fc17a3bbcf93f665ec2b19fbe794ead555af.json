{"sha": "bf47fc17a3bbcf93f665ec2b19fbe794ead555af", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmNDdmYzE3YTNiYmNmOTNmNjY1ZWMyYjE5ZmJlNzk0ZWFkNTU1YWY=", "commit": {"author": {"name": "Ayaz Hafiz", "email": "ayaz.hafiz.1@gmail.com", "date": "2020-07-16T00:50:43Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-08-18T02:55:26Z"}, "message": "Ensure that doc url hash IDs are scrolled to on page load\n\nI broke this a few weeks ago so I'll fix it\n\nDemo: https://5f0fa445faca4aff5f580029--naughty-borg-09b903.netlify.app/?version=master&search=#brace_style", "tree": {"sha": "5e7ae193c4bcfb1c39486c4611d49b7deb6da611", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e7ae193c4bcfb1c39486c4611d49b7deb6da611"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf47fc17a3bbcf93f665ec2b19fbe794ead555af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf47fc17a3bbcf93f665ec2b19fbe794ead555af", "html_url": "https://github.com/rust-lang/rust/commit/bf47fc17a3bbcf93f665ec2b19fbe794ead555af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf47fc17a3bbcf93f665ec2b19fbe794ead555af/comments", "author": {"login": "ayazhafiz", "id": 20735482, "node_id": "MDQ6VXNlcjIwNzM1NDgy", "avatar_url": "https://avatars.githubusercontent.com/u/20735482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayazhafiz", "html_url": "https://github.com/ayazhafiz", "followers_url": "https://api.github.com/users/ayazhafiz/followers", "following_url": "https://api.github.com/users/ayazhafiz/following{/other_user}", "gists_url": "https://api.github.com/users/ayazhafiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayazhafiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayazhafiz/subscriptions", "organizations_url": "https://api.github.com/users/ayazhafiz/orgs", "repos_url": "https://api.github.com/users/ayazhafiz/repos", "events_url": "https://api.github.com/users/ayazhafiz/events{/privacy}", "received_events_url": "https://api.github.com/users/ayazhafiz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3195d6c2b7fd2f958d823eb32bce0fb350bf6ec5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3195d6c2b7fd2f958d823eb32bce0fb350bf6ec5", "html_url": "https://github.com/rust-lang/rust/commit/3195d6c2b7fd2f958d823eb32bce0fb350bf6ec5"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "1f299b918205587885347b60ef92f75a9792fa95", "filename": "docs/index.html", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/bf47fc17a3bbcf93f665ec2b19fbe794ead555af/docs%2Findex.html", "raw_url": "https://github.com/rust-lang/rust/raw/bf47fc17a3bbcf93f665ec2b19fbe794ead555af/docs%2Findex.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Findex.html?ref=bf47fc17a3bbcf93f665ec2b19fbe794ead555af", "patch": "@@ -108,7 +108,8 @@\n                 shouldStable: false,\n                 version: versionNumber,\n                 oldVersion: undefined,\n-                versionOptions: ['master']\n+                versionOptions: ['master'],\n+                scrolledOnce: false,\n               },\n               asyncComputed: {\n                 async outputHtml() {\n@@ -156,18 +157,20 @@\n                   renderer.heading = function(text, level) {\n                     const id = htmlToId(text);\n                     return `<h${level}>\n-                              <a href=\"#${id}\" name=\"${id}\" class=\"header-link\">${text}</a>\n+                              <a id=\"${id}\" href=\"#${id}\" name=\"${id}\" class=\"header-link\">${text}</a>\n                             </h${level}>`;\n                   };\n \n-                  return marked.parser(ast, {\n+                  const html = marked.parser(ast, {\n                     highlight(code, lang) {\n                       return hljs.highlight(lang ? lang : 'rust', code).value;\n                     },\n                     headerIds: true,\n                     headerPrefix: '',\n                     renderer,\n                   });\n+                  document.dispatchEvent(new Event('htmlbuilt'));\n+                  return html;\n                 }\n               },\n               created: async function() {\n@@ -178,12 +181,15 @@\n                   .filter(tag => tag.startsWith('v'));\n                 this.versionOptions = this.versionOptions.concat(tagOptions);\n               },\n-              mounted() {\n+              updated: function() {\n                 if (UrlHash === '') return;\n-                const target = document.querySelector(`#${UrlHash}`);\n-                if (target != null) {\n-                  target.scrollIntoView(true);\n-                }\n+                this.$nextTick(() => {\n+                  const target = document.querySelector(`#${UrlHash}`);\n+                  if (target != null && !this.scrolledOnce) {\n+                    target.scrollIntoView(true);\n+                    this.scrolledOnce = true;\n+                  }\n+                });\n               }\n             });\n             const extractDepthOnes = (ast) => {"}]}