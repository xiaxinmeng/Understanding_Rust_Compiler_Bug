{"sha": "747abb86db0ed0eeb97e5373a2111c767eb8c173", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0N2FiYjg2ZGIwZWQwZWViOTdlNTM3M2EyMTExYzc2N2ViOGMxNzM=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-02-06T16:01:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-06T16:01:43Z"}, "message": "Rollup merge of #81434 - ssomers:btree_drain_filter_doc_update, r=dtolnay\n\nBTree: fix documentation of unstable public members\n\nAs rightfully requested in #62924 & #70530.\nr? `@Mark-Simulacrum`", "tree": {"sha": "3083b95fe6467048d01d968030e5d21d45f90fff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3083b95fe6467048d01d968030e5d21d45f90fff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/747abb86db0ed0eeb97e5373a2111c767eb8c173", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgHr1oCRBK7hj4Ov3rIwAAdHIIAJm+mOEnvggQ+6eC2Z62b6C8\ng8SamaYutHLIOW5dj+0hEMKpozrNfHaClMYiJceG0m5Hiaw2l21/Lp09g1l7O4+Z\nA+9T4NEws3Msmmq8SXh9qOTLLaJO4Ko4nwR8+uDyWL9O9ouDqbMtv6xyQnb57mVW\nvM34Ow0lnEiDAUUe1VrBXXVC092xv+P/LUvr7QgRahpqqEx40Sl2aZj75A9s65gv\ny/LtV4rQN6JfqLASbf4lVA9s3CoFDpkin9boK41kWwTkbTNg9reT0QCayzHpqoUM\n6CdeCL+Zy3IevpTEOGA7zPop965DWewq7nIJOcU3263IacY7xPu1HZvObS1ro0I=\n=VhkY\n-----END PGP SIGNATURE-----\n", "payload": "tree 3083b95fe6467048d01d968030e5d21d45f90fff\nparent 7acf9ecf4f0c9e53f8a69c404b68509ae56e105a\nparent f0b8166870bd73a872642f090ae6b88e2bef922a\nauthor Jonas Schievink <jonasschievink@gmail.com> 1612627303 +0100\ncommitter GitHub <noreply@github.com> 1612627303 +0100\n\nRollup merge of #81434 - ssomers:btree_drain_filter_doc_update, r=dtolnay\n\nBTree: fix documentation of unstable public members\n\nAs rightfully requested in #62924 & #70530.\nr? `@Mark-Simulacrum`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/747abb86db0ed0eeb97e5373a2111c767eb8c173", "html_url": "https://github.com/rust-lang/rust/commit/747abb86db0ed0eeb97e5373a2111c767eb8c173", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/747abb86db0ed0eeb97e5373a2111c767eb8c173/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7acf9ecf4f0c9e53f8a69c404b68509ae56e105a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7acf9ecf4f0c9e53f8a69c404b68509ae56e105a", "html_url": "https://github.com/rust-lang/rust/commit/7acf9ecf4f0c9e53f8a69c404b68509ae56e105a"}, {"sha": "f0b8166870bd73a872642f090ae6b88e2bef922a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0b8166870bd73a872642f090ae6b88e2bef922a", "html_url": "https://github.com/rust-lang/rust/commit/f0b8166870bd73a872642f090ae6b88e2bef922a"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "d5352a877a34482e8bcb49a3ea9b75ec23afb482", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/747abb86db0ed0eeb97e5373a2111c767eb8c173/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747abb86db0ed0eeb97e5373a2111c767eb8c173/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=747abb86db0ed0eeb97e5373a2111c767eb8c173", "patch": "@@ -1151,21 +1151,23 @@ impl<K, V> BTreeMap<K, V> {\n         right\n     }\n \n-    /// Creates an iterator which uses a closure to determine if an element should be removed.\n-    ///\n-    /// If the closure returns true, the element is removed from the map and yielded.\n-    /// If the closure returns false, or panics, the element remains in the map and will not be\n-    /// yielded.\n-    ///\n-    /// Note that `drain_filter` lets you mutate every value in the filter closure, regardless of\n-    /// whether you choose to keep or remove it.\n-    ///\n-    /// If the iterator is only partially consumed or not consumed at all, each of the remaining\n-    /// elements will still be subjected to the closure and removed and dropped if it returns true.\n-    ///\n-    /// It is unspecified how many more elements will be subjected to the closure\n-    /// if a panic occurs in the closure, or a panic occurs while dropping an element,\n-    /// or if the `DrainFilter` value is leaked.\n+    /// Creates an iterator that visits all elements (key-value pairs) in\n+    /// ascending key order and uses a closure to determine if an element should\n+    /// be removed. If the closure returns `true`, the element is removed from\n+    /// the map and yielded. If the closure returns `false`, or panics, the\n+    /// element remains in the map and will not be yielded.\n+    ///\n+    /// The iterator also lets you mutate the value of each element in the\n+    /// closure, regardless of whether you choose to keep or remove it.\n+    ///\n+    /// If the iterator is only partially consumed or not consumed at all, each\n+    /// of the remaining elements is still subjected to the closure, which may\n+    /// change its value and, by returning `true`, have the element removed and\n+    /// dropped.\n+    ///\n+    /// It is unspecified how many more elements will be subjected to the\n+    /// closure if a panic occurs in the closure, or a panic occurs while\n+    /// dropping an element, or if the `DrainFilter` value is leaked.\n     ///\n     /// # Examples\n     ///"}, {"sha": "8072762d8791742a306fa3b45cae5c688bdf4e85", "filename": "library/alloc/src/collections/btree/set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/747abb86db0ed0eeb97e5373a2111c767eb8c173/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747abb86db0ed0eeb97e5373a2111c767eb8c173/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs?ref=747abb86db0ed0eeb97e5373a2111c767eb8c173", "patch": "@@ -679,7 +679,7 @@ impl<T> BTreeSet<T> {\n     /// use std::collections::BTreeSet;\n     ///\n     /// let mut map = BTreeSet::new();\n-    /// assert_eq!(map.first(), None);\n+    /// assert_eq!(map.last(), None);\n     /// map.insert(1);\n     /// assert_eq!(map.last(), Some(&1));\n     /// map.insert(2);"}]}