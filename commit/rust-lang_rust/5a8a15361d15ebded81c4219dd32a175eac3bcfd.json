{"sha": "5a8a15361d15ebded81c4219dd32a175eac3bcfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhOGExNTM2MWQxNWViZGVkODFjNDIxOWRkMzJhMTc1ZWFjM2JjZmQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-24T15:26:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-24T15:26:42Z"}, "message": "Merge branch 'master' into no-two-phase-matches", "tree": {"sha": "09ef90397b8007dc9f95f621f323db36fac0902f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09ef90397b8007dc9f95f621f323db36fac0902f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a8a15361d15ebded81c4219dd32a175eac3bcfd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJccreyCRBK7hj4Ov3rIwAAdHIIAFOmdrOQN9vsfAd+O3YLx17c\n2kstqKSynzfiWmyXXZTOOqyXlJhAjKZdNEW0j8v85rFQYWdkyiOI0HfmYwWk7Pda\nq/NZOh8FLDCxYdzjANjgA6i1A2pyrAySS1C4vizi9Or7pRGssEAvjdRrw2YL5f4b\nJ7jd0WvLz6rzJh0YniOW7oHQDh4+COxZ+vbkBDQKxN0voAqrX2vQmaPPbeljMnMM\nLntcABEBR5atCG+gECunNStBDO6XEhhTy4/ZtRO3kX4cAWwf69ni+s+LdGB7s5/1\nKaTmDsaePNwNJCrdYIAEVYDB3L+6abbPw6TcHizbD8UcasFws6IcEp0FmQTE28c=\n=ahe+\n-----END PGP SIGNATURE-----\n", "payload": "tree 09ef90397b8007dc9f95f621f323db36fac0902f\nparent acc304c0bd3f5459c104be99a3270d7909988b55\nparent fa4c04036f450a557f2e39a210fc0110be244c5a\nauthor Ralf Jung <post@ralfj.de> 1551022002 +0100\ncommitter GitHub <noreply@github.com> 1551022002 +0100\n\nMerge branch 'master' into no-two-phase-matches"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a8a15361d15ebded81c4219dd32a175eac3bcfd", "html_url": "https://github.com/rust-lang/rust/commit/5a8a15361d15ebded81c4219dd32a175eac3bcfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a8a15361d15ebded81c4219dd32a175eac3bcfd/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acc304c0bd3f5459c104be99a3270d7909988b55", "url": "https://api.github.com/repos/rust-lang/rust/commits/acc304c0bd3f5459c104be99a3270d7909988b55", "html_url": "https://github.com/rust-lang/rust/commit/acc304c0bd3f5459c104be99a3270d7909988b55"}, {"sha": "fa4c04036f450a557f2e39a210fc0110be244c5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa4c04036f450a557f2e39a210fc0110be244c5a", "html_url": "https://github.com/rust-lang/rust/commit/fa4c04036f450a557f2e39a210fc0110be244c5a"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "091e10fde3c24f5a5984710a7ee9fba7137e21e5", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a8a15361d15ebded81c4219dd32a175eac3bcfd/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/5a8a15361d15ebded81c4219dd32a175eac3bcfd/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=5a8a15361d15ebded81c4219dd32a175eac3bcfd", "patch": "@@ -1 +1 @@\n-nightly-2019-02-15\n+nightly-2019-02-24"}, {"sha": "e2049d9480322b4337f7356f3b5dd2a81016d0d1", "filename": "tests/run-pass/btreemap.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5a8a15361d15ebded81c4219dd32a175eac3bcfd/tests%2Frun-pass%2Fbtreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a8a15361d15ebded81c4219dd32a175eac3bcfd/tests%2Frun-pass%2Fbtreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbtreemap.rs?ref=5a8a15361d15ebded81c4219dd32a175eac3bcfd", "patch": "@@ -1,3 +1,5 @@\n+use std::collections::{BTreeMap, BTreeSet};\n+\n #[derive(PartialEq, Eq, PartialOrd, Ord)]\n pub enum Foo {\n     A(&'static str),\n@@ -6,11 +8,22 @@ pub enum Foo {\n }\n \n pub fn main() {\n-    let mut b = std::collections::BTreeSet::new();\n+    let mut b = BTreeSet::new();\n     b.insert(Foo::A(\"\\'\"));\n     b.insert(Foo::A(\"/=\"));\n     b.insert(Foo::A(\"#\"));\n     b.insert(Foo::A(\"0o\"));\n     assert!(b.remove(&Foo::A(\"/=\")));\n     assert!(!b.remove(&Foo::A(\"/=\")));\n+\n+    // Also test a lower-alignment type, where the NodeHeader overlaps with\n+    // the keys.\n+    let mut b = BTreeSet::new();\n+    b.insert(1024);\n+    b.insert(7);\n+\n+    let mut b = BTreeMap::new();\n+    b.insert(\"bar\", 1024);\n+    b.insert(\"baz\", 7);\n+    for _val in b.iter_mut() {}\n }"}]}