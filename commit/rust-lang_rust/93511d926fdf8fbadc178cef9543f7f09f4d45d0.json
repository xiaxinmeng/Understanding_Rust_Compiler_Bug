{"sha": "93511d926fdf8fbadc178cef9543f7f09f4d45d0", "node_id": "C_kwDOAAsO6NoAKDkzNTExZDkyNmZkZjhmYmFkYzE3OGNlZjk1NDNmN2YwOWY0ZDQ1ZDA", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2021-12-15T03:39:23Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2021-12-15T06:32:14Z"}, "message": "Remove unnecessary sigils around `Symbol::as_str()` calls.", "tree": {"sha": "e36a6181d7ba2d899bc8743c3b0515846c59bc96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e36a6181d7ba2d899bc8743c3b0515846c59bc96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93511d926fdf8fbadc178cef9543f7f09f4d45d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93511d926fdf8fbadc178cef9543f7f09f4d45d0", "html_url": "https://github.com/rust-lang/rust/commit/93511d926fdf8fbadc178cef9543f7f09f4d45d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93511d926fdf8fbadc178cef9543f7f09f4d45d0/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75f6118ad1920487117c5eef361d2edd817bb27f", "url": "https://api.github.com/repos/rust-lang/rust/commits/75f6118ad1920487117c5eef361d2edd817bb27f", "html_url": "https://github.com/rust-lang/rust/commit/75f6118ad1920487117c5eef361d2edd817bb27f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "c09be5f75979fc530fa6d800257e4230d438a745", "filename": "src/driver/aot.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/93511d926fdf8fbadc178cef9543f7f09f4d45d0/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93511d926fdf8fbadc178cef9543f7f09f4d45d0/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=93511d926fdf8fbadc178cef9543f7f09f4d45d0", "patch": "@@ -84,7 +84,7 @@ fn reuse_workproduct_for_cgu(\n     let work_product = cgu.work_product(tcx);\n     if let Some(saved_file) = &work_product.saved_file {\n         let obj_out =\n-            tcx.output_filenames(()).temp_path(OutputType::Object, Some(&cgu.name().as_str()));\n+            tcx.output_filenames(()).temp_path(OutputType::Object, Some(cgu.name().as_str()));\n         object = Some(obj_out.clone());\n         let source_file = rustc_incremental::in_incr_comp_dir_sess(&tcx.sess, &saved_file);\n         if let Err(err) = rustc_fs_util::link_or_copy(&source_file, &obj_out) {\n@@ -176,7 +176,7 @@ fn module_codegen(\n         )\n     });\n \n-    codegen_global_asm(tcx, &cgu.name().as_str(), &cx.global_asm);\n+    codegen_global_asm(tcx, cgu.name().as_str(), &cx.global_asm);\n \n     codegen_result\n }\n@@ -207,7 +207,7 @@ pub(crate) fn run_aot(\n         cgus.iter()\n             .map(|cgu| {\n                 let cgu_reuse = determine_cgu_reuse(tcx, cgu);\n-                tcx.sess.cgu_reuse_tracker.set_actual_reuse(&cgu.name().as_str(), cgu_reuse);\n+                tcx.sess.cgu_reuse_tracker.set_actual_reuse(cgu.name().as_str(), cgu_reuse);\n \n                 match cgu_reuse {\n                     _ if backend_config.disable_incr_cache => {}"}]}