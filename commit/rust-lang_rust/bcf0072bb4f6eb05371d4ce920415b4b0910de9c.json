{"sha": "bcf0072bb4f6eb05371d4ce920415b4b0910de9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjZjAwNzJiYjRmNmViMDUzNzFkNGNlOTIwNDE1YjRiMDkxMGRlOWM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-13T18:14:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-13T18:14:20Z"}, "message": "Merge #10199\n\n10199: fix: Fix Cargo.toml change detection r=lnicola a=lnicola\n\nMaybe fixes #9546\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "ed3ef9ab9c1e73debddf966ad300f0428b4dfc6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed3ef9ab9c1e73debddf966ad300f0428b4dfc6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcf0072bb4f6eb05371d4ce920415b4b0910de9c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhP5T9CRBK7hj4Ov3rIwAA5yoIAFp4/Lqf+/nUx5agQ2YjS3bN\nSkWwPU8gaqQy+wBxuZdP5mYiBlxq6MeTuRwxjMgAeULJGsEZ5opO1GAHqdSi14Zz\nHAqXhXOYjcB7tbuiUr17bdg7RW98rnbgwpbHIiyfCnsKtyzWjp6tJT/jwPZTjqLl\niuaq6Wq2yWUkggJeFsW8XBoHVjvtizI60/q+T7w8Tj+tdFUIHWi/AqjRg/ns5Ylg\nboeoKM8yK/1FPHBz8cUaXK261Hmpde0Dky6WxrIkQ+Mv7DvxfB/6qNdnZKCv3Byd\nwkeUMC+kJD/y9A4lut3/7dMWP7FpjwJOyjRFtf3FqYK6AoIxruPZOE4sTN7FGi8=\n=1WRg\n-----END PGP SIGNATURE-----\n", "payload": "tree ed3ef9ab9c1e73debddf966ad300f0428b4dfc6d\nparent c3eb646487ba5acd301d26f304433978abf8ce62\nparent 4d7a3bb5c72a8ecc5f9fe84f29425bc868908f0a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1631556860 +0000\ncommitter GitHub <noreply@github.com> 1631556860 +0000\n\nMerge #10199\n\n10199: fix: Fix Cargo.toml change detection r=lnicola a=lnicola\n\nMaybe fixes #9546\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcf0072bb4f6eb05371d4ce920415b4b0910de9c", "html_url": "https://github.com/rust-lang/rust/commit/bcf0072bb4f6eb05371d4ce920415b4b0910de9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcf0072bb4f6eb05371d4ce920415b4b0910de9c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3eb646487ba5acd301d26f304433978abf8ce62", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3eb646487ba5acd301d26f304433978abf8ce62", "html_url": "https://github.com/rust-lang/rust/commit/c3eb646487ba5acd301d26f304433978abf8ce62"}, {"sha": "4d7a3bb5c72a8ecc5f9fe84f29425bc868908f0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d7a3bb5c72a8ecc5f9fe84f29425bc868908f0a", "html_url": "https://github.com/rust-lang/rust/commit/4d7a3bb5c72a8ecc5f9fe84f29425bc868908f0a"}], "stats": {"total": 114, "additions": 52, "deletions": 62}, "files": [{"sha": "8e947b55402b56073991eaa3979ce6f02da9a8be", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bcf0072bb4f6eb05371d4ce920415b4b0910de9c/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcf0072bb4f6eb05371d4ce920415b4b0910de9c/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=bcf0072bb4f6eb05371d4ce920415b4b0910de9c", "patch": "@@ -25,7 +25,7 @@ use crate::{\n     main_loop::Task,\n     mem_docs::MemDocs,\n     op_queue::OpQueue,\n-    reload::SourceRootConfig,\n+    reload::{self, SourceRootConfig},\n     thread_pool::TaskPool,\n     to_proto::url_from_abs_path,\n     Result,\n@@ -175,7 +175,8 @@ impl GlobalState {\n     pub(crate) fn process_changes(&mut self) -> bool {\n         let _p = profile::span(\"GlobalState::process_changes\");\n         let mut fs_changes = Vec::new();\n-        let mut has_fs_changes = false;\n+        // A file was added or deleted\n+        let mut has_structure_changes = false;\n \n         let change = {\n             let mut change = Change::new();\n@@ -186,10 +187,14 @@ impl GlobalState {\n             }\n \n             for file in changed_files {\n-                if file.is_created_or_deleted() {\n-                    if let Some(path) = vfs.file_path(file.file_id).as_path() {\n-                        fs_changes.push((path.to_path_buf(), file.change_kind));\n-                        has_fs_changes = true;\n+                if let Some(path) = vfs.file_path(file.file_id).as_path() {\n+                    let path = path.to_path_buf();\n+                    if reload::should_refresh_for_change(&path, file.change_kind) {\n+                        self.fetch_workspaces_queue.request_op();\n+                    }\n+                    fs_changes.push((path, file.change_kind));\n+                    if file.is_created_or_deleted() {\n+                        has_structure_changes = true;\n                     }\n                 }\n \n@@ -208,15 +213,14 @@ impl GlobalState {\n                 };\n                 change.change_file(file.file_id, text);\n             }\n-            if has_fs_changes {\n+            if has_structure_changes {\n                 let roots = self.source_root_config.partition(vfs);\n                 change.set_roots(roots);\n             }\n             change\n         };\n \n         self.analysis_host.apply_change(change);\n-        self.maybe_refresh(&fs_changes);\n         true\n     }\n "}, {"sha": "0c48b22bdbaa58dbba03b4395b416828fb75a2f5", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bcf0072bb4f6eb05371d4ce920415b4b0910de9c/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcf0072bb4f6eb05371d4ce920415b4b0910de9c/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=bcf0072bb4f6eb05371d4ce920415b4b0910de9c", "patch": "@@ -21,7 +21,7 @@ use crate::{\n     handlers, lsp_ext,\n     lsp_utils::{apply_document_changes, is_cancelled, notification_is, Progress},\n     mem_docs::DocumentData,\n-    reload::{BuildDataProgress, ProjectWorkspaceProgress},\n+    reload::{self, BuildDataProgress, ProjectWorkspaceProgress},\n     Result,\n };\n \n@@ -693,7 +693,9 @@ impl GlobalState {\n                     flycheck.update();\n                 }\n                 if let Ok(abs_path) = from_proto::abs_path(&params.text_document.uri) {\n-                    this.maybe_refresh(&[(abs_path, ChangeKind::Modify)]);\n+                    if reload::should_refresh_for_change(&abs_path, ChangeKind::Modify) {\n+                        this.fetch_workspaces_queue.request_op();\n+                    }\n                 }\n                 Ok(())\n             })?"}, {"sha": "f7ec3707c0aecb152e8bc304ac5bd7be3c04a6da", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 36, "deletions": 52, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/bcf0072bb4f6eb05371d4ce920415b4b0910de9c/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcf0072bb4f6eb05371d4ce920415b4b0910de9c/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=bcf0072bb4f6eb05371d4ce920415b4b0910de9c", "patch": "@@ -58,58 +58,6 @@ impl GlobalState {\n             .raw_database_mut()\n             .set_enable_proc_attr_macros(self.config.expand_proc_attr_macros());\n     }\n-    pub(crate) fn maybe_refresh(&mut self, changes: &[(AbsPathBuf, ChangeKind)]) {\n-        if !changes.iter().any(|(path, kind)| is_interesting(path, *kind)) {\n-            return;\n-        }\n-        tracing::info!(\n-            \"Requesting workspace reload because of the following changes: {}\",\n-            itertools::join(\n-                changes\n-                    .iter()\n-                    .filter(|(path, kind)| is_interesting(path, *kind))\n-                    .map(|(path, kind)| format!(\"{}: {:?}\", path.display(), kind)),\n-                \", \"\n-            )\n-        );\n-        self.fetch_workspaces_queue.request_op();\n-\n-        fn is_interesting(path: &AbsPath, change_kind: ChangeKind) -> bool {\n-            const IMPLICIT_TARGET_FILES: &[&str] = &[\"build.rs\", \"src/main.rs\", \"src/lib.rs\"];\n-            const IMPLICIT_TARGET_DIRS: &[&str] = &[\"src/bin\", \"examples\", \"tests\", \"benches\"];\n-            let file_name = path.file_name().unwrap_or_default();\n-\n-            if file_name == \"Cargo.toml\" || file_name == \"Cargo.lock\" {\n-                return true;\n-            }\n-            if change_kind == ChangeKind::Modify {\n-                return false;\n-            }\n-            if path.extension().unwrap_or_default() != \"rs\" {\n-                return false;\n-            }\n-            if IMPLICIT_TARGET_FILES.iter().any(|it| path.as_ref().ends_with(it)) {\n-                return true;\n-            }\n-            let parent = match path.parent() {\n-                Some(it) => it,\n-                None => return false,\n-            };\n-            if IMPLICIT_TARGET_DIRS.iter().any(|it| parent.as_ref().ends_with(it)) {\n-                return true;\n-            }\n-            if file_name == \"main.rs\" {\n-                let grand_parent = match parent.parent() {\n-                    Some(it) => it,\n-                    None => return false,\n-                };\n-                if IMPLICIT_TARGET_DIRS.iter().any(|it| grand_parent.as_ref().ends_with(it)) {\n-                    return true;\n-                }\n-            }\n-            false\n-        }\n-    }\n \n     pub(crate) fn current_status(&self) -> lsp_ext::ServerStatusParams {\n         let mut status = lsp_ext::ServerStatusParams {\n@@ -617,3 +565,39 @@ pub(crate) fn load_proc_macro(client: Option<&ProcMacroServer>, path: &AbsPath)\n         }\n     }\n }\n+\n+pub(crate) fn should_refresh_for_change(path: &AbsPath, change_kind: ChangeKind) -> bool {\n+    const IMPLICIT_TARGET_FILES: &[&str] = &[\"build.rs\", \"src/main.rs\", \"src/lib.rs\"];\n+    const IMPLICIT_TARGET_DIRS: &[&str] = &[\"src/bin\", \"examples\", \"tests\", \"benches\"];\n+    let file_name = path.file_name().unwrap_or_default();\n+\n+    if file_name == \"Cargo.toml\" || file_name == \"Cargo.lock\" {\n+        return true;\n+    }\n+    if change_kind == ChangeKind::Modify {\n+        return false;\n+    }\n+    if path.extension().unwrap_or_default() != \"rs\" {\n+        return false;\n+    }\n+    if IMPLICIT_TARGET_FILES.iter().any(|it| path.as_ref().ends_with(it)) {\n+        return true;\n+    }\n+    let parent = match path.parent() {\n+        Some(it) => it,\n+        None => return false,\n+    };\n+    if IMPLICIT_TARGET_DIRS.iter().any(|it| parent.as_ref().ends_with(it)) {\n+        return true;\n+    }\n+    if file_name == \"main.rs\" {\n+        let grand_parent = match parent.parent() {\n+            Some(it) => it,\n+            None => return false,\n+        };\n+        if IMPLICIT_TARGET_DIRS.iter().any(|it| grand_parent.as_ref().ends_with(it)) {\n+            return true;\n+        }\n+    }\n+    false\n+}"}]}