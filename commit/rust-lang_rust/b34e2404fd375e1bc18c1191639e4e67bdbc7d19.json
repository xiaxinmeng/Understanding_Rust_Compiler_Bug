{"sha": "b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "node_id": "C_kwDOAAsO6NoAKGIzNGUyNDA0ZmQzNzVlMWJjMThjMTE5MTYzOWU0ZTY3YmRiYzdkMTk", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-08-12T04:44:07Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-08-13T04:52:16Z"}, "message": "Update `@!has` name in tests", "tree": {"sha": "eddb11bee894f0a05292ea6a5597e8289e0c69bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eddb11bee894f0a05292ea6a5597e8289e0c69bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "html_url": "https://github.com/rust-lang/rust/commit/b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9db6061d64fbec7470f4e4419d16c47fe9aeb322", "url": "https://api.github.com/repos/rust-lang/rust/commits/9db6061d64fbec7470f4e4419d16c47fe9aeb322", "html_url": "https://github.com/rust-lang/rust/commit/9db6061d64fbec7470f4e4419d16c47fe9aeb322"}], "stats": {"total": 254, "additions": 127, "deletions": 127}, "files": [{"sha": "4c8d02310955972b193f230aeecd500f342eef7e", "filename": "src/test/rustdoc/all.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fall.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -24,5 +24,5 @@ mod private_module {\n }\n \n // @has foo/all.html '//a[@href=\"struct.ReexportedStruct.html\"]' 'ReexportedStruct'\n-// @!has foo/all.html 'private_module'\n+// @!hasraw foo/all.html 'private_module'\n pub use private_module::ReexportedStruct;"}, {"sha": "97b7739b4c975f83794ea27bb64648cfaab68614", "filename": "src/test/rustdoc/assoc-consts.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fassoc-consts.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -5,7 +5,7 @@ pub trait Foo {\n     const FOO: usize = 12 + 1;\n     // @has - '//*[@id=\"associatedconstant.FOO_NO_DEFAULT\"]' 'const FOO_NO_DEFAULT: bool'\n     const FOO_NO_DEFAULT: bool;\n-    // @!has - FOO_HIDDEN\n+    // @!hasraw - FOO_HIDDEN\n     #[doc(hidden)]\n     const FOO_HIDDEN: u8 = 0;\n }\n@@ -18,7 +18,7 @@ impl Foo for Bar {\n     const FOO: usize = 12;\n     // @has - '//*[@id=\"associatedconstant.FOO_NO_DEFAULT\"]' 'const FOO_NO_DEFAULT: bool'\n     const FOO_NO_DEFAULT: bool = false;\n-    // @!has - FOO_HIDDEN\n+    // @!hasraw - FOO_HIDDEN\n     #[doc(hidden)]\n     const FOO_HIDDEN: u8 = 0;\n }\n@@ -50,9 +50,9 @@ impl Bar {\n }\n \n impl Bar {\n-    // @!has assoc_consts/struct.Bar.html 'BAR_PRIVATE'\n+    // @!hasraw assoc_consts/struct.Bar.html 'BAR_PRIVATE'\n     const BAR_PRIVATE: char = 'a';\n-    // @!has assoc_consts/struct.Bar.html 'BAR_HIDDEN'\n+    // @!hasraw assoc_consts/struct.Bar.html 'BAR_HIDDEN'\n     #[doc(hidden)]\n     pub const BAR_HIDDEN: &'static str = \"a\";\n }"}, {"sha": "594501b22b142dbd5f74c17dad09d70642b87b88", "filename": "src/test/rustdoc/const-display.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fconst-display.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fconst-display.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-display.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -20,7 +20,7 @@ pub const fn foo() -> u32 { 42 }\n pub const unsafe fn foo_unsafe() -> u32 { 42 }\n \n // @has 'foo/fn.foo2.html' '//pre' 'pub const fn foo2() -> u32'\n-// @!has - '//span[@class=\"since\"]'\n+// @!hasraw - '//span[@class=\"since\"]'\n #[unstable(feature = \"humans\", issue = \"none\")]\n pub const fn foo2() -> u32 { 42 }\n \n@@ -32,7 +32,7 @@ pub const fn bar2() -> u32 { 42 }\n \n \n // @has 'foo/fn.foo2_gated.html' '//pre' 'pub const unsafe fn foo2_gated() -> u32'\n-// @!has - '//span[@class=\"since\"]'\n+// @!hasraw - '//span[@class=\"since\"]'\n #[unstable(feature = \"foo2\", issue = \"none\")]\n pub const unsafe fn foo2_gated() -> u32 { 42 }\n \n@@ -43,7 +43,7 @@ pub const unsafe fn foo2_gated() -> u32 { 42 }\n pub const unsafe fn bar2_gated() -> u32 { 42 }\n \n // @has 'foo/fn.bar_not_gated.html' '//pre' 'pub const unsafe fn bar_not_gated() -> u32'\n-// @!has - '//span[@class=\"since\"]'\n+// @!hasraw - '//span[@class=\"since\"]'\n pub const unsafe fn bar_not_gated() -> u32 { 42 }\n \n pub struct Foo;"}, {"sha": "e419d2631f6847e8824084a8cf44852d272d6dd1", "filename": "src/test/rustdoc/deprecated-impls.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fdeprecated-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fdeprecated-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdeprecated-impls.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -75,7 +75,7 @@ impl Bar for Foo1 {\n \n     // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.7: fn_def_def_with_doc'\n     // @hasraw - 'fn_def_def_with_doc short'\n-    // @!has - 'fn_def_def_with_doc full'\n+    // @!hasraw - 'fn_def_def_with_doc full'\n \n     // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.8: fn_def_def_without_doc'\n }\n@@ -86,7 +86,7 @@ pub struct Foo2;\n impl Bar for Foo2 {\n     // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.3: fn_empty_with_doc'\n     // @hasraw - 'fn_empty_with_doc short'\n-    // @!has - 'fn_empty_with_doc full'\n+    // @!hasraw - 'fn_empty_with_doc full'\n     fn fn_empty_with_doc() {}\n \n     // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.4: fn_empty_without_doc'\n@@ -99,7 +99,7 @@ impl Bar for Foo2 {\n \n     // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.5: fn_def_with_doc'\n     // @hasraw - 'fn_def_with_doc short'\n-    // @!has - 'fn_def_with_doc full'\n+    // @!hasraw - 'fn_def_with_doc full'\n     fn fn_def_with_doc() {}\n \n     // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.6: fn_def_without_doc'\n@@ -112,7 +112,7 @@ impl Bar for Foo2 {\n \n     // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.7: fn_def_def_with_doc'\n     // @hasraw - 'fn_def_def_with_doc short'\n-    // @!has - 'fn_def_def_with_doc full'\n+    // @!hasraw - 'fn_def_def_with_doc full'\n \n     // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.0.8: fn_def_def_without_doc'\n }"}, {"sha": "d8241ab96f6ddce6036fddd835845156a70100bb", "filename": "src/test/rustdoc/empty-section.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fempty-section.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fempty-section.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fempty-section.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -5,7 +5,7 @@\n pub struct Foo;\n \n // @has foo/struct.Foo.html\n-// @!has - 'Auto Trait Implementations'\n+// @!hasraw - 'Auto Trait Implementations'\n impl !Send for Foo {}\n impl !Sync for Foo {}\n impl !std::marker::Unpin for Foo {}"}, {"sha": "26e2e0e0660088ebb7dc3e937c0acff45bb30b8a", "filename": "src/test/rustdoc/hidden-impls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fhidden-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fhidden-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fhidden-impls.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -11,7 +11,7 @@ pub mod __hidden {\n }\n \n // @has foo/trait.Clone.html\n-// @!has - 'Foo'\n+// @!hasraw - 'Foo'\n // @has implementors/core/clone/trait.Clone.js\n-// @!has - 'Foo'\n+// @!hasraw - 'Foo'\n pub use std::clone::Clone;"}, {"sha": "00a05a7c26f0e9c7e03ded2f0b5ca8124663bb0f", "filename": "src/test/rustdoc/hidden-line.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fhidden-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fhidden-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fhidden-line.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -15,5 +15,5 @@\n /// ```\n pub fn foo() {}\n \n-// @!has hidden_line/fn.foo.html invisible\n+// @!hasraw hidden_line/fn.foo.html invisible\n // @matches - //pre \"#\\[derive\\(PartialEq\\)\\] // Bar\""}, {"sha": "543d8f768a61c393d26f1890fb6ac28b9615fcca", "filename": "src/test/rustdoc/hidden-methods.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fhidden-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fhidden-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fhidden-methods.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -17,13 +17,13 @@ pub mod hidden {\n }\n \n // @has foo/struct.Foo.html\n-// @!has - 'Methods'\n+// @!hasraw - 'Methods'\n // @!has - '//code' 'impl Foo'\n-// @!has - 'this_should_be_hidden'\n+// @!hasraw - 'this_should_be_hidden'\n pub use hidden::Foo;\n \n // @has foo/struct.Bar.html\n-// @!has - 'Methods'\n+// @!hasraw - 'Methods'\n // @!has - '//code' 'impl Bar'\n-// @!has - 'this_should_be_hidden'\n+// @!hasraw - 'this_should_be_hidden'\n pub use hidden::Bar;"}, {"sha": "811827a17feebcc0e301e608b34bec3eff70962f", "filename": "src/test/rustdoc/inline_cross/assoc-items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_cross%2Fassoc-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_cross%2Fassoc-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fassoc-items.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -7,10 +7,10 @@\n extern crate assoc_items;\n \n // @has foo/struct.MyStruct.html\n-// @!has - 'PrivateConst'\n+// @!hasraw - 'PrivateConst'\n // @has - '//*[@id=\"associatedconstant.PublicConst\"]' 'pub const PublicConst: u8'\n // @has - '//*[@class=\"docblock\"]' 'docs for PublicConst'\n-// @!has - 'private_method'\n+// @!hasraw - 'private_method'\n // @has - '//*[@id=\"method.public_method\"]' 'pub fn public_method()'\n // @has - '//*[@class=\"docblock\"]' 'docs for public_method'\n // @has - '//*[@id=\"associatedconstant.ConstNoDefault\"]' 'const ConstNoDefault: i16'"}, {"sha": "28a4f4bac1a4a38006eaa38abb633325e20c88df", "filename": "src/test/rustdoc/inline_cross/hidden-use.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_cross%2Fhidden-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_cross%2Fhidden-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fhidden-use.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -5,8 +5,8 @@\n extern crate rustdoc_hidden;\n \n // @has hidden_use/index.html\n-// @!has - 'rustdoc_hidden'\n-// @!has - 'Bar'\n+// @!hasraw - 'rustdoc_hidden'\n+// @!hasraw - 'Bar'\n // @!has hidden_use/struct.Bar.html\n #[doc(hidden)]\n pub use rustdoc_hidden::Bar;"}, {"sha": "8e1089d60ec5133df76ca86325b12b7eca413745", "filename": "src/test/rustdoc/inline_local/glob-extern-document-private-items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-extern-document-private-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-extern-document-private-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-extern-document-private-items.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -14,7 +14,7 @@ pub use mod1::*;\n // @has foo/index.html\n // @hasraw - \"mod1\"\n // @hasraw - \"public_fn\"\n-// @!has - \"private_fn\"\n+// @!hasraw - \"private_fn\"\n // @has foo/fn.public_fn.html\n // @!has foo/fn.private_fn.html\n "}, {"sha": "c592a4db19d98c42757bf37afe4e4226aaf908b7", "filename": "src/test/rustdoc/inline_local/glob-extern.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-extern.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -10,9 +10,9 @@ mod mod1 {\n pub use mod1::*;\n \n // @has foo/index.html\n-// @!has - \"mod1\"\n+// @!hasraw - \"mod1\"\n // @hasraw - \"public_fn\"\n-// @!has - \"private_fn\"\n+// @!hasraw - \"private_fn\"\n // @has foo/fn.public_fn.html\n // @!has foo/fn.private_fn.html\n "}, {"sha": "d8cbd42343b9d7026af5ad17bbcd1b28632cf18c", "filename": "src/test/rustdoc/inline_local/glob-private-document-private-items.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-private-document-private-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-private-document-private-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-private-document-private-items.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -17,10 +17,10 @@ pub use mod1::*;\n // @has foo/index.html\n // @hasraw - \"mod1\"\n // @hasraw - \"Mod1Public\"\n-// @!has - \"Mod1Private\"\n-// @!has - \"mod2\"\n+// @!hasraw - \"Mod1Private\"\n+// @!hasraw - \"mod2\"\n // @hasraw - \"Mod2Public\"\n-// @!has - \"Mod2Private\"\n+// @!hasraw - \"Mod2Private\"\n // @has foo/struct.Mod1Public.html\n // @!has foo/struct.Mod1Private.html\n // @has foo/struct.Mod2Public.html\n@@ -30,8 +30,8 @@ pub use mod1::*;\n // @hasraw - \"mod2\"\n // @hasraw - \"Mod1Public\"\n // @hasraw - \"Mod1Private\"\n-// @!has - \"Mod2Public\"\n-// @!has - \"Mod2Private\"\n+// @!hasraw - \"Mod2Public\"\n+// @!hasraw - \"Mod2Private\"\n // @has foo/mod1/struct.Mod1Public.html\n // @has foo/mod1/struct.Mod1Private.html\n // @!has foo/mod1/struct.Mod2Public.html"}, {"sha": "303f1d61048893adf0994005e26754c323efe6bf", "filename": "src/test/rustdoc/inline_local/glob-private.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-private.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -13,12 +13,12 @@ mod mod1 {\n pub use mod1::*;\n \n // @has foo/index.html\n-// @!has - \"mod1\"\n+// @!hasraw - \"mod1\"\n // @hasraw - \"Mod1Public\"\n-// @!has - \"Mod1Private\"\n-// @!has - \"mod2\"\n+// @!hasraw - \"Mod1Private\"\n+// @!hasraw - \"mod2\"\n // @hasraw - \"Mod2Public\"\n-// @!has - \"Mod2Private\"\n+// @!hasraw - \"Mod2Private\"\n // @has foo/struct.Mod1Public.html\n // @!has foo/struct.Mod1Private.html\n // @has foo/struct.Mod2Public.html"}, {"sha": "de512fb26e6eff7d43b6282448aff2665480f3e6", "filename": "src/test/rustdoc/inline_local/hidden-use.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_local%2Fhidden-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_local%2Fhidden-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_local%2Fhidden-use.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -3,8 +3,8 @@ mod private {\n }\n \n // @has hidden_use/index.html\n-// @!has - 'private'\n-// @!has - 'Foo'\n+// @!hasraw - 'private'\n+// @!hasraw - 'Foo'\n // @!has hidden_use/struct.Foo.html\n #[doc(hidden)]\n pub use private::Foo;"}, {"sha": "5c33c0037e48ef4d2e6b421ab22909f33297c290", "filename": "src/test/rustdoc/inline_local/macro_by_example.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_local%2Fmacro_by_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_local%2Fmacro_by_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_local%2Fmacro_by_example.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -7,7 +7,7 @@ macro_rules! foo {\n \n // @has macro_by_example/macros/index.html\n pub mod macros {\n-    // @!has - 'pub use foo as bar;'\n+    // @!hasraw - 'pub use foo as bar;'\n     // @has macro_by_example/macros/macro.bar.html\n     // @has - '//*[@class=\"docblock\"]' 'docs for foo'\n     // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.2.3: text'"}, {"sha": "e4429ef33a928801f6c997729dc1593777f8e874", "filename": "src/test/rustdoc/inline_local/please_inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_local%2Fplease_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finline_local%2Fplease_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_local%2Fplease_inline.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -4,7 +4,7 @@ pub mod foo {\n \n // @has please_inline/a/index.html\n pub mod a {\n-    // @!has - 'pub use foo::'\n+    // @!hasraw - 'pub use foo::'\n     // @has please_inline/a/struct.Foo.html\n     #[doc(inline)]\n     pub use foo::Foo;"}, {"sha": "572ec0e1d93d2587d93fb3cca6c89a23a3947357", "filename": "src/test/rustdoc/internal.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finternal.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -2,14 +2,14 @@\n \n // Check that the unstable marker is not added for \"rustc_private\".\n \n-// @!matches internal/index.html \\\n+// @!matchesraw internal/index.html \\\n //      '//*[@class=\"item-right docblock-short\"]/span[@class=\"stab unstable\"]'\n-// @!matches internal/index.html \\\n+// @!matchesraw internal/index.html \\\n //      '//*[@class=\"item-right docblock-short\"]/span[@class=\"stab internal\"]'\n // @matches - '//*[@class=\"item-right docblock-short\"]' 'Docs'\n \n-// @!has internal/struct.S.html '//*[@class=\"stab unstable\"]'\n-// @!has internal/struct.S.html '//*[@class=\"stab internal\"]'\n+// @!hasraw internal/struct.S.html '//*[@class=\"stab unstable\"]'\n+// @!hasraw internal/struct.S.html '//*[@class=\"stab internal\"]'\n /// Docs\n pub struct S;\n "}, {"sha": "08fd1833bcef33ebd373bab41c0cf9fb2dcb67ee", "filename": "src/test/rustdoc/issue-23812.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-23812.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-23812.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-23812.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -17,9 +17,9 @@ doc! {\n \n // @has issue_23812/Foo/index.html\n // @hasraw - 'Outer comment'\n-// @!has - '/// Outer comment'\n+// @!hasraw - '/// Outer comment'\n // @hasraw - 'Inner comment'\n-// @!has - '//! Inner comment'\n+// @!hasraw - '//! Inner comment'\n \n \n doc! {\n@@ -31,6 +31,6 @@ doc! {\n \n // @has issue_23812/Bar/index.html\n // @hasraw - 'Outer block comment'\n-// @!has - '/** Outer block comment */'\n+// @!hasraw - '/** Outer block comment */'\n // @hasraw - 'Inner block comment'\n-// @!has - '/*! Inner block comment */'\n+// @!hasraw - '/*! Inner block comment */'"}, {"sha": "9f2fd9071144fc0776321a3e9102db6d2bb79689", "filename": "src/test/rustdoc/issue-27104.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-27104.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-27104.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-27104.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -3,8 +3,8 @@\n // ignore-cross-compile\n \n // @has issue_27104/index.html\n-// @!has - 'extern crate std'\n-// @!has - 'use std::prelude::'\n+// @!hasraw - 'extern crate std'\n+// @!hasraw - 'use std::prelude::'\n \n // @hasraw - 'pub extern crate empty'\n pub extern crate empty;"}, {"sha": "4364a9649b57b48ac11cfa970d342c13389cbce2", "filename": "src/test/rustdoc/issue-29584.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-29584.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-29584.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-29584.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -4,5 +4,5 @@\n extern crate issue_29584;\n \n // @has issue_29584/struct.Foo.html\n-// @!has - 'impl Bar for'\n+// @!hasraw - 'impl Bar for'\n pub use issue_29584::Foo;"}, {"sha": "3eee374465d2bc4e482ddb161a9febc328704983", "filename": "src/test/rustdoc/issue-31899.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-31899.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-31899.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-31899.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -1,8 +1,8 @@\n // @has issue_31899/index.html\n // @hasraw - 'Make this line a bit longer.'\n-// @!has - 'rust rust-example-rendered'\n-// @!has - 'use ndarray::arr2'\n-// @!has - 'prohibited'\n+// @!hasraw - 'rust rust-example-rendered'\n+// @!hasraw - 'use ndarray::arr2'\n+// @!hasraw - 'prohibited'\n \n /// A tuple or fixed size array that can be used to index an array.\n /// Make this line a bit longer."}, {"sha": "5552300f9fe896db7fc63fb867b850e9af845661", "filename": "src/test/rustdoc/issue-32395.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-32395.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-32395.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-32395.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -3,13 +3,13 @@\n // ignore-cross-compile\n \n // @has variant_struct/enum.Foo.html\n-// @!has - 'pub qux'\n-// @!has - 'pub(crate) qux'\n-// @!has - 'pub Bar'\n+// @!hasraw - 'pub qux'\n+// @!hasraw - 'pub(crate) qux'\n+// @!hasraw - 'pub Bar'\n extern crate variant_struct;\n \n // @has issue_32395/enum.Foo.html\n-// @!has - 'pub qux'\n-// @!has - 'pub(crate) qux'\n-// @!has - 'pub Bar'\n+// @!hasraw - 'pub qux'\n+// @!hasraw - 'pub(crate) qux'\n+// @!hasraw - 'pub Bar'\n pub use variant_struct::Foo;"}, {"sha": "37da3dd1999753fdc14fd5cbb94dfb2eee06f30e", "filename": "src/test/rustdoc/issue-34473.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-34473.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-34473.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-34473.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -5,7 +5,7 @@ mod second {\n }\n \n // @has foo/index.html\n-// @!has - SomeTypeWithLongName\n+// @!hasraw - SomeTypeWithLongName\n // @has foo/struct.SomeType.html\n // @!has foo/struct.SomeTypeWithLongName.html\n pub use second::{SomeTypeWithLongName as SomeType};"}, {"sha": "58a55a73815d02e5b1114cf7dc81c1421d5cea35", "filename": "src/test/rustdoc/issue-41783.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-41783.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-41783.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-41783.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -1,6 +1,6 @@\n // @has issue_41783/struct.Foo.html\n-// @!has - 'space'\n-// @!has - 'comment'\n+// @!hasraw - 'space'\n+// @!hasraw - 'comment'\n // @hasraw - '# <span class=\"ident\">single'\n // @hasraw - '## <span class=\"ident\">double</span>'\n // @hasraw - '### <span class=\"ident\">triple</span>'"}, {"sha": "832140e061b51cefa6fb126fa30fa3ac7a31714e", "filename": "src/test/rustdoc/issue-53689.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-53689.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-53689.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-53689.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -5,7 +5,7 @@\n extern crate issue_53689;\n \n // @has foo/trait.MyTrait.html\n-// @!has - 'MyStruct'\n+// @!hasraw - 'MyStruct'\n // @count - '//*[h3=\"impl<T> MyTrait for T\"]' 1\n pub trait MyTrait {}\n "}, {"sha": "3adeb751d33cb6f661a5d157c9e5cdee216ae1d8", "filename": "src/test/rustdoc/issue-61592.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-61592.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-61592.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-61592.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -5,11 +5,11 @@ extern crate foo;\n // @has issue_61592/index.html\n // @has - '//a[@href=\"#reexports\"]' 'Re-exports'\n // @has - '//code' 'pub use foo::FooTrait as _;'\n-// @!has - '//a[@href=\"trait._.html\"]'\n+// @!hasraw - '//a[@href=\"trait._.html\"]'\n pub use foo::FooTrait as _;\n \n // @has issue_61592/index.html\n // @has - '//a[@href=\"#reexports\"]' 'Re-exports'\n // @has - '//code' 'pub use foo::FooStruct as _;'\n-// @!has - '//a[@href=\"struct._.html\"]'\n+// @!hasraw - '//a[@href=\"struct._.html\"]'\n pub use foo::FooStruct as _;"}, {"sha": "4f2da5e07bee1eea9a5a328f2d71dae58a299d05", "filename": "src/test/rustdoc/issue-89852.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-89852.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fissue-89852.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-89852.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -4,7 +4,7 @@\n #![feature(no_core)]\n \n // @matchesraw 'issue_89852/sidebar-items.js' '\"repro\"'\n-// @!matches 'issue_89852/sidebar-items.js' '\"repro\".*\"repro\"'\n+// @!matchesraw 'issue_89852/sidebar-items.js' '\"repro\".*\"repro\"'\n \n #[macro_export]\n macro_rules! repro {"}, {"sha": "ee3010514417a7da47aaaf9b9761b7ebb166a740", "filename": "src/test/rustdoc/macro-document-private-duplicate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fmacro-document-private-duplicate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fmacro-document-private-duplicate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmacro-document-private-duplicate.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -18,7 +18,7 @@ macro_rules! a_macro {\n }\n \n // @hasraw macro_document_private_duplicate/index.html 'Doc 2.'\n-// @!has macro_document_private_duplicate/macro.a_macro.html 'Doc 2.'\n+// @!hasraw macro_document_private_duplicate/macro.a_macro.html 'Doc 2.'\n /// Doc 2.\n macro_rules! a_macro {\n     () => ()"}, {"sha": "f135a3a9ca662dd362a4e9c85188b20b41a7a956", "filename": "src/test/rustdoc/macro-private-not-documented.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fmacro-private-not-documented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fmacro-private-not-documented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmacro-private-not-documented.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -6,13 +6,13 @@\n // This is a regression text for issue #88453.\n #![feature(decl_macro)]\n \n-// @!has macro_private_not_documented/index.html 'a_macro'\n+// @!hasraw macro_private_not_documented/index.html 'a_macro'\n // @!has macro_private_not_documented/macro.a_macro.html\n macro_rules! a_macro {\n     () => ()\n }\n \n-// @!has macro_private_not_documented/index.html 'another_macro'\n+// @!hasraw macro_private_not_documented/index.html 'another_macro'\n // @!has macro_private_not_documented/macro.another_macro.html\n macro another_macro {\n     () => ()"}, {"sha": "31e7072b5ce9bc7e05c4b596d777aaf991ad2d6d", "filename": "src/test/rustdoc/markdown-summaries.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fmarkdown-summaries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fmarkdown-summaries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmarkdown-summaries.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -8,7 +8,7 @@\n //! [link]: https://example.com\n \n // @hasraw search-index.js 'This <em>summary</em> has a link and <code>code</code>.'\n-// @!has - 'second paragraph'\n+// @!hasraw - 'second paragraph'\n \n /// This `code` will be rendered in a code tag.\n ///\n@@ -17,11 +17,11 @@ pub struct Sidebar;\n \n // @hasraw search-index.js 'This <code>code</code> will be rendered in a code tag.'\n // @hasraw summaries/sidebar-items.js 'This `code` will be rendered in a code tag.'\n-// @!has - 'text should not be rendered'\n+// @!hasraw - 'text should not be rendered'\n \n /// ```text\n /// this block should not be rendered\n /// ```\n pub struct Sidebar2;\n \n-// @!has summaries/sidebar-items.js 'block should not be rendered'\n+// @!hasraw summaries/sidebar-items.js 'block should not be rendered'"}, {"sha": "80d5b99c0b035df9b9eca5ce92070e461181d1e3", "filename": "src/test/rustdoc/masked.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fmasked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fmasked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmasked.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -7,24 +7,24 @@\n #[doc(masked)]\n extern crate masked;\n \n-// @!has 'search-index.js' 'masked_method'\n+// @!hasraw 'search-index.js' 'masked_method'\n \n-// @!has 'foo/struct.String.html' 'MaskedTrait'\n-// @!has 'foo/struct.String.html' 'masked_method'\n+// @!hasraw 'foo/struct.String.html' 'MaskedTrait'\n+// @!hasraw 'foo/struct.String.html' 'masked_method'\n pub use std::string::String;\n \n-// @!has 'foo/trait.Clone.html' 'MaskedStruct'\n+// @!hasraw 'foo/trait.Clone.html' 'MaskedStruct'\n pub use std::clone::Clone;\n \n-// @!has 'foo/struct.MyStruct.html' 'MaskedTrait'\n-// @!has 'foo/struct.MyStruct.html' 'masked_method'\n+// @!hasraw 'foo/struct.MyStruct.html' 'MaskedTrait'\n+// @!hasraw 'foo/struct.MyStruct.html' 'masked_method'\n pub struct MyStruct;\n \n impl masked::MaskedTrait for MyStruct {\n     fn masked_method() {}\n }\n \n-// @!has 'foo/trait.MyTrait.html' 'MaskedStruct'\n+// @!hasraw 'foo/trait.MyTrait.html' 'MaskedStruct'\n pub trait MyTrait {}\n \n impl MyTrait for masked::MaskedStruct {}"}, {"sha": "852f444e99b65d4af0486206078c1929a0515746", "filename": "src/test/rustdoc/module-impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fmodule-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fmodule-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmodule-impls.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -2,4 +2,4 @@\n \n pub use std::marker::Send;\n \n-// @!has foo/index.html 'Implementations'\n+// @!hasraw foo/index.html 'Implementations'"}, {"sha": "12234d2cf7ef52cd99146bfe70e497ca2adc8fbe", "filename": "src/test/rustdoc/nested-modules.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fnested-modules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fnested-modules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fnested-modules.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -15,14 +15,14 @@ mod a_module {\n         pub use a_nested_module::a_nested_public_function as another_nested_public_function;\n     }\n \n-    // @!has aCrate/a_nested_module/index.html 'yet_another_nested_public_function'\n+    // @!hasraw aCrate/a_nested_module/index.html 'yet_another_nested_public_function'\n     pub use a_nested_module::a_nested_public_function as yet_another_nested_public_function;\n \n-    // @!has aCrate/a_nested_module/index.html 'one_last_nested_public_function'\n+    // @!hasraw aCrate/a_nested_module/index.html 'one_last_nested_public_function'\n     pub use a_nested_module::another_nested_public_function as one_last_nested_public_function;\n }\n \n-// @!has aCrate/index.html 'a_module'\n+// @!hasraw aCrate/index.html 'a_module'\n // @has aCrate/index.html '//a[@href=\"a_nested_module/index.html\"]' 'a_nested_module'\n pub use a_module::a_nested_module;\n \n@@ -36,7 +36,7 @@ pub use a_module::{\n };\n \n // @has aCrate/index.html '//a[@href=\"fn.private_function.html\"]' 'private_function'\n-// @!has aCrate/fn.private_function.html 'a_module'\n+// @!hasraw aCrate/fn.private_function.html 'a_module'\n // @has aCrate/index.html '//a[@href=\"fn.other_private_function.html\"]' 'other_private_function'\n-// @!has aCrate/fn.other_private_function.html 'a_module'\n+// @!hasraw aCrate/fn.other_private_function.html 'a_module'\n pub use a_module::{other_private_function, private_function};"}, {"sha": "d11c66b54ead13d094134e04fd544695ed08e071", "filename": "src/test/rustdoc/no-crate-filter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fno-crate-filter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fno-crate-filter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fno-crate-filter.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -2,5 +2,5 @@\n \n // compile-flags: -Z unstable-options --disable-per-crate-search\n \n-// @!has 'foo/struct.Foo.html' '//*[id=\"crate-search\"]'\n+// @!hasraw 'foo/struct.Foo.html' '//*[id=\"crate-search\"]'\n pub struct Foo;"}, {"sha": "8c899447e8acf60a198c446fcd8dc0f26dc9be2b", "filename": "src/test/rustdoc/recursive-deref.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Frecursive-deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Frecursive-deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Frecursive-deref.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -51,7 +51,7 @@ impl G {\n \n // @has recursive_deref/struct.D.html '//h3[@class=\"code-header in-band\"]' 'impl Deref for D'\n // We also check that `G::g` method isn't rendered because there is no `self` argument.\n-// @!has '-' '//*[@id=\"deref-methods-G\"]'\n+// @!hasraw '-' '//*[@id=\"deref-methods-G\"]'\n impl Deref for D {\n     type Target = E;\n \n@@ -62,7 +62,7 @@ impl Deref for D {\n \n // @has recursive_deref/struct.E.html '//h3[@class=\"code-header in-band\"]' 'impl Deref for E'\n // We also check that `G::g` method isn't rendered because there is no `self` argument.\n-// @!has '-' '//*[@id=\"deref-methods-G\"]'\n+// @!hasraw '-' '//*[@id=\"deref-methods-G\"]'\n impl Deref for E {\n     type Target = F;\n \n@@ -73,7 +73,7 @@ impl Deref for E {\n \n // @has recursive_deref/struct.F.html '//h3[@class=\"code-header in-band\"]' 'impl Deref for F'\n // We also check that `G::g` method isn't rendered because there is no `self` argument.\n-// @!has '-' '//*[@id=\"deref-methods-G\"]'\n+// @!hasraw '-' '//*[@id=\"deref-methods-G\"]'\n impl Deref for F {\n     type Target = G;\n \n@@ -101,7 +101,7 @@ impl I {\n }\n \n // @has recursive_deref/struct.H.html '//h3[@class=\"code-header in-band\"]' 'impl Deref for H'\n-// @!has '-' '//*[@id=\"deref-methods-I\"]'\n+// @!hasraw '-' '//*[@id=\"deref-methods-I\"]'\n impl Deref for H {\n     type Target = I;\n "}, {"sha": "8fb38cc8bf3fb48db3e29c9bdbc3703d79e46f14", "filename": "src/test/rustdoc/remove-url-from-headings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fremove-url-from-headings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fremove-url-from-headings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fremove-url-from-headings.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -1,7 +1,7 @@\n #![crate_name = \"foo\"]\n \n // @has foo/fn.foo.html\n-// @!has - '//a[@href=\"http://a.a\"]'\n+// @!hasraw - '//a[@href=\"http://a.a\"]'\n // @has - '//a[@href=\"#implementing-stuff-somewhere\"]' 'Implementing stuff somewhere'\n // @has - '//a[@href=\"#another-one-urg\"]' 'Another one urg'\n "}, {"sha": "efd366405bfeb0bbe9caa5328602cba92269c0db", "filename": "src/test/rustdoc/search-index-summaries.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fsearch-index-summaries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fsearch-index-summaries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsearch-index-summaries.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -1,8 +1,8 @@\n #![crate_name = \"foo\"]\n \n // @hasraw 'search-index.js' 'Foo short link.'\n-// @!has - 'www.example.com'\n-// @!has - 'More Foo.'\n+// @!hasraw - 'www.example.com'\n+// @!hasraw - 'More Foo.'\n \n /// Foo short [link](https://www.example.com/).\n ///"}, {"sha": "d1d05eb886b00e144708c57e697eb7b9a3fba0ad", "filename": "src/test/rustdoc/search-index.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fsearch-index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fsearch-index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsearch-index.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -9,18 +9,18 @@ mod private {\n     pub struct Foo;\n     impl Foo {\n         pub fn test_method() {} // @hasraw - test_method\n-        fn priv_method() {} // @!has - priv_method\n+        fn priv_method() {} // @!hasraw - priv_method\n     }\n \n     pub trait PrivateTrait {\n-        fn trait_method(&self) {} // @!has - priv_method\n+        fn trait_method(&self) {} // @!hasraw - priv_method\n     }\n }\n \n pub struct Bar;\n \n impl Deref for Bar {\n-    // @!has search-index.js Target\n+    // @!hasraw search-index.js Target\n     type Target = Bar;\n     fn deref(&self) -> &Bar { self }\n }"}, {"sha": "69e742ee74739a5429a1a2cb630e854cfe7185f8", "filename": "src/test/rustdoc/show-const-contents.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fshow-const-contents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fshow-const-contents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fshow-const-contents.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -2,49 +2,49 @@\n // documentation.\n \n // @hasraw show_const_contents/constant.CONST_S.html 'show this'\n-// @!has show_const_contents/constant.CONST_S.html '; //'\n+// @!hasraw show_const_contents/constant.CONST_S.html '; //'\n pub const CONST_S: &'static str = \"show this\";\n \n // @hasraw show_const_contents/constant.CONST_I32.html '= 42;'\n-// @!has show_const_contents/constant.CONST_I32.html '; //'\n+// @!hasraw show_const_contents/constant.CONST_I32.html '; //'\n pub const CONST_I32: i32 = 42;\n \n // @hasraw show_const_contents/constant.CONST_I32_HEX.html '= 0x42;'\n-// @!has show_const_contents/constant.CONST_I32_HEX.html '; //'\n+// @!hasraw show_const_contents/constant.CONST_I32_HEX.html '; //'\n pub const CONST_I32_HEX: i32 = 0x42;\n \n // @hasraw show_const_contents/constant.CONST_NEG_I32.html '= -42;'\n-// @!has show_const_contents/constant.CONST_NEG_I32.html '; //'\n+// @!hasraw show_const_contents/constant.CONST_NEG_I32.html '; //'\n pub const CONST_NEG_I32: i32 = -42;\n \n // @hasraw show_const_contents/constant.CONST_EQ_TO_VALUE_I32.html '= 42i32;'\n-// @!has show_const_contents/constant.CONST_EQ_TO_VALUE_I32.html '// 42i32'\n+// @!hasraw show_const_contents/constant.CONST_EQ_TO_VALUE_I32.html '// 42i32'\n pub const CONST_EQ_TO_VALUE_I32: i32 = 42i32;\n \n // @hasraw show_const_contents/constant.CONST_CALC_I32.html '= _; // 43i32'\n pub const CONST_CALC_I32: i32 = 42 + 1;\n \n-// @!has show_const_contents/constant.CONST_REF_I32.html '= &42;'\n-// @!has show_const_contents/constant.CONST_REF_I32.html '; //'\n+// @!hasraw show_const_contents/constant.CONST_REF_I32.html '= &42;'\n+// @!hasraw show_const_contents/constant.CONST_REF_I32.html '; //'\n pub const CONST_REF_I32: &'static i32 = &42;\n \n // @hasraw show_const_contents/constant.CONST_I32_MAX.html '= i32::MAX; // 2_147_483_647i32'\n pub const CONST_I32_MAX: i32 = i32::MAX;\n \n-// @!has show_const_contents/constant.UNIT.html '= ();'\n-// @!has show_const_contents/constant.UNIT.html '; //'\n+// @!hasraw show_const_contents/constant.UNIT.html '= ();'\n+// @!hasraw show_const_contents/constant.UNIT.html '; //'\n pub const UNIT: () = ();\n \n pub struct MyType(i32);\n \n-// @!has show_const_contents/constant.MY_TYPE.html '= MyType(42);'\n-// @!has show_const_contents/constant.MY_TYPE.html '; //'\n+// @!hasraw show_const_contents/constant.MY_TYPE.html '= MyType(42);'\n+// @!hasraw show_const_contents/constant.MY_TYPE.html '; //'\n pub const MY_TYPE: MyType = MyType(42);\n \n pub struct MyTypeWithStr(&'static str);\n \n-// @!has show_const_contents/constant.MY_TYPE_WITH_STR.html '= MyTypeWithStr(\"show this\");'\n-// @!has show_const_contents/constant.MY_TYPE_WITH_STR.html '; //'\n+// @!hasraw show_const_contents/constant.MY_TYPE_WITH_STR.html '= MyTypeWithStr(\"show this\");'\n+// @!hasraw show_const_contents/constant.MY_TYPE_WITH_STR.html '; //'\n pub const MY_TYPE_WITH_STR: MyTypeWithStr = MyTypeWithStr(\"show this\");\n \n // @hasraw show_const_contents/constant.PI.html '= 3.14159265358979323846264338327950288f32;'"}, {"sha": "77aa13294d8e838ad07882c1d1151db3d334940a", "filename": "src/test/rustdoc/sized_trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fsized_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fsized_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsized_trait.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -1,13 +1,13 @@\n #![crate_name = \"foo\"]\n \n // @has foo/struct.Bar.html\n-// @!has - '//*[@id=\"impl-Sized\"]'\n+// @!hasraw - '//*[@id=\"impl-Sized\"]'\n pub struct Bar {\n     a: u16,\n }\n \n // @has foo/struct.Foo.html\n-// @!has - '//*[@id=\"impl-Sized\"]'\n+// @!hasraw - '//*[@id=\"impl-Sized\"]'\n pub struct Foo<T: ?Sized>(T);\n \n // @has foo/struct.Unsized.html"}, {"sha": "08c055c5b8dbbed9d72c661f7d498bf62414ceed", "filename": "src/test/rustdoc/static-root-path.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fstatic-root-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Fstatic-root-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstatic-root-path.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -2,17 +2,17 @@\n \n // @has static_root_path/struct.SomeStruct.html\n // @matchesraw - '\"/cache/main\\.js\"'\n-// @!matches - '\"\\.\\./main\\.js\"'\n+// @!matchesraw - '\"\\.\\./main\\.js\"'\n // @matchesraw - 'data-root-path=\"\\.\\./\"'\n-// @!matches - '\"/cache/search-index\\.js\"'\n+// @!matchesraw - '\"/cache/search-index\\.js\"'\n pub struct SomeStruct;\n \n // @has src/static_root_path/static-root-path.rs.html\n // @matchesraw - '\"/cache/source-script\\.js\"'\n-// @!matches - '\"\\.\\./\\.\\./source-script\\.js\"'\n+// @!matchesraw - '\"\\.\\./\\.\\./source-script\\.js\"'\n // @matchesraw - '\"\\.\\./\\.\\./source-files.js\"'\n-// @!matches - '\"/cache/source-files\\.js\"'\n+// @!matchesraw - '\"/cache/source-files\\.js\"'\n \n // @has settings.html\n // @matchesraw - '/cache/settings\\.js'\n-// @!matches - '\\./settings\\.js'\n+// @!matchesraw - '\\./settings\\.js'"}, {"sha": "1463a2764273bed9011de139753aec7a7c64ca49", "filename": "src/test/rustdoc/table-in-docblock.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Ftable-in-docblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Ftable-in-docblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftable-in-docblock.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -2,7 +2,7 @@\n \n // @has foo/struct.Foo.html\n // @count - '//*[@class=\"docblock\"]/div/table' 2\n-// @!has - '//*[@class=\"docblock\"]/table'\n+// @!hasraw - '//*[@class=\"docblock\"]/table'\n /// | hello | hello2 |\n /// | ----- | ------ |\n /// | data  | data2  |"}, {"sha": "37e51741a1c437fbf12d66560b5140fd720ea69c", "filename": "src/test/rustdoc/toggle-item-contents.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Ftoggle-item-contents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Ftoggle-item-contents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftoggle-item-contents.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -62,7 +62,7 @@ pub struct PrivStruct {\n }\n \n // @has 'toggle_item_contents/enum.Enum.html'\n-// @!has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]'\n+// @!hasraw - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]'\n pub enum Enum {\n     A, B, C,\n     D {\n@@ -72,7 +72,7 @@ pub enum Enum {\n }\n \n // @has 'toggle_item_contents/enum.EnumStructVariant.html'\n-// @!has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]'\n+// @!hasraw - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]'\n pub enum EnumStructVariant {\n     A, B, C,\n     D {"}, {"sha": "c303a1052de1154a2df7c18af562cc8ea5b664a7", "filename": "src/test/rustdoc/trait-impl-items-links-and-anchors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -59,7 +59,7 @@ pub struct MyStruct;\n \n // We check that associated items with default values aren't generated in the implementors list.\n impl MyTrait for (u8, u8) {\n-    // @!has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedconstant.VALUE-4\"]'\n+    // @!hasraw trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedconstant.VALUE-4\"]'\n     type Assoc = bool;\n     fn trait_function(&self) {}\n }"}, {"sha": "abfa93b757cc1a2351587c6d4126bbfaea15aad5", "filename": "src/test/rustdoc/trait-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Ftrait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Ftrait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftrait-impl.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -40,7 +40,7 @@ impl Trait for Struct {\n     fn c() {}\n \n     // @has - '//*[@id=\"method.d\"]/../../div[@class=\"docblock\"]/p' 'Escaped formatting a*b*c* works'\n-    // @!has - '//*[@id=\"method.d\"]/../../div[@class=\"docblock\"]/p/em'\n+    // @!hasraw - '//*[@id=\"method.d\"]/../../div[@class=\"docblock\"]/p/em'\n     fn d() {}\n \n     // @has - '//*[@id=\"impl-Trait-for-Struct\"]/h3//a/@href' 'trait.Trait.html'"}, {"sha": "b5a9004339530ca1274c144425dffbcd9bdb32c6", "filename": "src/test/rustdoc/tuple-struct-fields-doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Ftuple-struct-fields-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Ftuple-struct-fields-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftuple-struct-fields-doc.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -5,7 +5,7 @@\n // @has - '//h3[@class=\"sidebar-title\"]/a[@href=\"#fields\"]' 'Tuple Fields'\n // @has - '//*[@id=\"structfield.0\"]' '0: u32'\n // @has - '//*[@id=\"main-content\"]/div[@class=\"docblock\"]' 'hello'\n-// @!has - '//*[@id=\"structfield.1\"]'\n+// @!hasraw - '//*[@id=\"structfield.1\"]'\n // @has - '//*[@id=\"structfield.2\"]' '2: char'\n // @has - '//*[@id=\"structfield.3\"]' '3: i8'\n // @has - '//*[@id=\"main-content\"]/div[@class=\"docblock\"]' 'not hello'"}, {"sha": "6bb5e10f8813734ab072a7b6103a3a213ef69014", "filename": "src/test/rustdoc/type-layout-flag-required.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Ftype-layout-flag-required.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Ftype-layout-flag-required.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftype-layout-flag-required.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -1,4 +1,4 @@\n // Tests that `--show-type-layout` is required in order to show layout info.\n \n-// @!has type_layout_flag_required/struct.Foo.html 'Size: '\n+// @!hasraw type_layout_flag_required/struct.Foo.html 'Size: '\n pub struct Foo(usize);"}, {"sha": "5e0a0411a62b656135df2b24647c0f6da6641714", "filename": "src/test/rustdoc/type-layout.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Ftype-layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34e2404fd375e1bc18c1191639e4e67bdbc7d19/src%2Ftest%2Frustdoc%2Ftype-layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftype-layout.rs?ref=b34e2404fd375e1bc18c1191639e4e67bdbc7d19", "patch": "@@ -29,7 +29,7 @@ pub struct X(usize);\n \n // @hasraw type_layout/struct.Y.html 'Size: '\n // @hasraw - '1 byte'\n-// @!has - ' bytes'\n+// @!hasraw - ' bytes'\n pub struct Y(u8);\n \n // @hasraw type_layout/struct.Z.html 'Size: '\n@@ -38,7 +38,7 @@ pub struct Z;\n \n // We can't compute layout for generic types.\n // @hasraw type_layout/struct.Generic.html 'Unable to compute type layout, possibly due to this type having generic parameters'\n-// @!has - 'Size: '\n+// @!hasraw - 'Size: '\n pub struct Generic<T>(T);\n \n // We *can*, however, compute layout for types that are only generic over lifetimes,\n@@ -63,7 +63,7 @@ pub type GenericTypeAlias = (Generic<(u32, ())>, Generic<u32>);\n // @hasraw type_layout/type.Edges.html 'Encountered an error during type layout; the type failed to be normalized.'\n pub type Edges<'a, E> = std::borrow::Cow<'a, [E]>;\n \n-// @!has type_layout/trait.MyTrait.html 'Size: '\n+// @!hasraw type_layout/trait.MyTrait.html 'Size: '\n pub trait MyTrait {}\n \n // @hasraw type_layout/enum.Variants.html 'Size: '"}]}