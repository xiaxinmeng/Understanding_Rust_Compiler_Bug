{"sha": "6cc9a26a2d61acc0b1d707104f8c2a8b7c990012", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYzlhMjZhMmQ2MWFjYzBiMWQ3MDcxMDRmOGMyYThiN2M5OTAwMTI=", "commit": {"author": {"name": "Matthijs Hofstra", "email": "thiezz@gmail.com", "date": "2013-05-29T14:21:29Z"}, "committer": {"name": "Matthijs Hofstra", "email": "thiezz@gmail.com", "date": "2013-05-29T16:26:50Z"}, "message": "Replaced calls to external fmin/fmax by a Rust implementation.", "tree": {"sha": "66ff400df83299f6a92da6285673e7c7f34b9082", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66ff400df83299f6a92da6285673e7c7f34b9082"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cc9a26a2d61acc0b1d707104f8c2a8b7c990012", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cc9a26a2d61acc0b1d707104f8c2a8b7c990012", "html_url": "https://github.com/rust-lang/rust/commit/6cc9a26a2d61acc0b1d707104f8c2a8b7c990012", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cc9a26a2d61acc0b1d707104f8c2a8b7c990012/comments", "author": {"login": "Thiez", "id": 204550, "node_id": "MDQ6VXNlcjIwNDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/204550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thiez", "html_url": "https://github.com/Thiez", "followers_url": "https://api.github.com/users/Thiez/followers", "following_url": "https://api.github.com/users/Thiez/following{/other_user}", "gists_url": "https://api.github.com/users/Thiez/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thiez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thiez/subscriptions", "organizations_url": "https://api.github.com/users/Thiez/orgs", "repos_url": "https://api.github.com/users/Thiez/repos", "events_url": "https://api.github.com/users/Thiez/events{/privacy}", "received_events_url": "https://api.github.com/users/Thiez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Thiez", "id": 204550, "node_id": "MDQ6VXNlcjIwNDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/204550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thiez", "html_url": "https://github.com/Thiez", "followers_url": "https://api.github.com/users/Thiez/followers", "following_url": "https://api.github.com/users/Thiez/following{/other_user}", "gists_url": "https://api.github.com/users/Thiez/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thiez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thiez/subscriptions", "organizations_url": "https://api.github.com/users/Thiez/orgs", "repos_url": "https://api.github.com/users/Thiez/repos", "events_url": "https://api.github.com/users/Thiez/events{/privacy}", "received_events_url": "https://api.github.com/users/Thiez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3e55c5c042778b0e50710221d6c0abdfc1119f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3e55c5c042778b0e50710221d6c0abdfc1119f0", "html_url": "https://github.com/rust-lang/rust/commit/e3e55c5c042778b0e50710221d6c0abdfc1119f0"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "0d166c8887cd7353e01b0cc6f136a7c8280e5597", "filename": "src/libstd/num/f32.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6cc9a26a2d61acc0b1d707104f8c2a8b7c990012/src%2Flibstd%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cc9a26a2d61acc0b1d707104f8c2a8b7c990012/src%2Flibstd%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff32.rs?ref=6cc9a26a2d61acc0b1d707104f8c2a8b7c990012", "patch": "@@ -86,8 +86,6 @@ delegate!(\n     fn erfc(n: c_float) -> c_float = c_float_utils::erfc,\n     fn exp_m1(n: c_float) -> c_float = c_float_utils::exp_m1,\n     fn abs_sub(a: c_float, b: c_float) -> c_float = c_float_utils::abs_sub,\n-    fn fmax(a: c_float, b: c_float) -> c_float = c_float_utils::fmax,\n-    fn fmin(a: c_float, b: c_float) -> c_float = c_float_utils::fmin,\n     fn next_after(x: c_float, y: c_float) -> c_float = c_float_utils::next_after,\n     fn frexp(n: c_float, value: &mut c_int) -> c_float = c_float_utils::frexp,\n     fn hypot(x: c_float, y: c_float) -> c_float = c_float_utils::hypot,\n@@ -147,6 +145,22 @@ pub fn ge(x: f32, y: f32) -> bool { return x >= y; }\n #[inline(always)]\n pub fn gt(x: f32, y: f32) -> bool { return x > y; }\n \n+#[inline(always)]\n+pub fn fmax(x: f32, y: f32) -> f32 {\n+    if x.is_NaN() { y }\n+    else if y.is_NaN() { x }\n+    else if x > y { x }\n+    else { y }\n+}\n+\n+#[inline(always)]\n+pub fn fmin(x: f32, y: f32) -> f32 {\n+    if x.is_NaN() { y }\n+    else if y.is_NaN() { x }\n+    else if x < y { x }\n+    else { y }\n+}\n+\n \n // FIXME (#1999): replace the predicates below with llvm intrinsics or\n // calls to the libmath macros in the rust runtime for performance."}, {"sha": "910e2e1e692bd33c56347f01a8efe842abd3e482", "filename": "src/libstd/num/f64.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6cc9a26a2d61acc0b1d707104f8c2a8b7c990012/src%2Flibstd%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cc9a26a2d61acc0b1d707104f8c2a8b7c990012/src%2Flibstd%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff64.rs?ref=6cc9a26a2d61acc0b1d707104f8c2a8b7c990012", "patch": "@@ -87,8 +87,6 @@ delegate!(\n     fn erfc(n: c_double) -> c_double = c_double_utils::erfc,\n     fn exp_m1(n: c_double) -> c_double = c_double_utils::exp_m1,\n     fn abs_sub(a: c_double, b: c_double) -> c_double = c_double_utils::abs_sub,\n-    fn fmax(a: c_double, b: c_double) -> c_double = c_double_utils::fmax,\n-    fn fmin(a: c_double, b: c_double) -> c_double = c_double_utils::fmin,\n     fn next_after(x: c_double, y: c_double) -> c_double = c_double_utils::next_after,\n     fn frexp(n: c_double, value: &mut c_int) -> c_double = c_double_utils::frexp,\n     fn hypot(x: c_double, y: c_double) -> c_double = c_double_utils::hypot,\n@@ -172,6 +170,21 @@ pub fn ge(x: f64, y: f64) -> bool { return x >= y; }\n #[inline(always)]\n pub fn gt(x: f64, y: f64) -> bool { return x > y; }\n \n+#[inline(always)]\n+pub fn fmax(x: f64, y: f64) -> f64 {\n+    if x.is_NaN() { y }\n+    else if y.is_NaN() { x }\n+    else if x > y { x }\n+    else { y }\n+}\n+\n+#[inline(always)]\n+pub fn fmin(x: f64, y: f64) -> f64 {\n+    if x.is_NaN() { y }\n+    else if y.is_NaN() { x }\n+    else if x < y { x }\n+    else { y }\n+}\n \n // FIXME (#1999): add is_normal, is_subnormal, and fpclassify\n "}]}