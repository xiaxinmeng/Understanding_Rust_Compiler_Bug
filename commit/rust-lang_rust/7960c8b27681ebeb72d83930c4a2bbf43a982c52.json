{"sha": "7960c8b27681ebeb72d83930c4a2bbf43a982c52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5NjBjOGIyNzY4MWViZWI3MmQ4MzkzMGM0YTJiYmY0M2E5ODJjNTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-05T09:17:38Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-05T09:17:38Z"}, "message": "restore index-based gotodef", "tree": {"sha": "ab1af61b451d8be15a7f879d095ec10b83346888", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab1af61b451d8be15a7f879d095ec10b83346888"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7960c8b27681ebeb72d83930c4a2bbf43a982c52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7960c8b27681ebeb72d83930c4a2bbf43a982c52", "html_url": "https://github.com/rust-lang/rust/commit/7960c8b27681ebeb72d83930c4a2bbf43a982c52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7960c8b27681ebeb72d83930c4a2bbf43a982c52/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84f250973079508e52d81be88f45a401958442dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/84f250973079508e52d81be88f45a401958442dd", "html_url": "https://github.com/rust-lang/rust/commit/84f250973079508e52d81be88f45a401958442dd"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "ab6d111c232b857181832cf9c5084fd9636ffdf1", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7960c8b27681ebeb72d83930c4a2bbf43a982c52/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7960c8b27681ebeb72d83930c4a2bbf43a982c52/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=7960c8b27681ebeb72d83930c4a2bbf43a982c52", "patch": "@@ -214,7 +214,7 @@ impl AnalysisImpl {\n             {\n                 let scope = fn_descr.scope(&*self.db);\n                 // First try to resolve the symbol locally\n-                return if let Some(entry) = scope.resolve_local_name(name_ref) {\n+                if let Some(entry) = scope.resolve_local_name(name_ref) {\n                     let mut vec = vec![];\n                     vec.push((\n                         position.file_id,\n@@ -224,12 +224,11 @@ impl AnalysisImpl {\n                             kind: NAME,\n                         },\n                     ));\n-                    Ok(vec)\n-                } else {\n-                    // If that fails try the index based approach.\n-                    self.index_resolve(name_ref)\n+                    return Ok(vec);\n                 };\n             }\n+            // If that fails try the index based approach.\n+            return self.index_resolve(name_ref);\n         }\n         if let Some(name) = find_node_at_offset::<ast::Name>(syntax, position.offset) {\n             if let Some(module) = name.syntax().parent().and_then(ast::Module::cast) {"}, {"sha": "71d20dbe94413d9e6c9f907d88aeb39e9d8febb8", "filename": "crates/ra_analysis/tests/tests.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7960c8b27681ebeb72d83930c4a2bbf43a982c52/crates%2Fra_analysis%2Ftests%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7960c8b27681ebeb72d83930c4a2bbf43a982c52/crates%2Fra_analysis%2Ftests%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Ftests%2Ftests.rs?ref=7960c8b27681ebeb72d83930c4a2bbf43a982c52", "patch": "@@ -18,6 +18,23 @@ fn get_signature(text: &str) -> (FnSignatureInfo, Option<usize>) {\n     analysis.resolve_callable(position).unwrap().unwrap()\n }\n \n+#[test]\n+fn approximate_resolve_works_in_items() {\n+    let (analysis, pos) = analysis_and_position(\n+        \"\n+        //- /lib.rs\n+        struct Foo;\n+        enum E { X(Foo<|>) }\n+    \",\n+    );\n+\n+    let symbols = analysis.approximately_resolve_symbol(pos).unwrap();\n+    assert_eq_dbg(\n+        r#\"[(FileId(1), FileSymbol { name: \"Foo\", node_range: [0; 11), kind: STRUCT_DEF })]\"#,\n+        &symbols,\n+    );\n+}\n+\n #[test]\n fn test_resolve_module() {\n     let (analysis, pos) = analysis_and_position("}]}