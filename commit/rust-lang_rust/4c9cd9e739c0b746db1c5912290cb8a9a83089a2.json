{"sha": "4c9cd9e739c0b746db1c5912290cb8a9a83089a2", "node_id": "C_kwDOAAsO6NoAKDRjOWNkOWU3MzljMGI3NDZkYjFjNTkxMjI5MGNiOGE5YTgzMDg5YTI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-12T03:28:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-12T03:28:50Z"}, "message": "Rollup merge of #110173 - solid-rs:patch/kmc-solid/socket-read-buf, r=cuviper\n\nkmc-solid: Implement `Socket::read_buf`\n\nFollow-up to #108326. Implements `Socket::read_buf` for the [`*-kmc-solid_*`](https://doc.rust-lang.org/nightly/rustc/platform-support/kmc-solid.html) Tier 3 targets.", "tree": {"sha": "4b84fb751928fe836a06976bf3f11b61c434dd23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b84fb751928fe836a06976bf3f11b61c434dd23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c9cd9e739c0b746db1c5912290cb8a9a83089a2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkNiVyCRBK7hj4Ov3rIwAAgqYIADQl7wjHIwBkJb5lHbfP/IPj\nRzRm/5PmN2OqFhxdc11WFQhthPCzO4fAhhAA6DbzHB7w+SFGGj4HsPdzThH+iipx\nS7slTMzpdJLGrPUBmugRNz2dKoWXrSQi89BRxgc2YrqP8elW7mb3ABaX+DhcNYqd\n1RSJN7ZGXe9jJFpb7fAdLf/OtS3OyJd1f0oD5ms72WRvl6xPggUSJhF/mi9K6+Kf\nAohQKTZs7XsLoZgLlCcu+kARhtCKjvcDTGnuHgyQPscb35+jgxtjW3XDpcgIHcK4\nlMmixI1IsdYOBjCt3k1P30Kc9x+56GoyD9gEEvqgoDhOAgsaCBMivTLUt6x+QiU=\n=xro6\n-----END PGP SIGNATURE-----\n", "payload": "tree 4b84fb751928fe836a06976bf3f11b61c434dd23\nparent d22b019dbf1f0dce715a19e48982beeaa37eadf9\nparent 72bfd55d4b15053df3801eb920ce23032685cf1b\nauthor Michael Goulet <michael@errs.io> 1681270130 -0700\ncommitter GitHub <noreply@github.com> 1681270130 -0700\n\nRollup merge of #110173 - solid-rs:patch/kmc-solid/socket-read-buf, r=cuviper\n\nkmc-solid: Implement `Socket::read_buf`\n\nFollow-up to #108326. Implements `Socket::read_buf` for the [`*-kmc-solid_*`](https://doc.rust-lang.org/nightly/rustc/platform-support/kmc-solid.html) Tier 3 targets.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c9cd9e739c0b746db1c5912290cb8a9a83089a2", "html_url": "https://github.com/rust-lang/rust/commit/4c9cd9e739c0b746db1c5912290cb8a9a83089a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c9cd9e739c0b746db1c5912290cb8a9a83089a2/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d22b019dbf1f0dce715a19e48982beeaa37eadf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d22b019dbf1f0dce715a19e48982beeaa37eadf9", "html_url": "https://github.com/rust-lang/rust/commit/d22b019dbf1f0dce715a19e48982beeaa37eadf9"}, {"sha": "72bfd55d4b15053df3801eb920ce23032685cf1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/72bfd55d4b15053df3801eb920ce23032685cf1b", "html_url": "https://github.com/rust-lang/rust/commit/72bfd55d4b15053df3801eb920ce23032685cf1b"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "7d7bfae14329a601d700810511dd635f8e11ebc4", "filename": "library/std/src/sys/solid/net.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4c9cd9e739c0b746db1c5912290cb8a9a83089a2/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9cd9e739c0b746db1c5912290cb8a9a83089a2/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Fnet.rs?ref=4c9cd9e739c0b746db1c5912290cb8a9a83089a2", "patch": "@@ -2,7 +2,7 @@ use super::abi;\n use crate::{\n     cmp,\n     ffi::CStr,\n-    io::{self, ErrorKind, IoSlice, IoSliceMut},\n+    io::{self, BorrowedBuf, BorrowedCursor, ErrorKind, IoSlice, IoSliceMut},\n     mem,\n     net::{Shutdown, SocketAddr},\n     ptr, str,\n@@ -294,19 +294,30 @@ impl Socket {\n         self.0.duplicate().map(Socket)\n     }\n \n-    fn recv_with_flags(&self, buf: &mut [u8], flags: c_int) -> io::Result<usize> {\n+    fn recv_with_flags(&self, mut buf: BorrowedCursor<'_>, flags: c_int) -> io::Result<()> {\n         let ret = cvt(unsafe {\n-            netc::recv(self.0.raw(), buf.as_mut_ptr() as *mut c_void, buf.len(), flags)\n+            netc::recv(self.0.raw(), buf.as_mut().as_mut_ptr().cast(), buf.capacity(), flags)\n         })?;\n-        Ok(ret as usize)\n+        unsafe {\n+            buf.advance(ret as usize);\n+        }\n+        Ok(())\n     }\n \n     pub fn read(&self, buf: &mut [u8]) -> io::Result<usize> {\n-        self.recv_with_flags(buf, 0)\n+        let mut buf = BorrowedBuf::from(buf);\n+        self.recv_with_flags(buf.unfilled(), 0)?;\n+        Ok(buf.len())\n     }\n \n     pub fn peek(&self, buf: &mut [u8]) -> io::Result<usize> {\n-        self.recv_with_flags(buf, MSG_PEEK)\n+        let mut buf = BorrowedBuf::from(buf);\n+        self.recv_with_flags(buf.unfilled(), MSG_PEEK)?;\n+        Ok(buf.len())\n+    }\n+\n+    pub fn read_buf(&self, buf: BorrowedCursor<'_>) -> io::Result<()> {\n+        self.recv_with_flags(buf, 0)\n     }\n \n     pub fn read_vectored(&self, bufs: &mut [IoSliceMut<'_>]) -> io::Result<usize> {"}]}