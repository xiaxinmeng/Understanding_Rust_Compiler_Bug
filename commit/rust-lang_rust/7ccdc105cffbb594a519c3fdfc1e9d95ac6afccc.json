{"sha": "7ccdc105cffbb594a519c3fdfc1e9d95ac6afccc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjY2RjMTA1Y2ZmYmI1OTRhNTE5YzNmZGZjMWU5ZDk1YWM2YWZjY2M=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-25T19:02:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-10-25T19:02:52Z"}, "message": "Rollup merge of #45496 - kennytm:bootstrap-fix-extension-check, r=alexcrichton\n\nrustbuild: Fix `no output generated` error for next bootstrap cargo.\n\nDue to rust-lang/cargo#4570, a `*.dll.lib` file is uplifted when building dynamic libraries on Windows. The current bootstrap code does not understand files with multiple extensions, and will instead assume `xxxx.dll` is the file name. This caused a `no output generated` error because it tries to search for `xxxx.dll-hash.lib` inside the `deps/` folder, while it should check for `xxxx-hash.dll.lib` instead.\n\nThis PR is blocking #45285, see https://github.com/rust-lang/rust/pull/45285#issuecomment-338454149 and the rest of the comments for detail.", "tree": {"sha": "9ee6232fbfba586e06c6d9511319e98f15e4cf4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ee6232fbfba586e06c6d9511319e98f15e4cf4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ccdc105cffbb594a519c3fdfc1e9d95ac6afccc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ccdc105cffbb594a519c3fdfc1e9d95ac6afccc", "html_url": "https://github.com/rust-lang/rust/commit/7ccdc105cffbb594a519c3fdfc1e9d95ac6afccc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ccdc105cffbb594a519c3fdfc1e9d95ac6afccc/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86360b7ef5771ea7d091d50fe9735f6767acbb21", "url": "https://api.github.com/repos/rust-lang/rust/commits/86360b7ef5771ea7d091d50fe9735f6767acbb21", "html_url": "https://github.com/rust-lang/rust/commit/86360b7ef5771ea7d091d50fe9735f6767acbb21"}, {"sha": "3b815730a711186a3bbe105800fb2dfa5f4d8caf", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b815730a711186a3bbe105800fb2dfa5f4d8caf", "html_url": "https://github.com/rust-lang/rust/commit/3b815730a711186a3bbe105800fb2dfa5f4d8caf"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "4540f620872287f5d692a8ecc3eb6c5bdf8046fe", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7ccdc105cffbb594a519c3fdfc1e9d95ac6afccc/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ccdc105cffbb594a519c3fdfc1e9d95ac6afccc/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=7ccdc105cffbb594a519c3fdfc1e9d95ac6afccc", "patch": "@@ -860,10 +860,18 @@ fn run_cargo(build: &Build, cargo: &mut Command, stamp: &Path) {\n             // have a hash in the name, but there's a version of this file in\n             // the `deps` folder which *does* have a hash in the name. That's\n             // the one we'll want to we'll probe for it later.\n-            toplevel.push((filename.file_stem().unwrap()\n-                                    .to_str().unwrap().to_string(),\n-                            filename.extension().unwrap().to_owned()\n-                                    .to_str().unwrap().to_string()));\n+            //\n+            // We do not use `Path::file_stem` or `Path::extension` here,\n+            // because some generated files may have multiple extensions e.g.\n+            // `std-<hash>.dll.lib` on Windows. The aforementioned methods only\n+            // split the file name by the last extension (`.lib`) while we need\n+            // to split by all extensions (`.dll.lib`).\n+            let filename = filename.file_name().unwrap().to_str().unwrap();\n+            let mut parts = filename.splitn(2, '.');\n+            let file_stem = parts.next().unwrap().to_owned();\n+            let extension = parts.next().unwrap().to_owned();\n+\n+            toplevel.push((file_stem, extension));\n         }\n     }\n "}]}