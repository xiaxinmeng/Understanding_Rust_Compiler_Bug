{"sha": "6bc4416b2b41a9d655cef8de0ee3ef0d5632bbb1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiYzQ0MTZiMmI0MWE5ZDY1NWNlZjhkZTBlZTNlZjBkNTYzMmJiYjE=", "commit": {"author": {"name": "Alex Hamilton", "email": "alex.hamilton@ou.edu", "date": "2019-01-27T21:41:22Z"}, "committer": {"name": "Alex Hamilton", "email": "alex.hamilton@ou.edu", "date": "2019-01-29T21:33:04Z"}, "message": "wilcard_match_arm: run rustfmt.", "tree": {"sha": "7c0a0d3e4fa84d731b3b5b9c1f589072079981fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c0a0d3e4fa84d731b3b5b9c1f589072079981fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bc4416b2b41a9d655cef8de0ee3ef0d5632bbb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc4416b2b41a9d655cef8de0ee3ef0d5632bbb1", "html_url": "https://github.com/rust-lang/rust/commit/6bc4416b2b41a9d655cef8de0ee3ef0d5632bbb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bc4416b2b41a9d655cef8de0ee3ef0d5632bbb1/comments", "author": {"login": "Aehmlo", "id": 1622250, "node_id": "MDQ6VXNlcjE2MjIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1622250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aehmlo", "html_url": "https://github.com/Aehmlo", "followers_url": "https://api.github.com/users/Aehmlo/followers", "following_url": "https://api.github.com/users/Aehmlo/following{/other_user}", "gists_url": "https://api.github.com/users/Aehmlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aehmlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aehmlo/subscriptions", "organizations_url": "https://api.github.com/users/Aehmlo/orgs", "repos_url": "https://api.github.com/users/Aehmlo/repos", "events_url": "https://api.github.com/users/Aehmlo/events{/privacy}", "received_events_url": "https://api.github.com/users/Aehmlo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aehmlo", "id": 1622250, "node_id": "MDQ6VXNlcjE2MjIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1622250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aehmlo", "html_url": "https://github.com/Aehmlo", "followers_url": "https://api.github.com/users/Aehmlo/followers", "following_url": "https://api.github.com/users/Aehmlo/following{/other_user}", "gists_url": "https://api.github.com/users/Aehmlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aehmlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aehmlo/subscriptions", "organizations_url": "https://api.github.com/users/Aehmlo/orgs", "repos_url": "https://api.github.com/users/Aehmlo/repos", "events_url": "https://api.github.com/users/Aehmlo/events{/privacy}", "received_events_url": "https://api.github.com/users/Aehmlo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c75dfeb29bc9e8e259382fe8af3917e43f07a9e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c75dfeb29bc9e8e259382fe8af3917e43f07a9e4", "html_url": "https://github.com/rust-lang/rust/commit/c75dfeb29bc9e8e259382fe8af3917e43f07a9e4"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "0245b5a1362e1bb10ea3aec25c29cfd6a4a09bc5", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6bc4416b2b41a9d655cef8de0ee3ef0d5632bbb1/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc4416b2b41a9d655cef8de0ee3ef0d5632bbb1/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=6bc4416b2b41a9d655cef8de0ee3ef0d5632bbb1", "patch": "@@ -197,7 +197,7 @@ declare_clippy_lint! {\n /// ```rust\n /// match x {\n ///     A => {},\n-///     _ => {}\n+///     _ => {},\n /// }\n /// ```\n declare_clippy_lint! {\n@@ -466,12 +466,14 @@ fn check_wild_err_arm(cx: &LateContext<'_, '_>, ex: &Expr, arms: &[Arm]) {\n fn check_wild_match(cx: &LateContext<'_, '_>, arms: &[Arm]) {\n     for arm in arms {\n         if is_wild(&arm.pats[0]) {\n-            span_note_and_lint(cx,\n+            span_note_and_lint(\n+                cx,\n                 WILDCARD_MATCH_ARM,\n                 arm.pats[0].span,\n                 \"wildcard match will miss any future added variants.\",\n                 arm.pats[0].span,\n-                \"to resolve, match each variant explicitly\");\n+                \"to resolve, match each variant explicitly\",\n+            );\n         }\n     }\n }"}]}