{"sha": "5060d2fa7cdbe9dc201c64f0814f776a429f4d3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNjBkMmZhN2NkYmU5ZGMyMDFjNjRmMDgxNGY3NzZhNDI5ZjRkM2U=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2016-12-21T12:37:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-12-21T12:37:27Z"}, "message": "Merge pull request #1206 from Manishearth/pub_enum_variant_names\n\nsplit pub_enum_variant_names to new lint", "tree": {"sha": "fffb265e4da4275308739988e83c399cbf703584", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fffb265e4da4275308739988e83c399cbf703584"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5060d2fa7cdbe9dc201c64f0814f776a429f4d3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5060d2fa7cdbe9dc201c64f0814f776a429f4d3e", "html_url": "https://github.com/rust-lang/rust/commit/5060d2fa7cdbe9dc201c64f0814f776a429f4d3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5060d2fa7cdbe9dc201c64f0814f776a429f4d3e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "647b30884d8ec6dbdc4f07d80c5c39eacfb0c061", "url": "https://api.github.com/repos/rust-lang/rust/commits/647b30884d8ec6dbdc4f07d80c5c39eacfb0c061", "html_url": "https://github.com/rust-lang/rust/commit/647b30884d8ec6dbdc4f07d80c5c39eacfb0c061"}, {"sha": "90fc9c389f2d0f4a51103a2541f3d9d1d119ce6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/90fc9c389f2d0f4a51103a2541f3d9d1d119ce6b", "html_url": "https://github.com/rust-lang/rust/commit/90fc9c389f2d0f4a51103a2541f3d9d1d119ce6b"}], "stats": {"total": 60, "additions": 52, "deletions": 8}, "files": [{"sha": "51381a6eb0248191dbe47da2adca0301705c4b8a", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5060d2fa7cdbe9dc201c64f0814f776a429f4d3e/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/5060d2fa7cdbe9dc201c64f0814f776a429f4d3e/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=5060d2fa7cdbe9dc201c64f0814f776a429f4d3e", "patch": "@@ -357,6 +357,7 @@ All notable changes to this project will be documented in this file.\n [`print_stdout`]: https://github.com/Manishearth/rust-clippy/wiki#print_stdout\n [`print_with_newline`]: https://github.com/Manishearth/rust-clippy/wiki#print_with_newline\n [`ptr_arg`]: https://github.com/Manishearth/rust-clippy/wiki#ptr_arg\n+[`pub_enum_variant_names`]: https://github.com/Manishearth/rust-clippy/wiki#pub_enum_variant_names\n [`range_step_by_zero`]: https://github.com/Manishearth/rust-clippy/wiki#range_step_by_zero\n [`range_zip_with_len`]: https://github.com/Manishearth/rust-clippy/wiki#range_zip_with_len\n [`redundant_closure`]: https://github.com/Manishearth/rust-clippy/wiki#redundant_closure"}, {"sha": "15751a0d3d0ba8de31ad0dbcbdb4666f3f52a30c", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5060d2fa7cdbe9dc201c64f0814f776a429f4d3e/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/5060d2fa7cdbe9dc201c64f0814f776a429f4d3e/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=5060d2fa7cdbe9dc201c64f0814f776a429f4d3e", "patch": "@@ -179,7 +179,7 @@ transparently:\n \n ## Lints\n \n-There are 179 lints included in this crate:\n+There are 180 lints included in this crate:\n \n name                                                                                                                   | default | triggers on\n -----------------------------------------------------------------------------------------------------------------------|---------|----------------------------------------------------------------------------------------------------------------------------------\n@@ -305,6 +305,7 @@ name\n [print_stdout](https://github.com/Manishearth/rust-clippy/wiki#print_stdout)                                           | allow   | printing on stdout\n [print_with_newline](https://github.com/Manishearth/rust-clippy/wiki#print_with_newline)                               | warn    | using `print!()` with a format string that ends in a newline\n [ptr_arg](https://github.com/Manishearth/rust-clippy/wiki#ptr_arg)                                                     | warn    | fn arguments of the type `&Vec<...>` or `&String`, suggesting to use `&[...]` or `&str` instead, respectively\n+[pub_enum_variant_names](https://github.com/Manishearth/rust-clippy/wiki#pub_enum_variant_names)                       | allow   | enums where all variants share a prefix/postfix\n [range_step_by_zero](https://github.com/Manishearth/rust-clippy/wiki#range_step_by_zero)                               | warn    | using `Range::step_by(0)`, which produces an infinite iterator\n [range_zip_with_len](https://github.com/Manishearth/rust-clippy/wiki#range_zip_with_len)                               | warn    | zipping iterator with a range when `enumerate()` would do\n [redundant_closure](https://github.com/Manishearth/rust-clippy/wiki#redundant_closure)                                 | warn    | redundant closures, i.e. `|a| foo(a)` (which can be written as just `foo`)"}, {"sha": "e7b73809dff267fb15be73e236736d4a1b771385", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5060d2fa7cdbe9dc201c64f0814f776a429f4d3e/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5060d2fa7cdbe9dc201c64f0814f776a429f4d3e/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=5060d2fa7cdbe9dc201c64f0814f776a429f4d3e", "patch": "@@ -28,6 +28,27 @@ declare_lint! {\n     \"enums where all variants share a prefix/postfix\"\n }\n \n+/// **What it does:** Detects enumeration variants that are prefixed or suffixed\n+/// by the same characters.\n+///\n+/// **Why is this bad?** Enumeration variant names should specify their variant,\n+/// not repeat the enumeration name.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// ```rust\n+/// enum Cake {\n+///     BlackForestCake,\n+///     HummingbirdCake,\n+/// }\n+/// ```\n+declare_lint! {\n+    pub PUB_ENUM_VARIANT_NAMES,\n+    Allow,\n+    \"enums where all variants share a prefix/postfix\"\n+}\n+\n /// **What it does:** Detects type names that are prefixed or suffixed by the\n /// containing module's name.\n ///\n@@ -90,7 +111,7 @@ impl EnumVariantNames {\n \n impl LintPass for EnumVariantNames {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(ENUM_VARIANT_NAMES, STUTTER, MODULE_INCEPTION)\n+        lint_array!(ENUM_VARIANT_NAMES, PUB_ENUM_VARIANT_NAMES, STUTTER, MODULE_INCEPTION)\n     }\n }\n \n@@ -120,18 +141,19 @@ fn check_variant(\n     def: &EnumDef,\n     item_name: &str,\n     item_name_chars: usize,\n-    span: Span\n+    span: Span,\n+    lint: &'static Lint\n ) {\n     if (def.variants.len() as u64) < threshold {\n         return;\n     }\n     for var in &def.variants {\n         let name = var2str(var);\n         if partial_match(item_name, &name) == item_name_chars {\n-            span_lint(cx, ENUM_VARIANT_NAMES, var.span, \"Variant name starts with the enum's name\");\n+            span_lint(cx, lint, var.span, \"Variant name starts with the enum's name\");\n         }\n         if partial_rmatch(item_name, &name) == item_name_chars {\n-            span_lint(cx, ENUM_VARIANT_NAMES, var.span, \"Variant name ends with the enum's name\");\n+            span_lint(cx, lint, var.span, \"Variant name ends with the enum's name\");\n         }\n     }\n     let first = var2str(&def.variants[0]);\n@@ -166,7 +188,7 @@ fn check_variant(\n         (true, false) => (\"post\", post),\n     };\n     span_help_and_lint(cx,\n-                       ENUM_VARIANT_NAMES,\n+                       lint,\n                        span,\n                        &format!(\"All variants have the same {}fix: `{}`\", what, value),\n                        &format!(\"remove the {}fixes and use full paths to \\\n@@ -233,7 +255,11 @@ impl EarlyLintPass for EnumVariantNames {\n             }\n         }\n         if let ItemKind::Enum(ref def, _) = item.node {\n-            check_variant(cx, self.threshold, def, &item_name, item_name_chars, item.span);\n+            let lint = match item.vis {\n+                Visibility::Public => PUB_ENUM_VARIANT_NAMES,\n+                _ => ENUM_VARIANT_NAMES,\n+            };\n+            check_variant(cx, self.threshold, def, &item_name, item_name_chars, item.span, lint);\n         }\n         self.modules.push((item_name, item_camel));\n     }"}, {"sha": "06aab286b2fe6effdf60b5724169c8ca0449c33d", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5060d2fa7cdbe9dc201c64f0814f776a429f4d3e/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5060d2fa7cdbe9dc201c64f0814f776a429f4d3e/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=5060d2fa7cdbe9dc201c64f0814f776a429f4d3e", "patch": "@@ -294,6 +294,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_lint_group(\"clippy_pedantic\", vec![\n         booleans::NONMINIMAL_BOOL,\n         enum_glob_use::ENUM_GLOB_USE,\n+        enum_variants::PUB_ENUM_VARIANT_NAMES,\n         enum_variants::STUTTER,\n         if_not_else::IF_NOT_ELSE,\n         items_after_statements::ITEMS_AFTER_STATEMENTS,"}, {"sha": "585535f9d999b83f157656cbe5f98e578d69a8f2", "filename": "tests/compile-fail/enum_variants.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5060d2fa7cdbe9dc201c64f0814f776a429f4d3e/tests%2Fcompile-fail%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5060d2fa7cdbe9dc201c64f0814f776a429f4d3e/tests%2Fcompile-fail%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fenum_variants.rs?ref=5060d2fa7cdbe9dc201c64f0814f776a429f4d3e", "patch": "@@ -1,6 +1,6 @@\n #![feature(plugin, non_ascii_idents)]\n #![plugin(clippy)]\n-#![deny(clippy)]\n+#![deny(clippy, pub_enum_variant_names)]\n \n enum FakeCallType {\n     CALL, CREATE\n@@ -87,4 +87,19 @@ enum NonCaps { //~ ERROR: All variants have the same prefix: `Prefix`\n     PrefixCake,\n }\n \n+pub enum PubSeall { //~ ERROR: All variants have the same prefix:\n+    WithOutCake,\n+    WithOutTea,\n+    WithOut,\n+}\n+\n+#[allow(pub_enum_variant_names)]\n+mod allowed {\n+    pub enum PubAllowed {\n+        SomeThis,\n+        SomeThat,\n+        SomeOtherWhat,\n+    }\n+}\n+\n fn main() {}"}]}