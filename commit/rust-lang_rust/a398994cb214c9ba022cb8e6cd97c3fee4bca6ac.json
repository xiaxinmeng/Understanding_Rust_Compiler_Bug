{"sha": "a398994cb214c9ba022cb8e6cd97c3fee4bca6ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzOTg5OTRjYjIxNGM5YmEwMjJjYjhlNmNkOTdjM2ZlZTRiY2E2YWM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-01-27T00:53:56Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-01-27T00:53:56Z"}, "message": "Account for existing `_` field pattern when suggesting `..`\n\nFollow up to #80017.", "tree": {"sha": "688c321cd6a68839c6e39bfd1e2d46c312b59ec5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/688c321cd6a68839c6e39bfd1e2d46c312b59ec5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a398994cb214c9ba022cb8e6cd97c3fee4bca6ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a398994cb214c9ba022cb8e6cd97c3fee4bca6ac", "html_url": "https://github.com/rust-lang/rust/commit/a398994cb214c9ba022cb8e6cd97c3fee4bca6ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a398994cb214c9ba022cb8e6cd97c3fee4bca6ac/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7907345e58b4f4d2c95e5ea9b8e0b3bff8946523", "url": "https://api.github.com/repos/rust-lang/rust/commits/7907345e58b4f4d2c95e5ea9b8e0b3bff8946523", "html_url": "https://github.com/rust-lang/rust/commit/7907345e58b4f4d2c95e5ea9b8e0b3bff8946523"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "12256058b87152ace4c6bcc19e56e483964e1c10", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a398994cb214c9ba022cb8e6cd97c3fee4bca6ac/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a398994cb214c9ba022cb8e6cd97c3fee4bca6ac/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=a398994cb214c9ba022cb8e6cd97c3fee4bca6ac", "patch": "@@ -1041,12 +1041,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 vec![(left, \"(\".to_string()), (right.shrink_to_hi(), \")\".to_string())],\n                 Applicability::MachineApplicable,\n             );\n-        } else if fields.len() > subpats.len() {\n-            let after_fields_span = if pat_span == DUMMY_SP {\n-                pat_span\n-            } else {\n-                pat_span.with_hi(pat_span.hi() - BytePos(1)).shrink_to_hi()\n-            };\n+        } else if fields.len() > subpats.len() && pat_span != DUMMY_SP {\n+            let after_fields_span = pat_span.with_hi(pat_span.hi() - BytePos(1)).shrink_to_hi();\n             let all_fields_span = match subpats {\n                 [] => after_fields_span,\n                 [field] => field.span,\n@@ -1055,7 +1051,19 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n             // Check if all the fields in the pattern are wildcards.\n             let all_wildcards = subpats.iter().all(|pat| matches!(pat.kind, PatKind::Wild));\n+            let first_tail_wildcard =\n+                subpats.iter().enumerate().fold(None, |acc, (pos, pat)| match (acc, &pat.kind) {\n+                    (None, PatKind::Wild) => Some(pos),\n+                    (Some(_), PatKind::Wild) => acc,\n+                    _ => None,\n+                });\n+            let tail_span = match first_tail_wildcard {\n+                None => after_fields_span,\n+                Some(0) => subpats[0].span.to(after_fields_span),\n+                Some(pos) => subpats[pos - 1].span.shrink_to_hi().to(after_fields_span),\n+            };\n \n+            // FIXME: heuristic-based suggestion to check current types for where to add `_`.\n             let mut wildcard_sugg = vec![\"_\"; fields.len() - subpats.len()].join(\", \");\n             if !subpats.is_empty() {\n                 wildcard_sugg = String::from(\", \") + &wildcard_sugg;\n@@ -1080,7 +1088,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     );\n                 } else {\n                     err.span_suggestion_verbose(\n-                        after_fields_span,\n+                        tail_span,\n                         \"use `..` to ignore the rest of the fields\",\n                         String::from(\", ..\"),\n                         Applicability::MaybeIncorrect,"}, {"sha": "70c21dbafe9fc160bce1b2bd5069c2eab5beb96f", "filename": "src/test/ui/pattern/pat-tuple-underfield.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a398994cb214c9ba022cb8e6cd97c3fee4bca6ac/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a398994cb214c9ba022cb8e6cd97c3fee4bca6ac/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr?ref=a398994cb214c9ba022cb8e6cd97c3fee4bca6ac", "patch": "@@ -122,8 +122,8 @@ LL |         Point4(   a   ,     _    , _, _) => {}\n    |                                  ^^^^^^\n help: use `..` to ignore the rest of the fields\n    |\n-LL |         Point4(   a   ,     _    , ..) => {}\n-   |                                  ^^^^\n+LL |         Point4(   a, ..) => {}\n+   |                    ^^^^\n \n error: aborting due to 8 previous errors\n "}]}