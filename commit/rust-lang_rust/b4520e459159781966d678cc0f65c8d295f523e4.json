{"sha": "b4520e459159781966d678cc0f65c8d295f523e4", "node_id": "C_kwDOAAsO6NoAKGI0NTIwZTQ1OTE1OTc4MTk2NmQ2NzhjYzBmNjVjOGQyOTVmNTIzZTQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-02T16:26:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-02T17:32:04Z"}, "message": "test fs::read_link surface function", "tree": {"sha": "98272469cbcf8ad9df237832ad168f95b519feb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98272469cbcf8ad9df237832ad168f95b519feb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4520e459159781966d678cc0f65c8d295f523e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4520e459159781966d678cc0f65c8d295f523e4", "html_url": "https://github.com/rust-lang/rust/commit/b4520e459159781966d678cc0f65c8d295f523e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4520e459159781966d678cc0f65c8d295f523e4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9d5c3f88c2cdb96702ffb4d6183864315bc8ca1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9d5c3f88c2cdb96702ffb4d6183864315bc8ca1", "html_url": "https://github.com/rust-lang/rust/commit/c9d5c3f88c2cdb96702ffb4d6183864315bc8ca1"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "e106ca5d02bb8e75fa78f63f2a46f6ee52832711", "filename": "tests/pass/fs.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b4520e459159781966d678cc0f65c8d295f523e4/tests%2Fpass%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4520e459159781966d678cc0f65c8d295f523e4/tests%2Fpass%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Ffs.rs?ref=b4520e459159781966d678cc0f65c8d295f523e4", "patch": "@@ -8,7 +8,8 @@ extern crate libc;\n \n use std::ffi::CString;\n use std::fs::{\n-    create_dir, read_dir, remove_dir, remove_dir_all, remove_file, rename, File, OpenOptions,\n+    create_dir, read_dir, read_link, remove_dir, remove_dir_all, remove_file, rename, File,\n+    OpenOptions,\n };\n use std::io::{Error, ErrorKind, Read, Result, Seek, SeekFrom, Write};\n use std::path::{Path, PathBuf};\n@@ -317,10 +318,12 @@ fn test_symlink() {\n         assert_eq!(Error::last_os_error().kind(), ErrorKind::NotFound);\n     }\n \n-    // Test that metadata of a symbolic link is correct.\n+    // Test that metadata of a symbolic link (i.e., the file it points to) is correct.\n     check_metadata(bytes, &symlink_path).unwrap();\n     // Test that the metadata of a symbolic link is correct when not following it.\n     assert!(symlink_path.symlink_metadata().unwrap().file_type().is_symlink());\n+    // Check that we can follow the link.\n+    assert_eq!(read_link(&symlink_path).unwrap(), path);\n     // Removing symbolic link should succeed.\n     remove_file(&symlink_path).unwrap();\n "}]}