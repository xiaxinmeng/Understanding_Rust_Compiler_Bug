{"sha": "73649f36e8092006560e5d48213fcf067de38a6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNjQ5ZjM2ZTgwOTIwMDY1NjBlNWQ0ODIxM2ZjZjA2N2RlMzhhNmY=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-01-07T22:05:13Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-01-07T22:22:01Z"}, "message": "fmt: derive Eq for all types", "tree": {"sha": "b59b324e13fad58cc5429799c93ff33b895b0803", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b59b324e13fad58cc5429799c93ff33b895b0803"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73649f36e8092006560e5d48213fcf067de38a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73649f36e8092006560e5d48213fcf067de38a6f", "html_url": "https://github.com/rust-lang/rust/commit/73649f36e8092006560e5d48213fcf067de38a6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73649f36e8092006560e5d48213fcf067de38a6f/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0429493363414d5be8e028812fd01a8a309ef24e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0429493363414d5be8e028812fd01a8a309ef24e", "html_url": "https://github.com/rust-lang/rust/commit/0429493363414d5be8e028812fd01a8a309ef24e"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "3caafc47b926e4f1ad16409d173812bcb6f41006", "filename": "src/libcore/extfmt.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/73649f36e8092006560e5d48213fcf067de38a6f/src%2Flibcore%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73649f36e8092006560e5d48213fcf067de38a6f/src%2Flibcore%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fextfmt.rs?ref=73649f36e8092006560e5d48213fcf067de38a6f", "patch": "@@ -102,10 +102,13 @@ pub mod ct {\n     use str;\n     use vec;\n \n+    #[deriving_eq]\n     pub enum Signedness { Signed, Unsigned, }\n \n+    #[deriving_eq]\n     pub enum Caseness { CaseUpper, CaseLower, }\n \n+    #[deriving_eq]\n     pub enum Ty {\n         TyBool,\n         TyStr,\n@@ -118,6 +121,7 @@ pub mod ct {\n         TyPoly,\n     }\n \n+    #[deriving_eq]\n     pub enum Flag {\n         FlagLeftJustify,\n         FlagLeftZeroPad,\n@@ -126,13 +130,15 @@ pub mod ct {\n         FlagAlternate,\n     }\n \n+    #[deriving_eq]\n     pub enum Count {\n         CountIs(uint),\n         CountIsParam(uint),\n         CountIsNextParam,\n         CountImplied,\n     }\n \n+    #[deriving_eq]\n     struct Parsed<T> {\n         val: T,\n         next: uint\n@@ -145,6 +151,7 @@ pub mod ct {\n     }\n \n     // A formatted conversion from an expression to a string\n+    #[deriving_eq]\n     pub struct Conv {\n         param: Option<uint>,\n         flags: ~[Flag],\n@@ -154,6 +161,7 @@ pub mod ct {\n     }\n \n     // A fragment of the output sequence\n+    #[deriving_eq]\n     pub enum Piece { PieceString(~str), PieceConv(Conv), }\n \n     pub type ErrorFn = @fn(&str) -> !;"}]}