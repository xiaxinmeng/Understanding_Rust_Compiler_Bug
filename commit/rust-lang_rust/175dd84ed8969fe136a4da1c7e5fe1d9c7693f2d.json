{"sha": "175dd84ed8969fe136a4da1c7e5fe1d9c7693f2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NWRkODRlZDg5NjlmZTEzNmE0ZGExYzdlNWZlMWQ5Yzc2OTNmMmQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-17T17:57:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-17T17:57:13Z"}, "message": "Rollup merge of #47333 - arthurprs:iter-position-bounds-check, r=dtolnay\n\nOptimize slice.{r}position result bounds check\n\nSecond attempt of https://github.com/rust-lang/rust/pull/45501\nFixes https://github.com/rust-lang/rust/issues/45964\n\nDemo: https://godbolt.org/g/N4mBHp", "tree": {"sha": "e273945750e0615538bc5314972aeee154425c71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e273945750e0615538bc5314972aeee154425c71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/175dd84ed8969fe136a4da1c7e5fe1d9c7693f2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/175dd84ed8969fe136a4da1c7e5fe1d9c7693f2d", "html_url": "https://github.com/rust-lang/rust/commit/175dd84ed8969fe136a4da1c7e5fe1d9c7693f2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/175dd84ed8969fe136a4da1c7e5fe1d9c7693f2d/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "283ee544586a0952a9a45782f42addc9dbac3392", "url": "https://api.github.com/repos/rust-lang/rust/commits/283ee544586a0952a9a45782f42addc9dbac3392", "html_url": "https://github.com/rust-lang/rust/commit/283ee544586a0952a9a45782f42addc9dbac3392"}, {"sha": "0b56ab0f7b0c5e01611b7ea6a28c77bc09c26275", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b56ab0f7b0c5e01611b7ea6a28c77bc09c26275", "html_url": "https://github.com/rust-lang/rust/commit/0b56ab0f7b0c5e01611b7ea6a28c77bc09c26275"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "5bf7301434771512d26f8e59bf20081f78f63a12", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/175dd84ed8969fe136a4da1c7e5fe1d9c7693f2d/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/175dd84ed8969fe136a4da1c7e5fe1d9c7693f2d/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=175dd84ed8969fe136a4da1c7e5fe1d9c7693f2d", "patch": "@@ -1237,6 +1237,43 @@ macro_rules! iterator {\n                 }\n                 accum\n             }\n+\n+            #[inline]\n+            #[rustc_inherit_overflow_checks]\n+            fn position<P>(&mut self, mut predicate: P) -> Option<usize> where\n+                Self: Sized,\n+                P: FnMut(Self::Item) -> bool,\n+            {\n+                // The addition might panic on overflow\n+                let n = self.len();\n+                self.try_fold(0, move |i, x| {\n+                    if predicate(x) { Err(i) }\n+                    else { Ok(i + 1) }\n+                }).err()\n+                    .map(|i| {\n+                        unsafe { assume(i < n) };\n+                        i\n+                    })\n+            }\n+\n+            #[inline]\n+            fn rposition<P>(&mut self, mut predicate: P) -> Option<usize> where\n+                P: FnMut(Self::Item) -> bool,\n+                Self: Sized + ExactSizeIterator + DoubleEndedIterator\n+            {\n+                // No need for an overflow check here, because `ExactSizeIterator`\n+                // implies that the number of elements fits into a `usize`.\n+                let n = self.len();\n+                self.try_rfold(n, move |i, x| {\n+                    let i = i - 1;\n+                    if predicate(x) { Err(i) }\n+                    else { Ok(i) }\n+                }).err()\n+                    .map(|i| {\n+                        unsafe { assume(i < n) };\n+                        i\n+                    })\n+            }\n         }\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "13740b958025171b2875d9b9e9c57947716d8842", "filename": "src/libcore/tests/slice.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/175dd84ed8969fe136a4da1c7e5fe1d9c7693f2d/src%2Flibcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/175dd84ed8969fe136a4da1c7e5fe1d9c7693f2d/src%2Flibcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fslice.rs?ref=175dd84ed8969fe136a4da1c7e5fe1d9c7693f2d", "patch": "@@ -10,6 +10,25 @@\n \n use core::result::Result::{Ok, Err};\n \n+\n+#[test]\n+fn test_position() {\n+    let b = [1, 2, 3, 5, 5];\n+    assert!(b.iter().position(|&v| v == 9) == None);\n+    assert!(b.iter().position(|&v| v == 5) == Some(3));\n+    assert!(b.iter().position(|&v| v == 3) == Some(2));\n+    assert!(b.iter().position(|&v| v == 0) == None);\n+}\n+\n+#[test]\n+fn test_rposition() {\n+    let b = [1, 2, 3, 5, 5];\n+    assert!(b.iter().rposition(|&v| v == 9) == None);\n+    assert!(b.iter().rposition(|&v| v == 5) == Some(4));\n+    assert!(b.iter().rposition(|&v| v == 3) == Some(2));\n+    assert!(b.iter().rposition(|&v| v == 0) == None);\n+}\n+\n #[test]\n fn test_binary_search() {\n     let b: [i32; 0] = [];"}]}