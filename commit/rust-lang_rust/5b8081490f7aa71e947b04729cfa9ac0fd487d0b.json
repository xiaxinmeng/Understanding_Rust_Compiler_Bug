{"sha": "5b8081490f7aa71e947b04729cfa9ac0fd487d0b", "node_id": "C_kwDOAAsO6NoAKDViODA4MTQ5MGY3YWE3MWU5NDdiMDQ3MjljZmE5YWMwZmQ0ODdkMGI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-28T07:35:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-28T07:35:19Z"}, "message": "Rollup merge of #101038 - RalfJung:interning-alignment, r=oli-obk\n\nno alignment check during interning\n\nThis should fix https://github.com/rust-lang/rust/issues/101034\nr? `@oli-obk`\n\nUnfortunately we don't have a self-contained testcase for this problem. I am not sure how it can be triggered...", "tree": {"sha": "41ebc6647ca1c7148d30476ad695a914eacdd939", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41ebc6647ca1c7148d30476ad695a914eacdd939"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b8081490f7aa71e947b04729cfa9ac0fd487d0b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjCxq3CRBK7hj4Ov3rIwAAKNYIABPZvSM53B/hm24bPnCGIH+T\nBu2ioL8xpMlwqeKuxn8+mr6MWHGoAkLi5d0ftvdsqRTPEyKj5w4SVLaENnma5lgR\nNFV7D8IUMcfljpnkMbnpNqaDZl4oEGElt7XsHpf6JlwzD3GahpWAdhEfnvWLMBwv\nufVSP16Xf8sRmfNPk3n4a/l8oiqAU8sx8MZ5vN+FwEIloMS7jl0sd4HIFp3WctMb\n2ZANbRrJUmM/W3SmksiyjUsZf7QqiVwgX0Enw9NJ+BX3bHBBuLyCuQ5lO76abTEz\nXc1B5QQM95eaUk4dxs/BiYyyXx1fzO9qCUqVFr/pEzArwyeFFjyd+deHmAboPlw=\n=CMOa\n-----END PGP SIGNATURE-----\n", "payload": "tree 41ebc6647ca1c7148d30476ad695a914eacdd939\nparent c5770219f24cc72852b03a16deec76901af343b4\nparent 468c617c2124b0b50eedab634656d213fc1e033d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1661672119 +0200\ncommitter GitHub <noreply@github.com> 1661672119 +0200\n\nRollup merge of #101038 - RalfJung:interning-alignment, r=oli-obk\n\nno alignment check during interning\n\nThis should fix https://github.com/rust-lang/rust/issues/101034\nr? `@oli-obk`\n\nUnfortunately we don't have a self-contained testcase for this problem. I am not sure how it can be triggered...\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b8081490f7aa71e947b04729cfa9ac0fd487d0b", "html_url": "https://github.com/rust-lang/rust/commit/5b8081490f7aa71e947b04729cfa9ac0fd487d0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b8081490f7aa71e947b04729cfa9ac0fd487d0b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5770219f24cc72852b03a16deec76901af343b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5770219f24cc72852b03a16deec76901af343b4", "html_url": "https://github.com/rust-lang/rust/commit/c5770219f24cc72852b03a16deec76901af343b4"}, {"sha": "468c617c2124b0b50eedab634656d213fc1e033d", "url": "https://api.github.com/repos/rust-lang/rust/commits/468c617c2124b0b50eedab634656d213fc1e033d", "html_url": "https://github.com/rust-lang/rust/commit/468c617c2124b0b50eedab634656d213fc1e033d"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "4601914c25f88b70e7b99300970259196d9389f7", "filename": "compiler/rustc_const_eval/src/const_eval/eval_queries.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b8081490f7aa71e947b04729cfa9ac0fd487d0b/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8081490f7aa71e947b04729cfa9ac0fd487d0b/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs?ref=5b8081490f7aa71e947b04729cfa9ac0fd487d0b", "patch": "@@ -74,7 +74,9 @@ fn eval_body_using_ecx<'mir, 'tcx>(\n             None => InternKind::Constant,\n         }\n     };\n+    ecx.machine.check_alignment = false; // interning doesn't need to respect alignment\n     intern_const_alloc_recursive(ecx, intern_kind, &ret)?;\n+    // we leave alignment checks off, since this `ecx` will not be used for further evaluation anyway\n \n     debug!(\"eval_body_using_ecx done: {:?}\", *ret);\n     Ok(ret)"}, {"sha": "6c1e61fccca194619b81e82d4ade8e7e2f60b006", "filename": "compiler/rustc_const_eval/src/const_eval/machine.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5b8081490f7aa71e947b04729cfa9ac0fd487d0b/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8081490f7aa71e947b04729cfa9ac0fd487d0b/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs?ref=5b8081490f7aa71e947b04729cfa9ac0fd487d0b", "patch": "@@ -89,10 +89,10 @@ pub struct CompileTimeInterpreter<'mir, 'tcx> {\n     /// exhaustion error.\n     ///\n     /// Setting this to `0` disables the limit and allows the interpreter to run forever.\n-    pub steps_remaining: usize,\n+    pub(super) steps_remaining: usize,\n \n     /// The virtual call stack.\n-    pub(crate) stack: Vec<Frame<'mir, 'tcx, AllocId, ()>>,\n+    pub(super) stack: Vec<Frame<'mir, 'tcx, AllocId, ()>>,\n \n     /// We need to make sure consts never point to anything mutable, even recursively. That is\n     /// relied on for pattern matching on consts with references.\n@@ -103,7 +103,7 @@ pub struct CompileTimeInterpreter<'mir, 'tcx> {\n     pub(super) can_access_statics: bool,\n \n     /// Whether to check alignment during evaluation.\n-    check_alignment: bool,\n+    pub(super) check_alignment: bool,\n }\n \n impl<'mir, 'tcx> CompileTimeInterpreter<'mir, 'tcx> {"}, {"sha": "e0de705c488460b22da6d7462ff839ea2b6055be", "filename": "src/test/ui/consts/extra-const-ub/issue-101034.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5b8081490f7aa71e947b04729cfa9ac0fd487d0b/src%2Ftest%2Fui%2Fconsts%2Fextra-const-ub%2Fissue-101034.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8081490f7aa71e947b04729cfa9ac0fd487d0b/src%2Ftest%2Fui%2Fconsts%2Fextra-const-ub%2Fissue-101034.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fextra-const-ub%2Fissue-101034.rs?ref=5b8081490f7aa71e947b04729cfa9ac0fd487d0b", "patch": "@@ -0,0 +1,17 @@\n+// check-pass\n+// compile-flags: -Zextra-const-ub-checks\n+\n+#[repr(packed)]\n+pub struct Foo {\n+    bar: u8,\n+    baa: [u32; 1],\n+}\n+\n+const FOOMP: Foo = Foo {\n+    bar: 0,\n+    baa: [69; 1],\n+};\n+\n+fn main() {\n+    let _val = FOOMP;\n+}"}]}