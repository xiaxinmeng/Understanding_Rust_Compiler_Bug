{"sha": "d657d180835cee1e4b4ad4400d1f33f62ecd37b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2NTdkMTgwODM1Y2VlMWU0YjRhZDQ0MDBkMWYzM2Y2MmVjZDM3YjY=", "commit": {"author": {"name": "Christian", "email": "chris_veenman@hotmail.com", "date": "2019-03-21T14:26:07Z"}, "committer": {"name": "Christian", "email": "chris_veenman@hotmail.com", "date": "2019-03-21T14:26:07Z"}, "message": "Fixed indentation of list items.", "tree": {"sha": "477d82bb62605919b3546634d9d88151766d68b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/477d82bb62605919b3546634d9d88151766d68b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d657d180835cee1e4b4ad4400d1f33f62ecd37b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d657d180835cee1e4b4ad4400d1f33f62ecd37b6", "html_url": "https://github.com/rust-lang/rust/commit/d657d180835cee1e4b4ad4400d1f33f62ecd37b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d657d180835cee1e4b4ad4400d1f33f62ecd37b6/comments", "author": null, "committer": null, "parents": [{"sha": "49a9b349acda7bbf8d555cda4218351472534173", "url": "https://api.github.com/repos/rust-lang/rust/commits/49a9b349acda7bbf8d555cda4218351472534173", "html_url": "https://github.com/rust-lang/rust/commit/49a9b349acda7bbf8d555cda4218351472534173"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "ec15a7f68fb07b04e4ed4be512493d82a547ea97", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d657d180835cee1e4b4ad4400d1f33f62ecd37b6/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d657d180835cee1e4b4ad4400d1f33f62ecd37b6/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=d657d180835cee1e4b4ad4400d1f33f62ecd37b6", "patch": "@@ -7,10 +7,9 @@\n //! - Implement the [`AsMut`] trait for cheap mutable-to-mutable conversions\n //! - Implement the [`From`] trait for consuming value-to-value conversions\n //! - Implement the [`Into`] trait for consuming value-to-value conversions to types\n-//! outside the current crate\n+//!   outside the current crate\n //! - The [`TryFrom`] and [`TryInto`] traits behave like [`From`] and [`Into`],\n-//! but should be implemented when\n-//! the conversion can fail.\n+//!   but should be implemented when the conversion can fail.\n //!\n //! The traits in this module are often used as trait bounds for generic functions such that to\n //! arguments of multiple types are supported. See the documentation of each trait for examples.\n@@ -243,7 +242,6 @@ pub trait AsMut<T: ?Sized> {\n /// Prefer using ```Into``` over ```From``` when specifying trait bounds on a generic function\n /// to ensure that types that only implement ```Into``` can be used as well.\n ///\n-///\n /// # Examples\n ///\n /// [`String`] implements `Into<Vec<u8>>`:"}]}