{"sha": "093fb856a32c93941db9297cc452444d9c628ce4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5M2ZiODU2YTMyYzkzOTQxZGI5Mjk3Y2M0NTI0NDRkOWM2MjhjZTQ=", "commit": {"author": {"name": "maik", "email": "maik.klein@embark-studios.com", "date": "2020-01-07T15:20:58Z"}, "committer": {"name": "maik", "email": "maik.klein@embark-studios.com", "date": "2020-01-07T15:20:58Z"}, "message": "Always export static variables as SymbolExportLevel::C in wasm", "tree": {"sha": "d613b9f03d716584ebfdeaad9bc2aad0d4211bb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d613b9f03d716584ebfdeaad9bc2aad0d4211bb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/093fb856a32c93941db9297cc452444d9c628ce4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/093fb856a32c93941db9297cc452444d9c628ce4", "html_url": "https://github.com/rust-lang/rust/commit/093fb856a32c93941db9297cc452444d9c628ce4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/093fb856a32c93941db9297cc452444d9c628ce4/comments", "author": {"login": "MaikKlein", "id": 1994306, "node_id": "MDQ6VXNlcjE5OTQzMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1994306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaikKlein", "html_url": "https://github.com/MaikKlein", "followers_url": "https://api.github.com/users/MaikKlein/followers", "following_url": "https://api.github.com/users/MaikKlein/following{/other_user}", "gists_url": "https://api.github.com/users/MaikKlein/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaikKlein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaikKlein/subscriptions", "organizations_url": "https://api.github.com/users/MaikKlein/orgs", "repos_url": "https://api.github.com/users/MaikKlein/repos", "events_url": "https://api.github.com/users/MaikKlein/events{/privacy}", "received_events_url": "https://api.github.com/users/MaikKlein/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MaikKlein", "id": 1994306, "node_id": "MDQ6VXNlcjE5OTQzMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1994306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaikKlein", "html_url": "https://github.com/MaikKlein", "followers_url": "https://api.github.com/users/MaikKlein/followers", "following_url": "https://api.github.com/users/MaikKlein/following{/other_user}", "gists_url": "https://api.github.com/users/MaikKlein/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaikKlein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaikKlein/subscriptions", "organizations_url": "https://api.github.com/users/MaikKlein/orgs", "repos_url": "https://api.github.com/users/MaikKlein/repos", "events_url": "https://api.github.com/users/MaikKlein/events{/privacy}", "received_events_url": "https://api.github.com/users/MaikKlein/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb4fc2d4fefe2638f986aeb0fa2368ff88c584d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb4fc2d4fefe2638f986aeb0fa2368ff88c584d5", "html_url": "https://github.com/rust-lang/rust/commit/eb4fc2d4fefe2638f986aeb0fa2368ff88c584d5"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "a406b5f103b9d2f85f73109b6bb4cb33e7625699", "filename": "src/librustc_codegen_ssa/back/symbol_export.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/093fb856a32c93941db9297cc452444d9c628ce4/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/093fb856a32c93941db9297cc452444d9c628ce4/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs?ref=093fb856a32c93941db9297cc452444d9c628ce4", "patch": "@@ -345,16 +345,11 @@ fn symbol_export_level(tcx: TyCtxt<'_>, sym_def_id: DefId) -> SymbolExportLevel\n     if is_extern && !std_internal {\n         let target = &tcx.sess.target.target.llvm_target;\n         // WebAssembly cannot export data symbols, so reduce their export level\n-        if target.contains(\"wasm32\") || target.contains(\"emscripten\") {\n+        if target.contains(\"emscripten\") {\n             if let Some(Node::Item(&hir::Item { kind: hir::ItemKind::Static(..), .. })) =\n                 tcx.hir().get_if_local(sym_def_id)\n             {\n-                let export_level = if tcx.type_of(sym_def_id).is_scalar() {\n-                    SymbolExportLevel::C\n-                } else {\n-                    SymbolExportLevel::Rust\n-                };\n-                return export_level;\n+                return SymbolExportLevel::Rust;\n             }\n         }\n "}]}