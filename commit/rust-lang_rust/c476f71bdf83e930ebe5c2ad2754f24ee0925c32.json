{"sha": "c476f71bdf83e930ebe5c2ad2754f24ee0925c32", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NzZmNzFiZGY4M2U5MzBlYmU1YzJhZDI3NTRmMjRlZTA5MjVjMzI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-08T13:03:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-08T13:03:14Z"}, "message": "Highlight only the unsafe operator itself", "tree": {"sha": "d5fdad416d0fd67477fbc857267487bc6111e7a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5fdad416d0fd67477fbc857267487bc6111e7a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c476f71bdf83e930ebe5c2ad2754f24ee0925c32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c476f71bdf83e930ebe5c2ad2754f24ee0925c32", "html_url": "https://github.com/rust-lang/rust/commit/c476f71bdf83e930ebe5c2ad2754f24ee0925c32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c476f71bdf83e930ebe5c2ad2754f24ee0925c32/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83fd0fb35573985a5f6d055ce87888fac8ca3535", "url": "https://api.github.com/repos/rust-lang/rust/commits/83fd0fb35573985a5f6d055ce87888fac8ca3535", "html_url": "https://github.com/rust-lang/rust/commit/83fd0fb35573985a5f6d055ce87888fac8ca3535"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "ab45c364a81f56f2f5a6f9c46ea6223ac800cf28", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c476f71bdf83e930ebe5c2ad2754f24ee0925c32/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c476f71bdf83e930ebe5c2ad2754f24ee0925c32/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=c476f71bdf83e930ebe5c2ad2754f24ee0925c32", "patch": "@@ -480,12 +480,8 @@ fn highlight_element(\n                 _ => h,\n             }\n         }\n-        PREFIX_EXPR => {\n-            let prefix_expr = element.into_node().and_then(ast::PrefixExpr::cast)?;\n-            match prefix_expr.op_kind() {\n-                Some(ast::PrefixOp::Deref) => {}\n-                _ => return None,\n-            }\n+        T![*] => {\n+            let prefix_expr = element.parent().and_then(ast::PrefixExpr::cast)?;\n \n             let expr = prefix_expr.expr()?;\n             let ty = sema.type_of_expr(&expr)?;"}]}