{"sha": "2529b730874985cc2d8d97032d9790ae6c5bcbae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1MjliNzMwODc0OTg1Y2MyZDhkOTcwMzJkOTc5MGFlNmM1YmNiYWU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-05T11:54:24Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-05T13:40:37Z"}, "message": "adopt new header style to sidestep rust-lang-nursery/rustfmt#836", "tree": {"sha": "0a34155613cce8f9745c965def677c4b19adb763", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a34155613cce8f9745c965def677c4b19adb763"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2529b730874985cc2d8d97032d9790ae6c5bcbae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2529b730874985cc2d8d97032d9790ae6c5bcbae", "html_url": "https://github.com/rust-lang/rust/commit/2529b730874985cc2d8d97032d9790ae6c5bcbae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2529b730874985cc2d8d97032d9790ae6c5bcbae/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43dc48c7ffb45c714b33b1e47f23f6d711c89596", "url": "https://api.github.com/repos/rust-lang/rust/commits/43dc48c7ffb45c714b33b1e47f23f6d711c89596", "html_url": "https://github.com/rust-lang/rust/commit/43dc48c7ffb45c714b33b1e47f23f6d711c89596"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "99a87d1e760c30498c7b352dbe84a5fc7287d668", "filename": "src/librustc_data_structures/graph/mod.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2529b730874985cc2d8d97032d9790ae6c5bcbae/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2529b730874985cc2d8d97032d9790ae6c5bcbae/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs?ref=2529b730874985cc2d8d97032d9790ae6c5bcbae", "patch": "@@ -121,8 +121,7 @@ impl<N: Debug, E: Debug> Graph<N, E> {\n         }\n     }\n \n-    ///////////////////////////////////////////////////////////////////////////\n-    // Simple accessors\n+    // # Simple accessors\n \n     #[inline]\n     pub fn all_nodes(&self) -> &[Node<N>] {\n@@ -144,8 +143,7 @@ impl<N: Debug, E: Debug> Graph<N, E> {\n         self.edges.len()\n     }\n \n-    ///////////////////////////////////////////////////////////////////////////\n-    // Node construction\n+    // # Node construction\n \n     pub fn next_node_index(&self) -> NodeIndex {\n         NodeIndex(self.nodes.len())\n@@ -172,8 +170,7 @@ impl<N: Debug, E: Debug> Graph<N, E> {\n         &self.nodes[idx.0]\n     }\n \n-    ///////////////////////////////////////////////////////////////////////////\n-    // Edge construction and queries\n+    // # Edge construction and queries\n \n     pub fn next_edge_index(&self) -> EdgeIndex {\n         EdgeIndex(self.edges.len())\n@@ -232,8 +229,7 @@ impl<N: Debug, E: Debug> Graph<N, E> {\n         self.edges[edge.0].next_edge[dir.repr]\n     }\n \n-    ///////////////////////////////////////////////////////////////////////////\n-    // Iterating over nodes, edges\n+    // # Iterating over nodes, edges\n \n     pub fn each_node<'a, F>(&'a self, mut f: F) -> bool\n         where F: FnMut(NodeIndex, &'a Node<N>) -> bool\n@@ -274,8 +270,7 @@ impl<N: Debug, E: Debug> Graph<N, E> {\n         self.incoming_edges(target).sources()\n     }\n \n-    ///////////////////////////////////////////////////////////////////////////\n-    // Fixed-point iteration\n+    // # Fixed-point iteration\n     //\n     // A common use for graphs in our compiler is to perform\n     // fixed-point iteration. In this case, each edge represents a\n@@ -306,8 +301,7 @@ impl<N: Debug, E: Debug> Graph<N, E> {\n     }\n }\n \n-///////////////////////////////////////////////////////////////////////////\n-// Iterators\n+// # Iterators\n \n pub struct AdjacentEdges<'g, N, E>\n     where N: 'g,"}, {"sha": "7a1ac830b22939d79170caee1d58ac1b5a574c94", "filename": "src/librustc_data_structures/unify/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2529b730874985cc2d8d97032d9790ae6c5bcbae/src%2Flibrustc_data_structures%2Funify%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2529b730874985cc2d8d97032d9790ae6c5bcbae/src%2Flibrustc_data_structures%2Funify%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Funify%2Fmod.rs?ref=2529b730874985cc2d8d97032d9790ae6c5bcbae", "patch": "@@ -251,8 +251,7 @@ impl<K: UnifyKey> sv::SnapshotVecDelegate for Delegate<K> {\n     fn reverse(_: &mut Vec<VarValue<K>>, _: ()) {}\n }\n \n-///////////////////////////////////////////////////////////////////////////\n-// Base union-find algorithm, where we are just making sets\n+// # Base union-find algorithm, where we are just making sets\n \n impl<'tcx, K: UnifyKey> UnificationTable<K>\n     where K::Value: Combine\n@@ -281,7 +280,8 @@ impl<'tcx, K: UnifyKey> UnificationTable<K>\n     }\n }\n \n-///////////////////////////////////////////////////////////////////////////\n+// # Non-subtyping unification\n+//\n // Code to handle keys which carry a value, like ints,\n // floats---anything that doesn't have a subtyping relationship we\n // need to worry about."}]}