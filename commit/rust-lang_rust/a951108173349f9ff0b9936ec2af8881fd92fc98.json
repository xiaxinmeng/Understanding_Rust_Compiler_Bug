{"sha": "a951108173349f9ff0b9936ec2af8881fd92fc98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NTExMDgxNzMzNDlmOWZmMGI5OTM2ZWMyYWY4ODgxZmQ5MmZjOTg=", "commit": {"author": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-06-17T13:33:21Z"}, "committer": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-06-17T13:33:21Z"}, "message": "Ensure all existing doctest code highlights have documentation modifier", "tree": {"sha": "ebb7d11259f69534a167aff03abf579afaa3fe30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebb7d11259f69534a167aff03abf579afaa3fe30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a951108173349f9ff0b9936ec2af8881fd92fc98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a951108173349f9ff0b9936ec2af8881fd92fc98", "html_url": "https://github.com/rust-lang/rust/commit/a951108173349f9ff0b9936ec2af8881fd92fc98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a951108173349f9ff0b9936ec2af8881fd92fc98/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aae26bc5b864971ef54f4d95d5ed89a6436334e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/aae26bc5b864971ef54f4d95d5ed89a6436334e2", "html_url": "https://github.com/rust-lang/rust/commit/aae26bc5b864971ef54f4d95d5ed89a6436334e2"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "106c93077ca7db142df7618dc3c21f1f2a6f6e4c", "filename": "crates/ra_ide/src/snapshots/highlight_doctest.html", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a951108173349f9ff0b9936ec2af8881fd92fc98/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/a951108173349f9ff0b9936ec2af8881fd92fc98/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_doctest.html?ref=a951108173349f9ff0b9936ec2af8881fd92fc98", "patch": "@@ -43,8 +43,8 @@\n     <span class=\"comment documentation\">/// # Examples</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"comment documentation\">/// #</span> <span class=\"attribute\">#![</span><span class=\"function attribute\">allow</span><span class=\"attribute\">(unused_mut)]</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">foo</span>: <span class=\"struct\">Foo</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>();\n+    <span class=\"comment documentation\">/// #</span> <span class=\"attribute documentation\">#![</span><span class=\"function attribute documentation\">allow</span><span class=\"attribute documentation\">(unused_mut)]</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword documentation\">let</span> <span class=\"keyword documentation\">mut</span> <span class=\"variable declaration documentation mutable\">foo</span>: <span class=\"struct documentation\">Foo</span> = <span class=\"struct documentation\">Foo</span>::<span class=\"function documentation\">new</span>();\n     <span class=\"comment documentation\">/// ```</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">new</span>() -&gt; <span class=\"struct\">Foo</span> {\n         <span class=\"struct\">Foo</span> { <span class=\"field\">bar</span>: <span class=\"bool_literal\">true</span> }\n@@ -55,26 +55,26 @@\n     <span class=\"comment documentation\">/// # Examples</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword\">use</span> <span class=\"module\">x</span>::<span class=\"module\">y</span>;\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword documentation\">use</span> <span class=\"module documentation\">x</span>::<span class=\"module documentation\">y</span>;\n     <span class=\"comment documentation\">///</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">foo</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>();\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword documentation\">let</span> <span class=\"variable declaration documentation\">foo</span> = <span class=\"struct documentation\">Foo</span>::<span class=\"function documentation\">new</span>();\n     <span class=\"comment documentation\">///</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"comment\">// calls bar on foo</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"macro\">assert!</span>(foo.bar());\n+    <span class=\"comment documentation\">/// </span><span class=\"comment documentation\">// calls bar on foo</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"macro documentation\">assert!</span>(foo.bar());\n     <span class=\"comment documentation\">///</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">bar</span> = <span class=\"variable\">foo</span>.<span class=\"field\">bar</span> || <span class=\"struct\">Foo</span>::<span class=\"constant\">bar</span>;\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword documentation\">let</span> <span class=\"variable declaration documentation\">bar</span> = <span class=\"variable documentation\">foo</span>.<span class=\"field documentation\">bar</span> || <span class=\"struct documentation\">Foo</span>::<span class=\"constant documentation\">bar</span>;\n     <span class=\"comment documentation\">///</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"comment\">/* multi-line\n-    </span><span class=\"comment documentation\">/// </span><span class=\"comment\">       comment */</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"comment documentation\">/* multi-line\n+    </span><span class=\"comment documentation\">/// </span><span class=\"comment documentation\">       comment */</span>\n     <span class=\"comment documentation\">///</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">multi_line_string</span> = <span class=\"string_literal\">\"Foo\n-    </span><span class=\"comment documentation\">/// </span><span class=\"string_literal\">  bar\n-    </span><span class=\"comment documentation\">/// </span><span class=\"string_literal\">         \"</span>;\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword documentation\">let</span> <span class=\"variable declaration documentation\">multi_line_string</span> = <span class=\"string_literal documentation\">\"Foo\n+    </span><span class=\"comment documentation\">/// </span><span class=\"string_literal documentation\">  bar\n+    </span><span class=\"comment documentation\">/// </span><span class=\"string_literal documentation\">         \"</span>;\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```rust,no_run</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">foobar</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>().<span class=\"function\">bar</span>();\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword documentation\">let</span> <span class=\"variable declaration documentation\">foobar</span> = <span class=\"struct documentation\">Foo</span>::<span class=\"function documentation\">new</span>().<span class=\"function documentation\">bar</span>();\n     <span class=\"comment documentation\">/// ```</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```sh</span>"}, {"sha": "6c43c5d941948917f2fbc90d998ce53bcd94c73c", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a951108173349f9ff0b9936ec2af8881fd92fc98/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a951108173349f9ff0b9936ec2af8881fd92fc98/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=a951108173349f9ff0b9936ec2af8881fd92fc98", "patch": "@@ -477,10 +477,10 @@ fn highlight_element(\n         // Simple token-based highlighting\n         COMMENT => {\n             let comment = element.into_token().and_then(ast::Comment::cast)?;\n-            if comment.kind().doc.is_some() {\n-                Highlight::from(HighlightTag::Comment) | HighlightModifier::Documentation\n-            } else {\n-                HighlightTag::Comment.into()\n+            let h = HighlightTag::Comment;\n+            match comment.kind().doc {\n+                Some(_) => h | HighlightModifier::Documentation,\n+                None => h.into(),\n             }\n         }\n         STRING | RAW_STRING | RAW_BYTE_STRING | BYTE_STRING => HighlightTag::StringLiteral.into(),"}, {"sha": "dc12c8f5aee266c53b98a5409bbc6137609964f7", "filename": "crates/ra_ide/src/syntax_highlighting/injection.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a951108173349f9ff0b9936ec2af8881fd92fc98/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Finjection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a951108173349f9ff0b9936ec2af8881fd92fc98/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Finjection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Finjection.rs?ref=a951108173349f9ff0b9936ec2af8881fd92fc98", "patch": "@@ -8,8 +8,8 @@ use ra_syntax::{ast, AstToken, SyntaxNode, SyntaxToken, TextRange, TextSize};\n use stdx::SepBy;\n \n use crate::{\n-    call_info::ActiveParameter, Analysis, Highlight, HighlightModifier, HighlightTag,\n-    HighlightedRange, RootDatabase,\n+    call_info::ActiveParameter, Analysis, HighlightModifier, HighlightTag, HighlightedRange,\n+    RootDatabase,\n };\n \n use super::HighlightedRangeStack;\n@@ -121,8 +121,7 @@ pub(super) fn extract_doc_comments(\n                     range.start(),\n                     range.start() + TextSize::try_from(pos).unwrap(),\n                 ),\n-                highlight: Highlight::from(HighlightTag::Comment)\n-                    | HighlightModifier::Documentation,\n+                highlight: HighlightTag::Comment | HighlightModifier::Documentation,\n                 binding_hash: None,\n             });\n             line_start += range.len() - TextSize::try_from(pos).unwrap();\n@@ -168,6 +167,8 @@ pub(super) fn highlight_doc_comment(\n                 h.range.start() + start_offset,\n                 h.range.end() + end_offset.unwrap_or(start_offset),\n             );\n+\n+            h.highlight |= HighlightModifier::Documentation;\n             stack.add(h);\n         }\n     }"}]}