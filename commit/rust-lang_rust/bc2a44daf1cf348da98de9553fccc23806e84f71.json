{"sha": "bc2a44daf1cf348da98de9553fccc23806e84f71", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMmE0NGRhZjFjZjM0OGRhOThkZTk1NTNmY2NjMjM4MDZlODRmNzE=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-07-10T18:52:39Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-09-06T20:35:11Z"}, "message": "fix one remaining token comparison, refactor token comparison to avoid == check", "tree": {"sha": "9fbfee9de27cffc4bb02c95f03c6a28062a4aa71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fbfee9de27cffc4bb02c95f03c6a28062a4aa71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc2a44daf1cf348da98de9553fccc23806e84f71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc2a44daf1cf348da98de9553fccc23806e84f71", "html_url": "https://github.com/rust-lang/rust/commit/bc2a44daf1cf348da98de9553fccc23806e84f71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc2a44daf1cf348da98de9553fccc23806e84f71/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e29d25338d7b0374f3dd5976b57463e6aafab0ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/e29d25338d7b0374f3dd5976b57463e6aafab0ac", "html_url": "https://github.com/rust-lang/rust/commit/e29d25338d7b0374f3dd5976b57463e6aafab0ac"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "ee7750bfd570a687c69ecfaab945992985432ecf", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/bc2a44daf1cf348da98de9553fccc23806e84f71/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc2a44daf1cf348da98de9553fccc23806e84f71/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=bc2a44daf1cf348da98de9553fccc23806e84f71", "patch": "@@ -234,16 +234,12 @@ pub fn parse_or_else(\n     }\n }\n \n-// temporary for testing\n+// perform a token equality check, ignoring syntax context (that is, an unhygienic comparison)\n pub fn token_name_eq(t1 : &Token, t2 : &Token) -> bool {\n-    if (*t1 == *t2) {\n-        true\n-    } else {\n-        match (t1,t2) {\n-            (&token::IDENT(id1,_),&token::IDENT(id2,_)) =>\n-            id1.name == id2.name,\n-            _ => false\n-        }\n+    match (t1,t2) {\n+        (&token::IDENT(id1,_),&token::IDENT(id2,_)) =>\n+        id1.name == id2.name,\n+        _ => *t1 == *t2\n     }\n }\n \n@@ -310,7 +306,10 @@ pub fn parse(\n                     // the *_t vars are workarounds for the lack of unary move\n                     match ei.sep {\n                       Some(ref t) if idx == len => { // we need a separator\n-                        if tok == (*t) { //pass the separator\n+                        // i'm conflicted about whether this should be hygienic....\n+                        // though in this case, if the separators are never legal\n+                        // idents, it shouldn't matter.\n+                        if token_name_eq(&tok, t) { //pass the separator\n                             let mut ei_t = ei.clone();\n                             ei_t.idx += 1;\n                             next_eis.push(ei_t);\n@@ -367,7 +366,7 @@ pub fn parse(\n         }\n \n         /* error messages here could be improved with links to orig. rules */\n-        if tok == EOF {\n+        if token_name_eq(&tok, &EOF) {\n             if eof_eis.len() == 1u {\n                 let mut v = ~[];\n                 for dv in eof_eis[0u].matches.mut_iter() {"}]}