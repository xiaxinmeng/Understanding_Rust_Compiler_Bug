{"sha": "f7aafcced8d7374ddbe50a509cb0bcec959254c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3YWFmY2NlZDhkNzM3NGRkYmU1MGE1MDljYjBiY2VjOTU5MjU0YzQ=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-02-24T14:05:44Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-02-24T14:05:44Z"}, "message": "Fix duplicate methods in rustdoc", "tree": {"sha": "c50799d3607cfb8cd30206f9ea2f0c9590433ba4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c50799d3607cfb8cd30206f9ea2f0c9590433ba4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7aafcced8d7374ddbe50a509cb0bcec959254c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7aafcced8d7374ddbe50a509cb0bcec959254c4", "html_url": "https://github.com/rust-lang/rust/commit/f7aafcced8d7374ddbe50a509cb0bcec959254c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7aafcced8d7374ddbe50a509cb0bcec959254c4/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0f7ca27de6b4e03f30012656dad270cda55a363", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0f7ca27de6b4e03f30012656dad270cda55a363", "html_url": "https://github.com/rust-lang/rust/commit/f0f7ca27de6b4e03f30012656dad270cda55a363"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "2bf623b2761e9de6ddcea813a97a167aea76fbb8", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f7aafcced8d7374ddbe50a509cb0bcec959254c4/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7aafcced8d7374ddbe50a509cb0bcec959254c4/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=f7aafcced8d7374ddbe50a509cb0bcec959254c4", "patch": "@@ -308,6 +308,9 @@ fn build_impl(cx: &DocContext, tcx: &ty::ctxt,\n                 if method.vis != ast::Public && associated_trait.is_none() {\n                     return None\n                 }\n+                if method.provided_source.is_some() {\n+                    return None\n+                }\n                 let mut item = method.clean(cx);\n                 item.inner = match item.inner.clone() {\n                     clean::TyMethodItem(clean::TyMethod {"}]}