{"sha": "f3f8e758f2b2abd84b76bcb4ec0b6ae263e1e7b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzZjhlNzU4ZjJiMmFiZDg0Yjc2YmNiNGVjMGI2YWUyNjNlMWU3Yjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-30T14:38:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-30T14:38:00Z"}, "message": "Auto merge of #85971 - FabianWolff:issue-85586, r=davidtwco\n\nUse more precise span for E0282 in cast expressions\n\nThis pull request fixes #85586. The example code given there:\n```rust\nfn main() {\n    let a = [1, 2, 3].iter().sum();\n    let b = (a + 1) as usize;\n}\n```\ncurrently produces\n```\nerror[E0282]: type annotations needed\n --> issue-85586.rs:3:13\n  |\n3 |     let b = (a + 1) as usize;\n  |             ^^^^^^^^^^^^^^^^ cannot infer type\n  |\n  = note: type must be known at this point\n\nerror: aborting due to previous error\n```\neven though the type of the entire cast expression quite clearly should be `usize`. The error is in the cast's left-hand side, which is made explicit by the changes in this PR:\n```\nerror[E0282]: type annotations needed\n --> issue-85586.rs:3:13\n  |\n3 |     let b = (a + 1) as usize;\n  |             ^^^^^^^ cannot infer type\n  |\n  = note: type must be known at this point\n\nerror: aborting due to previous error\n```", "tree": {"sha": "4c37a298b6af37a71803febc8bc5f00dd848c4d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c37a298b6af37a71803febc8bc5f00dd848c4d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3f8e758f2b2abd84b76bcb4ec0b6ae263e1e7b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3f8e758f2b2abd84b76bcb4ec0b6ae263e1e7b9", "html_url": "https://github.com/rust-lang/rust/commit/f3f8e758f2b2abd84b76bcb4ec0b6ae263e1e7b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3f8e758f2b2abd84b76bcb4ec0b6ae263e1e7b9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87dc8242484110c75596a91ebd2043a476c09839", "url": "https://api.github.com/repos/rust-lang/rust/commits/87dc8242484110c75596a91ebd2043a476c09839", "html_url": "https://github.com/rust-lang/rust/commit/87dc8242484110c75596a91ebd2043a476c09839"}, {"sha": "74d1bd21c78765712612afdd5eab3efa00757064", "url": "https://api.github.com/repos/rust-lang/rust/commits/74d1bd21c78765712612afdd5eab3efa00757064", "html_url": "https://github.com/rust-lang/rust/commit/74d1bd21c78765712612afdd5eab3efa00757064"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "181972e3e7bade679d581f9d78135f6b3e1b4bfb", "filename": "compiler/rustc_typeck/src/check/cast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3f8e758f2b2abd84b76bcb4ec0b6ae263e1e7b9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3f8e758f2b2abd84b76bcb4ec0b6ae263e1e7b9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs?ref=f3f8e758f2b2abd84b76bcb4ec0b6ae263e1e7b9", "patch": "@@ -604,8 +604,8 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n     }\n \n     pub fn check(mut self, fcx: &FnCtxt<'a, 'tcx>) {\n-        self.expr_ty = fcx.structurally_resolved_type(self.span, self.expr_ty);\n-        self.cast_ty = fcx.structurally_resolved_type(self.span, self.cast_ty);\n+        self.expr_ty = fcx.structurally_resolved_type(self.expr.span, self.expr_ty);\n+        self.cast_ty = fcx.structurally_resolved_type(self.cast_span, self.cast_ty);\n \n         debug!(\"check_cast({}, {:?} as {:?})\", self.expr.hir_id, self.expr_ty, self.cast_ty);\n "}, {"sha": "78816582b57f4cdbb88466c93fd939f2d801a786", "filename": "src/test/ui/cast/issue-85586.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f3f8e758f2b2abd84b76bcb4ec0b6ae263e1e7b9/src%2Ftest%2Fui%2Fcast%2Fissue-85586.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3f8e758f2b2abd84b76bcb4ec0b6ae263e1e7b9/src%2Ftest%2Fui%2Fcast%2Fissue-85586.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcast%2Fissue-85586.rs?ref=f3f8e758f2b2abd84b76bcb4ec0b6ae263e1e7b9", "patch": "@@ -0,0 +1,10 @@\n+// Check that errors for unresolved types in cast expressions are reported\n+// for the offending subexpression, not the whole cast expression.\n+\n+#![allow(unused_variables)]\n+\n+fn main() {\n+    let a = [1, 2, 3].iter().sum();\n+    let b = (a + 1) as usize;\n+    //~^ ERROR: type annotations needed [E0282]\n+}"}, {"sha": "271885a133a95881dd4fd1e0d28a1c384b2444c3", "filename": "src/test/ui/cast/issue-85586.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f3f8e758f2b2abd84b76bcb4ec0b6ae263e1e7b9/src%2Ftest%2Fui%2Fcast%2Fissue-85586.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3f8e758f2b2abd84b76bcb4ec0b6ae263e1e7b9/src%2Ftest%2Fui%2Fcast%2Fissue-85586.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcast%2Fissue-85586.stderr?ref=f3f8e758f2b2abd84b76bcb4ec0b6ae263e1e7b9", "patch": "@@ -0,0 +1,11 @@\n+error[E0282]: type annotations needed\n+  --> $DIR/issue-85586.rs:8:13\n+   |\n+LL |     let b = (a + 1) as usize;\n+   |             ^^^^^^^ cannot infer type\n+   |\n+   = note: type must be known at this point\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0282`."}]}