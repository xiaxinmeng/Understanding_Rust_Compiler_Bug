{"sha": "6f89468fc513eb12ef8a1137a70fab8bb9f50f14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmODk0NjhmYzUxM2ViMTJlZjhhMTEzN2E3MGZhYjhiYjlmNTBmMTQ=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-02-11T22:59:54Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-05T07:57:44Z"}, "message": "Remove 'unnecessary long for for link' warning\n\nThis also makes the implementation slightly more efficient by only\ncompiling the regex once.\n\nSee https://github.com/rust-lang/rust/pull/81764#issuecomment-774122759\nfor why this was removed; essentially the benefit didn't seem great\nenough to deserve a lint.", "tree": {"sha": "0ab6ad850380becba3504ec236779c92ccd68fa2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ab6ad850380becba3504ec236779c92ccd68fa2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f89468fc513eb12ef8a1137a70fab8bb9f50f14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f89468fc513eb12ef8a1137a70fab8bb9f50f14", "html_url": "https://github.com/rust-lang/rust/commit/6f89468fc513eb12ef8a1137a70fab8bb9f50f14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f89468fc513eb12ef8a1137a70fab8bb9f50f14/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe1baa6498c948a48d60ae96cd38181a182051ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe1baa6498c948a48d60ae96cd38181a182051ca", "html_url": "https://github.com/rust-lang/rust/commit/fe1baa6498c948a48d60ae96cd38181a182051ca"}], "stats": {"total": 124, "additions": 44, "deletions": 80}, "files": [{"sha": "0ebd1879db524c99b01e3b2c6cc5feb98605a212", "filename": "src/librustdoc/passes/non_autolinks.rs", "status": "modified", "additions": 22, "deletions": 38, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/6f89468fc513eb12ef8a1137a70fab8bb9f50f14/src%2Flibrustdoc%2Fpasses%2Fnon_autolinks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f89468fc513eb12ef8a1137a70fab8bb9f50f14/src%2Flibrustdoc%2Fpasses%2Fnon_autolinks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fnon_autolinks.rs?ref=6f89468fc513eb12ef8a1137a70fab8bb9f50f14", "patch": "@@ -4,26 +4,30 @@ use crate::core::DocContext;\n use crate::fold::DocFolder;\n use crate::html::markdown::opts;\n use core::ops::Range;\n-use pulldown_cmark::{Event, LinkType, Parser, Tag};\n+use pulldown_cmark::{Event, Parser, Tag};\n use regex::Regex;\n use rustc_errors::Applicability;\n+use std::lazy::SyncLazy;\n+use std::mem;\n \n crate const CHECK_NON_AUTOLINKS: Pass = Pass {\n     name: \"check-non-autolinks\",\n     run: check_non_autolinks,\n     description: \"detects URLs that could be linkified\",\n };\n \n-const URL_REGEX: &str = concat!(\n-    r\"https?://\",                          // url scheme\n-    r\"([-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.)+\", // one or more subdomains\n-    r\"[a-zA-Z]{2,63}\",                     // root domain\n-    r\"\\b([-a-zA-Z0-9@:%_\\+.~#?&/=]*)\"      // optional query or url fragments\n-);\n+const URL_REGEX: SyncLazy<Regex> = SyncLazy::new(|| {\n+    Regex::new(concat!(\n+        r\"https?://\",                          // url scheme\n+        r\"([-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.)+\", // one or more subdomains\n+        r\"[a-zA-Z]{2,63}\",                     // root domain\n+        r\"\\b([-a-zA-Z0-9@:%_\\+.~#?&/=]*)\"      // optional query or url fragments\n+    ))\n+    .expect(\"failed to build regex\")\n+});\n \n struct NonAutolinksLinter<'a, 'tcx> {\n     cx: &'a mut DocContext<'tcx>,\n-    regex: Regex,\n }\n \n impl<'a, 'tcx> NonAutolinksLinter<'a, 'tcx> {\n@@ -33,8 +37,9 @@ impl<'a, 'tcx> NonAutolinksLinter<'a, 'tcx> {\n         range: Range<usize>,\n         f: &impl Fn(&DocContext<'_>, &str, &str, Range<usize>),\n     ) {\n+        trace!(\"looking for raw urls in {}\", text);\n         // For now, we only check \"full\" URLs (meaning, starting with \"http://\" or \"https://\").\n-        for match_ in self.regex.find_iter(&text) {\n+        for match_ in URL_REGEX.find_iter(&text) {\n             let url = match_.as_str();\n             let url_range = match_.range();\n             f(\n@@ -48,7 +53,7 @@ impl<'a, 'tcx> NonAutolinksLinter<'a, 'tcx> {\n }\n \n crate fn check_non_autolinks(krate: Crate, cx: &mut DocContext<'_>) -> Crate {\n-    NonAutolinksLinter::new(cx).fold_crate(krate)\n+    NonAutolinksLinter { cx }.fold_crate(krate)\n }\n \n impl<'a, 'tcx> DocFolder for NonAutolinksLinter<'a, 'tcx> {\n@@ -82,37 +87,16 @@ impl<'a, 'tcx> DocFolder for NonAutolinksLinter<'a, 'tcx> {\n \n             while let Some((event, range)) = p.next() {\n                 match event {\n-                    Event::Start(Tag::Link(kind, _, _)) => {\n-                        let ignore = matches!(kind, LinkType::Autolink | LinkType::Email);\n-                        let mut title = String::new();\n-\n-                        while let Some((event, range)) = p.next() {\n-                            match event {\n-                                Event::End(Tag::Link(_, url, _)) => {\n-                                    // NOTE: links cannot be nested, so we don't need to\n-                                    // check `kind`\n-                                    if url.as_ref() == title && !ignore && self.regex.is_match(&url)\n-                                    {\n-                                        report_diag(\n-                                            self.cx,\n-                                            \"unneeded long form for URL\",\n-                                            &url,\n-                                            range,\n-                                        );\n-                                    }\n-                                    break;\n-                                }\n-                                Event::Text(s) if !ignore => title.push_str(&s),\n-                                _ => {}\n-                            }\n-                        }\n-                    }\n                     Event::Text(s) => self.find_raw_urls(&s, range, &report_diag),\n-                    Event::Start(Tag::CodeBlock(_)) => {\n-                        // We don't want to check the text inside the code blocks.\n+                    // We don't want to check the text inside code blocks or links.\n+                    Event::Start(tag @ (Tag::CodeBlock(_) | Tag::Link(..))) => {\n                         while let Some((event, _)) = p.next() {\n                             match event {\n-                                Event::End(Tag::CodeBlock(_)) => break,\n+                                Event::End(end)\n+                                    if mem::discriminant(&end) == mem::discriminant(&tag) =>\n+                                {\n+                                    break;\n+                                }\n                                 _ => {}\n                             }\n                         }"}, {"sha": "b06ec4381469b8c39536b466e4d4ef0df885d16e", "filename": "src/test/rustdoc-ui/url-improvements.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6f89468fc513eb12ef8a1137a70fab8bb9f50f14/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f89468fc513eb12ef8a1137a70fab8bb9f50f14/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs?ref=6f89468fc513eb12ef8a1137a70fab8bb9f50f14", "patch": "@@ -1,15 +1,5 @@\n #![deny(rustdoc::non_autolinks)]\n \n-/// [http://aa.com](http://aa.com)\n-//~^ ERROR unneeded long form for URL\n-/// [http://bb.com]\n-//~^ ERROR unneeded long form for URL\n-///\n-/// [http://bb.com]: http://bb.com\n-///\n-/// [http://c.com][http://c.com]\n-pub fn a() {}\n-\n /// https://somewhere.com\n //~^ ERROR this URL is not a hyperlink\n /// https://somewhere.com/a\n@@ -54,6 +44,8 @@ pub fn c() {}\n ///\n /// ```\n /// This link should not be linted: http://example.com\n+///\n+/// Nor this one: <http://example.com> or this one: [x](http://example.com)\n /// ```\n ///\n /// [should_not.lint](should_not.lint)"}, {"sha": "404494d68023f3e96043bd3fdb57c5036ffe03fc", "filename": "src/test/rustdoc-ui/url-improvements.stderr", "status": "modified", "additions": 20, "deletions": 32, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/6f89468fc513eb12ef8a1137a70fab8bb9f50f14/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f89468fc513eb12ef8a1137a70fab8bb9f50f14/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr?ref=6f89468fc513eb12ef8a1137a70fab8bb9f50f14", "patch": "@@ -1,122 +1,110 @@\n-error: unneeded long form for URL\n+error: this URL is not a hyperlink\n   --> $DIR/url-improvements.rs:3:5\n    |\n-LL | /// [http://aa.com](http://aa.com)\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://aa.com>`\n+LL | /// https://somewhere.com\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com>`\n    |\n note: the lint level is defined here\n   --> $DIR/url-improvements.rs:1:9\n    |\n LL | #![deny(rustdoc::non_autolinks)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: unneeded long form for URL\n-  --> $DIR/url-improvements.rs:5:5\n-   |\n-LL | /// [http://bb.com]\n-   |     ^^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://bb.com>`\n-\n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:13:5\n-   |\n-LL | /// https://somewhere.com\n-   |     ^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com>`\n-\n-error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:15:5\n+  --> $DIR/url-improvements.rs:5:5\n    |\n LL | /// https://somewhere.com/a\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:17:5\n+  --> $DIR/url-improvements.rs:7:5\n    |\n LL | /// https://www.somewhere.com\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://www.somewhere.com>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:19:5\n+  --> $DIR/url-improvements.rs:9:5\n    |\n LL | /// https://www.somewhere.com/a\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://www.somewhere.com/a>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:21:5\n+  --> $DIR/url-improvements.rs:11:5\n    |\n LL | /// https://subdomain.example.com\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://subdomain.example.com>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:23:5\n+  --> $DIR/url-improvements.rs:13:5\n    |\n LL | /// https://somewhere.com?\n    |     ^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com?>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:25:5\n+  --> $DIR/url-improvements.rs:15:5\n    |\n LL | /// https://somewhere.com/a?\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a?>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:27:5\n+  --> $DIR/url-improvements.rs:17:5\n    |\n LL | /// https://somewhere.com?hello=12\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com?hello=12>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:29:5\n+  --> $DIR/url-improvements.rs:19:5\n    |\n LL | /// https://somewhere.com/a?hello=12\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a?hello=12>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:31:5\n+  --> $DIR/url-improvements.rs:21:5\n    |\n LL | /// https://example.com?hello=12#xyz\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://example.com?hello=12#xyz>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:33:5\n+  --> $DIR/url-improvements.rs:23:5\n    |\n LL | /// https://example.com/a?hello=12#xyz\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://example.com/a?hello=12#xyz>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:35:5\n+  --> $DIR/url-improvements.rs:25:5\n    |\n LL | /// https://example.com#xyz\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://example.com#xyz>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:37:5\n+  --> $DIR/url-improvements.rs:27:5\n    |\n LL | /// https://example.com/a#xyz\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://example.com/a#xyz>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:39:5\n+  --> $DIR/url-improvements.rs:29:5\n    |\n LL | /// https://somewhere.com?hello=12&bye=11\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com?hello=12&bye=11>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:41:5\n+  --> $DIR/url-improvements.rs:31:5\n    |\n LL | /// https://somewhere.com/a?hello=12&bye=11\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a?hello=12&bye=11>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:43:5\n+  --> $DIR/url-improvements.rs:33:5\n    |\n LL | /// https://somewhere.com?hello=12&bye=11#xyz\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com?hello=12&bye=11#xyz>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:45:10\n+  --> $DIR/url-improvements.rs:35:10\n    |\n LL | /// hey! https://somewhere.com/a?hello=12&bye=11#xyz\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a?hello=12&bye=11#xyz>`\n \n-error: aborting due to 19 previous errors\n+error: aborting due to 17 previous errors\n "}]}