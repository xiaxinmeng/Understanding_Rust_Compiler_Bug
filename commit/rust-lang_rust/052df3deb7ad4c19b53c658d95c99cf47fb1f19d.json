{"sha": "052df3deb7ad4c19b53c658d95c99cf47fb1f19d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1MmRmM2RlYjdhZDRjMTliNTNjNjU4ZDk1Yzk5Y2Y0N2ZiMWYxOWQ=", "commit": {"author": {"name": "Eduardo Canellas", "email": "eduardocanellas98@gmail.com", "date": "2021-05-26T17:24:54Z"}, "committer": {"name": "Eduardo Canellas", "email": "eduardocanellas98@gmail.com", "date": "2021-05-26T17:24:54Z"}, "message": "feat: add tab stops for keyword completions", "tree": {"sha": "a75a44ef6bd5afaeb2966cbff6400db15c16d551", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a75a44ef6bd5afaeb2966cbff6400db15c16d551"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/052df3deb7ad4c19b53c658d95c99cf47fb1f19d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/052df3deb7ad4c19b53c658d95c99cf47fb1f19d", "html_url": "https://github.com/rust-lang/rust/commit/052df3deb7ad4c19b53c658d95c99cf47fb1f19d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/052df3deb7ad4c19b53c658d95c99cf47fb1f19d/comments", "author": {"login": "dbofmmbt", "id": 34381457, "node_id": "MDQ6VXNlcjM0MzgxNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/34381457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbofmmbt", "html_url": "https://github.com/dbofmmbt", "followers_url": "https://api.github.com/users/dbofmmbt/followers", "following_url": "https://api.github.com/users/dbofmmbt/following{/other_user}", "gists_url": "https://api.github.com/users/dbofmmbt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbofmmbt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbofmmbt/subscriptions", "organizations_url": "https://api.github.com/users/dbofmmbt/orgs", "repos_url": "https://api.github.com/users/dbofmmbt/repos", "events_url": "https://api.github.com/users/dbofmmbt/events{/privacy}", "received_events_url": "https://api.github.com/users/dbofmmbt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dbofmmbt", "id": 34381457, "node_id": "MDQ6VXNlcjM0MzgxNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/34381457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbofmmbt", "html_url": "https://github.com/dbofmmbt", "followers_url": "https://api.github.com/users/dbofmmbt/followers", "following_url": "https://api.github.com/users/dbofmmbt/following{/other_user}", "gists_url": "https://api.github.com/users/dbofmmbt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbofmmbt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbofmmbt/subscriptions", "organizations_url": "https://api.github.com/users/dbofmmbt/orgs", "repos_url": "https://api.github.com/users/dbofmmbt/repos", "events_url": "https://api.github.com/users/dbofmmbt/events{/privacy}", "received_events_url": "https://api.github.com/users/dbofmmbt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb1c7fc0cfe24a8477d943faa932992b9cd48957", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb1c7fc0cfe24a8477d943faa932992b9cd48957", "html_url": "https://github.com/rust-lang/rust/commit/bb1c7fc0cfe24a8477d943faa932992b9cd48957"}], "stats": {"total": 50, "additions": 29, "deletions": 21}, "files": [{"sha": "2c4ed1b00426f88ec1510f5cc6d2a7ee1a816298", "filename": "crates/ide_completion/src/completions/keyword.rs", "status": "modified", "additions": 29, "deletions": 21, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/052df3deb7ad4c19b53c658d95c99cf47fb1f19d/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/052df3deb7ad4c19b53c658d95c99cf47fb1f19d/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs?ref=052df3deb7ad4c19b53c658d95c99cf47fb1f19d", "patch": "@@ -56,49 +56,49 @@ pub(crate) fn complete_expr_keyword(acc: &mut Completions, ctx: &CompletionConte\n     }\n     if ctx.unsafe_is_prev {\n         if ctx.has_item_list_or_source_file_parent || ctx.block_expr_parent {\n-            add_keyword(ctx, acc, \"fn\", \"fn $0() {}\")\n+            add_keyword(ctx, acc, \"fn\", \"fn $1($2) {\\n    $0\\n}\")\n         }\n \n         if (ctx.has_item_list_or_source_file_parent) || ctx.block_expr_parent {\n-            add_keyword(ctx, acc, \"trait\", \"trait $0 {}\");\n-            add_keyword(ctx, acc, \"impl\", \"impl $0 {}\");\n+            add_keyword(ctx, acc, \"trait\", \"trait $1 {\\n    $0\\n}\");\n+            add_keyword(ctx, acc, \"impl\", \"impl $1 {\\n    $0\\n}\");\n         }\n \n         return;\n     }\n     if ctx.has_item_list_or_source_file_parent || has_trait_or_impl_parent || ctx.block_expr_parent\n     {\n-        add_keyword(ctx, acc, \"fn\", \"fn $0() {}\");\n+        add_keyword(ctx, acc, \"fn\", \"fn $1($2) {\\n    $0\\n}\");\n     }\n     if (ctx.has_item_list_or_source_file_parent) || ctx.block_expr_parent {\n         add_keyword(ctx, acc, \"use\", \"use \");\n-        add_keyword(ctx, acc, \"impl\", \"impl $0 {}\");\n-        add_keyword(ctx, acc, \"trait\", \"trait $0 {}\");\n+        add_keyword(ctx, acc, \"impl\", \"impl $1 {\\n    $0\\n}\");\n+        add_keyword(ctx, acc, \"trait\", \"trait $1 {\\n    $0\\n}\");\n     }\n \n     if ctx.has_item_list_or_source_file_parent {\n-        add_keyword(ctx, acc, \"enum\", \"enum $0 {}\");\n+        add_keyword(ctx, acc, \"enum\", \"enum $1 {\\n    $0\\n}\");\n         add_keyword(ctx, acc, \"struct\", \"struct $0\");\n-        add_keyword(ctx, acc, \"union\", \"union $0 {}\");\n+        add_keyword(ctx, acc, \"union\", \"union $1 {\\n    $0\\n}\");\n     }\n \n     if ctx.is_expr {\n-        add_keyword(ctx, acc, \"match\", \"match $0 {}\");\n-        add_keyword(ctx, acc, \"while\", \"while $0 {}\");\n-        add_keyword(ctx, acc, \"while let\", \"while let $1 = $0 {}\");\n-        add_keyword(ctx, acc, \"loop\", \"loop {$0}\");\n-        add_keyword(ctx, acc, \"if\", \"if $0 {}\");\n-        add_keyword(ctx, acc, \"if let\", \"if let $1 = $0 {}\");\n-        add_keyword(ctx, acc, \"for\", \"for $1 in $0 {}\");\n+        add_keyword(ctx, acc, \"match\", \"match $1 {\\n    $0\\n}\");\n+        add_keyword(ctx, acc, \"while\", \"while $1 {\\n    $0\\n}\");\n+        add_keyword(ctx, acc, \"while let\", \"while let $1 = $2 {\\n    $0\\n}\");\n+        add_keyword(ctx, acc, \"loop\", \"loop {\\n    $0\\n}\");\n+        add_keyword(ctx, acc, \"if\", \"if $1 {\\n    $0\\n}\");\n+        add_keyword(ctx, acc, \"if let\", \"if let $1 = $2 {\\n    $0\\n}\");\n+        add_keyword(ctx, acc, \"for\", \"for $1 in $2 {\\n    $0\\n}\");\n     }\n \n     if ctx.if_is_prev || ctx.block_expr_parent {\n         add_keyword(ctx, acc, \"let\", \"let \");\n     }\n \n     if ctx.after_if {\n-        add_keyword(ctx, acc, \"else\", \"else {$0}\");\n-        add_keyword(ctx, acc, \"else if\", \"else if $0 {}\");\n+        add_keyword(ctx, acc, \"else\", \"else {\\n    $0\\n}\");\n+        add_keyword(ctx, acc, \"else if\", \"else if $1 {\\n    $0\\n}\");\n     }\n     if (ctx.has_item_list_or_source_file_parent) || ctx.block_expr_parent {\n         add_keyword(ctx, acc, \"mod\", \"mod $0\");\n@@ -342,7 +342,9 @@ mod tests {\n         check_edit(\n             \"else\",\n             r#\"fn quux() { if true { () } $0 }\"#,\n-            r#\"fn quux() { if true { () } else {$0} }\"#,\n+            r#\"fn quux() { if true { () } else {\n+    $0\n+} }\"#,\n         );\n     }\n \n@@ -646,7 +648,9 @@ fn foo() {\n fn main() { let x = $0 }\n \"#,\n             r#\"\n-fn main() { let x = match $0 {}; }\n+fn main() { let x = match $1 {\n+    $0\n+}; }\n \"#,\n         );\n \n@@ -660,7 +664,9 @@ fn main() {\n \"#,\n             r#\"\n fn main() {\n-    let x = if $0 {};\n+    let x = if $1 {\n+    $0\n+};\n     let y = 92;\n }\n \"#,\n@@ -676,7 +682,9 @@ fn main() {\n \"#,\n             r#\"\n fn main() {\n-    let x = loop {$0};\n+    let x = loop {\n+    $0\n+};\n     bar();\n }\n \"#,"}]}