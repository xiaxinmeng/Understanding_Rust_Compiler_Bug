{"sha": "a53fb30e3bf2655b0563da6d561c23cda5f3ec11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1M2ZiMzBlM2JmMjY1NWIwNTYzZGE2ZDU2MWMyM2NkYTVmM2VjMTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-29T12:08:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-29T12:08:16Z"}, "message": "Auto merge of #78446 - RalfJung:box, r=Amanieu\n\nfix Box::into_unique\n\nhttps://github.com/rust-lang/rust/pull/77187/ broke Stacked Borrows pointer tagging around `Box::into_unique` (this is caused by `Box` being a special case in the type system, which box-internal code needs to account for). This PR fixes that.\n\nr? `@Amanieu` Cc `@TimDiekmann`\n\nFixes https://github.com/rust-lang/rust/issues/78419.", "tree": {"sha": "a8eccb71012840fc28f743581429533c2ccb97f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8eccb71012840fc28f743581429533c2ccb97f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a53fb30e3bf2655b0563da6d561c23cda5f3ec11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a53fb30e3bf2655b0563da6d561c23cda5f3ec11", "html_url": "https://github.com/rust-lang/rust/commit/a53fb30e3bf2655b0563da6d561c23cda5f3ec11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a53fb30e3bf2655b0563da6d561c23cda5f3ec11/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae9731ce1db8afa4794110f1b4780b9128a5cae8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae9731ce1db8afa4794110f1b4780b9128a5cae8", "html_url": "https://github.com/rust-lang/rust/commit/ae9731ce1db8afa4794110f1b4780b9128a5cae8"}, {"sha": "ab374dc37c168dbd2125f7322ed2a0e842504bc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab374dc37c168dbd2125f7322ed2a0e842504bc1", "html_url": "https://github.com/rust-lang/rust/commit/ab374dc37c168dbd2125f7322ed2a0e842504bc1"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "1512235da6a8198e089d375182a8dd20be846f7d", "filename": "library/alloc/src/boxed.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a53fb30e3bf2655b0563da6d561c23cda5f3ec11/library%2Falloc%2Fsrc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a53fb30e3bf2655b0563da6d561c23cda5f3ec11/library%2Falloc%2Fsrc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed.rs?ref=a53fb30e3bf2655b0563da6d561c23cda5f3ec11", "patch": "@@ -724,15 +724,10 @@ impl<T: ?Sized, A: AllocRef> Box<T, A> {\n         // Box is recognized as a \"unique pointer\" by Stacked Borrows, but internally it is a\n         // raw pointer for the type system. Turning it directly into a raw pointer would not be\n         // recognized as \"releasing\" the unique pointer to permit aliased raw accesses,\n-        // so all raw pointer methods have to leak the box. Turning *that* to a raw pointer\n+        // so all raw pointer methods have to go through `Box::leak`. Turning *that* to a raw pointer\n         // behaves correctly.\n-        let b = mem::ManuallyDrop::new(b);\n-\n-        // The box is unitiliazed later when moving out the allocator. The pointer is stored\n-        // beforehand.\n-        let ptr = b.0;\n         let alloc = unsafe { ptr::read(&b.1) };\n-        (ptr, alloc)\n+        (Unique::from(Box::leak(b)), alloc)\n     }\n \n     /// Returns a reference to the underlying allocator."}]}