{"sha": "4154e14f9ac586b4bb8c67db1d474b4d8c960e23", "node_id": "C_kwDOAAsO6NoAKDQxNTRlMTRmOWFjNTg2YjRiYjhjNjdkYjFkNDc0YjRkOGM5NjBlMjM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-11T22:36:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-11T22:36:46Z"}, "message": "Rollup merge of #105369 - chenyukang:yukang/fix-105226, r=TaKO8Ki\n\nDetect spurious ; before assoc fn body\n\nFixes #105226\n\nr? ``@TaKO8Ki``", "tree": {"sha": "b7ba9e369484a79c05e7086a42fd332bab3cf360", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7ba9e369484a79c05e7086a42fd332bab3cf360"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4154e14f9ac586b4bb8c67db1d474b4d8c960e23", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjllt+CRBK7hj4Ov3rIwAAo0oIAGzcqrrPeKKCqzfk8mKzMiOi\n8m9ItNkYcnOgFs9Yro0R20vW6fDegV1hhUT8OGdfJW0+q0teHxCkrx5nlWa29ltN\ns3mhLWZcemsdbF6/vXZ8/jMoGC+cS6yvDY8EG2rMYXt8+Pi6ynXI3WtlFKOfjyu8\n5HVTGmNUiUJjpwor5PUx4NtrhxEqQ1CgQdaFJ6N5A7W/HlCO9lefnsOdtFoSWpgr\n5JaUDq4GlA2G30v8kE983B04ppQVjtIhz0X5qtxLqMWIw6BYetCM0y9jWSISAVLQ\nqdq+ovYdk6p8B7NdRNxExPeW1IgBdtbn4+5TnZvk9dKEoXblKGWo6BKuUNuopIE=\n=OFtD\n-----END PGP SIGNATURE-----\n", "payload": "tree b7ba9e369484a79c05e7086a42fd332bab3cf360\nparent aa7b5b32e3463fc21468073ca3a75e2c3617b179\nparent 5599f2ad09345b94487920b84029ad215c4dc743\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670798206 +0100\ncommitter GitHub <noreply@github.com> 1670798206 +0100\n\nRollup merge of #105369 - chenyukang:yukang/fix-105226, r=TaKO8Ki\n\nDetect spurious ; before assoc fn body\n\nFixes #105226\n\nr? ``@TaKO8Ki``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4154e14f9ac586b4bb8c67db1d474b4d8c960e23", "html_url": "https://github.com/rust-lang/rust/commit/4154e14f9ac586b4bb8c67db1d474b4d8c960e23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4154e14f9ac586b4bb8c67db1d474b4d8c960e23/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa7b5b32e3463fc21468073ca3a75e2c3617b179", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa7b5b32e3463fc21468073ca3a75e2c3617b179", "html_url": "https://github.com/rust-lang/rust/commit/aa7b5b32e3463fc21468073ca3a75e2c3617b179"}, {"sha": "5599f2ad09345b94487920b84029ad215c4dc743", "url": "https://api.github.com/repos/rust-lang/rust/commits/5599f2ad09345b94487920b84029ad215c4dc743", "html_url": "https://github.com/rust-lang/rust/commit/5599f2ad09345b94487920b84029ad215c4dc743"}], "stats": {"total": 65, "additions": 62, "deletions": 3}, "files": [{"sha": "beb9d55d454162d11da7442a650989fe9a72895a", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4154e14f9ac586b4bb8c67db1d474b4d8c960e23/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4154e14f9ac586b4bb8c67db1d474b4d8c960e23/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=4154e14f9ac586b4bb8c67db1d474b4d8c960e23", "patch": "@@ -706,9 +706,9 @@ impl<'a> Parser<'a> {\n             }\n             match parse_item(self) {\n                 Ok(None) => {\n-                    let is_unnecessary_semicolon = !items.is_empty()\n+                    let mut is_unnecessary_semicolon = !items.is_empty()\n                         // When the close delim is `)` in a case like the following, `token.kind` is expected to be `token::CloseDelim(Delimiter::Parenthesis)`,\n-                        // but the actual `token.kind` is `token::CloseDelim(Delimiter::Bracket)`.\n+                        // but the actual `token.kind` is `token::CloseDelim(Delimiter::Brace)`.\n                         // This is because the `token.kind` of the close delim is treated as the same as\n                         // that of the open delim in `TokenTreesReader::parse_token_tree`, even if the delimiters of them are different.\n                         // Therefore, `token.kind` should not be compared here.\n@@ -727,7 +727,13 @@ impl<'a> Parser<'a> {\n                             .span_to_snippet(self.prev_token.span)\n                             .map_or(false, |snippet| snippet == \"}\")\n                         && self.token.kind == token::Semi;\n-                    let semicolon_span = self.token.span;\n+                    let mut semicolon_span = self.token.span;\n+                    if !is_unnecessary_semicolon {\n+                        // #105369, Detect spurious `;` before assoc fn body\n+                        is_unnecessary_semicolon = self.token == token::OpenDelim(Delimiter::Brace)\n+                            && self.prev_token.kind == token::Semi;\n+                        semicolon_span = self.prev_token.span;\n+                    }\n                     // We have to bail or we'll potentially never make progress.\n                     let non_item_span = self.token.span;\n                     let is_let = self.token.is_keyword(kw::Let);"}, {"sha": "f123dbf4cae0caf38776560d002a327da9b79cb9", "filename": "src/test/ui/suggestions/issue-105226.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4154e14f9ac586b4bb8c67db1d474b4d8c960e23/src%2Ftest%2Fui%2Fsuggestions%2Fissue-105226.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4154e14f9ac586b4bb8c67db1d474b4d8c960e23/src%2Ftest%2Fui%2Fsuggestions%2Fissue-105226.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-105226.rs?ref=4154e14f9ac586b4bb8c67db1d474b4d8c960e23", "patch": "@@ -0,0 +1,22 @@\n+use std::fmt;\n+\n+struct S {\n+}\n+\n+impl S {\n+    fn hello<P>(&self, val: &P) where P: fmt::Display; {\n+        //~^ ERROR non-item in item list\n+        //~| ERROR associated function in `impl` without body\n+        println!(\"val: {}\", val);\n+    }\n+}\n+\n+impl S {\n+    fn hello_empty<P>(&self, val: &P) where P: fmt::Display;\n+    //~^ ERROR associated function in `impl` without body\n+}\n+\n+fn main() {\n+    let s = S{};\n+    s.hello(&32);\n+}"}, {"sha": "f16a80901039030b8b668a688d33bc8d3a450a45", "filename": "src/test/ui/suggestions/issue-105226.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/4154e14f9ac586b4bb8c67db1d474b4d8c960e23/src%2Ftest%2Fui%2Fsuggestions%2Fissue-105226.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4154e14f9ac586b4bb8c67db1d474b4d8c960e23/src%2Ftest%2Fui%2Fsuggestions%2Fissue-105226.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-105226.stderr?ref=4154e14f9ac586b4bb8c67db1d474b4d8c960e23", "patch": "@@ -0,0 +1,31 @@\n+error: non-item in item list\n+  --> $DIR/issue-105226.rs:7:56\n+   |\n+LL | impl S {\n+   |        - item list starts here\n+LL |     fn hello<P>(&self, val: &P) where P: fmt::Display; {\n+   |                                                      - ^ non-item starts here\n+   |                                                      |\n+   |                                                      help: consider removing this semicolon\n+...\n+LL | }\n+   | - item list ends here\n+\n+error: associated function in `impl` without body\n+  --> $DIR/issue-105226.rs:7:5\n+   |\n+LL |     fn hello<P>(&self, val: &P) where P: fmt::Display; {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |                                                      |\n+   |                                                      help: provide a definition for the function: `{ <body> }`\n+\n+error: associated function in `impl` without body\n+  --> $DIR/issue-105226.rs:15:5\n+   |\n+LL |     fn hello_empty<P>(&self, val: &P) where P: fmt::Display;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |                                                            |\n+   |                                                            help: provide a definition for the function: `{ <body> }`\n+\n+error: aborting due to 3 previous errors\n+"}]}