{"sha": "7c108ababc7a54bd090f85aa7daab606af8ac6e8", "node_id": "C_kwDOAAsO6NoAKDdjMTA4YWJhYmM3YTU0YmQwOTBmODVhYTdkYWFiNjA2YWY4YWM2ZTg", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2021-12-03T06:33:40Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2021-12-03T06:36:05Z"}, "message": "Fix ICE when yielding in fn returning impl Trait", "tree": {"sha": "335fcad79f13e3d50bee30dda7209565204c1794", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/335fcad79f13e3d50bee30dda7209565204c1794"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c108ababc7a54bd090f85aa7daab606af8ac6e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c108ababc7a54bd090f85aa7daab606af8ac6e8", "html_url": "https://github.com/rust-lang/rust/commit/7c108ababc7a54bd090f85aa7daab606af8ac6e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c108ababc7a54bd090f85aa7daab606af8ac6e8/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff23ad3179014ba258f2b540fb39dd0f26852b7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff23ad3179014ba258f2b540fb39dd0f26852b7a", "html_url": "https://github.com/rust-lang/rust/commit/ff23ad3179014ba258f2b540fb39dd0f26852b7a"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "bc740de5150659cc48f1954c0a17b8036fec98a9", "filename": "compiler/rustc_borrowck/src/type_check/input_output.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7c108ababc7a54bd090f85aa7daab606af8ac6e8/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Finput_output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c108ababc7a54bd090f85aa7daab606af8ac6e8/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Finput_output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Finput_output.rs?ref=7c108ababc7a54bd090f85aa7daab606af8ac6e8", "patch": "@@ -117,9 +117,29 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n             }\n         }\n \n-        assert!(body.yield_ty().is_some() == universal_regions.yield_ty.is_some());\n-        if let Some(mir_yield_ty) = body.yield_ty() {\n-            let ur_yield_ty = universal_regions.yield_ty.unwrap();\n+        debug!(\n+            \"equate_inputs_and_outputs: body.yield_ty {:?}, universal_regions.yield_ty {:?}\",\n+            body.yield_ty(),\n+            universal_regions.yield_ty\n+        );\n+\n+        // We will not have a universal_regions.yield_ty if we yield (by accident)\n+        // outside of a generator and return an `impl Trait`, so emit a delay_span_bug\n+        // because we don't want to panic in an assert here if we've already got errors.\n+        if body.yield_ty().is_some() != universal_regions.yield_ty.is_some() {\n+            self.tcx().sess.delay_span_bug(\n+                body.span,\n+                &format!(\n+                    \"Expected body to have yield_ty ({:?}) iff we have a UR yield_ty ({:?})\",\n+                    body.yield_ty(),\n+                    universal_regions.yield_ty,\n+                ),\n+            );\n+        }\n+\n+        if let (Some(mir_yield_ty), Some(ur_yield_ty)) =\n+            (body.yield_ty(), universal_regions.yield_ty)\n+        {\n             let yield_span = body.local_decls[RETURN_PLACE].source_info.span;\n             self.equate_normalized_input_or_output(ur_yield_ty, mir_yield_ty, yield_span);\n         }"}, {"sha": "6c027feb422d17f418c18f5bcd1a56408feff6e0", "filename": "src/test/ui/generator/issue-91477.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7c108ababc7a54bd090f85aa7daab606af8ac6e8/src%2Ftest%2Fui%2Fgenerator%2Fissue-91477.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c108ababc7a54bd090f85aa7daab606af8ac6e8/src%2Ftest%2Fui%2Fgenerator%2Fissue-91477.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fissue-91477.rs?ref=7c108ababc7a54bd090f85aa7daab606af8ac6e8", "patch": "@@ -0,0 +1,7 @@\n+#![feature(generators)]\n+\n+fn foo() -> impl Sized {\n+    yield 1; //~ ERROR E0627\n+}\n+\n+fn main() {}"}, {"sha": "4597dc1bcdfa55142f49d63af5bae2442f2d9a04", "filename": "src/test/ui/generator/issue-91477.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7c108ababc7a54bd090f85aa7daab606af8ac6e8/src%2Ftest%2Fui%2Fgenerator%2Fissue-91477.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c108ababc7a54bd090f85aa7daab606af8ac6e8/src%2Ftest%2Fui%2Fgenerator%2Fissue-91477.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fissue-91477.stderr?ref=7c108ababc7a54bd090f85aa7daab606af8ac6e8", "patch": "@@ -0,0 +1,9 @@\n+error[E0627]: yield expression outside of generator literal\n+  --> $DIR/issue-91477.rs:4:5\n+   |\n+LL |     yield 1;\n+   |     ^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0627`."}]}