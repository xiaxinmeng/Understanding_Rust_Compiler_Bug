{"sha": "40e41440e46a56b5d5fd66473c23efff6d44be3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwZTQxNDQwZTQ2YTU2YjVkNWZkNjY0NzNjMjNlZmZmNmQ0NGJlM2Y=", "commit": {"author": {"name": "Jonathan Behrens", "email": "fintelia@gmail.com", "date": "2018-11-01T17:29:47Z"}, "committer": {"name": "Jonathan Behrens", "email": "fintelia@gmail.com", "date": "2018-11-02T17:39:56Z"}, "message": "Suggested edits", "tree": {"sha": "0053971cba288277646ebece49b1eee1f0f06f98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0053971cba288277646ebece49b1eee1f0f06f98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40e41440e46a56b5d5fd66473c23efff6d44be3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40e41440e46a56b5d5fd66473c23efff6d44be3f", "html_url": "https://github.com/rust-lang/rust/commit/40e41440e46a56b5d5fd66473c23efff6d44be3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40e41440e46a56b5d5fd66473c23efff6d44be3f/comments", "author": {"login": "fintelia", "id": 4943209, "node_id": "MDQ6VXNlcjQ5NDMyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/4943209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fintelia", "html_url": "https://github.com/fintelia", "followers_url": "https://api.github.com/users/fintelia/followers", "following_url": "https://api.github.com/users/fintelia/following{/other_user}", "gists_url": "https://api.github.com/users/fintelia/gists{/gist_id}", "starred_url": "https://api.github.com/users/fintelia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fintelia/subscriptions", "organizations_url": "https://api.github.com/users/fintelia/orgs", "repos_url": "https://api.github.com/users/fintelia/repos", "events_url": "https://api.github.com/users/fintelia/events{/privacy}", "received_events_url": "https://api.github.com/users/fintelia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fintelia", "id": 4943209, "node_id": "MDQ6VXNlcjQ5NDMyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/4943209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fintelia", "html_url": "https://github.com/fintelia", "followers_url": "https://api.github.com/users/fintelia/followers", "following_url": "https://api.github.com/users/fintelia/following{/other_user}", "gists_url": "https://api.github.com/users/fintelia/gists{/gist_id}", "starred_url": "https://api.github.com/users/fintelia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fintelia/subscriptions", "organizations_url": "https://api.github.com/users/fintelia/orgs", "repos_url": "https://api.github.com/users/fintelia/repos", "events_url": "https://api.github.com/users/fintelia/events{/privacy}", "received_events_url": "https://api.github.com/users/fintelia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07d966dbb8bee4ff193293555bd9ff2705cb1ece", "url": "https://api.github.com/repos/rust-lang/rust/commits/07d966dbb8bee4ff193293555bd9ff2705cb1ece", "html_url": "https://github.com/rust-lang/rust/commit/07d966dbb8bee4ff193293555bd9ff2705cb1ece"}], "stats": {"total": 48, "additions": 24, "deletions": 24}, "files": [{"sha": "12d1afe606950017f83e0dc91a7a3f1cf07a35f8", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/40e41440e46a56b5d5fd66473c23efff6d44be3f/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40e41440e46a56b5d5fd66473c23efff6d44be3f/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=40e41440e46a56b5d5fd66473c23efff6d44be3f", "patch": "@@ -534,7 +534,7 @@ impl<W: Write> BufWriter<W> {\n     /// use std::io::BufWriter;\n     /// use std::net::TcpStream;\n     ///\n-    /// let mut buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").unwrap());\n+    /// let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").unwrap());\n     ///\n     /// // See how many bytes are currently buffered\n     /// let bytes_buffered = buf_writer.buffer().len();\n@@ -985,30 +985,30 @@ mod tests {\n         let nread = reader.read(&mut buf);\n         assert_eq!(nread.unwrap(), 3);\n         assert_eq!(buf, [5, 6, 7]);\n-        assert_eq!(*reader.buffer(), []);\n+        assert_eq!(reader.buffer(), []);\n \n         let mut buf = [0, 0];\n         let nread = reader.read(&mut buf);\n         assert_eq!(nread.unwrap(), 2);\n         assert_eq!(buf, [0, 1]);\n-        assert_eq!(*reader.buffer(), []);\n+        assert_eq!(reader.buffer(), []);\n \n         let mut buf = [0];\n         let nread = reader.read(&mut buf);\n         assert_eq!(nread.unwrap(), 1);\n         assert_eq!(buf, [2]);\n-        assert_eq!(*reader.buffer(), [3]);\n+        assert_eq!(reader.buffer(), [3]);\n \n         let mut buf = [0, 0, 0];\n         let nread = reader.read(&mut buf);\n         assert_eq!(nread.unwrap(), 1);\n         assert_eq!(buf, [3, 0, 0]);\n-        assert_eq!(*reader.buffer(), []);\n+        assert_eq!(reader.buffer(), []);\n \n         let nread = reader.read(&mut buf);\n         assert_eq!(nread.unwrap(), 1);\n         assert_eq!(buf, [4, 0, 0]);\n-        assert_eq!(*reader.buffer(), []);\n+        assert_eq!(reader.buffer(), []);\n \n         assert_eq!(reader.read(&mut buf).unwrap(), 0);\n     }\n@@ -1097,41 +1097,41 @@ mod tests {\n         let mut writer = BufWriter::with_capacity(2, inner);\n \n         writer.write(&[0, 1]).unwrap();\n-        assert_eq!(*writer.buffer(), []);\n-        assert_eq!(*writer.get_ref(), [0, 1]);\n+        assert_eq!(writer.buffer(), []);\n+        assert_eq!(writer.get_ref(), [0, 1]);\n \n         writer.write(&[2]).unwrap();\n-        assert_eq!(*writer.buffer(), [2]);\n-        assert_eq!(*writer.get_ref(), [0, 1]);\n+        assert_eq!(writer.buffer(), [2]);\n+        assert_eq!(writer.get_ref(), [0, 1]);\n \n         writer.write(&[3]).unwrap();\n-        assert_eq!(*writer.buffer(), [2, 3]);\n-        assert_eq!(*writer.get_ref(), [0, 1]);\n+        assert_eq!(writer.buffer(), [2, 3]);\n+        assert_eq!(writer.get_ref(), [0, 1]);\n \n         writer.flush().unwrap();\n-        assert_eq!(*writer.buffer(), []);\n-        assert_eq!(*writer.get_ref(), [0, 1, 2, 3]);\n+        assert_eq!(writer.buffer(), []);\n+        assert_eq!(writer.get_ref(), [0, 1, 2, 3]);\n \n         writer.write(&[4]).unwrap();\n         writer.write(&[5]).unwrap();\n-        assert_eq!(*writer.buffer(), [4, 5]);\n-        assert_eq!(*writer.get_ref(), [0, 1, 2, 3]);\n+        assert_eq!(writer.buffer(), [4, 5]);\n+        assert_eq!(writer.get_ref(), [0, 1, 2, 3]);\n \n         writer.write(&[6]).unwrap();\n-        assert_eq!(*writer.buffer(), [6]);\n-        assert_eq!(*writer.get_ref(), [0, 1, 2, 3, 4, 5]);\n+        assert_eq!(writer.buffer(), [6]);\n+        assert_eq!(writer.get_ref(), [0, 1, 2, 3, 4, 5]);\n \n         writer.write(&[7, 8]).unwrap();\n-        assert_eq!(*writer.buffer(), []);\n-        assert_eq!(*writer.get_ref(), [0, 1, 2, 3, 4, 5, 6, 7, 8]);\n+        assert_eq!(writer.buffer(), []);\n+        assert_eq!(writer.get_ref(), [0, 1, 2, 3, 4, 5, 6, 7, 8]);\n \n         writer.write(&[9, 10, 11]).unwrap();\n-        assert_eq!(*writer.buffer(), []);\n-        assert_eq!(*writer.get_ref(), [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]);\n+        assert_eq!(writer.buffer(), []);\n+        assert_eq!(writer.get_ref(), [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]);\n \n         writer.flush().unwrap();\n-        assert_eq!(*writer.buffer(), []);\n-        assert_eq!(*writer.get_ref(), [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]);\n+        assert_eq!(writer.buffer(), []);\n+        assert_eq!(writer.get_ref(), [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]);\n     }\n \n     #[test]"}]}