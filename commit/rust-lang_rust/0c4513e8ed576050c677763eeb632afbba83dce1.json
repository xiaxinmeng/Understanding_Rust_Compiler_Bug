{"sha": "0c4513e8ed576050c677763eeb632afbba83dce1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjNDUxM2U4ZWQ1NzYwNTBjNjc3NzYzZWViNjMyYWZiYmE4M2RjZTE=", "commit": {"author": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-08-01T04:19:01Z"}, "committer": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-08-01T04:19:01Z"}, "message": "code review fixes", "tree": {"sha": "db63567080d8fa423dc3006e1e32e008ad1be86b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db63567080d8fa423dc3006e1e32e008ad1be86b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c4513e8ed576050c677763eeb632afbba83dce1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c4513e8ed576050c677763eeb632afbba83dce1", "html_url": "https://github.com/rust-lang/rust/commit/0c4513e8ed576050c677763eeb632afbba83dce1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c4513e8ed576050c677763eeb632afbba83dce1/comments", "author": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c17d11fb39d93b1093fe19ca3c3db09130d3f47c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c17d11fb39d93b1093fe19ca3c3db09130d3f47c", "html_url": "https://github.com/rust-lang/rust/commit/c17d11fb39d93b1093fe19ca3c3db09130d3f47c"}], "stats": {"total": 83, "additions": 43, "deletions": 40}, "files": [{"sha": "f3ed4ffab7d0fc0a9846a58ac083bdb6479ca41d", "filename": "src/librustc/mir/interpret/mod.rs", "status": "modified", "additions": 40, "deletions": 31, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/0c4513e8ed576050c677763eeb632afbba83dce1/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c4513e8ed576050c677763eeb632afbba83dce1/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs?ref=0c4513e8ed576050c677763eeb632afbba83dce1", "patch": "@@ -1,34 +1,14 @@\n //! An interpreter for MIR used in CTFE and by miri\n \n #[macro_export]\n-macro_rules! throw_unsup {\n-    ($($tt:tt)*) => { return Err(err_unsup!($($tt)*).into()) };\n-}\n-\n-#[macro_export]\n-macro_rules! throw_inval {\n-    ($($tt:tt)*) => { return Err(err_inval!($($tt)*).into()) };\n-}\n-\n-#[macro_export]\n-macro_rules! throw_ub {\n+macro_rules! err_unsup {\n     ($($tt:tt)*) => {\n-        return Err($crate::mir::interpret::InterpError::UndefinedBehaviour(\n-            $crate::mir::interpret::UndefinedBehaviourInfo::$($tt)*\n-        ).into())\n+        $crate::mir::interpret::InterpError::Unsupported(\n+            $crate::mir::interpret::UnsupportedOpInfo::$($tt)*\n+        )\n     };\n }\n \n-#[macro_export]\n-macro_rules! throw_panic {\n-    ($($tt:tt)*) => { return Err(err_panic!($($tt)*).into()) };\n-}\n-\n-#[macro_export]\n-macro_rules! throw_exhaust {\n-    ($($tt:tt)*) => { return Err(err_exhaust!($($tt)*).into()) };\n-}\n-\n #[macro_export]\n macro_rules! err_inval {\n     ($($tt:tt)*) => {\n@@ -39,10 +19,19 @@ macro_rules! err_inval {\n }\n \n #[macro_export]\n-macro_rules! err_unsup {\n+macro_rules! err_ub {\n     ($($tt:tt)*) => {\n-        $crate::mir::interpret::InterpError::Unsupported(\n-            $crate::mir::interpret::UnsupportedOpInfo::$($tt)*\n+        $crate::mir::interpret::InterpError::UndefinedBehaviour(\n+            $crate::mir::interpret::UndefinedBehaviourInfo::$($tt)*\n+        )\n+    };\n+}\n+\n+#[macro_export]\n+macro_rules! err_panic {\n+    ($($tt:tt)*) => {\n+        $crate::mir::interpret::InterpError::Panic(\n+            $crate::mir::interpret::PanicInfo::$($tt)*\n         )\n     };\n }\n@@ -57,14 +46,34 @@ macro_rules! err_exhaust {\n }\n \n #[macro_export]\n-macro_rules! err_panic {\n+macro_rules! throw_unsup {\n+    ($($tt:tt)*) => { return Err(err_unsup!($($tt)*).into()) };\n+}\n+\n+#[macro_export]\n+macro_rules! throw_inval {\n+    ($($tt:tt)*) => { return Err(err_inval!($($tt)*).into()) };\n+}\n+\n+#[macro_export]\n+macro_rules! throw_ub {\n     ($($tt:tt)*) => {\n-        $crate::mir::interpret::InterpError::Panic(\n-            $crate::mir::interpret::PanicInfo::$($tt)*\n-        )\n+        return Err($crate::mir::interpret::InterpError::UndefinedBehaviour(\n+            $crate::mir::interpret::UndefinedBehaviourInfo::$($tt)*\n+        ).into())\n     };\n }\n \n+#[macro_export]\n+macro_rules! throw_panic {\n+    ($($tt:tt)*) => { return Err(err_panic!($($tt)*).into()) };\n+}\n+\n+#[macro_export]\n+macro_rules! throw_exhaust {\n+    ($($tt:tt)*) => { return Err(err_exhaust!($($tt)*).into()) };\n+}\n+\n mod error;\n mod value;\n mod allocation;"}, {"sha": "f10d7fb96511601cddbb4f79e60ec9fc0cbe3c26", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c4513e8ed576050c677763eeb632afbba83dce1/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c4513e8ed576050c677763eeb632afbba83dce1/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=0c4513e8ed576050c677763eeb632afbba83dce1", "patch": "@@ -191,9 +191,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> LayoutOf for InterpCx<'mir, 'tcx, M> {\n     fn layout_of(&self, ty: Ty<'tcx>) -> Self::TyLayout {\n         self.tcx\n             .layout_of(self.param_env.and(ty))\n-            .map_err(|layout| {\n-                err_inval!(Layout(layout)).into()\n-            })\n+            .map_err(|layout| err_inval!(Layout(layout)).into())\n     }\n }\n "}, {"sha": "5783f53316c57580e61a9e08ebaa1aba47d4a54d", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0c4513e8ed576050c677763eeb632afbba83dce1/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c4513e8ed576050c677763eeb632afbba83dce1/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=0c4513e8ed576050c677763eeb632afbba83dce1", "patch": "@@ -259,19 +259,15 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n                 use rustc::mir::interpret::InterpError::*;\n                 match diagnostic.error {\n                     Exit(_) => bug!(\"the CTFE program cannot exit\"),\n-                    | Unsupported(_) => {},\n-                    | UndefinedBehaviour(_) => {},\n-                    | InvalidProgram(_) => {},\n-                    | ResourceExhaustion(_) => {},\n-                    | Panic(_)\n-                    => {\n+                    Panic(_) => {\n                         diagnostic.report_as_lint(\n                             self.ecx.tcx,\n                             \"this expression will panic at runtime\",\n                             lint_root,\n                             None,\n                         );\n                     }\n+                    _ => {},\n                 }\n                 None\n             },"}]}