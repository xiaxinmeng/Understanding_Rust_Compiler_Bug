{"sha": "5796e9e49ccf155772b8f829f458c304da1742fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3OTZlOWU0OWNjZjE1NTc3MmI4ZjgyOWY0NThjMzA0ZGExNzQyZmI=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-08-20T19:46:48Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-08-20T19:56:34Z"}, "message": "Add tests for self type using builtin kinds. (#7083)", "tree": {"sha": "0f49e36ed9be1b54c91a0b9891514276073b50ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f49e36ed9be1b54c91a0b9891514276073b50ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5796e9e49ccf155772b8f829f458c304da1742fb", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5796e9e49ccf155772b8f829f458c304da1742fb", "html_url": "https://github.com/rust-lang/rust/commit/5796e9e49ccf155772b8f829f458c304da1742fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5796e9e49ccf155772b8f829f458c304da1742fb/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdbdfe88a5e95428055f0c630bd3346a78436486", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdbdfe88a5e95428055f0c630bd3346a78436486", "html_url": "https://github.com/rust-lang/rust/commit/cdbdfe88a5e95428055f0c630bd3346a78436486"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "75690edeb01b06cce6fee0a38515b8ade73e61ed", "filename": "src/test/compile-fail/builtin-superkinds-self-type.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5796e9e49ccf155772b8f829f458c304da1742fb/src%2Ftest%2Fcompile-fail%2Fbuiltin-superkinds-self-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5796e9e49ccf155772b8f829f458c304da1742fb/src%2Ftest%2Fcompile-fail%2Fbuiltin-superkinds-self-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbuiltin-superkinds-self-type.rs?ref=5796e9e49ccf155772b8f829f458c304da1742fb", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Tests (negatively) the ability for the Self type in default methods\n+// to use capabilities granted by builtin kinds as supertraits.\n+\n+trait Foo : Freeze {\n+    fn foo(self, chan: std::comm::Chan<Self>) {\n+        chan.send(self); //~ ERROR does not fulfill `Send`\n+    }\n+}\n+\n+impl <T: Freeze> Foo for T { }\n+\n+fn main() {\n+    let (p,c) = std::comm::stream();\n+    1193182.foo(c);\n+    assert!(p.recv() == 1193182);\n+}"}, {"sha": "da7f0fb5de99ef97df575dc51fa7442d8a94f12e", "filename": "src/test/run-pass/builtin-superkinds-self-type.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5796e9e49ccf155772b8f829f458c304da1742fb/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-self-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5796e9e49ccf155772b8f829f458c304da1742fb/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-self-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-self-type.rs?ref=5796e9e49ccf155772b8f829f458c304da1742fb", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Tests the ability for the Self type in default methods to use\n+// capabilities granted by builtin kinds as supertraits.\n+\n+trait Foo : Send {\n+    fn foo(self, chan: std::comm::Chan<Self>) {\n+        chan.send(self);\n+    }\n+}\n+\n+impl <T: Send> Foo for T { }\n+\n+fn main() {\n+    let (p,c) = std::comm::stream();\n+    1193182.foo(c);\n+    assert!(p.recv() == 1193182);\n+}"}]}