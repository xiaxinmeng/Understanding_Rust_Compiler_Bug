{"sha": "027bfd68ba6258dcc26a9d43372d869308d512e2", "node_id": "C_kwDOAAsO6NoAKDAyN2JmZDY4YmE2MjU4ZGNjMjZhOWQ0MzM3MmQ4NjkzMDhkNTEyZTI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-09-20T12:33:44Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-09-20T12:33:44Z"}, "message": "Fix operator highlighting tags applying too broadly", "tree": {"sha": "17987ebdb5d7b17839109d7195774e37c8a0dc4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17987ebdb5d7b17839109d7195774e37c8a0dc4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/027bfd68ba6258dcc26a9d43372d869308d512e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/027bfd68ba6258dcc26a9d43372d869308d512e2", "html_url": "https://github.com/rust-lang/rust/commit/027bfd68ba6258dcc26a9d43372d869308d512e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/027bfd68ba6258dcc26a9d43372d869308d512e2/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e8eac3fd7dc04d39200f1aa1956112f678dc858", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e8eac3fd7dc04d39200f1aa1956112f678dc858", "html_url": "https://github.com/rust-lang/rust/commit/7e8eac3fd7dc04d39200f1aa1956112f678dc858"}], "stats": {"total": 53, "additions": 27, "deletions": 26}, "files": [{"sha": "e7d0a8be7f57316f2ce92ade5164fc4c9e3f996a", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=027bfd68ba6258dcc26a9d43372d869308d512e2", "patch": "@@ -87,9 +87,9 @@ fn punctuation(\n     let parent = token.parent();\n     let parent_kind = parent.as_ref().map_or(EOF, SyntaxNode::kind);\n     match (kind, parent_kind) {\n-        (T![?], _) => HlTag::Operator(HlOperator::Other) | HlMod::ControlFlow,\n+        (T![?], TRY_EXPR) => HlTag::Operator(HlOperator::Other) | HlMod::ControlFlow,\n         (T![&], BIN_EXPR) => HlOperator::Bitwise.into(),\n-        (T![&], _) => {\n+        (T![&], REF_EXPR) => {\n             let h = HlTag::Operator(HlOperator::Other).into();\n             let is_unsafe = parent\n                 .and_then(ast::RefExpr::cast)\n@@ -100,7 +100,9 @@ fn punctuation(\n                 h\n             }\n         }\n-        (T![::] | T![->] | T![=>] | T![..] | T![=] | T![@] | T![.], _) => HlOperator::Other.into(),\n+        (T![::] | T![->] | T![=>] | T![..] | T![..=] | T![=] | T![@] | T![.], _) => {\n+            HlOperator::Other.into()\n+        }\n         (T![!], MACRO_CALL | MACRO_RULES) => HlPunct::MacroBang.into(),\n         (T![!], NEVER_TYPE) => HlTag::BuiltinType.into(),\n         (T![!], PREFIX_EXPR) => HlOperator::Logical.into(),\n@@ -129,15 +131,14 @@ fn punctuation(\n         (T![+=] | T![-=] | T![*=] | T![/=] | T![%=], BIN_EXPR) => {\n             Highlight::from(HlOperator::Arithmetic) | HlMod::Mutable\n         }\n-        (T![|] | T![&] | T![!] | T![^] | T![>>] | T![<<], BIN_EXPR) => HlOperator::Bitwise.into(),\n+        (T![|] | T![&] | T![^] | T![>>] | T![<<], BIN_EXPR) => HlOperator::Bitwise.into(),\n         (T![|=] | T![&=] | T![^=] | T![>>=] | T![<<=], BIN_EXPR) => {\n             Highlight::from(HlOperator::Bitwise) | HlMod::Mutable\n         }\n         (T![&&] | T![||], BIN_EXPR) => HlOperator::Logical.into(),\n         (T![>] | T![<] | T![==] | T![>=] | T![<=] | T![!=], BIN_EXPR) => {\n             HlOperator::Comparison.into()\n         }\n-        (_, PREFIX_EXPR | BIN_EXPR | RANGE_EXPR | RANGE_PAT | REST_PAT) => HlOperator::Other.into(),\n         (_, ATTR) => HlTag::AttributeBracket.into(),\n         (kind, _) => match kind {\n             T!['['] | T![']'] => HlPunct::Bracket,"}, {"sha": "9ed65fbc8548d1dba4f1a50bbe2d51f175ccc6f8", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_assoc_functions.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html", "raw_url": "https://github.com/rust-lang/rust/raw/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html?ref=027bfd68ba6258dcc26a9d43372d869308d512e2", "patch": "@@ -48,15 +48,15 @@\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">foo</span> <span class=\"brace\">{</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration public static\">is_static</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration public reference\">is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration public reference\">is_not_static</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">t</span> <span class=\"brace\">{</span>\n     <span class=\"keyword\">fn</span> <span class=\"function associated declaration static trait\">t_is_static</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">t_is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">t_is_not_static</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">t</span> <span class=\"keyword\">for</span> <span class=\"struct\">foo</span> <span class=\"brace\">{</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration public static trait\">is_static</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration public reference trait\">is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration public reference trait\">is_not_static</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "18045f1f55afdb2742da743e2eabe6f8aff6ab7f", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_doctest.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html?ref=027bfd68ba6258dcc26a9d43372d869308d512e2", "patch": "@@ -125,7 +125,7 @@\n     <span class=\"comment documentation\">/// ```sh</span>\n     <span class=\"comment documentation\">/// echo 1</span>\n     <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration public reference\">foo</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">bool</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration public reference\">foo</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">bool</span> <span class=\"brace\">{</span>\n         <span class=\"bool_literal\">true</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>"}, {"sha": "9f2b1926b511d270a9ea5e7ad926ec5c51722788", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_general.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_general.html", "raw_url": "https://github.com/rust-lang/rust/raw/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_general.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_general.html?ref=027bfd68ba6258dcc26a9d43372d869308d512e2", "patch": "@@ -61,11 +61,11 @@\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Bar</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">bar</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">bar</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">Bar</span> <span class=\"keyword\">for</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">bar</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">bar</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n         <span class=\"self_keyword reference\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n@@ -75,11 +75,11 @@\n         <span class=\"value_param\">f</span><span class=\"operator\">.</span><span class=\"function associated consuming\">baz</span><span class=\"parenthesis\">(</span><span class=\"self_keyword consuming mutable\">self</span><span class=\"parenthesis\">)</span>\n     <span class=\"brace\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration mutable reference\">qux</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword declaration mutable reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration mutable reference\">qux</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword declaration mutable reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n         <span class=\"self_keyword mutable reference\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"semicolon\">;</span>\n     <span class=\"brace\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference\">quop</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference\">quop</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n         <span class=\"self_keyword reference\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n@@ -96,11 +96,11 @@\n         <span class=\"value_param\">f</span><span class=\"operator\">.</span><span class=\"function associated\">baz</span><span class=\"parenthesis\">(</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span>\n     <span class=\"brace\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration mutable reference\">qux</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword declaration mutable reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration mutable reference\">qux</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword declaration mutable reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n         <span class=\"self_keyword mutable reference\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"semicolon\">;</span>\n     <span class=\"brace\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference\">quop</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference\">quop</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"brace\">{</span>\n         <span class=\"self_keyword reference\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>"}, {"sha": "abcd80c280bf3d072f990b69352e83241544f8c1", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_injection.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html?ref=027bfd68ba6258dcc26a9d43372d869308d512e2", "patch": "@@ -42,7 +42,7 @@\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n-<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">fixture</span><span class=\"parenthesis\">(</span><span class=\"value_param declaration reference\">ra_fixture</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"builtin_type\">str</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">fixture</span><span class=\"parenthesis\">(</span><span class=\"value_param declaration reference\">ra_fixture</span><span class=\"colon\">:</span> <span class=\"punctuation\">&</span><span class=\"builtin_type\">str</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n     <span class=\"function\">fixture</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">r#\"</span>"}, {"sha": "f98e0b1cda6e920c6a6b884d366d78f33d5cdff8", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_lifetimes.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_lifetimes.html", "raw_url": "https://github.com/rust-lang/rust/raw/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_lifetimes.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_lifetimes.html?ref=027bfd68ba6258dcc26a9d43372d869308d512e2", "patch": "@@ -45,8 +45,8 @@\n <pre><code>\n <span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"attribute attribute default_library library\">derive</span><span class=\"parenthesis attribute\">(</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">Foo</span><span class=\"angle\">&lt;</span><span class=\"lifetime declaration\">'a</span><span class=\"comma\">,</span> <span class=\"lifetime declaration\">'b</span><span class=\"comma\">,</span> <span class=\"lifetime declaration\">'c</span><span class=\"angle\">&gt;</span> <span class=\"keyword\">where</span> <span class=\"lifetime\">'a</span><span class=\"colon\">:</span> <span class=\"lifetime\">'a</span><span class=\"comma\">,</span> <span class=\"lifetime\">'static</span><span class=\"colon\">:</span> <span class=\"lifetime\">'static</span> <span class=\"brace\">{</span>\n-    <span class=\"field declaration\">field</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"lifetime\">'a</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n-    <span class=\"field declaration\">field2</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"lifetime\">'static</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n+    <span class=\"field declaration\">field</span><span class=\"colon\">:</span> <span class=\"punctuation\">&</span><span class=\"lifetime\">'a</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n+    <span class=\"field declaration\">field2</span><span class=\"colon\">:</span> <span class=\"punctuation\">&</span><span class=\"lifetime\">'static</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n <span class=\"brace\">}</span>\n <span class=\"keyword\">impl</span><span class=\"angle\">&lt;</span><span class=\"lifetime declaration\">'a</span><span class=\"angle\">&gt;</span> <span class=\"struct\">Foo</span><span class=\"angle\">&lt;</span><span class=\"lifetime\">'_</span><span class=\"comma\">,</span> <span class=\"lifetime\">'a</span><span class=\"comma\">,</span> <span class=\"lifetime\">'static</span><span class=\"angle\">&gt;</span>\n <span class=\"keyword\">where</span>"}, {"sha": "a626cda3fe8b437c98c09aa9c8f468c2534fa1d0", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_strings.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html?ref=027bfd68ba6258dcc26a9d43372d869308d512e2", "patch": "@@ -62,16 +62,16 @@\n         <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"parenthesis\">(</span>\n             <span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>panicking<span class=\"colon\">:</span><span class=\"colon\">:</span>panic<span class=\"parenthesis\">(</span><span class=\"string_literal\">\"explicit panic\"</span><span class=\"parenthesis\">)</span>\n         <span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n-        <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>msg<span class=\"colon\">:</span>literal <span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"comma\">,</span><span class=\"parenthesis\">)</span><span class=\"operator control\">?</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"parenthesis\">(</span>\n+        <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>msg<span class=\"colon\">:</span>literal <span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"comma\">,</span><span class=\"parenthesis\">)</span><span class=\"punctuation\">?</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"parenthesis\">(</span>\n             <span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>panicking<span class=\"colon\">:</span><span class=\"colon\">:</span>panic<span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>msg<span class=\"parenthesis\">)</span>\n         <span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n         <span class=\"comment\">// Use `panic_str` instead of `panic_display::&lt;&str&gt;` for non_fmt_panic lint.</span>\n-        <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>msg<span class=\"colon\">:</span>expr <span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"comma\">,</span><span class=\"parenthesis\">)</span><span class=\"operator control\">?</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"parenthesis\">(</span>\n+        <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>msg<span class=\"colon\">:</span>expr <span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"comma\">,</span><span class=\"parenthesis\">)</span><span class=\"punctuation\">?</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"parenthesis\">(</span>\n             <span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>panicking<span class=\"colon\">:</span><span class=\"colon\">:</span>panic_str<span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>msg<span class=\"parenthesis\">)</span>\n         <span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n         <span class=\"comment\">// Special-case the single-argument case for const_panic.</span>\n-        <span class=\"parenthesis\">(</span><span class=\"string_literal\">\"{}\"</span><span class=\"comma\">,</span> <span class=\"punctuation\">$</span>arg<span class=\"colon\">:</span>expr <span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"comma\">,</span><span class=\"parenthesis\">)</span><span class=\"operator control\">?</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"parenthesis\">(</span>\n-            <span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>panicking<span class=\"colon\">:</span><span class=\"colon\">:</span>panic_display<span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"punctuation\">$</span>arg<span class=\"parenthesis\">)</span>\n+        <span class=\"parenthesis\">(</span><span class=\"string_literal\">\"{}\"</span><span class=\"comma\">,</span> <span class=\"punctuation\">$</span>arg<span class=\"colon\">:</span>expr <span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"comma\">,</span><span class=\"parenthesis\">)</span><span class=\"punctuation\">?</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"parenthesis\">(</span>\n+            <span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>panicking<span class=\"colon\">:</span><span class=\"colon\">:</span>panic_display<span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"punctuation\">$</span>arg<span class=\"parenthesis\">)</span>\n         <span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n         <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>fmt<span class=\"colon\">:</span>expr<span class=\"comma\">,</span> <span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>arg<span class=\"colon\">:</span>tt<span class=\"parenthesis\">)</span><span class=\"punctuation\">+</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"parenthesis\">(</span>\n             <span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>panicking<span class=\"colon\">:</span><span class=\"colon\">:</span>panic_fmt<span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>const_format_args<span class=\"punctuation\">!</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>fmt<span class=\"comma\">,</span> <span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>arg<span class=\"parenthesis\">)</span><span class=\"punctuation\">+</span><span class=\"parenthesis\">)</span><span class=\"parenthesis\">)</span>"}, {"sha": "1992bdc6ae35f3861fbef26415ebdca75be2ae95", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_unsafe.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/027bfd68ba6258dcc26a9d43372d869308d512e2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html?ref=027bfd68ba6258dcc26a9d43372d869308d512e2", "patch": "@@ -49,7 +49,7 @@\n <span class=\"brace\">}</span>\n <span class=\"keyword\">macro_rules</span><span class=\"macro_bang\">!</span> <span class=\"macro declaration\">unsafe_deref</span> <span class=\"brace\">{</span>\n     <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n-        <span class=\"punctuation\">*</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"keyword\">as</span> <span class=\"punctuation\">*</span><span class=\"keyword\">const</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"parenthesis\">)</span>\n+        <span class=\"punctuation\">*</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"keyword\">as</span> <span class=\"punctuation\">*</span><span class=\"keyword\">const</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"parenthesis\">)</span>\n     <span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n <span class=\"keyword\">static</span> <span class=\"keyword\">mut</span> <span class=\"static declaration mutable unsafe\">MUT_GLOBAL</span><span class=\"colon\">:</span> <span class=\"struct\">Struct</span> <span class=\"operator\">=</span> <span class=\"struct\">Struct</span> <span class=\"brace\">{</span> <span class=\"field\">field</span><span class=\"colon\">:</span> <span class=\"numeric_literal\">0</span> <span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n@@ -63,7 +63,7 @@\n \n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">Struct</span> <span class=\"brace\">{</span> <span class=\"field declaration\">field</span><span class=\"colon\">:</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">}</span>\n <span class=\"keyword\">impl</span> <span class=\"struct\">Struct</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference unsafe\">unsafe_method</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference unsafe\">unsafe_method</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">repr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">packed</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n@@ -78,11 +78,11 @@\n <span class=\"keyword\">fn</span> <span class=\"function declaration\">unsafe_trait_bound</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">T</span><span class=\"colon\">:</span> <span class=\"trait\">UnsafeTrait</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">_</span><span class=\"colon\">:</span> <span class=\"type_param\">T</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">DoTheAutoref</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">DoTheAutoref</span> <span class=\"keyword\">for</span> <span class=\"builtin_type\">u16</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>"}]}