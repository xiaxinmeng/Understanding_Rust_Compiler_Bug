{"sha": "4ea3b0b89cd24c6910b89410916118f7eb71a302", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlYTNiMGI4OWNkMjRjNjkxMGI4OTQxMDkxNjExOGY3ZWI3MWEzMDI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-16T02:05:38Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-16T02:06:38Z"}, "message": "rustc: Fix the AST map to actually map blocks. Also improve region error messages involving blocks.", "tree": {"sha": "3c493a860aef3c30d72c9149497d399648f29460", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c493a860aef3c30d72c9149497d399648f29460"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ea3b0b89cd24c6910b89410916118f7eb71a302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ea3b0b89cd24c6910b89410916118f7eb71a302", "html_url": "https://github.com/rust-lang/rust/commit/4ea3b0b89cd24c6910b89410916118f7eb71a302", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ea3b0b89cd24c6910b89410916118f7eb71a302/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "389f53c6ffa79ad8194f1b53422e0679fbc672a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/389f53c6ffa79ad8194f1b53422e0679fbc672a9", "html_url": "https://github.com/rust-lang/rust/commit/389f53c6ffa79ad8194f1b53422e0679fbc672a9"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "94a1e9a923ae3a8217569bc70b7af397ac8e6445", "filename": "src/rustc/middle/ast_map.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4ea3b0b89cd24c6910b89410916118f7eb71a302/src%2Frustc%2Fmiddle%2Fast_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ea3b0b89cd24c6910b89410916118f7eb71a302/src%2Frustc%2Fmiddle%2Fast_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fast_map.rs?ref=4ea3b0b89cd24c6910b89410916118f7eb71a302", "patch": "@@ -55,7 +55,8 @@ fn mk_ast_map_visitor() -> vt {\n         visit_fn: map_fn,\n         visit_local: map_local,\n         visit_arm: map_arm,\n-        visit_view_item: map_view_item\n+        visit_view_item: map_view_item,\n+        visit_block: map_block\n         with *visit::default_visitor()\n     });\n }"}, {"sha": "d6411338e743215f51d9e88db7145d454ec43760", "filename": "src/rustc/util/ppaux.rs", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4ea3b0b89cd24c6910b89410916118f7eb71a302/src%2Frustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ea3b0b89cd24c6910b89410916118f7eb71a302/src%2Frustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Futil%2Fppaux.rs?ref=4ea3b0b89cd24c6910b89410916118f7eb71a302", "patch": "@@ -1,13 +1,33 @@\n+import std::map::hashmap;\n import middle::ty;\n import middle::ty::*;\n import metadata::encoder;\n+import syntax::codemap;\n import syntax::print::pprust;\n import syntax::print::pprust::{path_to_str, constr_args_to_str, proto_to_str,\n                                mode_to_str};\n import syntax::{ast, ast_util};\n import middle::ast_map;\n import driver::session::session;\n \n+fn region_to_str(cx: ctxt, region: region) -> str {\n+    alt region {\n+      re_named(_)   { \"<name>.\"   }     // TODO: include name\n+      re_caller(_)  { \"<caller>.\" }\n+      re_block(node_id) {\n+        alt cx.items.get(node_id) {\n+            ast_map::node_block(blk) {\n+                #fmt(\"<block at %s>.\", codemap::span_to_str(blk.span,\n+                                                            cx.sess.codemap))\n+            }\n+            _ { cx.sess.bug(\"re_block refers to non-block\") }\n+        }\n+      }\n+      re_self(_)    { \"self.\"     }\n+      re_inferred   { \"\"          }\n+    }\n+}\n+\n fn ty_to_str(cx: ctxt, typ: t) -> str {\n     fn fn_input_to_str(cx: ctxt, input: {mode: ast::mode, ty: t}) ->\n        str {\n@@ -68,15 +88,6 @@ fn ty_to_str(cx: ctxt, typ: t) -> str {\n             base\n         }\n     }\n-    fn region_to_str(_cx: ctxt, r: region) -> str {\n-        alt r {\n-          re_named(_)   { \"<name>.\"   }     // TODO: include name\n-          re_caller(_)  { \"<caller>.\" }\n-          re_block(_)   { \"<block>.\"  }     // TODO: include line number\n-          re_self(_)    { \"self.\"     }\n-          re_inferred   { \"\"          }\n-        }\n-    }\n \n     // if there is an id, print that instead of the structural type:\n     alt ty::type_def_id(typ) {"}]}