{"sha": "ed6b575648f366f46b5ba8d63c8abe26ada3a1be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNmI1NzU2NDhmMzY2ZjQ2YjViYThkNjNjOGFiZTI2YWRhM2ExYmU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-02-07T12:03:11Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-02-09T04:22:24Z"}, "message": "Update Makefile", "tree": {"sha": "39a806f1ba5c11a0501e223277f06ed25ec8568c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39a806f1ba5c11a0501e223277f06ed25ec8568c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed6b575648f366f46b5ba8d63c8abe26ada3a1be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed6b575648f366f46b5ba8d63c8abe26ada3a1be", "html_url": "https://github.com/rust-lang/rust/commit/ed6b575648f366f46b5ba8d63c8abe26ada3a1be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed6b575648f366f46b5ba8d63c8abe26ada3a1be/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6407b9405f834feb530c0e365865fb169125f6a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6407b9405f834feb530c0e365865fb169125f6a1", "html_url": "https://github.com/rust-lang/rust/commit/6407b9405f834feb530c0e365865fb169125f6a1"}], "stats": {"total": 74, "additions": 52, "deletions": 22}, "files": [{"sha": "7f73b99863f093fe349962a1b67a72fc159d6f94", "filename": "mk/docs.mk", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ed6b575648f366f46b5ba8d63c8abe26ada3a1be/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ed6b575648f366f46b5ba8d63c8abe26ada3a1be/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=ed6b575648f366f46b5ba8d63c8abe26ada3a1be", "patch": "@@ -62,6 +62,7 @@ RUSTBOOK = $(RPATH_VAR2_T_$(CFG_BUILD)_H_$(CFG_BUILD)) $(RUSTBOOK_EXE)\n # The error-index-generator executable...\n ERR_IDX_GEN_EXE = $(HBIN2_H_$(CFG_BUILD))/error-index-generator$(X_$(CFG_BUILD))\n ERR_IDX_GEN = $(RPATH_VAR2_T_$(CFG_BUILD)_H_$(CFG_BUILD)) $(ERR_IDX_GEN_EXE)\n+ERR_IDX_GEN_MD = $(RPATH_VAR2_T_$(CFG_BUILD)_H_$(CFG_BUILD)) $(ERR_IDX_GEN_EXE) markdown\n \n D := $(S)src/doc\n \n@@ -217,6 +218,12 @@ doc/style/index.html: $(RUSTBOOK_EXE) $(wildcard $(S)/src/doc/style/*.md) | doc/\n \n error-index: doc/error-index.html\n \n-doc/error-index.html: $(ERR_IDX_GEN_EXE) | doc/\n+# Metadata used to generate the index is created as a side effect of\n+# the build so this depends on every crate being up to date.\n+doc/error-index.html: $(ERR_IDX_GEN_EXE) $(CSREQ$(2)_T_$(CFG_BUILD)_H_$(CFG_BUILD)) | doc/\n \t$(Q)$(call E, error-index-generator: $@)\n \t$(Q)$(ERR_IDX_GEN)\n+\n+doc/error-index.md: $(ERR_IDX_GEN_EXE) $(CSREQ$(2)_T_$(CFG_BUILD)_H_$(CFG_BUILD)) | doc/\n+\t$(Q)$(call E, error-index-generator: $@)\n+\t$(Q)$(ERR_IDX_GEN_MD)"}, {"sha": "2e530095cbe1c92d5b38df47b229f686b02965ea", "filename": "mk/tests.mk", "status": "modified", "additions": 33, "deletions": 10, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/ed6b575648f366f46b5ba8d63c8abe26ada3a1be/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ed6b575648f366f46b5ba8d63c8abe26ada3a1be/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=ed6b575648f366f46b5ba8d63c8abe26ada3a1be", "patch": "@@ -298,14 +298,14 @@ check-stage$(1)-T-$(2)-H-$(3)-exec: \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-rfail-exec \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-cfail-exec \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-pfail-exec \\\n-    check-stage$(1)-T-$(2)-H-$(3)-rpass-valgrind-exec \\\n-    check-stage$(1)-T-$(2)-H-$(3)-rpass-full-exec \\\n-    check-stage$(1)-T-$(2)-H-$(3)-rfail-full-exec \\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-rpass-valgrind-exec \\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-rpass-full-exec \\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-rfail-full-exec \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-cfail-full-exec \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-rmake-exec \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-rustdocck-exec \\\n-        check-stage$(1)-T-$(2)-H-$(3)-crates-exec \\\n-        check-stage$(1)-T-$(2)-H-$(3)-doc-crates-exec \\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-crates-exec \\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-doc-crates-exec \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-debuginfo-gdb-exec \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-debuginfo-lldb-exec \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-codegen-exec \\\n@@ -673,8 +673,8 @@ CTEST_DEPS_debuginfo-lldb_$(1)-T-$(2)-H-$(3) = $$(DEBUGINFO_LLDB_TESTS) \\\n CTEST_DEPS_codegen_$(1)-T-$(2)-H-$(3) = $$(CODEGEN_TESTS)\n CTEST_DEPS_codegen-units_$(1)-T-$(2)-H-$(3) = $$(CODEGEN_UNITS_TESTS)\n CTEST_DEPS_rustdocck_$(1)-T-$(2)-H-$(3) = $$(RUSTDOCCK_TESTS) \\\n-        $$(HBIN$(1)_H_$(3))/rustdoc$$(X_$(3)) \\\n-\t$(S)src/etc/htmldocck.py\n+\t\t$$(HBIN$(1)_H_$(3))/rustdoc$$(X_$(3)) \\\n+\t\t$(S)src/etc/htmldocck.py\n \n endef\n \n@@ -892,6 +892,28 @@ $(foreach host,$(CFG_HOST), \\\n    $(foreach crate,$(TEST_DOC_CRATES), \\\n     $(eval $(call DEF_CRATE_DOC_TEST,$(stage),$(target),$(host),$(crate)))))))\n \n+define DEF_DOC_TEST_ERROR_INDEX\n+\n+check-stage$(1)-T-$(2)-H-$(3)-doc-error-index-exec: $$(call TEST_OK_FILE,$(1),$(2),$(3),doc-error-index)\n+\n+ifeq ($(2),$$(CFG_BUILD))\n+$$(call TEST_OK_FILE,$(1),$(2),$(3),doc-error-index): \\\n+\t\t$$(TEST_SREQ$(1)_T_$(2)_H_$(3)) \\\n+\t\tdoc/error-index.md\n+\t$$(Q)touch $$@.start_time\n+\t$$(RUSTDOC_$(1)_T_$(2)_H_$(3)) --test doc/error-index.md\n+\t$$(Q)touch -r $$@.start_time $$@ && rm $$@.start_time\n+else\n+$$(call TEST_OK_FILE,$(1),$(2),$(3),doc-error-index):\n+\t$$(Q)touch $$@\n+endif\n+endef\n+\n+$(foreach host,$(CFG_HOST), \\\n+ $(foreach target,$(CFG_TARGET), \\\n+  $(foreach stage,$(STAGES), \\\n+   $(eval $(call DEF_DOC_TEST_ERROR_INDEX,$(stage),$(target),$(host))))))\n+\n ######################################################################\n # Shortcut rules\n ######################################################################\n@@ -901,7 +923,7 @@ TEST_GROUPS = \\\n \t$(foreach crate,$(TEST_CRATES),$(crate)) \\\n \t$(foreach crate,$(TEST_DOC_CRATES),doc-crate-$(crate)) \\\n \trpass \\\n-    rpass-valgrind \\\n+\trpass-valgrind \\\n \trpass-full \\\n \trfail-full \\\n \tcfail-full \\\n@@ -918,7 +940,7 @@ TEST_GROUPS = \\\n \t$(foreach docname,$(DOC_NAMES),doc-$(docname)) \\\n \tpretty \\\n \tpretty-rpass \\\n-    pretty-rpass-valgrind \\\n+\tpretty-rpass-valgrind \\\n \tpretty-rpass-full \\\n \tpretty-rfail-full \\\n \tpretty-rfail \\\n@@ -987,7 +1009,8 @@ define DEF_CHECK_DOC_FOR_STAGE\n check-stage$(1)-docs: $$(foreach docname,$$(DOC_NAMES), \\\n                        check-stage$(1)-T-$$(CFG_BUILD)-H-$$(CFG_BUILD)-doc-$$(docname)) \\\n                      $$(foreach crate,$$(TEST_DOC_CRATES), \\\n-                       check-stage$(1)-T-$$(CFG_BUILD)-H-$$(CFG_BUILD)-doc-crate-$$(crate))\n+                       check-stage$(1)-T-$$(CFG_BUILD)-H-$$(CFG_BUILD)-doc-crate-$$(crate)) \\\n+                     check-stage$(1)-T-$$(CFG_BUILD)-H-$$(CFG_BUILD)-doc-error-index-exec\n endef\n \n $(foreach stage,$(STAGES), \\"}, {"sha": "8a9ef666b838468405119dc9a397d0b5a7710d85", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ed6b575648f366f46b5ba8d63c8abe26ada3a1be/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed6b575648f366f46b5ba8d63c8abe26ada3a1be/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=ed6b575648f366f46b5ba8d63c8abe26ada3a1be", "patch": "@@ -131,8 +131,8 @@ String to be moved into a variable called `s`.\n let x = Some(\"s\".to_string());\n \n match x {\n-    op_string @ Some(s) => {}\n-    None => {}\n+    op_string @ Some(s) => {},\n+    None => {},\n }\n ```\n \n@@ -145,10 +145,10 @@ name is bound by move in a pattern, it should also be moved to wherever it is\n referenced in the pattern guard code. Doing so however would prevent the name\n from being available in the body of the match arm. Consider the following:\n \n-```\n+```compile_fail\n match Some(\"hi\".to_string()) {\n-    Some(s) if s.len() == 0 => // use s.\n-    _ => {}\n+    Some(s) if s.len() == 0 => {}, // use s.\n+    _ => {},\n }\n ```\n \n@@ -159,11 +159,11 @@ therefore become unavailable in the body of the arm. Although this example seems\n innocuous, the problem is most clear when considering functions that take their\n argument by value.\n \n-```\n+```compile_fail\n match Some(\"hi\".to_string()) {\n     Some(s) if { drop(s); false } => (),\n-    Some(s) => // use s.\n-    _ => {}\n+    Some(s) => {}, // use s.\n+    _ => {},\n }\n ```\n \n@@ -1645,7 +1645,7 @@ let x: i32 = \"I am not a number!\";\n Another situation in which this occurs is when you attempt to use the `try!`\n macro inside a function that does not return a `Result<T, E>`:\n \n-```\n+```compile_fail\n use std::fs::File;\n \n fn main() {"}, {"sha": "0ff6dcccde698c1a21b4a46b7e7759d90fb13ff8", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed6b575648f366f46b5ba8d63c8abe26ada3a1be/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed6b575648f366f46b5ba8d63c8abe26ada3a1be/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=ed6b575648f366f46b5ba8d63c8abe26ada3a1be", "patch": "@@ -1406,7 +1406,7 @@ fn main() {\n To solve this situation, constrain the type of the variable.\n Examples:\n \n-```\n+```no_run\n #![allow(unused_variables)]\n \n fn some_func(x: &u32) {"}, {"sha": "f7a56dd582f3195bd99d9c0856594e9528f202cb", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed6b575648f366f46b5ba8d63c8abe26ada3a1be/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed6b575648f366f46b5ba8d63c8abe26ada3a1be/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=ed6b575648f366f46b5ba8d63c8abe26ada3a1be", "patch": "@@ -579,7 +579,7 @@ mod tests {\n         t(\"rust\",                  false,        false,  false,  true,  false,        false);\n         t(\"sh\",                    false,        false,  false,  false, false,        false);\n         t(\"ignore\",                false,        false,  true,   true,  false,        false);\n-        t(\"should_panic\",          true,         false,  false,  true,  false,        false);\n+        t(\"should_panic\",          true,         true,   false,  true,  false,        false);\n         t(\"no_run\",                false,        true,   false,  true,  false,        false);\n         t(\"test_harness\",          false,        false,  false,  true,  true,         false);\n         t(\"compile_fail\",          false,        false,  false,  true,  false,        true);"}]}