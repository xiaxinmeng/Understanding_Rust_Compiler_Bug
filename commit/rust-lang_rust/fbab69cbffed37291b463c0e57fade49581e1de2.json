{"sha": "fbab69cbffed37291b463c0e57fade49581e1de2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiYWI2OWNiZmZlZDM3MjkxYjQ2M2MwZTU3ZmFkZTQ5NTgxZTFkZTI=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-05T17:01:41Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-05T17:21:03Z"}, "message": "Get rid of subst_bound_vars uses", "tree": {"sha": "c7c21751708e37b84a4720ebdfaf6e50d99b1ab5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7c21751708e37b84a4720ebdfaf6e50d99b1ab5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbab69cbffed37291b463c0e57fade49581e1de2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbab69cbffed37291b463c0e57fade49581e1de2", "html_url": "https://github.com/rust-lang/rust/commit/fbab69cbffed37291b463c0e57fade49581e1de2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbab69cbffed37291b463c0e57fade49581e1de2/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e28f0c98ba449c372ffcc450ac756f0adbdf9549", "url": "https://api.github.com/repos/rust-lang/rust/commits/e28f0c98ba449c372ffcc450ac756f0adbdf9549", "html_url": "https://github.com/rust-lang/rust/commit/e28f0c98ba449c372ffcc450ac756f0adbdf9549"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "c90a16720d97f5d7f09d93bdb7a31dd8a84921ca", "filename": "crates/hir_ty/src/infer/unify.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fbab69cbffed37291b463c0e57fade49581e1de2/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbab69cbffed37291b463c0e57fade49581e1de2/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs?ref=fbab69cbffed37291b463c0e57fade49581e1de2", "patch": "@@ -152,7 +152,7 @@ impl<T> Canonicalized<T> {\n             // eagerly replace projections in the type; we may be getting types\n             // e.g. from where clauses where this hasn't happened yet\n             let ty = ctx.normalize_associated_types_in(\n-                ty.assert_ty_ref(&Interner).clone().subst_bound_vars(&new_vars),\n+                new_vars.apply(ty.assert_ty_ref(&Interner).clone(), &Interner),\n             );\n             ctx.table.unify(&TyKind::InferenceVar(v, k).intern(&Interner), &ty);\n         }\n@@ -173,8 +173,8 @@ pub(crate) fn unify(tys: &Canonical<(Ty, Ty)>) -> Option<Substitution> {\n             // fallback to Unknown in the end (kind of hacky, as below)\n             .map(|_| table.new_type_var()),\n     );\n-    let ty1_with_vars = tys.value.0.clone().subst_bound_vars(&vars);\n-    let ty2_with_vars = tys.value.1.clone().subst_bound_vars(&vars);\n+    let ty1_with_vars = vars.apply(tys.value.0.clone(), &Interner);\n+    let ty2_with_vars = vars.apply(tys.value.1.clone(), &Interner);\n     if !table.unify(&ty1_with_vars, &ty2_with_vars) {\n         return None;\n     }"}, {"sha": "66e72c814fc7893ca3d976fc140de10454d0f4cd", "filename": "crates/hir_ty/src/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fbab69cbffed37291b463c0e57fade49581e1de2/crates%2Fhir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbab69cbffed37291b463c0e57fade49581e1de2/crates%2Fhir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flower.rs?ref=fbab69cbffed37291b463c0e57fade49581e1de2", "patch": "@@ -477,7 +477,7 @@ impl<'a> TyLoweringContext<'a> {\n                                     ),\n                                 );\n                                 let s = generics.type_params_subst(self.db);\n-                                t.substitution.clone().subst_bound_vars(&s)\n+                                s.apply(t.substitution.clone(), &Interner)\n                             }\n                             TypeParamLoweringMode::Variable => t.substitution.clone(),\n                         };"}, {"sha": "46c705a76f71e1a0c58232c31c55c0ac9ebf9409", "filename": "crates/hir_ty/src/types.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fbab69cbffed37291b463c0e57fade49581e1de2/crates%2Fhir_ty%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbab69cbffed37291b463c0e57fade49581e1de2/crates%2Fhir_ty%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftypes.rs?ref=fbab69cbffed37291b463c0e57fade49581e1de2", "patch": "@@ -12,7 +12,7 @@ use smallvec::SmallVec;\n \n use crate::{\n     AssocTypeId, CanonicalVarKinds, ChalkTraitId, ClosureId, FnDefId, FnSig, ForeignDefId,\n-    InferenceVar, Interner, OpaqueTyId, PlaceholderIndex, VariableKinds,\n+    InferenceVar, Interner, OpaqueTyId, PlaceholderIndex, TypeWalk, VariableKinds,\n };\n \n #[derive(Clone, PartialEq, Eq, Debug, Hash)]\n@@ -286,6 +286,10 @@ impl Substitution {\n         Substitution(elements.into_iter().casted(interner).collect())\n     }\n \n+    pub fn apply<T: TypeWalk>(&self, value: T, _interner: &Interner) -> T {\n+        value.subst_bound_vars(self)\n+    }\n+\n     // Temporary helper functions, to be removed\n     pub fn intern(interned: SmallVec<[GenericArg; 2]>) -> Substitution {\n         Substitution(interned)"}]}