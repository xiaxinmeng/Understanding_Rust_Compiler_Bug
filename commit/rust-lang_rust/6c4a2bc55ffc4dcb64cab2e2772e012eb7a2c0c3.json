{"sha": "6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNGEyYmM1NWZmYzRkY2I2NGNhYjJlMjc3MmUwMTJlYjdhMmMwYzM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-12-14T02:22:09Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-12-15T14:44:20Z"}, "message": "rollup merge of #19710: steveklabnik/gh15449\n\nFixes #15499.", "tree": {"sha": "e02199009fdcb5bc841f561c3cf29055c40ea81e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e02199009fdcb5bc841f561c3cf29055c40ea81e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "html_url": "https://github.com/rust-lang/rust/commit/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34dfa7addb7cb57ef4f6e70f00fa8216c343104e", "url": "https://api.github.com/repos/rust-lang/rust/commits/34dfa7addb7cb57ef4f6e70f00fa8216c343104e", "html_url": "https://github.com/rust-lang/rust/commit/34dfa7addb7cb57ef4f6e70f00fa8216c343104e"}, {"sha": "6780031540a708282be6262f820078f8e8198611", "url": "https://api.github.com/repos/rust-lang/rust/commits/6780031540a708282be6262f820078f8e8198611", "html_url": "https://github.com/rust-lang/rust/commit/6780031540a708282be6262f820078f8e8198611"}], "stats": {"total": 41, "additions": 22, "deletions": 19}, "files": [{"sha": "8c8a2c2f78ee989253c1e35cf51f428d76f23f33", "filename": "src/libcollections/tree/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibcollections%2Ftree%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibcollections%2Ftree%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftree%2Fmod.rs?ref=6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "patch": "@@ -15,7 +15,7 @@\n //!\n //! `TreeMap`s are ordered.\n //!\n-//! ## Example\n+//! # Examples\n //!\n //! ```{rust}\n //! use std::collections::TreeSet;"}, {"sha": "b48a610b84999392612b92601e41ce593ec31b27", "filename": "src/libcollections/tree/set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibcollections%2Ftree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibcollections%2Ftree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftree%2Fset.rs?ref=6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "patch": "@@ -27,7 +27,7 @@ use tree_map::{TreeMap, Entries, RevEntries, MoveEntries};\n /// requirement is that the type of the elements contained ascribes to the\n /// `Ord` trait.\n ///\n-/// ## Examples\n+/// # Examples\n ///\n /// ```{rust}\n /// use std::collections::TreeSet;"}, {"sha": "252a24e3aa913f44e2f1588ce440ed1ff0ee519a", "filename": "src/libcore/simd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibcore%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibcore%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsimd.rs?ref=6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "patch": "@@ -29,7 +29,7 @@\n //! }\n //! ```\n //!\n-//! ## Stability Note\n+//! # Stability Note\n //!\n //! These are all experimental. The interface may change entirely, without\n //! warning."}, {"sha": "e632934782c69e5a72f0da08c814a6b0d1e71578", "filename": "src/libcore/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "patch": "@@ -1757,9 +1757,9 @@ pub trait StrPrelude for Sized? {\n     /// }\n     /// ```\n     ///\n-    /// ## Output\n+    /// This outputs:\n     ///\n-    /// ```ignore\n+    /// ```text\n     /// 0: \u4e2d\n     /// 3: \u534e\n     /// 6: V"}, {"sha": "0217c5b271388821b7b6ccfc2c60997bfe620a09", "filename": "src/liblog/lib.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Fliblog%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Fliblog%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Flib.rs?ref=6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "patch": "@@ -10,7 +10,7 @@\n \n //! Utilities for program-wide and customizable logging\n //!\n-//! ## Example\n+//! # Examples\n //!\n //! ```\n //! #![feature(phase)]\n@@ -64,8 +64,7 @@\n //! INFO:main: the answer was: 12\n //! ```\n //!\n-//!\n-//! ## Logging Macros\n+//! # Logging Macros\n //!\n //! There are five macros that the logging subsystem uses:\n //!\n@@ -86,7 +85,7 @@\n //!\n //! * `log_enabled!(level)` - returns true if logging of the given level is enabled\n //!\n-//! ## Enabling logging\n+//! # Enabling logging\n //!\n //! Log levels are controlled on a per-module basis, and by default all logging is\n //! disabled except for `error!` (a log level of 1). Logging is controlled via the\n@@ -123,7 +122,7 @@\n //! * `hello,std::option` turns on hello, and std's option logging\n //! * `error,hello=warn` turn on global error logging and also warn for hello\n //!\n-//! ## Filtering results\n+//! # Filtering results\n //!\n //! A RUST_LOG directive may include a regex filter. The syntax is to append `/`\n //! followed by a regex. Each message is checked against the regex, and is only\n@@ -143,7 +142,7 @@\n //!  hello. In both cases the log message must include a single digit number\n //!  followed by 'scopes'\n //!\n-//! ## Performance and Side Effects\n+//! # Performance and Side Effects\n //!\n //! Each of these macros will expand to code similar to:\n //!"}, {"sha": "82081a01956bb1530cae707f10599fa351875bfa", "filename": "src/librustdoc/html/toc.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibrustdoc%2Fhtml%2Ftoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibrustdoc%2Fhtml%2Ftoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftoc.rs?ref=6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "patch": "@@ -24,9 +24,11 @@ pub struct Toc {\n     /// both of which end up in the same `Toc` as they have the same\n     /// parent (Main).\n     ///\n+    /// ```text\n     /// # Main\n     /// ### A\n     /// ## B\n+    /// ```\n     entries: Vec<TocEntry>\n }\n \n@@ -78,6 +80,7 @@ impl TocBuilder {\n     ///\n     /// Example:\n     ///\n+    /// ```text\n     /// ## A\n     /// # B\n     /// # C\n@@ -86,6 +89,7 @@ impl TocBuilder {\n     /// ### F\n     /// #### G\n     /// ### H\n+    /// ```\n     ///\n     /// If we are considering H (i.e. level 3), then A and B are in\n     /// self.top_level, D is in C.children, and C, E, F, G are in"}, {"sha": "a16b84d0c167e285e53851f7d55641fde6270b47", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "patch": "@@ -80,7 +80,7 @@ impl<R: Reader> BufferedReader<R> {\n \n     /// Gets a mutable reference to the underlying reader.\n     ///\n-    /// ## Warning\n+    /// # Warning\n     ///\n     /// It is inadvisable to directly read from the underlying reader.\n     pub fn get_mut(&mut self) -> &mut R { &mut self.inner }\n@@ -185,7 +185,7 @@ impl<W: Writer> BufferedWriter<W> {\n \n     /// Gets a mutable reference to the underlying write.\n     ///\n-    /// ## Warning\n+    /// # Warning\n     ///\n     /// It is inadvisable to directly read from the underlying writer.\n     pub fn get_mut(&mut self) -> &mut W { self.inner.as_mut().unwrap() }\n@@ -357,7 +357,7 @@ impl<S: Stream> BufferedStream<S> {\n \n     /// Gets a mutable reference to the underlying stream.\n     ///\n-    /// ## Warning\n+    /// # Warning\n     ///\n     /// It is inadvisable to read directly from or write directly to the\n     /// underlying stream."}, {"sha": "53fac3fd3c94de12c9581b3949e8c5a2210fb63c", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "patch": "@@ -127,7 +127,7 @@ impl StdinReader {\n     ///\n     /// This provides access to methods like `chars` and `lines`.\n     ///\n-    /// ## Example\n+    /// # Examples\n     ///\n     /// ```rust\n     /// use std::io;"}, {"sha": "a8d854a7555993ffbde6cd21f46cdeb6af1bac6b", "filename": "src/libstd/os.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "patch": "@@ -1237,7 +1237,7 @@ impl Copy for MapOption {}\n \n /// Possible errors when creating a map.\n pub enum MapError {\n-    /// ## The following are POSIX-specific\n+    /// # The following are POSIX-specific\n     ///\n     /// fd was not open for reading or, if using `MapWritable`, was not open for\n     /// writing.\n@@ -1259,7 +1259,7 @@ pub enum MapError {\n     ErrZeroLength,\n     /// Unrecognized error. The inner value is the unrecognized errno.\n     ErrUnknown(int),\n-    /// ## The following are Windows-specific\n+    /// # The following are Windows-specific\n     ///\n     /// Unsupported combination of protection flags\n     /// (`MapReadable`/`MapWritable`/`MapExecutable`)."}, {"sha": "562afd33e2fc20cbb1753810bc038542b7542e8f", "filename": "src/libstd/task.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibstd%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibstd%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftask.rs?ref=6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "patch": "@@ -32,7 +32,7 @@\n //! the main task panics the application will exit with a non-zero\n //! exit code.\n //!\n-//! ## Example\n+//! # Examples\n //!\n //! ```rust\n //! spawn(move|| {"}, {"sha": "e8824b1ad2ca1b264452d6e98adde4338084304d", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=6c4a2bc55ffc4dcb64cab2e2772e012eb7a2c0c3", "patch": "@@ -16,7 +16,7 @@\n //! [terminfo][ti] database, and `WinConsole`, which uses the [Win32 Console\n //! API][win].\n //!\n-//! ## Example\n+//! # Examples\n //!\n //! ```no_run\n //! extern crate term;"}]}