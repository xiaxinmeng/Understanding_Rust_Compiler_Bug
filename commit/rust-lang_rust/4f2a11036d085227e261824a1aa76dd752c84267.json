{"sha": "4f2a11036d085227e261824a1aa76dd752c84267", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmMmExMTAzNmQwODUyMjdlMjYxODI0YTFhYTc2ZGQ3NTJjODQyNjc=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-10-08T03:33:47Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-10-18T02:06:56Z"}, "message": "Remove unneeded callback and just use the new_local value", "tree": {"sha": "2ae2bda770dec9a6fdb74bc5068e00559cba6c52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ae2bda770dec9a6fdb74bc5068e00559cba6c52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f2a11036d085227e261824a1aa76dd752c84267", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAl2pHkAACgkQiMlBzaHU\nZDKZvxAAlI58l+0t+CtWHuT01DhfGSt7hBi9tieakqNvrPHm3cSyKLDikRjPhiQG\nDMXXPgOlCNqOhgtbecFNscCv/T5GzkKBZNfOewciIJVFN8uzkv9XFndH1tHOMfJ8\nfi5nYxh/dLjYtfrVLnaVIolLTGjYdS+cdJiDXGhPFy8fFdKAySz0JFP3ft5NYvD8\n2znDo0i1p8tStiXCeN5wb6rVF7l2QVRyiC4+GnLv2Ys/LLdMsEh/r+aWxIBTKtn1\nQ/rqAqufnVWgDuA2RqkyBMOnM8/+AsKoQ+7OcNwcQz81XhcqAsGWNWLo7Pfy+jxp\nSM47HbI2wO16sETWQSvZLPYbnN4gYT7t12t/G5/aH4wolFxcX/SS79mJNvlDs3Oe\n1K4dBXq5id0+PJU/AdezOTlIkxS/EQIyeTYkBzDh33oWJ6yPCi9anNeqlvqiliO9\nGxFZYCxtW/o4edBEr2nIYIaKcmjqU8AsSXgWt98hv/6nse189Sykq0BGd94/sacr\nzMveO/fkAfiJ7zCzGcKdKq7vzILwbzv56lY0BlR4b/k2PE+ylE0pPngBYQVDgc8x\nRKfBdu/AZLsrQ7GeemLlq6z40fQoowUxBZJHd9gYzHgWBlROCOc7UI1xswenqfSG\nBK1oknocHQug8ObLG+QMNo1Lc0g6JoqbIY+ZmjuJrusZRCOieLk=\n=3Jxt\n-----END PGP SIGNATURE-----", "payload": "tree 2ae2bda770dec9a6fdb74bc5068e00559cba6c52\nparent 2b2e35bfc34618cff7b62a7726ee3a97101d3fa2\nauthor Santiago Pastorino <spastorino@gmail.com> 1570505627 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1571364416 -0400\n\nRemove unneeded callback and just use the new_local value\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f2a11036d085227e261824a1aa76dd752c84267", "html_url": "https://github.com/rust-lang/rust/commit/4f2a11036d085227e261824a1aa76dd752c84267", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f2a11036d085227e261824a1aa76dd752c84267/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b2e35bfc34618cff7b62a7726ee3a97101d3fa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b2e35bfc34618cff7b62a7726ee3a97101d3fa2", "html_url": "https://github.com/rust-lang/rust/commit/2b2e35bfc34618cff7b62a7726ee3a97101d3fa2"}], "stats": {"total": 32, "additions": 13, "deletions": 19}, "files": [{"sha": "5b5f7d83f074612faaff44c70333782ece669919", "filename": "src/librustc_mir/util/def_use.rs", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/4f2a11036d085227e261824a1aa76dd752c84267/src%2Flibrustc_mir%2Futil%2Fdef_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f2a11036d085227e261824a1aa76dd752c84267/src%2Flibrustc_mir%2Futil%2Fdef_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fdef_use.rs?ref=4f2a11036d085227e261824a1aa76dd752c84267", "patch": "@@ -47,13 +47,10 @@ impl DefUseAnalysis {\n         &self.info[local]\n     }\n \n-    fn mutate_defs_and_uses<F>(&self, local: Local, body: &mut Body<'_>, callback: F)\n-                               where F: for<'a> Fn(&'a Local,\n-                                                      PlaceContext,\n-                                                      Location) -> Local {\n+    fn mutate_defs_and_uses(&self, local: Local, body: &mut Body<'_>, new_local: Local) {\n         for place_use in &self.info[local].defs_and_uses {\n             MutateUseVisitor::new(local,\n-                                  &callback,\n+                                  new_local,\n                                   body).visit_location(body, place_use.location)\n         }\n     }\n@@ -63,7 +60,7 @@ impl DefUseAnalysis {\n                                           local: Local,\n                                           body: &mut Body<'_>,\n                                           new_local: Local) {\n-        self.mutate_defs_and_uses(local, body, |_, _, _| new_local)\n+        self.mutate_defs_and_uses(local, body, new_local)\n     }\n }\n \n@@ -117,30 +114,27 @@ impl Info {\n     }\n }\n \n-struct MutateUseVisitor<F> {\n+struct MutateUseVisitor {\n     query: Local,\n-    callback: F,\n+    new_local: Local,\n }\n \n-impl<F> MutateUseVisitor<F> {\n-    fn new(query: Local, callback: F, _: &Body<'_>)\n-           -> MutateUseVisitor<F>\n-           where F: for<'a> Fn(&'a Local, PlaceContext, Location) -> Local {\n+impl MutateUseVisitor {\n+    fn new(query: Local, new_local: Local, _: &Body<'_>) -> MutateUseVisitor {\n         MutateUseVisitor {\n             query,\n-            callback,\n+            new_local,\n         }\n     }\n }\n \n-impl<F> MutVisitor<'_> for MutateUseVisitor<F>\n-              where F: for<'a> Fn(&'a Local, PlaceContext, Location) -> Local {\n+impl MutVisitor<'_> for MutateUseVisitor {\n     fn visit_local(&mut self,\n                     local: &mut Local,\n-                    context: PlaceContext,\n-                    location: Location) {\n+                    _context: PlaceContext,\n+                    _location: Location) {\n         if *local == self.query {\n-            *local = (self.callback)(local, context, location)\n+            *local = self.new_local;\n         }\n     }\n \n@@ -153,7 +147,7 @@ impl<F> MutVisitor<'_> for MutateUseVisitor<F>\n         let new_projection: Vec<_> = place.projection.iter().map(|elem|\n             match elem {\n                 PlaceElem::Index(local) if *local == self.query => {\n-                    PlaceElem::Index((self.callback)(&local, context, location))\n+                    PlaceElem::Index(self.new_local)\n                 }\n                 _ => elem.clone(),\n             }"}]}