{"sha": "301b8894ead191cb33e8aa72ce74f51332fee274", "node_id": "C_kwDOAAsO6NoAKDMwMWI4ODk0ZWFkMTkxY2IzM2U4YWE3MmNlNzRmNTEzMzJmZWUyNzQ", "commit": {"author": {"name": "OleStrohm", "email": "strohm99@gmail.com", "date": "2022-08-07T16:42:59Z"}, "committer": {"name": "OleStrohm", "email": "strohm99@gmail.com", "date": "2022-09-12T19:20:45Z"}, "message": "Added more consteval tests and fixed consteval result", "tree": {"sha": "56d5da5212b25c8e7afd1fe16e05a3d56a6b948e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56d5da5212b25c8e7afd1fe16e05a3d56a6b948e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/301b8894ead191cb33e8aa72ce74f51332fee274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/301b8894ead191cb33e8aa72ce74f51332fee274", "html_url": "https://github.com/rust-lang/rust/commit/301b8894ead191cb33e8aa72ce74f51332fee274", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/301b8894ead191cb33e8aa72ce74f51332fee274/comments", "author": {"login": "OleStrohm", "id": 6892524, "node_id": "MDQ6VXNlcjY4OTI1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6892524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OleStrohm", "html_url": "https://github.com/OleStrohm", "followers_url": "https://api.github.com/users/OleStrohm/followers", "following_url": "https://api.github.com/users/OleStrohm/following{/other_user}", "gists_url": "https://api.github.com/users/OleStrohm/gists{/gist_id}", "starred_url": "https://api.github.com/users/OleStrohm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OleStrohm/subscriptions", "organizations_url": "https://api.github.com/users/OleStrohm/orgs", "repos_url": "https://api.github.com/users/OleStrohm/repos", "events_url": "https://api.github.com/users/OleStrohm/events{/privacy}", "received_events_url": "https://api.github.com/users/OleStrohm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "OleStrohm", "id": 6892524, "node_id": "MDQ6VXNlcjY4OTI1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6892524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OleStrohm", "html_url": "https://github.com/OleStrohm", "followers_url": "https://api.github.com/users/OleStrohm/followers", "following_url": "https://api.github.com/users/OleStrohm/following{/other_user}", "gists_url": "https://api.github.com/users/OleStrohm/gists{/gist_id}", "starred_url": "https://api.github.com/users/OleStrohm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OleStrohm/subscriptions", "organizations_url": "https://api.github.com/users/OleStrohm/orgs", "repos_url": "https://api.github.com/users/OleStrohm/repos", "events_url": "https://api.github.com/users/OleStrohm/events{/privacy}", "received_events_url": "https://api.github.com/users/OleStrohm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051", "html_url": "https://github.com/rust-lang/rust/commit/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051"}], "stats": {"total": 63, "additions": 18, "deletions": 45}, "files": [{"sha": "11d93d19c3cfcf537bd5e21ab2fb95be50d8ec94", "filename": "crates/hir-ty/src/consteval.rs", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/301b8894ead191cb33e8aa72ce74f51332fee274/crates%2Fhir-ty%2Fsrc%2Fconsteval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/301b8894ead191cb33e8aa72ce74f51332fee274/crates%2Fhir-ty%2Fsrc%2Fconsteval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fconsteval.rs?ref=301b8894ead191cb33e8aa72ce74f51332fee274", "patch": "@@ -121,15 +121,6 @@ impl Display for ComputedExpr {\n     }\n }\n \n-impl ComputedExpr {\n-    pub fn enum_value(&self) -> Option<ComputedExpr> {\n-        match self {\n-            ComputedExpr::Enum(_, _, lit) => Some(ComputedExpr::Literal(lit.clone())),\n-            _ => None,\n-        }\n-    }\n-}\n-\n fn scalar_max(scalar: &Scalar) -> i128 {\n     match scalar {\n         Scalar::Bool => 1,\n@@ -200,11 +191,7 @@ pub fn eval_const(\n                     }\n                     _ => 0,\n                 };\n-                Ok(ComputedExpr::Enum(\n-                    get_name(variant, ctx),\n-                    variant,\n-                    Literal::Int(value, Some(BuiltinInt::I128)),\n-                ))\n+                Ok(ComputedExpr::Literal(Literal::Int(value, Some(BuiltinInt::I128))))\n             }\n             _ => Err(ConstEvalError::IncompleteExpr),\n         },\n@@ -403,12 +390,9 @@ pub fn eval_const(\n                 _ => Err(ConstEvalError::NotSupported(\"path that are not const or local\")),\n             }\n         }\n-        Expr::Cast { expr, .. } => match eval_const(*expr, ctx, None)? {\n+        &Expr::Cast { expr, .. } => match eval_const(expr, ctx, None)? {\n             ComputedExpr::Enum(_, _, lit) => Ok(ComputedExpr::Literal(lit)),\n-            expr => Err(ConstEvalError::NotSupported(Box::leak(Box::new(format!(\n-                \"Can't cast type: {:?}\",\n-                expr\n-            ))))),\n+            _ => Err(ConstEvalError::NotSupported(\"Can't cast these types\")),\n         },\n         _ => Err(ConstEvalError::NotSupported(\"This kind of expression\")),\n     }"}, {"sha": "b76506f6ebc2c867f3b19dcdfcaf31886f60527e", "filename": "crates/hir-ty/src/consteval/tests.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/301b8894ead191cb33e8aa72ce74f51332fee274/crates%2Fhir-ty%2Fsrc%2Fconsteval%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/301b8894ead191cb33e8aa72ce74f51332fee274/crates%2Fhir-ty%2Fsrc%2Fconsteval%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fconsteval%2Ftests.rs?ref=301b8894ead191cb33e8aa72ce74f51332fee274", "patch": "@@ -100,6 +100,20 @@ fn enums() {\n     \"#,\n         6,\n     );\n+    check_number(\n+        r#\"\n+    enum E { F1 = 1, F2, }\n+    const GOAL: i32 = E::F2 as u8;\n+    \"#,\n+        2,\n+    );\n+    check_number(\n+        r#\"\n+    enum E { F1, }\n+    const GOAL: i32 = E::F1 as u8;\n+    \"#,\n+        0,\n+    );\n     let r = eval_goal(\n         r#\"\n         enum E { A = 1, }"}, {"sha": "f7cdc9e5b2fdaf48b9d05c1abf1cb59a53f54097", "filename": "crates/ide/src/hover/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/301b8894ead191cb33e8aa72ce74f51332fee274/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/301b8894ead191cb33e8aa72ce74f51332fee274/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Frender.rs?ref=301b8894ead191cb33e8aa72ce74f51332fee274", "patch": "@@ -351,7 +351,7 @@ pub(super) fn definition(\n         Definition::Variant(it) => label_value_and_docs(db, it, |&it| {\n             if it.parent.is_data_carrying(db) {\n                 match it.eval(db) {\n-                    Ok(x) => Some(format!(\"{}\", x.enum_value().unwrap_or(x))),\n+                    Ok(x) => Some(format!(\"{}\", x)),\n                     Err(_) => it.value(db).map(|x| format!(\"{:?}\", x)),\n                 }\n             } else {"}, {"sha": "eb997e6fef83022f726dec8a2ff0e5cbcd6fdc86", "filename": "crates/ide/src/hover/tests.rs", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/301b8894ead191cb33e8aa72ce74f51332fee274/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/301b8894ead191cb33e8aa72ce74f51332fee274/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs?ref=301b8894ead191cb33e8aa72ce74f51332fee274", "patch": "@@ -3530,31 +3530,6 @@ impl<const LEN: usize> Foo<LEN$0> {}\n \n #[test]\n fn hover_const_eval_variant() {\n-    check(\n-        r#\"\n-#[repr(u8)]\n-enum E {\n-    A = 4,\n-    /// This is a doc\n-    B$0 = E::A as u8 + 1,\n-}\n-\"#,\n-        expect![[r#\"\n-            *B*\n-\n-            ```rust\n-            test::E\n-            ```\n-\n-            ```rust\n-            B = 5\n-            ```\n-\n-            ---\n-\n-            This is a doc\n-        \"#]],\n-    );\n     // show hex for <10\n     check(\n         r#\""}]}