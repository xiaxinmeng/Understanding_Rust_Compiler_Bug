{"sha": "a3085756edf66459109c4b07948b08fe3e78bc3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMDg1NzU2ZWRmNjY0NTkxMDljNGIwNzk0OGIwOGZlM2U3OGJjM2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-19T20:10:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-19T20:10:34Z"}, "message": "Auto merge of #50782 - matthewjasper:wheres-main, r=matthewjasper\n\nPrevent main from having a where clause.\n\nCloses #50714\n\nShould this have a crater run?\n\ncc #48557, #48214\n\nr? @nikomatsakis", "tree": {"sha": "770e960c0929a8b4f524497c96b0d62d9d79e621", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/770e960c0929a8b4f524497c96b0d62d9d79e621"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3085756edf66459109c4b07948b08fe3e78bc3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3085756edf66459109c4b07948b08fe3e78bc3b", "html_url": "https://github.com/rust-lang/rust/commit/a3085756edf66459109c4b07948b08fe3e78bc3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3085756edf66459109c4b07948b08fe3e78bc3b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c3960c2d6b8f538c96d824d9622112caf2d788c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c3960c2d6b8f538c96d824d9622112caf2d788c", "html_url": "https://github.com/rust-lang/rust/commit/5c3960c2d6b8f538c96d824d9622112caf2d788c"}, {"sha": "218a81b06c2669f9d4a579db7c8ebab57d91c1e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/218a81b06c2669f9d4a579db7c8ebab57d91c1e4", "html_url": "https://github.com/rust-lang/rust/commit/218a81b06c2669f9d4a579db7c8ebab57d91c1e4"}], "stats": {"total": 161, "additions": 153, "deletions": 8}, "files": [{"sha": "7a572bbbffd91aa057c80f22395814529317a149", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=a3085756edf66459109c4b07948b08fe3e78bc3b", "patch": "@@ -4519,6 +4519,32 @@ impl Foo for () {\n ```\n \"##,\n \n+E0646: r##\"\n+It is not possible to define `main` with a where clause.\n+Erroneous code example:\n+\n+```compile_fail,E0646\n+fn main() where i32: Copy { // error: main function is not allowed to have\n+                            // a where clause\n+}\n+```\n+\"##,\n+\n+E0647: r##\"\n+It is not possible to define `start` with a where clause.\n+Erroneous code example:\n+\n+```compile_fail,E0647\n+#![feature(start)]\n+\n+#[start]\n+fn start(_: isize, _: *const *const u8) -> isize where (): Copy {\n+    //^ error: start function is not allowed to have a where clause\n+    0\n+}\n+```\n+\"##,\n+\n E0689: r##\"\n This error indicates that the numeric value for the method being passed exists\n but the type of the numeric value or binding could not be identified."}, {"sha": "ea48e839a7ff5dde708d5a0d876849fbef9f186d", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=a3085756edf66459109c4b07948b08fe3e78bc3b", "patch": "@@ -194,6 +194,12 @@ fn check_main_fn_ty<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                                     .emit();\n                                 return;\n                             }\n+                            if !generics.where_clause.predicates.is_empty() {\n+                                struct_span_err!(tcx.sess, main_span, E0646,\n+                                         \"main function is not allowed to have a where clause\")\n+                                         .emit();\n+                                return;\n+                            }\n                         }\n                         _ => ()\n                     }\n@@ -245,14 +251,21 @@ fn check_start_fn_ty<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n             match tcx.hir.find(start_id) {\n                 Some(hir_map::NodeItem(it)) => {\n                     match it.node {\n-                        hir::ItemFn(..,ref ps,_)\n-                        if !ps.params.is_empty() => {\n-                            struct_span_err!(tcx.sess, ps.span, E0132,\n-                                \"start function is not allowed to have type parameters\")\n-                                .span_label(ps.span,\n-                                            \"start function cannot have type parameters\")\n-                                .emit();\n-                            return;\n+                        hir::ItemFn(..,ref ps,_) => {\n+                            if !ps.params.is_empty() {\n+                                struct_span_err!(tcx.sess, ps.span, E0132,\n+                                    \"start function is not allowed to have type parameters\")\n+                                    .span_label(ps.span,\n+                                                \"start function cannot have type parameters\")\n+                                    .emit();\n+                                return;\n+                            }\n+                            if !ps.where_clause.predicates.is_empty() {\n+                                struct_span_err!(tcx.sess, start_span, E0647,\n+                                            \"start function is not allowed to have a where clause\")\n+                                            .emit();\n+                                return;\n+                            }\n                         }\n                         _ => ()\n                     }"}, {"sha": "5fc711d94086bf996ce18ff490f54ea77b3852bd", "filename": "src/test/ui/error-codes/E0646.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Ferror-codes%2FE0646.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Ferror-codes%2FE0646.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0646.rs?ref=a3085756edf66459109c4b07948b08fe3e78bc3b", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() where (): Copy {} //~ ERROR [E0646]"}, {"sha": "96da22a643c20f3fa7909c7d04ac6a7d0da01809", "filename": "src/test/ui/error-codes/E0646.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Ferror-codes%2FE0646.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Ferror-codes%2FE0646.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0646.stderr?ref=a3085756edf66459109c4b07948b08fe3e78bc3b", "patch": "@@ -0,0 +1,9 @@\n+error[E0646]: main function is not allowed to have a where clause\n+  --> $DIR/E0646.rs:11:1\n+   |\n+LL | fn main() where (): Copy {} //~ ERROR [E0646]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0646`."}, {"sha": "0a0ffefdf952a13091aa4e9cc8240375c0bc7656", "filename": "src/test/ui/error-codes/E0647.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Ferror-codes%2FE0647.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Ferror-codes%2FE0647.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0647.rs?ref=a3085756edf66459109c4b07948b08fe3e78bc3b", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![no_std]\n+#![feature(start)]\n+\n+extern crate std;\n+\n+#[start]\n+fn start(_: isize, _: *const *const u8) -> isize where (): Copy { //~ ERROR [E0647]\n+    0\n+}"}, {"sha": "f02407dcea6e1b8a6b1a392654d77b82728ab193", "filename": "src/test/ui/error-codes/E0647.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Ferror-codes%2FE0647.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Ferror-codes%2FE0647.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0647.stderr?ref=a3085756edf66459109c4b07948b08fe3e78bc3b", "patch": "@@ -0,0 +1,11 @@\n+error[E0647]: start function is not allowed to have a where clause\n+  --> $DIR/E0647.rs:17:1\n+   |\n+LL | / fn start(_: isize, _: *const *const u8) -> isize where (): Copy { //~ ERROR [E0647]\n+LL | |     0\n+LL | | }\n+   | |_^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0647`."}, {"sha": "f0e496a88fbd1087ed1dc59987b326b18dcb9807", "filename": "src/test/ui/issue-50714-1.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Fissue-50714-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Fissue-50714-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-50714-1.rs?ref=a3085756edf66459109c4b07948b08fe3e78bc3b", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for issue 50714, make sure that this isn't a linker error.\n+\n+#![no_std]\n+#![feature(start)]\n+\n+extern crate std;\n+\n+#[start]\n+fn start(_: isize, _: *const *const u8) -> isize where fn(&()): Eq { //~ ERROR [E0647]\n+    0\n+}\n+"}, {"sha": "b93183d2f2411f7a68edcfa7b8696c093460b793", "filename": "src/test/ui/issue-50714-1.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Fissue-50714-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Fissue-50714-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-50714-1.stderr?ref=a3085756edf66459109c4b07948b08fe3e78bc3b", "patch": "@@ -0,0 +1,11 @@\n+error[E0647]: start function is not allowed to have a where clause\n+  --> $DIR/issue-50714-1.rs:19:1\n+   |\n+LL | / fn start(_: isize, _: *const *const u8) -> isize where fn(&()): Eq { //~ ERROR [E0647]\n+LL | |     0\n+LL | | }\n+   | |_^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0647`."}, {"sha": "08d975326dfaa529b2acb3960c6ef74eba0aefa6", "filename": "src/test/ui/issue-50714.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Fissue-50714.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Fissue-50714.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-50714.rs?ref=a3085756edf66459109c4b07948b08fe3e78bc3b", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for issue 50714, make sure that this isn't a linker error.\n+\n+fn main() where fn(&()): Eq {} //~ ERROR [E0646]\n+"}, {"sha": "8cdcfe4abe2f85dd2761007d3dcfbae38a9cef47", "filename": "src/test/ui/issue-50714.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Fissue-50714.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a3085756edf66459109c4b07948b08fe3e78bc3b/src%2Ftest%2Fui%2Fissue-50714.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-50714.stderr?ref=a3085756edf66459109c4b07948b08fe3e78bc3b", "patch": "@@ -0,0 +1,9 @@\n+error[E0646]: main function is not allowed to have a where clause\n+  --> $DIR/issue-50714.rs:13:1\n+   |\n+LL | fn main() where fn(&()): Eq {} //~ ERROR [E0646]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0646`."}]}