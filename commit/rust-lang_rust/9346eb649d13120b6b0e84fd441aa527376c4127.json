{"sha": "9346eb649d13120b6b0e84fd441aa527376c4127", "node_id": "C_kwDOAAsO6NoAKDkzNDZlYjY0OWQxMzEyMGI2YjBlODRmZDQ0MWFhNTI3Mzc2YzQxMjc", "commit": {"author": {"name": "Ali MJ Al-Nasrawy", "email": "alimjalnasrawy@gmail.com", "date": "2023-01-22T13:48:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-22T13:48:58Z"}, "message": "assume MIR types are fully normalized", "tree": {"sha": "02d5e31cc765bcafcbdc02d546921a1e98547c02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02d5e31cc765bcafcbdc02d546921a1e98547c02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9346eb649d13120b6b0e84fd441aa527376c4127", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjzT7KCRBK7hj4Ov3rIwAA/vEIAI8EvCUYutOoULmJaMh7MtfT\nbH+xSRXjcSv0XwmX2AACo3iTIFo60d3sza0viIwVQYby4WqHdJHzyH/xJ2JqyYU3\nqRK4orl7TmQkeKVNZrkPKf4PSSPmKWWvT367xmVDyh1JVWdPPWAU26+H/6w/Cisk\n49sKj9KTpkCoSKe/S3pqk3iUwBxbs51ShRk/NG+VJzPWgzOktvXsVpSynn3nXotu\nhIkfMv4agYt4V9D7U61lZCGg2tRAvmcA62iRSBNp6kXrhqRH+8MzX4qUeWVNIaHH\n4Vle9NwmTZkflA+Fn8ep6sqaoTWkHVy5gsDQttSDprRNH+eyRAfK2Q+H9X3wMFA=\n=aTrg\n-----END PGP SIGNATURE-----\n", "payload": "tree 02d5e31cc765bcafcbdc02d546921a1e98547c02\nparent 8e6809072304b147f9e98d55c87f42c0f3959679\nauthor Ali MJ Al-Nasrawy <alimjalnasrawy@gmail.com> 1674395338 +0300\ncommitter GitHub <noreply@github.com> 1674395338 +0300\n\nassume MIR types are fully normalized"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9346eb649d13120b6b0e84fd441aa527376c4127", "html_url": "https://github.com/rust-lang/rust/commit/9346eb649d13120b6b0e84fd441aa527376c4127", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9346eb649d13120b6b0e84fd441aa527376c4127/comments", "author": {"login": "aliemjay", "id": 28497461, "node_id": "MDQ6VXNlcjI4NDk3NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/28497461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliemjay", "html_url": "https://github.com/aliemjay", "followers_url": "https://api.github.com/users/aliemjay/followers", "following_url": "https://api.github.com/users/aliemjay/following{/other_user}", "gists_url": "https://api.github.com/users/aliemjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliemjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliemjay/subscriptions", "organizations_url": "https://api.github.com/users/aliemjay/orgs", "repos_url": "https://api.github.com/users/aliemjay/repos", "events_url": "https://api.github.com/users/aliemjay/events{/privacy}", "received_events_url": "https://api.github.com/users/aliemjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e6809072304b147f9e98d55c87f42c0f3959679", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e6809072304b147f9e98d55c87f42c0f3959679", "html_url": "https://github.com/rust-lang/rust/commit/8e6809072304b147f9e98d55c87f42c0f3959679"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "2b81a35052d7b6055eb277fe9c2706abfddbaa9a", "filename": "compiler/rustc_borrowck/src/type_check/canonical.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9346eb649d13120b6b0e84fd441aa527376c4127/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fcanonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9346eb649d13120b6b0e84fd441aa527376c4127/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fcanonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fcanonical.rs?ref=9346eb649d13120b6b0e84fd441aa527376c4127", "patch": "@@ -181,9 +181,6 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n         user_ty: ty::UserType<'tcx>,\n         span: Span,\n     ) {\n-        // FIXME: Ideally MIR types are normalized, but this is not always true.\n-        let mir_ty = self.normalize(mir_ty, Locations::All(span));\n-\n         self.fully_perform_op(\n             Locations::All(span),\n             ConstraintCategory::Boring,\n@@ -217,7 +214,9 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n             return;\n         }\n \n+        // FIXME: Ideally MIR types are normalized, but this is not always true.\n         let mir_ty = self.normalize(mir_ty, Locations::All(span));\n+\n         let cause = ObligationCause::dummy_with_span(span);\n         let param_env = self.param_env;\n         let op = |infcx: &'_ _| {"}]}