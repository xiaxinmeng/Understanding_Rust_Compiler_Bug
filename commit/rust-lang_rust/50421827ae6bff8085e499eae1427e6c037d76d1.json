{"sha": "50421827ae6bff8085e499eae1427e6c037d76d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNDIxODI3YWU2YmZmODA4NWU0OTllYWUxNDI3ZTZjMDM3ZDc2ZDE=", "commit": {"author": {"name": "Remi Rampin", "email": "remirampin@gmail.com", "date": "2015-07-01T21:54:54Z"}, "committer": {"name": "Remi Rampin", "email": "remirampin@gmail.com", "date": "2015-07-01T21:54:54Z"}, "message": "Add test to dst-coerce-rc.rs", "tree": {"sha": "87e7253c096c52f20ac0305f83e23e95968262a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87e7253c096c52f20ac0305f83e23e95968262a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50421827ae6bff8085e499eae1427e6c037d76d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50421827ae6bff8085e499eae1427e6c037d76d1", "html_url": "https://github.com/rust-lang/rust/commit/50421827ae6bff8085e499eae1427e6c037d76d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50421827ae6bff8085e499eae1427e6c037d76d1/comments", "author": {"login": "remram44", "id": 426784, "node_id": "MDQ6VXNlcjQyNjc4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remram44", "html_url": "https://github.com/remram44", "followers_url": "https://api.github.com/users/remram44/followers", "following_url": "https://api.github.com/users/remram44/following{/other_user}", "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}", "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remram44/subscriptions", "organizations_url": "https://api.github.com/users/remram44/orgs", "repos_url": "https://api.github.com/users/remram44/repos", "events_url": "https://api.github.com/users/remram44/events{/privacy}", "received_events_url": "https://api.github.com/users/remram44/received_events", "type": "User", "site_admin": false}, "committer": {"login": "remram44", "id": 426784, "node_id": "MDQ6VXNlcjQyNjc4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remram44", "html_url": "https://github.com/remram44", "followers_url": "https://api.github.com/users/remram44/followers", "following_url": "https://api.github.com/users/remram44/following{/other_user}", "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}", "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remram44/subscriptions", "organizations_url": "https://api.github.com/users/remram44/orgs", "repos_url": "https://api.github.com/users/remram44/repos", "events_url": "https://api.github.com/users/remram44/events{/privacy}", "received_events_url": "https://api.github.com/users/remram44/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bf4651e2cbe04511c7e92279073e46e33d3b0fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bf4651e2cbe04511c7e92279073e46e33d3b0fc", "html_url": "https://github.com/rust-lang/rust/commit/8bf4651e2cbe04511c7e92279073e46e33d3b0fc"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "f147a2dca63432dfe321f8cec58580211f3d392b", "filename": "src/test/run-pass/dst-coerce-rc.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/50421827ae6bff8085e499eae1427e6c037d76d1/src%2Ftest%2Frun-pass%2Fdst-coerce-rc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50421827ae6bff8085e499eae1427e6c037d76d1/src%2Ftest%2Frun-pass%2Fdst-coerce-rc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdst-coerce-rc.rs?ref=50421827ae6bff8085e499eae1427e6c037d76d1", "patch": "@@ -10,10 +10,10 @@\n \n // Test a very simple custom DST coercion.\n \n-#![feature(core)]\n+#![feature(core, rc_weak)]\n \n use std::cell::RefCell;\n-use std::rc::Rc;\n+use std::rc::{Rc, Weak};\n \n trait Baz {\n     fn get(&self) -> i32;\n@@ -36,9 +36,13 @@ fn main() {\n     let b: Rc<Baz> = a.clone();\n     assert_eq!(b.get(), 42);\n \n+    let c: Weak<i32> = a.downgrade();\n+    let d: Weak<Baz> = c.clone();\n+\n     let _c = b.clone();\n \n     let a: Rc<RefCell<i32>> = Rc::new(RefCell::new(42));\n     let b: Rc<RefCell<Baz>> = a.clone();\n     assert_eq!(b.borrow().get(), 42);\n+    let c: Weak<RefCell<Baz>> = a.downgrade();\n }"}]}