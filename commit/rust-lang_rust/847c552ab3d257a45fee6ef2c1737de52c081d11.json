{"sha": "847c552ab3d257a45fee6ef2c1737de52c081d11", "node_id": "C_kwDOAAsO6NoAKDg0N2M1NTJhYjNkMjU3YTQ1ZmVlNmVmMmMxNzM3ZGU1MmMwODFkMTE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-08T12:34:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-08T12:34:12Z"}, "message": "Merge #11936\n\n11936: Ignore `Drop` and `Destruct` bounds for now r=flodiebold a=flodiebold\n\n- `T: ~const Drop` has a special meaning in Rust 1.61 that we don't implement. (So ideally, we'd only ignore `~const Drop`, but this should be fine for now.)\r\n- `Destruct` impls are built-in in 1.62 (current nightlies), so until the builtin impls are supported by Chalk, we ignore them as well. Since `Destruct` is implemented for everything in non-const contexts IIUC, this should also work fine.\r\n\r\nFixes #11932.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>", "tree": {"sha": "788259da4b54c4004b38d9942f759e7e3f0ff210", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/788259da4b54c4004b38d9942f759e7e3f0ff210"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/847c552ab3d257a45fee6ef2c1737de52c081d11", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiUCvECRBK7hj4Ov3rIwAA9I8IAFn2cqJRc1hgwbiUcWST2lcK\n1dor3XM4YYr0a+ZzycH2lk0AWiHEzUNYv/3mL2OpcLkL1GrWDO7aM614cpE3EENF\ntKfpitOCCXHh1qt8iV+8VpOG0bWGftX2fuk7qE728bPYr8Vq2E8W9AWeCRXJp6Dk\nb6C+8KyMMzZgLUGbrQcDXMx+2heiWWdDSqLt+agyPiI7wdGi5ovfiMp0AbBuqYUA\nJRH5b2f36kaQGbYlRwSupJXVtdImxIA6YYjuJIgq+PRTMlsQjVWYO2Md88SX5TNl\nuBAoJbp4sNw0DLcjbP0pxQzAPZ8IXOYxUvGvGeLZ4hE5DK6TFrb0H+CdKT9MEOo=\n=jgFc\n-----END PGP SIGNATURE-----\n", "payload": "tree 788259da4b54c4004b38d9942f759e7e3f0ff210\nparent bc56920757c248229c341fb90d44fe3d4767c491\nparent 340f0fc3334f11b30f4c55757a0acb0b76ac5e37\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1649421252 +0000\ncommitter GitHub <noreply@github.com> 1649421252 +0000\n\nMerge #11936\n\n11936: Ignore `Drop` and `Destruct` bounds for now r=flodiebold a=flodiebold\n\n- `T: ~const Drop` has a special meaning in Rust 1.61 that we don't implement. (So ideally, we'd only ignore `~const Drop`, but this should be fine for now.)\r\n- `Destruct` impls are built-in in 1.62 (current nightlies), so until the builtin impls are supported by Chalk, we ignore them as well. Since `Destruct` is implemented for everything in non-const contexts IIUC, this should also work fine.\r\n\r\nFixes #11932.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/847c552ab3d257a45fee6ef2c1737de52c081d11", "html_url": "https://github.com/rust-lang/rust/commit/847c552ab3d257a45fee6ef2c1737de52c081d11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/847c552ab3d257a45fee6ef2c1737de52c081d11/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc56920757c248229c341fb90d44fe3d4767c491", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc56920757c248229c341fb90d44fe3d4767c491", "html_url": "https://github.com/rust-lang/rust/commit/bc56920757c248229c341fb90d44fe3d4767c491"}, {"sha": "340f0fc3334f11b30f4c55757a0acb0b76ac5e37", "url": "https://api.github.com/repos/rust-lang/rust/commits/340f0fc3334f11b30f4c55757a0acb0b76ac5e37", "html_url": "https://github.com/rust-lang/rust/commit/340f0fc3334f11b30f4c55757a0acb0b76ac5e37"}], "stats": {"total": 98, "additions": 97, "deletions": 1}, "files": [{"sha": "24eff4cc9a9fcbfc67a4d3ba961750ebf3070c29", "filename": "crates/hir_ty/src/lower.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/847c552ab3d257a45fee6ef2c1737de52c081d11/crates%2Fhir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/847c552ab3d257a45fee6ef2c1737de52c081d11/crates%2Fhir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flower.rs?ref=847c552ab3d257a45fee6ef2c1737de52c081d11", "patch": "@@ -14,6 +14,7 @@ use chalk_ir::interner::HasInterner;\n use chalk_ir::{cast::Cast, fold::Shift, Mutability, Safety};\n use hir_def::generics::TypeOrConstParamData;\n use hir_def::intern::Interned;\n+use hir_def::lang_item::lang_attr;\n use hir_def::path::{ModPath, PathKind};\n use hir_def::type_ref::ConstScalarOrPath;\n use hir_def::{\n@@ -863,7 +864,23 @@ impl<'a> TyLoweringContext<'a> {\n         let trait_ref = match bound {\n             TypeBound::Path(path, TraitBoundModifier::None) => {\n                 bindings = self.lower_trait_ref_from_path(path, Some(self_ty));\n-                bindings.clone().map(WhereClause::Implemented).map(crate::wrap_empty_binders)\n+                bindings\n+                    .clone()\n+                    .filter(|tr| {\n+                        // ignore `T: Drop` or `T: Destruct` bounds.\n+                        // - `T: ~const Drop` has a special meaning in Rust 1.61 that we don't implement.\n+                        //   (So ideally, we'd only ignore `~const Drop` here)\n+                        // - `Destruct` impls are built-in in 1.62 (current nightlies as of 08-04-2022), so until\n+                        //   the builtin impls are supported by Chalk, we ignore them here.\n+                        if let Some(lang) = lang_attr(self.db.upcast(), tr.hir_trait_id()) {\n+                            if lang == \"drop\" || lang == \"destruct\" {\n+                                return false;\n+                            }\n+                        }\n+                        true\n+                    })\n+                    .map(WhereClause::Implemented)\n+                    .map(crate::wrap_empty_binders)\n             }\n             TypeBound::Path(path, TraitBoundModifier::Maybe) => {\n                 let sized_trait = self"}, {"sha": "a02ec6f85c6f6c865fd659300afaf2b5f59ae256", "filename": "crates/hir_ty/src/tests/regression.rs", "status": "modified", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/847c552ab3d257a45fee6ef2c1737de52c081d11/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/847c552ab3d257a45fee6ef2c1737de52c081d11/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs?ref=847c552ab3d257a45fee6ef2c1737de52c081d11", "patch": "@@ -1505,3 +1505,82 @@ fn f(s: S) {\n \"#,\n     );\n }\n+\n+#[test]\n+fn rust_161_option_clone() {\n+    check_types(\n+        r#\"\n+//- minicore: option, drop\n+\n+fn test(o: &Option<i32>) {\n+    o.my_clone();\n+  //^^^^^^^^^^^^ Option<i32>\n+}\n+\n+pub trait MyClone: Sized {\n+    fn my_clone(&self) -> Self;\n+}\n+\n+impl<T> const MyClone for Option<T>\n+where\n+    T: ~const MyClone + ~const Drop + ~const Destruct,\n+{\n+    fn my_clone(&self) -> Self {\n+        match self {\n+            Some(x) => Some(x.my_clone()),\n+            None => None,\n+        }\n+    }\n+}\n+\n+impl const MyClone for i32 {\n+    fn my_clone(&self) -> Self {\n+        *self\n+    }\n+}\n+\n+pub trait Destruct {}\n+\n+impl<T: ?Sized> const Destruct for T {}\n+\"#,\n+    );\n+}\n+\n+#[test]\n+fn rust_162_option_clone() {\n+    check_types(\n+        r#\"\n+//- minicore: option, drop\n+\n+fn test(o: &Option<i32>) {\n+    o.my_clone();\n+  //^^^^^^^^^^^^ Option<i32>\n+}\n+\n+pub trait MyClone: Sized {\n+    fn my_clone(&self) -> Self;\n+}\n+\n+impl<T> const MyClone for Option<T>\n+where\n+    T: ~const MyClone + ~const Destruct,\n+{\n+    fn my_clone(&self) -> Self {\n+        match self {\n+            Some(x) => Some(x.my_clone()),\n+            None => None,\n+        }\n+    }\n+}\n+\n+impl const MyClone for i32 {\n+    fn my_clone(&self) -> Self {\n+        *self\n+    }\n+}\n+\n+#[lang = \"destruct\"]\n+pub trait Destruct {}\n+\"#,\n+    );\n+}"}]}