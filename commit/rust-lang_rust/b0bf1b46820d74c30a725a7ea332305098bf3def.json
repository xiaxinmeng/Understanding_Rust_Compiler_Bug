{"sha": "b0bf1b46820d74c30a725a7ea332305098bf3def", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwYmYxYjQ2ODIwZDc0YzMwYTcyNWE3ZWEzMzIzMDUwOThiZjNkZWY=", "commit": {"author": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2017-06-14T03:27:51Z"}, "committer": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2017-06-29T12:23:33Z"}, "message": "Split dst-dtor-{1,2} tests into four.", "tree": {"sha": "5e47f654ac038efb181aa35ac2b44f18e6fd0a39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e47f654ac038efb181aa35ac2b44f18e6fd0a39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0bf1b46820d74c30a725a7ea332305098bf3def", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJZVPFKAAoJEHynqF4EmoLomV0QAIT3sOmy8pp3N5jjyeaidU9n\n46+5rRKz7PSuYcUZs6rg/lS8WZ+EIQ7AQ+nX3HdKQyY14wLbGhMtDCrFi24bVp/l\nWiMaKM5KgHXEZQYNPHhJ1vtBRK4lf4UTpZaURgAzwqZvMBz1Hf0sWxvqfe1SaZ/H\nFIPgJG+caoSspiUyWkaPYgtX4bRef6ZSIUAIuKOKf6v76Vj1uX19kiRYMg28i/in\nTTNGm2JrRWp94GS35S1yqY9enzf5WtQGq6Y1CiWzLXOMrL9v1Fr5nEgEsPSi8tqh\n+Gd8wbCK32QPQgSZs06SSxE9y9iNefIY4WgkqMxrcbpkcjsUcsg/0DNBqpJGiVqo\nB1cKGbALE81J01yybsItNIuoB6X5Td7waE5jbsjWbQHk6hrT2u71twHgopK2Ldl5\nRl/jblIXtOk8wq2ZRK8/cs5P9zhFLkXWKDV6SwKg1II/7UmTXOafAjHUDfkZdM3+\nTE+mkA69cXJkeahUHEtUvFlNCrcAhAyqtxRcWNPQG5uFK+/dnB3vNpno5i87jpZj\nqbvEI8YVLGJYq9zX+Rfhr+hY452dlfOWzRVae4oc0S0nUHEcxh0HT+xOP9DkEAJe\n9eCP5bDOsxb+j4tGYYcNFs9VXxa7JLJKysugC2xFaS2zHarskD5/7KMz4lfFS6c4\nGSJbpMAiHN5TWFQ2s1Dn\n=+d73\n-----END PGP SIGNATURE-----", "payload": "tree 5e47f654ac038efb181aa35ac2b44f18e6fd0a39\nparent 23d1521684380a0a3099cb7439270cd650de36fb\nauthor Masaki Hara <ackie.h.gmai@gmail.com> 1497410871 +0900\ncommitter Masaki Hara <ackie.h.gmai@gmail.com> 1498739013 +0900\n\nSplit dst-dtor-{1,2} tests into four.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0bf1b46820d74c30a725a7ea332305098bf3def", "html_url": "https://github.com/rust-lang/rust/commit/b0bf1b46820d74c30a725a7ea332305098bf3def", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0bf1b46820d74c30a725a7ea332305098bf3def/comments", "author": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23d1521684380a0a3099cb7439270cd650de36fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/23d1521684380a0a3099cb7439270cd650de36fb", "html_url": "https://github.com/rust-lang/rust/commit/23d1521684380a0a3099cb7439270cd650de36fb"}], "stats": {"total": 67, "additions": 63, "deletions": 4}, "files": [{"sha": "4af642a106c153722181b72ab7f1df6bad963629", "filename": "src/test/run-pass-valgrind/dst-dtor-1.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b0bf1b46820d74c30a725a7ea332305098bf3def/src%2Ftest%2Frun-pass-valgrind%2Fdst-dtor-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0bf1b46820d74c30a725a7ea332305098bf3def/src%2Ftest%2Frun-pass-valgrind%2Fdst-dtor-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-valgrind%2Fdst-dtor-1.rs?ref=b0bf1b46820d74c30a725a7ea332305098bf3def", "patch": "@@ -28,8 +28,7 @@ struct Fat<T: ?Sized> {\n \n pub fn main() {\n     {\n-        let _x: Box<(i32, Fat<Trait>)> =\n-            Box::<(i32, Fat<Foo>)>::new((42, Fat { f: Foo }));\n+        let _x: Box<Fat<Trait>> = Box::<Fat<Foo>>::new(Fat { f: Foo });\n     }\n     unsafe {\n         assert!(DROP_RAN);"}, {"sha": "283b8202b35d0bb5b63b69805d415972404810c1", "filename": "src/test/run-pass-valgrind/dst-dtor-2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b0bf1b46820d74c30a725a7ea332305098bf3def/src%2Ftest%2Frun-pass-valgrind%2Fdst-dtor-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0bf1b46820d74c30a725a7ea332305098bf3def/src%2Ftest%2Frun-pass-valgrind%2Fdst-dtor-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-valgrind%2Fdst-dtor-2.rs?ref=b0bf1b46820d74c30a725a7ea332305098bf3def", "patch": "@@ -25,8 +25,7 @@ struct Fat<T: ?Sized> {\n \n pub fn main() {\n     {\n-        let _x: Box<(Fat<[Foo]>,)> =\n-            Box::<(Fat<[Foo; 3]>,)>::new((Fat { f: [Foo, Foo, Foo] },));\n+        let _x: Box<Fat<[Foo]>> = Box::<Fat<[Foo; 3]>>::new(Fat { f: [Foo, Foo, Foo] });\n     }\n     unsafe {\n         assert_eq!(DROP_RAN, 3);"}, {"sha": "b21f6434b5402db653786025de5ff88ffd1edd24", "filename": "src/test/run-pass-valgrind/dst-dtor-3.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b0bf1b46820d74c30a725a7ea332305098bf3def/src%2Ftest%2Frun-pass-valgrind%2Fdst-dtor-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0bf1b46820d74c30a725a7ea332305098bf3def/src%2Ftest%2Frun-pass-valgrind%2Fdst-dtor-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-valgrind%2Fdst-dtor-3.rs?ref=b0bf1b46820d74c30a725a7ea332305098bf3def", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+static mut DROP_RAN: bool = false;\n+\n+struct Foo;\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        unsafe { DROP_RAN = true; }\n+    }\n+}\n+\n+trait Trait { fn dummy(&self) { } }\n+impl Trait for Foo {}\n+\n+pub fn main() {\n+    {\n+        let _x: Box<(i32, Trait)> = Box::<(i32, Foo)>::new((42, Foo));\n+    }\n+    unsafe {\n+        assert!(DROP_RAN);\n+    }\n+}"}, {"sha": "810589de7708b807a40ba39c49a295c046b4cc1b", "filename": "src/test/run-pass-valgrind/dst-dtor-4.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b0bf1b46820d74c30a725a7ea332305098bf3def/src%2Ftest%2Frun-pass-valgrind%2Fdst-dtor-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0bf1b46820d74c30a725a7ea332305098bf3def/src%2Ftest%2Frun-pass-valgrind%2Fdst-dtor-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-valgrind%2Fdst-dtor-4.rs?ref=b0bf1b46820d74c30a725a7ea332305098bf3def", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+static mut DROP_RAN: isize = 0;\n+\n+struct Foo;\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        unsafe { DROP_RAN += 1; }\n+    }\n+}\n+\n+pub fn main() {\n+    {\n+        let _x: Box<(i32, [Foo])> = Box::<(i32, [Foo; 3])>::new((42, [Foo, Foo, Foo]));\n+    }\n+    unsafe {\n+        assert_eq!(DROP_RAN, 3);\n+    }\n+}"}]}