{"sha": "a14194b428efdb09cc45f9862ec34bef0038cd35", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNDE5NGI0MjhlZmRiMDljYzQ1Zjk4NjJlYzM0YmVmMDAzOGNkMzU=", "commit": {"author": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-08-31T23:38:32Z"}, "committer": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-10-08T02:01:30Z"}, "message": "Changes from review", "tree": {"sha": "d069e22d7d162c719fd3a8eb388fc7052e0e7668", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d069e22d7d162c719fd3a8eb388fc7052e0e7668"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a14194b428efdb09cc45f9862ec34bef0038cd35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a14194b428efdb09cc45f9862ec34bef0038cd35", "html_url": "https://github.com/rust-lang/rust/commit/a14194b428efdb09cc45f9862ec34bef0038cd35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a14194b428efdb09cc45f9862ec34bef0038cd35/comments", "author": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c32bdea3662f4c65810e2d92569b0cb4e3872d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c32bdea3662f4c65810e2d92569b0cb4e3872d9", "html_url": "https://github.com/rust-lang/rust/commit/8c32bdea3662f4c65810e2d92569b0cb4e3872d9"}], "stats": {"total": 61, "additions": 14, "deletions": 47}, "files": [{"sha": "7fe88577db797c0448abd5059ac930a37fd8d26a", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a14194b428efdb09cc45f9862ec34bef0038cd35/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a14194b428efdb09cc45f9862ec34bef0038cd35/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=a14194b428efdb09cc45f9862ec34bef0038cd35", "patch": "@@ -100,9 +100,6 @@ pub fn get_doc_link<T: Resolvable + Clone>(db: &dyn HirDatabase, definition: &T)\n // BUG: For Option\n // Returns https://doc.rust-lang.org/nightly/core/prelude/v1/enum.Option.html#variant.Some\n // Instead of https://doc.rust-lang.org/nightly/core/option/enum.Option.html\n-//\n-// BUG: For methods\n-// import_map.path_of(ns) fails, is not designed to resolve methods\n fn get_doc_link_impl(db: &dyn HirDatabase, moddef: &ModuleDef) -> Option<String> {\n     // Get the outermost definition for the moduledef. This is used to resolve the public path to the type,\n     // then we can join the method, field, etc onto it if required."}, {"sha": "0580d2979e70a7fc924f9c743a8af4ea81aa818b", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a14194b428efdb09cc45f9862ec34bef0038cd35/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a14194b428efdb09cc45f9862ec34bef0038cd35/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=a14194b428efdb09cc45f9862ec34bef0038cd35", "patch": "@@ -383,7 +383,7 @@ impl Analysis {\n     }\n \n     /// Return URL(s) for the documentation of the symbol under the cursor.\n-    pub fn get_doc_url(\n+    pub fn external_docs(\n         &self,\n         position: FilePosition,\n     ) -> Cancelable<Option<doc_links::DocumentationLink>> {"}, {"sha": "ba73abcacd2bcf6e25df67094f3d6c5dc9a8cc92", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a14194b428efdb09cc45f9862ec34bef0038cd35/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a14194b428efdb09cc45f9862ec34bef0038cd35/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=a14194b428efdb09cc45f9862ec34bef0038cd35", "patch": "@@ -34,7 +34,7 @@ use crate::{\n     config::RustfmtConfig,\n     from_json, from_proto,\n     global_state::{GlobalState, GlobalStateSnapshot},\n-    lsp_ext::{self, DocumentationLink, InlayHint, InlayHintsParams, OpenDocsParams},\n+    lsp_ext::{self, InlayHint, InlayHintsParams},\n     to_proto, LspError, Result,\n };\n \n@@ -1312,15 +1312,14 @@ pub(crate) fn handle_semantic_tokens_range(\n \n pub(crate) fn handle_open_docs(\n     snap: GlobalStateSnapshot,\n-    params: OpenDocsParams,\n-) -> Result<DocumentationLink> {\n+    params: lsp_types::TextDocumentPositionParams,\n+) -> Result<Option<lsp_types::Url>> {\n     let _p = profile::span(\"handle_open_docs\");\n-    let position = from_proto::file_position(&snap, params.position)?;\n+    let position = from_proto::file_position(&snap, params)?;\n \n-    // FIXME: Propogate or ignore this error instead of panicking.\n-    let remote = snap.analysis.get_doc_url(position)?.unwrap();\n+    let remote = snap.analysis.external_docs(position)?;\n \n-    Ok(DocumentationLink { remote })\n+    Ok(remote.and_then(|remote| Url::parse(&remote).ok()))\n }\n \n fn implementation_title(count: usize) -> String {"}, {"sha": "f31f8d9001b7b8b4fa0a372d253b2c0ddcf44fdf", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 5, "deletions": 25, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a14194b428efdb09cc45f9862ec34bef0038cd35/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a14194b428efdb09cc45f9862ec34bef0038cd35/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=a14194b428efdb09cc45f9862ec34bef0038cd35", "patch": "@@ -348,30 +348,10 @@ pub struct CommandLink {\n     pub tooltip: Option<String>,\n }\n \n-pub enum OpenDocs {}\n+pub enum ExternalDocs {}\n \n-impl Request for OpenDocs {\n-    type Params = OpenDocsParams;\n-    type Result = DocumentationLink;\n-    const METHOD: &'static str = \"rust-analyzer/openDocs\";\n-}\n-\n-#[derive(Debug, PartialEq, Clone, Deserialize, Serialize)]\n-#[serde(rename_all = \"camelCase\")]\n-pub struct OpenDocsParams {\n-    // TODO: I don't know the difference between these two methods of passing position.\n-    #[serde(flatten)]\n-    pub position: lsp_types::TextDocumentPositionParams,\n-    // pub textDocument: lsp_types::TextDocumentIdentifier,\n-    // pub position: lsp_types::Position,\n-}\n-\n-#[derive(Debug, PartialEq, Clone, Deserialize, Serialize)]\n-#[serde(rename_all = \"camelCase\")]\n-pub struct DocumentationLink {\n-    pub remote: String, // TODO: Better API?\n-                        // #[serde(skip_serializing_if = \"Option::is_none\")]\n-                        // pub remote: Option<String>,\n-                        // #[serde(skip_serializing_if = \"Option::is_none\")]\n-                        // pub local: Option<String>\n+impl Request for ExternalDocs {\n+    type Params = lsp_types::TextDocumentPositionParams;\n+    type Result = Option<lsp_types::Url>;\n+    const METHOD: &'static str = \"experimental/externalDocs\";\n }"}, {"sha": "06b38d99c8ee4ab1756495160c4ac13e3f5dcd73", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a14194b428efdb09cc45f9862ec34bef0038cd35/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a14194b428efdb09cc45f9862ec34bef0038cd35/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=a14194b428efdb09cc45f9862ec34bef0038cd35", "patch": "@@ -384,7 +384,7 @@ impl GlobalState {\n             .on::<lsp_ext::CodeActionRequest>(handlers::handle_code_action)?\n             .on::<lsp_ext::ResolveCodeActionRequest>(handlers::handle_resolve_code_action)?\n             .on::<lsp_ext::HoverRequest>(handlers::handle_hover)?\n-            .on::<lsp_ext::OpenDocs>(handlers::handle_open_docs)?\n+            .on::<lsp_ext::ExternalDocs>(handlers::handle_open_docs)?\n             .on::<lsp_types::request::OnTypeFormatting>(handlers::handle_on_type_formatting)?\n             .on::<lsp_types::request::DocumentSymbolRequest>(handlers::handle_document_symbol)?\n             .on::<lsp_types::request::WorkspaceSymbol>(handlers::handle_workspace_symbol)?"}, {"sha": "56280471509d4b09133edb2d997b0f2b73adc80a", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a14194b428efdb09cc45f9862ec34bef0038cd35/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/a14194b428efdb09cc45f9862ec34bef0038cd35/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=a14194b428efdb09cc45f9862ec34bef0038cd35", "patch": "@@ -119,13 +119,4 @@ export interface CommandLinkGroup {\n     commands: CommandLink[];\n }\n \n-export interface DocumentationLink {\n-    remote: string;\n-}\n-\n-export interface OpenDocsParams {\n-    textDocument: lc.TextDocumentIdentifier;\n-    position: lc.Position;\n-}\n-\n-export const openDocs = new lc.RequestType<OpenDocsParams, DocumentationLink, void>('rust-analyzer/openDocs');\n+export const openDocs = new lc.RequestType<lc.TextDocumentPositionParams, String | void, void>('experimental/externalDocs');"}]}