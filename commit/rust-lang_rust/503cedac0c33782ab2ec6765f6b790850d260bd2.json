{"sha": "503cedac0c33782ab2ec6765f6b790850d260bd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwM2NlZGFjMGMzMzc4MmFiMmVjNjc2NWY2Yjc5MDg1MGQyNjBiZDI=", "commit": {"author": {"name": "Nick Hynes", "email": "nhynes@oasislabs.com", "date": "2019-07-16T02:34:00Z"}, "committer": {"name": "Nick Hynes", "email": "nhynes@oasislabs.com", "date": "2019-07-16T02:34:00Z"}, "message": "Test that maplike FromIter satisfies uniqueness", "tree": {"sha": "d1e81dd8e679b67702f26b4570aba9630577a438", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1e81dd8e679b67702f26b4570aba9630577a438"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/503cedac0c33782ab2ec6765f6b790850d260bd2", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEb/pjedNtxqSgtEKYI63HE1FvrxsFAl0tN5gACgkQI63HE1Fv\nrxv8mQf/UO6s+e3jwKi3VrguA9BwrsNeuRqfv8tYFQrXOkKZp4FZmV9/BARryJEz\nD1vTg2Sz2lo3LCGz7eTdT1xHU88KQq2qiG2ECeD92GlnzzjK5rxE6CDhU+y+OEiV\nB4JJpDJhZQSZ8QDdckl5n8nv/qLxbd8JeVFtfsJC2N98EUoWn4uCgGOJ2K3vSUPX\ncYCKK6ppE5sS+NBCaDyZr/fUu/hkJdbBU3Kf6cyBUoFHpbdQXsMCn0gpu1C+NO83\niBtCUCkIKBagM+66K+TizJt5JLZzZdp1FNsVM+bH2S9VJePmJeGm8Z5o0vM3hhiW\nqQTzNCHKvFV9M2msYZaNzfI7W4zLBQ==\n=n09p\n-----END PGP SIGNATURE-----", "payload": "tree d1e81dd8e679b67702f26b4570aba9630577a438\nparent 4b65a86ebace8600c8e269e8bfe3365cdc460e68\nauthor Nick Hynes <nhynes@oasislabs.com> 1563244440 +0000\ncommitter Nick Hynes <nhynes@oasislabs.com> 1563244440 +0000\n\nTest that maplike FromIter satisfies uniqueness\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/503cedac0c33782ab2ec6765f6b790850d260bd2", "html_url": "https://github.com/rust-lang/rust/commit/503cedac0c33782ab2ec6765f6b790850d260bd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/503cedac0c33782ab2ec6765f6b790850d260bd2/comments", "author": null, "committer": null, "parents": [{"sha": "4b65a86ebace8600c8e269e8bfe3365cdc460e68", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b65a86ebace8600c8e269e8bfe3365cdc460e68", "html_url": "https://github.com/rust-lang/rust/commit/4b65a86ebace8600c8e269e8bfe3365cdc460e68"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "1e28ee8da26b49e35aa7b6d9240fe7bbe1604672", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/503cedac0c33782ab2ec6765f6b790850d260bd2/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/503cedac0c33782ab2ec6765f6b790850d260bd2/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=503cedac0c33782ab2ec6765f6b790850d260bd2", "patch": "@@ -3138,13 +3138,15 @@ mod test_map {\n \n     #[test]\n     fn test_from_iter() {\n-        let xs = [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)];\n+        let xs = [(1, 1), (2, 2), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)];\n \n         let map: HashMap<_, _> = xs.iter().cloned().collect();\n \n         for &(k, v) in &xs {\n             assert_eq!(map.get(&k), Some(&v));\n         }\n+\n+        assert_eq!(map.iter().len(), xs.len() - 1);\n     }\n \n     #[test]"}, {"sha": "d243412405a790e08f2f58254a3556013c9fd53d", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/503cedac0c33782ab2ec6765f6b790850d260bd2/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/503cedac0c33782ab2ec6765f6b790850d260bd2/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=503cedac0c33782ab2ec6765f6b790850d260bd2", "patch": "@@ -1782,13 +1782,15 @@ mod test_set {\n \n     #[test]\n     fn test_from_iter() {\n-        let xs = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n+        let xs = [1, 2, 2, 3, 4, 5, 6, 7, 8, 9];\n \n         let set: HashSet<_> = xs.iter().cloned().collect();\n \n         for x in &xs {\n             assert!(set.contains(x));\n         }\n+\n+        assert_eq!(set.iter().len(), xs.len() - 1);\n     }\n \n     #[test]"}]}