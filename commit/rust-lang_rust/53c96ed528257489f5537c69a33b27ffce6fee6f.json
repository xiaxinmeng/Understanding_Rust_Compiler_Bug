{"sha": "53c96ed528257489f5537c69a33b27ffce6fee6f", "node_id": "C_kwDOAAsO6NoAKDUzYzk2ZWQ1MjgyNTc0ODlmNTUzN2M2OWEzM2IyN2ZmY2U2ZmVlNmY", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-02-17T15:42:53Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-03-28T17:01:09Z"}, "message": "Add some tests around recursion and \"revealing\"", "tree": {"sha": "e35fd3d7b9238ae9c6772c4df88558425c2c2dea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e35fd3d7b9238ae9c6772c4df88558425c2c2dea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53c96ed528257489f5537c69a33b27ffce6fee6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53c96ed528257489f5537c69a33b27ffce6fee6f", "html_url": "https://github.com/rust-lang/rust/commit/53c96ed528257489f5537c69a33b27ffce6fee6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53c96ed528257489f5537c69a33b27ffce6fee6f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f46f771a6b579c1330976c1638ccc4a03e8863f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f46f771a6b579c1330976c1638ccc4a03e8863f", "html_url": "https://github.com/rust-lang/rust/commit/1f46f771a6b579c1330976c1638ccc4a03e8863f"}], "stats": {"total": 152, "additions": 152, "deletions": 0}, "files": [{"sha": "cf7cd5d26ca2fb31fa553016add112ddec9b673a", "filename": "src/test/ui/lazy-type-alias-impl-trait/recursion.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/53c96ed528257489f5537c69a33b27ffce6fee6f/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53c96ed528257489f5537c69a33b27ffce6fee6f/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion.rs?ref=53c96ed528257489f5537c69a33b27ffce6fee6f", "patch": "@@ -0,0 +1,23 @@\n+#![feature(type_alias_impl_trait)]\n+\n+// check-pass\n+\n+type Foo = impl std::fmt::Debug;\n+\n+fn foo(b: bool) -> Foo {\n+    if b {\n+        return 42\n+    }\n+    let x: u32 = foo(false);\n+    99\n+}\n+\n+fn bar(b: bool) -> impl std::fmt::Debug {\n+    if b {\n+        return 42\n+    }\n+    let x: u32 = bar(false);\n+    99\n+}\n+\n+fn main() {}"}, {"sha": "1cc64ea17e79e71cea76cefb6aa216f23f195500", "filename": "src/test/ui/lazy-type-alias-impl-trait/recursion2.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/53c96ed528257489f5537c69a33b27ffce6fee6f/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53c96ed528257489f5537c69a33b27ffce6fee6f/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion2.rs?ref=53c96ed528257489f5537c69a33b27ffce6fee6f", "patch": "@@ -0,0 +1,21 @@\n+#![feature(type_alias_impl_trait)]\n+\n+type Foo = impl std::fmt::Debug;\n+\n+fn foo(b: bool) -> Foo {\n+    if b {\n+        return vec![];\n+    }\n+    let x: Vec<i32> = foo(false);\n+    std::iter::empty().collect() //~ ERROR `Foo` cannot be built from an iterator\n+}\n+\n+fn bar(b: bool) -> impl std::fmt::Debug {\n+    if b {\n+        return vec![]\n+    }\n+    let x: Vec<i32> = bar(false);\n+    std::iter::empty().collect()\n+}\n+\n+fn main() {}"}, {"sha": "1f6201a8300c6dacc29aedef98bb0c9f600c1f95", "filename": "src/test/ui/lazy-type-alias-impl-trait/recursion2.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/53c96ed528257489f5537c69a33b27ffce6fee6f/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53c96ed528257489f5537c69a33b27ffce6fee6f/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion2.stderr?ref=53c96ed528257489f5537c69a33b27ffce6fee6f", "patch": "@@ -0,0 +1,16 @@\n+error[E0277]: a value of type `Foo` cannot be built from an iterator over elements of type `_`\n+  --> $DIR/recursion2.rs:10:24\n+   |\n+LL |     std::iter::empty().collect()\n+   |                        ^^^^^^^ value of type `Foo` cannot be built from `std::iter::Iterator<Item=_>`\n+   |\n+   = help: the trait `FromIterator<_>` is not implemented for `Foo`\n+note: required by a bound in `collect`\n+  --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n+   |\n+LL |     fn collect<B: FromIterator<Self::Item>>(self) -> B\n+   |                   ^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `collect`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "7f1cedae068f02770721c8c190a4564c07c1cdc5", "filename": "src/test/ui/lazy-type-alias-impl-trait/recursion3.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/53c96ed528257489f5537c69a33b27ffce6fee6f/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53c96ed528257489f5537c69a33b27ffce6fee6f/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion3.rs?ref=53c96ed528257489f5537c69a33b27ffce6fee6f", "patch": "@@ -0,0 +1,21 @@\n+#![feature(type_alias_impl_trait)]\n+\n+type Foo = impl std::fmt::Debug;\n+\n+fn foo(b: bool) -> Foo {\n+    if b {\n+        return 42\n+    }\n+    let x: u32 = foo(false) + 42; //~ ERROR cannot add\n+    99\n+}\n+\n+fn bar(b: bool) -> impl std::fmt::Debug {\n+    if b {\n+        return 42\n+    }\n+    let x: u32 = bar(false) + 42; //~ ERROR cannot add\n+    99\n+}\n+\n+fn main() {}"}, {"sha": "e1d5cafedc808ecd313fd1c4a7442dcad9117ffd", "filename": "src/test/ui/lazy-type-alias-impl-trait/recursion3.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/53c96ed528257489f5537c69a33b27ffce6fee6f/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53c96ed528257489f5537c69a33b27ffce6fee6f/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion3.stderr?ref=53c96ed528257489f5537c69a33b27ffce6fee6f", "patch": "@@ -0,0 +1,19 @@\n+error[E0369]: cannot add `{integer}` to `Foo`\n+  --> $DIR/recursion3.rs:9:29\n+   |\n+LL |     let x: u32 = foo(false) + 42;\n+   |                  ---------- ^ -- {integer}\n+   |                  |\n+   |                  Foo\n+\n+error[E0369]: cannot add `{integer}` to `impl Debug`\n+  --> $DIR/recursion3.rs:17:29\n+   |\n+LL |     let x: u32 = bar(false) + 42;\n+   |                  ---------- ^ -- {integer}\n+   |                  |\n+   |                  impl Debug\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0369`."}, {"sha": "57dd7fb067c6d10fca63e1f16c46647ef58b5040", "filename": "src/test/ui/lazy-type-alias-impl-trait/recursion4.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/53c96ed528257489f5537c69a33b27ffce6fee6f/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53c96ed528257489f5537c69a33b27ffce6fee6f/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion4.rs?ref=53c96ed528257489f5537c69a33b27ffce6fee6f", "patch": "@@ -0,0 +1,23 @@\n+#![feature(type_alias_impl_trait)]\n+\n+type Foo = impl std::fmt::Debug;\n+\n+fn foo(b: bool) -> Foo {\n+    if b {\n+        return vec![];\n+    }\n+    let mut x = foo(false);\n+    x = std::iter::empty().collect(); //~ ERROR `Foo` cannot be built from an iterator\n+    vec![]\n+}\n+\n+fn bar(b: bool) -> impl std::fmt::Debug {\n+    if b {\n+        return vec![];\n+    }\n+    let mut x = bar(false);\n+    x = std::iter::empty().collect(); //~ ERROR `impl Debug` cannot be built from an iterator\n+    vec![]\n+}\n+\n+fn main() {}"}, {"sha": "42a1f782d299d651e0e5a720a84ef4f1bfbbb8e9", "filename": "src/test/ui/lazy-type-alias-impl-trait/recursion4.stderr", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/53c96ed528257489f5537c69a33b27ffce6fee6f/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53c96ed528257489f5537c69a33b27ffce6fee6f/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flazy-type-alias-impl-trait%2Frecursion4.stderr?ref=53c96ed528257489f5537c69a33b27ffce6fee6f", "patch": "@@ -0,0 +1,29 @@\n+error[E0277]: a value of type `Foo` cannot be built from an iterator over elements of type `_`\n+  --> $DIR/recursion4.rs:10:28\n+   |\n+LL |     x = std::iter::empty().collect();\n+   |                            ^^^^^^^ value of type `Foo` cannot be built from `std::iter::Iterator<Item=_>`\n+   |\n+   = help: the trait `FromIterator<_>` is not implemented for `Foo`\n+note: required by a bound in `collect`\n+  --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n+   |\n+LL |     fn collect<B: FromIterator<Self::Item>>(self) -> B\n+   |                   ^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `collect`\n+\n+error[E0277]: a value of type `impl Debug` cannot be built from an iterator over elements of type `_`\n+  --> $DIR/recursion4.rs:19:28\n+   |\n+LL |     x = std::iter::empty().collect();\n+   |                            ^^^^^^^ value of type `impl Debug` cannot be built from `std::iter::Iterator<Item=_>`\n+   |\n+   = help: the trait `FromIterator<_>` is not implemented for `impl Debug`\n+note: required by a bound in `collect`\n+  --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n+   |\n+LL |     fn collect<B: FromIterator<Self::Item>>(self) -> B\n+   |                   ^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `collect`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}