{"sha": "939914e39da859b82e904210db144bd67a41486e", "node_id": "C_kwDOAAsO6NoAKDkzOTkxNGUzOWRhODU5YjgyZTkwNDIxMGRiMTQ0YmQ2N2E0MTQ4NmU", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-05-21T21:49:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-21T21:49:35Z"}, "message": "Merge pull request #251 from rust-lang/mask-cast\n\nAdd Mask::cast", "tree": {"sha": "ae9636e5a6fa5b05c8f46327804a2a46699dca74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae9636e5a6fa5b05c8f46327804a2a46699dca74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/939914e39da859b82e904210db144bd67a41486e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiiV5vCRBK7hj4Ov3rIwAAhFIIABnW3q0mWnRZ0/kKco/RmbMD\nmMYwtiQonI8LCD+pxk3yf5VlqFRFFP2fGDhlieoqpR3pR3XupPJke0eRsa3j2n/H\n2tQQKabauZgwGJ/MeGwfydAaSjSdvZ2d89Asdropi7KY/EyD2qu4CJsf9ihJ7xd+\nUPojemwPvmjaVABpM8YU/qVzN2Lg1OBBFLTlI9FgMl3Jp7h8vu4kARG2LoAGR3Zc\niqnt1OVCGIW/aMDJzM/CBuXBAiMVjz4yIb59YbC38YU0JXh//GoYlYiu0AjqstJp\n9a06a0a/VcrW6VlV+hmfeVwYZOC9HusdEI7TiuuDrfFS4shPPd+3BBr9x1uh6oc=\n=beaV\n-----END PGP SIGNATURE-----\n", "payload": "tree ae9636e5a6fa5b05c8f46327804a2a46699dca74\nparent af53b5de24712a29f952b657d6e3107ba32f6e67\nparent c9f4e0ef98a4c8c54919d25eafd83e9bcaf2e4df\nauthor Caleb Zulawski <caleb.zulawski@gmail.com> 1653169775 -0400\ncommitter GitHub <noreply@github.com> 1653169775 -0400\n\nMerge pull request #251 from rust-lang/mask-cast\n\nAdd Mask::cast"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/939914e39da859b82e904210db144bd67a41486e", "html_url": "https://github.com/rust-lang/rust/commit/939914e39da859b82e904210db144bd67a41486e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/939914e39da859b82e904210db144bd67a41486e/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af53b5de24712a29f952b657d6e3107ba32f6e67", "url": "https://api.github.com/repos/rust-lang/rust/commits/af53b5de24712a29f952b657d6e3107ba32f6e67", "html_url": "https://github.com/rust-lang/rust/commit/af53b5de24712a29f952b657d6e3107ba32f6e67"}, {"sha": "c9f4e0ef98a4c8c54919d25eafd83e9bcaf2e4df", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9f4e0ef98a4c8c54919d25eafd83e9bcaf2e4df", "html_url": "https://github.com/rust-lang/rust/commit/c9f4e0ef98a4c8c54919d25eafd83e9bcaf2e4df"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "dcec336cfaf2c87e1407473eef37cbd86e8ed062", "filename": "crates/core_simd/src/masks.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/939914e39da859b82e904210db144bd67a41486e/crates%2Fcore_simd%2Fsrc%2Fmasks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/939914e39da859b82e904210db144bd67a41486e/crates%2Fcore_simd%2Fsrc%2Fmasks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmasks.rs?ref=939914e39da859b82e904210db144bd67a41486e", "patch": "@@ -181,6 +181,13 @@ where\n         self.0.to_int()\n     }\n \n+    /// Converts the mask to a mask of any other lane size.\n+    #[inline]\n+    #[must_use = \"method returns a new mask and does not mutate the original value\"]\n+    pub fn cast<U: MaskElement>(self) -> Mask<U, LANES> {\n+        Mask(self.0.convert())\n+    }\n+\n     /// Tests the value of the specified lane.\n     ///\n     /// # Safety\n@@ -571,7 +578,7 @@ macro_rules! impl_from {\n             LaneCount<LANES>: SupportedLaneCount,\n         {\n             fn from(value: Mask<$from, LANES>) -> Self {\n-                Self(value.0.convert())\n+                value.cast()\n             }\n         }\n         )*"}, {"sha": "3a0493d4ee664cc2b27150c140d4dedd0a23d936", "filename": "crates/core_simd/tests/masks.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/939914e39da859b82e904210db144bd67a41486e/crates%2Fcore_simd%2Ftests%2Fmasks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/939914e39da859b82e904210db144bd67a41486e/crates%2Fcore_simd%2Ftests%2Fmasks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Ftests%2Fmasks.rs?ref=939914e39da859b82e904210db144bd67a41486e", "patch": "@@ -99,6 +99,29 @@ macro_rules! test_mask_api {\n                 assert_eq!(bitmask, 0b01);\n                 assert_eq!(core_simd::Mask::<$type, 2>::from_bitmask(bitmask), mask);\n             }\n+\n+            #[test]\n+            fn cast() {\n+                fn cast_impl<T: core_simd::MaskElement>()\n+                where\n+                    core_simd::Mask<$type, 8>: Into<core_simd::Mask<T, 8>>,\n+                {\n+                    let values = [true, false, false, true, false, false, true, false];\n+                    let mask = core_simd::Mask::<$type, 8>::from_array(values);\n+\n+                    let cast_mask = mask.cast::<T>();\n+                    assert_eq!(values, cast_mask.to_array());\n+\n+                    let into_mask: core_simd::Mask<T, 8> = mask.into();\n+                    assert_eq!(values, into_mask.to_array());\n+                }\n+\n+                cast_impl::<i8>();\n+                cast_impl::<i16>();\n+                cast_impl::<i32>();\n+                cast_impl::<i64>();\n+                cast_impl::<isize>();\n+            }\n         }\n     }\n }"}]}