{"sha": "18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ZTQ0YTFiZTRkOGFlY2Y0MWQwYjkwNGQ2M2Y2YzcyZjUxZDZiMGQ=", "commit": {"author": {"name": "Folyd", "email": "lyshuhow@gmail.com", "date": "2020-09-25T08:43:43Z"}, "committer": {"name": "Folyd", "email": "lyshuhow@gmail.com", "date": "2021-01-30T06:11:47Z"}, "message": "Improve slice.binary_search_by()'s best-case performance to O(1)", "tree": {"sha": "043cbe6ab9b8149dd86bf91f9f99681983282f7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/043cbe6ab9b8149dd86bf91f9f99681983282f7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d", "html_url": "https://github.com/rust-lang/rust/commit/18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d/comments", "author": {"login": "Folyd", "id": 3369694, "node_id": "MDQ6VXNlcjMzNjk2OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3369694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Folyd", "html_url": "https://github.com/Folyd", "followers_url": "https://api.github.com/users/Folyd/followers", "following_url": "https://api.github.com/users/Folyd/following{/other_user}", "gists_url": "https://api.github.com/users/Folyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/Folyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Folyd/subscriptions", "organizations_url": "https://api.github.com/users/Folyd/orgs", "repos_url": "https://api.github.com/users/Folyd/repos", "events_url": "https://api.github.com/users/Folyd/events{/privacy}", "received_events_url": "https://api.github.com/users/Folyd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Folyd", "id": 3369694, "node_id": "MDQ6VXNlcjMzNjk2OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3369694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Folyd", "html_url": "https://github.com/Folyd", "followers_url": "https://api.github.com/users/Folyd/followers", "following_url": "https://api.github.com/users/Folyd/following{/other_user}", "gists_url": "https://api.github.com/users/Folyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/Folyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Folyd/subscriptions", "organizations_url": "https://api.github.com/users/Folyd/orgs", "repos_url": "https://api.github.com/users/Folyd/repos", "events_url": "https://api.github.com/users/Folyd/events{/privacy}", "received_events_url": "https://api.github.com/users/Folyd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0248c6f178ab3a4d2ec702b7d418ff8375ab0515", "url": "https://api.github.com/repos/rust-lang/rust/commits/0248c6f178ab3a4d2ec702b7d418ff8375ab0515", "html_url": "https://github.com/rust-lang/rust/commit/0248c6f178ab3a4d2ec702b7d418ff8375ab0515"}], "stats": {"total": 58, "additions": 47, "deletions": 11}, "files": [{"sha": "dbab00856863b2efaa08cfa1095379a9edac7337", "filename": "library/core/benches/slice.rs", "status": "modified", "additions": 38, "deletions": 6, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d/library%2Fcore%2Fbenches%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d/library%2Fcore%2Fbenches%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fbenches%2Fslice.rs?ref=18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d", "patch": "@@ -7,15 +7,21 @@ enum Cache {\n     L3,\n }\n \n+impl Cache {\n+    fn size(&self) -> usize {\n+        match self {\n+            Cache::L1 => 1000,      // 8kb\n+            Cache::L2 => 10_000,    // 80kb\n+            Cache::L3 => 1_000_000, // 8Mb\n+        }\n+    }\n+}\n+\n fn binary_search<F>(b: &mut Bencher, cache: Cache, mapper: F)\n where\n     F: Fn(usize) -> usize,\n {\n-    let size = match cache {\n-        Cache::L1 => 1000,      // 8kb\n-        Cache::L2 => 10_000,    // 80kb\n-        Cache::L3 => 1_000_000, // 8Mb\n-    };\n+    let size = cache.size();\n     let v = (0..size).map(&mapper).collect::<Vec<_>>();\n     let mut r = 0usize;\n     b.iter(move || {\n@@ -24,7 +30,18 @@ where\n         // Lookup the whole range to get 50% hits and 50% misses.\n         let i = mapper(r % size);\n         black_box(v.binary_search(&i).is_ok());\n-    })\n+    });\n+}\n+\n+fn binary_search_worst_case(b: &mut Bencher, cache: Cache) {\n+    let size = cache.size();\n+\n+    let mut v = vec![0; size];\n+    let i = 1;\n+    v[size - 1] = i;\n+    b.iter(move || {\n+        black_box(v.binary_search(&i).is_ok());\n+    });\n }\n \n #[bench]\n@@ -57,6 +74,21 @@ fn binary_search_l3_with_dups(b: &mut Bencher) {\n     binary_search(b, Cache::L3, |i| i / 16 * 16);\n }\n \n+#[bench]\n+fn binary_search_l1_worst_case(b: &mut Bencher) {\n+    binary_search_worst_case(b, Cache::L1);\n+}\n+\n+#[bench]\n+fn binary_search_l2_worst_case(b: &mut Bencher) {\n+    binary_search_worst_case(b, Cache::L2);\n+}\n+\n+#[bench]\n+fn binary_search_l3_worst_case(b: &mut Bencher) {\n+    binary_search_worst_case(b, Cache::L3);\n+}\n+\n macro_rules! rotate {\n     ($fn:ident, $n:expr, $mapper:expr) => {\n         #[bench]"}, {"sha": "e904f856d1ece71ecd9ac91c8966940a8744f664", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d", "patch": "@@ -2167,7 +2167,11 @@ impl<T> [T] {\n             // - `mid >= 0`: by definition\n             // - `mid < size`: `mid = size / 2 + size / 4 + size / 8 ...`\n             let cmp = f(unsafe { s.get_unchecked(mid) });\n-            base = if cmp == Greater { base } else { mid };\n+            if cmp == Equal {\n+                return Ok(mid);\n+            } else if cmp == Less {\n+                base = mid\n+            }\n             size -= half;\n         }\n         // SAFETY: base is always in [0, size) because base <= mid."}, {"sha": "d9efa7ef20b97a0a6b13d8f8d49589d782664939", "filename": "library/core/tests/slice.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d/library%2Fcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d/library%2Fcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fslice.rs?ref=18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d", "patch": "@@ -73,13 +73,13 @@ fn test_binary_search_implementation_details() {\n     let b = [1, 1, 2, 2, 3, 3, 3];\n     assert_eq!(b.binary_search(&1), Ok(1));\n     assert_eq!(b.binary_search(&2), Ok(3));\n-    assert_eq!(b.binary_search(&3), Ok(6));\n+    assert_eq!(b.binary_search(&3), Ok(5));\n     let b = [1, 1, 1, 1, 1, 3, 3, 3, 3];\n     assert_eq!(b.binary_search(&1), Ok(4));\n-    assert_eq!(b.binary_search(&3), Ok(8));\n+    assert_eq!(b.binary_search(&3), Ok(6));\n     let b = [1, 1, 1, 1, 3, 3, 3, 3, 3];\n-    assert_eq!(b.binary_search(&1), Ok(3));\n-    assert_eq!(b.binary_search(&3), Ok(8));\n+    assert_eq!(b.binary_search(&1), Ok(2));\n+    assert_eq!(b.binary_search(&3), Ok(4));\n }\n \n #[test]"}]}