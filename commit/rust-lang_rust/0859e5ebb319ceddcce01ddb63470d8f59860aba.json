{"sha": "0859e5ebb319ceddcce01ddb63470d8f59860aba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4NTllNWViYjMxOWNlZGRjY2UwMWRkYjYzNDcwZDhmNTk4NjBhYmE=", "commit": {"author": {"name": "James Miller", "email": "james@aatch.net", "date": "2015-01-17T04:04:15Z"}, "committer": {"name": "James Miller", "email": "james@aatch.net", "date": "2015-01-18T20:21:23Z"}, "message": "Use `zero_mem` instead of a zerointializer for `init` intrinsic\n\nLLVM gets overwhelmed when presented with a zeroinitializer for a large\ntype. In unoptimised builds, it generates a long sequence of stores to\nmemory. In optmised builds, it manages to generate a standard memset of\nzero values, but takes a long time doing so.\n\nCall out to the `llvm.memset` function to zero out the memory instead.", "tree": {"sha": "856cc6c06996da5701272442f691244245bd60b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/856cc6c06996da5701272442f691244245bd60b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0859e5ebb319ceddcce01ddb63470d8f59860aba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0859e5ebb319ceddcce01ddb63470d8f59860aba", "html_url": "https://github.com/rust-lang/rust/commit/0859e5ebb319ceddcce01ddb63470d8f59860aba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0859e5ebb319ceddcce01ddb63470d8f59860aba/comments", "author": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcaeb6aa23ecba2dc2af870668a9239136d20fa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcaeb6aa23ecba2dc2af870668a9239136d20fa3", "html_url": "https://github.com/rust-lang/rust/commit/dcaeb6aa23ecba2dc2af870668a9239136d20fa3"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "eaf9b4a6bf70b89a4593a2e13bb61f8196438865", "filename": "src/librustc_trans/trans/intrinsic.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0859e5ebb319ceddcce01ddb63470d8f59860aba/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0859e5ebb319ceddcce01ddb63470d8f59860aba/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs?ref=0859e5ebb319ceddcce01ddb63470d8f59860aba", "patch": "@@ -361,12 +361,11 @@ pub fn trans_intrinsic_call<'a, 'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n         }\n         (_, \"init\") => {\n             let tp_ty = *substs.types.get(FnSpace, 0);\n-            let lltp_ty = type_of::arg_type_of(ccx, tp_ty);\n-            if return_type_is_void(ccx, tp_ty) {\n-                C_nil(ccx)\n-            } else {\n-                C_null(lltp_ty)\n+            if !return_type_is_void(ccx, tp_ty) {\n+                // Just zero out the stack slot\n+                zero_mem(bcx, llresult, tp_ty);\n             }\n+            C_nil(ccx)\n         }\n         // Effectively no-ops\n         (_, \"uninit\") | (_, \"forget\") => {"}]}