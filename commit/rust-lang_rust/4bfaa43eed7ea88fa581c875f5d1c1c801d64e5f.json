{"sha": "4bfaa43eed7ea88fa581c875f5d1c1c801d64e5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZmFhNDNlZWQ3ZWE4OGZhNTgxYzg3NWY1ZDFjMWM4MDFkNjRlNWY=", "commit": {"author": {"name": "Mike Hommey", "email": "mh@glandium.org", "date": "2016-07-12T05:37:04Z"}, "committer": {"name": "Mike Hommey", "email": "mh@glandium.org", "date": "2016-07-12T05:39:16Z"}, "message": "doc: Mention that writeln! and println! always use LF\n\nFixes #34697", "tree": {"sha": "da310077733e2cb410c4c450be9e1fb3ee427ba5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da310077733e2cb410c4c450be9e1fb3ee427ba5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bfaa43eed7ea88fa581c875f5d1c1c801d64e5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bfaa43eed7ea88fa581c875f5d1c1c801d64e5f", "html_url": "https://github.com/rust-lang/rust/commit/4bfaa43eed7ea88fa581c875f5d1c1c801d64e5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bfaa43eed7ea88fa581c875f5d1c1c801d64e5f/comments", "author": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3265bd54b5b3f32d038273afec7554f007a5ce1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3265bd54b5b3f32d038273afec7554f007a5ce1d", "html_url": "https://github.com/rust-lang/rust/commit/3265bd54b5b3f32d038273afec7554f007a5ce1d"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "43868d124a22e00c69ac67e781e0d7b0c84ba114", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bfaa43eed7ea88fa581c875f5d1c1c801d64e5f/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bfaa43eed7ea88fa581c875f5d1c1c801d64e5f/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=4bfaa43eed7ea88fa581c875f5d1c1c801d64e5f", "patch": "@@ -238,6 +238,8 @@ macro_rules! write {\n }\n \n /// Use the `format!` syntax to write data into a buffer, appending a newline.\n+/// On all platforms, the newline is the LINE FEED character (`\\n`/`U+000A`)\n+/// alone (no additional CARRIAGE RETURN (`\\r`/`U+000D`).\n ///\n /// This macro is typically used with a buffer of `&mut `[`Write`][write].\n ///"}, {"sha": "6f0f6ecab5ba8271c479a9d674b1dee8b76ae70c", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4bfaa43eed7ea88fa581c875f5d1c1c801d64e5f/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bfaa43eed7ea88fa581c875f5d1c1c801d64e5f/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=4bfaa43eed7ea88fa581c875f5d1c1c801d64e5f", "patch": "@@ -98,7 +98,9 @@ macro_rules! print {\n     ($($arg:tt)*) => ($crate::io::_print(format_args!($($arg)*)));\n }\n \n-/// Macro for printing to the standard output, with a newline.\n+/// Macro for printing to the standard output, with a newline. On all\n+/// platforms, the newline is the LINE FEED character (`\\n`/`U+000A`) alone\n+/// (no additional CARRIAGE RETURN (`\\r`/`U+000D`).\n ///\n /// Use the `format!` syntax to write data to the standard output.\n /// See `std::fmt` for more information."}]}