{"sha": "88aa75ba8e88666a78cf703f004e480471ceea90", "node_id": "C_kwDOAAsO6NoAKDg4YWE3NWJhOGU4ODY2NmE3OGNmNzAzZjAwNGU0ODA0NzFjZWVhOTA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-03T10:02:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-03T10:02:56Z"}, "message": "Rollup merge of #94544 - mark-i-m:macro-comments, r=petrochenkov\n\nAdd some examples to comments in mbe code\n\nI found these things non-obvious when re-familiarizing myself with the code.\n\nr? `@petrochenkov`", "tree": {"sha": "995e3fa69bd6b31587cf138f51b7441aadf188e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/995e3fa69bd6b31587cf138f51b7441aadf188e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88aa75ba8e88666a78cf703f004e480471ceea90", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiIJJQCRBK7hj4Ov3rIwAAcfAIAHA9XD8UNkXzPJpF2nXh7kbp\nzrdVWN+KzMs9rBpZM9542g49sRZJeK1MejiTx7aTyc1Ezx9ZQIIfEG0GQib/9QrS\neVAarFUIUnYBWNuKy52hS0WKq334ImiHbLmocSx+cLjFkL7wp2kL2GYEj0bskBhO\nhei2PJMTtcfW1/yNrtOPY7AyMzUHkMXDCOVAyIhzVYQx7uxibGshojtYmTUAEeX9\nS63QsS5lRaAftECAToxzQA3qWkkCAXawzkASCY61/p5s/ZErZsHedFNoDM46t2TK\n1pnxSMXJTwrmmzFrQSX5nP9eCaM3erNFZnVIQGUTp9q/3jCetjBR9ZetF225xew=\n=IgLq\n-----END PGP SIGNATURE-----\n", "payload": "tree 995e3fa69bd6b31587cf138f51b7441aadf188e3\nparent 98c9ee891768d815ae21404e7132232276661d68\nparent 88b99224c1f59bef4f62aab5120f08dbd3c011c9\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1646301776 +0100\ncommitter GitHub <noreply@github.com> 1646301776 +0100\n\nRollup merge of #94544 - mark-i-m:macro-comments, r=petrochenkov\n\nAdd some examples to comments in mbe code\n\nI found these things non-obvious when re-familiarizing myself with the code.\n\nr? `@petrochenkov`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88aa75ba8e88666a78cf703f004e480471ceea90", "html_url": "https://github.com/rust-lang/rust/commit/88aa75ba8e88666a78cf703f004e480471ceea90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88aa75ba8e88666a78cf703f004e480471ceea90/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98c9ee891768d815ae21404e7132232276661d68", "url": "https://api.github.com/repos/rust-lang/rust/commits/98c9ee891768d815ae21404e7132232276661d68", "html_url": "https://github.com/rust-lang/rust/commit/98c9ee891768d815ae21404e7132232276661d68"}, {"sha": "88b99224c1f59bef4f62aab5120f08dbd3c011c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/88b99224c1f59bef4f62aab5120f08dbd3c011c9", "html_url": "https://github.com/rust-lang/rust/commit/88b99224c1f59bef4f62aab5120f08dbd3c011c9"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "a419612e315df2fea566a58fe2f299a007ef90e5", "filename": "compiler/rustc_expand/src/mbe/macro_parser.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/88aa75ba8e88666a78cf703f004e480471ceea90/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88aa75ba8e88666a78cf703f004e480471ceea90/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs?ref=88aa75ba8e88666a78cf703f004e480471ceea90", "patch": "@@ -345,6 +345,38 @@ fn initial_matcher_pos<'root, 'tt>(ms: &'tt [TokenTree]) -> MatcherPos<'root, 't\n /// token tree. The depth of the `NamedMatch` structure will therefore depend\n /// only on the nesting depth of `ast::TTSeq`s in the originating\n /// token tree it was derived from.\n+///\n+/// In layman's terms: `NamedMatch` will form a tree representing nested matches of a particular\n+/// meta variable. For example, if we are matching the following macro against the following\n+/// invocation...\n+///\n+/// ```rust\n+/// macro_rules! foo {\n+///   ($($($x:ident),+);+) => {}\n+/// }\n+///\n+/// foo!(a, b, c, d; a, b, c, d, e);\n+/// ```\n+///\n+/// Then, the tree will have the following shape:\n+///\n+/// ```rust\n+/// MatchedSeq([\n+///   MatchedSeq([\n+///     MatchedNonterminal(a),\n+///     MatchedNonterminal(b),\n+///     MatchedNonterminal(c),\n+///     MatchedNonterminal(d),\n+///   ]),\n+///   MatchedSeq([\n+///     MatchedNonterminal(a),\n+///     MatchedNonterminal(b),\n+///     MatchedNonterminal(c),\n+///     MatchedNonterminal(d),\n+///     MatchedNonterminal(e),\n+///   ])\n+/// ])\n+/// ```\n #[derive(Debug, Clone)]\n crate enum NamedMatch {\n     MatchedSeq(Lrc<NamedMatchVec>),"}, {"sha": "54000527c15b9bf240b240e8ddd87ec92bbb0911", "filename": "compiler/rustc_expand/src/mbe/transcribe.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/88aa75ba8e88666a78cf703f004e480471ceea90/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88aa75ba8e88666a78cf703f004e480471ceea90/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs?ref=88aa75ba8e88666a78cf703f004e480471ceea90", "patch": "@@ -358,6 +358,12 @@ impl LockstepIterSize {\n /// Note that if `repeats` does not match the exact correct depth of a meta-var,\n /// `lookup_cur_matched` will return `None`, which is why this still works even in the presence of\n /// multiple nested matcher sequences.\n+///\n+/// Example: `$($($x $y)+*);+` -- we need to make sure that `x` and `y` repeat the same amount as\n+/// each other at the given depth when the macro was invoked. If they don't it might mean they were\n+/// declared at unequal depths or there was a compile bug. For example, if we have 3 repetitions of\n+/// the outer sequence and 4 repetitions of the inner sequence for `x`, we should have the same for\n+/// `y`; otherwise, we can't transcribe them both at the given depth.\n fn lockstep_iter_size(\n     tree: &mbe::TokenTree,\n     interpolations: &FxHashMap<MacroRulesNormalizedIdent, NamedMatch>,"}]}