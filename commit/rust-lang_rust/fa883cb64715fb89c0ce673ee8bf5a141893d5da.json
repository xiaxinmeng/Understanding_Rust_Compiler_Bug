{"sha": "fa883cb64715fb89c0ce673ee8bf5a141893d5da", "node_id": "C_kwDOAAsO6NoAKGZhODgzY2I2NDcxNWZiODljMGNlNjczZWU4YmY1YTE0MTg5M2Q1ZGE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-20T16:04:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-20T16:04:23Z"}, "message": "Auto merge of #12834 - fasterthanlime:proc-macro-test-toolchain, r=Veykril\n\nAdd PROC_MACRO_TEST_TOOLCHAIN environment variable\n\nThis allows overriding the toolchain used to run `proc-macro-srv` tests.\n\n---\n\nSample usage.\n\nTesting the current ABI (variable unset/empty):\n\n```shell\namos@tails ~/bearcove/rust-analyzer/crates/proc-macro-srv proc-macro-test-toolchain*\n\u276f PROC_MACRO_TEST_TOOLCHAIN=\"\" cargo test --quiet\n\nrunning 16 tests\n................\ntest result: ok. 16 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n```\n\nTesting an older ABI:\n\n```shell\namos@tails ~/bearcove/rust-analyzer/crates/proc-macro-srv proc-macro-test-toolchain*\n\u276f PROC_MACRO_TEST_TOOLCHAIN=\"1.58\" cargo test --quiet\n\nrunning 16 tests\n................\ntest result: ok. 16 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n```\n\nTesting current nightly ABI:\n\n```shell\n\u276f rustc +nightly --version\nrustc 1.64.0-nightly (f8588549c 2022-07-18)\n\n\u276f PROC_MACRO_TEST_TOOLCHAIN=\"nightly\" cargo test --quiet\n\nrunning 16 tests\n................\ntest result: ok. 16 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n```\n\nTesting future ABI (`rust-lang/rust` master):\n\n```shell\namos@tails ~/bearcove/rust-analyzer/crates/proc-macro-srv proc-macro-test-toolchain\n\u276f PROC_MACRO_TEST_TOOLCHAIN=\"stage1\" cargo test --quiet\n\nrunning 16 tests\n..........thread '<unnamed>' panicked at 'range end index 216221164920373249 out of range for slice of length 18', library/core/src/slice/index.rs:73:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n....F.\nfailures:\n\n---- tests::test_fn_like_macro2 stdout ----\nthread 'tests::test_fn_like_macro2' panicked at 'called `Result::unwrap()` on an `Err` value: \"range end index 216221164920373249 out of range for slice of length 18\"', crates/proc-macro-srv/src/tests/utils.rs:38:83\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\nfailures:\n    tests::test_fn_like_macro2\n\ntest result: FAILED. 15 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\nerror: test failed, to rerun pass '--lib\n```\n\n---\n\nTagging `@jonas-schievink:` this might be helpful when updating versioned ABIs later on.", "tree": {"sha": "d38ebe8d0914b5ac20cf5e3f51e4d46070a18c43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d38ebe8d0914b5ac20cf5e3f51e4d46070a18c43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa883cb64715fb89c0ce673ee8bf5a141893d5da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa883cb64715fb89c0ce673ee8bf5a141893d5da", "html_url": "https://github.com/rust-lang/rust/commit/fa883cb64715fb89c0ce673ee8bf5a141893d5da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa883cb64715fb89c0ce673ee8bf5a141893d5da/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd2c2406c0c5a11d3e998998845ca5c8be683676", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd2c2406c0c5a11d3e998998845ca5c8be683676", "html_url": "https://github.com/rust-lang/rust/commit/cd2c2406c0c5a11d3e998998845ca5c8be683676"}, {"sha": "dcd52ec327a72ed0ff9708b84e8384591f697224", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcd52ec327a72ed0ff9708b84e8384591f697224", "html_url": "https://github.com/rust-lang/rust/commit/dcd52ec327a72ed0ff9708b84e8384591f697224"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "cd99eea5ae3f968028709cb7f76e728123417ed9", "filename": "crates/proc-macro-test/build.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fa883cb64715fb89c0ce673ee8bf5a141893d5da/crates%2Fproc-macro-test%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa883cb64715fb89c0ce673ee8bf5a141893d5da/crates%2Fproc-macro-test%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-test%2Fbuild.rs?ref=fa883cb64715fb89c0ce673ee8bf5a141893d5da", "patch": "@@ -2,6 +2,10 @@\n //! `OUT_DIR`.\n //!\n //! `proc-macro-test` itself contains only a path to that artifact.\n+//!\n+//! The `PROC_MACRO_TEST_TOOLCHAIN` environment variable can be exported to use\n+//! a specific rustup toolchain: this allows testing against older ABIs (e.g.\n+//! 1.58) and future ABIs (stage1, nightly)\n \n use std::{\n     env, fs,\n@@ -13,6 +17,7 @@ use cargo_metadata::Message;\n \n fn main() {\n     println!(\"cargo:rerun-if-changed=imp\");\n+    println!(\"cargo:rerun-if-env-changed=PROC_MACRO_TEST_TOOLCHAIN\");\n \n     let out_dir = env::var_os(\"OUT_DIR\").unwrap();\n     let out_dir = Path::new(&out_dir);\n@@ -47,7 +52,17 @@ fn main() {\n     }\n \n     let target_dir = out_dir.join(\"target\");\n-    let output = Command::new(toolchain::cargo())\n+\n+    let mut cmd = if let Ok(toolchain) = std::env::var(\"PROC_MACRO_TEST_TOOLCHAIN\") {\n+        // leverage rustup to find user-specific toolchain\n+        let mut cmd = Command::new(\"cargo\");\n+        cmd.arg(format!(\"+{toolchain}\"));\n+        cmd\n+    } else {\n+        Command::new(toolchain::cargo())\n+    };\n+\n+    let output = cmd\n         .current_dir(&staging_dir)\n         .args(&[\"build\", \"-p\", \"proc-macro-test-impl\", \"--message-format\", \"json\"])\n         // Explicit override the target directory to avoid using the same one which the parent"}]}