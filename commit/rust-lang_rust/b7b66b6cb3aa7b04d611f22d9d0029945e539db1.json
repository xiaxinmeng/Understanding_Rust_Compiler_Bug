{"sha": "b7b66b6cb3aa7b04d611f22d9d0029945e539db1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3YjY2YjZjYjNhYTdiMDRkNjExZjIyZDlkMDAyOTk0NWU1MzlkYjE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-29T06:18:36Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-29T07:20:05Z"}, "message": "core: Don't call into the runtime to reserve if we have capacity", "tree": {"sha": "9d024899590b504938b858fb463ff8f6e9e2491f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d024899590b504938b858fb463ff8f6e9e2491f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7b66b6cb3aa7b04d611f22d9d0029945e539db1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7b66b6cb3aa7b04d611f22d9d0029945e539db1", "html_url": "https://github.com/rust-lang/rust/commit/b7b66b6cb3aa7b04d611f22d9d0029945e539db1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7b66b6cb3aa7b04d611f22d9d0029945e539db1/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0a99790cb5cf3ba54954b1b8f7c04f54c42f984", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0a99790cb5cf3ba54954b1b8f7c04f54c42f984", "html_url": "https://github.com/rust-lang/rust/commit/c0a99790cb5cf3ba54954b1b8f7c04f54c42f984"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "d8f0b20062afd94200c0ae1ed87b3042c016aee7", "filename": "src/libcore/str.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7b66b6cb3aa7b04d611f22d9d0029945e539db1/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7b66b6cb3aa7b04d611f22d9d0029945e539db1/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=b7b66b6cb3aa7b04d611f22d9d0029945e539db1", "patch": "@@ -1504,7 +1504,9 @@ capacity, then no action is taken.\n * n - The number of bytes to reserve space for\n \"]\n fn reserve(&s: str, n: uint) {\n-    rustrt::str_reserve_shared(s, n);\n+    if capacity(s) < n {\n+        rustrt::str_reserve_shared(s, n);\n+    }\n }\n \n #[doc = \""}, {"sha": "13c1fccc81a6cfd49d3d6119e6ea1e6ee42b1bcc", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b7b66b6cb3aa7b04d611f22d9d0029945e539db1/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7b66b6cb3aa7b04d611f22d9d0029945e539db1/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=b7b66b6cb3aa7b04d611f22d9d0029945e539db1", "patch": "@@ -113,7 +113,10 @@ capacity, then no action is taken.\n * n - The number of elements to reserve space for\n \"]\n fn reserve<T>(&v: [const T], n: uint) {\n-    rustrt::vec_reserve_shared(sys::get_type_desc::<T>(), v, n);\n+    // Only make the (slow) call into the runtime if we have to\n+    if capacity(v) < n {\n+        rustrt::vec_reserve_shared(sys::get_type_desc::<T>(), v, n);\n+    }\n }\n \n #[doc = \""}]}