{"sha": "5dfe101e5197d6854aa1d8c9907ac7851468d468", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZmUxMDFlNTE5N2Q2ODU0YWExZDhjOTkwN2FjNzg1MTQ2OGQ0Njg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-25T08:30:23Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-25T08:33:00Z"}, "message": "Revert \"Add intrinsic calling convention.\" Isn't going to work.\n\nThis reverts commit 72c6c60d80cdfe63af5046a1a98549f0515734f2.", "tree": {"sha": "bc79379b40692defb68469bd7af78c1d67901de8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc79379b40692defb68469bd7af78c1d67901de8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dfe101e5197d6854aa1d8c9907ac7851468d468", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dfe101e5197d6854aa1d8c9907ac7851468d468", "html_url": "https://github.com/rust-lang/rust/commit/5dfe101e5197d6854aa1d8c9907ac7851468d468", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dfe101e5197d6854aa1d8c9907ac7851468d468/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "287d69ddacba3f5945b70695fb721b2f055d3ee6", "url": "https://api.github.com/repos/rust-lang/rust/commits/287d69ddacba3f5945b70695fb721b2f055d3ee6", "html_url": "https://github.com/rust-lang/rust/commit/287d69ddacba3f5945b70695fb721b2f055d3ee6"}], "stats": {"total": 36, "additions": 2, "deletions": 34}, "files": [{"sha": "fc1f732c025daa72daa329f6304f7ec850561c88", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5dfe101e5197d6854aa1d8c9907ac7851468d468/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/5dfe101e5197d6854aa1d8c9907ac7851468d468/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=5dfe101e5197d6854aa1d8c9907ac7851468d468", "patch": "@@ -4525,12 +4525,10 @@ let trans_visitor\n                              [| Asm.WORD (word_ty_mach, Asm.IMM 0L) |]))\n   in\n \n-  let trans_real_required_fn\n-      (fnid:node_id)\n-      (blockid:node_id) : unit =\n-    let (ilib, conv) = Hashtbl.find cx.ctxt_required_items fnid in\n+  let trans_required_fn (fnid:node_id) (blockid:node_id) : unit =\n     trans_frame_entry fnid;\n     emit (Il.Enter (Hashtbl.find cx.ctxt_block_fixups blockid));\n+    let (ilib, conv) = Hashtbl.find cx.ctxt_required_items fnid in\n     let lib_num =\n       htab_search_or_add cx.ctxt_required_lib_num ilib\n         (fun _ -> Hashtbl.length cx.ctxt_required_lib_num)\n@@ -4657,12 +4655,6 @@ let trans_visitor\n             \"Trans.required_rust_fn on unexpected form of require library\"\n   in\n \n-  let trans_required_fn (fnid:node_id) (blockid:node_id) : unit =\n-    if fn_is_intrinsic cx fnid\n-    then ()\n-    else trans_real_required_fn fnid blockid\n-  in\n-\n   let trans_tag\n       (n:Ast.ident)\n       (tagid:node_id)"}, {"sha": "c430e034ca99573f3a3fbd98c8eea85a0b4c42d2", "filename": "src/boot/me/transutil.ml", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5dfe101e5197d6854aa1d8c9907ac7851468d468/src%2Fboot%2Fme%2Ftransutil.ml", "raw_url": "https://github.com/rust-lang/rust/raw/5dfe101e5197d6854aa1d8c9907ac7851468d468/src%2Fboot%2Fme%2Ftransutil.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftransutil.ml?ref=5dfe101e5197d6854aa1d8c9907ac7851468d468", "patch": "@@ -225,28 +225,6 @@ let iter_rec_slots\n     (Array.map snd entries) f curr_iso\n ;;\n \n-let intrinsic_name (cx:ctxt) (fnid:node_id) : string =\n-  match Hashtbl.find cx.ctxt_all_item_names fnid with\n-      Ast.NAME_base (Ast.BASE_ident id) -> id\n-    | Ast.NAME_base (Ast.BASE_app (id, _)) -> id\n-    | Ast.NAME_ext (_, Ast.COMP_ident id) -> id\n-    | Ast.NAME_ext (_, Ast.COMP_app (id, _)) -> id\n-    | _ -> err (Some fnid) \"unexpected name for intrinsic fn\"\n-;;\n-\n-let fn_is_intrinsic (cx:ctxt) (fnid:node_id) : bool =\n-  let (_, conv) = Hashtbl.find cx.ctxt_required_items fnid in\n-    conv = CONV_intrinsic\n-;;\n-\n-let lval_is_intrinsic (cx:ctxt) (lval:Ast.lval) : bool =\n-  let item = lval_item cx lval in\n-    match item.node.Ast.decl_item with\n-        Ast.MOD_ITEM_fn _\n-          when Hashtbl.mem cx.ctxt_required_items item.id ->\n-            fn_is_intrinsic cx item.id\n-      | _ -> false\n-;;\n \n \n "}, {"sha": "f33a6ea16495fe19bcba5cf772268996d3d46f15", "filename": "src/boot/util/common.ml", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5dfe101e5197d6854aa1d8c9907ac7851468d468/src%2Fboot%2Futil%2Fcommon.ml", "raw_url": "https://github.com/rust-lang/rust/raw/5dfe101e5197d6854aa1d8c9907ac7851468d468/src%2Fboot%2Futil%2Fcommon.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Futil%2Fcommon.ml?ref=5dfe101e5197d6854aa1d8c9907ac7851468d468", "patch": "@@ -105,7 +105,6 @@ type ty_param_idx = int\n type nabi_conv =\n     CONV_rust\n   | CONV_cdecl\n-  | CONV_intrinsic\n ;;\n \n type nabi = { nabi_indirect: bool;\n@@ -116,7 +115,6 @@ let string_to_conv (a:string) : nabi_conv option =\n   match a with\n       \"cdecl\" -> Some CONV_cdecl\n     | \"rust\" -> Some CONV_rust\n-    | \"intrinsic\" -> Some CONV_intrinsic\n     | _ -> None\n \n (* FIXME: remove this when native items go away. *)"}]}