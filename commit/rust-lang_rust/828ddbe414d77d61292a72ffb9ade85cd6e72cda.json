{"sha": "828ddbe414d77d61292a72ffb9ade85cd6e72cda", "node_id": "C_kwDOAAsO6NoAKDgyOGRkYmU0MTRkNzdkNjEyOTJhNzJmZmI5YWRlODVjZDZlNzJjZGE", "commit": {"author": {"name": "Elliot Bobrow", "email": "elliotgreybobrow@gmail.com", "date": "2021-12-29T16:52:40Z"}, "committer": {"name": "Elliot Bobrow", "email": "elliotgreybobrow@gmail.com", "date": "2021-12-29T17:05:04Z"}, "message": "fix [`redundant_closure`] fp with `Arc`", "tree": {"sha": "d4e182b94283b06fa6b72967d9c58cf3583554c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4e182b94283b06fa6b72967d9c58cf3583554c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/828ddbe414d77d61292a72ffb9ade85cd6e72cda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/828ddbe414d77d61292a72ffb9ade85cd6e72cda", "html_url": "https://github.com/rust-lang/rust/commit/828ddbe414d77d61292a72ffb9ade85cd6e72cda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/828ddbe414d77d61292a72ffb9ade85cd6e72cda/comments", "author": {"login": "ebobrow", "id": 77182873, "node_id": "MDQ6VXNlcjc3MTgyODcz", "avatar_url": "https://avatars.githubusercontent.com/u/77182873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebobrow", "html_url": "https://github.com/ebobrow", "followers_url": "https://api.github.com/users/ebobrow/followers", "following_url": "https://api.github.com/users/ebobrow/following{/other_user}", "gists_url": "https://api.github.com/users/ebobrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebobrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebobrow/subscriptions", "organizations_url": "https://api.github.com/users/ebobrow/orgs", "repos_url": "https://api.github.com/users/ebobrow/repos", "events_url": "https://api.github.com/users/ebobrow/events{/privacy}", "received_events_url": "https://api.github.com/users/ebobrow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebobrow", "id": 77182873, "node_id": "MDQ6VXNlcjc3MTgyODcz", "avatar_url": "https://avatars.githubusercontent.com/u/77182873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebobrow", "html_url": "https://github.com/ebobrow", "followers_url": "https://api.github.com/users/ebobrow/followers", "following_url": "https://api.github.com/users/ebobrow/following{/other_user}", "gists_url": "https://api.github.com/users/ebobrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebobrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebobrow/subscriptions", "organizations_url": "https://api.github.com/users/ebobrow/orgs", "repos_url": "https://api.github.com/users/ebobrow/repos", "events_url": "https://api.github.com/users/ebobrow/events{/privacy}", "received_events_url": "https://api.github.com/users/ebobrow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1cd64b9c6b29ed2a577fc174a50c76267a966e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1cd64b9c6b29ed2a577fc174a50c76267a966e2", "html_url": "https://github.com/rust-lang/rust/commit/c1cd64b9c6b29ed2a577fc174a50c76267a966e2"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "b22515a39079a2518ece04f75e10d3601e235fc2", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/828ddbe414d77d61292a72ffb9ade85cd6e72cda/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ddbe414d77d61292a72ffb9ade85cd6e72cda/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=828ddbe414d77d61292a72ffb9ade85cd6e72cda", "patch": "@@ -1,6 +1,7 @@\n use clippy_utils::diagnostics::{span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::higher::VecArgs;\n use clippy_utils::source::snippet_opt;\n+use clippy_utils::ty::is_type_diagnostic_item;\n use clippy_utils::usage::local_used_after_expr;\n use clippy_utils::{get_enclosing_loop_or_closure, higher, path_to_local, path_to_local_id};\n use if_chain::if_chain;\n@@ -12,6 +13,7 @@ use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow};\n use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, ClosureKind, Ty, TypeFoldable};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::symbol::sym;\n \n declare_clippy_lint! {\n     /// ### What it does\n@@ -113,6 +115,9 @@ impl<'tcx> LateLintPass<'tcx> for EtaReduction {\n             // A type param function ref like `T::f` is not 'static, however\n             // it is if cast like `T::f as fn()`. This seems like a rustc bug.\n             if !substs.types().any(|t| matches!(t.kind(), ty::Param(_)));\n+            let callee_ty_unadjusted = cx.typeck_results().expr_ty(callee).peel_refs();\n+            if !is_type_diagnostic_item(cx, callee_ty_unadjusted, sym::Arc);\n+            if !is_type_diagnostic_item(cx, callee_ty_unadjusted, sym::Rc);\n             then {\n                 span_lint_and_then(cx, REDUNDANT_CLOSURE, expr.span, \"redundant closure\", |diag| {\n                     if let Some(mut snippet) = snippet_opt(cx, callee.span) {"}, {"sha": "f938f7106884416bb1d748f94f90a85a85ac131d", "filename": "tests/ui/eta.fixed", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/828ddbe414d77d61292a72ffb9ade85cd6e72cda/tests%2Fui%2Feta.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/828ddbe414d77d61292a72ffb9ade85cd6e72cda/tests%2Fui%2Feta.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.fixed?ref=828ddbe414d77d61292a72ffb9ade85cd6e72cda", "patch": "@@ -248,3 +248,14 @@ mod type_param_bound {\n         take(X::fun as fn());\n     }\n }\n+\n+// #8073 Don't replace closure with `Arc<F>` or `Rc<F>`\n+fn arc_fp() {\n+    let rc = std::rc::Rc::new(|| 7);\n+    let arc = std::sync::Arc::new(|n| n + 1);\n+    let ref_arc = &std::sync::Arc::new(|_| 5);\n+\n+    true.then(|| rc());\n+    (0..5).map(|n| arc(n));\n+    Some(4).map(|n| ref_arc(n));\n+}"}, {"sha": "075bbc74922f91fa18b1ace10ec3689212e00a72", "filename": "tests/ui/eta.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/828ddbe414d77d61292a72ffb9ade85cd6e72cda/tests%2Fui%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ddbe414d77d61292a72ffb9ade85cd6e72cda/tests%2Fui%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.rs?ref=828ddbe414d77d61292a72ffb9ade85cd6e72cda", "patch": "@@ -248,3 +248,14 @@ mod type_param_bound {\n         take(X::fun as fn());\n     }\n }\n+\n+// #8073 Don't replace closure with `Arc<F>` or `Rc<F>`\n+fn arc_fp() {\n+    let rc = std::rc::Rc::new(|| 7);\n+    let arc = std::sync::Arc::new(|n| n + 1);\n+    let ref_arc = &std::sync::Arc::new(|_| 5);\n+\n+    true.then(|| rc());\n+    (0..5).map(|n| arc(n));\n+    Some(4).map(|n| ref_arc(n));\n+}"}]}