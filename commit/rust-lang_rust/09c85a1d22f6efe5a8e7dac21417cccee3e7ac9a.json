{"sha": "09c85a1d22f6efe5a8e7dac21417cccee3e7ac9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5Yzg1YTFkMjJmNmVmZTVhOGU3ZGFjMjE0MTdjY2NlZTNlN2FjOWE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-19T17:13:44Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-20T03:59:17Z"}, "message": "Rollup merge of #58565 - thomaseizinger:typo-future-docs, r=frewsxcv\n\nFix typo in std::future::Future docs\n\nI am not quite sure if this is actually a typo but\n\n1. to me the sentence doesn't make sense if it says \"expect\"\n2. I hope that `Future`s are not really allowed to cause memory unsafety if they are polled after completion.", "tree": {"sha": "2e98d6f2ebb7a6f8c6bcccb572c0d4167b4f647f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e98d6f2ebb7a6f8c6bcccb572c0d4167b4f647f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09c85a1d22f6efe5a8e7dac21417cccee3e7ac9a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlxs0JUACgkQ/vbIBR0O\nATzMKxAAitXU6xTBqAGRfZXVWVccycVaoWv6HGSH3TXvvLUSFtq8HFkUU9GBmbKf\nISlIT8KSoefdl9rZ7zaD6GRGYHZtSi+58s6Hadu9fLGU6pNPq/kJkCi5JIrthDV0\n7RH8aRFJlMy0ZJKS5ou8JCnTJZpuQbL5s7wK/7XQqSTVKNdm+E9r5rs/NF4UFQYo\nHqPoaLU15FBkbrCx0p5n5FPANvoSbPkSzoqvedGzZswtA5VCL2cYORQ8FdumDGAb\nkg/6TRNWysVf7b/tX1tKyhYNszllwPPhyTMll3oNPvsuuH3CHx3bCwfbWXFXTH5P\nL2WhbVXxjGZr65CcO8ThzPpsAH2Kdy84NX03P4L36Oo3dDLS5cd5FS36fGOw9iax\nHc5ID+rRsX0ODQFzBm/CFUECOr0rle7YuF7hc8fD9xSaobW2YkWgS/YK1HUk1u1L\nVbCQg7d0TaIaGh5Zw+CKGLTJm6vmSuAjbJe+E6zrDWmmeBzpbosRp119DtD26twn\ncCKcE4rWBfHG7k5YkpVQYaxJZIhTRcMUu9YkRn9O0PsOanvyRMaaUhEJoQxPEPbF\n6iO/yrwS+NyD74Vd8/OSpZ3HnVRZ7svuYiSEqlGqEUelmJVWINVtyupPM8xurKdp\nKWSgntM2E3yaaTLHkNJSJY/EULorTfVw+KlpHguHdBPsLbTof+c=\n=05We\n-----END PGP SIGNATURE-----", "payload": "tree 2e98d6f2ebb7a6f8c6bcccb572c0d4167b4f647f\nparent 6e991011dcb47c00cb44bc3427c22fca3b127414\nparent 75c541f228be5c76e2b81971b4f11fd537b83eee\nauthor kennytm <kennytm@gmail.com> 1550596424 +0800\ncommitter kennytm <kennytm@gmail.com> 1550635157 +0800\n\nRollup merge of #58565 - thomaseizinger:typo-future-docs, r=frewsxcv\n\nFix typo in std::future::Future docs\n\nI am not quite sure if this is actually a typo but\n\n1. to me the sentence doesn't make sense if it says \"expect\"\n2. I hope that `Future`s are not really allowed to cause memory unsafety if they are polled after completion.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09c85a1d22f6efe5a8e7dac21417cccee3e7ac9a", "html_url": "https://github.com/rust-lang/rust/commit/09c85a1d22f6efe5a8e7dac21417cccee3e7ac9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09c85a1d22f6efe5a8e7dac21417cccee3e7ac9a/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e991011dcb47c00cb44bc3427c22fca3b127414", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e991011dcb47c00cb44bc3427c22fca3b127414", "html_url": "https://github.com/rust-lang/rust/commit/6e991011dcb47c00cb44bc3427c22fca3b127414"}, {"sha": "75c541f228be5c76e2b81971b4f11fd537b83eee", "url": "https://api.github.com/repos/rust-lang/rust/commits/75c541f228be5c76e2b81971b4f11fd537b83eee", "html_url": "https://github.com/rust-lang/rust/commit/75c541f228be5c76e2b81971b4f11fd537b83eee"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "84e7147153e9edccd89c2ae932abd387e4ebcc9d", "filename": "src/libcore/future/future.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09c85a1d22f6efe5a8e7dac21417cccee3e7ac9a/src%2Flibcore%2Ffuture%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09c85a1d22f6efe5a8e7dac21417cccee3e7ac9a/src%2Flibcore%2Ffuture%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffuture%2Ffuture.rs?ref=09c85a1d22f6efe5a8e7dac21417cccee3e7ac9a", "patch": "@@ -81,7 +81,7 @@ pub trait Future {\n     ///\n     /// Once a future has completed (returned `Ready` from `poll`),\n     /// then any future calls to `poll` may panic, block forever, or otherwise\n-    /// cause any kind of bad behavior expect causing memory unsafety.\n+    /// cause any kind of bad behavior except causing memory unsafety.\n     /// The `Future` trait itself provides no guarantees about the behavior\n     /// of `poll` after a future has completed.\n     ///"}]}