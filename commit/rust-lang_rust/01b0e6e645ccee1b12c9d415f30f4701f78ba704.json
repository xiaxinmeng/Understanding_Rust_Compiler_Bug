{"sha": "01b0e6e645ccee1b12c9d415f30f4701f78ba704", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxYjBlNmU2NDVjY2VlMWIxMmM5ZDQxNWYzMGY0NzAxZjc4YmE3MDQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-04T21:13:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-04T21:13:37Z"}, "message": "Rollup merge of #84942 - jyn514:channel-replace, r=Manishearth\n\nrustdoc: link to stable/beta docs consistently in documentation\n\nThis is an alternative to https://github.com/rust-lang/rust/pull/84941 which fixes the problem consistently by linking to stable/beta for *all* items, not just for primitives.\n\n ## User-facing changes\n\n- Intra-doc links to primitives that currently go to rust-lang.org/nightly/std/primitive.x.html will start going to channel that rustdoc was built with. Nightly will continue going to /nightly; Beta will link to /beta; stable compilers will link to /1.52.1 (or whatever version they were built as).\n- Cross-crate links from std to core currently go to /nightly unconditionally. They will start going to /1.52.0 on stable channels (but remain the same on nightly channels).\n- Intra-crate links from std to std (or core to core) currently go to the same URL they are hosted at; they will continue to do so. Notably, this is different from everything else because it can preserve the distinction between /stable and /1.52.0 by using relative links.\n\nNote that \"links\" includes both intra-doc links and rustdoc's own\nautomatically generated hyperlinks.\n\n ## Implementation changes\n\n- Update the testsuite to allow linking to /beta and /1.52.1 in docs\n- Use an html_root_url for the standard library that's dependent on the channel\n\n  This avoids linking to nightly docs on stable.\n\n- Update rustdoc to use channel-dependent links for primitives from an\n  unknown crate\n\n- Set DOC_RUST_LANG_ORG_CHANNEL from bootstrap to ensure it's in sync\n- Include doc.rust-lang.org in the channel\n\ncc Mark-Simulacrum - I know [you were dubious about this in the past](https://rust-lang.zulipchat.com/#narrow/stream/122651-general/topic/Rustdoc.20unconditionally.20links.20to.20nightly.20libstd.20docs/near/231223124), but I'm not quite sure why? I see this as \"just a bugfix\", I don't know why rustdoc should unconditionally link to nightly.\ncc dtolnay who commented in https://github.com/rust-lang/rust/issues/30693:\n\n>  I would welcome a PR to solve this permanently if anyone has ideas for how. I don't believe we need an RFC.\n\nFixes https://github.com/rust-lang/rust/issues/30693 (note that issue is marked as feature-accepted, although I don't see where it was discussed).", "tree": {"sha": "d79ac0d3593a79b549f5c0f8dec34c6f96528b8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d79ac0d3593a79b549f5c0f8dec34c6f96528b8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01b0e6e645ccee1b12c9d415f30f4701f78ba704", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgupeBCRBK7hj4Ov3rIwAAAvYIAGf5GSmaFc6PzXZ9Vk8fdLXY\n9rvXrvFWIN2aHpEzsSev16j+G5sYULaC7Mrhfehzg0ua+FP9+QkHvG6mrPB+O7cI\nLavF7XTtFOOuWyxXiV5bRn1wglfV61nkO5tHb+bhWPJd4Aghgr+zSoIeiFA+qUvy\nL+1pXSzoP4gqMIjMnZiQ2X0x01rAokTpiwC0ANWFyfmRn1YaHqBev+Wu72Qc7OL3\nX0QqwTqvlm3jBZjMxPoWYDeOlkQa5XFapQHPZVEtGebeO0POeX+j/+yFzvqMqieQ\nuhN0j7XpFJXOk3I6lKEPE5q0jOgsLeG8OwFFLiF/8EyppJk5U1GgglRmUVQnSfk=\n=dJRb\n-----END PGP SIGNATURE-----\n", "payload": "tree d79ac0d3593a79b549f5c0f8dec34c6f96528b8d\nparent 3a8bb38164d9681bb20d60e9fb225efe10d3c6fa\nparent 7411a9e7ccde17258ccd39990097fc12f7a76a71\nauthor Yuki Okushi <jtitor@2k36.org> 1622841217 +0900\ncommitter GitHub <noreply@github.com> 1622841217 +0900\n\nRollup merge of #84942 - jyn514:channel-replace, r=Manishearth\n\nrustdoc: link to stable/beta docs consistently in documentation\n\nThis is an alternative to https://github.com/rust-lang/rust/pull/84941 which fixes the problem consistently by linking to stable/beta for *all* items, not just for primitives.\n\n ## User-facing changes\n\n- Intra-doc links to primitives that currently go to rust-lang.org/nightly/std/primitive.x.html will start going to channel that rustdoc was built with. Nightly will continue going to /nightly; Beta will link to /beta; stable compilers will link to /1.52.1 (or whatever version they were built as).\n- Cross-crate links from std to core currently go to /nightly unconditionally. They will start going to /1.52.0 on stable channels (but remain the same on nightly channels).\n- Intra-crate links from std to std (or core to core) currently go to the same URL they are hosted at; they will continue to do so. Notably, this is different from everything else because it can preserve the distinction between /stable and /1.52.0 by using relative links.\n\nNote that \"links\" includes both intra-doc links and rustdoc's own\nautomatically generated hyperlinks.\n\n ## Implementation changes\n\n- Update the testsuite to allow linking to /beta and /1.52.1 in docs\n- Use an html_root_url for the standard library that's dependent on the channel\n\n  This avoids linking to nightly docs on stable.\n\n- Update rustdoc to use channel-dependent links for primitives from an\n  unknown crate\n\n- Set DOC_RUST_LANG_ORG_CHANNEL from bootstrap to ensure it's in sync\n- Include doc.rust-lang.org in the channel\n\ncc Mark-Simulacrum - I know [you were dubious about this in the past](https://rust-lang.zulipchat.com/#narrow/stream/122651-general/topic/Rustdoc.20unconditionally.20links.20to.20nightly.20libstd.20docs/near/231223124), but I'm not quite sure why? I see this as \"just a bugfix\", I don't know why rustdoc should unconditionally link to nightly.\ncc dtolnay who commented in https://github.com/rust-lang/rust/issues/30693:\n\n>  I would welcome a PR to solve this permanently if anyone has ideas for how. I don't believe we need an RFC.\n\nFixes https://github.com/rust-lang/rust/issues/30693 (note that issue is marked as feature-accepted, although I don't see where it was discussed).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01b0e6e645ccee1b12c9d415f30f4701f78ba704", "html_url": "https://github.com/rust-lang/rust/commit/01b0e6e645ccee1b12c9d415f30f4701f78ba704", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01b0e6e645ccee1b12c9d415f30f4701f78ba704/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a8bb38164d9681bb20d60e9fb225efe10d3c6fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a8bb38164d9681bb20d60e9fb225efe10d3c6fa", "html_url": "https://github.com/rust-lang/rust/commit/3a8bb38164d9681bb20d60e9fb225efe10d3c6fa"}, {"sha": "7411a9e7ccde17258ccd39990097fc12f7a76a71", "url": "https://api.github.com/repos/rust-lang/rust/commits/7411a9e7ccde17258ccd39990097fc12f7a76a71", "html_url": "https://github.com/rust-lang/rust/commit/7411a9e7ccde17258ccd39990097fc12f7a76a71"}], "stats": {"total": 259, "additions": 139, "deletions": 120}, "files": [{"sha": "a04e7c8a498daf7d6cda9dff39feee5a810d331d", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -59,7 +59,6 @@\n #![allow(unused_attributes)]\n #![stable(feature = \"alloc\", since = \"1.36.0\")]\n #![doc(\n-    html_root_url = \"https://doc.rust-lang.org/nightly/\",\n     html_playground_url = \"https://play.rust-lang.org/\",\n     issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\",\n     test(no_crate_inject, attr(allow(unused_variables), deny(warnings)))"}, {"sha": "6c0b9c0331e304b2d28d019ff5a99f4bbeae9839", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -51,7 +51,6 @@\n #![cfg(not(test))]\n #![stable(feature = \"core\", since = \"1.6.0\")]\n #![doc(\n-    html_root_url = \"https://doc.rust-lang.org/nightly/\",\n     html_playground_url = \"https://play.rust-lang.org/\",\n     issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\",\n     test(no_crate_inject, attr(deny(warnings))),"}, {"sha": "d95ea6530c20491e355787972093b814164acc85", "filename": "library/panic_abort/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Fpanic_abort%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Fpanic_abort%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_abort%2Fsrc%2Flib.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -5,10 +5,7 @@\n \n #![no_std]\n #![unstable(feature = \"panic_abort\", issue = \"32837\")]\n-#![doc(\n-    html_root_url = \"https://doc.rust-lang.org/nightly/\",\n-    issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\"\n-)]\n+#![doc(issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\")]\n #![panic_runtime]\n #![allow(unused_features)]\n #![feature(core_intrinsics)]"}, {"sha": "d32a3f1f8322c79aa190f62b30e7f4dd0b5c64ff", "filename": "library/panic_unwind/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Fpanic_unwind%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Fpanic_unwind%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_unwind%2Fsrc%2Flib.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -13,10 +13,7 @@\n \n #![no_std]\n #![unstable(feature = \"panic_unwind\", issue = \"32837\")]\n-#![doc(\n-    html_root_url = \"https://doc.rust-lang.org/nightly/\",\n-    issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\"\n-)]\n+#![doc(issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\")]\n #![feature(core_intrinsics)]\n #![feature(lang_items)]\n #![feature(nll)]"}, {"sha": "3990826ce42e0fe7fc411013a00dfbc4c1568f7a", "filename": "library/proc_macro/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Fproc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Fproc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Flib.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -12,7 +12,6 @@\n #![stable(feature = \"proc_macro_lib\", since = \"1.15.0\")]\n #![deny(missing_docs)]\n #![doc(\n-    html_root_url = \"https://doc.rust-lang.org/nightly/\",\n     html_playground_url = \"https://play.rust-lang.org/\",\n     issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\",\n     test(no_crate_inject, attr(deny(warnings))),"}, {"sha": "c4f21587457c1555591e125fe0184bf8aa7092ab", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -190,7 +190,6 @@\n #![cfg_attr(not(feature = \"restricted-std\"), stable(feature = \"rust1\", since = \"1.0.0\"))]\n #![cfg_attr(feature = \"restricted-std\", unstable(feature = \"restricted_std\", issue = \"none\"))]\n #![doc(\n-    html_root_url = \"https://doc.rust-lang.org/nightly/\",\n     html_playground_url = \"https://play.rust-lang.org/\",\n     issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\",\n     test(no_crate_inject, attr(deny(warnings))),"}, {"sha": "943b276a220c88fc7e330804f0c2edcc6601bfc9", "filename": "library/term/src/lib.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Fterm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Fterm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fterm%2Fsrc%2Flib.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -30,11 +30,7 @@\n //! [win]: https://docs.microsoft.com/en-us/windows/console/character-mode-applications\n //! [ti]: https://en.wikipedia.org/wiki/Terminfo\n \n-#![doc(\n-    html_root_url = \"https://doc.rust-lang.org/nightly/\",\n-    html_playground_url = \"https://play.rust-lang.org/\",\n-    test(attr(deny(warnings)))\n-)]\n+#![doc(html_playground_url = \"https://play.rust-lang.org/\", test(attr(deny(warnings))))]\n #![deny(missing_docs)]\n #![cfg_attr(windows, feature(libc))]\n "}, {"sha": "3da4d434f48f23843e3ac3b2f588a51f94cae487", "filename": "library/test/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Ftest%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/library%2Ftest%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Flib.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -19,7 +19,7 @@\n \n #![crate_name = \"test\"]\n #![unstable(feature = \"test\", issue = \"50297\")]\n-#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\", test(attr(deny(warnings))))]\n+#![doc(test(attr(deny(warnings))))]\n #![cfg_attr(unix, feature(libc))]\n #![feature(rustc_private)]\n #![feature(nll)]"}, {"sha": "06f8bf89daecde081435011dcc3ce1e980e400fd", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -574,6 +574,18 @@ impl<'a> Builder<'a> {\n         self.run_step_descriptions(&Builder::get_step_descriptions(Kind::Doc), paths);\n     }\n \n+    /// NOTE: keep this in sync with `rustdoc::clean::utils::doc_rust_lang_org_channel`, or tests will fail on beta/stable.\n+    pub fn doc_rust_lang_org_channel(&self) -> String {\n+        let channel = match &*self.config.channel {\n+            \"stable\" => &self.version,\n+            \"beta\" => \"beta\",\n+            \"nightly\" | \"dev\" => \"nightly\",\n+            // custom build of rustdoc maybe? link to the latest stable docs just in case\n+            _ => \"stable\",\n+        };\n+        \"https://doc.rust-lang.org/\".to_owned() + channel\n+    }\n+\n     fn run_step_descriptions(&self, v: &[StepDescription], paths: &[PathBuf]) {\n         StepDescription::run(v, self, paths);\n     }"}, {"sha": "c057910e4f95f04cfb54e0ae6b043cae3b5c147b", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -326,6 +326,11 @@ pub fn std_cargo(builder: &Builder<'_>, target: TargetSelection, stage: u32, car\n     if target.contains(\"riscv\") {\n         cargo.rustflag(\"-Cforce-unwind-tables=yes\");\n     }\n+\n+    let html_root =\n+        format!(\"-Zcrate-attr=doc(html_root_url=\\\"{}/\\\")\", builder.doc_rust_lang_org_channel(),);\n+    cargo.rustflag(&html_root);\n+    cargo.rustdocflag(&html_root);\n }\n \n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]"}, {"sha": "cc7c143d4746101f3960c72e42b4cdf68360b6f0", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -1486,6 +1486,7 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n             }\n         }\n         cmd.env(\"RUSTC_BOOTSTRAP\", \"1\");\n+        cmd.env(\"DOC_RUST_LANG_ORG_CHANNEL\", builder.doc_rust_lang_org_channel());\n         builder.add_rust_test_threads(&mut cmd);\n \n         if builder.config.sanitizers_enabled(target) {"}, {"sha": "9d75ad0918a79186b5092b60b728c90c1018c628", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -263,6 +263,7 @@ pub fn prepare_tool_cargo(\n     cargo.env(\"CFG_RELEASE_CHANNEL\", &builder.config.channel);\n     cargo.env(\"CFG_VERSION\", builder.rust_version());\n     cargo.env(\"CFG_RELEASE_NUM\", &builder.version);\n+    cargo.env(\"DOC_RUST_LANG_ORG_CHANNEL\", builder.doc_rust_lang_org_channel());\n \n     let info = GitInfo::new(builder.config.ignore_git, &dir);\n     if let Some(sha) = info.sha() {"}, {"sha": "8647db5a45dc8277fbf12465c72a865b4f734a50", "filename": "src/etc/htmldocck.py", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Fetc%2Fhtmldocck.py", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Fetc%2Fhtmldocck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fhtmldocck.py?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -135,6 +135,8 @@\n     unichr = chr\n \n \n+channel = os.environ[\"DOC_RUST_LANG_ORG_CHANNEL\"]\n+\n class CustomHTMLParser(HTMLParser):\n     \"\"\"simplified HTML parser.\n \n@@ -270,6 +272,7 @@ def flatten(node):\n \n \n def normalize_xpath(path):\n+    path = path.replace(\"{{channel}}\", channel)\n     if path.startswith('//'):\n         return '.' + path  # avoid warnings\n     elif path.startswith('.//'):\n@@ -334,6 +337,7 @@ def get_dir(self, path):\n \n \n def check_string(data, pat, regexp):\n+    pat = pat.replace(\"{{channel}}\", channel)\n     if not pat:\n         return True  # special case a presence testing\n     elif regexp:"}, {"sha": "9f2123f22bd388a775e7cb548ad0e70ba750fe7b", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -499,7 +499,7 @@ impl Item {\n                                     format!(\"{}/std/\", s.trim_end_matches('/'))\n                                 }\n                                 Some(ExternalLocation::Unknown) | None => {\n-                                    \"https://doc.rust-lang.org/nightly/std/\".to_string()\n+                                    format!(\"{}/std/\", crate::DOC_RUST_LANG_ORG_CHANNEL)\n                                 }\n                             };\n                             // This is a primitive so the url is done \"by hand\"."}, {"sha": "350a387877142109c075845db6553551110e48c8", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -556,3 +556,8 @@ crate fn has_doc_flag(attrs: ty::Attributes<'_>, flag: Symbol) -> bool {\n             && attr.meta_item_list().map_or(false, |l| rustc_attr::list_contains_name(&l, flag))\n     })\n }\n+\n+/// A link to `doc.rust-lang.org` that includes the channel name.\n+///\n+/// Set by `bootstrap::Builder::doc_rust_lang_org_channel` in order to keep tests passing on beta/stable.\n+crate const DOC_RUST_LANG_ORG_CHANNEL: &'static str = env!(\"DOC_RUST_LANG_ORG_CHANNEL\");"}, {"sha": "2d371b538319140bcaa3f1fa2d51f7b3c6bcc7cf", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -81,6 +81,8 @@ use rustc_session::config::{make_crate_type_option, ErrorOutputType, RustcOptGro\n use rustc_session::getopts;\n use rustc_session::{early_error, early_warn};\n \n+use crate::clean::utils::DOC_RUST_LANG_ORG_CHANNEL;\n+\n /// A macro to create a FxHashMap.\n ///\n /// Example:"}, {"sha": "2b44ba24b4426d1847c88a7dac371af58b8c2427", "filename": "src/test/rustdoc-ui/check.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -1,5 +1,6 @@\n // check-pass\n // compile-flags: -Z unstable-options --check\n+// normalize-stderr-test: \"nightly|beta|1\\.[0-9][0-9]\\.[0-9]\" -> \"$$CHANNEL\"\n \n #![warn(missing_docs)]\n //~^ WARN"}, {"sha": "8c9e70e57fe7b09a68aee20468b181b779d60aed", "filename": "src/test/rustdoc-ui/check.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fcheck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fcheck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck.stderr?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -1,5 +1,5 @@\n warning: missing documentation for the crate\n-  --> $DIR/check.rs:4:1\n+  --> $DIR/check.rs:5:1\n    |\n LL | / #![warn(missing_docs)]\n LL | |\n@@ -10,30 +10,30 @@ LL | | pub fn foo() {}\n    | |_______________^\n    |\n note: the lint level is defined here\n-  --> $DIR/check.rs:4:9\n+  --> $DIR/check.rs:5:9\n    |\n LL | #![warn(missing_docs)]\n    |         ^^^^^^^^^^^^\n \n warning: missing documentation for a function\n-  --> $DIR/check.rs:9:1\n+  --> $DIR/check.rs:10:1\n    |\n LL | pub fn foo() {}\n    | ^^^^^^^^^^^^\n \n warning: no documentation found for this crate's top-level module\n    |\n note: the lint level is defined here\n-  --> $DIR/check.rs:7:9\n+  --> $DIR/check.rs:8:9\n    |\n LL | #![warn(rustdoc::all)]\n    |         ^^^^^^^^^^^^\n    = note: `#[warn(rustdoc::missing_crate_level_docs)]` implied by `#[warn(rustdoc::all)]`\n    = help: The following guide may be of use:\n-           https://doc.rust-lang.org/nightly/rustdoc/how-to-write-documentation.html\n+           https://doc.rust-lang.org/$CHANNEL/rustdoc/how-to-write-documentation.html\n \n warning: missing code example in this documentation\n-  --> $DIR/check.rs:4:1\n+  --> $DIR/check.rs:5:1\n    |\n LL | / #![warn(missing_docs)]\n LL | |\n@@ -44,14 +44,14 @@ LL | | pub fn foo() {}\n    | |_______________^\n    |\n note: the lint level is defined here\n-  --> $DIR/check.rs:7:9\n+  --> $DIR/check.rs:8:9\n    |\n LL | #![warn(rustdoc::all)]\n    |         ^^^^^^^^^^^^\n    = note: `#[warn(rustdoc::missing_doc_code_examples)]` implied by `#[warn(rustdoc::all)]`\n \n warning: missing code example in this documentation\n-  --> $DIR/check.rs:9:1\n+  --> $DIR/check.rs:10:1\n    |\n LL | pub fn foo() {}\n    | ^^^^^^^^^^^^^^^"}, {"sha": "9465e8e7ab99649bfff1c0a9fe6f64c3f267ca03", "filename": "src/test/rustdoc-ui/intra-doc/email-address-localhost.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Femail-address-localhost.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Femail-address-localhost.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Femail-address-localhost.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -1,3 +1,4 @@\n+// normalize-stderr-test: \"nightly|beta|1\\.[0-9][0-9]\\.[0-9]\" -> \"$$CHANNEL\"\n #![deny(warnings)]\n \n //! Email me at <hello@localhost>."}, {"sha": "1b07828fc6e55e4217022e220646b0d61ef530a9", "filename": "src/test/rustdoc-ui/intra-doc/email-address-localhost.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Femail-address-localhost.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Femail-address-localhost.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Femail-address-localhost.stderr?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -1,16 +1,16 @@\n error: unknown disambiguator `hello`\n-  --> $DIR/email-address-localhost.rs:3:18\n+  --> $DIR/email-address-localhost.rs:4:18\n    |\n LL | //! Email me at <hello@localhost>.\n    |                  ^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/email-address-localhost.rs:1:9\n+  --> $DIR/email-address-localhost.rs:2:9\n    |\n LL | #![deny(warnings)]\n    |         ^^^^^^^^\n    = note: `#[deny(rustdoc::broken_intra_doc_links)]` implied by `#[deny(warnings)]`\n-   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n+   = note: see https://doc.rust-lang.org/$CHANNEL/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: aborting due to previous error\n "}, {"sha": "0aa1e5a415aa747877c425b2ece259a2ecb024da", "filename": "src/test/rustdoc-ui/intra-doc/unknown-disambiguator.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funknown-disambiguator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funknown-disambiguator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funknown-disambiguator.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -1,3 +1,4 @@\n+// normalize-stderr-test: \"nightly|beta|1\\.[0-9][0-9]\\.[0-9]\" -> \"$$CHANNEL\"\n #![deny(warnings)]\n \n //! Linking to [foo@banana] and [`bar@banana!()`]."}, {"sha": "d280e6497e096c163af4d6161262a8ff9d4a328b", "filename": "src/test/rustdoc-ui/intra-doc/unknown-disambiguator.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funknown-disambiguator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funknown-disambiguator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funknown-disambiguator.stderr?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -1,56 +1,56 @@\n error: unknown disambiguator `foo`\n-  --> $DIR/unknown-disambiguator.rs:3:17\n+  --> $DIR/unknown-disambiguator.rs:4:17\n    |\n LL | //! Linking to [foo@banana] and [`bar@banana!()`].\n    |                 ^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/unknown-disambiguator.rs:1:9\n+  --> $DIR/unknown-disambiguator.rs:2:9\n    |\n LL | #![deny(warnings)]\n    |         ^^^^^^^^\n    = note: `#[deny(rustdoc::broken_intra_doc_links)]` implied by `#[deny(warnings)]`\n-   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n+   = note: see https://doc.rust-lang.org/$CHANNEL/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator `bar`\n-  --> $DIR/unknown-disambiguator.rs:3:35\n+  --> $DIR/unknown-disambiguator.rs:4:35\n    |\n LL | //! Linking to [foo@banana] and [`bar@banana!()`].\n    |                                   ^^^\n    |\n-   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n+   = note: see https://doc.rust-lang.org/$CHANNEL/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator `foo`\n-  --> $DIR/unknown-disambiguator.rs:9:34\n+  --> $DIR/unknown-disambiguator.rs:10:34\n    |\n LL | //! And with weird backticks: [``foo@hello``] [foo`@`hello].\n    |                                  ^^^\n    |\n-   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n+   = note: see https://doc.rust-lang.org/$CHANNEL/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator `foo`\n-  --> $DIR/unknown-disambiguator.rs:9:48\n+  --> $DIR/unknown-disambiguator.rs:10:48\n    |\n LL | //! And with weird backticks: [``foo@hello``] [foo`@`hello].\n    |                                                ^^^\n    |\n-   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n+   = note: see https://doc.rust-lang.org/$CHANNEL/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator ``\n-  --> $DIR/unknown-disambiguator.rs:6:31\n+  --> $DIR/unknown-disambiguator.rs:7:31\n    |\n LL | //! And to [no disambiguator](@nectarine) and [another](@apricot!()).\n    |                               ^\n    |\n-   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n+   = note: see https://doc.rust-lang.org/$CHANNEL/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: unknown disambiguator ``\n-  --> $DIR/unknown-disambiguator.rs:6:57\n+  --> $DIR/unknown-disambiguator.rs:7:57\n    |\n LL | //! And to [no disambiguator](@nectarine) and [another](@apricot!()).\n    |                                                         ^\n    |\n-   = note: see https://doc.rust-lang.org/nightly/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n+   = note: see https://doc.rust-lang.org/$CHANNEL/rustdoc/linking-to-items-by-name.html#namespaces-and-disambiguators for more info about disambiguators\n \n error: aborting due to 6 previous errors\n "}, {"sha": "a186410acf483c819cee69576f3e9baeedca1801", "filename": "src/test/rustdoc-ui/no-crate-level-doc-lint.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fno-crate-level-doc-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fno-crate-level-doc-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fno-crate-level-doc-lint.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -1,4 +1,5 @@\n // error-pattern: no documentation found\n+// normalize-stderr-test: \"nightly|beta|1\\.[0-9][0-9]\\.[0-9]\" -> \"$$CHANNEL\"\n #![deny(rustdoc::missing_crate_level_docs)]\n //^~ NOTE defined here\n "}, {"sha": "1a1f8085a1b467b082b6f0963c48b8c6bc010f9b", "filename": "src/test/rustdoc-ui/no-crate-level-doc-lint.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fno-crate-level-doc-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc-ui%2Fno-crate-level-doc-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fno-crate-level-doc-lint.stderr?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -1,12 +1,12 @@\n error: no documentation found for this crate's top-level module\n    |\n note: the lint level is defined here\n-  --> $DIR/no-crate-level-doc-lint.rs:2:9\n+  --> $DIR/no-crate-level-doc-lint.rs:3:9\n    |\n LL | #![deny(rustdoc::missing_crate_level_docs)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: The following guide may be of use:\n-           https://doc.rust-lang.org/nightly/rustdoc/how-to-write-documentation.html\n+           https://doc.rust-lang.org/$CHANNEL/rustdoc/how-to-write-documentation.html\n \n error: aborting due to previous error\n "}, {"sha": "d9fed2d69518a11abb41bde4f1fc728cebd3fa61", "filename": "src/test/rustdoc/intra-doc/associated-items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -3,9 +3,9 @@\n /// [`std::collections::BTreeMap::into_iter`]\n /// [`String::from`] is ambiguous as to which `From` impl\n /// [Vec::into_iter()] uses a disambiguator\n-// @has 'associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/collections/btree/map/struct.BTreeMap.html#method.into_iter\"]' 'std::collections::BTreeMap::into_iter'\n-// @has 'associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html#method.from\"]' 'String::from'\n-// @has 'associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.into_iter\"]' 'Vec::into_iter'\n+// @has 'associated_items/fn.foo.html' '//a[@href=\"{{channel}}/alloc/collections/btree/map/struct.BTreeMap.html#method.into_iter\"]' 'std::collections::BTreeMap::into_iter'\n+// @has 'associated_items/fn.foo.html' '//a[@href=\"{{channel}}/alloc/string/struct.String.html#method.from\"]' 'String::from'\n+// @has 'associated_items/fn.foo.html' '//a[@href=\"{{channel}}/alloc/vec/struct.Vec.html#method.into_iter\"]' 'Vec::into_iter'\n pub fn foo() {}\n \n /// Link to [MyStruct], [link from struct][MyStruct::method], [MyStruct::clone], [MyStruct::Input]"}, {"sha": "bbdbe246bbce22f9f4b42ed6c873314e16a0e15a", "filename": "src/test/rustdoc/intra-doc/builtin-macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbuiltin-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbuiltin-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbuiltin-macros.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -1,3 +1,3 @@\n // @has builtin_macros/index.html\n-// @has - '//a/@href' 'https://doc.rust-lang.org/nightly/core/macro.cfg.html'\n+// @has - '//a/@href' '{{channel}}/core/macro.cfg.html'\n //! [cfg]"}, {"sha": "fbc9fc6a9bc213d3163d04b7a05217f80259d92d", "filename": "src/test/rustdoc/intra-doc/generic-params.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-params.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -5,40 +5,40 @@\n //! Here's a link to [`Vec<T>`] and one to [`Box<Vec<Option<T>>>`].\n //! Here's a link to [`Iterator<Box<T>>::Item`].\n //!\n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\"]' 'Vec<T>'\n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\"]' 'Box<Vec<Option<T>>>'\n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\"]' 'Iterator<Box<T>>::Item'\n+// @has foo/index.html '//a[@href=\"{{channel}}/alloc/vec/struct.Vec.html\"]' 'Vec<T>'\n+// @has foo/index.html '//a[@href=\"{{channel}}/alloc/boxed/struct.Box.html\"]' 'Box<Vec<Option<T>>>'\n+// @has foo/index.html '//a[@href=\"{{channel}}/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\"]' 'Iterator<Box<T>>::Item'\n \n //! And what about a link to [just `Option`](Option) and, [with the generic, `Option<T>`](Option<T>)?\n //!\n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\"]' 'just Option'\n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\"]' 'with the generic, Option<T>'\n+// @has foo/index.html '//a[@href=\"{{channel}}/core/option/enum.Option.html\"]' 'just Option'\n+// @has foo/index.html '//a[@href=\"{{channel}}/core/option/enum.Option.html\"]' 'with the generic, Option<T>'\n \n //! We should also try linking to [`Result<T, E>`]; it has *two* generics!\n //! And [`Result<T, !>`] and [`Result<!, E>`].\n //!\n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\"]' 'Result<T, E>'\n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\"]' 'Result<T, !>'\n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\"]' 'Result<!, E>'\n+// @has foo/index.html '//a[@href=\"{{channel}}/core/result/enum.Result.html\"]' 'Result<T, E>'\n+// @has foo/index.html '//a[@href=\"{{channel}}/core/result/enum.Result.html\"]' 'Result<T, !>'\n+// @has foo/index.html '//a[@href=\"{{channel}}/core/result/enum.Result.html\"]' 'Result<!, E>'\n \n //! Now let's test a trickier case: [`Vec::<T>::new`], or you could write it\n //! [with parentheses as `Vec::<T>::new()`][Vec::<T>::new()].\n //! And what about something even harder? That would be [`Vec::<Box<T>>::new()`].\n //!\n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.new\"]' 'Vec::<T>::new'\n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.new\"]' 'with parentheses as Vec::<T>::new()'\n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.new\"]' 'Vec::<Box<T>>::new()'\n+// @has foo/index.html '//a[@href=\"{{channel}}/alloc/vec/struct.Vec.html#method.new\"]' 'Vec::<T>::new'\n+// @has foo/index.html '//a[@href=\"{{channel}}/alloc/vec/struct.Vec.html#method.new\"]' 'with parentheses as Vec::<T>::new()'\n+// @has foo/index.html '//a[@href=\"{{channel}}/alloc/vec/struct.Vec.html#method.new\"]' 'Vec::<Box<T>>::new()'\n \n //! This is also pretty tricky: [`TypeId::of::<String>()`].\n //! And this too: [`Vec::<std::error::Error>::len`].\n //!\n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html#method.of\"]' 'TypeId::of::<String>()'\n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.len\"]' 'Vec::<std::error::Error>::len'\n+// @has foo/index.html '//a[@href=\"{{channel}}/core/any/struct.TypeId.html#method.of\"]' 'TypeId::of::<String>()'\n+// @has foo/index.html '//a[@href=\"{{channel}}/alloc/vec/struct.Vec.html#method.len\"]' 'Vec::<std::error::Error>::len'\n \n //! We unofficially and implicitly support things that aren't valid in the actual Rust syntax, like\n //! [`Box::<T>new()`]. We may not support them in the future!\n //!\n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html#method.new\"]' 'Box::<T>new()'\n+// @has foo/index.html '//a[@href=\"{{channel}}/alloc/boxed/struct.Box.html#method.new\"]' 'Box::<T>new()'\n \n //! These will be resolved as regular links:\n //! - [`this is <invalid syntax> first`](https://www.rust-lang.org)"}, {"sha": "be4b44b314252686b206a16e43b08970ae69275d", "filename": "src/test/rustdoc/intra-doc/non-path-primitives.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -2,45 +2,45 @@\n #![feature(intra_doc_pointers)]\n #![deny(rustdoc::broken_intra_doc_links)]\n \n-// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.rotate_left\"]' 'slice::rotate_left'\n+// @has foo/index.html '//a[@href=\"{{channel}}/std/primitive.slice.html#method.rotate_left\"]' 'slice::rotate_left'\n //! [slice::rotate_left]\n \n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html#method.map\"]' 'array::map'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.array.html#method.map\"]' 'array::map'\n //! [array::map]\n \n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\"]' 'owned str'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\"]' 'str ref'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html#method.is_empty\"]' 'str::is_empty'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html#method.len\"]' '&str::len'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.str.html\"]' 'owned str'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.str.html\"]' 'str ref'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.str.html#method.is_empty\"]' 'str::is_empty'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.str.html#method.len\"]' '&str::len'\n //! [owned str][str]\n //! [str ref][&str]\n //! [str::is_empty]\n //! [&str::len]\n \n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html#method.is_null\"]' 'pointer::is_null'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html#method.is_null\"]' '*const::is_null'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html#method.is_null\"]' '*mut::is_null'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.pointer.html#method.is_null\"]' 'pointer::is_null'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.pointer.html#method.is_null\"]' '*const::is_null'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.pointer.html#method.is_null\"]' '*mut::is_null'\n //! [pointer::is_null]\n //! [*const::is_null]\n //! [*mut::is_null]\n \n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\"]' 'unit'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.unit.html\"]' 'unit'\n //! [unit]\n \n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\"]' 'tuple'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.tuple.html\"]' 'tuple'\n //! [tuple]\n \n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\"]' 'reference'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\"]' '&'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\"]' '&mut'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.reference.html\"]' 'reference'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.reference.html\"]' '&'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.reference.html\"]' '&mut'\n //! [reference]\n //! [&]\n //! [&mut]\n \n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\"]' 'fn'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.fn.html\"]' 'fn'\n //! [fn]\n \n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.never.html\"]' 'never'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.never.html\"]' '!'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.never.html\"]' 'never'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.never.html\"]' '!'\n //! [never]\n //! [!]"}, {"sha": "c73140420ff1f858a0d5c0e7c2f4915d371ab02f", "filename": "src/test/rustdoc/intra-doc/prim-assoc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-assoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-assoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-assoc.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -1,4 +1,4 @@\n #![deny(broken_intra_doc_links)]\n \n //! [i32::MAX]\n-// @has prim_assoc/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html#associatedconstant.MAX\"]' \"i32::MAX\"\n+// @has prim_assoc/index.html '//a[@href=\"{{channel}}/std/primitive.i32.html#associatedconstant.MAX\"]' \"i32::MAX\""}, {"sha": "9347d7bb42819fed336d62de936f83f16a62276d", "filename": "src/test/rustdoc/intra-doc/prim-methods-external-core.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-external-core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-external-core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-external-core.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -9,8 +9,8 @@\n #![crate_type = \"rlib\"]\n \n // @has prim_methods_external_core/index.html\n-// @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\"]' 'char'\n-// @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html#method.len_utf8\"]' 'char::len_utf8'\n+// @has - '//*[@id=\"main\"]//a[@href=\"{{channel}}/std/primitive.char.html\"]' 'char'\n+// @has - '//*[@id=\"main\"]//a[@href=\"{{channel}}/std/primitive.char.html#method.len_utf8\"]' 'char::len_utf8'\n \n //! A [`char`] and its [`char::len_utf8`].\n "}, {"sha": "124faa9a636ffb9d3b3e979c3a21689b2a5f7b16", "filename": "src/test/rustdoc/intra-doc/prim-methods-local.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-local.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -5,8 +5,8 @@\n \n \n // @has prim_methods_local/index.html\n-// @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\"]' 'char'\n-// @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html#method.len_utf8\"]' 'char::len_utf8'\n+// @has - '//*[@id=\"main\"]//a[@href=\"{{channel}}/std/primitive.char.html\"]' 'char'\n+// @has - '//*[@id=\"main\"]//a[@href=\"{{channel}}/std/primitive.char.html#method.len_utf8\"]' 'char::len_utf8'\n \n //! A [`char`] and its [`char::len_utf8`].\n "}, {"sha": "076117359d26416bc52e08e858e8d32d236a79d4", "filename": "src/test/rustdoc/intra-doc/prim-methods.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -2,7 +2,7 @@\n \n \n // @has prim_methods/index.html\n-// @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\"]' 'char'\n-// @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html#method.len_utf8\"]' 'char::len_utf8'\n+// @has - '//*[@id=\"main\"]//a[@href=\"{{channel}}/std/primitive.char.html\"]' 'char'\n+// @has - '//*[@id=\"main\"]//a[@href=\"{{channel}}/std/primitive.char.html#method.len_utf8\"]' 'char::len_utf8'\n \n //! A [`char`] and its [`char::len_utf8`]."}, {"sha": "fcd86a99f1d6bf402125cab94bb84fc76b1360a5", "filename": "src/test/rustdoc/intra-doc/prim-precedence.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-precedence.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -2,12 +2,12 @@\n \n pub mod char {\n     /// [char]\n-    // @has prim_precedence/char/struct.Inner.html '//a/@href' 'https://doc.rust-lang.org/nightly/std/primitive.char.html'\n+    // @has prim_precedence/char/struct.Inner.html '//a/@href' '{{channel}}/std/primitive.char.html'\n     pub struct Inner;\n }\n \n /// See [prim@char]\n-// @has prim_precedence/struct.MyString.html '//a/@href' 'https://doc.rust-lang.org/nightly/std/primitive.char.html'\n+// @has prim_precedence/struct.MyString.html '//a/@href' '{{channel}}/std/primitive.char.html'\n pub struct MyString;\n \n /// See also [crate::char] and [mod@char]"}, {"sha": "9b3b698324096e03ec38ae7f982ba3a449f76d95", "filename": "src/test/rustdoc/intra-doc/primitive-disambiguators.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-disambiguators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-disambiguators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-disambiguators.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -1,4 +1,4 @@\n #![deny(broken_intra_doc_links)]\n // @has primitive_disambiguators/index.html\n-// @has - '//a/@href' 'https://doc.rust-lang.org/nightly/std/primitive.str.html#method.trim'\n+// @has - '//a/@href' '{{channel}}/std/primitive.str.html#method.trim'\n //! [str::trim()]"}, {"sha": "f8a824bd08f421c81dde5878eee247b25b1907dc", "filename": "src/test/rustdoc/intra-doc/primitive-non-default-impl.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-non-default-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-non-default-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-non-default-impl.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -3,29 +3,29 @@\n \n // @has primitive_non_default_impl/fn.str_methods.html\n /// [`str::trim`]\n-// @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html#method.trim\"]' 'str::trim'\n+// @has - '//*[@href=\"{{channel}}/std/primitive.str.html#method.trim\"]' 'str::trim'\n /// [`str::to_lowercase`]\n-// @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html#method.to_lowercase\"]' 'str::to_lowercase'\n+// @has - '//*[@href=\"{{channel}}/std/primitive.str.html#method.to_lowercase\"]' 'str::to_lowercase'\n /// [`str::into_boxed_bytes`]\n-// @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html#method.into_boxed_bytes\"]' 'str::into_boxed_bytes'\n+// @has - '//*[@href=\"{{channel}}/std/primitive.str.html#method.into_boxed_bytes\"]' 'str::into_boxed_bytes'\n /// [`str::replace`]\n-// @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html#method.replace\"]' 'str::replace'\n+// @has - '//*[@href=\"{{channel}}/std/primitive.str.html#method.replace\"]' 'str::replace'\n pub fn str_methods() {}\n \n // @has primitive_non_default_impl/fn.f32_methods.html\n /// [f32::powi]\n-// @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html#method.powi\"]' 'f32::powi'\n+// @has - '//*[@href=\"{{channel}}/std/primitive.f32.html#method.powi\"]' 'f32::powi'\n /// [f32::sqrt]\n-// @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html#method.sqrt\"]' 'f32::sqrt'\n+// @has - '//*[@href=\"{{channel}}/std/primitive.f32.html#method.sqrt\"]' 'f32::sqrt'\n /// [f32::mul_add]\n-// @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html#method.mul_add\"]' 'f32::mul_add'\n+// @has - '//*[@href=\"{{channel}}/std/primitive.f32.html#method.mul_add\"]' 'f32::mul_add'\n pub fn f32_methods() {}\n \n // @has primitive_non_default_impl/fn.f64_methods.html\n /// [`f64::powi`]\n-// @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html#method.powi\"]' 'f64::powi'\n+// @has - '//*[@href=\"{{channel}}/std/primitive.f64.html#method.powi\"]' 'f64::powi'\n /// [`f64::sqrt`]\n-// @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html#method.sqrt\"]' 'f64::sqrt'\n+// @has - '//*[@href=\"{{channel}}/std/primitive.f64.html#method.sqrt\"]' 'f64::sqrt'\n /// [`f64::mul_add`]\n-// @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html#method.mul_add\"]' 'f64::mul_add'\n+// @has - '//*[@href=\"{{channel}}/std/primitive.f64.html#method.mul_add\"]' 'f64::mul_add'\n pub fn f64_methods() {}"}, {"sha": "b4f2d6b0617fa914e885eaa8b73582c5e4081b54", "filename": "src/test/rustdoc/intra-doc/pub-use.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fpub-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Fpub-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fpub-use.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -12,7 +12,7 @@ extern crate inner;\n // documenting the re-export.\n \n // @has outer/index.html\n-// @ has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/env/fn.var.html\"]' \"std::env\"\n+// @ has - '//a[@href=\"{{channel}}/std/env/fn.var.html\"]' \"std::env\"\n // @ has - '//a[@href=\"fn.f.html\"]' \"g\"\n pub use f as g;\n \n@@ -23,5 +23,5 @@ extern crate self as _;\n // Make sure the documentation is actually correct by documenting an inlined re-export\n /// [mod@std::env]\n // @has outer/fn.f.html\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/env/index.html\"]' \"std::env\"\n+// @has - '//a[@href=\"{{channel}}/std/env/index.html\"]' \"std::env\"\n pub use inner::f;"}, {"sha": "0be368d051ee6e509c00bf78aad5a4c2cb3b75e5", "filename": "src/test/rustdoc/intra-doc/trait-item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-item.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -3,7 +3,7 @@\n /// Link to [S::assoc_fn()]\n /// Link to [Default::default()]\n // @has trait_item/struct.S.html '//*[@href=\"struct.S.html#method.assoc_fn\"]' 'S::assoc_fn()'\n-// @has - '//*[@href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\"]' 'Default::default()'\n+// @has - '//*[@href=\"{{channel}}/core/default/trait.Default.html#tymethod.default\"]' 'Default::default()'\n pub struct S;\n \n impl S {"}, {"sha": "44aac68841373842844058351f77ca209fc2a788", "filename": "src/test/rustdoc/intra-doc/true-false.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrue-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrue-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrue-false.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -3,7 +3,7 @@\n \n \n // @has foo/index.html\n-// @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\"]' 'true'\n-// @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\"]' 'false'\n+// @has - '//*[@id=\"main\"]//a[@href=\"{{channel}}/std/primitive.bool.html\"]' 'true'\n+// @has - '//*[@id=\"main\"]//a[@href=\"{{channel}}/std/primitive.bool.html\"]' 'false'\n \n //! A `bool` is either [`true`] or [`false`]."}, {"sha": "4744c84b6226db03b33a6b890fdb3e128878d34e", "filename": "src/test/rustdoc/intra-link-prim-self.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-link-prim-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fintra-link-prim-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-prim-self.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n #![deny(broken_intra_doc_links)]\n #![feature(lang_items)]\n #![feature(no_core)]\n@@ -8,8 +7,8 @@\n /// [Self::f]\n /// [Self::MAX]\n // @has intra_link_prim_self/primitive.usize.html\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html#method.f\"]' 'Self::f'\n-// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html#associatedconstant.MAX\"]' 'Self::MAX'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.usize.html#method.f\"]' 'Self::f'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.usize.html#associatedconstant.MAX\"]' 'Self::MAX'\n impl usize {\n     /// Some docs\n     pub fn f() {}\n@@ -18,7 +17,7 @@ impl usize {\n     pub const MAX: usize = 10;\n \n     // FIXME(#8995) uncomment this when associated types in inherent impls are supported\n-    // @ has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html#associatedtype.ME\"]' 'Self::ME'\n+    // @ has - '//a[@href=\"{{channel}}/std/primitive.usize.html#associatedtype.ME\"]' 'Self::ME'\n     // / [Self::ME]\n     //pub type ME = usize;\n }"}, {"sha": "125e0c849731a6ed8b3948b8b9f3702502a6990d", "filename": "src/test/rustdoc/primitive-link.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fprimitive-link.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fprimitive-link.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fprimitive-link.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -1,12 +1,12 @@\n #![crate_name = \"foo\"]\n \n \n-// @has foo/struct.Foo.html '//*[@class=\"docblock\"]/p/a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\"]' 'u32'\n-// @has foo/struct.Foo.html '//*[@class=\"docblock\"]/p/a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\"]' 'i64'\n-// @has foo/struct.Foo.html '//*[@class=\"docblock\"]/p/a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\"]' 'std::primitive::i32'\n-// @has foo/struct.Foo.html '//*[@class=\"docblock\"]/p/a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\"]' 'std::primitive::str'\n+// @has foo/struct.Foo.html '//*[@class=\"docblock\"]/p/a[@href=\"{{channel}}/std/primitive.u32.html\"]' 'u32'\n+// @has foo/struct.Foo.html '//*[@class=\"docblock\"]/p/a[@href=\"{{channel}}/std/primitive.i64.html\"]' 'i64'\n+// @has foo/struct.Foo.html '//*[@class=\"docblock\"]/p/a[@href=\"{{channel}}/std/primitive.i32.html\"]' 'std::primitive::i32'\n+// @has foo/struct.Foo.html '//*[@class=\"docblock\"]/p/a[@href=\"{{channel}}/std/primitive.str.html\"]' 'std::primitive::str'\n \n-// @has foo/struct.Foo.html '//*[@class=\"docblock\"]/p/a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html#associatedconstant.MAX\"]' 'std::primitive::i32::MAX'\n+// @has foo/struct.Foo.html '//*[@class=\"docblock\"]/p/a[@href=\"{{channel}}/std/primitive.i32.html#associatedconstant.MAX\"]' 'std::primitive::i32::MAX'\n \n /// It contains [`u32`] and [i64].\n /// It also links to [std::primitive::i32], [std::primitive::str],"}, {"sha": "10a8a47db52489637ac934e9f42e15537852faea", "filename": "src/test/rustdoc/primitive-reexport.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fprimitive-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b0e6e645ccee1b12c9d415f30f4701f78ba704/src%2Ftest%2Frustdoc%2Fprimitive-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fprimitive-reexport.rs?ref=01b0e6e645ccee1b12c9d415f30f4701f78ba704", "patch": "@@ -5,24 +5,24 @@\n \n // @has bar/p/index.html\n // @has - '//code' 'pub use bool;'\n-// @has - '//code/a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\"]' 'bool'\n+// @has - '//code/a[@href=\"{{channel}}/std/primitive.bool.html\"]' 'bool'\n // @has - '//code' 'pub use char as my_char;'\n-// @has - '//code/a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\"]' 'char'\n+// @has - '//code/a[@href=\"{{channel}}/std/primitive.char.html\"]' 'char'\n pub mod p {\n     pub use foo::bar::*;\n }\n \n // @has bar/baz/index.html\n // @has - '//code' 'pub use bool;'\n-// @has - '//code/a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\"]' 'bool'\n+// @has - '//code/a[@href=\"{{channel}}/std/primitive.bool.html\"]' 'bool'\n // @has - '//code' 'pub use char as my_char;'\n-// @has - '//code/a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\"]' 'char'\n+// @has - '//code/a[@href=\"{{channel}}/std/primitive.char.html\"]' 'char'\n pub use foo::bar as baz;\n \n // @has bar/index.html\n // @has - '//code' 'pub use str;'\n-// @has - '//code/a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\"]' 'str'\n+// @has - '//code/a[@href=\"{{channel}}/std/primitive.str.html\"]' 'str'\n // @has - '//code' 'pub use i32 as my_i32;'\n-// @has - '//code/a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\"]' 'i32'\n+// @has - '//code/a[@href=\"{{channel}}/std/primitive.i32.html\"]' 'i32'\n pub use str;\n pub use i32 as my_i32;"}]}