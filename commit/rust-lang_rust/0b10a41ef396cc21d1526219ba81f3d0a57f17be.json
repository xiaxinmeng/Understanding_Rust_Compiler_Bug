{"sha": "0b10a41ef396cc21d1526219ba81f3d0a57f17be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiMTBhNDFlZjM5NmNjMjFkMTUyNjIxOWJhODFmM2QwYTU3ZjE3YmU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-12-21T15:49:53Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-12-21T15:49:53Z"}, "message": "fix absurd extreme comparisons false positive\n\nfixes #1387", "tree": {"sha": "79e3bcdc7ac38196230a9a52d3b48c58f1e4038e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79e3bcdc7ac38196230a9a52d3b48c58f1e4038e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b10a41ef396cc21d1526219ba81f3d0a57f17be", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYWqShAAoJEFbW7qD8Z6xGR4EP/031OfoBWO6TSvo3VVh0aN+v\nZ1AeIo55tUhS4cm0UlqE3o/gVd4Q+B3VLTJU3dwfoisYbO5l8Ok1BMNnlu65aDd/\nYLGGOo2ZRdV7b9NMDuTpLyL7mfZTejg41hfY39GPZr0TncqpCYD89oExXh7uQ94I\nfzZFuBsDoDzRUAVL//NrVUnR8Jk6ifmNFaAJNeKYFOsX9n78NwYteqPUdbOdv6MO\nlVsu1mM5O5zlF9RfufWqouXyfrqaFFU17WTe+9SIHsppwRnfdWJs9bxfbZ3A1ylv\nUBMCc/XlKL+o41sHd3jz2DsLvlX+PimvlVMtU3DlKi/dwBtPAqOEiEb3BhWFnUAx\nQT6bxXnp+JTGFOeIZke4zhvbY8eak8Zwbe/ANhUDH9Au+kFNEewLiGMCNA8lxrMP\nrL8DPSUAotSY9Jl0+NvL9EQOecl6IbpVnoj6+DxV63p2r5S2pJ4Fi4oM4sCD3m9H\nwEpxxrhS9CPx3yvWeCSv+XumCNL5bQ6va2DMvrUmk1EYt+i5rqqDhE94KFuPICRq\nsmp8OH4r+7wlgsKvwv4An4vLk8nCoc5spFXzvOVWOR+ooakgHmXO501fXk622QEa\n7zJTDPi409MI4p0xSCY5ghyQFpV+mtiKtZfbXntqebCTc7rgdYWlhdhg03heZX2x\npkOOaXmCgzxOLCg3ZyD9\n=YfCk\n-----END PGP SIGNATURE-----", "payload": "tree 79e3bcdc7ac38196230a9a52d3b48c58f1e4038e\nparent cb861a1bd11f1a143283a1d90df3475cccc22e3a\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1482335393 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1482335393 +0100\n\nfix absurd extreme comparisons false positive\n\nfixes #1387"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b10a41ef396cc21d1526219ba81f3d0a57f17be", "html_url": "https://github.com/rust-lang/rust/commit/0b10a41ef396cc21d1526219ba81f3d0a57f17be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b10a41ef396cc21d1526219ba81f3d0a57f17be/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb861a1bd11f1a143283a1d90df3475cccc22e3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb861a1bd11f1a143283a1d90df3475cccc22e3a", "html_url": "https://github.com/rust-lang/rust/commit/cb861a1bd11f1a143283a1d90df3475cccc22e3a"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "9912c52492a5e955913459a178f5276f3e537470", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0b10a41ef396cc21d1526219ba81f3d0a57f17be/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b10a41ef396cc21d1526219ba81f3d0a57f17be/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=0b10a41ef396cc21d1526219ba81f3d0a57f17be", "patch": "@@ -825,6 +825,12 @@ fn detect_absurd_comparison<'a>(\n     use types::AbsurdComparisonResult::*;\n     use utils::comparisons::*;\n \n+    // absurd comparison only makes sense on primitive types\n+    // primitive types don't implement comparison operators with each other\n+    if cx.tcx.tables().expr_ty(lhs) != cx.tcx.tables().expr_ty(rhs) {\n+        return None;\n+    }\n+\n     let normalized = normalize_comparison(op, lhs, rhs);\n     let (rel, normalized_lhs, normalized_rhs) = if let Some(val) = normalized {\n         val"}, {"sha": "cf69473bbe5f6ffd2acea28d222a0458dc9b2e31", "filename": "tests/compile-fail/absurd-extreme-comparisons.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0b10a41ef396cc21d1526219ba81f3d0a57f17be/tests%2Fcompile-fail%2Fabsurd-extreme-comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b10a41ef396cc21d1526219ba81f3d0a57f17be/tests%2Fcompile-fail%2Fabsurd-extreme-comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fabsurd-extreme-comparisons.rs?ref=0b10a41ef396cc21d1526219ba81f3d0a57f17be", "patch": "@@ -3,6 +3,7 @@\n \n #![deny(absurd_extreme_comparisons)]\n #![allow(unused, eq_op, no_effect, unnecessary_operation)]\n+\n fn main() {\n     const Z: u32 = 0;\n \n@@ -70,3 +71,23 @@ fn main() {\n     // this is handled by unit_cmp\n     () < {}; //~WARNING <-comparison of unit values detected.\n }\n+\n+use std::cmp::{Ordering, PartialEq, PartialOrd};\n+\n+#[derive(PartialEq, PartialOrd)]\n+pub struct U(u64);\n+\n+impl PartialEq<u32> for U {\n+    fn eq(&self, other: &u32) -> bool {\n+        self.eq(&U(*other as u64))\n+    }\n+}\n+impl PartialOrd<u32> for U {\n+    fn partial_cmp(&self, other: &u32) -> Option<Ordering> {\n+        self.partial_cmp(&U(*other as u64))\n+    }\n+}\n+\n+pub fn foo(val: U) -> bool {\n+    val > std::u32::MAX\n+}"}]}