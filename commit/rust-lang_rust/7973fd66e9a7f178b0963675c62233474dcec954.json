{"sha": "7973fd66e9a7f178b0963675c62233474dcec954", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5NzNmZDY2ZTlhN2YxNzhiMDk2MzY3NWM2MjIzMzQ3NGRjZWM5NTQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-10T21:35:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-10T21:35:19Z"}, "message": "Merge #2201\n\n2201: Resolve core types r=matklad a=Matthias247\n\nThis adds support for completion and goto definition of\r\ntypes defined within the \"core\" crate. The core crate is\r\nadded as a dependency to each crate in the project.\r\n\r\nThe core crate exported it's own prelude. This caused\r\nnow all crates to inherit the core crates prelude instead\r\nof the std crates. In order to avoid the problem the\r\nprelude resolution has been changed to overwrite\r\nan already resolved prelude if this was set to a crate\r\nnamed core - in order to pick a better prelude like std.\r\n\r\nFixes #2199\n\nCo-authored-by: Matthias Einwag <matthias.einwag@live.com>", "tree": {"sha": "e55d40fa70e9e1122aecbe66f258073b2c3d7a43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e55d40fa70e9e1122aecbe66f258073b2c3d7a43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7973fd66e9a7f178b0963675c62233474dcec954", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdyIKXCRBK7hj4Ov3rIwAAdHIIAIf63AWB+5IR7nkaJOINKeCW\nrD4HsNQyYitYJ3PvtJJjto8weM4eAa7jJYuAeSz8TgAplOEQHD2gkAavWYrqWeDV\n1+vbt7KMqNOlbcTPmpDk81vuOU9eSGq/OqIAo5dwRePovtPHwPMrBKYQUmbNtyKy\nhk1pwg+XrL33MmOKelKsuotKmU2AUnp0ZQmGDd14mOo9IHkvfLKM+Bo67gGUecHg\nj6vE9LhPEQ8AFXOc2VNeJ+Y3iILwcaapMgPUiX4UgdNIkaN6p6Gjwhv5GtWGb7YO\n+pbTuk88Be/Cg7Mv/4snd14wOM5gmzRHdG6fXaUqGe0qozjY1ojGjNFBsozyu7s=\n=5PJk\n-----END PGP SIGNATURE-----\n", "payload": "tree e55d40fa70e9e1122aecbe66f258073b2c3d7a43\nparent 9d786ea221b27fbdf7c7f7beea0290db448e0611\nparent d634364462931c0a4944de29b38681a482817b6b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1573421719 +0000\ncommitter GitHub <noreply@github.com> 1573421719 +0000\n\nMerge #2201\n\n2201: Resolve core types r=matklad a=Matthias247\n\nThis adds support for completion and goto definition of\r\ntypes defined within the \"core\" crate. The core crate is\r\nadded as a dependency to each crate in the project.\r\n\r\nThe core crate exported it's own prelude. This caused\r\nnow all crates to inherit the core crates prelude instead\r\nof the std crates. In order to avoid the problem the\r\nprelude resolution has been changed to overwrite\r\nan already resolved prelude if this was set to a crate\r\nnamed core - in order to pick a better prelude like std.\r\n\r\nFixes #2199\n\nCo-authored-by: Matthias Einwag <matthias.einwag@live.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7973fd66e9a7f178b0963675c62233474dcec954", "html_url": "https://github.com/rust-lang/rust/commit/7973fd66e9a7f178b0963675c62233474dcec954", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7973fd66e9a7f178b0963675c62233474dcec954/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d786ea221b27fbdf7c7f7beea0290db448e0611", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d786ea221b27fbdf7c7f7beea0290db448e0611", "html_url": "https://github.com/rust-lang/rust/commit/9d786ea221b27fbdf7c7f7beea0290db448e0611"}, {"sha": "d634364462931c0a4944de29b38681a482817b6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d634364462931c0a4944de29b38681a482817b6b", "html_url": "https://github.com/rust-lang/rust/commit/d634364462931c0a4944de29b38681a482817b6b"}], "stats": {"total": 118, "additions": 112, "deletions": 6}, "files": [{"sha": "6db9937a43212880e162f9519c8ff9bba5a59361", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7973fd66e9a7f178b0963675c62233474dcec954/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7973fd66e9a7f178b0963675c62233474dcec954/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=7973fd66e9a7f178b0963675c62233474dcec954", "patch": "@@ -36,11 +36,12 @@ pub(super) fn collect_defs(db: &impl DefDatabase2, mut def_map: CrateDefMap) ->\n         );\n \n         // look for the prelude\n-        if def_map.prelude.is_none() {\n-            let map = db.crate_def_map(dep.crate_id);\n-            if map.prelude.is_some() {\n-                def_map.prelude = map.prelude;\n-            }\n+        // If the dependency defines a prelude, we overwrite an already defined\n+        // prelude. This is necessary to import the \"std\" prelude if a crate\n+        // depends on both \"core\" and \"std\".\n+        let dep_def_map = db.crate_def_map(dep.crate_id);\n+        if dep_def_map.prelude.is_some() {\n+            def_map.prelude = dep_def_map.prelude;\n         }\n     }\n "}, {"sha": "256f7d4be72eecb98dd9d32bab15f51586d3304a", "filename": "crates/ra_hir_def/src/nameres/tests.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/7973fd66e9a7f178b0963675c62233474dcec954/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7973fd66e9a7f178b0963675c62233474dcec954/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs?ref=7973fd66e9a7f178b0963675c62233474dcec954", "patch": "@@ -463,6 +463,37 @@ fn values_dont_shadow_extern_crates() {\n     \"###);\n }\n \n+#[test]\n+fn std_prelude_takes_precedence_above_core_prelude() {\n+    let map = def_map(\n+        r#\"\n+        //- /main.rs crate:main deps:core,std\n+        use {Foo, Bar};\n+\n+        //- /std.rs crate:std deps:core\n+        #[prelude_import]\n+        pub use self::prelude::*;\n+        mod prelude {\n+            pub struct Foo;\n+            pub use core::prelude::Bar;\n+        }\n+\n+        //- /core.rs crate:core\n+        #[prelude_import]\n+        pub use self::prelude::*;\n+        mod prelude {\n+            pub struct Bar;\n+        }\n+        \"#,\n+    );\n+\n+    assert_snapshot!(map, @r###\"\n+        \u22eecrate\n+        \u22eeBar: t v\n+        \u22eeFoo: t v\n+    \"###);\n+}\n+\n #[test]\n fn cfg_not_test() {\n     let map = def_map("}, {"sha": "3e205efd12ae29183d5a6978602208e6964c2dec", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/7973fd66e9a7f178b0963675c62233474dcec954/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7973fd66e9a7f178b0963675c62233474dcec954/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=7973fd66e9a7f178b0963675c62233474dcec954", "patch": "@@ -597,6 +597,68 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn completes_std_prelude_if_core_is_defined() {\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                \"\n+                //- /main.rs\n+                fn foo() { let x: <|> }\n+\n+                //- /core/lib.rs\n+                #[prelude_import]\n+                use prelude::*;\n+\n+                mod prelude {\n+                    struct Option;\n+                }\n+\n+                //- /std/lib.rs\n+                #[prelude_import]\n+                use prelude::*;\n+\n+                mod prelude {\n+                    struct String;\n+                }\n+                \"\n+            ),\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"String\",\n+                source_range: [18; 18),\n+                delete: [18; 18),\n+                insert: \"String\",\n+                kind: Struct,\n+            },\n+            CompletionItem {\n+                label: \"core\",\n+                source_range: [18; 18),\n+                delete: [18; 18),\n+                insert: \"core\",\n+                kind: Module,\n+            },\n+            CompletionItem {\n+                label: \"foo()\",\n+                source_range: [18; 18),\n+                delete: [18; 18),\n+                insert: \"foo()$0\",\n+                kind: Function,\n+                lookup: \"foo\",\n+                detail: \"fn foo()\",\n+            },\n+            CompletionItem {\n+                label: \"std\",\n+                source_range: [18; 18),\n+                delete: [18; 18),\n+                insert: \"std\",\n+                kind: Module,\n+            },\n+        ]\n+        \"###\n+        );\n+    }\n+\n     #[test]\n     fn completes_macros_as_value() {\n         assert_debug_snapshot!("}, {"sha": "0e14f1b70c9ffa0f516f4dcba4cb68f1da1b55b6", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7973fd66e9a7f178b0963675c62233474dcec954/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7973fd66e9a7f178b0963675c62233474dcec954/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=7973fd66e9a7f178b0963675c62233474dcec954", "patch": "@@ -199,6 +199,7 @@ impl ProjectWorkspace {\n                     }\n                 }\n \n+                let libcore = sysroot.core().and_then(|it| sysroot_crates.get(&it).copied());\n                 let libstd = sysroot.std().and_then(|it| sysroot_crates.get(&it).copied());\n \n                 let mut pkg_to_lib_crate = FxHashMap::default();\n@@ -226,7 +227,7 @@ impl ProjectWorkspace {\n                         }\n                     }\n \n-                    // Set deps to the std and to the lib target of the current package\n+                    // Set deps to the core, std and to the lib target of the current package\n                     for &from in pkg_crates.get(&pkg).into_iter().flatten() {\n                         if let Some(to) = lib_tgt {\n                             if to != from {\n@@ -240,6 +241,13 @@ impl ProjectWorkspace {\n                                 }\n                             }\n                         }\n+                        // core is added as a dependency before std in order to\n+                        // mimic rustcs dependency order\n+                        if let Some(core) = libcore {\n+                            if let Err(_) = crate_graph.add_dep(from, \"core\".into(), core) {\n+                                log::error!(\"cyclic dependency on core for {}\", pkg.name(&cargo))\n+                            }\n+                        }\n                         if let Some(std) = libstd {\n                             if let Err(_) = crate_graph.add_dep(from, \"std\".into(), std) {\n                                 log::error!(\"cyclic dependency on std for {}\", pkg.name(&cargo))"}, {"sha": "3d827809ee808b0bc2bd20a4ddbc464555b86030", "filename": "crates/ra_project_model/src/sysroot.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7973fd66e9a7f178b0963675c62233474dcec954/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7973fd66e9a7f178b0963675c62233474dcec954/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs?ref=7973fd66e9a7f178b0963675c62233474dcec954", "patch": "@@ -27,6 +27,10 @@ struct SysrootCrateData {\n }\n \n impl Sysroot {\n+    pub fn core(&self) -> Option<SysrootCrate> {\n+        self.by_name(\"core\")\n+    }\n+\n     pub fn std(&self) -> Option<SysrootCrate> {\n         self.by_name(\"std\")\n     }"}]}