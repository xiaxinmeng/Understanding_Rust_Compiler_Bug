{"sha": "43de01f97eeee13f9bf9f19b0b241e8368633d11", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzZGUwMWY5N2VlZWUxM2Y5YmY5ZjE5YjBiMjQxZTgzNjg2MzNkMTE=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2018-02-23T20:12:28Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2018-02-23T20:12:28Z"}, "message": "cleaned trailing whitespaces", "tree": {"sha": "b01c051649f7b38581922def223d4c043723ae3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b01c051649f7b38581922def223d4c043723ae3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43de01f97eeee13f9bf9f19b0b241e8368633d11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43de01f97eeee13f9bf9f19b0b241e8368633d11", "html_url": "https://github.com/rust-lang/rust/commit/43de01f97eeee13f9bf9f19b0b241e8368633d11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43de01f97eeee13f9bf9f19b0b241e8368633d11/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58d1f839520b97ac06e48aeb49d814282b20056c", "url": "https://api.github.com/repos/rust-lang/rust/commits/58d1f839520b97ac06e48aeb49d814282b20056c", "html_url": "https://github.com/rust-lang/rust/commit/58d1f839520b97ac06e48aeb49d814282b20056c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6f0655f2033e1ff02589cbd6ddcd47902ae8bb49", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/43de01f97eeee13f9bf9f19b0b241e8368633d11/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43de01f97eeee13f9bf9f19b0b241e8368633d11/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=43de01f97eeee13f9bf9f19b0b241e8368633d11", "patch": "@@ -20,9 +20,9 @@\n //! flexible enough. Sometimes is required to have multiple references to an object and yet\n //! mutate it.\n //!\n-//! Shareable mutable containers exist to permit mutability in presence of aliasing in a \n+//! Shareable mutable containers exist to permit mutability in presence of aliasing in a\n //! controlled manner. Both `Cell<T>` and `RefCell<T>` allows to do this in a single threaded\n-//! way. However, neither `Cell<T>` nor `RefCell<T>` are thread safe (they do not implement \n+//! way. However, neither `Cell<T>` nor `RefCell<T>` are thread safe (they do not implement\n //! `Sync`), if you need to do Aliasing and Mutation between multiple threads is possible to use\n //! `Mutex`, `RwLock` or `AtomicXXX`.\n //!"}]}