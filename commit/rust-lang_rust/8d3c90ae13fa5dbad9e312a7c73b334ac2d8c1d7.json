{"sha": "8d3c90ae13fa5dbad9e312a7c73b334ac2d8c1d7", "node_id": "C_kwDOAAsO6NoAKDhkM2M5MGFlMTNmYTVkYmFkOWUzMTJhN2M3M2IzMzRhYzJkOGMxZDc", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-01-14T06:29:16Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-01-17T07:48:20Z"}, "message": "Review suggestions", "tree": {"sha": "b596c347aab1de98a0a1248b3332aad6d2345bf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b596c347aab1de98a0a1248b3332aad6d2345bf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d3c90ae13fa5dbad9e312a7c73b334ac2d8c1d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d3c90ae13fa5dbad9e312a7c73b334ac2d8c1d7", "html_url": "https://github.com/rust-lang/rust/commit/8d3c90ae13fa5dbad9e312a7c73b334ac2d8c1d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d3c90ae13fa5dbad9e312a7c73b334ac2d8c1d7/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98f30e833a2705fcb38d11b19ba75cd5fde723c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/98f30e833a2705fcb38d11b19ba75cd5fde723c7", "html_url": "https://github.com/rust-lang/rust/commit/98f30e833a2705fcb38d11b19ba75cd5fde723c7"}], "stats": {"total": 38, "additions": 18, "deletions": 20}, "files": [{"sha": "faf7e1fcb1684d0239d38d4662bf47a032dc9cd3", "filename": "compiler/rustc_const_eval/src/interpret/operand.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8d3c90ae13fa5dbad9e312a7c73b334ac2d8c1d7/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d3c90ae13fa5dbad9e312a7c73b334ac2d8c1d7/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs?ref=8d3c90ae13fa5dbad9e312a7c73b334ac2d8c1d7", "patch": "@@ -363,11 +363,11 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         src: &OpTy<'tcx, M::Provenance>,\n     ) -> InterpResult<'tcx, Either<MPlaceTy<'tcx, M::Provenance>, ImmTy<'tcx, M::Provenance>>> {\n         Ok(match src.as_mplace_or_imm() {\n-            Left(mplace) => {\n-                if let Some(val) = self.read_immediate_from_mplace_raw(&mplace)? {\n+            Left(ref mplace) => {\n+                if let Some(val) = self.read_immediate_from_mplace_raw(mplace)? {\n                     Right(val)\n                 } else {\n-                    Left(mplace)\n+                    Left(*mplace)\n                 }\n             }\n             Right(val) => Right(val),"}, {"sha": "3e0d33c64b3b3b717150349fdc7a020995228dee", "filename": "compiler/rustc_hir_analysis/src/check/compare_impl_item.rs", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/8d3c90ae13fa5dbad9e312a7c73b334ac2d8c1d7/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d3c90ae13fa5dbad9e312a7c73b334ac2d8c1d7/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs?ref=8d3c90ae13fa5dbad9e312a7c73b334ac2d8c1d7", "patch": "@@ -1368,22 +1368,20 @@ fn compare_number_of_method_arguments<'tcx>(\n             })\n             .or(trait_item_span);\n \n-        let impl_span = {\n-            let ImplItemKind::Fn(impl_m_sig, _) = &tcx.hir().expect_impl_item(impl_m.def_id.expect_local()).kind else { bug!(\"{:?} is not a method\", impl_m) };\n-            let pos = impl_number_args.saturating_sub(1);\n-            impl_m_sig\n-                .decl\n-                .inputs\n-                .get(pos)\n-                .map(|arg| {\n-                    if pos == 0 {\n-                        arg.span\n-                    } else {\n-                        arg.span.with_lo(impl_m_sig.decl.inputs[0].span.lo())\n-                    }\n-                })\n-                .unwrap_or(impl_m_span)\n-        };\n+        let ImplItemKind::Fn(impl_m_sig, _) = &tcx.hir().expect_impl_item(impl_m.def_id.expect_local()).kind else { bug!(\"{:?} is not a method\", impl_m) };\n+        let pos = impl_number_args.saturating_sub(1);\n+        let impl_span = impl_m_sig\n+            .decl\n+            .inputs\n+            .get(pos)\n+            .map(|arg| {\n+                if pos == 0 {\n+                    arg.span\n+                } else {\n+                    arg.span.with_lo(impl_m_sig.decl.inputs[0].span.lo())\n+                }\n+            })\n+            .unwrap_or(impl_m_span);\n \n         let mut err = struct_span_err!(\n             tcx.sess,"}, {"sha": "cea21c4f2816bb4269085f1d4708b24784a9b1e6", "filename": "compiler/rustc_trait_selection/src/traits/query/normalize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d3c90ae13fa5dbad9e312a7c73b334ac2d8c1d7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d3c90ae13fa5dbad9e312a7c73b334ac2d8c1d7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs?ref=8d3c90ae13fa5dbad9e312a7c73b334ac2d8c1d7", "patch": "@@ -230,7 +230,7 @@ impl<'cx, 'tcx> FallibleTypeFolder<'tcx> for QueryNormalizer<'cx, 'tcx> {\n                         if concrete_ty == ty {\n                             bug!(\n                                 \"infinite recursion generic_ty: {:#?}, substs: {:#?}, \\\n-                             concrete_ty: {:#?}, ty: {:#?}\",\n+                                 concrete_ty: {:#?}, ty: {:#?}\",\n                                 generic_ty,\n                                 substs,\n                                 concrete_ty,"}]}