{"sha": "c42a2d2bfb9cf8b4b44f28942d2d3f2838611c19", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MmEyZDJiZmI5Y2Y4YjRiNDRmMjg5NDJkMmQzZjI4Mzg2MTFjMTk=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-02T23:25:53Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-02T23:25:53Z"}, "message": "Change decl_upcall to decl_upcall_glue, more correct name.", "tree": {"sha": "d1fa147eb2bfe3ad9ed7596d2dde0d39b16738b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1fa147eb2bfe3ad9ed7596d2dde0d39b16738b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c42a2d2bfb9cf8b4b44f28942d2d3f2838611c19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c42a2d2bfb9cf8b4b44f28942d2d3f2838611c19", "html_url": "https://github.com/rust-lang/rust/commit/c42a2d2bfb9cf8b4b44f28942d2d3f2838611c19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c42a2d2bfb9cf8b4b44f28942d2d3f2838611c19/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e963f63a8d076c8e2f162ba27c49e6cb1dacb96", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e963f63a8d076c8e2f162ba27c49e6cb1dacb96", "html_url": "https://github.com/rust-lang/rust/commit/8e963f63a8d076c8e2f162ba27c49e6cb1dacb96"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "dff959742782433257340486fb1fad28d983ed96", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c42a2d2bfb9cf8b4b44f28942d2d3f2838611c19/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c42a2d2bfb9cf8b4b44f28942d2d3f2838611c19/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=c42a2d2bfb9cf8b4b44f28942d2d3f2838611c19", "patch": "@@ -612,7 +612,7 @@ fn decl_glue(ModuleRef llmod, str s) -> ValueRef {\n     ret decl_cdecl_fn(llmod, s, T_fn(vec(T_taskptr()), T_void()));\n }\n \n-fn decl_upcall(ModuleRef llmod, uint _n) -> ValueRef {\n+fn decl_upcall_glue(ModuleRef llmod, uint _n) -> ValueRef {\n     // It doesn't actually matter what type we come up with here, at the\n     // moment, as we cast the upcall function pointers to int before passing\n     // them to the indirect upcall-invocation glue.  But eventually we'd like\n@@ -4324,7 +4324,7 @@ fn make_glues(ModuleRef llmod) -> @glue_fns {\n                                             T_fn(vec(T_taskptr()), T_void())),\n \n              upcall_glues =\n-             _vec.init_fn[ValueRef](bind decl_upcall(llmod, _),\n+             _vec.init_fn[ValueRef](bind decl_upcall_glue(llmod, _),\n                                     abi.n_upcall_glues as uint),\n              no_op_type_glue = make_no_op_type_glue(llmod),\n              memcpy_glue = make_memcpy_glue(llmod),"}]}