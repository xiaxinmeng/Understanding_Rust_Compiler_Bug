{"sha": "353df59893f4dc249f06047dca659b5b2172063f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1M2RmNTk4OTNmNGRjMjQ5ZjA2MDQ3ZGNhNjU5YjViMjE3MjA2M2Y=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-14T20:19:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-14T20:19:20Z"}, "message": "Rollup merge of #73759 - GuillaumeGomez:stdin-examples, r=Dylan-DPC\n\nAdd missing Stdin and StdinLock examples\n\nr? @Dylan-DPC", "tree": {"sha": "4c1b98110e30b6816f4e92be4494a1952957e0a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c1b98110e30b6816f4e92be4494a1952957e0a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/353df59893f4dc249f06047dca659b5b2172063f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDhNJCRBK7hj4Ov3rIwAAdHIIABicISLdJI8AXHYA71Rcco5o\nLxieMga5Tmu57JZ+KIFkbmSvoQVjZUwXw0KQriSh5Yo0K/xAwbTa9uGW3iizuKc6\nzPUGRRCKx90+YibgAUie+joPT5L+5qneGUg2PIdF9UfbCWypygeKI8xx+1DaZiJZ\nH2PrHurXj1Tz4UOZ7sVptHZ895pHiHie+2X2QAdurjxpHGXDHnDNpb8whYODwcP6\nV7J6oqsB5rXpDKyuVrAtitsW/WRQFd4tRb+tC4zT5WHpMr73doJ2UBk6r5iqf338\nPwaBuNipOc3U2GNFsGTrn1Kdry1GL/8MDN1SV/J/TYBzDSqaTjOH7L4tZI0Eikg=\n=EHYr\n-----END PGP SIGNATURE-----\n", "payload": "tree 4c1b98110e30b6816f4e92be4494a1952957e0a7\nparent 2002ebacfbca288830a3c308ddc8189705c608fe\nparent 98a3b07213d695668081126a880fe7ac5dd9cd4e\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594757960 -0700\ncommitter GitHub <noreply@github.com> 1594757960 -0700\n\nRollup merge of #73759 - GuillaumeGomez:stdin-examples, r=Dylan-DPC\n\nAdd missing Stdin and StdinLock examples\n\nr? @Dylan-DPC\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/353df59893f4dc249f06047dca659b5b2172063f", "html_url": "https://github.com/rust-lang/rust/commit/353df59893f4dc249f06047dca659b5b2172063f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/353df59893f4dc249f06047dca659b5b2172063f/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2002ebacfbca288830a3c308ddc8189705c608fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/2002ebacfbca288830a3c308ddc8189705c608fe", "html_url": "https://github.com/rust-lang/rust/commit/2002ebacfbca288830a3c308ddc8189705c608fe"}, {"sha": "98a3b07213d695668081126a880fe7ac5dd9cd4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/98a3b07213d695668081126a880fe7ac5dd9cd4e", "html_url": "https://github.com/rust-lang/rust/commit/98a3b07213d695668081126a880fe7ac5dd9cd4e"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "156f555be02d8d4ab0832a725cdcc861316062ca", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/353df59893f4dc249f06047dca659b5b2172063f/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/353df59893f4dc249f06047dca659b5b2172063f/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=353df59893f4dc249f06047dca659b5b2172063f", "patch": "@@ -256,9 +256,23 @@ fn handle_ebadf<T>(r: io::Result<T>, default: T) -> io::Result<T> {\n /// [`BufRead`]: trait.BufRead.html\n ///\n /// ### Note: Windows Portability Consideration\n+///\n /// When operating in a console, the Windows implementation of this stream does not support\n /// non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return\n /// an error.\n+///\n+/// # Examples\n+///\n+/// ```no_run\n+/// use std::io::{self, Read};\n+///\n+/// fn main() -> io::Result<()> {\n+///     let mut buffer = String::new();\n+///     let mut stdin = io::stdin(); // We get `Stdin` here.\n+///     stdin.read_to_string(&mut buffer)?;\n+///     Ok(())\n+/// }\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Stdin {\n     inner: Arc<Mutex<BufReader<Maybe<StdinRaw>>>>,\n@@ -274,9 +288,26 @@ pub struct Stdin {\n /// [`Stdin::lock`]: struct.Stdin.html#method.lock\n ///\n /// ### Note: Windows Portability Consideration\n+///\n /// When operating in a console, the Windows implementation of this stream does not support\n /// non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return\n /// an error.\n+///\n+/// # Examples\n+///\n+/// ```no_run\n+/// use std::io::{self, Read};\n+///\n+/// fn main() -> io::Result<()> {\n+///     let mut buffer = String::new();\n+///     let stdin = io::stdin(); // We get `Stdin` here.\n+///     {\n+///         let mut stdin_lock = stdin.lock(); // We get `StdinLock` here.\n+///         stdin_lock.read_to_string(&mut buffer)?;\n+///     } // `StdinLock` is dropped here.\n+///     Ok(())\n+/// }\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct StdinLock<'a> {\n     inner: MutexGuard<'a, BufReader<Maybe<StdinRaw>>>,"}]}