{"sha": "3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMzY0MTM0ZWMxYWExYjg4ZWU5YWRlYzllMmMzNWU3MmE2MTA2MWE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-12-03T17:50:00Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-12-03T17:50:00Z"}, "message": "Restructure scripts and add flamegraph generator", "tree": {"sha": "2424902a34ea06b9c7ba55dd303a415bf5e6df50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2424902a34ea06b9c7ba55dd303a415bf5e6df50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "html_url": "https://github.com/rust-lang/rust/commit/3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b649180def667fcf9f4b3cef293630f70f8b6785", "url": "https://api.github.com/repos/rust-lang/rust/commits/b649180def667fcf9f4b3cef293630f70f8b6785", "html_url": "https://github.com/rust-lang/rust/commit/b649180def667fcf9f4b3cef293630f70f8b6785"}], "stats": {"total": 68, "additions": 42, "deletions": 26}, "files": [{"sha": "c14a09192a7a94110be95ab21664dfd2d306581a", "filename": ".travis.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "patch": "@@ -14,7 +14,7 @@ script:\n   - cargo install xargo || echo \"Skipping xargo install\"\n   - cargo install hyperfine || echo \"Skipping hyperfine install\"\n   - ./prepare_libcore.sh\n-  - ./build.sh\n+  - ./test.sh\n \n env:\n   - RUST_BACKTRACE=1"}, {"sha": "a2772d635d14df1dc2499b95f26ec4bd8057e9ab", "filename": "config.sh", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/config.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/config.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.sh?ref=3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "patch": "@@ -0,0 +1,23 @@\n+set -e\n+\n+unamestr=`uname`\n+if [[ \"$unamestr\" == 'Linux' ]]; then\n+   dylib_ext='so'\n+elif [[ \"$unamestr\" == 'Darwin' ]]; then\n+   dylib_ext='dylib'\n+else\n+   echo \"Unsupported os\"\n+   exit 1\n+fi\n+\n+if [[ \"$1\" == \"--release\" ]]; then\n+    channel='release'\n+    cargo build --release\n+else\n+    channel='debug'\n+    cargo build\n+fi\n+\n+export RUSTFLAGS='-Zalways-encode-mir -Cpanic=abort -Zcodegen-backend='$(pwd)'/target/'$channel'/librustc_codegen_cranelift.'$dylib_ext\n+export XARGO_RUST_SRC=$(pwd)'/target/libcore/src'\n+RUSTC=\"rustc $RUSTFLAGS -L crate=target/out --out-dir target/out\""}, {"sha": "4506c77371d4f96f1da4c5649ed1fcf1d09228f5", "filename": "flamegraph.sh", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/flamegraph.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/flamegraph.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/flamegraph.sh?ref=3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "patch": "@@ -0,0 +1,11 @@\n+#!/bin/bash\n+source config.sh\n+\n+# These files grow really big (~1.4G) because of the sample frequency\n+rm perf.data* || true\n+\n+# Profile compiling libcore\n+perf record -F 9000 --call-graph dwarf -- $RUSTC --crate-type lib target/libcore/src/libcore/lib.rs --crate-name core\n+\n+# Generate the flamegraph\n+perf script | ../FlameGraph/stackcollapse-perf.pl | grep cranelift | ../FlameGraph/flamegraph.pl > abc.svg"}, {"sha": "bdd3615d6e4f6b3b568f98c6b9c643203bea77db", "filename": "patches/0001-Disable-stdsimd.patch", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0001-Disable-stdsimd.patch", "raw_url": "https://github.com/rust-lang/rust/raw/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0001-Disable-stdsimd.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0001-Disable-stdsimd.patch?ref=3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "previous_filename": "0001-Disable-stdsimd.patch"}, {"sha": "a8f2005a64c6c6c44726f9768fac0170d853d47a", "filename": "patches/0002-Disable-u128-and-i128-in-libcore.patch", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0002-Disable-u128-and-i128-in-libcore.patch", "raw_url": "https://github.com/rust-lang/rust/raw/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0002-Disable-u128-and-i128-in-libcore.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0002-Disable-u128-and-i128-in-libcore.patch?ref=3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "previous_filename": "0002-Disable-u128-and-i128-in-libcore.patch"}, {"sha": "e2e2406697471dc7f74e92bddda1a17a2a04ca6c", "filename": "patches/0003-Disable-inline-assembly-in-spin_loop_hint.patch", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0003-Disable-inline-assembly-in-spin_loop_hint.patch", "raw_url": "https://github.com/rust-lang/rust/raw/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0003-Disable-inline-assembly-in-spin_loop_hint.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0003-Disable-inline-assembly-in-spin_loop_hint.patch?ref=3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "previous_filename": "0003-Disable-inline-assembly-in-spin_loop_hint.patch"}, {"sha": "1310b95749d43682ff27ce954926b25bd1f9835d", "filename": "patches/0004-Disable-some-more-unsupported-stuff-in-libcore.patch", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0004-Disable-some-more-unsupported-stuff-in-libcore.patch", "raw_url": "https://github.com/rust-lang/rust/raw/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0004-Disable-some-more-unsupported-stuff-in-libcore.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0004-Disable-some-more-unsupported-stuff-in-libcore.patch?ref=3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "previous_filename": "0004-Disable-some-more-unsupported-stuff-in-libcore.patch"}, {"sha": "8ffb00cff42c2d04f9906ef0d42d68aef32cffd5", "filename": "patches/0005-Disable-compiler_builtins.patch", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0005-Disable-compiler_builtins.patch", "raw_url": "https://github.com/rust-lang/rust/raw/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0005-Disable-compiler_builtins.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0005-Disable-compiler_builtins.patch?ref=3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "previous_filename": "0005-Disable-compiler_builtins.patch"}, {"sha": "1342bdd4e0c5e8eb1f94d5f804cc261b4d02c28c", "filename": "patches/0006-alloc-Disable-some-unsupported-stuff.patch", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0006-alloc-Disable-some-unsupported-stuff.patch", "raw_url": "https://github.com/rust-lang/rust/raw/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0006-alloc-Disable-some-unsupported-stuff.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0006-alloc-Disable-some-unsupported-stuff.patch?ref=3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "previous_filename": "0006-alloc-Disable-some-unsupported-stuff.patch"}, {"sha": "bbbbaab9ff10dda5aa70aaf2bd77f24911140c36", "filename": "patches/0007-Fix-libstd-building.patch", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0007-Fix-libstd-building.patch", "raw_url": "https://github.com/rust-lang/rust/raw/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0007-Fix-libstd-building.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0007-Fix-libstd-building.patch?ref=3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "previous_filename": "0007-Fix-libstd-building.patch"}, {"sha": "44edafcfcc3cb8a9cb4e32cbd4a17f407787e45d", "filename": "patches/0008-Replace-some-variadic-function-calls-with-unimplemen.patch", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0008-Replace-some-variadic-function-calls-with-unimplemen.patch", "raw_url": "https://github.com/rust-lang/rust/raw/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/patches%2F0008-Replace-some-variadic-function-calls-with-unimplemen.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0008-Replace-some-variadic-function-calls-with-unimplemen.patch?ref=3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "previous_filename": "0008-Replace-some-variadic-function-calls-with-unimplemen.patch"}, {"sha": "b3a3723e2df7816cd543d5b74f28799c68a70f9b", "filename": "prepare_libcore.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/prepare_libcore.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/prepare_libcore.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/prepare_libcore.sh?ref=3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "patch": "@@ -17,7 +17,7 @@ pushd $DST_DIR\n git init\n git add .\n git commit -m \"Initial commit\" -q\n-git apply ../../000*.patch\n+git apply ../../patches/*.patch\n popd\n \n # `alloc_system` has been merged with libstd, which doesn't build yet."}, {"sha": "f09c962a5158021bf662c780c95924c0dc6d973c", "filename": "src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "patch": "@@ -173,6 +173,11 @@ impl CodegenBackend for CraneliftCodegenBackend {\n \n         let mut flags_builder = settings::builder();\n         flags_builder.enable(\"is_pic\").unwrap();\n+        flags_builder.set(\"enable_verifier\", if cfg!(debug_assertions) {\n+            \"true\"\n+        } else {\n+            \"false\"\n+        }).unwrap();\n \n         use rustc::session::config::OptLevel;\n         match tcx.sess.opts.optimize {"}, {"sha": "7c7f789084327e491aa06c8d5c1e0de069abaff9", "filename": "test.sh", "status": "renamed", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/test.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3c364134ec1aa1b88ee9adec9e2c35e72a61061a/test.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test.sh?ref=3c364134ec1aa1b88ee9adec9e2c35e72a61061a", "patch": "@@ -1,34 +1,11 @@\n #!/bin/bash\n-\n-set -e\n-\n-unamestr=`uname`\n-if [[ \"$unamestr\" == 'Linux' ]]; then\n-   dylib_ext='so'\n-elif [[ \"$unamestr\" == 'Darwin' ]]; then\n-   dylib_ext='dylib'\n-else\n-   echo \"Unsupported os\"\n-   exit 1\n-fi\n+source config.sh\n \n build_example_bin() {\n     $RUSTC $2 --crate-name $1 --crate-type bin\n     sh -c ./target/out/$1 || true\n }\n \n-if [[ \"$1\" == \"--release\" ]]; then\n-    channel='release'\n-    cargo build --release\n-else\n-    channel='debug'\n-    cargo build\n-fi\n-\n-export RUSTFLAGS='-Zalways-encode-mir -Cpanic=abort -Zcodegen-backend='$(pwd)'/target/'$channel'/librustc_codegen_cranelift.'$dylib_ext\n-export XARGO_RUST_SRC=$(pwd)'/target/libcore/src'\n-RUSTC=\"rustc $RUSTFLAGS -L crate=target/out --out-dir target/out\"\n-\n rm -r target/out || true\n mkdir -p target/out/clif\n ", "previous_filename": "build.sh"}]}