{"sha": "e994eac3f1c6afb4458c621b991f0540f768c078", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5OTRlYWMzZjFjNmFmYjQ0NThjNjIxYjk5MWYwNTQwZjc2OGMwNzg=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-12T13:25:26Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-06-06T05:32:06Z"}, "message": "Format pub(restricted) properly", "tree": {"sha": "4c359fdf572b2c2c7de5300c3c0c5d5ecf7f980e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c359fdf572b2c2c7de5300c3c0c5d5ecf7f980e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e994eac3f1c6afb4458c621b991f0540f768c078", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e994eac3f1c6afb4458c621b991f0540f768c078", "html_url": "https://github.com/rust-lang/rust/commit/e994eac3f1c6afb4458c621b991f0540f768c078", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e994eac3f1c6afb4458c621b991f0540f768c078/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "727963afe45b27f71b0fb4a8f82e5aab242db7f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/727963afe45b27f71b0fb4a8f82e5aab242db7f1", "html_url": "https://github.com/rust-lang/rust/commit/727963afe45b27f71b0fb4a8f82e5aab242db7f1"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "12f29253f2e5debc742730ef6d2474dc32452e79", "filename": "src/utils.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e994eac3f1c6afb4458c621b991f0540f768c078/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e994eac3f1c6afb4458c621b991f0540f768c078/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=e994eac3f1c6afb4458c621b991f0540f768c078", "patch": "@@ -48,8 +48,11 @@ pub fn format_visibility(vis: &Visibility) -> Cow<'static, str> {\n                     .next()\n                     .expect(\"Non-global path in pub(restricted)?\");\n             }\n+            let is_keyword = |s: &str| s == \"self\" || s == \"super\";\n+            let path = segments_iter.join(\"::\");\n+            let in_str = if is_keyword(&path) { \"\" } else { \"in \" };\n \n-            Cow::from(format!(\"pub({}) \", segments_iter.collect::<Vec<_>>().join(\"::\")))\n+            Cow::from(format!(\"pub({}{}) \", in_str, path))\n         }\n     }\n }"}]}