{"sha": "1f795ff3b0c0cac31c1d9fd2406d0d53e774683a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNzk1ZmYzYjBjMGNhYzMxYzFkOWZkMjQwNmQwZDUzZTc3NDY4M2E=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-01-31T06:26:42Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-31T22:29:11Z"}, "message": "Re-implementing str::to_upper and str::to_lower using str::map", "tree": {"sha": "896f9f81fa7c12ad5cab9399564ea5a4d5698fc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/896f9f81fa7c12ad5cab9399564ea5a4d5698fc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f795ff3b0c0cac31c1d9fd2406d0d53e774683a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f795ff3b0c0cac31c1d9fd2406d0d53e774683a", "html_url": "https://github.com/rust-lang/rust/commit/1f795ff3b0c0cac31c1d9fd2406d0d53e774683a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f795ff3b0c0cac31c1d9fd2406d0d53e774683a/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8b657397aa9cd4b85ef68cc11b5ce48ee99d3ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8b657397aa9cd4b85ef68cc11b5ce48ee99d3ce", "html_url": "https://github.com/rust-lang/rust/commit/a8b657397aa9cd4b85ef68cc11b5ce48ee99d3ce"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "9f40dd5c3a48c9983ee56052ebc97965ea6f7ba3", "filename": "src/libcore/str.rs", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1f795ff3b0c0cac31c1d9fd2406d0d53e774683a/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f795ff3b0c0cac31c1d9fd2406d0d53e774683a/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=1f795ff3b0c0cac31c1d9fd2406d0d53e774683a", "patch": "@@ -674,30 +674,18 @@ fn windowed(nn: uint, ss: str) -> [str] {\n Function: to_lower\n \n Convert a string to lowercase\n-\n-FIXME: rewrite with map\n */\n fn to_lower(s: str) -> str {\n-    let outstr = \"\";\n-    chars_iter(s) { |c|\n-        push_char(outstr, char::to_lower(c));\n-    }\n-    ret outstr;\n+    map(s, char::to_lower)\n }\n \n /*\n Function: to_upper\n \n Convert a string to uppercase\n-\n-FIXME: rewrite with map\n */\n fn to_upper(s: str) -> str {\n-    let outstr = \"\";\n-    chars_iter(s) { |c|\n-        push_char(outstr, char::to_upper(c));\n-    }\n-    ret outstr;\n+    map(s, char::to_upper)\n }\n \n // FIXME: This is super-inefficient\n@@ -1583,8 +1571,9 @@ mod tests {\n \n     #[test]\n     fn test_to_upper() {\n-        // to_upper doesn't understand unicode yet,\n-        // but we need to at least preserve it\n+        // char::to_upper, and hence str::to_upper\n+        // are culturally insensitive: I'm not sure they\n+        // really work for anything but English ASCII, but YMMV\n \n         let unicode = \"\\u65e5\\u672c\";\n         let input = \"abcDEF\" + unicode + \"xyz:.;\";\n@@ -1593,6 +1582,12 @@ mod tests {\n         assert (eq(expected, actual));\n     }\n \n+    #[test]\n+    fn test_to_lower() {\n+        assert \"\" == map(\"\", char::to_lower);\n+        assert \"ymca\" == map(\"YMCA\", char::to_lower);\n+    }\n+\n     #[test]\n     fn test_slice() {\n         assert (eq(\"ab\", slice(\"abc\", 0u, 2u)));"}]}