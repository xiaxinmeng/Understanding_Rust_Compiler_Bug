{"sha": "5e1d109cbb73a66c8bd3282973b8ebeb74894e4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMWQxMDljYmI3M2E2NmM4YmQzMjgyOTczYjhlYmViNzQ4OTRlNGU=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-09-26T20:14:28Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-09-26T20:14:28Z"}, "message": "Merge #81\n\n81: [WIP] Reject impl keyword inside impl header r=matklad a=csmoe\n\nCloses #77 \n\nCo-authored-by: csmoe <35686186+csmoe@users.noreply.github.com>", "tree": {"sha": "de3bf059782d721efd76b0691020213858784099", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de3bf059782d721efd76b0691020213858784099"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e1d109cbb73a66c8bd3282973b8ebeb74894e4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e1d109cbb73a66c8bd3282973b8ebeb74894e4e", "html_url": "https://github.com/rust-lang/rust/commit/5e1d109cbb73a66c8bd3282973b8ebeb74894e4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e1d109cbb73a66c8bd3282973b8ebeb74894e4e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "7eb047a105ee42b5dbd8f5cf7d956ca7bdfd551a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7eb047a105ee42b5dbd8f5cf7d956ca7bdfd551a", "html_url": "https://github.com/rust-lang/rust/commit/7eb047a105ee42b5dbd8f5cf7d956ca7bdfd551a"}, {"sha": "8b710e95353d9f840f78645c9593a66adb0636b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b710e95353d9f840f78645c9593a66adb0636b6", "html_url": "https://github.com/rust-lang/rust/commit/8b710e95353d9f840f78645c9593a66adb0636b6"}], "stats": {"total": 150, "additions": 148, "deletions": 2}, "files": [{"sha": "5dfdb470ca8e40264c0c3913e46d29ba7895592d", "filename": "crates/ra_syntax/src/grammar/items/traits.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5e1d109cbb73a66c8bd3282973b8ebeb74894e4e/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1d109cbb73a66c8bd3282973b8ebeb74894e4e/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs?ref=5e1d109cbb73a66c8bd3282973b8ebeb74894e4e", "patch": "@@ -55,9 +55,9 @@ pub(super) fn impl_item(p: &mut Parser) {\n     // test impl_item_neg\n     // impl !Send for X {}\n     p.eat(EXCL);\n-    types::type_(p);\n+    impl_type(p);\n     if p.eat(FOR_KW) {\n-        types::type_(p);\n+        impl_type(p);\n     }\n     type_params::opt_where_clause(p);\n     if p.at(L_CURLY) {\n@@ -115,3 +115,17 @@ fn choose_type_params_over_qpath(p: &Parser) -> bool {\n     (p.nth(1) == LIFETIME || p.nth(1) == IDENT)\n         && (p.nth(2) == R_ANGLE || p.nth(2) == COMMA || p.nth(2) == COLON || p.nth(2) == EQ)\n }\n+\n+// test impl_type\n+// impl Type {}\n+// impl Trait1 for T {}\n+// impl impl NotType {}\n+// impl Trait2 for impl NotType {}\n+pub(crate) fn impl_type(p: &mut Parser) {\n+    if p.at(IMPL_KW) {\n+        p.error(\"expected trait or type\");\n+        return;\n+    }\n+    types::type_(p);\n+}\n+"}, {"sha": "829ca1c4be9f7289015cf9ca64f68bc7256b3072", "filename": "crates/ra_syntax/tests/data/parser/err/0026_imp_recovery.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e1d109cbb73a66c8bd3282973b8ebeb74894e4e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1d109cbb73a66c8bd3282973b8ebeb74894e4e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.rs?ref=5e1d109cbb73a66c8bd3282973b8ebeb74894e4e", "patch": "@@ -0,0 +1,2 @@\n+impl<T: Clone>\n+impl<T> OnceCell<T> {}"}, {"sha": "9e26f58a08c6f077dc6160e1893c715a16742c41", "filename": "crates/ra_syntax/tests/data/parser/err/0026_imp_recovery.txt", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/5e1d109cbb73a66c8bd3282973b8ebeb74894e4e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5e1d109cbb73a66c8bd3282973b8ebeb74894e4e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0026_imp_recovery.txt?ref=5e1d109cbb73a66c8bd3282973b8ebeb74894e4e", "patch": "@@ -0,0 +1,47 @@\n+ROOT@[0; 38)\n+  IMPL_ITEM@[0; 14)\n+    IMPL_KW@[0; 4)\n+    TYPE_PARAM_LIST@[4; 14)\n+      L_ANGLE@[4; 5)\n+      TYPE_PARAM@[5; 13)\n+        NAME@[5; 6)\n+          IDENT@[5; 6) \"T\"\n+        COLON@[6; 7)\n+        WHITESPACE@[7; 8)\n+        PATH_TYPE@[8; 13)\n+          PATH@[8; 13)\n+            PATH_SEGMENT@[8; 13)\n+              NAME_REF@[8; 13)\n+                IDENT@[8; 13) \"Clone\"\n+      R_ANGLE@[13; 14)\n+      err: `expected trait or type`\n+      err: `expected `{``\n+  WHITESPACE@[14; 15)\n+  IMPL_ITEM@[15; 37)\n+    IMPL_KW@[15; 19)\n+    TYPE_PARAM_LIST@[19; 22)\n+      L_ANGLE@[19; 20)\n+      TYPE_PARAM@[20; 21)\n+        NAME@[20; 21)\n+          IDENT@[20; 21) \"T\"\n+      R_ANGLE@[21; 22)\n+    WHITESPACE@[22; 23)\n+    PATH_TYPE@[23; 34)\n+      PATH@[23; 34)\n+        PATH_SEGMENT@[23; 34)\n+          NAME_REF@[23; 31)\n+            IDENT@[23; 31) \"OnceCell\"\n+          TYPE_ARG_LIST@[31; 34)\n+            L_ANGLE@[31; 32)\n+            TYPE_ARG@[32; 33)\n+              PATH_TYPE@[32; 33)\n+                PATH@[32; 33)\n+                  PATH_SEGMENT@[32; 33)\n+                    NAME_REF@[32; 33)\n+                      IDENT@[32; 33) \"T\"\n+            R_ANGLE@[33; 34)\n+    WHITESPACE@[34; 35)\n+    ITEM_LIST@[35; 37)\n+      L_CURLY@[35; 36)\n+      R_CURLY@[36; 37)\n+  WHITESPACE@[37; 38)"}, {"sha": "b8c7b65e31d75de01764e7bd95ff519edfa6b3fa", "filename": "crates/ra_syntax/tests/data/parser/inline/0111_impl_type.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5e1d109cbb73a66c8bd3282973b8ebeb74894e4e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0111_impl_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1d109cbb73a66c8bd3282973b8ebeb74894e4e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0111_impl_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0111_impl_type.rs?ref=5e1d109cbb73a66c8bd3282973b8ebeb74894e4e", "patch": "@@ -0,0 +1,4 @@\n+impl Type {}\n+impl Trait1 for T {}\n+impl impl NotType {}\n+impl Trait2 for impl NotType {}"}, {"sha": "a2907b060c75435cd21d9bffbadb4de394450d50", "filename": "crates/ra_syntax/tests/data/parser/inline/0111_impl_type.txt", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/5e1d109cbb73a66c8bd3282973b8ebeb74894e4e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0111_impl_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5e1d109cbb73a66c8bd3282973b8ebeb74894e4e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0111_impl_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0111_impl_type.txt?ref=5e1d109cbb73a66c8bd3282973b8ebeb74894e4e", "patch": "@@ -0,0 +1,79 @@\n+ROOT@[0; 87)\n+  IMPL_ITEM@[0; 12)\n+    IMPL_KW@[0; 4)\n+    WHITESPACE@[4; 5)\n+    PATH_TYPE@[5; 9)\n+      PATH@[5; 9)\n+        PATH_SEGMENT@[5; 9)\n+          NAME_REF@[5; 9)\n+            IDENT@[5; 9) \"Type\"\n+    WHITESPACE@[9; 10)\n+    ITEM_LIST@[10; 12)\n+      L_CURLY@[10; 11)\n+      R_CURLY@[11; 12)\n+  WHITESPACE@[12; 13)\n+  IMPL_ITEM@[13; 33)\n+    IMPL_KW@[13; 17)\n+    WHITESPACE@[17; 18)\n+    PATH_TYPE@[18; 24)\n+      PATH@[18; 24)\n+        PATH_SEGMENT@[18; 24)\n+          NAME_REF@[18; 24)\n+            IDENT@[18; 24) \"Trait1\"\n+    WHITESPACE@[24; 25)\n+    FOR_KW@[25; 28)\n+    WHITESPACE@[28; 29)\n+    PATH_TYPE@[29; 30)\n+      PATH@[29; 30)\n+        PATH_SEGMENT@[29; 30)\n+          NAME_REF@[29; 30)\n+            IDENT@[29; 30) \"T\"\n+    WHITESPACE@[30; 31)\n+    ITEM_LIST@[31; 33)\n+      L_CURLY@[31; 32)\n+      R_CURLY@[32; 33)\n+  WHITESPACE@[33; 34)\n+  IMPL_ITEM@[34; 38)\n+    IMPL_KW@[34; 38)\n+    err: `expected trait or type`\n+    err: `expected `{``\n+  WHITESPACE@[38; 39)\n+  IMPL_ITEM@[39; 54)\n+    IMPL_KW@[39; 43)\n+    WHITESPACE@[43; 44)\n+    PATH_TYPE@[44; 51)\n+      PATH@[44; 51)\n+        PATH_SEGMENT@[44; 51)\n+          NAME_REF@[44; 51)\n+            IDENT@[44; 51) \"NotType\"\n+    WHITESPACE@[51; 52)\n+    ITEM_LIST@[52; 54)\n+      L_CURLY@[52; 53)\n+      R_CURLY@[53; 54)\n+  WHITESPACE@[54; 55)\n+  IMPL_ITEM@[55; 70)\n+    IMPL_KW@[55; 59)\n+    WHITESPACE@[59; 60)\n+    PATH_TYPE@[60; 66)\n+      PATH@[60; 66)\n+        PATH_SEGMENT@[60; 66)\n+          NAME_REF@[60; 66)\n+            IDENT@[60; 66) \"Trait2\"\n+    WHITESPACE@[66; 67)\n+    FOR_KW@[67; 70)\n+    err: `expected trait or type`\n+    err: `expected `{``\n+  WHITESPACE@[70; 71)\n+  IMPL_ITEM@[71; 86)\n+    IMPL_KW@[71; 75)\n+    WHITESPACE@[75; 76)\n+    PATH_TYPE@[76; 83)\n+      PATH@[76; 83)\n+        PATH_SEGMENT@[76; 83)\n+          NAME_REF@[76; 83)\n+            IDENT@[76; 83) \"NotType\"\n+    WHITESPACE@[83; 84)\n+    ITEM_LIST@[84; 86)\n+      L_CURLY@[84; 85)\n+      R_CURLY@[85; 86)\n+  WHITESPACE@[86; 87)"}]}