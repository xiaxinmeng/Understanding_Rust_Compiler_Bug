{"sha": "29b1789a75c988cedb75dbdd8ebd0397a922e174", "node_id": "C_kwDOAAsO6NoAKDI5YjE3ODlhNzVjOTg4Y2VkYjc1ZGJkZDhlYmQwMzk3YTkyMmUxNzQ", "commit": {"author": {"name": "L\u00e9o Lanteri Thauvin", "email": "leseulartichaut@gmail.com", "date": "2023-03-10T12:27:13Z"}, "committer": {"name": "L\u00e9o Lanteri Thauvin", "email": "leseulartichaut@gmail.com", "date": "2023-03-12T13:57:38Z"}, "message": "Allow `#[target_feature]` on `main` and `start` for WASM", "tree": {"sha": "fad6e0d290858aee812b628edd87e9cf3ebfed93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fad6e0d290858aee812b628edd87e9cf3ebfed93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29b1789a75c988cedb75dbdd8ebd0397a922e174", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29b1789a75c988cedb75dbdd8ebd0397a922e174", "html_url": "https://github.com/rust-lang/rust/commit/29b1789a75c988cedb75dbdd8ebd0397a922e174", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29b1789a75c988cedb75dbdd8ebd0397a922e174/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "963305bda8723a461afe37ddb7fc6da9f56bf100", "url": "https://api.github.com/repos/rust-lang/rust/commits/963305bda8723a461afe37ddb7fc6da9f56bf100", "html_url": "https://github.com/rust-lang/rust/commit/963305bda8723a461afe37ddb7fc6da9f56bf100"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "8b6bf886b0d0ba93b763a3cf9e740c4e668e6c31", "filename": "compiler/rustc_codegen_ssa/src/codegen_attrs.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/29b1789a75c988cedb75dbdd8ebd0397a922e174/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcodegen_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29b1789a75c988cedb75dbdd8ebd0397a922e174/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcodegen_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcodegen_attrs.rs?ref=29b1789a75c988cedb75dbdd8ebd0397a922e174", "patch": "@@ -242,6 +242,9 @@ fn codegen_fn_attrs(tcx: TyCtxt<'_>, did: DefId) -> CodegenFnAttrs {\n                     // Note that this is also allowed if `actually_rustdoc` so\n                     // if a target is documenting some wasm-specific code then\n                     // it's not spuriously denied.\n+                    //\n+                    // This exception needs to be kept in sync with allowing\n+                    // `#[target_feature]` on `main` and `start`.\n                 } else if !tcx.features().target_feature_11 {\n                     let mut err = feature_err(\n                         &tcx.sess.parse_sess,"}, {"sha": "62abcbbdc9f6ead17c722c393c587dee83234b38", "filename": "compiler/rustc_hir_analysis/src/lib.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/29b1789a75c988cedb75dbdd8ebd0397a922e174/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29b1789a75c988cedb75dbdd8ebd0397a922e174/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs?ref=29b1789a75c988cedb75dbdd8ebd0397a922e174", "patch": "@@ -283,7 +283,11 @@ fn check_main_fn_ty(tcx: TyCtxt<'_>, main_def_id: DefId) {\n         error = true;\n     }\n \n-    if !tcx.codegen_fn_attrs(main_def_id).target_features.is_empty() {\n+    if !tcx.codegen_fn_attrs(main_def_id).target_features.is_empty()\n+        // Calling functions with `#[target_feature]` is not unsafe on WASM, see #84988\n+        && !tcx.sess.target.is_like_wasm\n+        && !tcx.sess.opts.actually_rustdoc\n+    {\n         tcx.sess.emit_err(errors::TargetFeatureOnMain { main: main_span });\n         error = true;\n     }\n@@ -378,7 +382,12 @@ fn check_start_fn_ty(tcx: TyCtxt<'_>, start_def_id: DefId) {\n                             });\n                             error = true;\n                         }\n-                        if attr.has_name(sym::target_feature) {\n+                        if attr.has_name(sym::target_feature)\n+                            // Calling functions with `#[target_feature]` is\n+                            // not unsafe on WASM, see #84988\n+                            && !tcx.sess.target.is_like_wasm\n+                            && !tcx.sess.opts.actually_rustdoc\n+                        {\n                             tcx.sess.emit_err(errors::StartTargetFeature {\n                                 span: attr.span,\n                                 start: start_span,"}]}