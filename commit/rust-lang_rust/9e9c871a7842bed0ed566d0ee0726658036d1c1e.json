{"sha": "9e9c871a7842bed0ed566d0ee0726658036d1c1e", "node_id": "C_kwDOAAsO6NoAKDllOWM4NzFhNzg0MmJlZDBlZDU2NmQwZWUwNzI2NjU4MDM2ZDFjMWU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-06T15:07:00Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-01-16T08:03:06Z"}, "message": "Remove `prepare_outputs`", "tree": {"sha": "a6436f4eab74644d0d2c8a0fe0164e06f2de6521", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6436f4eab74644d0d2c8a0fe0164e06f2de6521"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e9c871a7842bed0ed566d0ee0726658036d1c1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e9c871a7842bed0ed566d0ee0726658036d1c1e", "html_url": "https://github.com/rust-lang/rust/commit/9e9c871a7842bed0ed566d0ee0726658036d1c1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e9c871a7842bed0ed566d0ee0726658036d1c1e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41edaac716dde55b6a9d83ae4da0fba354ae5ba8", "url": "https://api.github.com/repos/rust-lang/rust/commits/41edaac716dde55b6a9d83ae4da0fba354ae5ba8", "html_url": "https://github.com/rust-lang/rust/commit/41edaac716dde55b6a9d83ae4da0fba354ae5ba8"}], "stats": {"total": 32, "additions": 10, "deletions": 22}, "files": [{"sha": "c56443512f4d27b96f4525debc5ab660f1431727", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e9c871a7842bed0ed566d0ee0726658036d1c1e/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e9c871a7842bed0ed566d0ee0726658036d1c1e/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=9e9c871a7842bed0ed566d0ee0726658036d1c1e", "patch": "@@ -362,16 +362,14 @@ fn run_compiler(\n                 return early_exit();\n             }\n \n-            queries.prepare_outputs()?;\n+            queries.global_ctxt()?;\n \n             if sess.opts.output_types.contains_key(&OutputType::DepInfo)\n                 && sess.opts.output_types.len() == 1\n             {\n                 return early_exit();\n             }\n \n-            queries.global_ctxt()?;\n-\n             if sess.opts.unstable_opts.no_analysis {\n                 return early_exit();\n             }"}, {"sha": "cb07688e2f508234b66d670cc2a7677bc6677a65", "filename": "compiler/rustc_interface/src/queries.rs", "status": "modified", "additions": 9, "deletions": 19, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9e9c871a7842bed0ed566d0ee0726658036d1c1e/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e9c871a7842bed0ed566d0ee0726658036d1c1e/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs?ref=9e9c871a7842bed0ed566d0ee0726658036d1c1e", "patch": "@@ -90,7 +90,6 @@ pub struct Queries<'tcx> {\n     register_plugins: Query<(ast::Crate, Lrc<LintStore>)>,\n     expansion: Query<(Lrc<ast::Crate>, Rc<RefCell<BoxedResolver>>, Lrc<LintStore>)>,\n     dep_graph: Query<DepGraph>,\n-    prepare_outputs: Query<OutputFilenames>,\n     global_ctxt: Query<QueryContext<'tcx>>,\n     ongoing_codegen: Query<Box<dyn Any>>,\n }\n@@ -109,7 +108,6 @@ impl<'tcx> Queries<'tcx> {\n             register_plugins: Default::default(),\n             expansion: Default::default(),\n             dep_graph: Default::default(),\n-            prepare_outputs: Default::default(),\n             global_ctxt: Default::default(),\n             ongoing_codegen: Default::default(),\n         }\n@@ -211,32 +209,24 @@ impl<'tcx> Queries<'tcx> {\n         })\n     }\n \n-    pub fn prepare_outputs(&self) -> Result<QueryResult<'_, OutputFilenames>> {\n-        self.prepare_outputs.compute(|| {\n-            let expansion = self.expansion()?;\n-            let (krate, boxed_resolver, _) = &*expansion.borrow();\n+    pub fn global_ctxt(&'tcx self) -> Result<QueryResult<'_, QueryContext<'tcx>>> {\n+        self.global_ctxt.compute(|| {\n             let crate_name = *self.crate_name()?.borrow();\n-            passes::prepare_outputs(\n+            let (krate, resolver, lint_store) = self.expansion()?.steal();\n+\n+            let outputs = passes::prepare_outputs(\n                 self.session(),\n                 self.compiler,\n-                krate,\n-                &*boxed_resolver,\n+                &krate,\n+                &resolver,\n                 crate_name,\n-            )\n-        })\n-    }\n+            )?;\n \n-    pub fn global_ctxt(&'tcx self) -> Result<QueryResult<'_, QueryContext<'tcx>>> {\n-        self.global_ctxt.compute(|| {\n-            let crate_name = *self.crate_name()?.borrow();\n-            let outputs = self.prepare_outputs()?.steal();\n-            let dep_graph = self.dep_graph()?.borrow().clone();\n-            let (krate, resolver, lint_store) = self.expansion()?.steal();\n             Ok(passes::create_global_ctxt(\n                 self.compiler,\n                 lint_store,\n                 krate,\n-                dep_graph,\n+                self.dep_graph()?.steal(),\n                 resolver,\n                 outputs,\n                 crate_name,"}]}