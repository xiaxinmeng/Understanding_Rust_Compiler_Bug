{"sha": "a932935d4e63bdda44c590791184071c53b9ca68", "node_id": "C_kwDOAAsO6NoAKGE5MzI5MzVkNGU2M2JkZGE0NGM1OTA3OTExODQwNzFjNTNiOWNhNjg", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-10-25T13:22:29Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-10-25T13:22:29Z"}, "message": "Fix postfix completions panicking", "tree": {"sha": "4b3bb51f75137ec8ebf0d12ebd43c359ca839dad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b3bb51f75137ec8ebf0d12ebd43c359ca839dad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a932935d4e63bdda44c590791184071c53b9ca68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a932935d4e63bdda44c590791184071c53b9ca68", "html_url": "https://github.com/rust-lang/rust/commit/a932935d4e63bdda44c590791184071c53b9ca68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a932935d4e63bdda44c590791184071c53b9ca68/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c582ffe9fa1a729b081d91f3d6ea49454dfabed", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c582ffe9fa1a729b081d91f3d6ea49454dfabed", "html_url": "https://github.com/rust-lang/rust/commit/4c582ffe9fa1a729b081d91f3d6ea49454dfabed"}], "stats": {"total": 54, "additions": 36, "deletions": 18}, "files": [{"sha": "4ace346768a643a1b465a16bb347da81ab7718b0", "filename": "crates/ide_completion/src/completions/postfix.rs", "status": "modified", "additions": 32, "deletions": 17, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/a932935d4e63bdda44c590791184071c53b9ca68/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a932935d4e63bdda44c590791184071c53b9ca68/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix.rs?ref=a932935d4e63bdda44c590791184071c53b9ca68", "patch": "@@ -55,7 +55,10 @@ pub(crate) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n         None => return,\n     };\n \n-    let postfix_snippet = build_postfix_snippet_builder(ctx, cap, &dot_receiver);\n+    let postfix_snippet = match build_postfix_snippet_builder(ctx, cap, &dot_receiver) {\n+        Some(it) => it,\n+        None => return,\n+    };\n \n     if !ctx.config.snippets.is_empty() {\n         add_custom_postfix_completions(acc, ctx, &postfix_snippet, &receiver_text);\n@@ -123,7 +126,10 @@ pub(crate) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n     // so it's better to consider references now to avoid breaking the compilation\n     let dot_receiver = include_references(dot_receiver);\n     let receiver_text = get_receiver_text(&dot_receiver, receiver_is_ambiguous_float_literal);\n-    let postfix_snippet = build_postfix_snippet_builder(ctx, cap, &dot_receiver);\n+    let postfix_snippet = match build_postfix_snippet_builder(ctx, cap, &dot_receiver) {\n+        Some(it) => it,\n+        None => return,\n+    };\n \n     match try_enum {\n         Some(try_enum) => match try_enum {\n@@ -200,27 +206,36 @@ fn include_references(initial_element: &ast::Expr) -> ast::Expr {\n     resulting_element\n }\n \n-fn build_postfix_snippet_builder<'a>(\n-    ctx: &'a CompletionContext,\n+fn build_postfix_snippet_builder<'ctx>(\n+    ctx: &'ctx CompletionContext,\n     cap: SnippetCap,\n-    receiver: &'a ast::Expr,\n-) -> impl Fn(&str, &str, &str) -> Builder + 'a {\n+    receiver: &'ctx ast::Expr,\n+) -> Option<impl Fn(&str, &str, &str) -> Builder + 'ctx> {\n     let receiver_syntax = receiver.syntax();\n-    let receiver_range = ctx.sema.original_range(receiver_syntax).range;\n+    let receiver_range = ctx.sema.original_range_opt(receiver_syntax)?.range;\n     let delete_range = TextRange::new(receiver_range.start(), ctx.source_range().end());\n \n-    move |label, detail, snippet| {\n-        let edit = TextEdit::replace(delete_range, snippet.to_string());\n-        let mut item = CompletionItem::new(CompletionKind::Postfix, ctx.source_range(), label);\n-        item.detail(detail).kind(CompletionItemKind::Snippet).snippet_edit(cap, edit);\n-        if ctx.original_token.text() == label {\n-            let relevance =\n-                CompletionRelevance { exact_postfix_snippet_match: true, ..Default::default() };\n-            item.set_relevance(relevance);\n-        }\n+    // Wrapping impl Fn in an option ruins lifetime inference for the parameters in a way that\n+    // can't be annotated for the closure, hence fix it by constructing it without the Option first\n+    fn build<'ctx>(\n+        ctx: &'ctx CompletionContext,\n+        cap: SnippetCap,\n+        delete_range: TextRange,\n+    ) -> impl Fn(&str, &str, &str) -> Builder + 'ctx {\n+        move |label, detail, snippet| {\n+            let edit = TextEdit::replace(delete_range, snippet.to_string());\n+            let mut item = CompletionItem::new(CompletionKind::Postfix, ctx.source_range(), label);\n+            item.detail(detail).kind(CompletionItemKind::Snippet).snippet_edit(cap, edit);\n+            if ctx.original_token.text() == label {\n+                let relevance =\n+                    CompletionRelevance { exact_postfix_snippet_match: true, ..Default::default() };\n+                item.set_relevance(relevance);\n+            }\n \n-        item\n+            item\n+        }\n     }\n+    Some(build(ctx, cap, delete_range))\n }\n \n fn add_custom_postfix_completions("}, {"sha": "8098045b1e5bb9d9eb22185825e3fa1591e82b21", "filename": "crates/ide_completion/src/completions/postfix/format_like.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a932935d4e63bdda44c590791184071c53b9ca68/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a932935d4e63bdda44c590791184071c53b9ca68/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs?ref=a932935d4e63bdda44c590791184071c53b9ca68", "patch": "@@ -49,7 +49,10 @@ pub(crate) fn add_format_like_completions(\n         None => return,\n     };\n \n-    let postfix_snippet = build_postfix_snippet_builder(ctx, cap, dot_receiver);\n+    let postfix_snippet = match build_postfix_snippet_builder(ctx, cap, dot_receiver) {\n+        Some(it) => it,\n+        None => return,\n+    };\n     let mut parser = FormatStrParser::new(input);\n \n     if parser.parse().is_ok() {"}]}