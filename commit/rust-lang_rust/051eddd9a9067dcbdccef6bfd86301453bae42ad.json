{"sha": "051eddd9a9067dcbdccef6bfd86301453bae42ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1MWVkZGQ5YTkwNjdkY2JkY2NlZjZiZmQ4NjMwMTQ1M2JhZTQyYWQ=", "commit": {"author": {"name": "Petr Sumbera", "email": "petr.sumbera@oracle.com", "date": "2018-07-26T10:58:00Z"}, "committer": {"name": "Petr Sumbera", "email": "petr.sumbera@oracle.com", "date": "2018-07-26T10:58:00Z"}, "message": "sparc ABI issue - structure returning from function is returned\nin 64bit registers\n\nFixes: #52638", "tree": {"sha": "6ab9a0c8b817158e3c0c281ade6e0db7ed7ed933", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ab9a0c8b817158e3c0c281ade6e0db7ed7ed933"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/051eddd9a9067dcbdccef6bfd86301453bae42ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/051eddd9a9067dcbdccef6bfd86301453bae42ad", "html_url": "https://github.com/rust-lang/rust/commit/051eddd9a9067dcbdccef6bfd86301453bae42ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/051eddd9a9067dcbdccef6bfd86301453bae42ad/comments", "author": {"login": "psumbera", "id": 4249116, "node_id": "MDQ6VXNlcjQyNDkxMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4249116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psumbera", "html_url": "https://github.com/psumbera", "followers_url": "https://api.github.com/users/psumbera/followers", "following_url": "https://api.github.com/users/psumbera/following{/other_user}", "gists_url": "https://api.github.com/users/psumbera/gists{/gist_id}", "starred_url": "https://api.github.com/users/psumbera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psumbera/subscriptions", "organizations_url": "https://api.github.com/users/psumbera/orgs", "repos_url": "https://api.github.com/users/psumbera/repos", "events_url": "https://api.github.com/users/psumbera/events{/privacy}", "received_events_url": "https://api.github.com/users/psumbera/received_events", "type": "User", "site_admin": false}, "committer": {"login": "psumbera", "id": 4249116, "node_id": "MDQ6VXNlcjQyNDkxMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4249116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psumbera", "html_url": "https://github.com/psumbera", "followers_url": "https://api.github.com/users/psumbera/followers", "following_url": "https://api.github.com/users/psumbera/following{/other_user}", "gists_url": "https://api.github.com/users/psumbera/gists{/gist_id}", "starred_url": "https://api.github.com/users/psumbera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psumbera/subscriptions", "organizations_url": "https://api.github.com/users/psumbera/orgs", "repos_url": "https://api.github.com/users/psumbera/repos", "events_url": "https://api.github.com/users/psumbera/events{/privacy}", "received_events_url": "https://api.github.com/users/psumbera/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fefe81605d6111faa8dbb3635ab2c51d59de740a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fefe81605d6111faa8dbb3635ab2c51d59de740a", "html_url": "https://github.com/rust-lang/rust/commit/fefe81605d6111faa8dbb3635ab2c51d59de740a"}], "stats": {"total": 11, "additions": 1, "deletions": 10}, "files": [{"sha": "a58aebc2ff063f29cde42dbff574888f4f23bc37", "filename": "src/librustc_target/abi/call/sparc64.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/051eddd9a9067dcbdccef6bfd86301453bae42ad/src%2Flibrustc_target%2Fabi%2Fcall%2Fsparc64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/051eddd9a9067dcbdccef6bfd86301453bae42ad/src%2Flibrustc_target%2Fabi%2Fcall%2Fsparc64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fsparc64.rs?ref=051eddd9a9067dcbdccef6bfd86301453bae42ad", "patch": "@@ -57,16 +57,7 @@ fn classify_ret_ty<'a, Ty, C>(cx: C, ret: &mut ArgType<'a, Ty>)\n     let size = ret.layout.size;\n     let bits = size.bits();\n     if bits <= 256 {\n-        let unit = if bits <= 8 {\n-            Reg::i8()\n-        } else if bits <= 16 {\n-            Reg::i16()\n-        } else if bits <= 32 {\n-            Reg::i32()\n-        } else {\n-            Reg::i64()\n-        };\n-\n+        let unit = Reg::i64();\n         ret.cast_to(Uniform {\n             unit,\n             total: size"}]}