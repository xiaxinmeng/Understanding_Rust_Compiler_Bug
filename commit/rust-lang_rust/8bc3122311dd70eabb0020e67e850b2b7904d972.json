{"sha": "8bc3122311dd70eabb0020e67e850b2b7904d972", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiYzMxMjIzMTFkZDcwZWFiYjAwMjBlNjdlODUwYjJiNzkwNGQ5NzI=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-06-15T13:12:43Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-06-15T13:12:43Z"}, "message": "ci: allow gating gha on everything but macOS\n\nIn our GitHub Actions setup macOS is too unreliable to gate on it, but\nthe other builders work fine. This commit splits the macOS builders into\na separate job (called auto-fallible), allowing us to gate on the auto\njob without failing due to macOS spurious failures.", "tree": {"sha": "7540e9bca2bc2a4bb2260e0a50a6ab40718349ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7540e9bca2bc2a4bb2260e0a50a6ab40718349ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bc3122311dd70eabb0020e67e850b2b7904d972", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl7ndHQACgkQPgar6Auq\n8ZwPmRAAw1HfXwvBY4dRZcEz1XIMFmF+6KdW0j8yMB3m2qHPI79blhXBnsvxLnob\nTHfzYjU568jwMn/AKHeQSzsbTvIGN0HfhtY+Mfnot3US4LiRjypPevqjOudpnKhI\nDE7mQoYyiDk3go400GeQtWVsUNBO7b44n6pLHEKoQrf6ocyGe5ydolrATpayPs98\nIF9Fn1ts2b7EqgjEg+Qbv3/PLWjse4nPLxhHK6IF77i+PssMxjOd1Zprx6YG7+Mz\nypfOEtt96VBF8T+uirwA0mewyxeqFs2fwXUa+XZaeYHyXwb1wQYEVwzU6N2FqsCx\neDwY5CdRXYWBfRhsan+XBHUu8hlD5LB+dQfqS0cWryXb0E6SNkU7bJ+fTEg31Gpj\nLwd+fie+rDGPkMmSP70u4fk9H3qK/+t5H9kV+Slewso81uws6i6I/O1OxeBohY2u\n5v8KqgFEp7Uv/XALVx/k7Iz4GahQ4RDbRpGkd0fl+IJynSzJnCBIlcc9JR+fYvqA\n6ba5JLRINVl9QrHqbRCLzSBoCeoU+pHJ7DE/4y1/Fo7hImkDHn215fSzB6PQKcN6\nIom3tnz3a1k1MSSMr5vRSH18tVX0s266C+NxXIu8aibY9mwtwIDfGVuuEGxnjU4j\n9euukS1PdDaAE59icAzuoLo1eEJoWk9mYkM9xujAygUmmVMeZyY=\n=vMTI\n-----END PGP SIGNATURE-----", "payload": "tree 7540e9bca2bc2a4bb2260e0a50a6ab40718349ae\nparent d4ecf31efc2309fb6df8c2a8af9aaf8176ab1c8d\nauthor Pietro Albini <pietro@pietroalbini.org> 1592226763 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1592226763 +0200\n\nci: allow gating gha on everything but macOS\n\nIn our GitHub Actions setup macOS is too unreliable to gate on it, but\nthe other builders work fine. This commit splits the macOS builders into\na separate job (called auto-fallible), allowing us to gate on the auto\njob without failing due to macOS spurious failures.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bc3122311dd70eabb0020e67e850b2b7904d972", "html_url": "https://github.com/rust-lang/rust/commit/8bc3122311dd70eabb0020e67e850b2b7904d972", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bc3122311dd70eabb0020e67e850b2b7904d972/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4ecf31efc2309fb6df8c2a8af9aaf8176ab1c8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4ecf31efc2309fb6df8c2a8af9aaf8176ab1c8d", "html_url": "https://github.com/rust-lang/rust/commit/d4ecf31efc2309fb6df8c2a8af9aaf8176ab1c8d"}], "stats": {"total": 239, "additions": 174, "deletions": 65}, "files": [{"sha": "7501674f48ffea950b2624b3f7c49ed3835c58f3", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 129, "deletions": 29, "changes": 158, "blob_url": "https://github.com/rust-lang/rust/blob/8bc3122311dd70eabb0020e67e850b2b7904d972/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/8bc3122311dd70eabb0020e67e850b2b7904d972/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=8bc3122311dd70eabb0020e67e850b2b7904d972", "patch": "@@ -373,35 +373,6 @@ jobs:\n             env:\n               DEPLOY_TOOLSTATES_JSON: toolstates-linux.json\n             os: ubuntu-latest-xl\n-          - name: dist-x86_64-apple\n-            env:\n-              SCRIPT: \"./x.py dist\"\n-              RUST_CONFIGURE_ARGS: \"--target=aarch64-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc\"\n-              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-              MACOSX_DEPLOYMENT_TARGET: 10.7\n-              NO_LLVM_ASSERTIONS: 1\n-              NO_DEBUG_ASSERTIONS: 1\n-              DIST_REQUIRE_ALL_TOOLS: 1\n-            os: macos-latest\n-          - name: dist-x86_64-apple-alt\n-            env:\n-              SCRIPT: \"./x.py dist\"\n-              RUST_CONFIGURE_ARGS: \"--enable-extended --enable-profiler --set rust.jemalloc\"\n-              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-              MACOSX_DEPLOYMENT_TARGET: 10.7\n-              NO_LLVM_ASSERTIONS: 1\n-              NO_DEBUG_ASSERTIONS: 1\n-            os: macos-latest\n-          - name: x86_64-apple\n-            env:\n-              SCRIPT: \"./x.py test\"\n-              RUST_CONFIGURE_ARGS: \"--build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\"\n-              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-              MACOSX_DEPLOYMENT_TARGET: 10.8\n-              MACOSX_STD_DEPLOYMENT_TARGET: 10.7\n-              NO_LLVM_ASSERTIONS: 1\n-              NO_DEBUG_ASSERTIONS: 1\n-            os: macos-latest\n           - name: x86_64-msvc-1\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-msvc --enable-profiler\"\n@@ -589,6 +560,135 @@ jobs:\n           AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n         if: \"success() && !env.SKIP_JOB && (github.event_name == 'push' || env.DEPLOY == '1' || env.DEPLOY_ALT == '1')\"\n+  auto-fallible:\n+    name: auto-fallible\n+    env:\n+      CI_JOB_NAME: \"${{ matrix.name }}\"\n+      SCCACHE_BUCKET: rust-lang-gha-caches\n+      DEPLOY_BUCKET: rust-lang-gha\n+      TOOLSTATE_REPO: \"https://github.com/pietroalbini/rust-toolstate\"\n+      TOOLSTATE_ISSUES_API_URL: \"https://api.github.com/repos/pietroalbini/rust-toolstate/issues\"\n+      TOOLSTATE_PUBLISH: 1\n+      CACHES_AWS_ACCESS_KEY_ID: AKIA46X5W6CZOMUQATD5\n+      ARTIFACTS_AWS_ACCESS_KEY_ID: AKIA46X5W6CZH5AYXDVF\n+      CACHE_DOMAIN: ci-caches-gha.rust-lang.org\n+    if: \"github.event_name == 'push' && github.ref == 'refs/heads/auto' && github.repository == 'rust-lang-ci/rust'\"\n+    strategy:\n+      matrix:\n+        include:\n+          - name: dist-x86_64-apple\n+            env:\n+              SCRIPT: \"./x.py dist\"\n+              RUST_CONFIGURE_ARGS: \"--target=aarch64-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc\"\n+              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              MACOSX_DEPLOYMENT_TARGET: 10.7\n+              NO_LLVM_ASSERTIONS: 1\n+              NO_DEBUG_ASSERTIONS: 1\n+              DIST_REQUIRE_ALL_TOOLS: 1\n+            os: macos-latest\n+          - name: dist-x86_64-apple-alt\n+            env:\n+              SCRIPT: \"./x.py dist\"\n+              RUST_CONFIGURE_ARGS: \"--enable-extended --enable-profiler --set rust.jemalloc\"\n+              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              MACOSX_DEPLOYMENT_TARGET: 10.7\n+              NO_LLVM_ASSERTIONS: 1\n+              NO_DEBUG_ASSERTIONS: 1\n+            os: macos-latest\n+          - name: x86_64-apple\n+            env:\n+              SCRIPT: \"./x.py test\"\n+              RUST_CONFIGURE_ARGS: \"--build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\"\n+              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              MACOSX_DEPLOYMENT_TARGET: 10.8\n+              MACOSX_STD_DEPLOYMENT_TARGET: 10.7\n+              NO_LLVM_ASSERTIONS: 1\n+              NO_DEBUG_ASSERTIONS: 1\n+            os: macos-latest\n+    timeout-minutes: 600\n+    runs-on: \"${{ matrix.os }}\"\n+    steps:\n+      - name: disable git crlf conversion\n+        run: git config --global core.autocrlf false\n+        shell: bash\n+      - name: checkout the source code\n+        uses: actions/checkout@v1\n+        with:\n+          fetch-depth: 2\n+      - name: configure GitHub Actions to kill the build when outdated\n+        uses: rust-lang/simpleinfra/github-actions/cancel-outdated-builds@master\n+        with:\n+          github_token: \"${{ secrets.github_token }}\"\n+        if: \"success() && !env.SKIP_JOB && github.ref != 'refs/heads/try'\"\n+      - name: add extra environment variables\n+        run: src/ci/scripts/setup-environment.sh\n+        env:\n+          EXTRA_VARIABLES: \"${{ toJson(matrix.env) }}\"\n+        if: success() && !env.SKIP_JOB\n+      - name: decide whether to skip this job\n+        run: src/ci/scripts/should-skip-this.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: collect CPU statistics\n+        run: src/ci/scripts/collect-cpu-stats.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: show the current environment\n+        run: src/ci/scripts/dump-environment.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: install awscli\n+        run: src/ci/scripts/install-awscli.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: install sccache\n+        run: src/ci/scripts/install-sccache.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: install clang\n+        run: src/ci/scripts/install-clang.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: install WIX\n+        run: src/ci/scripts/install-wix.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: install InnoSetup\n+        run: src/ci/scripts/install-innosetup.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: ensure the build happens on a partition with enough space\n+        run: src/ci/scripts/symlink-build-dir.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: disable git crlf conversion\n+        run: src/ci/scripts/disable-git-crlf-conversion.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: install MSYS2\n+        run: src/ci/scripts/install-msys2.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: install MinGW\n+        run: src/ci/scripts/install-mingw.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: install ninja\n+        run: src/ci/scripts/install-ninja.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: enable ipv6 on Docker\n+        run: src/ci/scripts/enable-docker-ipv6.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: disable git crlf conversion\n+        run: src/ci/scripts/disable-git-crlf-conversion.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: checkout submodules\n+        run: src/ci/scripts/checkout-submodules.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: ensure line endings are correct\n+        run: src/ci/scripts/verify-line-endings.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: run the build\n+        run: src/ci/scripts/run-build-from-ci.sh\n+        env:\n+          AWS_ACCESS_KEY_ID: \"${{ env.CACHES_AWS_ACCESS_KEY_ID }}\"\n+          AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n+          TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n+        if: success() && !env.SKIP_JOB\n+      - name: upload artifacts to S3\n+        run: src/ci/scripts/upload-artifacts.sh\n+        env:\n+          AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n+          AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n+        if: \"success() && !env.SKIP_JOB && (github.event_name == 'push' || env.DEPLOY == '1' || env.DEPLOY_ALT == '1')\"\n   master:\n     name: master\n     runs-on: ubuntu-latest"}, {"sha": "6e441f8f5ad507bcd052399688b75a2179bd6786", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 45, "deletions": 36, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/8bc3122311dd70eabb0020e67e850b2b7904d972/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/8bc3122311dd70eabb0020e67e850b2b7904d972/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=8bc3122311dd70eabb0020e67e850b2b7904d972", "patch": "@@ -419,42 +419,6 @@ jobs:\n               DEPLOY_TOOLSTATES_JSON: toolstates-linux.json\n             <<: *job-linux-xl\n \n-          ####################\n-          #  macOS Builders  #\n-          ####################\n-\n-          - name: dist-x86_64-apple\n-            env:\n-              SCRIPT: ./x.py dist\n-              RUST_CONFIGURE_ARGS: --target=aarch64-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc\n-              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-              MACOSX_DEPLOYMENT_TARGET: 10.7\n-              NO_LLVM_ASSERTIONS: 1\n-              NO_DEBUG_ASSERTIONS: 1\n-              DIST_REQUIRE_ALL_TOOLS: 1\n-            <<: *job-macos-xl\n-\n-          - name: dist-x86_64-apple-alt\n-            env:\n-              SCRIPT: ./x.py dist\n-              RUST_CONFIGURE_ARGS: --enable-extended --enable-profiler --set rust.jemalloc\n-              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-              MACOSX_DEPLOYMENT_TARGET: 10.7\n-              NO_LLVM_ASSERTIONS: 1\n-              NO_DEBUG_ASSERTIONS: 1\n-            <<: *job-macos-xl\n-\n-          - name: x86_64-apple\n-            env:\n-              SCRIPT: ./x.py test\n-              RUST_CONFIGURE_ARGS: --build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\n-              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-              MACOSX_DEPLOYMENT_TARGET: 10.8\n-              MACOSX_STD_DEPLOYMENT_TARGET: 10.7\n-              NO_LLVM_ASSERTIONS: 1\n-              NO_DEBUG_ASSERTIONS: 1\n-            <<: *job-macos-xl\n-\n           ######################\n           #  Windows Builders  #\n           ######################\n@@ -606,6 +570,51 @@ jobs:\n               SCRIPT: python x.py dist\n             <<: *job-windows-xl\n \n+  auto-fallible:\n+    <<: *base-ci-job\n+    name: auto-fallible\n+    env:\n+      <<: [*shared-ci-variables, *prod-variables]\n+    if: github.event_name == 'push' && github.ref == 'refs/heads/auto' && github.repository == 'rust-lang-ci/rust'\n+    strategy:\n+      matrix:\n+        include:\n+          ####################\n+          #  macOS Builders  #\n+          ####################\n+\n+          - name: dist-x86_64-apple\n+            env:\n+              SCRIPT: ./x.py dist\n+              RUST_CONFIGURE_ARGS: --target=aarch64-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc\n+              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              MACOSX_DEPLOYMENT_TARGET: 10.7\n+              NO_LLVM_ASSERTIONS: 1\n+              NO_DEBUG_ASSERTIONS: 1\n+              DIST_REQUIRE_ALL_TOOLS: 1\n+            <<: *job-macos-xl\n+\n+          - name: dist-x86_64-apple-alt\n+            env:\n+              SCRIPT: ./x.py dist\n+              RUST_CONFIGURE_ARGS: --enable-extended --enable-profiler --set rust.jemalloc\n+              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              MACOSX_DEPLOYMENT_TARGET: 10.7\n+              NO_LLVM_ASSERTIONS: 1\n+              NO_DEBUG_ASSERTIONS: 1\n+            <<: *job-macos-xl\n+\n+          - name: x86_64-apple\n+            env:\n+              SCRIPT: ./x.py test\n+              RUST_CONFIGURE_ARGS: --build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\n+              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              MACOSX_DEPLOYMENT_TARGET: 10.8\n+              MACOSX_STD_DEPLOYMENT_TARGET: 10.7\n+              NO_LLVM_ASSERTIONS: 1\n+              NO_DEBUG_ASSERTIONS: 1\n+            <<: *job-macos-xl\n+\n   master:\n     name: master\n     runs-on: ubuntu-latest"}]}