{"sha": "4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "node_id": "C_kwDOAAsO6NoAKDRlODlmZmE2NTZjMjRkOWZjYjkxYWQ3YjE4MmQyZmVmZWQ4NmNkYTY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-13T12:18:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-13T12:18:20Z"}, "message": "Auto merge of #9640 - Alexendoo:edition-revisions, r=llogiq\n\nFix edition revision ui tests\n\n#9605 had me wondering how the edition revision tests were working for `manual_assert` but not for `@nyurik,` but it turns out `manual_assert`'s tests weren't working either. I checked how `rust-lang/rust` does it and apparently it comes down to whitespace, `//[rev] edition:X` works \ud83d\ude2c\n\nRemoves the revisions from `match_wild_err_arm` as I couldn't find any edition dependant behaviour there\n\nr? `@llogiq`\n\nchangelog: none", "tree": {"sha": "4c87c7ce205b0601ce49dc6e1c85eb5e7156f9b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c87c7ce205b0601ce49dc6e1c85eb5e7156f9b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "html_url": "https://github.com/rust-lang/rust/commit/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe3200c0389553124d036990d0754d10e8762b04", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe3200c0389553124d036990d0754d10e8762b04", "html_url": "https://github.com/rust-lang/rust/commit/fe3200c0389553124d036990d0754d10e8762b04"}, {"sha": "124caeb9a21963984dab483f7a3cce9198fca83a", "url": "https://api.github.com/repos/rust-lang/rust/commits/124caeb9a21963984dab483f7a3cce9198fca83a", "html_url": "https://github.com/rust-lang/rust/commit/124caeb9a21963984dab483f7a3cce9198fca83a"}], "stats": {"total": 243, "additions": 55, "deletions": 188}, "files": [{"sha": "c9a819ba535449a1b8d90b2324204f74b318a585", "filename": "tests/ui/manual_assert.edition2018.fixed", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Fmanual_assert.edition2018.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Fmanual_assert.edition2018.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.edition2018.fixed?ref=4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "patch": "@@ -1,6 +1,6 @@\n // revisions: edition2018 edition2021\n-// [edition2018] edition:2018\n-// [edition2021] edition:2021\n+//[edition2018] edition:2018\n+//[edition2021] edition:2021\n // run-rustfix\n \n #![warn(clippy::manual_assert)]\n@@ -29,7 +29,9 @@ fn main() {\n         panic!(\"qaqaq{:?}\", a);\n     }\n     assert!(a.is_empty(), \"qaqaq{:?}\", a);\n-    assert!(a.is_empty(), \"qwqwq\");\n+    if !a.is_empty() {\n+        panic!(\"qwqwq\");\n+    }\n     if a.len() == 3 {\n         println!(\"qwq\");\n         println!(\"qwq\");\n@@ -44,21 +46,32 @@ fn main() {\n         println!(\"qwq\");\n     }\n     let b = vec![1, 2, 3];\n-    assert!(!b.is_empty(), \"panic1\");\n-    assert!(!(b.is_empty() && a.is_empty()), \"panic2\");\n-    assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");\n-    assert!(!(b.is_empty() || a.is_empty()), \"panic4\");\n-    assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");\n+    if b.is_empty() {\n+        panic!(\"panic1\");\n+    }\n+    if b.is_empty() && a.is_empty() {\n+        panic!(\"panic2\");\n+    }\n+    if a.is_empty() && !b.is_empty() {\n+        panic!(\"panic3\");\n+    }\n+    if b.is_empty() || a.is_empty() {\n+        panic!(\"panic4\");\n+    }\n+    if a.is_empty() || !b.is_empty() {\n+        panic!(\"panic5\");\n+    }\n     assert!(!a.is_empty(), \"with expansion {}\", one!());\n }\n \n fn issue7730(a: u8) {\n     // Suggestion should preserve comment\n-    // comment\n-/* this is a\n+    if a > 2 {\n+        // comment\n+        /* this is a\n         multiline\n         comment */\n-/// Doc comment\n-// comment after `panic!`\n-assert!(!(a > 2), \"panic with comment\");\n+        /// Doc comment\n+        panic!(\"panic with comment\") // comment after `panic!`\n+    }\n }"}, {"sha": "c4e6bcd92fc1320a6805b218efdce46d84c41848", "filename": "tests/ui/manual_assert.edition2018.stderr", "status": "modified", "additions": 1, "deletions": 96, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Fmanual_assert.edition2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Fmanual_assert.edition2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.edition2018.stderr?ref=4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "patch": "@@ -12,84 +12,6 @@ help: try instead\n LL |     assert!(a.is_empty(), \"qaqaq{:?}\", a);\n    |\n \n-error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:34:5\n-   |\n-LL | /     if !a.is_empty() {\n-LL | |         panic!(\"qwqwq\");\n-LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(a.is_empty(), \"qwqwq\");\n-   |\n-\n-error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:51:5\n-   |\n-LL | /     if b.is_empty() {\n-LL | |         panic!(\"panic1\");\n-LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!b.is_empty(), \"panic1\");\n-   |\n-\n-error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:54:5\n-   |\n-LL | /     if b.is_empty() && a.is_empty() {\n-LL | |         panic!(\"panic2\");\n-LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(b.is_empty() && a.is_empty()), \"panic2\");\n-   |\n-\n-error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:57:5\n-   |\n-LL | /     if a.is_empty() && !b.is_empty() {\n-LL | |         panic!(\"panic3\");\n-LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");\n-   |\n-\n-error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:60:5\n-   |\n-LL | /     if b.is_empty() || a.is_empty() {\n-LL | |         panic!(\"panic4\");\n-LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(b.is_empty() || a.is_empty()), \"panic4\");\n-   |\n-\n-error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:63:5\n-   |\n-LL | /     if a.is_empty() || !b.is_empty() {\n-LL | |         panic!(\"panic5\");\n-LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");\n-   |\n-\n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:66:5\n    |\n@@ -103,22 +25,5 @@ help: try instead\n LL |     assert!(!a.is_empty(), \"with expansion {}\", one!());\n    |\n \n-error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:73:5\n-   |\n-LL | /     if a > 2 {\n-LL | |         // comment\n-LL | |         /* this is a\n-LL | |         multiline\n-...  |\n-LL | |         panic!(\"panic with comment\") // comment after `panic!`\n-LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(a > 2), \"panic with comment\");\n-   |\n-\n-error: aborting due to 9 previous errors\n+error: aborting due to 2 previous errors\n "}, {"sha": "2f62de51cadcd948a98c0b75668aa2f13c6b4a92", "filename": "tests/ui/manual_assert.edition2021.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Fmanual_assert.edition2021.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Fmanual_assert.edition2021.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.edition2021.fixed?ref=4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "patch": "@@ -1,6 +1,6 @@\n // revisions: edition2018 edition2021\n-// [edition2018] edition:2018\n-// [edition2021] edition:2021\n+//[edition2018] edition:2018\n+//[edition2021] edition:2021\n // run-rustfix\n \n #![warn(clippy::manual_assert)]"}, {"sha": "6a4cc2468d4193815b6b43299db873b95d8fb33d", "filename": "tests/ui/manual_assert.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Fmanual_assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Fmanual_assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.rs?ref=4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "patch": "@@ -1,6 +1,6 @@\n // revisions: edition2018 edition2021\n-// [edition2018] edition:2018\n-// [edition2021] edition:2021\n+//[edition2018] edition:2018\n+//[edition2021] edition:2021\n // run-rustfix\n \n #![warn(clippy::manual_assert)]"}, {"sha": "525533bf07bb08958a977db61f19770c2ad2c58a", "filename": "tests/ui/match_wild_err_arm.edition2021.stderr", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fe3200c0389553124d036990d0754d10e8762b04/tests%2Fui%2Fmatch_wild_err_arm.edition2021.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe3200c0389553124d036990d0754d10e8762b04/tests%2Fui%2Fmatch_wild_err_arm.edition2021.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wild_err_arm.edition2021.stderr?ref=fe3200c0389553124d036990d0754d10e8762b04", "patch": "@@ -1,35 +0,0 @@\n-error: `Err(_)` matches all errors\n-  --> $DIR/match_wild_err_arm.rs:14:9\n-   |\n-LL |         Err(_) => panic!(\"err\"),\n-   |         ^^^^^^\n-   |\n-   = note: match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\n-   = note: `-D clippy::match-wild-err-arm` implied by `-D warnings`\n-\n-error: `Err(_)` matches all errors\n-  --> $DIR/match_wild_err_arm.rs:20:9\n-   |\n-LL |         Err(_) => panic!(),\n-   |         ^^^^^^\n-   |\n-   = note: match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\n-\n-error: `Err(_)` matches all errors\n-  --> $DIR/match_wild_err_arm.rs:26:9\n-   |\n-LL |         Err(_) => {\n-   |         ^^^^^^\n-   |\n-   = note: match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\n-\n-error: `Err(_e)` matches all errors\n-  --> $DIR/match_wild_err_arm.rs:34:9\n-   |\n-LL |         Err(_e) => panic!(),\n-   |         ^^^^^^^\n-   |\n-   = note: match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\n-\n-error: aborting due to 4 previous errors\n-"}, {"sha": "823be65efe065703b8481ced833636d15b245373", "filename": "tests/ui/match_wild_err_arm.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Fmatch_wild_err_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Fmatch_wild_err_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wild_err_arm.rs?ref=4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "patch": "@@ -1,6 +1,3 @@\n-// revisions: edition2018 edition2021\n-// [edition2018] edition:2018\n-// [edition2021] edition:2021\n #![feature(exclusive_range_pattern)]\n #![allow(clippy::match_same_arms)]\n #![warn(clippy::match_wild_err_arm)]"}, {"sha": "b016d682698c834a25a1c8dfd6fdfae1771a2fa4", "filename": "tests/ui/match_wild_err_arm.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Fmatch_wild_err_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Fmatch_wild_err_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wild_err_arm.stderr?ref=4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "patch": "@@ -1,5 +1,5 @@\n error: `Err(_)` matches all errors\n-  --> $DIR/match_wild_err_arm.rs:14:9\n+  --> $DIR/match_wild_err_arm.rs:11:9\n    |\n LL |         Err(_) => panic!(\"err\"),\n    |         ^^^^^^\n@@ -8,23 +8,23 @@ LL |         Err(_) => panic!(\"err\"),\n    = note: `-D clippy::match-wild-err-arm` implied by `-D warnings`\n \n error: `Err(_)` matches all errors\n-  --> $DIR/match_wild_err_arm.rs:20:9\n+  --> $DIR/match_wild_err_arm.rs:17:9\n    |\n LL |         Err(_) => panic!(),\n    |         ^^^^^^\n    |\n    = note: match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\n \n error: `Err(_)` matches all errors\n-  --> $DIR/match_wild_err_arm.rs:26:9\n+  --> $DIR/match_wild_err_arm.rs:23:9\n    |\n LL |         Err(_) => {\n    |         ^^^^^^\n    |\n    = note: match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\n \n error: `Err(_e)` matches all errors\n-  --> $DIR/match_wild_err_arm.rs:34:9\n+  --> $DIR/match_wild_err_arm.rs:31:9\n    |\n LL |         Err(_e) => panic!(),\n    |         ^^^^^^^", "previous_filename": "tests/ui/match_wild_err_arm.edition2018.stderr"}, {"sha": "960b159dc36d1730ad341142a87b74958cd9f5fc", "filename": "tests/ui/uninlined_format_args_2021.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fe3200c0389553124d036990d0754d10e8762b04/tests%2Fui%2Funinlined_format_args_2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe3200c0389553124d036990d0754d10e8762b04/tests%2Fui%2Funinlined_format_args_2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinlined_format_args_2021.rs?ref=fe3200c0389553124d036990d0754d10e8762b04", "patch": "@@ -1,23 +0,0 @@\n-// run-rustfix\n-// edition:2021\n-\n-#![warn(clippy::uninlined_format_args)]\n-\n-fn main() {\n-    let var = 1;\n-\n-    println!(\"val='{}'\", var);\n-\n-    if var > 0 {\n-        panic!(\"p1 {}\", var);\n-    }\n-    if var > 0 {\n-        panic!(\"p2 {0}\", var);\n-    }\n-    if var > 0 {\n-        panic!(\"p3 {var}\", var = var);\n-    }\n-    if var > 0 {\n-        panic!(\"p4 {var}\");\n-    }\n-}"}, {"sha": "96cc0877960ec00c627a896f5eb54cafc633f2c1", "filename": "tests/ui/uninlined_format_args_panic.edition2018.fixed", "status": "renamed", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Funinlined_format_args_panic.edition2018.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Funinlined_format_args_panic.edition2018.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinlined_format_args_panic.edition2018.fixed?ref=4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "patch": "@@ -1,5 +1,7 @@\n+// revisions: edition2018 edition2021\n+//[edition2018] edition:2018\n+//[edition2021] edition:2021\n // run-rustfix\n-// edition:2018\n \n #![warn(clippy::uninlined_format_args)]\n ", "previous_filename": "tests/ui/uninlined_format_args_2018.fixed"}, {"sha": "2c8061259229a83f8f82609b7800cb12c226fabe", "filename": "tests/ui/uninlined_format_args_panic.edition2018.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Funinlined_format_args_panic.edition2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Funinlined_format_args_panic.edition2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinlined_format_args_panic.edition2018.stderr?ref=4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "patch": "@@ -1,5 +1,5 @@\n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args_2018.rs:9:5\n+  --> $DIR/uninlined_format_args_panic.rs:11:5\n    |\n LL |     println!(\"val='{}'\", var);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^", "previous_filename": "tests/ui/uninlined_format_args_2018.stderr"}, {"sha": "faf8ca4d3a797aa2e989571786cd8c317a2e6652", "filename": "tests/ui/uninlined_format_args_panic.edition2021.fixed", "status": "renamed", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Funinlined_format_args_panic.edition2021.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Funinlined_format_args_panic.edition2021.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinlined_format_args_panic.edition2021.fixed?ref=4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "patch": "@@ -1,5 +1,7 @@\n+// revisions: edition2018 edition2021\n+//[edition2018] edition:2018\n+//[edition2021] edition:2021\n // run-rustfix\n-// edition:2021\n \n #![warn(clippy::uninlined_format_args)]\n \n@@ -17,7 +19,11 @@ fn main() {\n     if var > 0 {\n         panic!(\"p3 {var}\");\n     }\n-    if var > 0 {\n-        panic!(\"p4 {var}\");\n+\n+    #[allow(non_fmt_panics)]\n+    {\n+        if var > 0 {\n+            panic!(\"p4 {var}\");\n+        }\n     }\n }", "previous_filename": "tests/ui/uninlined_format_args_2021.fixed"}, {"sha": "0f09c45f41324b94da38117a4d885deabe904c0f", "filename": "tests/ui/uninlined_format_args_panic.edition2021.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Funinlined_format_args_panic.edition2021.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Funinlined_format_args_panic.edition2021.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinlined_format_args_panic.edition2021.stderr?ref=4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "patch": "@@ -1,5 +1,5 @@\n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args_2021.rs:9:5\n+  --> $DIR/uninlined_format_args_panic.rs:11:5\n    |\n LL |     println!(\"val='{}'\", var);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -12,7 +12,7 @@ LL +     println!(\"val='{var}'\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args_2021.rs:12:9\n+  --> $DIR/uninlined_format_args_panic.rs:14:9\n    |\n LL |         panic!(\"p1 {}\", var);\n    |         ^^^^^^^^^^^^^^^^^^^^\n@@ -24,7 +24,7 @@ LL +         panic!(\"p1 {var}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args_2021.rs:15:9\n+  --> $DIR/uninlined_format_args_panic.rs:17:9\n    |\n LL |         panic!(\"p2 {0}\", var);\n    |         ^^^^^^^^^^^^^^^^^^^^^\n@@ -36,7 +36,7 @@ LL +         panic!(\"p2 {var}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args_2021.rs:18:9\n+  --> $DIR/uninlined_format_args_panic.rs:20:9\n    |\n LL |         panic!(\"p3 {var}\", var = var);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^", "previous_filename": "tests/ui/uninlined_format_args_2021.stderr"}, {"sha": "6421c5bbed2f5a05a6b5523d8560f36a374ca6c3", "filename": "tests/ui/uninlined_format_args_panic.rs", "status": "renamed", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Funinlined_format_args_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e89ffa656c24d9fcb91ad7b182d2fefed86cda6/tests%2Fui%2Funinlined_format_args_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinlined_format_args_panic.rs?ref=4e89ffa656c24d9fcb91ad7b182d2fefed86cda6", "patch": "@@ -1,5 +1,7 @@\n+// revisions: edition2018 edition2021\n+//[edition2018] edition:2018\n+//[edition2021] edition:2021\n // run-rustfix\n-// edition:2018\n \n #![warn(clippy::uninlined_format_args)]\n ", "previous_filename": "tests/ui/uninlined_format_args_2018.rs"}]}