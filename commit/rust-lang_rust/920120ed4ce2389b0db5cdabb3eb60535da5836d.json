{"sha": "920120ed4ce2389b0db5cdabb3eb60535da5836d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMDEyMGVkNGNlMjM4OWIwZGI1Y2RhYmIzZWI2MDUzNWRhNTgzNmQ=", "commit": {"author": {"name": "Kevin Yeh", "email": "kevinyeah@utexas.edu", "date": "2015-11-29T04:36:37Z"}, "committer": {"name": "Kevin Yeh", "email": "kevinyeah@utexas.edu", "date": "2015-11-29T05:54:54Z"}, "message": "Use last_span for macro spans", "tree": {"sha": "50e2fb5df62b43a62ceaf1071dd9e473babde2f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50e2fb5df62b43a62ceaf1071dd9e473babde2f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/920120ed4ce2389b0db5cdabb3eb60535da5836d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/920120ed4ce2389b0db5cdabb3eb60535da5836d", "html_url": "https://github.com/rust-lang/rust/commit/920120ed4ce2389b0db5cdabb3eb60535da5836d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/920120ed4ce2389b0db5cdabb3eb60535da5836d/comments", "author": {"login": "kyeah", "id": 2308368, "node_id": "MDQ6VXNlcjIzMDgzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2308368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyeah", "html_url": "https://github.com/kyeah", "followers_url": "https://api.github.com/users/kyeah/followers", "following_url": "https://api.github.com/users/kyeah/following{/other_user}", "gists_url": "https://api.github.com/users/kyeah/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyeah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyeah/subscriptions", "organizations_url": "https://api.github.com/users/kyeah/orgs", "repos_url": "https://api.github.com/users/kyeah/repos", "events_url": "https://api.github.com/users/kyeah/events{/privacy}", "received_events_url": "https://api.github.com/users/kyeah/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kyeah", "id": 2308368, "node_id": "MDQ6VXNlcjIzMDgzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2308368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyeah", "html_url": "https://github.com/kyeah", "followers_url": "https://api.github.com/users/kyeah/followers", "following_url": "https://api.github.com/users/kyeah/following{/other_user}", "gists_url": "https://api.github.com/users/kyeah/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyeah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyeah/subscriptions", "organizations_url": "https://api.github.com/users/kyeah/orgs", "repos_url": "https://api.github.com/users/kyeah/repos", "events_url": "https://api.github.com/users/kyeah/events{/privacy}", "received_events_url": "https://api.github.com/users/kyeah/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4295b9fb0789b9c354d17457dc60a7ca13119a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4295b9fb0789b9c354d17457dc60a7ca13119a6", "html_url": "https://github.com/rust-lang/rust/commit/b4295b9fb0789b9c354d17457dc60a7ca13119a6"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "ce65f99e2f0c989122b9db55145dda6183be3481", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/920120ed4ce2389b0db5cdabb3eb60535da5836d/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/920120ed4ce2389b0db5cdabb3eb60535da5836d/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=920120ed4ce2389b0db5cdabb3eb60535da5836d", "patch": "@@ -3253,7 +3253,8 @@ impl<'a> Parser<'a> {\n                         let tts = try!(self.parse_seq_to_end(&token::CloseDelim(delim),\n                                 seq_sep_none(), |p| p.parse_token_tree()));\n                         let mac = Mac_ { path: path, tts: tts, ctxt: EMPTY_CTXT };\n-                        pat = PatMac(codemap::Spanned {node: mac, span: mk_sp(lo, self.span.hi)});\n+                        pat = PatMac(codemap::Spanned {node: mac,\n+                                                       span: mk_sp(lo, self.last_span.hi)});\n                     } else {\n                         // Parse ident @ pat\n                         // This can give false positives and parse nullary enums,\n@@ -4487,7 +4488,7 @@ impl<'a> Parser<'a> {\n             let m_ = Mac_ { path: pth, tts: tts, ctxt: EMPTY_CTXT };\n             let m: ast::Mac = codemap::Spanned { node: m_,\n                                                 span: mk_sp(lo,\n-                                                            self.span.hi) };\n+                                                            self.last_span.hi) };\n             if delim != token::Brace {\n                 try!(self.expect(&token::Semi))\n             }\n@@ -5537,7 +5538,7 @@ impl<'a> Parser<'a> {\n             let m = Mac_ { path: pth, tts: tts, ctxt: EMPTY_CTXT };\n             let m: ast::Mac = codemap::Spanned { node: m,\n                                              span: mk_sp(mac_lo,\n-                                                         self.span.hi) };\n+                                                         self.last_span.hi) };\n \n             if delim != token::Brace {\n                 if !try!(self.eat(&token::Semi) ){"}]}