{"sha": "911395a45198fa18708da6622b11c4c16a5e52a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMTM5NWE0NTE5OGZhMTg3MDhkYTY2MjJiMTFjNGMxNmE1ZTUyYTI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-03-12T04:24:04Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-04-10T22:46:49Z"}, "message": "Squash the various 'reorder imports' option into one\n\ncc #2185", "tree": {"sha": "cce1d8b8d42ede7da47b0d5b48523323dc44617f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cce1d8b8d42ede7da47b0d5b48523323dc44617f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/911395a45198fa18708da6622b11c4c16a5e52a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/911395a45198fa18708da6622b11c4c16a5e52a2", "html_url": "https://github.com/rust-lang/rust/commit/911395a45198fa18708da6622b11c4c16a5e52a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/911395a45198fa18708da6622b11c4c16a5e52a2/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "518ece227223cd6fc6d808c893b4404f450261f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/518ece227223cd6fc6d808c893b4404f450261f2", "html_url": "https://github.com/rust-lang/rust/commit/518ece227223cd6fc6d808c893b4404f450261f2"}], "stats": {"total": 158, "additions": 19, "deletions": 139}, "files": [{"sha": "8ace886a98f7dd7a38d15906b5dadae8e769b425", "filename": "Configurations.md", "status": "modified", "additions": 2, "deletions": 115, "changes": 117, "blob_url": "https://github.com/rust-lang/rust/blob/911395a45198fa18708da6622b11c4c16a5e52a2/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/911395a45198fa18708da6622b11c4c16a5e52a2/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=911395a45198fa18708da6622b11c4c16a5e52a2", "patch": "@@ -6,7 +6,7 @@ A possible content of `rustfmt.toml` or `.rustfmt.toml` might look like this:\n \n ```toml\n indent_style = \"Block\"\n-reorder_imported_names = true\n+reorder_imports = false\n ```\n \n Each configuration option is either stable or unstable.\n@@ -1240,31 +1240,10 @@ fn dolor() -> usize {}\n fn adipiscing() -> usize {}\n ```\n \n-## `reorder_imported_names`\n-\n-Reorder lists of names in import statements alphabetically\n-\n-- **Default value**: `false`\n-- **Possible values**: `true`, `false`\n-- **Stable**: No\n-\n-#### `false` (default):\n-\n-```rust\n-use super::{lorem, ipsum, dolor, sit};\n-```\n-\n-#### `true`:\n-\n-```rust\n-use super::{dolor, ipsum, lorem, sit};\n-```\n-\n-See also [`reorder_imports`](#reorder_imports).\n \n ## `reorder_imports`\n \n-Reorder import statements alphabetically\n+Reorder import and extern crate statements alphabetically\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n@@ -1288,98 +1267,6 @@ use lorem;\n use sit;\n ```\n \n-See also [`reorder_imported_names`](#reorder_imported_names), [`reorder_imports_in_group`](#reorder_imports_in_group).\n-\n-## `reorder_imports_in_group`\n-\n-Reorder import statements in group\n-\n-- **Default value**: `false`\n-- **Possible values**: `true`, `false`\n-- **Stable**: No\n-\n-**Note:** This option takes effect only when [`reorder_imports`](#reorder_imports) is set to `true`.\n-\n-#### `true` (default):\n-\n-```rust\n-use std::io;\n-use std::mem;\n-\n-use dolor;\n-use ipsum;\n-use lorem;\n-use sit;\n-```\n-\n-#### `false`:\n-\n-\n-```rust\n-use dolor;\n-use ipsum;\n-use lorem;\n-use sit;\n-use std::io;\n-use std::mem;\n-```\n-\n-See also [`reorder_imports`](#reorder_imports).\n-\n-## `reorder_extern_crates`\n-\n-Reorder `extern crate` statements alphabetically\n-\n-- **Default value**: `true`\n-- **Possible values**: `true`, `false`\n-- **Stable**: No\n-\n-#### `true` (default):\n-\n-```rust\n-extern crate dolor;\n-extern crate ipsum;\n-extern crate lorem;\n-extern crate sit;\n-```\n-\n-#### `false`:\n-\n-```rust\n-extern crate lorem;\n-extern crate ipsum;\n-\n-extern crate dolor;\n-extern crate sit;\n-```\n-\n-See also [`reorder_extern_crates_in_group`](#reorder_extern_crates_in_group).\n-\n-## `reorder_extern_crates_in_group`\n-\n-Reorder `extern crate` statements in group\n-\n-- **Default value**: `true`\n-- **Possible values**: `true`, `false`\n-- **Stable**: No\n-\n-#### `false` (default):\n-\n-This value has no influence beyond the effect of the [`reorder_extern_crates`](#reorder_extern_crates) option. Set [`reorder_extern_crates`](#reorder_extern_crates) to `false` if you do not want `extern crate` groups to be collapsed and ordered.\n-\n-#### `true`:\n-\n-**Note:** This only takes effect when [`reorder_extern_crates`](#reorder_extern_crates) is set to `true`.\n-\n-```rust\n-extern crate a;\n-extern crate b;\n-\n-extern crate dolor;\n-extern crate ipsum;\n-extern crate lorem;\n-extern crate sit;\n-```\n \n ## `reorder_modules`\n "}, {"sha": "63a75f880b620de016b7d3a53bac7999620e43cd", "filename": "src/config/mod.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/911395a45198fa18708da6622b11c4c16a5e52a2/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/911395a45198fa18708da6622b11c4c16a5e52a2/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=911395a45198fa18708da6622b11c4c16a5e52a2", "patch": "@@ -68,14 +68,9 @@ create_config! {\n     imports_layout: ListTactic, ListTactic::Mixed, false, \"Item layout inside a import block\";\n \n     // Ordering\n-    reorder_extern_crates: bool, true, false, \"Reorder extern crate statements alphabetically\";\n-    reorder_extern_crates_in_group: bool, true, false, \"Reorder extern crate statements in group\";\n-    reorder_imports: bool, true, false, \"Reorder import statements alphabetically\";\n-    reorder_imports_in_group: bool, true, false, \"Reorder import statements in group\";\n-    reorder_imported_names: bool, true, false,\n-        \"Reorder lists of names in import statements alphabetically\";\n-    reorder_modules: bool, true, false, \"Reorder module statemtents alphabetically in group\";\n     reorder_impl_items: bool, false, false, \"Reorder impl items\";\n+    reorder_imports: bool, true, false, \"Reorder import and extern crate statements alphabetically\";\n+    reorder_modules: bool, true, false, \"Reorder module statements alphabetically in group\";\n \n     // Spaces around punctuation\n     type_punctuation_density: TypeDensity, TypeDensity::Wide, false,"}, {"sha": "62273a8659648c9e475a2e3c0478ae347bd2acd6", "filename": "src/imports.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/911395a45198fa18708da6622b11c4c16a5e52a2/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/911395a45198fa18708da6622b11c4c16a5e52a2/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=911395a45198fa18708da6622b11c4c16a5e52a2", "patch": "@@ -485,6 +485,7 @@ fn rewrite_nested_use_tree(\n         );\n         (tactic, remaining_width)\n     };\n+\n     let ends_with_newline = context.config.imports_indent() == IndentStyle::Block\n         && tactic != DefinitiveListTactic::Horizontal;\n     let fmt = ListFormatting {"}, {"sha": "61eeb9332a6af6aa7c83e74a7cb26af99f7e96cb", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/911395a45198fa18708da6622b11c4c16a5e52a2/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/911395a45198fa18708da6622b11c4c16a5e52a2/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=911395a45198fa18708da6622b11c4c16a5e52a2", "patch": "@@ -42,8 +42,8 @@ use std::time::Duration;\n use syntax::ast;\n pub use syntax::codemap::FileName;\n use syntax::codemap::{CodeMap, FilePathMapping};\n-use syntax::errors::emitter::{ColorConfig, EmitterWriter};\n use syntax::errors::{DiagnosticBuilder, Handler};\n+use syntax::errors::emitter::{ColorConfig, EmitterWriter};\n use syntax::parse::{self, ParseSess};\n \n use checkstyle::{output_footer, output_header};"}, {"sha": "273f20c92543ee5394918016a0e851548444dfda", "filename": "src/reorder.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/911395a45198fa18708da6622b11c4c16a5e52a2/src%2Freorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/911395a45198fa18708da6622b11c4c16a5e52a2/src%2Freorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freorder.rs?ref=911395a45198fa18708da6622b11c4c16a5e52a2", "patch": "@@ -198,18 +198,18 @@ impl ReorderableItemKind {\n \n     pub fn is_reorderable(&self, config: &Config) -> bool {\n         match *self {\n-            ReorderableItemKind::ExternCrate => config.reorder_extern_crates(),\n+            ReorderableItemKind::ExternCrate => config.reorder_imports(),\n             ReorderableItemKind::Mod => config.reorder_modules(),\n             ReorderableItemKind::Use => config.reorder_imports(),\n             ReorderableItemKind::Other => false,\n         }\n     }\n \n-    pub fn in_group(&self, config: &Config) -> bool {\n+    pub fn in_group(&self) -> bool {\n         match *self {\n-            ReorderableItemKind::ExternCrate => config.reorder_extern_crates_in_group(),\n-            ReorderableItemKind::Mod => config.reorder_modules(),\n-            ReorderableItemKind::Use => config.reorder_imports_in_group(),\n+            ReorderableItemKind::ExternCrate => false,\n+            ReorderableItemKind::Mod => true,\n+            ReorderableItemKind::Use => true,\n             ReorderableItemKind::Other => false,\n         }\n     }\n@@ -268,7 +268,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n             let item_kind = ReorderableItemKind::from(items[0]);\n             if item_kind.is_reorderable(self.config) {\n                 let visited_items_num =\n-                    self.walk_reorderable_items(items, item_kind, item_kind.in_group(self.config));\n+                    self.walk_reorderable_items(items, item_kind, item_kind.in_group());\n                 let (_, rest) = items.split_at(visited_items_num);\n                 items = rest;\n             } else {"}, {"sha": "61989cace75de253dee4f0650d76c83023f0c2d0", "filename": "tests/target/extern.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/911395a45198fa18708da6622b11c4c16a5e52a2/tests%2Ftarget%2Fextern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/911395a45198fa18708da6622b11c4c16a5e52a2/tests%2Ftarget%2Fextern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fextern.rs?ref=911395a45198fa18708da6622b11c4c16a5e52a2", "patch": "@@ -1,17 +1,14 @@\n // rustfmt-normalize_comments: true\n \n-extern crate foo;\n-extern crate foo as bar;\n-\n+extern crate bar;\n extern crate chrono;\n extern crate dotenv;\n-extern crate futures;\n-\n-extern crate bar;\n extern crate foo;\n-\n-// #2315\n+extern crate foo;\n+extern crate foo as bar;\n+extern crate futures;\n extern crate proc_macro;\n+// #2315\n extern crate proc_macro2;\n \n extern \"C\" {"}, {"sha": "9d247aaf6dffb6cbe1c01705c9ef127f88892f7a", "filename": "tests/target/import-fencepost-length.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/911395a45198fa18708da6622b11c4c16a5e52a2/tests%2Ftarget%2Fimport-fencepost-length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/911395a45198fa18708da6622b11c4c16a5e52a2/tests%2Ftarget%2Fimport-fencepost-length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimport-fencepost-length.rs?ref=911395a45198fa18708da6622b11c4c16a5e52a2", "patch": "@@ -1,4 +1,4 @@\n-use aaaaaaaaaaaaaaa::bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;\n use aaaaaaaaaaaaaaa::{bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, ccccccccccccccccccccccccccccccc, dddddddd};\n use aaaaaaaaaaaaaaa::{bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, ccccccccccccccccccccccccccccccc,\n                       ddddddddd};\n+use aaaaaaaaaaaaaaa::bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;"}, {"sha": "b6d939fc125f313a68e937aa0f389a5c43f1b9b7", "filename": "tests/target/imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/911395a45198fa18708da6622b11c4c16a5e52a2/tests%2Ftarget%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/911395a45198fa18708da6622b11c4c16a5e52a2/tests%2Ftarget%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports.rs?ref=911395a45198fa18708da6622b11c4c16a5e52a2", "patch": "@@ -54,9 +54,9 @@ use foo::{baz, qux as bar};\n \n // With absolute paths\n use foo;\n+use Foo;\n use foo::Bar;\n use foo::{Bar, Baz};\n-use Foo;\n use {Bar, Baz};\n \n // Root globs"}]}