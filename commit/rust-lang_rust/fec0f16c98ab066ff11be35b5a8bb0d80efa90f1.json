{"sha": "fec0f16c98ab066ff11be35b5a8bb0d80efa90f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlYzBmMTZjOThhYjA2NmZmMTFiZTM1YjVhOGJiMGQ4MGVmYTkwZjE=", "commit": {"author": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2014-11-23T18:14:02Z"}, "committer": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2014-12-08T09:02:53Z"}, "message": "libserialize: Always use a decimal point when emitting a float value\n\nJSON doesn't distinguish between integer and float. They are just\nnumbers. Also, in the current implementation, a fractional number\nwithout the fractional part is encoded without a decimal point.\n\nThereforce, when the value is decoded, it is first rendered as Json,\neither I64 or U64. This reduces type safety, because while the original\nintention was to cast the value to float, it can also be casted to\ninteger.\n\nAs a workaround of this problem, this commit makes the encoder always\nemit a decimal point even if it is not necessary. If the fractional part\nof a float number is zero, \".0\" is padded to the end of the result.\n\n[breaking-change]", "tree": {"sha": "b0a0aa80fb1c2a3ad2434c71bef14c54f1889b40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0a0aa80fb1c2a3ad2434c71bef14c54f1889b40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fec0f16c98ab066ff11be35b5a8bb0d80efa90f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fec0f16c98ab066ff11be35b5a8bb0d80efa90f1", "html_url": "https://github.com/rust-lang/rust/commit/fec0f16c98ab066ff11be35b5a8bb0d80efa90f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fec0f16c98ab066ff11be35b5a8bb0d80efa90f1/comments", "author": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f102123b659911dbee25bbe518d73d66185bb978", "url": "https://api.github.com/repos/rust-lang/rust/commits/f102123b659911dbee25bbe518d73d66185bb978", "html_url": "https://github.com/rust-lang/rust/commit/f102123b659911dbee25bbe518d73d66185bb978"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "163fbcdff700cf4a2215c86b9f42a524ecb47f26", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fec0f16c98ab066ff11be35b5a8bb0d80efa90f1/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fec0f16c98ab066ff11be35b5a8bb0d80efa90f1/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=fec0f16c98ab066ff11be35b5a8bb0d80efa90f1", "patch": "@@ -386,7 +386,8 @@ fn spaces(wr: &mut io::Writer, mut n: uint) -> Result<(), io::IoError> {\n fn fmt_number_or_null(v: f64) -> string::String {\n     match v.classify() {\n         FPNaN | FPInfinite => string::String::from_str(\"null\"),\n-        _ => f64::to_str_digits(v, 6u)\n+        _ if v.fract() != 0f64 => f64::to_str_digits(v, 6u),\n+        _ => f64::to_str_digits(v, 6u) + \".0\",\n     }\n }\n \n@@ -2504,8 +2505,8 @@ mod tests {\n \n     #[test]\n     fn test_write_f64() {\n-        assert_eq!(F64(3.0).to_string().into_string(), \"3\");\n-        assert_eq!(F64(3.0).to_pretty_str().into_string(), \"3\");\n+        assert_eq!(F64(3.0).to_string().into_string(), \"3.0\");\n+        assert_eq!(F64(3.0).to_pretty_str().into_string(), \"3.0\");\n \n         assert_eq!(F64(3.1).to_string().into_string(), \"3.1\");\n         assert_eq!(F64(3.1).to_pretty_str().into_string(), \"3.1\");"}]}