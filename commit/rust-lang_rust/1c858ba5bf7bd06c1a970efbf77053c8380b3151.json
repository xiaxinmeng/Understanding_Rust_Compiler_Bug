{"sha": "1c858ba5bf7bd06c1a970efbf77053c8380b3151", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjODU4YmE1YmY3YmQwNmMxYTk3MGVmYmY3NzA1M2M4MzgwYjMxNTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-06T10:39:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-06T10:39:21Z"}, "message": "Auto merge of #88678 - matthewjasper:if-boolean-scoping, r=oli-obk\n\nChange scope of temporaries in match guards\n\nEach pattern in a match arm has its own copy of the match guard in MIR, with its own temporary, so it has to be dropped before the the guards are joined to the single copy of the arm. This PR changes `then_else_break` to allow it to put the temporary in the innermost scope possible. This change isn't done for `if` expressions because that affects a large number of mir-opt tests and could more significantly affect performance.\n\ncloses #88649\n\nr? `@oli-obk`", "tree": {"sha": "847426634bf6c1aaed58d2bde1942f1142adcde2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/847426634bf6c1aaed58d2bde1942f1142adcde2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c858ba5bf7bd06c1a970efbf77053c8380b3151", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c858ba5bf7bd06c1a970efbf77053c8380b3151", "html_url": "https://github.com/rust-lang/rust/commit/1c858ba5bf7bd06c1a970efbf77053c8380b3151", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c858ba5bf7bd06c1a970efbf77053c8380b3151/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d19d864e79531ad702e4f44b2635da6c50cc5eb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d19d864e79531ad702e4f44b2635da6c50cc5eb0", "html_url": "https://github.com/rust-lang/rust/commit/d19d864e79531ad702e4f44b2635da6c50cc5eb0"}, {"sha": "ad7f109bfaa92f84bbcdbb5d376edfd8e66812fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad7f109bfaa92f84bbcdbb5d376edfd8e66812fd", "html_url": "https://github.com/rust-lang/rust/commit/ad7f109bfaa92f84bbcdbb5d376edfd8e66812fd"}], "stats": {"total": 49, "additions": 25, "deletions": 24}, "files": [{"sha": "e30e758e63779db24c094a481e44e7672586c761", "filename": "compiler/rustc_mir_build/src/build/expr/into.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c858ba5bf7bd06c1a970efbf77053c8380b3151/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c858ba5bf7bd06c1a970efbf77053c8380b3151/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs?ref=1c858ba5bf7bd06c1a970efbf77053c8380b3151", "patch": "@@ -68,7 +68,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                                     let then_blk = unpack!(this.then_else_break(\n                                         block,\n                                         &this.thir[cond],\n-                                        condition_scope,\n+                                        Some(condition_scope),\n                                         condition_scope,\n                                         then_expr.span,\n                                     ));"}, {"sha": "ba94e15444a1905f5c7efcd3da76cca26eab0edd", "filename": "compiler/rustc_mir_build/src/build/matches/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1c858ba5bf7bd06c1a970efbf77053c8380b3151/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c858ba5bf7bd06c1a970efbf77053c8380b3151/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Fmod.rs?ref=1c858ba5bf7bd06c1a970efbf77053c8380b3151", "patch": "@@ -39,7 +39,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         &mut self,\n         mut block: BasicBlock,\n         expr: &Expr<'tcx>,\n-        temp_scope: region::Scope,\n+        temp_scope_override: Option<region::Scope>,\n         break_scope: region::Scope,\n         variable_scope_span: Span,\n     ) -> BlockAnd<()> {\n@@ -53,7 +53,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                     this.then_else_break(\n                         block,\n                         &this.thir[value],\n-                        temp_scope,\n+                        temp_scope_override,\n                         break_scope,\n                         variable_scope_span,\n                     )\n@@ -63,6 +63,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                 this.lower_let_expr(block, &this.thir[expr], pat, break_scope, variable_scope_span)\n             }\n             _ => {\n+                let temp_scope = temp_scope_override.unwrap_or_else(|| this.local_scope());\n                 let mutability = Mutability::Mut;\n                 let place =\n                     unpack!(block = this.as_temp(block, Some(temp_scope), expr, mutability));\n@@ -1948,7 +1949,6 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n             }\n \n             let arm_span = arm_span.unwrap();\n-            let arm_scope = self.local_scope();\n             let match_scope = match_scope.unwrap();\n             let mut guard_span = rustc_span::DUMMY_SP;\n \n@@ -1957,7 +1957,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                     Guard::If(e) => {\n                         let e = &this.thir[e];\n                         guard_span = e.span;\n-                        this.then_else_break(block, e, arm_scope, match_scope, arm_span)\n+                        this.then_else_break(block, e, None, match_scope, arm_span)\n                     }\n                     Guard::IfLet(ref pat, scrutinee) => {\n                         let s = &this.thir[scrutinee];"}, {"sha": "c2e422f80025042d5fa852af81866f4feabd1753", "filename": "src/test/mir-opt/match_arm_scopes.complicated_match.SimplifyCfg-initial.after-ElaborateDrops.after.diff", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fmatch_arm_scopes.complicated_match.SimplifyCfg-initial.after-ElaborateDrops.after.diff", "raw_url": "https://github.com/rust-lang/rust/raw/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fmatch_arm_scopes.complicated_match.SimplifyCfg-initial.after-ElaborateDrops.after.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_arm_scopes.complicated_match.SimplifyCfg-initial.after-ElaborateDrops.after.diff?ref=1c858ba5bf7bd06c1a970efbf77053c8380b3151", "patch": "@@ -93,7 +93,7 @@\n +     bb6: {\n           _0 = const 3_i32;                // scope 0 at $DIR/match-arm-scopes.rs:15:59: 15:60\n           StorageDead(_10);                // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-          StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:15:77: 15:78\n+          StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n -         goto -> bb23;                    // scope 0 at no-location\n +         goto -> bb20;                    // scope 0 at no-location\n       }\n@@ -108,6 +108,7 @@\n -     bb11: {\n +     bb8: {\n           StorageDead(_10);                // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n+          StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n -         FakeRead(ForMatchGuard, _3);     // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n -         FakeRead(ForMatchGuard, _4);     // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n -         FakeRead(ForGuardBinding, _6);   // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n@@ -123,7 +124,7 @@\n -     bb12: {\n +     bb9: {\n           StorageDead(_10);                // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-          StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:15:77: 15:78\n+          StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n           StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:15:77: 15:78\n           StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:15:77: 15:78\n -         falseEdge -> [real: bb2, imaginary: bb3]; // scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n@@ -149,7 +150,7 @@\n +     bb11: {\n           _0 = const 3_i32;                // scope 0 at $DIR/match-arm-scopes.rs:15:59: 15:60\n           StorageDead(_13);                // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-          StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:15:77: 15:78\n+          StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n -         goto -> bb23;                    // scope 0 at no-location\n +         goto -> bb20;                    // scope 0 at no-location\n       }\n@@ -164,6 +165,7 @@\n -     bb16: {\n +     bb13: {\n           StorageDead(_13);                // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n+          StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n -         FakeRead(ForMatchGuard, _3);     // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n -         FakeRead(ForMatchGuard, _4);     // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n -         FakeRead(ForGuardBinding, _6);   // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n@@ -179,7 +181,7 @@\n -     bb17: {\n +     bb14: {\n           StorageDead(_13);                // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-          StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:15:77: 15:78\n+          StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n           StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:15:77: 15:78\n           StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:15:77: 15:78\n -         falseEdge -> [real: bb4, imaginary: bb5]; // scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n@@ -190,7 +192,6 @@\n +     bb15: {\n           StorageDead(_7);                 // scope 0 at $DIR/match-arm-scopes.rs:15:77: 15:78\n           StorageDead(_5);                 // scope 0 at $DIR/match-arm-scopes.rs:15:77: 15:78\n-          StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:15:77: 15:78\n           StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:15:77: 15:78\n           StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:15:77: 15:78\n -         goto -> bb22;                    // scope 0 at $DIR/match-arm-scopes.rs:15:77: 15:78"}, {"sha": "111549d6f3d596739e7aea36567b203194e5d612", "filename": "src/test/mir-opt/match_false_edges.full_tested_match.PromoteTemps.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.full_tested_match.PromoteTemps.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.full_tested_match.PromoteTemps.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.full_tested_match.PromoteTemps.after.mir?ref=1c858ba5bf7bd06c1a970efbf77053c8380b3151", "patch": "@@ -72,6 +72,7 @@ fn full_tested_match() -> () {\n     }\n \n     bb7: {\n+        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:16:26: 16:27\n         FakeRead(ForMatchGuard, _4);     // scope 0 at $DIR/match_false_edges.rs:16:26: 16:27\n         FakeRead(ForGuardBinding, _6);   // scope 0 at $DIR/match_false_edges.rs:16:26: 16:27\n         StorageLive(_5);                 // scope 0 at $DIR/match_false_edges.rs:16:14: 16:15\n@@ -81,13 +82,12 @@ fn full_tested_match() -> () {\n         _1 = (const 1_i32, move _8);     // scope 2 at $DIR/match_false_edges.rs:16:31: 16:37\n         StorageDead(_8);                 // scope 2 at $DIR/match_false_edges.rs:16:36: 16:37\n         StorageDead(_5);                 // scope 0 at $DIR/match_false_edges.rs:16:36: 16:37\n-        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:16:36: 16:37\n         StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:16:36: 16:37\n         goto -> bb10;                    // scope 0 at $DIR/match_false_edges.rs:16:36: 16:37\n     }\n \n     bb8: {\n-        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:16:36: 16:37\n+        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:16:26: 16:27\n         StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:16:36: 16:37\n         goto -> bb3;                     // scope 0 at $DIR/match_false_edges.rs:16:20: 16:27\n     }"}, {"sha": "0953eba16583833021550d5eae8fce476612c64b", "filename": "src/test/mir-opt/match_false_edges.full_tested_match2.PromoteTemps.before.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.full_tested_match2.PromoteTemps.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.full_tested_match2.PromoteTemps.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.full_tested_match2.PromoteTemps.before.mir?ref=1c858ba5bf7bd06c1a970efbf77053c8380b3151", "patch": "@@ -70,6 +70,7 @@ fn full_tested_match2() -> () {\n     }\n \n     bb7: {\n+        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:27:26: 27:27\n         FakeRead(ForMatchGuard, _4);     // scope 0 at $DIR/match_false_edges.rs:27:26: 27:27\n         FakeRead(ForGuardBinding, _6);   // scope 0 at $DIR/match_false_edges.rs:27:26: 27:27\n         StorageLive(_5);                 // scope 0 at $DIR/match_false_edges.rs:27:14: 27:15\n@@ -79,13 +80,12 @@ fn full_tested_match2() -> () {\n         _1 = (const 1_i32, move _8);     // scope 2 at $DIR/match_false_edges.rs:27:31: 27:37\n         StorageDead(_8);                 // scope 2 at $DIR/match_false_edges.rs:27:36: 27:37\n         StorageDead(_5);                 // scope 0 at $DIR/match_false_edges.rs:27:36: 27:37\n-        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:27:36: 27:37\n         StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:27:36: 27:37\n         goto -> bb10;                    // scope 0 at $DIR/match_false_edges.rs:27:36: 27:37\n     }\n \n     bb8: {\n-        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:27:36: 27:37\n+        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:27:26: 27:27\n         StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:27:36: 27:37\n         falseEdge -> [real: bb3, imaginary: bb1]; // scope 0 at $DIR/match_false_edges.rs:27:20: 27:27\n     }"}, {"sha": "a07e257f5494f79962fc9785e1b43b89fd77e3a5", "filename": "src/test/mir-opt/match_false_edges.main.PromoteTemps.before.mir", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.main.PromoteTemps.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.main.PromoteTemps.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.main.PromoteTemps.before.mir?ref=1c858ba5bf7bd06c1a970efbf77053c8380b3151", "patch": "@@ -78,19 +78,19 @@ fn main() -> () {\n     }\n \n     bb7: {\n+        StorageDead(_8);                 // scope 0 at $DIR/match_false_edges.rs:36:27: 36:28\n         FakeRead(ForMatchGuard, _5);     // scope 0 at $DIR/match_false_edges.rs:36:27: 36:28\n         FakeRead(ForGuardBinding, _7);   // scope 0 at $DIR/match_false_edges.rs:36:27: 36:28\n         StorageLive(_6);                 // scope 0 at $DIR/match_false_edges.rs:36:14: 36:16\n         _6 = ((_2 as Some).0: i32);      // scope 0 at $DIR/match_false_edges.rs:36:14: 36:16\n         _1 = const 1_i32;                // scope 2 at $DIR/match_false_edges.rs:36:32: 36:33\n         StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33\n-        StorageDead(_8);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33\n         StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33\n         goto -> bb14;                    // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33\n     }\n \n     bb8: {\n-        StorageDead(_8);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33\n+        StorageDead(_8);                 // scope 0 at $DIR/match_false_edges.rs:36:27: 36:28\n         StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33\n         falseEdge -> [real: bb1, imaginary: bb1]; // scope 0 at $DIR/match_false_edges.rs:36:21: 36:28\n     }\n@@ -122,20 +122,20 @@ fn main() -> () {\n \n     bb12: {\n         StorageDead(_13);                // scope 0 at $DIR/match_false_edges.rs:38:28: 38:29\n+        StorageDead(_12);                // scope 0 at $DIR/match_false_edges.rs:38:28: 38:29\n         FakeRead(ForMatchGuard, _5);     // scope 0 at $DIR/match_false_edges.rs:38:28: 38:29\n         FakeRead(ForGuardBinding, _11);  // scope 0 at $DIR/match_false_edges.rs:38:28: 38:29\n         StorageLive(_10);                // scope 0 at $DIR/match_false_edges.rs:38:14: 38:15\n         _10 = ((_2 as Some).0: i32);     // scope 0 at $DIR/match_false_edges.rs:38:14: 38:15\n         _1 = const 3_i32;                // scope 4 at $DIR/match_false_edges.rs:38:33: 38:34\n         StorageDead(_10);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34\n-        StorageDead(_12);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34\n         StorageDead(_11);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34\n         goto -> bb14;                    // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34\n     }\n \n     bb13: {\n         StorageDead(_13);                // scope 0 at $DIR/match_false_edges.rs:38:28: 38:29\n-        StorageDead(_12);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34\n+        StorageDead(_12);                // scope 0 at $DIR/match_false_edges.rs:38:28: 38:29\n         StorageDead(_11);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34\n         falseEdge -> [real: bb3, imaginary: bb3]; // scope 0 at $DIR/match_false_edges.rs:38:20: 38:29\n     }"}, {"sha": "89eefa69019a25f70964ea9cacd17a136452be74", "filename": "src/test/mir-opt/match_test.main.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fmatch_test.main.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fmatch_test.main.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_test.main.SimplifyCfg-initial.after.mir?ref=1c858ba5bf7bd06c1a970efbf77053c8380b3151", "patch": "@@ -75,14 +75,14 @@ fn main() -> () {\n     }\n \n     bb10: {\n+        StorageDead(_9);                 // scope 2 at $DIR/match_test.rs:13:18: 13:19\n         FakeRead(ForMatchGuard, _8);     // scope 2 at $DIR/match_test.rs:13:18: 13:19\n         _3 = const 0_i32;                // scope 2 at $DIR/match_test.rs:13:23: 13:24\n-        StorageDead(_9);                 // scope 2 at $DIR/match_test.rs:13:23: 13:24\n         goto -> bb14;                    // scope 2 at $DIR/match_test.rs:13:23: 13:24\n     }\n \n     bb11: {\n-        StorageDead(_9);                 // scope 2 at $DIR/match_test.rs:13:23: 13:24\n+        StorageDead(_9);                 // scope 2 at $DIR/match_test.rs:13:18: 13:19\n         falseEdge -> [real: bb3, imaginary: bb6]; // scope 2 at $DIR/match_test.rs:13:18: 13:19\n     }\n "}, {"sha": "0511b59cf013a5a7359f02fdf11b70abdf315cb5", "filename": "src/test/mir-opt/matches_reduce_branches.match_nested_if.MatchBranchSimplification.32bit.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.32bit.diff?ref=1c858ba5bf7bd06c1a970efbf77053c8380b3151", "patch": "@@ -66,7 +66,7 @@\n +         _7 = move _2;                    // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n           StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:45:9: 45:10\n -         _1 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:47:13: 47:17\n--         goto -> bb9;                     // scope 0 at $DIR/matches_reduce_branches.rs:48:9: 48:10\n+-         goto -> bb9;                     // scope 0 at $DIR/matches_reduce_branches.rs:47:13: 47:17\n -     }\n - \n -     bb8: {"}, {"sha": "0511b59cf013a5a7359f02fdf11b70abdf315cb5", "filename": "src/test/mir-opt/matches_reduce_branches.match_nested_if.MatchBranchSimplification.64bit.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.64bit.diff?ref=1c858ba5bf7bd06c1a970efbf77053c8380b3151", "patch": "@@ -66,7 +66,7 @@\n +         _7 = move _2;                    // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n           StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:45:9: 45:10\n -         _1 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:47:13: 47:17\n--         goto -> bb9;                     // scope 0 at $DIR/matches_reduce_branches.rs:48:9: 48:10\n+-         goto -> bb9;                     // scope 0 at $DIR/matches_reduce_branches.rs:47:13: 47:17\n -     }\n - \n -     bb8: {"}, {"sha": "c1ba019f33c6b016a4db5b282a0588cd193b617a", "filename": "src/test/mir-opt/remove_fake_borrows.match_guard.CleanupNonCodegenStatements.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.match_guard.CleanupNonCodegenStatements.diff", "raw_url": "https://github.com/rust-lang/rust/raw/1c858ba5bf7bd06c1a970efbf77053c8380b3151/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.match_guard.CleanupNonCodegenStatements.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.match_guard.CleanupNonCodegenStatements.diff?ref=1c858ba5bf7bd06c1a970efbf77053c8380b3151", "patch": "@@ -47,6 +47,7 @@\n       }\n   \n       bb5: {\n+          StorageDead(_8);                 // scope 0 at $DIR/remove_fake_borrows.rs:8:20: 8:21\n -         FakeRead(ForMatchGuard, _4);     // scope 0 at $DIR/remove_fake_borrows.rs:8:20: 8:21\n -         FakeRead(ForMatchGuard, _5);     // scope 0 at $DIR/remove_fake_borrows.rs:8:20: 8:21\n -         FakeRead(ForMatchGuard, _6);     // scope 0 at $DIR/remove_fake_borrows.rs:8:20: 8:21\n@@ -56,12 +57,11 @@\n +         nop;                             // scope 0 at $DIR/remove_fake_borrows.rs:8:20: 8:21\n +         nop;                             // scope 0 at $DIR/remove_fake_borrows.rs:8:20: 8:21\n           _0 = const 0_i32;                // scope 0 at $DIR/remove_fake_borrows.rs:8:25: 8:26\n-          StorageDead(_8);                 // scope 0 at $DIR/remove_fake_borrows.rs:8:25: 8:26\n           goto -> bb7;                     // scope 0 at $DIR/remove_fake_borrows.rs:8:25: 8:26\n       }\n   \n       bb6: {\n-          StorageDead(_8);                 // scope 0 at $DIR/remove_fake_borrows.rs:8:25: 8:26\n+          StorageDead(_8);                 // scope 0 at $DIR/remove_fake_borrows.rs:8:20: 8:21\n           goto -> bb1;                     // scope 0 at $DIR/remove_fake_borrows.rs:8:20: 8:21\n       }\n   "}]}