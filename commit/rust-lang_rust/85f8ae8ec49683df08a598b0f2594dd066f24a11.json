{"sha": "85f8ae8ec49683df08a598b0f2594dd066f24a11", "node_id": "C_kwDOAAsO6NoAKDg1ZjhhZThlYzQ5NjgzZGYwOGE1OThiMGYyNTk0ZGQwNjZmMjRhMTE", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-29T03:48:48Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-30T18:16:00Z"}, "message": "rustdoc: Remove `Crate.src` and instead compute it on-demand\n\nIt is only used in one place; `src` was about a third of `Crate`'s total\nsize; `Crate` is frequently moved by-value; and `src` can be easily\ncomputed on-demand.", "tree": {"sha": "9ef935900934c43a5b39070c90b760ffbb96e376", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ef935900934c43a5b39070c90b760ffbb96e376"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85f8ae8ec49683df08a598b0f2594dd066f24a11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85f8ae8ec49683df08a598b0f2594dd066f24a11", "html_url": "https://github.com/rust-lang/rust/commit/85f8ae8ec49683df08a598b0f2594dd066f24a11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85f8ae8ec49683df08a598b0f2594dd066f24a11/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47b0059dba00a9982721f346b46ceca32620700e", "url": "https://api.github.com/repos/rust-lang/rust/commits/47b0059dba00a9982721f346b46ceca32620700e", "html_url": "https://github.com/rust-lang/rust/commit/47b0059dba00a9982721f346b46ceca32620700e"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "24a51a3f1545976c2abf0aa98227533d9e0162dd", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/85f8ae8ec49683df08a598b0f2594dd066f24a11/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85f8ae8ec49683df08a598b0f2594dd066f24a11/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=85f8ae8ec49683df08a598b0f2594dd066f24a11", "patch": "@@ -117,7 +117,6 @@ impl From<DefId> for ItemId {\n #[derive(Clone, Debug)]\n crate struct Crate {\n     crate name: Symbol,\n-    crate src: FileName,\n     crate module: Item,\n     crate externs: Vec<ExternalCrate>,\n     crate primitives: ThinVec<(DefId, PrimitiveType)>,\n@@ -128,7 +127,13 @@ crate struct Crate {\n \n // `Crate` is frequently moved by-value. Make sure it doesn't unintentionally get bigger.\n #[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n-rustc_data_structures::static_assert_size!(Crate, 168);\n+rustc_data_structures::static_assert_size!(Crate, 104);\n+\n+impl Crate {\n+    crate fn src(&self, tcx: TyCtxt<'_>) -> FileName {\n+        ExternalCrate::LOCAL.src(tcx)\n+    }\n+}\n \n /// This struct is used to wrap additional information added by rustdoc on a `trait` item.\n #[derive(Clone, Debug)]"}, {"sha": "c000b656e6a5abee34e461cbcf974c7fea96e62b", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85f8ae8ec49683df08a598b0f2594dd066f24a11/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85f8ae8ec49683df08a598b0f2594dd066f24a11/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=85f8ae8ec49683df08a598b0f2594dd066f24a11", "patch": "@@ -57,7 +57,6 @@ crate fn krate(cx: &mut DocContext<'_>) -> Crate {\n     }\n \n     let local_crate = ExternalCrate { crate_num: LOCAL_CRATE };\n-    let src = local_crate.src(cx.tcx);\n     let name = local_crate.name(cx.tcx);\n     let primitives = local_crate.primitives(cx.tcx);\n     let keywords = local_crate.keywords(cx.tcx);\n@@ -81,7 +80,6 @@ crate fn krate(cx: &mut DocContext<'_>) -> Crate {\n \n     Crate {\n         name,\n-        src,\n         module,\n         externs,\n         primitives,"}, {"sha": "4a0bcd0e99ceaaf8ce01d76247302f0ae1bab0d2", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85f8ae8ec49683df08a598b0f2594dd066f24a11/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85f8ae8ec49683df08a598b0f2594dd066f24a11/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=85f8ae8ec49683df08a598b0f2594dd066f24a11", "patch": "@@ -405,7 +405,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             ..\n         } = options;\n \n-        let src_root = match krate.src {\n+        let src_root = match krate.src(tcx) {\n             FileName::Real(ref p) => match p.local_path_if_available().parent() {\n                 Some(p) => p.to_path_buf(),\n                 None => PathBuf::new(),"}]}