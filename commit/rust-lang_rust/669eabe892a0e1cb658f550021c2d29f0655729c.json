{"sha": "669eabe892a0e1cb658f550021c2d29f0655729c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2OWVhYmU4OTJhMGUxY2I2NThmNTUwMDIxYzJkMjlmMDY1NTcyOWM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-05T17:22:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-05T17:22:52Z"}, "message": "even less hacks", "tree": {"sha": "bedb1c2691532e83d14d4e13fe39191067ddc5af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bedb1c2691532e83d14d4e13fe39191067ddc5af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/669eabe892a0e1cb658f550021c2d29f0655729c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/669eabe892a0e1cb658f550021c2d29f0655729c", "html_url": "https://github.com/rust-lang/rust/commit/669eabe892a0e1cb658f550021c2d29f0655729c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/669eabe892a0e1cb658f550021c2d29f0655729c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f30179f8256142651f8e65405dc4541391405ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f30179f8256142651f8e65405dc4541391405ed", "html_url": "https://github.com/rust-lang/rust/commit/8f30179f8256142651f8e65405dc4541391405ed"}], "stats": {"total": 34, "additions": 16, "deletions": 18}, "files": [{"sha": "ebc8037b35963682fb286d5baab13f5222059ed1", "filename": "crates/libanalysis/tests/tests.rs", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/669eabe892a0e1cb658f550021c2d29f0655729c/crates%2Flibanalysis%2Ftests%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/669eabe892a0e1cb658f550021c2d29f0655729c/crates%2Flibanalysis%2Ftests%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibanalysis%2Ftests%2Ftests.rs?ref=669eabe892a0e1cb658f550021c2d29f0655729c", "patch": "@@ -4,40 +4,38 @@ extern crate test_utils;\n \n use std::{\n     collections::HashMap,\n-    path::{Path},\n };\n \n-use relative_path::{RelativePath, RelativePathBuf};\n+use relative_path::{RelativePath};\n use libanalysis::{AnalysisHost, FileId, FileResolver, JobHandle, CrateGraph, CrateId};\n use test_utils::assert_eq_dbg;\n \n struct FileMap(&'static [(u32, &'static str)]);\n \n impl FileMap {\n-    fn path(&self, id: FileId) -> &'static Path {\n-        let s = self.0.iter()\n-            .find(|it| it.0 == id.0)\n+    fn iter<'a>(&'a self) -> impl Iterator<Item=(FileId, &'a RelativePath)> + 'a {\n+        self.0.iter().map(|&(id, path)| {\n+            assert!(path.starts_with('/'));\n+            (FileId(id), RelativePath::new(&path[1..]))\n+        })\n+    }\n+\n+    fn path(&self, id: FileId) -> &RelativePath {\n+        self.iter()\n+            .find(|&(it, _)| it == id)\n             .unwrap()\n-            .1;\n-        Path::new(s)\n+            .1\n     }\n }\n \n impl FileResolver for FileMap {\n     fn file_stem(&self, id: FileId) -> String {\n-        self.path(id).file_stem().unwrap().to_str().unwrap().to_string()\n+        self.path(id).file_stem().unwrap().to_string()\n     }\n     fn resolve(&self, id: FileId, rel: &RelativePath) -> Option<FileId> {\n-        let path = rel.to_path(self.path(id));\n-        let path = path.strip_prefix(\"/\").unwrap();\n-        let path = RelativePathBuf::from_path(&path).unwrap().normalize();\n-        let &(id, _) = self.0.iter()\n-            .find(|it| {\n-                let p = Path::new(it.1).strip_prefix(\"/\").unwrap();\n-                let p = RelativePathBuf::from_path(p).unwrap();\n-                path == p\n-            })?;\n-        Some(FileId(id))\n+        let path = self.path(id).join(rel).normalize();\n+        let id = self.iter().find(|&(_, p)| path == p)?.0;\n+        Some(id)\n     }\n }\n "}]}