{"sha": "336a6569f5477d36151500bbd7c57e3bba357cec", "node_id": "C_kwDOAAsO6NoAKDMzNmE2NTY5ZjU0NzdkMzYxNTE1MDBiYmQ3YzU3ZTNiYmEzNTdjZWM", "commit": {"author": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-04-19T08:00:49Z"}, "committer": {"name": "Ezra Shaw", "email": "ezrashawdev@gmail.com", "date": "2023-05-05T10:40:05Z"}, "message": "tweak \"make mut\" spans (No. 4)", "tree": {"sha": "ce8b6669ba001b9a0811e108674be6d0ade139ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce8b6669ba001b9a0811e108674be6d0ade139ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/336a6569f5477d36151500bbd7c57e3bba357cec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE/c15HB+s7bjrqpLmUVbPWEUVCw0FAmRU3QUACgkQUVbPWEUV\nCw1XjBAAk4kyDhqSGa5Iuo4sk6yeNushEKTTMxgzMHo49e+IntiEf9Ovsy7jhGrg\nGeal8K6zgy61DJ6VmqemLxeH75YDKSkfvWEI7wbaOlD8zqdGXVygletD1Cjv46HH\ntthhP6GsHz2btEME8C48w3intrgwwXhBsKdETLwJUEdCPlgOSQb28sE+4qIhmTuL\nrt4/74npjAYR9KLYur2ICSv8Q9rNTvze+IehrLZNGWayMd53aiMVDMsVTgbRxI2a\nZk665C9yr+Qqe7NuANgXNUzVBUm53+GUrqmH4kDhU8Dy0XVrhxy7kd1PP3h8slz2\nl4049BU1c6WtyKbGpv8cS/zD5U69hGXknJh9z5fo2UoLbUY6f9UmSq/aoVElJuXu\nLxEJYakDrcH13mZEeu0DsHLUHqc+Iww5U6HHS1yseskgqkfJshnEOJQ02bTSetxK\nohzJrHIRaqGNou8zzmI1KhUcwniv1iS0lWxk75THz/7LHKJHuSRxP55wei2FDIAq\nAA0l8Tah14OcWAgMab8wg8fTR7gBdPZNcyMf4Tmu572D2jzmrtToDLup1T7J7OzA\nbtJDW5FxQO52ddbQx4Yoq76HX6ilFSj1iwBJZzekIevsSEqDaZINlwfMzWJQw9oQ\nUmIgCcgy2RKlH8wtt+x5zpo5bllZGpauKEoeHPewUlkM15aRmkg=\n=WQeO\n-----END PGP SIGNATURE-----", "payload": "tree ce8b6669ba001b9a0811e108674be6d0ade139ec\nparent 57c6a3183c17e9f889adda1faca894a7cd692b02\nauthor Ezra Shaw <ezrasure@outlook.com> 1681891249 +1200\ncommitter Ezra Shaw <ezrashawdev@gmail.com> 1683283205 +1200\n\ntweak \"make mut\" spans (No. 4)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/336a6569f5477d36151500bbd7c57e3bba357cec", "html_url": "https://github.com/rust-lang/rust/commit/336a6569f5477d36151500bbd7c57e3bba357cec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/336a6569f5477d36151500bbd7c57e3bba357cec/comments", "author": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57c6a3183c17e9f889adda1faca894a7cd692b02", "url": "https://api.github.com/repos/rust-lang/rust/commits/57c6a3183c17e9f889adda1faca894a7cd692b02", "html_url": "https://github.com/rust-lang/rust/commit/57c6a3183c17e9f889adda1faca894a7cd692b02"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "e842afced8199db55a394990c61cb2da58b28cbe", "filename": "compiler/rustc_borrowck/src/diagnostics/mutability_errors.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/336a6569f5477d36151500bbd7c57e3bba357cec/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/336a6569f5477d36151500bbd7c57e3bba357cec/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs?ref=336a6569f5477d36151500bbd7c57e3bba357cec", "patch": "@@ -1263,21 +1263,21 @@ fn suggest_ampmut<'tcx>(\n     {\n         let span = span.with_lo(span.lo() + BytePos(ws_pos as u32)).shrink_to_lo();\n         (true, span, \" mut\".to_owned())\n+    // if there is already a binding, we modify it to be `mut`\n     } else if binding_exists {\n         // shrink the span to just after the `&` in `&variable`\n         let span = span.with_lo(span.lo() + BytePos(1)).shrink_to_lo();\n         (true, span, \"mut \".to_owned())\n+    // otherwise, suggest that the user annotates the binding; we provide the\n+    // type of the local.\n     } else {\n         let ty_mut = local_decl.ty.builtin_deref(true).unwrap();\n         assert_eq!(ty_mut.mutbl, hir::Mutability::Not);\n+\n         (\n-            binding_exists,\n+            false,\n             span,\n-            if local_decl.ty.is_ref() {\n-                format!(\"&mut {}\", ty_mut.ty)\n-            } else {\n-                format!(\"*mut {}\", ty_mut.ty)\n-            },\n+            format!(\"{}mut {}\", if local_decl.ty.is_ref() {\"&\"} else {\"*\"}, ty_mut.ty)\n         )\n     }\n }"}]}