{"sha": "54fac386a42b466b747c1611568a787f38b06432", "node_id": "C_kwDOAAsO6NoAKDU0ZmFjMzg2YTQyYjQ2NmI3NDdjMTYxMTU2OGE3ODdmMzhiMDY0MzI", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-06-02T11:31:04Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-06-10T08:09:50Z"}, "message": "don't always cache bound lts", "tree": {"sha": "39368ad865bd7640ebcc591876219c872701b86e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39368ad865bd7640ebcc591876219c872701b86e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54fac386a42b466b747c1611568a787f38b06432", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54fac386a42b466b747c1611568a787f38b06432", "html_url": "https://github.com/rust-lang/rust/commit/54fac386a42b466b747c1611568a787f38b06432", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54fac386a42b466b747c1611568a787f38b06432/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc013e05b4fca924c735d397f023f7189a0f87a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc013e05b4fca924c735d397f023f7189a0f87a6", "html_url": "https://github.com/rust-lang/rust/commit/cc013e05b4fca924c735d397f023f7189a0f87a6"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "5ccf735f1d2a24012bcdc392836d8551b5d2dfe0", "filename": "compiler/rustc_middle/src/ty/fold.rs", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/54fac386a42b466b747c1611568a787f38b06432/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54fac386a42b466b747c1611568a787f38b06432/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs?ref=54fac386a42b466b747c1611568a787f38b06432", "patch": "@@ -753,19 +753,29 @@ impl<'tcx> TyCtxt<'tcx> {\n         T: TypeFoldable<'tcx>,\n     {\n         let mut region_map = BTreeMap::new();\n-        let mut real_fld_r =\n-            |br: ty::BoundRegion| *region_map.entry(br).or_insert_with(|| fld_r(br));\n+        let real_fld_r = |br: ty::BoundRegion| *region_map.entry(br).or_insert_with(|| fld_r(br));\n+        let value = self.replace_late_bound_regions_uncached(value, real_fld_r);\n+        (value, region_map)\n+    }\n+\n+    pub fn replace_late_bound_regions_uncached<T, F>(\n+        self,\n+        value: Binder<'tcx, T>,\n+        mut fld_r: F,\n+    ) -> T\n+    where\n+        F: FnMut(ty::BoundRegion) -> ty::Region<'tcx>,\n+        T: TypeFoldable<'tcx>,\n+    {\n         let mut fld_t = |b| bug!(\"unexpected bound ty in binder: {b:?}\");\n         let mut fld_c = |b, ty| bug!(\"unexpected bound ct in binder: {b:?} {ty}\");\n-\n         let value = value.skip_binder();\n-        let value = if !value.has_escaping_bound_vars() {\n+        if !value.has_escaping_bound_vars() {\n             value\n         } else {\n-            let mut replacer = BoundVarReplacer::new(self, &mut real_fld_r, &mut fld_t, &mut fld_c);\n+            let mut replacer = BoundVarReplacer::new(self, &mut fld_r, &mut fld_t, &mut fld_c);\n             value.fold_with(&mut replacer)\n-        };\n-        (value, region_map)\n+        }\n     }\n \n     /// Replaces all escaping bound vars. The `fld_r` closure replaces escaping\n@@ -821,13 +831,12 @@ impl<'tcx> TyCtxt<'tcx> {\n     where\n         T: TypeFoldable<'tcx>,\n     {\n-        self.replace_late_bound_regions(value, |br| {\n+        self.replace_late_bound_regions_uncached(value, |br| {\n             self.mk_region(ty::ReFree(ty::FreeRegion {\n                 scope: all_outlive_scope,\n                 bound_region: br.kind,\n             }))\n         })\n-        .0\n     }\n \n     pub fn shift_bound_var_indices<T>(self, bound_vars: usize, value: T) -> T"}, {"sha": "de40126e724df96c0cbf4651f023806fbc28fbcf", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/54fac386a42b466b747c1611568a787f38b06432/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54fac386a42b466b747c1611568a787f38b06432/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=54fac386a42b466b747c1611568a787f38b06432", "patch": "@@ -449,17 +449,18 @@ impl<'tcx> AstConv<'tcx> for ItemCtxt<'tcx> {\n                                     format!(\n                                         \"{}::\",\n                                         // Replace the existing lifetimes with a new named lifetime.\n-                                        self.tcx\n-                                            .replace_late_bound_regions(poly_trait_ref, |_| {\n+                                        self.tcx.replace_late_bound_regions_uncached(\n+                                            poly_trait_ref,\n+                                            |_| {\n                                                 self.tcx.mk_region(ty::ReEarlyBound(\n                                                     ty::EarlyBoundRegion {\n                                                         def_id: item_def_id,\n                                                         index: 0,\n                                                         name: Symbol::intern(&lt_name),\n                                                     },\n                                                 ))\n-                                            })\n-                                            .0,\n+                                            }\n+                                        ),\n                                     ),\n                                 ),\n                             ];"}]}