{"sha": "bc793c9fb2ae45b1e93cdd6ad1cd4ffe30587674", "node_id": "C_kwDOAAsO6NoAKGJjNzkzYzlmYjJhZTQ1YjFlOTNjZGQ2YWQxY2Q0ZmZlMzA1ODc2NzQ", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-09-02T12:23:52Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-09-02T13:30:16Z"}, "message": "Use `BCRYPT_RNG_ALG_HANDLE` by default\n\nAlso briefly document the history of `sys/windows/rand.rs` as they may be relevant to any future changes.", "tree": {"sha": "ce2842a38b9889cb1072de87c5151b7a46f5f6b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce2842a38b9889cb1072de87c5151b7a46f5f6b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc793c9fb2ae45b1e93cdd6ad1cd4ffe30587674", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmMSBWkACgkQcTRy8vRW\nJ97X2g/+NMbS58Rt/PXKJgVnvklAV6sL0KU8WxAqO21bggrFQOLwP5lHxhpROIpO\nwgn829n3rdTvQjDGZADDy2JlMkR0S4pe6CZFb0ugLRPNgHDC9nMNumdE4/DBtLIW\nmKTACYvf/0B2YonGVDq0s1048t9b1uhoWbuxvC8DK2yLSEWOP6LGmeQNCffrED8M\n8q6Cu6FypcwrP5gbHr8oekQAGlnTgGkI/xDQgb9w6nBMVHuPQQcw2zuoxlosePJg\nrL4rAOpdOnMhdGkUHhB0WxygtKlMYkhJqbUnF1esiwCDNCp/AUDQi4QPCq9dVeIK\njVigf1un0CR87/HJDjyXOJiTC5BBakrRLs5VcnbrpUx0k/6nWSC85eca/VNXAQPv\n/Gs7pXGvjCmct7e2/wtZEZ+8w4s5qPUP7JTlOImpnh0XSa/vZk5gcw6SzHiX9OXz\ngZgbG9ktTsizzDazQAMO3cwtv3VpXX/Dg5fR0XTmTCRN1l+L0qdR/ozvnrtcwkyZ\ni02WUlF6V5cf0igp+yo+HwetzYLpvnud137qtNyWbKYCN0Px+QuyrTz23NqI83w/\ntEL36k6X5XeVZRUcRWREc1gkU1ckTIGvjGuqJPdDL85ShdTFo0tUHL8OBZrdZQtl\nqERK2+H4a+iIHFo5DdVg7UTRI3QijRgTL+zx85QCynljLNDJOwU=\n=qASK\n-----END PGP SIGNATURE-----", "payload": "tree ce2842a38b9889cb1072de87c5151b7a46f5f6b2\nparent e4f049312c8547a493e618d00db7a346d35a2c98\nauthor Chris Denton <christophersdenton@gmail.com> 1662121432 +0100\ncommitter Chris Denton <christophersdenton@gmail.com> 1662125416 +0100\n\nUse `BCRYPT_RNG_ALG_HANDLE` by default\n\nAlso briefly document the history of `sys/windows/rand.rs` as they may be relevant to any future changes.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc793c9fb2ae45b1e93cdd6ad1cd4ffe30587674", "html_url": "https://github.com/rust-lang/rust/commit/bc793c9fb2ae45b1e93cdd6ad1cd4ffe30587674", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc793c9fb2ae45b1e93cdd6ad1cd4ffe30587674/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4f049312c8547a493e618d00db7a346d35a2c98", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4f049312c8547a493e618d00db7a346d35a2c98", "html_url": "https://github.com/rust-lang/rust/commit/e4f049312c8547a493e618d00db7a346d35a2c98"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "270294d13df36bec3ef6b097b2a8a52d06fdd9ad", "filename": "library/std/src/sys/windows/c.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc793c9fb2ae45b1e93cdd6ad1cd4ffe30587674/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc793c9fb2ae45b1e93cdd6ad1cd4ffe30587674/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs?ref=bc793c9fb2ae45b1e93cdd6ad1cd4ffe30587674", "patch": "@@ -285,7 +285,7 @@ pub fn nt_success(status: NTSTATUS) -> bool {\n     status >= 0\n }\n \n-pub const BCRYPT_USE_SYSTEM_PREFERRED_RNG: DWORD = 0x00000002;\n+pub const BCRYPT_RNG_ALG_HANDLE: usize = 0x81;\n \n #[repr(C)]\n pub struct UNICODE_STRING {"}, {"sha": "8b9697884364c837ac44f8308d184ee7ab0eb78d", "filename": "library/std/src/sys/windows/rand.rs", "status": "modified", "additions": 37, "deletions": 4, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/bc793c9fb2ae45b1e93cdd6ad1cd4ffe30587674/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc793c9fb2ae45b1e93cdd6ad1cd4ffe30587674/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Frand.rs?ref=bc793c9fb2ae45b1e93cdd6ad1cd4ffe30587674", "patch": "@@ -1,16 +1,49 @@\n+//! # Random key generation\n+//!\n+//! This module wraps the RNG provided by the OS. There are a few different\n+//! ways to interface with the OS RNG so it's worth exploring each of the options.\n+//! Note that at the time of writing these all go through the (undocumented)\n+//! `bcryptPrimitives.dll` but they use different route to get there.\n+//!\n+//! Originally we were using [`RtlGenRandom`], however that function is\n+//! deprecated and warns it \"may be altered or unavailable in subsequent versions\".\n+//!\n+//! So we switched to [`BCryptGenRandom`] with the `BCRYPT_USE_SYSTEM_PREFERRED_RNG`\n+//! flag to query and find the system configured RNG. However, this change caused a small\n+//! but significant number of users to experience panics caused by a failure of\n+//! this function. See [#94098].\n+//!\n+//! The current version changes this to use the `BCRYPT_RNG_ALG_HANDLE`\n+//! [Pseudo-handle], which gets the default RNG algorithm without querying the\n+//! system preference thus hopefully avoiding the previous issue.\n+//! This is only supported on Windows 10+ so a fallback is used for older versions.\n+//!\n+//! [#94098]: https://github.com/rust-lang/rust/issues/94098\n+//! [`RtlGenRandom`]: https://docs.microsoft.com/en-us/windows/win32/api/ntsecapi/nf-ntsecapi-rtlgenrandom\n+//! [`BCryptGenRandom`]: https://docs.microsoft.com/en-us/windows/win32/api/bcrypt/nf-bcrypt-bcryptgenrandom\n+//! [Pseudo-handle]: https://docs.microsoft.com/en-us/windows/win32/seccng/cng-algorithm-pseudo-handles\n use crate::io;\n use crate::mem;\n use crate::ptr;\n use crate::sys::c;\n \n+/// Generates high quality secure random keys for use by [`HashMap`].\n+///\n+/// This is used to seed the default [`RandomState`].\n+///\n+/// [`HashMap`]: crate::collections::HashMap\n+/// [`RandomState`]: crate::collections::hash_map::RandomState\n pub fn hashmap_random_keys() -> (u64, u64) {\n     let mut v = (0, 0);\n     let ret = unsafe {\n+        let size = mem::size_of_val(&v).try_into().unwrap();\n         c::BCryptGenRandom(\n-            ptr::null_mut(),\n-            &mut v as *mut _ as *mut u8,\n-            mem::size_of_val(&v) as c::ULONG,\n-            c::BCRYPT_USE_SYSTEM_PREFERRED_RNG,\n+            // BCRYPT_RNG_ALG_HANDLE is only supported in Windows 10+.\n+            // So for Windows 8.1 and Windows 7 we'll need a fallback when this fails.\n+            ptr::invalid_mut(c::BCRYPT_RNG_ALG_HANDLE),\n+            ptr::addr_of_mut!(v).cast(),\n+            size,\n+            0,\n         )\n     };\n     if ret != 0 { fallback_rng() } else { v }"}]}