{"sha": "ef2916170b62f99411a787e1a1985f45c221ebef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmMjkxNjE3MGI2MmY5OTQxMWE3ODdlMWExOTg1ZjQ1YzIyMWViZWY=", "commit": {"author": {"name": "Ryan1729", "email": "Ryan1729@gmail.com", "date": "2020-08-03T00:19:33Z"}, "committer": {"name": "Ryan1729", "email": "Ryan1729@gmail.com", "date": "2020-08-06T10:24:24Z"}, "message": "make parts of rustc_typeck public", "tree": {"sha": "97cfa45c24b14e6e32eef470c82e73261f86fc5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97cfa45c24b14e6e32eef470c82e73261f86fc5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef2916170b62f99411a787e1a1985f45c221ebef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef2916170b62f99411a787e1a1985f45c221ebef", "html_url": "https://github.com/rust-lang/rust/commit/ef2916170b62f99411a787e1a1985f45c221ebef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef2916170b62f99411a787e1a1985f45c221ebef/comments", "author": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8244b1b11488a336a485f07fd6550b973009a931", "url": "https://api.github.com/repos/rust-lang/rust/commits/8244b1b11488a336a485f07fd6550b973009a931", "html_url": "https://github.com/rust-lang/rust/commit/8244b1b11488a336a485f07fd6550b973009a931"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "418ea29b84f2f53a9862d3c67b364099178e283e", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef2916170b62f99411a787e1a1985f45c221ebef/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef2916170b62f99411a787e1a1985f45c221ebef/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=ef2916170b62f99411a787e1a1985f45c221ebef", "patch": "@@ -147,7 +147,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n }\n \n #[derive(Copy, Clone)]\n-enum CastError {\n+pub enum CastError {\n     ErrorReported,\n \n     CastToBool,\n@@ -593,7 +593,7 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n     /// Checks a cast, and report an error if one exists. In some cases, this\n     /// can return Ok and create type errors in the fcx rather than returning\n     /// directly. coercion-cast is handled in check instead of here.\n-    fn do_check(&self, fcx: &FnCtxt<'a, 'tcx>) -> Result<CastKind, CastError> {\n+    pub fn do_check(&self, fcx: &FnCtxt<'a, 'tcx>) -> Result<CastKind, CastError> {\n         use rustc_middle::ty::cast::CastTy::*;\n         use rustc_middle::ty::cast::IntTy::*;\n "}, {"sha": "3af571417ff5361ec8f88e3837513f7bf57a61a7", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef2916170b62f99411a787e1a1985f45c221ebef/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef2916170b62f99411a787e1a1985f45c221ebef/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=ef2916170b62f99411a787e1a1985f45c221ebef", "patch": "@@ -67,7 +67,7 @@ type parameter).\n pub mod _match;\n mod autoderef;\n mod callee;\n-mod cast;\n+pub mod cast;\n mod closure;\n pub mod coercion;\n mod compare_method;"}, {"sha": "4eee4f572c2b1d45b344a0a6cdb83942a5bbb18c", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef2916170b62f99411a787e1a1985f45c221ebef/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef2916170b62f99411a787e1a1985f45c221ebef/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=ef2916170b62f99411a787e1a1985f45c221ebef", "patch": "@@ -74,11 +74,11 @@ extern crate log;\n #[macro_use]\n extern crate rustc_middle;\n \n-// This is used by Clippy.\n+// These are used by Clippy.\n pub mod expr_use_visitor;\n+pub mod check;\n \n mod astconv;\n-mod check;\n mod check_unused;\n mod coherence;\n mod collect;"}]}