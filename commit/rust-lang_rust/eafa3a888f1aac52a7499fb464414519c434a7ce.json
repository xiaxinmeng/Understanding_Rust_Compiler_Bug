{"sha": "eafa3a888f1aac52a7499fb464414519c434a7ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZmEzYTg4OGYxYWFjNTJhNzQ5OWZiNDY0NDE0NTE5YzQzNGE3Y2U=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-29T23:20:52Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-29T23:20:52Z"}, "message": "Sort in-band generic parameter definitions from APIT", "tree": {"sha": "a0bfe88ff3c2f4b3ee88648c7908bead06fa1805", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0bfe88ff3c2f4b3ee88648c7908bead06fa1805"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eafa3a888f1aac52a7499fb464414519c434a7ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eafa3a888f1aac52a7499fb464414519c434a7ce", "html_url": "https://github.com/rust-lang/rust/commit/eafa3a888f1aac52a7499fb464414519c434a7ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eafa3a888f1aac52a7499fb464414519c434a7ce/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "721268583759224d0f6476e0b8b196cc8afbdea0", "url": "https://api.github.com/repos/rust-lang/rust/commits/721268583759224d0f6476e0b8b196cc8afbdea0", "html_url": "https://github.com/rust-lang/rust/commit/721268583759224d0f6476e0b8b196cc8afbdea0"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "08fbd0d20d74dac3a23818ad7ee4cf5e4fc187aa", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eafa3a888f1aac52a7499fb464414519c434a7ce/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eafa3a888f1aac52a7499fb464414519c434a7ce/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=eafa3a888f1aac52a7499fb464414519c434a7ce", "patch": "@@ -1083,6 +1083,18 @@ impl<'a> LoweringContext<'a> {\n             .chain(in_band_defs)\n             .collect();\n \n+        // FIXME(const_generics): the compiler doesn't always cope with\n+        // unsorted generic parameters at the moment, so we make sure\n+        // that they're ordered correctly here for now. (When we chain\n+        // the `in_band_defs`, we might make the order unsorted.)\n+        lowered_generics.params.sort_by_key(|param| {\n+            match param.kind {\n+                hir::GenericParamKind::Lifetime { .. } => ParamKindOrd::Lifetime,\n+                hir::GenericParamKind::Type { .. } => ParamKindOrd::Type,\n+                hir::GenericParamKind::Const { .. } => ParamKindOrd::Const,\n+            }\n+        });\n+\n         (lowered_generics, res)\n     }\n "}]}