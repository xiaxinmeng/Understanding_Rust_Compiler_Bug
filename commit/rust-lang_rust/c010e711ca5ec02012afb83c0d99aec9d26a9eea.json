{"sha": "c010e711ca5ec02012afb83c0d99aec9d26a9eea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMTBlNzExY2E1ZWMwMjAxMmFmYjgzYzBkOTlhZWM5ZDI2YTllZWE=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-06-13T17:11:02Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-06-13T17:11:02Z"}, "message": "Rewrap comments in Mutex example", "tree": {"sha": "40056b5b5ab4e458661a373717bd9ed804183a4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40056b5b5ab4e458661a373717bd9ed804183a4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c010e711ca5ec02012afb83c0d99aec9d26a9eea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAl7lCKYACgkQ+boUO5X/\nbYLjNQ/8CdHiFttv3aSCWrLr88QRry9S5+Rwf2ksYuVU9GPSxLvpGe7q5ZbrgbZD\nedWAfAfi0u3KhUC1Wk4tUMJCTju/2wMlQIf7WSF9drHXgh9JMtNYB0TCe36Vl4qg\nNRYS5YaSEmf8uByZKnV/DBNCdwXmPTtq7uX17P9jYooyo2QAD/gfP1dJB6cKnRZw\n31ghJSchilmyZkZ1OmOoNrgDwkyU8M4mmpac8HHAtvU6CgLlJkOCnLRfPQgNxTIk\nMOQaEImtlYzxhptMwaDzi/tMTXl4pXzIW6rC3jDtdf2b6r6hE+JV1XEH6foRdlt/\nNfLDO/eapgJLrfOharokMPh1Vi4BdSEOIgwhx3fL9yRJ0h6bJosO0MEWi/WmCQzR\nJLzq0UbYuxu45iwXxRaH2NCyhGMWHsT27RrrCEivTA6YCQHhCpcaIiKxNY5DCTlG\nRcxtklwJkHvGO81GtJWPmXpnnqkO+9DCHWrDNGb8a9LZcDZt7YYcFK5hY8VgrC95\n8yq4OMgh+6JClvqlP56g6qrNpgII09leU+4JD/bn5lteYFysM/CpC5N7dwFWcUMF\n1NQYKjO2ZbOxRygIzzsownY+pN+eaNK3aJKH4/fwHZhcYSoIs+lkQb16SSrHkDbb\n0Mg8uw8BvBTAJPlomSRNJ5GWaS3Ofuiearsk+eOcQzOjesny3HY=\n=RuoC\n-----END PGP SIGNATURE-----", "payload": "tree 40056b5b5ab4e458661a373717bd9ed804183a4c\nparent 34b3ff06e101f60cb69268ee83c93c177b63c322\nauthor David Tolnay <dtolnay@gmail.com> 1592068262 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1592068262 -0700\n\nRewrap comments in Mutex example\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c010e711ca5ec02012afb83c0d99aec9d26a9eea", "html_url": "https://github.com/rust-lang/rust/commit/c010e711ca5ec02012afb83c0d99aec9d26a9eea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c010e711ca5ec02012afb83c0d99aec9d26a9eea/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34b3ff06e101f60cb69268ee83c93c177b63c322", "url": "https://api.github.com/repos/rust-lang/rust/commits/34b3ff06e101f60cb69268ee83c93c177b63c322", "html_url": "https://github.com/rust-lang/rust/commit/34b3ff06e101f60cb69268ee83c93c177b63c322"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "8478457eabfc2e8d0d5e68eeea7ba273e1f0f6bc", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c010e711ca5ec02012afb83c0d99aec9d26a9eea/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c010e711ca5ec02012afb83c0d99aec9d26a9eea/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=c010e711ca5ec02012afb83c0d99aec9d26a9eea", "patch": "@@ -108,8 +108,8 @@ use crate::sys_common::poison::{self, LockResult, TryLockError, TryLockResult};\n /// *guard += 1;\n /// ```\n ///\n-/// It is sometimes necessary to manually drop the mutex guard\n-/// to unlock it sooner than the end of the enclosing scope.\n+/// It is sometimes necessary to manually drop the mutex guard to unlock it\n+/// sooner than the end of the enclosing scope.\n ///\n /// ```\n /// use std::sync::{Arc, Mutex};\n@@ -139,18 +139,18 @@ use crate::sys_common::poison::{self, LockResult, TryLockError, TryLockResult};\n /// // This is the result of some important and long-ish work.\n /// let result = data.iter().fold(0, |acc, x| acc + x * 2);\n /// data.push(result);\n-/// // We drop the `data` explicitly because it's not necessary anymore\n-/// // and the thread still has work to do. This allow other threads to\n-/// // start working on the data immediately, without waiting\n-/// // for the rest of the unrelated work to be done here.\n+/// // We drop the `data` explicitly because it's not necessary anymore and the\n+/// // thread still has work to do. This allow other threads to start working on\n+/// // the data immediately, without waiting for the rest of the unrelated work\n+/// // to be done here.\n /// //\n /// // It's even more important here than in the threads because we `.join` the\n-/// // threads after that. If we had not dropped the mutex guard, a thread could be\n-/// // waiting forever for it, causing a deadlock.\n+/// // threads after that. If we had not dropped the mutex guard, a thread could\n+/// // be waiting forever for it, causing a deadlock.\n /// drop(data);\n-/// // Here the mutex guard is not assigned to a variable and so, even if the scope\n-/// // does not end after this line, the mutex is still released:\n-/// // there is no deadlock.\n+/// // Here the mutex guard is not assigned to a variable and so, even if the\n+/// // scope does not end after this line, the mutex is still released: there is\n+/// // no deadlock.\n /// *res_mutex.lock().unwrap() += result;\n ///\n /// threads.into_iter().for_each(|thread| {"}]}