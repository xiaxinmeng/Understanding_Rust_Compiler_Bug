{"sha": "469b2fc7811c14fa645dceadfb976fb4f4ef248a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2OWIyZmM3ODExYzE0ZmE2NDVkY2VhZGZiOTc2ZmI0ZjRlZjI0OGE=", "commit": {"author": {"name": "dvermd", "email": "315743+dvermd@users.noreply.github.com", "date": "2020-10-13T20:13:54Z"}, "committer": {"name": "dvermd", "email": "315743+dvermd@users.noreply.github.com", "date": "2020-10-26T21:34:42Z"}, "message": "clippy_lint: Add 'ref_option_ref' move to check_ty and add type alias test", "tree": {"sha": "228cd334dd63cac2c453788e200b17333efbdcfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/228cd334dd63cac2c453788e200b17333efbdcfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/469b2fc7811c14fa645dceadfb976fb4f4ef248a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/469b2fc7811c14fa645dceadfb976fb4f4ef248a", "html_url": "https://github.com/rust-lang/rust/commit/469b2fc7811c14fa645dceadfb976fb4f4ef248a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/469b2fc7811c14fa645dceadfb976fb4f4ef248a/comments", "author": {"login": "dvermd", "id": 315743, "node_id": "MDQ6VXNlcjMxNTc0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/315743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvermd", "html_url": "https://github.com/dvermd", "followers_url": "https://api.github.com/users/dvermd/followers", "following_url": "https://api.github.com/users/dvermd/following{/other_user}", "gists_url": "https://api.github.com/users/dvermd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvermd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvermd/subscriptions", "organizations_url": "https://api.github.com/users/dvermd/orgs", "repos_url": "https://api.github.com/users/dvermd/repos", "events_url": "https://api.github.com/users/dvermd/events{/privacy}", "received_events_url": "https://api.github.com/users/dvermd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dvermd", "id": 315743, "node_id": "MDQ6VXNlcjMxNTc0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/315743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvermd", "html_url": "https://github.com/dvermd", "followers_url": "https://api.github.com/users/dvermd/followers", "following_url": "https://api.github.com/users/dvermd/following{/other_user}", "gists_url": "https://api.github.com/users/dvermd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvermd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvermd/subscriptions", "organizations_url": "https://api.github.com/users/dvermd/orgs", "repos_url": "https://api.github.com/users/dvermd/repos", "events_url": "https://api.github.com/users/dvermd/events{/privacy}", "received_events_url": "https://api.github.com/users/dvermd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1baa25f046c8067ee1c9fa9e134de3ca0f64834", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1baa25f046c8067ee1c9fa9e134de3ca0f64834", "html_url": "https://github.com/rust-lang/rust/commit/d1baa25f046c8067ee1c9fa9e134de3ca0f64834"}], "stats": {"total": 40, "additions": 28, "deletions": 12}, "files": [{"sha": "4b5bc93d8a145a91ac8b7949814081a9461f7f7c", "filename": "clippy_lints/src/ref_option_ref.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/469b2fc7811c14fa645dceadfb976fb4f4ef248a/clippy_lints%2Fsrc%2Fref_option_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/469b2fc7811c14fa645dceadfb976fb4f4ef248a/clippy_lints%2Fsrc%2Fref_option_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fref_option_ref.rs?ref=469b2fc7811c14fa645dceadfb976fb4f4ef248a", "patch": "@@ -33,11 +33,8 @@ declare_clippy_lint! {\n declare_lint_pass!(RefOptionRef => [REF_OPTION_REF]);\n \n impl<'tcx> LateLintPass<'tcx> for RefOptionRef {\n-    fn check_local(&mut self, cx: &LateContext<'tcx>, local: &'tcx Local<'_>) {\n-\n-        if let Some(ref ty) = local.ty {\n-            self.check_ref_option_ref(cx, ty);\n-        }\n+    fn check_ty(&mut self, cx: &LateContext<'tcx>, ty: &'tcx Ty<'tcx>) {\n+        self.check_ref_option_ref(cx, ty);\n     }\n }\n \n@@ -46,8 +43,11 @@ impl RefOptionRef {\n         if_chain! {\n             if let TyKind::Rptr(_, ref mut_ty) = ty.kind;\n             if mut_ty.mutbl == Mutability::Not;\n-            if let TyKind::Path(ref qpath) = &mut_ty.ty.kind ;\n-            if let Some(def_id) = cx.typeck_results().qpath_res(qpath, ty.hir_id).opt_def_id();\n+            if let TyKind::Path(ref qpath) = &mut_ty.ty.kind;\n+            let last = last_path_segment(qpath);\n+            if let Some(res) = last.res;\n+            if let Some(def_id) = res.opt_def_id();\n+\n             if match_def_path(cx, def_id, &paths::OPTION);\n             if let Some(ref params) = last_path_segment(qpath).args ;\n             if !params.parenthesized;\n@@ -70,4 +70,4 @@ impl RefOptionRef {\n             }\n         }\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "24db42efb801b047d54a9296c1ffef07655e970f", "filename": "tests/ui/ref_option_ref.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/469b2fc7811c14fa645dceadfb976fb4f4ef248a/tests%2Fui%2Fref_option_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/469b2fc7811c14fa645dceadfb976fb4f4ef248a/tests%2Fui%2Fref_option_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fref_option_ref.rs?ref=469b2fc7811c14fa645dceadfb976fb4f4ef248a", "patch": "@@ -1,5 +1,9 @@\n+#![allow(unused)]\n #![warn(clippy::ref_option_ref)]\n \n+type OptRefU32<'a> = &'a Option<&'a u32>;\n+type OptRef<'a, T> = &'a Option<&'a T>;\n+\n fn main() {\n     let x: &Option<&u32> = &None;\n }"}, {"sha": "26f4065d3114c637739e745f3d2d15003ffc9d6d", "filename": "tests/ui/ref_option_ref.stderr", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/469b2fc7811c14fa645dceadfb976fb4f4ef248a/tests%2Fui%2Fref_option_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/469b2fc7811c14fa645dceadfb976fb4f4ef248a/tests%2Fui%2Fref_option_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fref_option_ref.stderr?ref=469b2fc7811c14fa645dceadfb976fb4f4ef248a", "patch": "@@ -1,10 +1,22 @@\n error: since & implements Copy trait, &Option<&T> can be simplifyied into Option<&T>\n-  --> $DIR/ref_option_ref.rs:4:12\n+  --> $DIR/ref_option_ref.rs:4:22\n    |\n-LL |     let x: &Option<&u32> = &None;\n-   |            ^^^^^^^^^^^^^ help: try: `Option<&u32>`\n+LL | type OptRefU32<'a> = &'a Option<&'a u32>;\n+   |                      ^^^^^^^^^^^^^^^^^^^ help: try: `Option<&'a u32>`\n    |\n    = note: `-D clippy::ref-option-ref` implied by `-D warnings`\n \n-error: aborting due to previous error\n+error: since & implements Copy trait, &Option<&T> can be simplifyied into Option<&T>\n+  --> $DIR/ref_option_ref.rs:5:22\n+   |\n+LL | type OptRef<'a, T> = &'a Option<&'a T>;\n+   |                      ^^^^^^^^^^^^^^^^^ help: try: `Option<&'a T>`\n+\n+error: since & implements Copy trait, &Option<&T> can be simplifyied into Option<&T>\n+  --> $DIR/ref_option_ref.rs:8:12\n+   |\n+LL |     let x: &Option<&u32> = &None;\n+   |            ^^^^^^^^^^^^^ help: try: `Option<&u32>`\n+\n+error: aborting due to 3 previous errors\n "}]}