{"sha": "76b9b16b4d589a72364b3be1c3a61816a99c3715", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2YjliMTZiNGQ1ODlhNzIzNjRiM2JlMWMzYTYxODE2YTk5YzM3MTU=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-21T12:40:39Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-21T12:40:39Z"}, "message": "rustc_codegen_ssa: remove unneeded wrapping of return type of execute_copy_from_cache_work_item (always returns Ok(..))", "tree": {"sha": "0c11ce890554e8556e6eff6777a2188a101d1138", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c11ce890554e8556e6eff6777a2188a101d1138"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76b9b16b4d589a72364b3be1c3a61816a99c3715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76b9b16b4d589a72364b3be1c3a61816a99c3715", "html_url": "https://github.com/rust-lang/rust/commit/76b9b16b4d589a72364b3be1c3a61816a99c3715", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76b9b16b4d589a72364b3be1c3a61816a99c3715/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "393878b15bbdf553e678dac3a7dd288bd6af879e", "url": "https://api.github.com/repos/rust-lang/rust/commits/393878b15bbdf553e678dac3a7dd288bd6af879e", "html_url": "https://github.com/rust-lang/rust/commit/393878b15bbdf553e678dac3a7dd288bd6af879e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "f5ae406faec2d071f644aa3c4c7a615c1732c39c", "filename": "compiler/rustc_codegen_ssa/src/back/write.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/76b9b16b4d589a72364b3be1c3a61816a99c3715/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76b9b16b4d589a72364b3be1c3a61816a99c3715/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs?ref=76b9b16b4d589a72364b3be1c3a61816a99c3715", "patch": "@@ -735,7 +735,7 @@ fn execute_work_item<B: ExtraBackendMethods>(\n     match work_item {\n         WorkItem::Optimize(module) => execute_optimize_work_item(cgcx, module, module_config),\n         WorkItem::CopyPostLtoArtifacts(module) => {\n-            execute_copy_from_cache_work_item(cgcx, module, module_config)\n+            Ok(execute_copy_from_cache_work_item(cgcx, module, module_config))\n         }\n         WorkItem::LTO(module) => execute_lto_work_item(cgcx, module, module_config),\n     }\n@@ -844,7 +844,7 @@ fn execute_copy_from_cache_work_item<B: ExtraBackendMethods>(\n     cgcx: &CodegenContext<B>,\n     module: CachedModuleCodegen,\n     module_config: &ModuleConfig,\n-) -> Result<WorkItemResult<B>, FatalError> {\n+) -> WorkItemResult<B> {\n     let incr_comp_session_dir = cgcx.incr_comp_session_dir.as_ref().unwrap();\n     let mut object = None;\n     if let Some(saved_file) = module.source.saved_file {\n@@ -870,13 +870,13 @@ fn execute_copy_from_cache_work_item<B: ExtraBackendMethods>(\n \n     assert_eq!(object.is_some(), module_config.emit_obj != EmitObj::None);\n \n-    Ok(WorkItemResult::Compiled(CompiledModule {\n+    WorkItemResult::Compiled(CompiledModule {\n         name: module.name,\n         kind: ModuleKind::Regular,\n         object,\n         dwarf_object: None,\n         bytecode: None,\n-    }))\n+    })\n }\n \n fn execute_lto_work_item<B: ExtraBackendMethods>("}]}