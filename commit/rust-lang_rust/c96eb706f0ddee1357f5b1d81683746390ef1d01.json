{"sha": "c96eb706f0ddee1357f5b1d81683746390ef1d01", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5NmViNzA2ZjBkZGVlMTM1N2Y1YjFkODE2ODM3NDYzOTBlZjFkMDE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-11T08:16:51Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-13T07:09:03Z"}, "message": "Fix and test upvar name printing for validity", "tree": {"sha": "db3bdf4e066415e964be54133b03b152a5718539", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db3bdf4e066415e964be54133b03b152a5718539"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c96eb706f0ddee1357f5b1d81683746390ef1d01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c96eb706f0ddee1357f5b1d81683746390ef1d01", "html_url": "https://github.com/rust-lang/rust/commit/c96eb706f0ddee1357f5b1d81683746390ef1d01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c96eb706f0ddee1357f5b1d81683746390ef1d01/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69576fcdee00b7e820c2faee258e24bb50db266a", "url": "https://api.github.com/repos/rust-lang/rust/commits/69576fcdee00b7e820c2faee258e24bb50db266a", "html_url": "https://github.com/rust-lang/rust/commit/69576fcdee00b7e820c2faee258e24bb50db266a"}], "stats": {"total": 52, "additions": 42, "deletions": 10}, "files": [{"sha": "fb81ab4e8c49d8267d131a154eca09c9b86b9c41", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c96eb706f0ddee1357f5b1d81683746390ef1d01/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c96eb706f0ddee1357f5b1d81683746390ef1d01/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=c96eb706f0ddee1357f5b1d81683746390ef1d01", "patch": "@@ -559,17 +559,13 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n         match layout.ty.sty {\n             // generators and closures.\n             ty::Closure(def_id, _) | ty::Generator(def_id, _, _) => {\n-                if let Some(node_id) = self.tcx.hir.as_local_node_id(def_id) {\n-                    if let Some(freevar) = self.tcx.with_freevars(\n-                        node_id,\n-                        |fv| fv.get(field).map(|field| *field))\n-                    {\n-                        return PathElem::ClosureVar(self.tcx.hir.name(freevar.var_id()));\n-                    }\n+                if let Some(upvar) = self.tcx.optimized_mir(def_id).upvar_decls.get(field) {\n+                    PathElem::ClosureVar(upvar.debug_name)\n+                } else {\n+                    // Sometimes the index is beyond the number of freevars (seen\n+                    // for a generator).\n+                    PathElem::ClosureVar(Symbol::intern(&field.to_string()))\n                 }\n-                // The closure is not local, or the freevars don't match up (seen for a generator!),\n-                // so we cannot get the name.\n-                PathElem::ClosureVar(Symbol::intern(&field.to_string()))\n             }\n \n             // tuples"}, {"sha": "309211d19d461fc321234fc8fdd7286e2e62ea2e", "filename": "src/test/ui/consts/const-eval/ub-upvars.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c96eb706f0ddee1357f5b1d81683746390ef1d01/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-upvars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c96eb706f0ddee1357f5b1d81683746390ef1d01/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-upvars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-upvars.rs?ref=c96eb706f0ddee1357f5b1d81683746390ef1d01", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(const_transmute,const_let)]\n+\n+use std::mem;\n+\n+const BAD_UPVAR: &FnOnce() = &{ //~ ERROR this constant likely exhibits undefined behavior\n+    let bad_ref: &'static u16 = unsafe { mem::transmute(0usize) };\n+    let another_var = 13;\n+    move || { let _ = bad_ref; let _ = another_var; }\n+};\n+\n+fn main() {}"}, {"sha": "3ae140d6e1c2003f3134ffeaf7e930d098d869ce", "filename": "src/test/ui/consts/const-eval/ub-upvars.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c96eb706f0ddee1357f5b1d81683746390ef1d01/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-upvars.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c96eb706f0ddee1357f5b1d81683746390ef1d01/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-upvars.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-upvars.stderr?ref=c96eb706f0ddee1357f5b1d81683746390ef1d01", "patch": "@@ -0,0 +1,15 @@\n+error[E0080]: this constant likely exhibits undefined behavior\n+  --> $DIR/ub-upvars.rs:15:1\n+   |\n+LL | / const BAD_UPVAR: &FnOnce() = &{ //~ ERROR this constant likely exhibits undefined behavior\n+LL | |     let bad_ref: &'static u16 = unsafe { mem::transmute(0usize) };\n+LL | |     let another_var = 13;\n+LL | |     move || { let _ = bad_ref; let _ = another_var; }\n+LL | | };\n+   | |__^ type validation failed: encountered 0 at .<deref>.<closure-var(bad_ref)>, but expected something greater or equal to 1\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0080`."}]}