{"sha": "7aebe3a69046d5f78f614ba80f0db3fe0b0b719b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhZWJlM2E2OTA0NmQ1Zjc4ZjYxNGJhODBmMGRiM2ZlMGIwYjcxOWI=", "commit": {"author": {"name": "Tim Nielens", "email": "tim.nielens@gmail.com", "date": "2017-08-18T17:42:26Z"}, "committer": {"name": "Tim Nielens", "email": "tim.nielens@gmail.com", "date": "2017-08-18T17:46:50Z"}, "message": "lint #1674: replace struct name with `Self` when applicable\n\nSelfType const and suggestion", "tree": {"sha": "9e5abb22d18844b5b66eed71832bc5d5f1fe0aaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e5abb22d18844b5b66eed71832bc5d5f1fe0aaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7aebe3a69046d5f78f614ba80f0db3fe0b0b719b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7aebe3a69046d5f78f614ba80f0db3fe0b0b719b", "html_url": "https://github.com/rust-lang/rust/commit/7aebe3a69046d5f78f614ba80f0db3fe0b0b719b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7aebe3a69046d5f78f614ba80f0db3fe0b0b719b/comments", "author": {"login": "tnielens", "id": 11885535, "node_id": "MDQ6VXNlcjExODg1NTM1", "avatar_url": "https://avatars.githubusercontent.com/u/11885535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnielens", "html_url": "https://github.com/tnielens", "followers_url": "https://api.github.com/users/tnielens/followers", "following_url": "https://api.github.com/users/tnielens/following{/other_user}", "gists_url": "https://api.github.com/users/tnielens/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnielens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnielens/subscriptions", "organizations_url": "https://api.github.com/users/tnielens/orgs", "repos_url": "https://api.github.com/users/tnielens/repos", "events_url": "https://api.github.com/users/tnielens/events{/privacy}", "received_events_url": "https://api.github.com/users/tnielens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tnielens", "id": 11885535, "node_id": "MDQ6VXNlcjExODg1NTM1", "avatar_url": "https://avatars.githubusercontent.com/u/11885535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnielens", "html_url": "https://github.com/tnielens", "followers_url": "https://api.github.com/users/tnielens/followers", "following_url": "https://api.github.com/users/tnielens/following{/other_user}", "gists_url": "https://api.github.com/users/tnielens/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnielens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnielens/subscriptions", "organizations_url": "https://api.github.com/users/tnielens/orgs", "repos_url": "https://api.github.com/users/tnielens/repos", "events_url": "https://api.github.com/users/tnielens/events{/privacy}", "received_events_url": "https://api.github.com/users/tnielens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7759bd61119580cf13d85e6a38ea4254244e84e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7759bd61119580cf13d85e6a38ea4254244e84e8", "html_url": "https://github.com/rust-lang/rust/commit/7759bd61119580cf13d85e6a38ea4254244e84e8"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "2a94d8fe9cc5104602ff83603c88fc971eff30c9", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7aebe3a69046d5f78f614ba80f0db3fe0b0b719b/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7aebe3a69046d5f78f614ba80f0db3fe0b0b719b/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=7aebe3a69046d5f78f614ba80f0db3fe0b0b719b", "patch": "@@ -1,8 +1,9 @@\n use rustc::lint::{LintArray, LateLintPass, LateContext, LintPass};\n use rustc::hir::*;\n use rustc::hir::intravisit::{Visitor, walk_path, NestedVisitorMap};\n-use utils::span_lint;\n+use utils::span_lint_and_then;\n use syntax::ast::NodeId;\n+use syntax_pos::symbol::keywords::SelfType;\n \n /// **What it does:** Checks for unnecessary repetition of structure name when a\n /// replacement with `Self` is applicable.\n@@ -33,7 +34,7 @@ use syntax::ast::NodeId;\n declare_lint! {\n     pub USE_SELF,\n     Allow,\n-    \"Repetitive struct name usage whereas `Self` is applicable\"\n+    \"Unnecessary structure name repetition whereas `Self` is applicable\"\n }\n \n #[derive(Copy, Clone, Default)]\n@@ -72,13 +73,13 @@ impl<'a, 'tcx> Visitor<'tcx> for UseSelfVisitor<'a, 'tcx> {\n         if self.item_path.def == path.def &&\n            path.segments\n             .last()\n-            .expect(\"segments should be composed of at least 1 elemnt\")\n-            .name\n-            .as_str() != \"Self\" {\n-            span_lint(self.cx,\n-                      USE_SELF,\n-                      path.span,\n-                      \"repetitive struct name usage. Use `Self` instead.\");\n+            .expect(\"segments should be composed of at least 1 element\")\n+            .name != SelfType.name() {\n+            span_lint_and_then(self.cx, USE_SELF, path.span, \"unnecessary structure name repetition\", |db| {\n+                db.span_suggestion(path.span,\n+                                   \"use the applicable keyword\",\n+                                   \"Self\".to_owned());\n+            });\n         }\n \n         walk_path(self, path);"}, {"sha": "0cbd574b506401e875482f78ab919dd716ed201a", "filename": "tests/ui/use_self.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7aebe3a69046d5f78f614ba80f0db3fe0b0b719b/tests%2Fui%2Fuse_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7aebe3a69046d5f78f614ba80f0db3fe0b0b719b/tests%2Fui%2Fuse_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.stderr?ref=7aebe3a69046d5f78f614ba80f0db3fe0b0b719b", "patch": "@@ -1,40 +1,40 @@\n-error: repetitive struct name usage. Use `Self` instead.\n+error: unnecessary structure name repetition\n   --> $DIR/use_self.rs:13:21\n    |\n 13 |         fn new() -> Foo {\n-   |                     ^^^\n+   |                     ^^^ help: use the applicable keyword: `Self`\n    |\n    = note: `-D use-self` implied by `-D warnings`\n \n-error: repetitive struct name usage. Use `Self` instead.\n+error: unnecessary structure name repetition\n   --> $DIR/use_self.rs:14:13\n    |\n 14 |             Foo {}\n-   |             ^^^\n+   |             ^^^ help: use the applicable keyword: `Self`\n \n-error: repetitive struct name usage. Use `Self` instead.\n+error: unnecessary structure name repetition\n   --> $DIR/use_self.rs:16:22\n    |\n 16 |         fn test() -> Foo {\n-   |                      ^^^\n+   |                      ^^^ help: use the applicable keyword: `Self`\n \n-error: repetitive struct name usage. Use `Self` instead.\n+error: unnecessary structure name repetition\n   --> $DIR/use_self.rs:17:13\n    |\n 17 |             Foo::new()\n-   |             ^^^^^^^^\n+   |             ^^^^^^^^ help: use the applicable keyword: `Self`\n \n-error: repetitive struct name usage. Use `Self` instead.\n+error: unnecessary structure name repetition\n   --> $DIR/use_self.rs:22:25\n    |\n 22 |         fn default() -> Foo {\n-   |                         ^^^\n+   |                         ^^^ help: use the applicable keyword: `Self`\n \n-error: repetitive struct name usage. Use `Self` instead.\n+error: unnecessary structure name repetition\n   --> $DIR/use_self.rs:23:13\n    |\n 23 |             Foo::new()\n-   |             ^^^^^^^^\n+   |             ^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: aborting due to 6 previous errors\n "}]}