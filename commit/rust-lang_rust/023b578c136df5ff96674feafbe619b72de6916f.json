{"sha": "023b578c136df5ff96674feafbe619b72de6916f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyM2I1NzhjMTM2ZGY1ZmY5NjY3NGZlYWZiZTYxOWI3MmRlNjkxNmY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-02-21T21:54:51Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-02-23T00:14:59Z"}, "message": "Remove indent from context and only use Shape", "tree": {"sha": "8ede47ae0816923da8b5a95100a44de10a98cb10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ede47ae0816923da8b5a95100a44de10a98cb10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/023b578c136df5ff96674feafbe619b72de6916f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/023b578c136df5ff96674feafbe619b72de6916f", "html_url": "https://github.com/rust-lang/rust/commit/023b578c136df5ff96674feafbe619b72de6916f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/023b578c136df5ff96674feafbe619b72de6916f/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b35906dbce47552c2ba6350f31c654bc77603fbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b35906dbce47552c2ba6350f31c654bc77603fbd", "html_url": "https://github.com/rust-lang/rust/commit/b35906dbce47552c2ba6350f31c654bc77603fbd"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "8f6ccbd095ee269c7812595fa680172ede2e5da9", "filename": "src/expr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/023b578c136df5ff96674feafbe619b72de6916f/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/023b578c136df5ff96674feafbe619b72de6916f/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=023b578c136df5ff96674feafbe619b72de6916f", "patch": "@@ -853,7 +853,8 @@ impl<'a> Rewrite for ControlFlow<'a> {\n             // 2 = spaces after keyword and condition.\n             label_string.len() + self.keyword.len() + pat_expr_string.len() + 2\n         };\n-        let block_width = try_opt!(shape.width.checked_sub(used_width));\n+\n+        let block_width = shape.width.checked_sub(used_width).unwrap_or(0);\n         // This is used only for the empty block case: `{}`. So, we use 1 if we know\n         // we should avoid the single line case.\n         let block_width = if self.else_block.is_some() || self.nested_if {\n@@ -1380,7 +1381,7 @@ fn rewrite_pat_expr(context: &RewriteContext,\n                     connector: &str,\n                     shape: Shape)\n                     -> Option<String> {\n-    debug!(\"rewrite_pat_expr {:?}\", shape);\n+    debug!(\"rewrite_pat_expr {:?} {:?}\", shape, pat);\n     let mut result = match pat {\n         Some(pat) => {\n             let matcher = if matcher.is_empty() {\n@@ -1407,8 +1408,7 @@ fn rewrite_pat_expr(context: &RewriteContext,\n \n         if let Some(expr_string) = expr_rewrite {\n             let pat_simple = pat.and_then(|p| {\n-                    p.rewrite(context,\n-                              Shape::legacy(context.config.max_width, Indent::empty()))\n+                    p.rewrite(context, Shape::legacy(context.config.max_width, Indent::empty()))\n                 })\n                 .map(|s| pat_is_simple(&s));\n "}]}