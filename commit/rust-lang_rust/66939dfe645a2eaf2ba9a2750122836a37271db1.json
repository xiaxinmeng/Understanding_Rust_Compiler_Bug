{"sha": "66939dfe645a2eaf2ba9a2750122836a37271db1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2OTM5ZGZlNjQ1YTJlYWYyYmE5YTI3NTAxMjI4MzZhMzcyNzFkYjE=", "commit": {"author": {"name": "Neil Pankey", "email": "npankey@gmail.com", "date": "2014-10-19T00:40:32Z"}, "committer": {"name": "Neil Pankey", "email": "npankey@gmail.com", "date": "2014-10-19T00:40:57Z"}, "message": "[Docs] more intro typos", "tree": {"sha": "27c8f120e502c34c6f0fa641f57149b0ea7467a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27c8f120e502c34c6f0fa641f57149b0ea7467a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66939dfe645a2eaf2ba9a2750122836a37271db1", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66939dfe645a2eaf2ba9a2750122836a37271db1", "html_url": "https://github.com/rust-lang/rust/commit/66939dfe645a2eaf2ba9a2750122836a37271db1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66939dfe645a2eaf2ba9a2750122836a37271db1/comments", "author": {"login": "neilpa", "id": 42419, "node_id": "MDQ6VXNlcjQyNDE5", "avatar_url": "https://avatars.githubusercontent.com/u/42419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilpa", "html_url": "https://github.com/neilpa", "followers_url": "https://api.github.com/users/neilpa/followers", "following_url": "https://api.github.com/users/neilpa/following{/other_user}", "gists_url": "https://api.github.com/users/neilpa/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilpa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilpa/subscriptions", "organizations_url": "https://api.github.com/users/neilpa/orgs", "repos_url": "https://api.github.com/users/neilpa/repos", "events_url": "https://api.github.com/users/neilpa/events{/privacy}", "received_events_url": "https://api.github.com/users/neilpa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "neilpa", "id": 42419, "node_id": "MDQ6VXNlcjQyNDE5", "avatar_url": "https://avatars.githubusercontent.com/u/42419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilpa", "html_url": "https://github.com/neilpa", "followers_url": "https://api.github.com/users/neilpa/followers", "following_url": "https://api.github.com/users/neilpa/following{/other_user}", "gists_url": "https://api.github.com/users/neilpa/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilpa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilpa/subscriptions", "organizations_url": "https://api.github.com/users/neilpa/orgs", "repos_url": "https://api.github.com/users/neilpa/repos", "events_url": "https://api.github.com/users/neilpa/events{/privacy}", "received_events_url": "https://api.github.com/users/neilpa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1389530cf5dca112f5d282acfa7f08a08e114bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1389530cf5dca112f5d282acfa7f08a08e114bc", "html_url": "https://github.com/rust-lang/rust/commit/e1389530cf5dca112f5d282acfa7f08a08e114bc"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "21ec551eb3024befe1592e6912b7fc6e7a114dbd", "filename": "src/doc/intro.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/66939dfe645a2eaf2ba9a2750122836a37271db1/src%2Fdoc%2Fintro.md", "raw_url": "https://github.com/rust-lang/rust/raw/66939dfe645a2eaf2ba9a2750122836a37271db1/src%2Fdoc%2Fintro.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fintro.md?ref=66939dfe645a2eaf2ba9a2750122836a37271db1", "patch": "@@ -444,19 +444,19 @@ It gives us this error:\n It mentions that \"numbers moved into closure environment\". Because we referred\n to `numbers` inside of our `proc`, and we create three `proc`s, we would have\n three references. Rust detects this and gives us the error: we claim that\n-`numbers` has ownership, but our code tries to make ten owners. This may cause\n-a safety problem, so Rust disallows it.\n+`numbers` has ownership, but our code tries to make three owners. This may\n+cause a safety problem, so Rust disallows it.\n \n What to do here? Rust has two types that helps us: `Arc<T>` and `Mutex<T>`.\n \"Arc\" stands for \"atomically reference counted.\" In other words, an Arc will\n keep track of the number of references to something, and not free the\n associated resource until the count is zero. The 'atomic' portion refers to an\n Arc's usage of concurrency primitives to atomically update the count, making it\n-safe across threads. If we use an Arc, we can have our ten references. But, an\n-Arc does not allow mutable borrows of the data it holds, and we want to modify\n-what we're sharing. In this case, we can use a `Mutex<T>` inside of our Arc. A\n-Mutex will synchronize our accesses, so that we can ensure that our mutation\n-doesn't cause a data race.\n+safe across threads. If we use an Arc, we can have our three references. But,\n+an Arc does not allow mutable borrows of the data it holds, and we want to\n+modify what we're sharing. In this case, we can use a `Mutex<T>` inside of our\n+Arc. A Mutex will synchronize our accesses, so that we can ensure that our\n+mutation doesn't cause a data race.\n \n Here's what using an Arc with a Mutex looks like:\n "}]}