{"sha": "2d9f0e2c50ff6131643fd0b2d5a9f65a7006f50c", "node_id": "C_kwDOAAsO6NoAKDJkOWYwZTJjNTBmZjYxMzE2NDNmZDBiMmQ1YTlmNjVhNzAwNmY1MGM", "commit": {"author": {"name": "Hans Kratz", "email": "hans@appfour.com", "date": "2021-11-03T22:37:23Z"}, "committer": {"name": "Hans Kratz", "email": "hans@appfour.com", "date": "2021-11-04T11:01:26Z"}, "message": "Optimize bidi character detection.", "tree": {"sha": "7522008a2e577c95e9fcccca07e108b3bfa31ab0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7522008a2e577c95e9fcccca07e108b3bfa31ab0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d9f0e2c50ff6131643fd0b2d5a9f65a7006f50c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d9f0e2c50ff6131643fd0b2d5a9f65a7006f50c", "html_url": "https://github.com/rust-lang/rust/commit/2d9f0e2c50ff6131643fd0b2d5a9f65a7006f50c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d9f0e2c50ff6131643fd0b2d5a9f65a7006f50c/comments", "author": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "473eaa42e9365c47d129f72693b5d163a20cf369", "url": "https://api.github.com/repos/rust-lang/rust/commits/473eaa42e9365c47d129f72693b5d163a20cf369", "html_url": "https://github.com/rust-lang/rust/commit/473eaa42e9365c47d129f72693b5d163a20cf369"}], "stats": {"total": 46, "additions": 40, "deletions": 6}, "files": [{"sha": "21d0ee60cdade2141686fa16c9e6b20436928458", "filename": "compiler/rustc_parse/src/lexer/mod.rs", "status": "modified", "additions": 39, "deletions": 6, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/2d9f0e2c50ff6131643fd0b2d5a9f65a7006f50c/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d9f0e2c50ff6131643fd0b2d5a9f65a7006f50c/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs?ref=2d9f0e2c50ff6131643fd0b2d5a9f65a7006f50c", "patch": "@@ -137,12 +137,45 @@ impl<'a> StringReader<'a> {\n         // Opening delimiter of the length 2 is not included into the comment text.\n         let content_start = start + BytePos(2);\n         let content = self.str_from(content_start);\n-        let span = self.mk_sp(start, self.pos);\n-        const UNICODE_TEXT_FLOW_CHARS: &[char] = &[\n-            '\\u{202A}', '\\u{202B}', '\\u{202D}', '\\u{202E}', '\\u{2066}', '\\u{2067}', '\\u{2068}',\n-            '\\u{202C}', '\\u{2069}',\n-        ];\n-        if content.contains(UNICODE_TEXT_FLOW_CHARS) {\n+\n+        // Char   - UTF-8\n+        // U+202A - E2 80 AA\n+        // U+202B - E2 80 AB\n+        // U+202C - E2 80 AC\n+        // U+202D - E2 80 AD\n+        // U+202E - E2 80 AE\n+        // U+2066 - E2 81 A6\n+        // U+2067 - E2 81 A7\n+        // U+2068 - E2 81 A8\n+        // U+2069 - E2 81 A9\n+        let mut bytes = content.as_bytes();\n+        let contains_flow_control_chars = loop {\n+            match core::slice::memchr::memchr(0xE2, &bytes) {\n+                Some(idx) => {\n+                    // bytes are valid UTF-8 -> E2 must be followed by two bytes\n+                    match bytes[idx + 1] {\n+                        0x80 => {\n+                            if (0xAA..=0xAE).contains(&bytes[idx + 2]) {\n+                                break true;\n+                            }\n+                        }\n+                        0x81 => {\n+                            if (0xA6..=0xA9).contains(&bytes[idx + 2]) {\n+                                break true;\n+                            }\n+                        }\n+                        _ => {}\n+                    }\n+                    bytes = &bytes[idx + 3..];\n+                }\n+                None => {\n+                    break false;\n+                }\n+            }\n+        };\n+\n+        if contains_flow_control_chars {\n+            let span = self.mk_sp(start, self.pos);\n             self.sess.buffer_lint_with_diagnostic(\n                 &TEXT_DIRECTION_CODEPOINT_IN_COMMENT,\n                 span,"}, {"sha": "063b0183a8fd5162169f944aa7309c177b92dbf1", "filename": "compiler/rustc_parse/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2d9f0e2c50ff6131643fd0b2d5a9f65a7006f50c/compiler%2Frustc_parse%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d9f0e2c50ff6131643fd0b2d5a9f65a7006f50c/compiler%2Frustc_parse%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flib.rs?ref=2d9f0e2c50ff6131643fd0b2d5a9f65a7006f50c", "patch": "@@ -4,6 +4,7 @@\n #![feature(crate_visibility_modifier)]\n #![feature(if_let_guard)]\n #![feature(box_patterns)]\n+#![feature(slice_internals)]\n #![recursion_limit = \"256\"]\n \n #[macro_use]"}]}