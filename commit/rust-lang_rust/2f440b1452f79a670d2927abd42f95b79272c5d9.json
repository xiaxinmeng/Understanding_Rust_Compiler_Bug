{"sha": "2f440b1452f79a670d2927abd42f95b79272c5d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNDQwYjE0NTJmNzlhNjcwZDI5MjdhYmQ0MmY5NWI3OTI3MmM1ZDk=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-13T20:47:37Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-13T20:55:37Z"}, "message": "rustc: lowercase the link and link::write modules", "tree": {"sha": "2f5fd75cd246c649f42437ef26e30caa225e7e73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f5fd75cd246c649f42437ef26e30caa225e7e73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f440b1452f79a670d2927abd42f95b79272c5d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f440b1452f79a670d2927abd42f95b79272c5d9", "html_url": "https://github.com/rust-lang/rust/commit/2f440b1452f79a670d2927abd42f95b79272c5d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f440b1452f79a670d2927abd42f95b79272c5d9/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d32ff723ab807add5830af57c3ebbc9cae8e8b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d32ff723ab807add5830af57c3ebbc9cae8e8b6", "html_url": "https://github.com/rust-lang/rust/commit/0d32ff723ab807add5830af57c3ebbc9cae8e8b6"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "830264d35e085c2efa32461a7876a9c6db67fca7", "filename": "src/comp/back/link.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f440b1452f79a670d2927abd42f95b79272c5d9/src%2Fcomp%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f440b1452f79a670d2927abd42f95b79272c5d9/src%2Fcomp%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Flink.rs?ref=2f440b1452f79a670d2927abd42f95b79272c5d9", "patch": "@@ -50,7 +50,7 @@ fn link_intrinsics(session::session sess, ModuleRef llmod) {\n     }\n }\n \n-mod Write {\n+mod write {\n     fn is_object_or_assembly(output_type ot) -> bool {\n         if (ot == output_type_assembly) {\n             ret true;", "previous_filename": "src/comp/back/Link.rs"}, {"sha": "6effc44f69416d0a68ec59656d787277e6c29706", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2f440b1452f79a670d2927abd42f95b79272c5d9/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f440b1452f79a670d2927abd42f95b79272c5d9/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=2f440b1452f79a670d2927abd42f95b79272c5d9", "patch": "@@ -10,7 +10,7 @@ import middle::resolve;\n import middle::ty;\n import middle::typeck;\n import middle::typestate_check;\n-import back::Link;\n+import back::link;\n import lib::llvm;\n import util::common;\n \n@@ -29,7 +29,7 @@ import std::getopts::optmulti;\n import std::getopts::optflag;\n import std::getopts::opt_present;\n \n-import back::Link::output_type;\n+import back::link::output_type;\n \n fn default_environment(session::session sess,\n                        str argv0,\n@@ -87,7 +87,7 @@ fn compile_input(session::session sess,\n     auto p = parser::new_parser(sess, env, def, input, 0u, 0u);\n     auto crate = time(time_passes, \"parsing\",\n                       bind parse_input(sess, p, input));\n-    if (sess.get_opts().output_type == Link::output_type_none) {ret;}\n+    if (sess.get_opts().output_type == link::output_type_none) {ret;}\n \n     crate = time(time_passes, \"external crate reading\",\n                  bind creader::read_crates(sess, crate));\n@@ -112,7 +112,7 @@ fn compile_input(session::session sess,\n                                 type_cache, output));\n \n     time[()](time_passes, \"LLVM passes\",\n-             bind Link::Write::run_passes(sess, llmod, output));\n+             bind link::write::run_passes(sess, llmod, output));\n }\n \n fn pretty_print_input(session::session sess,\n@@ -241,13 +241,13 @@ fn main(vec[str] args) {\n     auto output_file = getopts::opt_maybe_str(match, \"o\");\n     auto library_search_paths = getopts::opt_strs(match, \"L\");\n \n-    auto output_type = Link::output_type_bitcode;\n+    auto output_type = link::output_type_bitcode;\n     if (opt_present(match, \"parse-only\")) {\n-        output_type = Link::output_type_none;\n+        output_type = link::output_type_none;\n     } else if (opt_present(match, \"S\")) {\n-        output_type = Link::output_type_assembly;\n+        output_type = link::output_type_assembly;\n     } else if (opt_present(match, \"c\")) {\n-        output_type = Link::output_type_object;\n+        output_type = link::output_type_object;\n     }\n \n     auto verify = !opt_present(match, \"noverify\");\n@@ -317,10 +317,10 @@ fn main(vec[str] args) {\n                 let vec[str] parts = _str::split(ifile, '.' as u8);\n                 _vec::pop[str](parts);\n                 alt (output_type) {\n-                    case (Link::output_type_none) { parts += vec(\"pp\"); }\n-                    case (Link::output_type_bitcode) { parts += vec(\"bc\"); }\n-                    case (Link::output_type_assembly) { parts += vec(\"s\"); }\n-                    case (Link::output_type_object) { parts += vec(\"o\"); }\n+                    case (link::output_type_none) { parts += vec(\"pp\"); }\n+                    case (link::output_type_bitcode) { parts += vec(\"bc\"); }\n+                    case (link::output_type_assembly) { parts += vec(\"s\"); }\n+                    case (link::output_type_object) { parts += vec(\"o\"); }\n                 }\n                 auto ofile = _str::connect(parts, \".\");\n                 compile_input(sess, env, ifile, ofile);"}, {"sha": "71d4d9d2ddfae5f31b71df8e5864e4a146872147", "filename": "src/comp/driver/session.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f440b1452f79a670d2927abd42f95b79272c5d9/src%2Fcomp%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f440b1452f79a670d2927abd42f95b79272c5d9/src%2Fcomp%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fsession.rs?ref=2f440b1452f79a670d2927abd42f95b79272c5d9", "patch": "@@ -34,7 +34,7 @@ type options = rec(bool shared,\n                    bool stats,\n                    bool time_passes,\n                    bool time_llvm_passes,\n-                   back::Link::output_type output_type,\n+                   back::link::output_type output_type,\n                    vec[str] library_search_paths,\n                    str sysroot);\n "}, {"sha": "4f1636d4b50efedfddced02eb75b02a621ce8626", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2f440b1452f79a670d2927abd42f95b79272c5d9/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f440b1452f79a670d2927abd42f95b79272c5d9/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=2f440b1452f79a670d2927abd42f95b79272c5d9", "patch": "@@ -14,7 +14,7 @@ import front::ast;\n import front::creader;\n import driver::session;\n import middle::ty;\n-import back::Link;\n+import back::link;\n import back::x86;\n import back::abi;\n import back::upcall;\n@@ -7892,7 +7892,7 @@ fn make_common_glue(&session::session sess, &str output) {\n     trans::trans_exit_task_glue(glues, new_str_hash[ValueRef](), tn,\n                                llmod);\n \n-    Link::Write::run_passes(sess, llmod, output);\n+    link::write::run_passes(sess, llmod, output);\n }\n \n fn create_module_map(&@crate_ctxt ccx) -> ValueRef {"}, {"sha": "47682235843485426e30b546a38481b30c0bcd03", "filename": "src/comp/rustc.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f440b1452f79a670d2927abd42f95b79272c5d9/src%2Fcomp%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/2f440b1452f79a670d2927abd42f95b79272c5d9/src%2Fcomp%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Frustc.rc?ref=2f440b1452f79a670d2927abd42f95b79272c5d9", "patch": "@@ -39,7 +39,7 @@ mod front {\n }\n \n mod back {\n-    mod Link;\n+    mod link;\n     mod abi;\n     mod upcall;\n     mod x86;"}]}