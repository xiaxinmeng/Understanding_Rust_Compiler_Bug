{"sha": "f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0YjgwMzk0ZDdiMmZkMjRiM2QzYTFhM2VlZWEyZTIyZGRjODk3NGI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-18T11:50:10Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-18T13:37:45Z"}, "message": "Use `Vec::with_capacity()` as possible", "tree": {"sha": "362e5170fe158258073d66cb37c4c9698935d110", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/362e5170fe158258073d66cb37c4c9698935d110"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b", "html_url": "https://github.com/rust-lang/rust/commit/f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0da4dd009ec28fb0e48bd10613dfb0ed5912d488", "url": "https://api.github.com/repos/rust-lang/rust/commits/0da4dd009ec28fb0e48bd10613dfb0ed5912d488", "html_url": "https://github.com/rust-lang/rust/commit/0da4dd009ec28fb0e48bd10613dfb0ed5912d488"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ee4ab7a9701da3a3b58ce700c1d39ff8c7ff96d3", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b", "patch": "@@ -359,7 +359,7 @@ impl<'a, 'tcx> NonminimalBoolVisitor<'a, 'tcx> {\n                 }\n                 simplified.push(simple_negated);\n             }\n-            let mut improvements = Vec::new();\n+            let mut improvements = Vec::with_capacity(simplified.len());\n             'simplified: for suggestion in &simplified {\n                 let simplified_stats = terminal_stats(suggestion);\n                 let mut improvement = false;"}, {"sha": "72131084311abf0a152118d49d2eff1d7060919f", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b", "patch": "@@ -724,7 +724,7 @@ fn is_panic_block(block: &Block<'_>) -> bool {\n \n fn check_match_ref_pats(cx: &LateContext<'_, '_>, ex: &Expr<'_>, arms: &[Arm<'_>], expr: &Expr<'_>) {\n     if has_only_ref_pats(arms) {\n-        let mut suggs = Vec::new();\n+        let mut suggs = Vec::with_capacity(arms.len() + 1);\n         let (title, msg) = if let ExprKind::AddrOf(BorrowKind::Ref, Mutability::Not, ref inner) = ex.kind {\n             let span = ex.span.source_callsite();\n             suggs.push((span, Sugg::hir_with_macro_callsite(cx, inner, \"..\").to_string()));"}, {"sha": "8e2ede04476eaa54d26fd0c2179aa9b5b543d830", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b", "patch": "@@ -101,7 +101,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Shadow {\n }\n \n fn check_fn<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, decl: &'tcx FnDecl<'_>, body: &'tcx Body<'_>) {\n-    let mut bindings = Vec::new();\n+    let mut bindings = Vec::with_capacity(decl.inputs.len());\n     for arg in iter_input_pats(decl, body) {\n         if let PatKind::Binding(.., ident, _) = arg.pat.kind {\n             bindings.push((ident.name, ident.span))"}]}