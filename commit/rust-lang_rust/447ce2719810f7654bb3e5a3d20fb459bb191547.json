{"sha": "447ce2719810f7654bb3e5a3d20fb459bb191547", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0N2NlMjcxOTgxMGY3NjU0YmIzZTVhM2QyMGZiNDU5YmIxOTE1NDc=", "commit": {"author": {"name": "r00ster91", "email": "r00ster91@protonmail.com", "date": "2021-02-20T17:32:02Z"}, "committer": {"name": "r00ster91", "email": "r00ster91@protonmail.com", "date": "2021-02-20T17:32:02Z"}, "message": "Make \"missing field\" error message more natural", "tree": {"sha": "bb2bc0b69ad80be4adb347ac1300c4c0ef1ad3b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb2bc0b69ad80be4adb347ac1300c4c0ef1ad3b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/447ce2719810f7654bb3e5a3d20fb459bb191547", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/447ce2719810f7654bb3e5a3d20fb459bb191547", "html_url": "https://github.com/rust-lang/rust/commit/447ce2719810f7654bb3e5a3d20fb459bb191547", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/447ce2719810f7654bb3e5a3d20fb459bb191547/comments", "author": {"login": "r00ster91", "id": 35064754, "node_id": "MDQ6VXNlcjM1MDY0NzU0", "avatar_url": "https://avatars.githubusercontent.com/u/35064754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r00ster91", "html_url": "https://github.com/r00ster91", "followers_url": "https://api.github.com/users/r00ster91/followers", "following_url": "https://api.github.com/users/r00ster91/following{/other_user}", "gists_url": "https://api.github.com/users/r00ster91/gists{/gist_id}", "starred_url": "https://api.github.com/users/r00ster91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r00ster91/subscriptions", "organizations_url": "https://api.github.com/users/r00ster91/orgs", "repos_url": "https://api.github.com/users/r00ster91/repos", "events_url": "https://api.github.com/users/r00ster91/events{/privacy}", "received_events_url": "https://api.github.com/users/r00ster91/received_events", "type": "User", "site_admin": false}, "committer": {"login": "r00ster91", "id": 35064754, "node_id": "MDQ6VXNlcjM1MDY0NzU0", "avatar_url": "https://avatars.githubusercontent.com/u/35064754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r00ster91", "html_url": "https://github.com/r00ster91", "followers_url": "https://api.github.com/users/r00ster91/followers", "following_url": "https://api.github.com/users/r00ster91/following{/other_user}", "gists_url": "https://api.github.com/users/r00ster91/gists{/gist_id}", "starred_url": "https://api.github.com/users/r00ster91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r00ster91/subscriptions", "organizations_url": "https://api.github.com/users/r00ster91/orgs", "repos_url": "https://api.github.com/users/r00ster91/repos", "events_url": "https://api.github.com/users/r00ster91/events{/privacy}", "received_events_url": "https://api.github.com/users/r00ster91/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb2effd44e667d133e31ef334e30d10195218ce6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb2effd44e667d133e31ef334e30d10195218ce6", "html_url": "https://github.com/rust-lang/rust/commit/cb2effd44e667d133e31ef334e30d10195218ce6"}], "stats": {"total": 55, "additions": 29, "deletions": 26}, "files": [{"sha": "58cab950b2892566e3185784b48d3f652b0c9bd6", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/447ce2719810f7654bb3e5a3d20fb459bb191547/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447ce2719810f7654bb3e5a3d20fb459bb191547/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=447ce2719810f7654bb3e5a3d20fb459bb191547", "patch": "@@ -1348,33 +1348,36 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         span: Span,\n         remaining_fields: FxHashMap<Ident, (usize, &ty::FieldDef)>,\n     ) {\n-        let tcx = self.tcx;\n         let len = remaining_fields.len();\n \n         let mut displayable_field_names =\n             remaining_fields.keys().map(|ident| ident.as_str()).collect::<Vec<_>>();\n \n         displayable_field_names.sort();\n \n-        let truncated_fields_error = if len <= 3 {\n-            String::new()\n-        } else {\n-            format!(\" and {} other field{}\", (len - 3), if len - 3 == 1 { \"\" } else { \"s\" })\n+        let mut truncated_fields_error = String::new();\n+        let remaining_fields_names = match &displayable_field_names[..] {\n+            [field1] => format!(\"`{}`\", field1),\n+            [field1, field2] => format!(\"`{}` and `{}`\", field1, field2),\n+            [field1, field2, field3] => format!(\"`{}`, `{}` and `{}`\", field1, field2, field3),\n+            _ => {\n+                truncated_fields_error =\n+                    format!(\" and {} other field{}\", len - 3, pluralize!(len - 3));\n+                displayable_field_names\n+                    .iter()\n+                    .take(3)\n+                    .map(|n| format!(\"`{}`\", n))\n+                    .collect::<Vec<_>>()\n+                    .join(\", \")\n+            }\n         };\n \n-        let remaining_fields_names = displayable_field_names\n-            .iter()\n-            .take(3)\n-            .map(|n| format!(\"`{}`\", n))\n-            .collect::<Vec<_>>()\n-            .join(\", \");\n-\n         struct_span_err!(\n-            tcx.sess,\n+            self.tcx.sess,\n             span,\n             E0063,\n             \"missing field{} {}{} in initializer of `{}`\",\n-            pluralize!(remaining_fields.len()),\n+            pluralize!(len),\n             remaining_fields_names,\n             truncated_fields_error,\n             adt_ty"}, {"sha": "58527cc0c5dd7d3754f1c68f0a9f8ed12ca2e95c", "filename": "src/test/ui/error-codes/E0063.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Ferror-codes%2FE0063.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Ferror-codes%2FE0063.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0063.rs?ref=447ce2719810f7654bb3e5a3d20fb459bb191547", "patch": "@@ -32,7 +32,7 @@ fn main() {\n     let w = SingleFoo { };\n     //~^ ERROR missing field `x` in initializer of `SingleFoo`\n     let x = PluralFoo {x: 1};\n-    //~^ ERROR missing fields `y`, `z` in initializer of `PluralFoo`\n+    //~^ ERROR missing fields `y` and `z` in initializer of `PluralFoo`\n     let y = TruncatedFoo{x:1};\n     //~^ missing fields `a`, `b`, `y` and 1 other field in initializer of `TruncatedFoo`\n     let z = TruncatedPluralFoo{x:1};"}, {"sha": "5dc4927071b6b128cc620db4c64224ddeb1289e9", "filename": "src/test/ui/error-codes/E0063.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Ferror-codes%2FE0063.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Ferror-codes%2FE0063.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0063.stderr?ref=447ce2719810f7654bb3e5a3d20fb459bb191547", "patch": "@@ -4,11 +4,11 @@ error[E0063]: missing field `x` in initializer of `SingleFoo`\n LL |     let w = SingleFoo { };\n    |             ^^^^^^^^^ missing `x`\n \n-error[E0063]: missing fields `y`, `z` in initializer of `PluralFoo`\n+error[E0063]: missing fields `y` and `z` in initializer of `PluralFoo`\n   --> $DIR/E0063.rs:34:13\n    |\n LL |     let x = PluralFoo {x: 1};\n-   |             ^^^^^^^^^ missing `y`, `z`\n+   |             ^^^^^^^^^ missing `y` and `z`\n \n error[E0063]: missing fields `a`, `b`, `y` and 1 other field in initializer of `TruncatedFoo`\n   --> $DIR/E0063.rs:36:13"}, {"sha": "b94278bfdd2216b8bf5e3575d3fc44a868b60950", "filename": "src/test/ui/issues/issue-79593.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Fissues%2Fissue-79593.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Fissues%2Fissue-79593.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-79593.rs?ref=447ce2719810f7654bb3e5a3d20fb459bb191547", "patch": "@@ -23,7 +23,7 @@ fn wrong() {\n     foo::Enum::Variant { x: () };\n     //~^ ERROR missing field `y` in initializer of `Enum`\n     foo::Enum::Variant { };\n-    //~^ ERROR missing fields `x`, `y` in initializer of `Enum`\n+    //~^ ERROR missing fields `x` and `y` in initializer of `Enum`\n }\n \n fn main() {}"}, {"sha": "b8c7d4f23a28f4b6c2f01c660f943b6b9fe78c8e", "filename": "src/test/ui/issues/issue-79593.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Fissues%2Fissue-79593.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Fissues%2Fissue-79593.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-79593.stderr?ref=447ce2719810f7654bb3e5a3d20fb459bb191547", "patch": "@@ -22,11 +22,11 @@ error[E0063]: missing field `y` in initializer of `Enum`\n LL |     foo::Enum::Variant { x: () };\n    |     ^^^^^^^^^^^^^^^^^^ missing `y`\n \n-error[E0063]: missing fields `x`, `y` in initializer of `Enum`\n+error[E0063]: missing fields `x` and `y` in initializer of `Enum`\n   --> $DIR/issue-79593.rs:25:5\n    |\n LL |     foo::Enum::Variant { };\n-   |     ^^^^^^^^^^^^^^^^^^ missing `x`, `y`\n+   |     ^^^^^^^^^^^^^^^^^^ missing `x` and `y`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "05461f8b8c41307046171cd31dfcb13dd9b3f344", "filename": "src/test/ui/parser/issue-52496.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Fparser%2Fissue-52496.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Fparser%2Fissue-52496.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-52496.rs?ref=447ce2719810f7654bb3e5a3d20fb459bb191547", "patch": "@@ -7,6 +7,6 @@ fn main() {\n     let bar = 1.5f32;\n     let _ = Foo { bar.into(), bat: -1, . };\n     //~^ ERROR expected one of\n-    //~| ERROR missing fields `bar`, `baz` in initializer of `Foo`\n+    //~| ERROR missing fields `bar` and `baz` in initializer of `Foo`\n     //~| ERROR expected identifier, found `.`\n }"}, {"sha": "9dbf26ef4b68c234f8f61169144df3716ca05f7c", "filename": "src/test/ui/parser/issue-52496.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Fparser%2Fissue-52496.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Fparser%2Fissue-52496.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-52496.stderr?ref=447ce2719810f7654bb3e5a3d20fb459bb191547", "patch": "@@ -26,11 +26,11 @@ error[E0063]: missing field `bat` in initializer of `Foo`\n LL |     let _ = Foo { bar: .5, baz: 42 };\n    |             ^^^ missing `bat`\n \n-error[E0063]: missing fields `bar`, `baz` in initializer of `Foo`\n+error[E0063]: missing fields `bar` and `baz` in initializer of `Foo`\n   --> $DIR/issue-52496.rs:8:13\n    |\n LL |     let _ = Foo { bar.into(), bat: -1, . };\n-   |             ^^^ missing `bar`, `baz`\n+   |             ^^^ missing `bar` and `baz`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "645abd9c7192dc740f3ffd8a6eebf72a8bf7e347", "filename": "src/test/ui/parser/struct-field-numeric-shorthand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Fparser%2Fstruct-field-numeric-shorthand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Fparser%2Fstruct-field-numeric-shorthand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstruct-field-numeric-shorthand.rs?ref=447ce2719810f7654bb3e5a3d20fb459bb191547", "patch": "@@ -5,5 +5,5 @@ fn main() {\n     //~^ ERROR expected identifier, found `0`\n     //~| ERROR expected identifier, found `1`\n     //~| ERROR expected identifier, found `2`\n-    //~| ERROR missing fields `0`, `1`, `2` in initializer of `Rgb`\n+    //~| ERROR missing fields `0`, `1` and `2` in initializer of `Rgb`\n }"}, {"sha": "bfb8a931b6406e3a7b3b9e3d23f77cef52367eb8", "filename": "src/test/ui/parser/struct-field-numeric-shorthand.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Fparser%2Fstruct-field-numeric-shorthand.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/447ce2719810f7654bb3e5a3d20fb459bb191547/src%2Ftest%2Fui%2Fparser%2Fstruct-field-numeric-shorthand.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstruct-field-numeric-shorthand.stderr?ref=447ce2719810f7654bb3e5a3d20fb459bb191547", "patch": "@@ -22,11 +22,11 @@ LL |     let _ = Rgb { 0, 1, 2 };\n    |             |\n    |             while parsing this struct\n \n-error[E0063]: missing fields `0`, `1`, `2` in initializer of `Rgb`\n+error[E0063]: missing fields `0`, `1` and `2` in initializer of `Rgb`\n   --> $DIR/struct-field-numeric-shorthand.rs:4:13\n    |\n LL |     let _ = Rgb { 0, 1, 2 };\n-   |             ^^^ missing `0`, `1`, `2`\n+   |             ^^^ missing `0`, `1` and `2`\n \n error: aborting due to 4 previous errors\n "}]}