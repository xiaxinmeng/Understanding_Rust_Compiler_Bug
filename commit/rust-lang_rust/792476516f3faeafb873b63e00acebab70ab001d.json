{"sha": "792476516f3faeafb873b63e00acebab70ab001d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5MjQ3NjUxNmYzZmFlYWZiODczYjYzZTAwYWNlYmFiNzBhYjAwMWQ=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-11-09T01:15:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-09T01:15:03Z"}, "message": "Rollup merge of #55742 - F001:fix-55718, r=petrochenkov\n\nAvoid panic when matching function call\n\nFix #55718\n\nThis bug is introduced by #53751. The original code checked `Def::AssociatedConst(..) | Def::Method(..)` before `pat_ty.no_bound_vars().expect(\"expected fn type\")`. But somehow I exchanged the sequence carelessly. Sorry about that.\n\nr? @petrochenkov", "tree": {"sha": "9652ff6cc00f04357f80967321a7d2141b851a97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9652ff6cc00f04357f80967321a7d2141b851a97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/792476516f3faeafb873b63e00acebab70ab001d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb5N+XCRBK7hj4Ov3rIwAAdHIIACuR3tHY8oWxR2A7qNI+Bjx9\nIynR2cQBEtiMGZR+oH0wyd34iMctuwUyXHO/CMUlxP/7PYOVF3C2jBNYC9/a43WC\n39OMJWXTEv5yXWwBuhXoiti8N+G/i0WMU/5uIBxXmWJSWlvXsPDaqEabyU4fsNCN\nP/JkcAQuP5Tt4soECSkyRMv8pBimamCJHaW6MTuTvVdonAmMSI+0a/L8FVoh7zQi\n3uFJhvgd/QQX0Io90Xp9i3i+woZWPIXYV/FZdsRRdybN7GjRfGY1eBFj1B4mF8eO\nRIetU0Kd9KNdXgGr0DiZkzoq/9JNT9TNu/sWhCfFEfzs2vhAZgMjxbvqUGJx6Y0=\n=W7Ds\n-----END PGP SIGNATURE-----\n", "payload": "tree 9652ff6cc00f04357f80967321a7d2141b851a97\nparent 96ee13a56d856f6d0d58da796389c0b49f438bc8\nparent f63c2f80e51a1942a28c660adad0d3bad74574e2\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1541726103 -0700\ncommitter GitHub <noreply@github.com> 1541726103 -0700\n\nRollup merge of #55742 - F001:fix-55718, r=petrochenkov\n\nAvoid panic when matching function call\n\nFix #55718\n\nThis bug is introduced by #53751. The original code checked `Def::AssociatedConst(..) | Def::Method(..)` before `pat_ty.no_bound_vars().expect(\"expected fn type\")`. But somehow I exchanged the sequence carelessly. Sorry about that.\n\nr? @petrochenkov\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/792476516f3faeafb873b63e00acebab70ab001d", "html_url": "https://github.com/rust-lang/rust/commit/792476516f3faeafb873b63e00acebab70ab001d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/792476516f3faeafb873b63e00acebab70ab001d/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96ee13a56d856f6d0d58da796389c0b49f438bc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/96ee13a56d856f6d0d58da796389c0b49f438bc8", "html_url": "https://github.com/rust-lang/rust/commit/96ee13a56d856f6d0d58da796389c0b49f438bc8"}, {"sha": "f63c2f80e51a1942a28c660adad0d3bad74574e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f63c2f80e51a1942a28c660adad0d3bad74574e2", "html_url": "https://github.com/rust-lang/rust/commit/f63c2f80e51a1942a28c660adad0d3bad74574e2"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "4a300fe09215cbfc01e2dbd068b409dbfb2e400e", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/792476516f3faeafb873b63e00acebab70ab001d/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/792476516f3faeafb873b63e00acebab70ab001d/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=792476516f3faeafb873b63e00acebab70ab001d", "patch": "@@ -814,11 +814,6 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n             report_unexpected_def(def);\n             return self.tcx.types.err;\n         }\n-        // Replace constructor type with constructed type for tuple struct patterns.\n-        let pat_ty = pat_ty.fn_sig(tcx).output();\n-        let pat_ty = pat_ty.no_bound_vars().expect(\"expected fn type\");\n-\n-        self.demand_eqtype(pat.span, expected, pat_ty);\n \n         let variant = match def {\n             Def::Err => {\n@@ -836,6 +831,13 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n             }\n             _ => bug!(\"unexpected pattern definition: {:?}\", def)\n         };\n+\n+        // Replace constructor type with constructed type for tuple struct patterns.\n+        let pat_ty = pat_ty.fn_sig(tcx).output();\n+        let pat_ty = pat_ty.no_bound_vars().expect(\"expected fn type\");\n+\n+        self.demand_eqtype(pat.span, expected, pat_ty);\n+\n         // Type check subpatterns.\n         if subpats.len() == variant.fields.len() ||\n                 subpats.len() < variant.fields.len() && ddpos.is_some() {"}, {"sha": "d9c50e75c494486abc32cd65a8d8b149b673977a", "filename": "src/test/ui/match/match-fn-call.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/792476516f3faeafb873b63e00acebab70ab001d/src%2Ftest%2Fui%2Fmatch%2Fmatch-fn-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/792476516f3faeafb873b63e00acebab70ab001d/src%2Ftest%2Fui%2Fmatch%2Fmatch-fn-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-fn-call.rs?ref=792476516f3faeafb873b63e00acebab70ab001d", "patch": "@@ -0,0 +1,12 @@\n+use std::path::Path;\n+\n+fn main() {\n+    let path = Path::new(\"foo\");\n+    match path {\n+        Path::new(\"foo\") => println!(\"foo\"),\n+        //~^ ERROR expected tuple struct/variant\n+        Path::new(\"bar\") => println!(\"bar\"),\n+        //~^ ERROR expected tuple struct/variant\n+        _ => (),\n+    }\n+}"}, {"sha": "4e24621706bdb91864ed914339081cd3d6d51b6f", "filename": "src/test/ui/match/match-fn-call.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/792476516f3faeafb873b63e00acebab70ab001d/src%2Ftest%2Fui%2Fmatch%2Fmatch-fn-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/792476516f3faeafb873b63e00acebab70ab001d/src%2Ftest%2Fui%2Fmatch%2Fmatch-fn-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-fn-call.stderr?ref=792476516f3faeafb873b63e00acebab70ab001d", "patch": "@@ -0,0 +1,15 @@\n+error[E0164]: expected tuple struct/variant, found method `<Path>::new`\n+  --> $DIR/match-fn-call.rs:6:9\n+   |\n+LL |         Path::new(\"foo\") => println!(\"foo\"),\n+   |         ^^^^^^^^^^^^^^^^ not a tuple variant or struct\n+\n+error[E0164]: expected tuple struct/variant, found method `<Path>::new`\n+  --> $DIR/match-fn-call.rs:8:9\n+   |\n+LL |         Path::new(\"bar\") => println!(\"bar\"),\n+   |         ^^^^^^^^^^^^^^^^ not a tuple variant or struct\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0164`."}]}