{"sha": "831009f035683ac48ad7a92631e3fd7cd9d2f08b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMTAwOWYwMzU2ODNhYzQ4YWQ3YTkyNjMxZTNmZDdjZDlkMmYwOGI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-02-24T18:14:36Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-03-05T22:45:27Z"}, "message": "Add resource-suffix option for rustdoc", "tree": {"sha": "e4f176d02ed7cc4c2c4a3de6a177164fb6407b8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4f176d02ed7cc4c2c4a3de6a177164fb6407b8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/831009f035683ac48ad7a92631e3fd7cd9d2f08b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/831009f035683ac48ad7a92631e3fd7cd9d2f08b", "html_url": "https://github.com/rust-lang/rust/commit/831009f035683ac48ad7a92631e3fd7cd9d2f08b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/831009f035683ac48ad7a92631e3fd7cd9d2f08b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eeb5a665e313c5b281820099e04d4c6c8188b46", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eeb5a665e313c5b281820099e04d4c6c8188b46", "html_url": "https://github.com/rust-lang/rust/commit/3eeb5a665e313c5b281820099e04d4c6c8188b46"}], "stats": {"total": 91, "additions": 64, "deletions": 27}, "files": [{"sha": "0151a8c3ab715df645f20d7194b9e478ebb02952", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/831009f035683ac48ad7a92631e3fd7cd9d2f08b/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/831009f035683ac48ad7a92631e3fd7cd9d2f08b/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=831009f035683ac48ad7a92631e3fd7cd9d2f08b", "patch": "@@ -28,6 +28,7 @@ pub struct Page<'a> {\n     pub root_path: &'a str,\n     pub description: &'a str,\n     pub keywords: &'a str,\n+    pub resource_suffix: &'a str,\n }\n \n pub fn render<T: fmt::Display, S: fmt::Display>(\n@@ -47,12 +48,13 @@ r##\"<!DOCTYPE html>\n \n     <title>{title}</title>\n \n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"{root_path}normalize.css\">\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"{root_path}rustdoc.css\" id=\"mainThemeStyle\">\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"{root_path}normalize{suffix}.css\">\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"{root_path}rustdoc{suffix}.css\"\n+          id=\"mainThemeStyle\">\n     {themes}\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"{root_path}dark.css\">\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"{root_path}main.css\" id=\"themeStyle\">\n-    <script src=\"{root_path}storage.js\"></script>\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"{root_path}dark{suffix}.css\">\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"{root_path}main{suffix}.css\" id=\"themeStyle\">\n+    <script src=\"{root_path}storage{suffix}.js\"></script>\n     {css_extension}\n \n     {favicon}\n@@ -76,11 +78,11 @@ r##\"<!DOCTYPE html>\n \n     <div class=\"theme-picker\">\n         <button id=\"theme-picker\" aria-label=\"Pick another theme!\">\n-            <img src=\"{root_path}brush.svg\" width=\"18\" alt=\"Pick another theme!\">\n+            <img src=\"{root_path}brush{suffix}.svg\" width=\"18\" alt=\"Pick another theme!\">\n         </button>\n         <div id=\"theme-choices\"></div>\n     </div>\n-    <script src=\"{root_path}theme.js\"></script>\n+    <script src=\"{root_path}theme{suffix}.js\"></script>\n     <nav class=\"sub\">\n         <form class=\"search-form js-only\">\n             <div class=\"search-container\">\n@@ -153,13 +155,14 @@ r##\"<!DOCTYPE html>\n         window.rootPath = \"{root_path}\";\n         window.currentCrate = \"{krate}\";\n     </script>\n-    <script src=\"{root_path}main.js\"></script>\n+    <script src=\"{root_path}main{suffix}.js\"></script>\n     <script defer src=\"{root_path}search-index.js\"></script>\n </body>\n </html>\"##,\n     css_extension = if css_file_extension {\n-        format!(\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{root_path}theme.css\\\">\",\n-                root_path = page.root_path)\n+        format!(\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{root_path}theme{suffix}.css\\\">\",\n+                root_path = page.root_path,\n+                suffix=page.resource_suffix)\n     } else {\n         \"\".to_owned()\n     },\n@@ -191,8 +194,10 @@ r##\"<!DOCTYPE html>\n                    .filter_map(|t| t.file_stem())\n                    .filter_map(|t| t.to_str())\n                    .map(|t| format!(r#\"<link rel=\"stylesheet\" type=\"text/css\" href=\"{}{}\">\"#,\n-                                    page.root_path, t))\n+                                    page.root_path,\n+                                    t.replace(\".css\", &format!(\"{}.css\", page.resource_suffix))))\n                    .collect::<String>(),\n+    suffix=page.resource_suffix,\n     )\n }\n "}, {"sha": "6945a6f3724d582d951d2d94bbc0f5e84a718edc", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 36, "deletions": 15, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/831009f035683ac48ad7a92631e3fd7cd9d2f08b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/831009f035683ac48ad7a92631e3fd7cd9d2f08b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=831009f035683ac48ad7a92631e3fd7cd9d2f08b", "patch": "@@ -32,6 +32,7 @@\n //! for creating the corresponding search index and source file renderings.\n //! These threads are not parallelized (they haven't been a bottleneck yet), and\n //! both occur before the crate is rendered.\n+\n pub use self::ExternalLocation::*;\n \n use std::borrow::Cow;\n@@ -128,6 +129,9 @@ pub struct SharedContext {\n     pub sort_modules_alphabetically: bool,\n     /// Additional themes to be added to the generated docs.\n     pub themes: Vec<PathBuf>,\n+    /// Suffix to be added on resource files (if suffix is \"-v2\" then \"main.css\" becomes\n+    /// \"main-v2.css\").\n+    pub resource_suffix: String,\n }\n \n impl SharedContext {\n@@ -492,6 +496,7 @@ pub fn run(mut krate: clean::Crate,\n            external_html: &ExternalHtml,\n            playground_url: Option<String>,\n            dst: PathBuf,\n+           resource_suffix: String,\n            passes: FxHashSet<String>,\n            css_file_extension: Option<PathBuf>,\n            renderinfo: RenderInfo,\n@@ -520,6 +525,7 @@ pub fn run(mut krate: clean::Crate,\n         created_dirs: RefCell::new(FxHashSet()),\n         sort_modules_alphabetically,\n         themes,\n+        resource_suffix,\n     };\n \n     // If user passed in `--playground-url` arg, we fill in crate name here\n@@ -734,7 +740,7 @@ fn write_shared(cx: &Context,\n     // Add all the static files. These may already exist, but we just\n     // overwrite them anyway to make sure that they're fresh and up-to-date.\n \n-    write(cx.dst.join(\"rustdoc.css\"),\n+    write(cx.dst.join(&format!(\"rustdoc{}.css\", cx.shared.resource_suffix)),\n           include_bytes!(\"static/rustdoc.css\"))?;\n \n     // To avoid \"main.css\" to be overwritten, we'll first run over the received themes and only\n@@ -746,24 +752,28 @@ fn write_shared(cx: &Context,\n \n         let mut f = try_err!(File::open(&entry), &entry);\n         try_err!(f.read_to_end(&mut content), &entry);\n-        write(cx.dst.join(try_none!(entry.file_name(), &entry)), content.as_slice())?;\n-        themes.insert(try_none!(try_none!(entry.file_stem(), &entry).to_str(), &entry).to_owned());\n+        let theme = try_none!(try_none!(entry.file_stem(), &entry).to_str(), &entry);\n+        let extension = try_none!(try_none!(entry.extension(), &entry).to_str(), &entry);\n+        write(cx.dst.join(format!(\"{}{}.{}\", theme, cx.shared.resource_suffix, extension)),\n+              content.as_slice())?;\n+        themes.insert(theme.to_owned());\n     }\n \n-    write(cx.dst.join(\"brush.svg\"),\n+    write(cx.dst.join(&format!(\"brush{}.svg\", cx.shared.resource_suffix)),\n           include_bytes!(\"static/brush.svg\"))?;\n-    write(cx.dst.join(\"main.css\"),\n+    write(cx.dst.join(&format!(\"main{}.css\", cx.shared.resource_suffix)),\n           include_bytes!(\"static/themes/main.css\"))?;\n     themes.insert(\"main\".to_owned());\n-    write(cx.dst.join(\"dark.css\"),\n+    write(cx.dst.join(&format!(\"dark{}.css\", cx.shared.resource_suffix)),\n           include_bytes!(\"static/themes/dark.css\"))?;\n     themes.insert(\"dark\".to_owned());\n \n     let mut themes: Vec<&String> = themes.iter().collect();\n     themes.sort();\n     // To avoid theme switch latencies as much as possible, we put everything theme related\n     // at the beginning of the html files into another js file.\n-    write(cx.dst.join(\"theme.js\"), format!(\n+    write(cx.dst.join(&format!(\"theme{}.js\", cx.shared.resource_suffix)),\n+          format!(\n r#\"var themes = document.getElementById(\"theme-choices\");\n var themePicker = document.getElementById(\"theme-picker\");\n themePicker.onclick = function() {{\n@@ -785,19 +795,28 @@ themePicker.onclick = function() {{\n     }};\n     themes.appendChild(but);\n }});\n-\"#, themes.iter()\n-          .map(|s| format!(\"\\\"{}\\\"\", s))\n-          .collect::<Vec<String>>()\n-          .join(\",\")).as_bytes())?;\n+\"#,\n+                 themes.iter()\n+                       .map(|s| format!(\"\\\"{}\\\"\", s))\n+                       .collect::<Vec<String>>()\n+                       .join(\",\")).as_bytes(),\n+    )?;\n+\n+    write(cx.dst.join(&format!(\"main{}.js\", cx.shared.resource_suffix)),\n+                      include_bytes!(\"static/main.js\"))?;\n \n-    write(cx.dst.join(\"main.js\"), include_bytes!(\"static/main.js\"))?;\n-    write(cx.dst.join(\"storage.js\"), include_bytes!(\"static/storage.js\"))?;\n+    {\n+        let mut data = format!(\"var resourcesSuffix = \\\"{}\\\";\\n\",\n+                               cx.shared.resource_suffix).into_bytes();\n+        data.extend_from_slice(include_bytes!(\"static/storage.js\"));\n+        write(cx.dst.join(&format!(\"storage{}.js\", cx.shared.resource_suffix)), &data)?;\n+    }\n \n     if let Some(ref css) = cx.shared.css_file_extension {\n-        let out = cx.dst.join(\"theme.css\");\n+        let out = cx.dst.join(&format!(\"theme{}.css\", cx.shared.resource_suffix));\n         try_err!(fs::copy(css, out), css);\n     }\n-    write(cx.dst.join(\"normalize.css\"),\n+    write(cx.dst.join(&format!(\"normalize{}.css\", cx.shared.resource_suffix)),\n           include_bytes!(\"static/normalize.css\"))?;\n     write(cx.dst.join(\"FiraSans-Regular.woff\"),\n           include_bytes!(\"static/FiraSans-Regular.woff\"))?;\n@@ -1084,6 +1103,7 @@ impl<'a> SourceCollector<'a> {\n             root_path: &root_path,\n             description: &desc,\n             keywords: BASIC_KEYWORDS,\n+            resource_suffix: &self.scx.resource_suffix,\n         };\n         layout::render(&mut w, &self.scx.layout,\n                        &page, &(\"\"), &Source(contents),\n@@ -1446,6 +1466,7 @@ impl Context {\n             title: &title,\n             description: &desc,\n             keywords: &keywords,\n+            resource_suffix: &self.shared.resource_suffix,\n         };\n \n         reset_ids(true);"}, {"sha": "7e9cfbd6763471a88291f7d6e472ecfabf7ddb5e", "filename": "src/librustdoc/html/static/storage.js", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/831009f035683ac48ad7a92631e3fd7cd9d2f08b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/831009f035683ac48ad7a92631e3fd7cd9d2f08b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js?ref=831009f035683ac48ad7a92631e3fd7cd9d2f08b", "patch": "@@ -41,7 +41,9 @@ function getCurrentValue(name) {\n }\n \n function switchTheme(styleElem, mainStyleElem, newTheme) {\n-    var newHref = mainStyleElem.href.replace(\"rustdoc.css\", newTheme + \".css\");\n+    var fullBasicCss = \"rustdoc\" + resourcesSuffix + \".css\";\n+    var fullNewTheme = newTheme + resourcesSuffix + \".css\";\n+    var newHref = mainStyleElem.href.replace(fullBasicCss, fullNewTheme);\n     var found = false;\n \n     if (savedHref.length === 0) {"}, {"sha": "c6b6dab2a41a073aad8a946b06fdddff9eac9081", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/831009f035683ac48ad7a92631e3fd7cd9d2f08b/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/831009f035683ac48ad7a92631e3fd7cd9d2f08b/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=831009f035683ac48ad7a92631e3fd7cd9d2f08b", "patch": "@@ -261,6 +261,13 @@ pub fn opts() -> Vec<RustcOptGroup> {\n                        \"check if given theme is valid\",\n                        \"FILES\")\n         }),\n+        unstable(\"resource-suffix\", |o| {\n+            o.optopt(\"\",\n+                     \"resource-suffix\",\n+                     \"suffix to add to CSS and JavaScript files, e.g. \\\"main.css\\\" will become \\\n+                      \\\"main-suffix.css\\\"\",\n+                     \"PATH\")\n+        }),\n     ]\n }\n \n@@ -417,6 +424,7 @@ pub fn main_args(args: &[String]) -> isize {\n     let display_warnings = matches.opt_present(\"display-warnings\");\n     let linker = matches.opt_str(\"linker\").map(PathBuf::from);\n     let sort_modules_alphabetically = !matches.opt_present(\"sort-modules-by-appearance\");\n+    let resource_suffix = matches.opt_str(\"resource-suffix\");\n \n     match (should_test, markdown_input) {\n         (true, true) => {\n@@ -442,6 +450,7 @@ pub fn main_args(args: &[String]) -> isize {\n             Some(\"html\") | None => {\n                 html::render::run(krate, &external_html, playground_url,\n                                   output.unwrap_or(PathBuf::from(\"doc\")),\n+                                  resource_suffix.unwrap_or(String::new()),\n                                   passes.into_iter().collect(),\n                                   css_file_extension,\n                                   renderinfo,"}]}