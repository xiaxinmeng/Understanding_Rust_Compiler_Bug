{"sha": "41a4175c84e4252a367083e5c625ccab9cc3caf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxYTQxNzVjODRlNDI1MmEzNjcwODNlNWM2MjVjY2FiOWNjM2NhZjk=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-04-08T16:22:28Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-04-08T16:22:28Z"}, "message": "Fix for mutable_borrow_reservation_conflict future compatibility lint", "tree": {"sha": "b305a5c41935d1c183cab54b8422b8d29ea6cdd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b305a5c41935d1c183cab54b8422b8d29ea6cdd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41a4175c84e4252a367083e5c625ccab9cc3caf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41a4175c84e4252a367083e5c625ccab9cc3caf9", "html_url": "https://github.com/rust-lang/rust/commit/41a4175c84e4252a367083e5c625ccab9cc3caf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41a4175c84e4252a367083e5c625ccab9cc3caf9/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42349e963db2bd07f5e73cb5a840655bba495f05", "url": "https://api.github.com/repos/rust-lang/rust/commits/42349e963db2bd07f5e73cb5a840655bba495f05", "html_url": "https://github.com/rust-lang/rust/commit/42349e963db2bd07f5e73cb5a840655bba495f05"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "1e1549469e11ab0f090f338309838c92df3af3b6", "filename": "src/abi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41a4175c84e4252a367083e5c625ccab9cc3caf9/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41a4175c84e4252a367083e5c625ccab9cc3caf9/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=41a4175c84e4252a367083e5c625ccab9cc3caf9", "patch": "@@ -692,8 +692,8 @@ pub fn codegen_call_inner<'a, 'tcx: 'a>(\n         PassMode::NoPass => {}\n         PassMode::ByVal(_) => {\n             if let Some(ret_place) = ret_place {\n-                let results = fx.bcx.inst_results(call_inst);\n-                ret_place.write_cvalue(fx, CValue::ByVal(results[0], ret_layout));\n+                let ret_val = fx.bcx.inst_results(call_inst)[0];\n+                ret_place.write_cvalue(fx, CValue::ByVal(ret_val, ret_layout));\n             }\n         }\n         PassMode::ByRef => {}"}]}