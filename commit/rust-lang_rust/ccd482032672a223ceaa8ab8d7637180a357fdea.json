{"sha": "ccd482032672a223ceaa8ab8d7637180a357fdea", "node_id": "C_kwDOAAsO6NoAKGNjZDQ4MjAzMjY3MmEyMjNjZWFhOGFiOGQ3NjM3MTgwYTM1N2ZkZWE", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-04-03T04:32:38Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-04-05T06:01:03Z"}, "message": "errors: support fluent + parallel compiler\n\nConditional on the parallel compiler being enabled, use a different\n`IntlLangMemoizer` which supports being sent between threads in\n`FluentBundle`.\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "a3ca7f0a8006c1c3cb086f7b51ac16125b52a6ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3ca7f0a8006c1c3cb086f7b51ac16125b52a6ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccd482032672a223ceaa8ab8d7637180a357fdea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccd482032672a223ceaa8ab8d7637180a357fdea", "html_url": "https://github.com/rust-lang/rust/commit/ccd482032672a223ceaa8ab8d7637180a357fdea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccd482032672a223ceaa8ab8d7637180a357fdea/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da56d92037421f26badff41fe6de841ca4210e6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/da56d92037421f26badff41fe6de841ca4210e6d", "html_url": "https://github.com/rust-lang/rust/commit/da56d92037421f26badff41fe6de841ca4210e6d"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "d8cb1133c73a367e1d8998d9690129da75eb8ae9", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ccd482032672a223ceaa8ab8d7637180a357fdea/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ccd482032672a223ceaa8ab8d7637180a357fdea/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ccd482032672a223ceaa8ab8d7637180a357fdea", "patch": "@@ -3711,6 +3711,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"fluent-bundle\",\n  \"fluent-syntax\",\n+ \"intl-memoizer\",\n  \"rustc_data_structures\",\n  \"rustc_macros\",\n  \"rustc_serialize\","}, {"sha": "fc84c7c8665b4c17f9ccda3fa13a2be6e01958a7", "filename": "compiler/rustc_error_messages/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ccd482032672a223ceaa8ab8d7637180a357fdea/compiler%2Frustc_error_messages%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ccd482032672a223ceaa8ab8d7637180a357fdea/compiler%2Frustc_error_messages%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2FCargo.toml?ref=ccd482032672a223ceaa8ab8d7637180a357fdea", "patch": "@@ -9,6 +9,7 @@ doctest = false\n [dependencies]\n fluent-bundle = \"0.15.2\"\n fluent-syntax = \"0.11\"\n+intl-memoizer = \"0.5.1\"\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_span = { path = \"../rustc_span\" }"}, {"sha": "88f3b547605a272f58c7253409699980c16d1cf0", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ccd482032672a223ceaa8ab8d7637180a357fdea/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccd482032672a223ceaa8ab8d7637180a357fdea/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=ccd482032672a223ceaa8ab8d7637180a357fdea", "patch": "@@ -14,12 +14,27 @@ use std::io;\n use std::path::Path;\n use tracing::{instrument, trace};\n \n+#[cfg(parallel_compiler)]\n+use intl_memoizer::concurrent::IntlLangMemoizer;\n+#[cfg(not(parallel_compiler))]\n+use intl_memoizer::IntlLangMemoizer;\n+\n pub use fluent_bundle::{FluentArgs, FluentError, FluentValue};\n pub use unic_langid::{langid, LanguageIdentifier};\n \n static FALLBACK_FLUENT_RESOURCE: &'static str = include_str!(\"../locales/en-US/diagnostics.ftl\");\n \n-pub type FluentBundle = fluent_bundle::FluentBundle<FluentResource>;\n+pub type FluentBundle = fluent_bundle::bundle::FluentBundle<FluentResource, IntlLangMemoizer>;\n+\n+#[cfg(parallel_compiler)]\n+fn new_bundle(locales: Vec<LanguageIdentifier>) -> FluentBundle {\n+    FluentBundle::new_concurrent(locales)\n+}\n+\n+#[cfg(not(parallel_compiler))]\n+fn new_bundle(locales: Vec<LanguageIdentifier>) -> FluentBundle {\n+    FluentBundle::new(locales)\n+}\n \n #[derive(Debug)]\n pub enum TranslationBundleError {\n@@ -114,7 +129,7 @@ pub fn fluent_bundle(\n     // provided locale.\n     let locale = requested_locale.clone().unwrap_or(fallback_locale);\n     trace!(?locale);\n-    let mut bundle = FluentBundle::new(vec![locale]);\n+    let mut bundle = new_bundle(vec![locale]);\n \n     // Fluent diagnostics can insert directionality isolation markers around interpolated variables\n     // indicating that there may be a shift from right-to-left to left-to-right text (or\n@@ -176,7 +191,7 @@ pub fn fallback_fluent_bundle(\n     let fallback_resource = FluentResource::try_new(FALLBACK_FLUENT_RESOURCE.to_string())\n         .map_err(TranslationBundleError::from)?;\n     trace!(?fallback_resource);\n-    let mut fallback_bundle = FluentBundle::new(vec![langid!(\"en-US\")]);\n+    let mut fallback_bundle = new_bundle(vec![langid!(\"en-US\")]);\n     // See comment in `fluent_bundle`.\n     fallback_bundle.set_use_isolating(with_directionality_markers);\n     fallback_bundle.add_resource(fallback_resource).map_err(TranslationBundleError::from)?;"}]}