{"sha": "cb12460467aa98cb82587308341939679ff2a7d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMTI0NjA0NjdhYTk4Y2I4MjU4NzMwODM0MTkzOTY3OWZmMmE3ZDE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2019-05-30T10:49:54Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2019-06-01T07:14:59Z"}, "message": "Implement Clone::clone_from for Option.", "tree": {"sha": "9393faf6424c931a4c56bc92174cb68e350ff540", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9393faf6424c931a4c56bc92174cb68e350ff540"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb12460467aa98cb82587308341939679ff2a7d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb12460467aa98cb82587308341939679ff2a7d1", "html_url": "https://github.com/rust-lang/rust/commit/cb12460467aa98cb82587308341939679ff2a7d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb12460467aa98cb82587308341939679ff2a7d1/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c28084ac16af4ab594b6860958df140e7c876a13", "url": "https://api.github.com/repos/rust-lang/rust/commits/c28084ac16af4ab594b6860958df140e7c876a13", "html_url": "https://github.com/rust-lang/rust/commit/c28084ac16af4ab594b6860958df140e7c876a13"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "c75ecb059e8137c2c2552c85fccb04968bec4ad3", "filename": "src/libcore/option.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/cb12460467aa98cb82587308341939679ff2a7d1/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb12460467aa98cb82587308341939679ff2a7d1/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=cb12460467aa98cb82587308341939679ff2a7d1", "patch": "@@ -145,7 +145,7 @@ use crate::pin::Pin;\n // which basically means it must be `Option`.\n \n /// The `Option` type. See [the module level documentation](index.html) for more.\n-#[derive(Clone, Copy, PartialEq, PartialOrd, Eq, Ord, Debug, Hash)]\n+#[derive(Copy, PartialEq, PartialOrd, Eq, Ord, Debug, Hash)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub enum Option<T> {\n     /// No value\n@@ -1040,6 +1040,25 @@ fn expect_failed(msg: &str) -> ! {\n // Trait implementations\n /////////////////////////////////////////////////////////////////////////////\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<T: Clone> Clone for Option<T> {\n+    #[inline]\n+    fn clone(&self) -> Self {\n+        match self {\n+            Some(x) => Some(x.clone()),\n+            None => None,\n+        }\n+    }\n+\n+    #[inline]\n+    fn clone_from(&mut self, source: &Self) {\n+        match (self, source) {\n+            (Some(to), Some(from)) => to.clone_from(from),\n+            (to, from) => *to = from.clone(),\n+        }\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> Default for Option<T> {\n     /// Returns [`None`][Option::None]."}]}