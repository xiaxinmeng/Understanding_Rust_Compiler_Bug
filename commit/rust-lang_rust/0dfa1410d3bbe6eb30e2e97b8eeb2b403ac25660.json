{"sha": "0dfa1410d3bbe6eb30e2e97b8eeb2b403ac25660", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkZmExNDEwZDNiYmU2ZWIzMGUyZTk3YjhlZWIyYjQwM2FjMjU2NjA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-18T00:37:54Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-18T18:32:27Z"}, "message": "rt: Remove task::on_wakeup. Unused", "tree": {"sha": "bdfb48efbd41dde9d40c5a9c76c407e77aa320d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdfb48efbd41dde9d40c5a9c76c407e77aa320d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0dfa1410d3bbe6eb30e2e97b8eeb2b403ac25660", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0dfa1410d3bbe6eb30e2e97b8eeb2b403ac25660", "html_url": "https://github.com/rust-lang/rust/commit/0dfa1410d3bbe6eb30e2e97b8eeb2b403ac25660", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0dfa1410d3bbe6eb30e2e97b8eeb2b403ac25660/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63d40b8ab661ae1921bac26e0e4c72fb0ce57586", "url": "https://api.github.com/repos/rust-lang/rust/commits/63d40b8ab661ae1921bac26e0e4c72fb0ce57586", "html_url": "https://github.com/rust-lang/rust/commit/63d40b8ab661ae1921bac26e0e4c72fb0ce57586"}], "stats": {"total": 19, "additions": 0, "deletions": 19}, "files": [{"sha": "26ceb3bccb3a56a5773dfd3d854fd80deee0417c", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0dfa1410d3bbe6eb30e2e97b8eeb2b403ac25660/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/0dfa1410d3bbe6eb30e2e97b8eeb2b403ac25660/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=0dfa1410d3bbe6eb30e2e97b8eeb2b403ac25660", "patch": "@@ -343,7 +343,6 @@ rust_scheduler::create_task(rust_task *spawner, const char *name) {\n                         task, spawner ? spawner->name : \"null\", name);\n     if(spawner) {\n         task->pin(spawner->pinned_on);\n-        task->on_wakeup(spawner->_on_wakeup);\n     }\n \n     {"}, {"sha": "a152ecb8d3b1f595d1ca3f1be0073054f03ee9cf", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0dfa1410d3bbe6eb30e2e97b8eeb2b403ac25660/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/0dfa1410d3bbe6eb30e2e97b8eeb2b403ac25660/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=0dfa1410d3bbe6eb30e2e97b8eeb2b403ac25660", "patch": "@@ -115,7 +115,6 @@ rust_task::rust_task(rust_scheduler *sched, rust_task_list *state,\n     running_on(-1),\n     pinned_on(-1),\n     local_region(&sched->srv->local_region),\n-    _on_wakeup(NULL),\n     failed(false),\n     killed(false),\n     propagate_failure(true),\n@@ -456,10 +455,6 @@ rust_task::wakeup(rust_cond *from) {\n     cond = NULL;\n     cond_name = \"none\";\n \n-    if(_on_wakeup) {\n-        _on_wakeup->on_wakeup();\n-    }\n-\n     sched->lock.signal();\n }\n \n@@ -523,10 +518,6 @@ void rust_task::unpin() {\n     pinned_on = -1;\n }\n \n-void rust_task::on_wakeup(rust_task::wakeup_callback *callback) {\n-    _on_wakeup = callback;\n-}\n-\n rust_port_id rust_task::register_port(rust_port *port) {\n     I(sched, !lock.lock_held_by_current_thread());\n     scoped_lock with(lock);"}, {"sha": "6aa94c6b6d485cbf377fbefcc2b83c2f04352ed2", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0dfa1410d3bbe6eb30e2e97b8eeb2b403ac25660/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/0dfa1410d3bbe6eb30e2e97b8eeb2b403ac25660/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=0dfa1410d3bbe6eb30e2e97b8eeb2b403ac25660", "patch": "@@ -106,13 +106,6 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n \n     memory_region local_region;\n \n-    class wakeup_callback {\n-    public:\n-        virtual void on_wakeup() = 0;\n-    };\n-\n-    wakeup_callback *_on_wakeup;\n-\n     // Indicates that the task ended in failure\n     bool failed;\n     // Indicates that the task was killed and needs to unwind\n@@ -189,8 +182,6 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n     void pin(int id);\n     void unpin();\n \n-    void on_wakeup(wakeup_callback *callback);\n-\n     rust_port_id register_port(rust_port *port);\n     void release_port(rust_port_id id);\n     rust_port *get_port_by_id(rust_port_id id);"}]}