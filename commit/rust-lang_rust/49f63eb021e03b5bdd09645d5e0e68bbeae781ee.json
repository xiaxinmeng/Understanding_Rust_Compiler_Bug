{"sha": "49f63eb021e03b5bdd09645d5e0e68bbeae781ee", "node_id": "C_kwDOAAsO6NoAKDQ5ZjYzZWIwMjFlMDNiNWJkZDA5NjQ1ZDVlMGU2OGJiZWFlNzgxZWU", "commit": {"author": {"name": "Kai Luo", "email": "lkail@cn.ibm.com", "date": "2023-03-28T09:53:34Z"}, "committer": {"name": "Kai Luo", "email": "lkail@cn.ibm.com", "date": "2023-03-28T09:54:12Z"}, "message": "Check data segment range", "tree": {"sha": "5d0d45b809ac5e4d8246ba2bd244c5d7648b817b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d0d45b809ac5e4d8246ba2bd244c5d7648b817b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49f63eb021e03b5bdd09645d5e0e68bbeae781ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49f63eb021e03b5bdd09645d5e0e68bbeae781ee", "html_url": "https://github.com/rust-lang/rust/commit/49f63eb021e03b5bdd09645d5e0e68bbeae781ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49f63eb021e03b5bdd09645d5e0e68bbeae781ee/comments", "author": {"login": "bzEq", "id": 3006405, "node_id": "MDQ6VXNlcjMwMDY0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3006405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bzEq", "html_url": "https://github.com/bzEq", "followers_url": "https://api.github.com/users/bzEq/followers", "following_url": "https://api.github.com/users/bzEq/following{/other_user}", "gists_url": "https://api.github.com/users/bzEq/gists{/gist_id}", "starred_url": "https://api.github.com/users/bzEq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bzEq/subscriptions", "organizations_url": "https://api.github.com/users/bzEq/orgs", "repos_url": "https://api.github.com/users/bzEq/repos", "events_url": "https://api.github.com/users/bzEq/events{/privacy}", "received_events_url": "https://api.github.com/users/bzEq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bzEq", "id": 3006405, "node_id": "MDQ6VXNlcjMwMDY0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3006405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bzEq", "html_url": "https://github.com/bzEq", "followers_url": "https://api.github.com/users/bzEq/followers", "following_url": "https://api.github.com/users/bzEq/following{/other_user}", "gists_url": "https://api.github.com/users/bzEq/gists{/gist_id}", "starred_url": "https://api.github.com/users/bzEq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bzEq/subscriptions", "organizations_url": "https://api.github.com/users/bzEq/orgs", "repos_url": "https://api.github.com/users/bzEq/repos", "events_url": "https://api.github.com/users/bzEq/events{/privacy}", "received_events_url": "https://api.github.com/users/bzEq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82bfdc8aaa119b5d8484ae9c95f37c43509ef796", "url": "https://api.github.com/repos/rust-lang/rust/commits/82bfdc8aaa119b5d8484ae9c95f37c43509ef796", "html_url": "https://github.com/rust-lang/rust/commit/82bfdc8aaa119b5d8484ae9c95f37c43509ef796"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "c6c910a3f4d46fcde43a7a90df95746ab6fb9b91", "filename": "compiler/rustc_session/src/filesearch.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/49f63eb021e03b5bdd09645d5e0e68bbeae781ee/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49f63eb021e03b5bdd09645d5e0e68bbeae781ee/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs?ref=49f63eb021e03b5bdd09645d5e0e68bbeae781ee", "patch": "@@ -89,9 +89,8 @@ fn current_dll_path() -> Result<PathBuf, String> {\n         // * The address of the entry point of the function.\n         // * The TOC base address for the function.\n         // * The environment pointer.\n-        // Deref `current_dll_path` directly so that we can get the address of `current_dll_path`'s\n-        // entry point in text section.\n-        let addr = *(current_dll_path as *const u64);\n+        // The function descriptor is in the data section.\n+        let addr = current_dll_path as u64;\n         let mut buffer = vec![std::mem::zeroed::<libc::ld_info>(); 64];\n         loop {\n             if libc::loadquery(\n@@ -110,9 +109,9 @@ fn current_dll_path() -> Result<PathBuf, String> {\n         }\n         let mut current = buffer.as_mut_ptr() as *mut libc::ld_info;\n         loop {\n-            let text_base = (*current).ldinfo_textorg as u64;\n-            let text_end = text_base + (*current).ldinfo_textsize;\n-            if (text_base..text_end).contains(&addr) {\n+            let data_base = (*current).ldinfo_dataorg as u64;\n+            let data_end = data_base + (*current).ldinfo_datasize;\n+            if (data_base..data_end).contains(&addr) {\n                 let bytes = CStr::from_ptr(&(*current).ldinfo_filename[0]).to_bytes();\n                 let os = OsStr::from_bytes(bytes);\n                 return Ok(PathBuf::from(os));"}]}