{"sha": "3e937d02a012dbce129cc7773517a9bb24f5bf93", "node_id": "C_kwDOAAsO6NoAKDNlOTM3ZDAyYTAxMmRiY2UxMjljYzc3NzM1MTdhOWJiMjRmNWJmOTM", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev+love@gmail.com", "date": "2022-11-20T04:15:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-20T04:15:59Z"}, "message": "Rollup merge of #104467 - fuzzypixelz:fix/attempt-to-substract-with-overflow, r=compiler-errors\n\nFix substraction with overflow in `wrong_number_of_generic_args.rs`\n\nFixes #104287\n\nThis issue happens in the `suggest_moving_args_from_assoc_fn_to_trait_for_qualified_path` function, which seems to run before the error checking facilities can catch an invalid use of generic arguments. Thus we get a subtraction with overflow because the code implicitly assumes that the source program makes sense (or is this assumption not true even if the program is correct?).", "tree": {"sha": "af8a1a784bf9297588fe05959ed2757d4bdcfd9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af8a1a784bf9297588fe05959ed2757d4bdcfd9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e937d02a012dbce129cc7773517a9bb24f5bf93", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjean/CRBK7hj4Ov3rIwAAaz0IAFyKdwW0VwIcS+WL4pVzkOAz\n9Ywc0w/he77Qs0q0qSQsywWvR9ehuSDn2whSNYAlKz/+IwCHhC7QjYAoxVUvEX8b\n26oOhIiku/xjtGAW76/Nhjffz2AIzP70AA9S/UTdHRish1pQO+dc2p9eOC/U1q/C\nKV3OWi7g3a5ADwza47XqQIhP/NO+HphTQZoojqd9eMF8tgPqncMnLR8Mtlmc445n\nHmyqtT/n/1CqiTY6rhTVH0U3iGDWuXAQfb0dyypCjbjSGf5iDwtyqq3TfkGiPGhB\nQjR0vjO+cfoEMc2Luf4MiaP/xd3n2xR+ngwhNp+97j9xUa0r6hkRWshrQbngnpk=\n=G61j\n-----END PGP SIGNATURE-----\n", "payload": "tree af8a1a784bf9297588fe05959ed2757d4bdcfd9d\nparent 785237d3924d4fb7b23803c964972dce82de2161\nparent 3046af0cf652a4ccecd823d7b5cf81fbf026ab38\nauthor Yuki Okushi <huyuumi.dev+love@gmail.com> 1668917759 +0900\ncommitter GitHub <noreply@github.com> 1668917759 +0900\n\nRollup merge of #104467 - fuzzypixelz:fix/attempt-to-substract-with-overflow, r=compiler-errors\n\nFix substraction with overflow in `wrong_number_of_generic_args.rs`\n\nFixes #104287\n\nThis issue happens in the `suggest_moving_args_from_assoc_fn_to_trait_for_qualified_path` function, which seems to run before the error checking facilities can catch an invalid use of generic arguments. Thus we get a subtraction with overflow because the code implicitly assumes that the source program makes sense (or is this assumption not true even if the program is correct?).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e937d02a012dbce129cc7773517a9bb24f5bf93", "html_url": "https://github.com/rust-lang/rust/commit/3e937d02a012dbce129cc7773517a9bb24f5bf93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e937d02a012dbce129cc7773517a9bb24f5bf93/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "785237d3924d4fb7b23803c964972dce82de2161", "url": "https://api.github.com/repos/rust-lang/rust/commits/785237d3924d4fb7b23803c964972dce82de2161", "html_url": "https://github.com/rust-lang/rust/commit/785237d3924d4fb7b23803c964972dce82de2161"}, {"sha": "3046af0cf652a4ccecd823d7b5cf81fbf026ab38", "url": "https://api.github.com/repos/rust-lang/rust/commits/3046af0cf652a4ccecd823d7b5cf81fbf026ab38", "html_url": "https://github.com/rust-lang/rust/commit/3046af0cf652a4ccecd823d7b5cf81fbf026ab38"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "9c77387c238fe43016efe1b4f1b538fe7e0883d1", "filename": "compiler/rustc_hir_analysis/src/structured_errors/wrong_number_of_generic_args.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3e937d02a012dbce129cc7773517a9bb24f5bf93/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e937d02a012dbce129cc7773517a9bb24f5bf93/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs?ref=3e937d02a012dbce129cc7773517a9bb24f5bf93", "patch": "@@ -728,7 +728,8 @@ impl<'a, 'tcx> WrongNumberOfGenericArgs<'a, 'tcx> {\n         && let Some(trait_path_segment) = path.segments.get(0) {\n             let num_generic_args_supplied_to_trait = trait_path_segment.args().num_generic_params();\n \n-            if num_assoc_fn_excess_args == num_trait_generics_except_self - num_generic_args_supplied_to_trait {\n+            if num_generic_args_supplied_to_trait + num_assoc_fn_excess_args == num_trait_generics_except_self\n+            {\n                 if let Some(span) = self.gen_args.span_ext()\n                 && let Ok(snippet) = self.tcx.sess.source_map().span_to_snippet(span) {\n                     let sugg = vec!["}, {"sha": "b7601a548b9981cf5540f43b7866e3f6c9084722", "filename": "src/test/ui/suggestions/issue-104287.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3e937d02a012dbce129cc7773517a9bb24f5bf93/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104287.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e937d02a012dbce129cc7773517a9bb24f5bf93/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104287.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104287.rs?ref=3e937d02a012dbce129cc7773517a9bb24f5bf93", "patch": "@@ -0,0 +1,9 @@\n+// The purpose of this test is not to validate the output of the compiler.\n+// Instead, it ensures the suggestion is generated without performing an arithmetic overflow.\n+\n+fn main() {\n+    let x = not_found; //~ ERROR cannot find value `not_found` in this scope\n+    simd_gt::<()>(x);\n+    //~^ ERROR this associated function takes 0 generic arguments but 1 generic argument was supplied\n+    //~| ERROR cannot find function `simd_gt` in this scope\n+}"}, {"sha": "4b302dd6509192f79b5367406b2594e248ac4f2a", "filename": "src/test/ui/suggestions/issue-104287.stderr", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/3e937d02a012dbce129cc7773517a9bb24f5bf93/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104287.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e937d02a012dbce129cc7773517a9bb24f5bf93/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104287.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-104287.stderr?ref=3e937d02a012dbce129cc7773517a9bb24f5bf93", "patch": "@@ -0,0 +1,36 @@\n+error[E0425]: cannot find value `not_found` in this scope\n+  --> $DIR/issue-104287.rs:5:13\n+   |\n+LL |     let x = not_found;\n+   |             ^^^^^^^^^ not found in this scope\n+\n+error[E0107]: this associated function takes 0 generic arguments but 1 generic argument was supplied\n+  --> $DIR/issue-104287.rs:6:5\n+   |\n+LL |     simd_gt::<()>(x);\n+   |     ^^^^^^^------ help: remove these generics\n+   |     |\n+   |     expected 0 generic arguments\n+   |\n+note: associated function defined here, with 0 generic parameters\n+  --> $SRC_DIR/core/src/../../portable-simd/crates/core_simd/src/ord.rs:LL:COL\n+   |\n+LL |     fn simd_gt(self, other: Self) -> Self::Mask;\n+   |        ^^^^^^^\n+\n+error[E0425]: cannot find function `simd_gt` in this scope\n+  --> $DIR/issue-104287.rs:6:5\n+   |\n+LL |     simd_gt::<()>(x);\n+   |     ^^^^^^^ not found in this scope\n+   |\n+help: use the `.` operator to call the method `SimdPartialOrd::simd_gt` on `[type error]`\n+   |\n+LL -     simd_gt::<()>(x);\n+LL +     x.simd_gt();\n+   |\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors have detailed explanations: E0107, E0425.\n+For more information about an error, try `rustc --explain E0107`."}]}