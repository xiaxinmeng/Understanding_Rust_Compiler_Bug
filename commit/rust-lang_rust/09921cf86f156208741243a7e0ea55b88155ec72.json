{"sha": "09921cf86f156208741243a7e0ea55b88155ec72", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5OTIxY2Y4NmYxNTYyMDg3NDEyNDNhN2UwZWE1NWI4ODE1NWVjNzI=", "commit": {"author": {"name": "Rob Arnold", "email": "robarnold@cs.cmu.edu", "date": "2011-06-30T03:54:03Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-07-01T23:59:10Z"}, "message": "Move channel cloning logic into a method on rust_chan.\n\nThis will allow us to more easily clone channels from native code.", "tree": {"sha": "5a8affd6187fafed1caf020c291f4f669c6ed9d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a8affd6187fafed1caf020c291f4f669c6ed9d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09921cf86f156208741243a7e0ea55b88155ec72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09921cf86f156208741243a7e0ea55b88155ec72", "html_url": "https://github.com/rust-lang/rust/commit/09921cf86f156208741243a7e0ea55b88155ec72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09921cf86f156208741243a7e0ea55b88155ec72/comments", "author": {"login": "robarnold", "id": 326113, "node_id": "MDQ6VXNlcjMyNjExMw==", "avatar_url": "https://avatars.githubusercontent.com/u/326113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robarnold", "html_url": "https://github.com/robarnold", "followers_url": "https://api.github.com/users/robarnold/followers", "following_url": "https://api.github.com/users/robarnold/following{/other_user}", "gists_url": "https://api.github.com/users/robarnold/gists{/gist_id}", "starred_url": "https://api.github.com/users/robarnold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robarnold/subscriptions", "organizations_url": "https://api.github.com/users/robarnold/orgs", "repos_url": "https://api.github.com/users/robarnold/repos", "events_url": "https://api.github.com/users/robarnold/events{/privacy}", "received_events_url": "https://api.github.com/users/robarnold/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "396c4defcc9ee5d5f8f959f82df26c3afe299fd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/396c4defcc9ee5d5f8f959f82df26c3afe299fd6", "html_url": "https://github.com/rust-lang/rust/commit/396c4defcc9ee5d5f8f959f82df26c3afe299fd6"}], "stats": {"total": 37, "additions": 22, "deletions": 15}, "files": [{"sha": "a1c71b049ea207d83441ac340cb977b83dbc747e", "filename": "src/rt/rust_chan.cpp", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/09921cf86f156208741243a7e0ea55b88155ec72/src%2Frt%2Frust_chan.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/09921cf86f156208741243a7e0ea55b88155ec72/src%2Frt%2Frust_chan.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_chan.cpp?ref=09921cf86f156208741243a7e0ea55b88155ec72", "patch": "@@ -97,6 +97,25 @@ void rust_chan::send(void *sptr) {\n \n     return;\n }\n+\n+rust_chan *rust_chan::clone(maybe_proxy<rust_task> *target) {\n+    size_t unit_sz = buffer.unit_sz;\n+    maybe_proxy<rust_port> *port = this->port;\n+    rust_task *target_task = NULL;\n+    if (target->is_proxy() == false) {\n+        port = this->port;\n+        target_task = target->referent();\n+    } else {\n+        rust_handle<rust_port> *handle =\n+            task->sched->kernel->get_port_handle(port->as_referent());\n+        maybe_proxy<rust_port> *proxy = new rust_proxy<rust_port> (handle);\n+        LOG(task, mem, \"new proxy: \" PTR, proxy);\n+        port = proxy;\n+        target_task = target->as_proxy()->handle()->referent();\n+    }\n+    return new (target_task) rust_chan(target_task, port, unit_sz);\n+}\n+\n //\n // Local Variables:\n // mode: C++"}, {"sha": "603936d5b771cc68f3e83c870d1a363ab216f7ea", "filename": "src/rt/rust_chan.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09921cf86f156208741243a7e0ea55b88155ec72/src%2Frt%2Frust_chan.h", "raw_url": "https://github.com/rust-lang/rust/raw/09921cf86f156208741243a7e0ea55b88155ec72/src%2Frt%2Frust_chan.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_chan.h?ref=09921cf86f156208741243a7e0ea55b88155ec72", "patch": "@@ -19,6 +19,8 @@ class rust_chan : public rc_base<rust_chan>,\n     bool is_associated();\n \n     void send(void *sptr);\n+\n+    rust_chan *clone(maybe_proxy<rust_task> *target);\n };\n \n //"}, {"sha": "2d3f8c7e1391b6227b50902201f204bff57442dd", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/09921cf86f156208741243a7e0ea55b88155ec72/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/09921cf86f156208741243a7e0ea55b88155ec72/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=09921cf86f156208741243a7e0ea55b88155ec72", "patch": "@@ -166,21 +166,7 @@ upcall_clone_chan(rust_task *task, maybe_proxy<rust_task> *target,\n                   rust_chan *chan) {\n     LOG_UPCALL_ENTRY(task);\n     scoped_lock with(task->kernel->scheduler_lock);\n-    size_t unit_sz = chan->buffer.unit_sz;\n-    maybe_proxy<rust_port> *port = chan->port;\n-    rust_task *target_task = NULL;\n-    if (target->is_proxy() == false) {\n-        port = chan->port;\n-        target_task = target->referent();\n-    } else {\n-        rust_handle<rust_port> *handle =\n-            task->sched->kernel->get_port_handle(port->as_referent());\n-        maybe_proxy<rust_port> *proxy = new rust_proxy<rust_port> (handle);\n-        LOG(task, mem, \"new proxy: \" PTR, proxy);\n-        port = proxy;\n-        target_task = target->as_proxy()->handle()->referent();\n-    }\n-    return new (target_task) rust_chan(target_task, port, unit_sz);\n+    return chan->clone(target);\n }\n \n extern \"C\" CDECL void"}]}