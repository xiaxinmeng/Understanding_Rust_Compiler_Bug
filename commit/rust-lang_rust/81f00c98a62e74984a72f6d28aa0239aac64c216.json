{"sha": "81f00c98a62e74984a72f6d28aa0239aac64c216", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxZjAwYzk4YTYyZTc0OTg0YTcyZjZkMjhhYTAyMzlhYWM2NGMyMTY=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-04-03T17:39:55Z"}, "committer": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-04-03T20:06:51Z"}, "message": "Trigger `unused_doc_comments` on macros at once", "tree": {"sha": "827b6588b200cdb2879e078692c6f88f5bd05656", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/827b6588b200cdb2879e078692c6f88f5bd05656"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81f00c98a62e74984a72f6d28aa0239aac64c216", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81f00c98a62e74984a72f6d28aa0239aac64c216", "html_url": "https://github.com/rust-lang/rust/commit/81f00c98a62e74984a72f6d28aa0239aac64c216", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81f00c98a62e74984a72f6d28aa0239aac64c216/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "836c31742687ba4e2f857b5b698e1e9e6b67619c", "url": "https://api.github.com/repos/rust-lang/rust/commits/836c31742687ba4e2f857b5b698e1e9e6b67619c", "html_url": "https://github.com/rust-lang/rust/commit/836c31742687ba4e2f857b5b698e1e9e6b67619c"}], "stats": {"total": 64, "additions": 61, "deletions": 3}, "files": [{"sha": "9c1f481edd07950b77a6bc508f90f809d87197da", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/81f00c98a62e74984a72f6d28aa0239aac64c216/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f00c98a62e74984a72f6d28aa0239aac64c216/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=81f00c98a62e74984a72f6d28aa0239aac64c216", "patch": "@@ -1060,13 +1060,23 @@ impl<'a, 'b> InvocationCollector<'a, 'b> {\n     // since they will not be detected after macro expansion.\n     fn check_attributes(&mut self, attrs: &[ast::Attribute]) {\n         let features = self.cx.ecfg.features.unwrap();\n-        for attr in attrs.iter() {\n+        let mut attrs = attrs.iter().peekable();\n+        let mut span: Option<Span> = None;\n+        while let Some(attr) = attrs.next() {\n             rustc_ast_passes::feature_gate::check_attribute(attr, self.cx.sess, features);\n             validate_attr::check_meta(&self.cx.sess.parse_sess, attr);\n+\n+            let current_span = if let Some(sp) = span { sp.to(attr.span) } else { attr.span };\n+            span = Some(current_span);\n+\n+            if attrs.peek().map_or(false, |next_attr| next_attr.doc_str().is_some()) {\n+                continue;\n+            }\n+\n             if attr.doc_str().is_some() {\n                 self.cx.sess.parse_sess.buffer_lint_with_diagnostic(\n                     &UNUSED_DOC_COMMENTS,\n-                    attr.span,\n+                    current_span,\n                     ast::CRATE_NODE_ID,\n                     \"unused doc comment\",\n                     BuiltinLintDiagnostics::UnusedDocComment(attr.span),"}, {"sha": "b9de144b0eb390ac5b6267c1c87b0849bfc5915f", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81f00c98a62e74984a72f6d28aa0239aac64c216/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f00c98a62e74984a72f6d28aa0239aac64c216/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=81f00c98a62e74984a72f6d28aa0239aac64c216", "patch": "@@ -989,7 +989,7 @@ fn warn_if_doc(cx: &EarlyContext<'_>, node_span: Span, node_kind: &str, attrs: &\n                 Some(sugared_span.map_or(attr.span, |span| span.with_hi(attr.span.hi())));\n         }\n \n-        if attrs.peek().map(|next_attr| next_attr.is_doc_comment()).unwrap_or_default() {\n+        if attrs.peek().map_or(false, |next_attr| next_attr.is_doc_comment()) {\n             continue;\n         }\n "}, {"sha": "05828ebb2c3538b71dbe2f7ea8a0ed2766e633ae", "filename": "src/test/ui/unused/unused-doc-comments-for-macros.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/81f00c98a62e74984a72f6d28aa0239aac64c216/src%2Ftest%2Fui%2Funused%2Funused-doc-comments-for-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f00c98a62e74984a72f6d28aa0239aac64c216/src%2Ftest%2Fui%2Funused%2Funused-doc-comments-for-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused%2Funused-doc-comments-for-macros.rs?ref=81f00c98a62e74984a72f6d28aa0239aac64c216", "patch": "@@ -0,0 +1,17 @@\n+#![deny(unused_doc_comments)]\n+#![feature(rustc_attrs)]\n+\n+macro_rules! foo { () => {}; }\n+\n+fn main() {\n+    /// line1 //~ ERROR: unused doc comment\n+    /// line2\n+    /// line3\n+    foo!();\n+\n+    // Ensure we still detect another doc-comment block.\n+    /// line1 //~ ERROR: unused doc comment\n+    /// line2\n+    /// line3\n+    foo!();\n+}"}, {"sha": "f4f5bb71e551ea380af9f96481daf5547d896fe1", "filename": "src/test/ui/unused/unused-doc-comments-for-macros.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/81f00c98a62e74984a72f6d28aa0239aac64c216/src%2Ftest%2Fui%2Funused%2Funused-doc-comments-for-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81f00c98a62e74984a72f6d28aa0239aac64c216/src%2Ftest%2Fui%2Funused%2Funused-doc-comments-for-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused%2Funused-doc-comments-for-macros.stderr?ref=81f00c98a62e74984a72f6d28aa0239aac64c216", "patch": "@@ -0,0 +1,31 @@\n+error: unused doc comment\n+  --> $DIR/unused-doc-comments-for-macros.rs:7:5\n+   |\n+LL | /     /// line1\n+LL | |     /// line2\n+LL | |     /// line3\n+   | |_____--------^\n+   |       |\n+   |       rustdoc does not generate documentation for macro invocations\n+   |\n+note: the lint level is defined here\n+  --> $DIR/unused-doc-comments-for-macros.rs:1:9\n+   |\n+LL | #![deny(unused_doc_comments)]\n+   |         ^^^^^^^^^^^^^^^^^^^\n+   = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\n+\n+error: unused doc comment\n+  --> $DIR/unused-doc-comments-for-macros.rs:13:5\n+   |\n+LL | /     /// line1\n+LL | |     /// line2\n+LL | |     /// line3\n+   | |_____--------^\n+   |       |\n+   |       rustdoc does not generate documentation for macro invocations\n+   |\n+   = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\n+\n+error: aborting due to 2 previous errors\n+"}]}