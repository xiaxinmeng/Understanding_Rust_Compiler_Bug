{"sha": "5b0f46a9d90ed2c7d26b2760dddee7399b379612", "node_id": "C_kwDOAAsO6NoAKDViMGY0NmE5ZDkwZWQyYzdkMjZiMjc2MGRkZGVlNzM5OWIzNzk2MTI", "commit": {"author": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2022-09-27T18:21:14Z"}, "committer": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2022-09-27T18:21:14Z"}, "message": "Don't lint unstable moves in `std_instead_of_core`\n\nSuch as the currently unstable `core::error`", "tree": {"sha": "0d11122d7abdb48f460011e1490946a738fce001", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d11122d7abdb48f460011e1490946a738fce001"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b0f46a9d90ed2c7d26b2760dddee7399b379612", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b0f46a9d90ed2c7d26b2760dddee7399b379612", "html_url": "https://github.com/rust-lang/rust/commit/5b0f46a9d90ed2c7d26b2760dddee7399b379612", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b0f46a9d90ed2c7d26b2760dddee7399b379612/comments", "author": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "257fb4b458d9fc86530899705fa14c68a5c69d07", "url": "https://api.github.com/repos/rust-lang/rust/commits/257fb4b458d9fc86530899705fa14c68a5c69d07", "html_url": "https://github.com/rust-lang/rust/commit/257fb4b458d9fc86530899705fa14c68a5c69d07"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "d6b336bef943ec9510ec68221d34da9599a411e0", "filename": "clippy_lints/src/std_instead_of_core.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5b0f46a9d90ed2c7d26b2760dddee7399b379612/clippy_lints%2Fsrc%2Fstd_instead_of_core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b0f46a9d90ed2c7d26b2760dddee7399b379612/clippy_lints%2Fsrc%2Fstd_instead_of_core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstd_instead_of_core.rs?ref=5b0f46a9d90ed2c7d26b2760dddee7399b379612", "patch": "@@ -1,6 +1,8 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n+use rustc_hir::def_id::DefId;\n use rustc_hir::{def::Res, HirId, Path, PathSegment};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::DefIdTree;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::{sym, symbol::kw, Span};\n \n@@ -94,6 +96,7 @@ impl<'tcx> LateLintPass<'tcx> for StdReexports {\n     fn check_path(&mut self, cx: &LateContext<'tcx>, path: &Path<'tcx>, _: HirId) {\n         if let Res::Def(_, def_id) = path.res\n             && let Some(first_segment) = get_first_segment(path)\n+            && is_stable(cx, def_id)\n         {\n             let (lint, msg, help) = match first_segment.ident.name {\n                 sym::std => match cx.tcx.crate_name(def_id.krate) {\n@@ -146,3 +149,22 @@ fn get_first_segment<'tcx>(path: &Path<'tcx>) -> Option<&'tcx PathSegment<'tcx>>\n         _ => None,\n     }\n }\n+\n+/// Checks if all ancestors of `def_id` are stable, to avoid linting\n+/// [unstable moves](https://github.com/rust-lang/rust/pull/95956)\n+fn is_stable(cx: &LateContext<'_>, mut def_id: DefId) -> bool {\n+    loop {\n+        if cx\n+            .tcx\n+            .lookup_stability(def_id)\n+            .map_or(false, |stability| stability.is_unstable())\n+        {\n+            return false;\n+        }\n+\n+        match cx.tcx.opt_parent(def_id) {\n+            Some(parent) => def_id = parent,\n+            None => return true,\n+        }\n+    }\n+}"}, {"sha": "75b114ba0aed91108bbb209248c89a018dadaee9", "filename": "tests/ui/std_instead_of_core.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5b0f46a9d90ed2c7d26b2760dddee7399b379612/tests%2Fui%2Fstd_instead_of_core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b0f46a9d90ed2c7d26b2760dddee7399b379612/tests%2Fui%2Fstd_instead_of_core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstd_instead_of_core.rs?ref=5b0f46a9d90ed2c7d26b2760dddee7399b379612", "patch": "@@ -24,6 +24,12 @@ fn std_instead_of_core() {\n     let cell_absolute = ::std::cell::Cell::new(8u32);\n \n     let _ = std::env!(\"PATH\");\n+\n+    // do not lint until `error_in_core` is stable\n+    use std::error::Error;\n+\n+    // lint items re-exported from private modules, `core::iter::traits::iterator::Iterator`\n+    use std::iter::Iterator;\n }\n \n #[warn(clippy::std_instead_of_alloc)]"}, {"sha": "e9ead4db5f9ea03d52ad2f16505bb77b976f3a3c", "filename": "tests/ui/std_instead_of_core.stderr", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5b0f46a9d90ed2c7d26b2760dddee7399b379612/tests%2Fui%2Fstd_instead_of_core.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5b0f46a9d90ed2c7d26b2760dddee7399b379612/tests%2Fui%2Fstd_instead_of_core.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstd_instead_of_core.stderr?ref=5b0f46a9d90ed2c7d26b2760dddee7399b379612", "patch": "@@ -63,31 +63,39 @@ LL |     let cell_absolute = ::std::cell::Cell::new(8u32);\n    |\n    = help: consider importing the item from `core`\n \n-error: used import from `std` instead of `alloc`\n+error: used import from `std` instead of `core`\n   --> $DIR/std_instead_of_core.rs:32:9\n    |\n+LL |     use std::iter::Iterator;\n+   |         ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider importing the item from `core`\n+\n+error: used import from `std` instead of `alloc`\n+  --> $DIR/std_instead_of_core.rs:38:9\n+   |\n LL |     use std::vec;\n    |         ^^^^^^^^\n    |\n    = note: `-D clippy::std-instead-of-alloc` implied by `-D warnings`\n    = help: consider importing the item from `alloc`\n \n error: used import from `std` instead of `alloc`\n-  --> $DIR/std_instead_of_core.rs:33:9\n+  --> $DIR/std_instead_of_core.rs:39:9\n    |\n LL |     use std::vec::Vec;\n    |         ^^^^^^^^^^^^^\n    |\n    = help: consider importing the item from `alloc`\n \n error: used import from `alloc` instead of `core`\n-  --> $DIR/std_instead_of_core.rs:38:9\n+  --> $DIR/std_instead_of_core.rs:44:9\n    |\n LL |     use alloc::slice::from_ref;\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::alloc-instead-of-core` implied by `-D warnings`\n    = help: consider importing the item from `core`\n \n-error: aborting due to 11 previous errors\n+error: aborting due to 12 previous errors\n "}]}