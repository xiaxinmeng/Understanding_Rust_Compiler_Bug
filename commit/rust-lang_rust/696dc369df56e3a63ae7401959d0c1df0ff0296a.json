{"sha": "696dc369df56e3a63ae7401959d0c1df0ff0296a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NmRjMzY5ZGY1NmUzYTYzYWU3NDAxOTU5ZDBjMWRmMGZmMDI5NmE=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-02T13:17:56Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-02T13:17:56Z"}, "message": "FIx dogfood", "tree": {"sha": "bc0641a5c2be757c9bc385a4670693e6553556f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc0641a5c2be757c9bc385a4670693e6553556f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/696dc369df56e3a63ae7401959d0c1df0ff0296a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/696dc369df56e3a63ae7401959d0c1df0ff0296a", "html_url": "https://github.com/rust-lang/rust/commit/696dc369df56e3a63ae7401959d0c1df0ff0296a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/696dc369df56e3a63ae7401959d0c1df0ff0296a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b36bb0a68d70f091dd03f209f41b614ff1f015d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b36bb0a68d70f091dd03f209f41b614ff1f015d0", "html_url": "https://github.com/rust-lang/rust/commit/b36bb0a68d70f091dd03f209f41b614ff1f015d0"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "5c733eb4f7a82afa20bf82b27695c98fb29e6497", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/696dc369df56e3a63ae7401959d0c1df0ff0296a/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/696dc369df56e3a63ae7401959d0c1df0ff0296a/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=696dc369df56e3a63ae7401959d0c1df0ff0296a", "patch": "@@ -70,10 +70,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     },\n                     hir::PatKind::Binding(hir::BindingAnnotation::Unannotated, _, name, None) => match closure_expr.node {\n                         hir::ExprKind::Unary(hir::UnOp::UnDeref, ref inner) => lint(cx, e.span, args[0].span, name, inner),\n-                        hir::ExprKind::MethodCall(ref method, _, ref obj) => if method.ident.as_str() == \"clone\" {\n-                            if match_trait_method(cx, closure_expr, &paths::CLONE_TRAIT) {\n-                                lint(cx, e.span, args[0].span, name, &obj[0]);\n-                            }\n+                        hir::ExprKind::MethodCall(ref method, _, ref obj) => if method.ident.as_str() == \"clone\" && match_trait_method(cx, closure_expr, &paths::CLONE_TRAIT) {\n+                            lint(cx, e.span, args[0].span, name, &obj[0]);\n                         }\n                         _ => {},\n                     },"}]}