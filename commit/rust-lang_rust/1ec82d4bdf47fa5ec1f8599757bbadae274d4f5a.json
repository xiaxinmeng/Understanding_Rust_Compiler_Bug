{"sha": "1ec82d4bdf47fa5ec1f8599757bbadae274d4f5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYzgyZDRiZGY0N2ZhNWVjMWY4NTk5NzU3YmJhZGFlMjc0ZDRmNWE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-07T18:47:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-07T18:47:05Z"}, "message": "Merge #8751\n\n8751: minor: standard snippet r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "30b598248fe8d2f7ecfcc302d71ab96350c11934", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30b598248fe8d2f7ecfcc302d71ab96350c11934"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ec82d4bdf47fa5ec1f8599757bbadae274d4f5a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJglYspCRBK7hj4Ov3rIwAAoAgIAIyyhJgJcIWBaMaLBktt+yOm\nhOEQQPSddArhj1l5vifmWikjjvhN5e13JqfDZHMbVpnwvziyISbiWSfa13eDrQmB\nuZjvw0ZogytTJj6aafXWH73NJcqB1qX9dNtwEOV4+iH8+kO0aAVJukz2MJulAWHB\nGJ47P+yoPlzKeJfRuY2VlTABdGFDyJG+mjuENWeQsubQqAcISKYK9/4Ode4fWfy+\ni9iiKBIjuKvDw7lY9r2DO3K62833/y1gzQhhMacyQB1/9SJml+NwG1fpryePmzO0\n+4ADqIDb/cviFBC9kgpP1LxwsB0TkJFvn5I8gIdRAcVlWRtcoCRwHMIjEuVcHm4=\n=DFIj\n-----END PGP SIGNATURE-----\n", "payload": "tree 30b598248fe8d2f7ecfcc302d71ab96350c11934\nparent 0bc85ac7986347d50d2eb8403084d61ac33447a4\nparent 189f785749e9e6921ae1db4338c3d65c9da102cf\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1620413225 +0000\ncommitter GitHub <noreply@github.com> 1620413225 +0000\n\nMerge #8751\n\n8751: minor: standard snippet r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ec82d4bdf47fa5ec1f8599757bbadae274d4f5a", "html_url": "https://github.com/rust-lang/rust/commit/1ec82d4bdf47fa5ec1f8599757bbadae274d4f5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ec82d4bdf47fa5ec1f8599757bbadae274d4f5a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bc85ac7986347d50d2eb8403084d61ac33447a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bc85ac7986347d50d2eb8403084d61ac33447a4", "html_url": "https://github.com/rust-lang/rust/commit/0bc85ac7986347d50d2eb8403084d61ac33447a4"}, {"sha": "189f785749e9e6921ae1db4338c3d65c9da102cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/189f785749e9e6921ae1db4338c3d65c9da102cf", "html_url": "https://github.com/rust-lang/rust/commit/189f785749e9e6921ae1db4338c3d65c9da102cf"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "aceab82d9b07559a5cbe56adb375504d0750eaae", "filename": "crates/rust-analyzer/build.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1ec82d4bdf47fa5ec1f8599757bbadae274d4f5a/crates%2Frust-analyzer%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ec82d4bdf47fa5ec1f8599757bbadae274d4f5a/crates%2Frust-analyzer%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fbuild.rs?ref=1ec82d4bdf47fa5ec1f8599757bbadae274d4f5a", "patch": "@@ -51,16 +51,23 @@ fn rev() -> String {\n }\n \n fn commit_hash() -> Option<String> {\n-    output_to_string(\"git rev-parse --short HEAD\")\n+    exec(\"git rev-parse --short HEAD\").ok()\n }\n \n fn build_date() -> Option<String> {\n-    output_to_string(\"date -u +%Y-%m-%d\")\n+    exec(\"date -u +%Y-%m-%d\").ok()\n }\n \n-fn output_to_string(command: &str) -> Option<String> {\n+fn exec(command: &str) -> std::io::Result<String> {\n     let args = command.split_ascii_whitespace().collect::<Vec<_>>();\n-    let output = Command::new(args[0]).args(&args[1..]).output().ok()?;\n-    let stdout = String::from_utf8(output.stdout).ok()?;\n-    Some(stdout.trim().to_string())\n+    let output = Command::new(args[0]).args(&args[1..]).output()?;\n+    if !output.status.success() {\n+        return Err(std::io::Error::new(\n+            std::io::ErrorKind::InvalidData,\n+            format!(\"command {:?} returned non-zero code\", command,),\n+        ));\n+    }\n+    let stdout = String::from_utf8(output.stdout)\n+        .map_err(|err| std::io::Error::new(std::io::ErrorKind::InvalidData, err))?;\n+    Ok(stdout.trim().to_string())\n }"}]}