{"sha": "d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3OWE5YjE3ZGM0ZmIxMzI0NDNhYTRlYzFjYTBhYjI3OGQyYTIxN2M=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-14T13:27:08Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-15T11:18:24Z"}, "message": "switch to insta for testing", "tree": {"sha": "525b697381048b2f6d615a9c66c92485db8511ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/525b697381048b2f6d615a9c66c92485db8511ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "html_url": "https://github.com/rust-lang/rust/commit/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8caff4e03475c20392f13e8c6ad469bd01a4b4ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/8caff4e03475c20392f13e8c6ad469bd01a4b4ce", "html_url": "https://github.com/rust-lang/rust/commit/8caff4e03475c20392f13e8c6ad469bd01a4b4ce"}], "stats": {"total": 690, "additions": 495, "deletions": 195}, "files": [{"sha": "2c4337a7029ece6577ca920e20056f01d5a11316", "filename": "Cargo.lock", "status": "modified", "additions": 70, "deletions": 8, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -118,7 +118,7 @@ dependencies = [\n  \"semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.84 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.84 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_json 1.0.34 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -155,6 +155,17 @@ dependencies = [\n  \"vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"clicolors-control\"\n+version = \"1.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"cloudabi\"\n version = \"0.0.3\"\n@@ -163,6 +174,23 @@ dependencies = [\n  \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"console\"\n+version = \"0.7.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"clicolors-control 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"encode_unicode 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"termios 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"crossbeam-channel\"\n version = \"0.3.6\"\n@@ -259,6 +287,11 @@ dependencies = [\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"encode_unicode\"\n+version = \"0.3.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"error-chain\"\n version = \"0.12.0\"\n@@ -340,7 +373,7 @@ dependencies = [\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lsp-types 0.54.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.84 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_json 1.0.34 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -393,6 +426,20 @@ name = \"indexmap\"\n version = \"1.0.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"insta\"\n+version = \"0.1.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"chrono 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"console 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"difference 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.84 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"itertools\"\n version = \"0.8.0\"\n@@ -448,7 +495,7 @@ dependencies = [\n  \"num-traits 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.84 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.84 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_json 1.0.34 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url_serde 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -688,6 +735,7 @@ name = \"ra_ide_api\"\n version = \"0.1.0\"\n dependencies = [\n  \"fst 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"insta 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -708,6 +756,7 @@ dependencies = [\n name = \"ra_ide_api_light\"\n version = \"0.1.0\"\n dependencies = [\n+ \"insta 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"join_to_string 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"proptest 0.8.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -742,7 +791,7 @@ dependencies = [\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.84 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_json 1.0.34 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"tempfile 3.0.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"test_utils 0.1.0\",\n  \"thread_worker 0.1.0\",\n@@ -1081,7 +1130,7 @@ dependencies = [\n \n [[package]]\n name = \"serde_json\"\n-version = \"1.0.34\"\n+version = \"1.0.35\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1187,7 +1236,7 @@ dependencies = [\n  \"pest_derive 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.84 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_json 1.0.34 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"slug 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unic-segment 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1214,13 +1263,21 @@ dependencies = [\n  \"redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"termios\"\n+version = \"0.3.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"test_utils\"\n version = \"0.1.0\"\n dependencies = [\n  \"difference 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_json 1.0.34 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"text_unit 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1494,7 +1551,9 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"082bb9b28e00d3c9d39cc03e64ce4cea0f1bb9b3fde493f0cbc008472d22bdf4\"\n \"checksum chrono 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"45912881121cb26fad7c38c17ba7daa18764771836b34fab7d3fbd93ed633878\"\n \"checksum clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b957d88f4b6a63b9d70d5f454ac8011819c6efa7727858f458ab71c756ce2d3e\"\n+\"checksum clicolors-control 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"73abfd4c73d003a674ce5d2933fca6ce6c42480ea84a5ffe0a2dc39ed56300f9\"\n \"checksum cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f\"\n+\"checksum console 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ecc3753530b959618f617b0cd6494526008d98687f1af5d8f9fa83fa9cdbb594\"\n \"checksum crossbeam-channel 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"137bc235f622ffaa0428e3854e24acb53291fc0b3ff6fb2cb75a8be6fb02f06b\"\n \"checksum crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f739f8c5363aca78cfb059edf753d8f0d36908c348f3d8d1503f03d8b75d9cf3\"\n \"checksum crossbeam-epoch 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"927121f5407de9956180ff5e936fe3cf4324279280001cd56b669d28ee7e9150\"\n@@ -1507,6 +1566,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum drop_bomb 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"69b26e475fd29098530e709294e94e661974c851aed42512793f120fed4e199f\"\n \"checksum either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3be565ca5c557d7f59e7cfcf1844f9e3033650c929c6566f511e8005f205c1d0\"\n \"checksum ena 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f56c93cc076508c549d9bb747f79aa9b4eb098be7b8cad8830c3137ef52d1e00\"\n+\"checksum encode_unicode 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"90b2c9496c001e8cb61827acdefad780795c42264c137744cae6f7d9e3450abd\"\n \"checksum error-chain 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"07e791d3be96241c77c43846b665ef1384606da2cd2a48730abe606a12906e02\"\n \"checksum failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"795bd83d3abeb9220f257e597aa0080a508b27533824adf336529648f6abf7e2\"\n \"checksum failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ea1063915fd7ef4309e222a5a07cf9c319fb9c7836b1f89b85458672dbb127e1\"\n@@ -1523,6 +1583,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum idna 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"38f09e0f0b1fb55fdee1f17470ad800da77af5186a1a76c026b679358b7e844e\"\n \"checksum im 12.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ae9c7f9bb8aee47fc16d535a705f7867a9fc83bb822e5e1043bb98e77ffeed3c\"\n \"checksum indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e81a7c05f79578dbc15793d8b619db9ba32b4577003ef3af1a91c416798c58d\"\n+\"checksum insta 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"60e94ba6dd3521d953caeed96f6ba06f4cdc9e30e398b3ee7acdd680294f87dc\"\n \"checksum itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5b8467d9c1cebe26feb08c640139247fac215782d35371ade9a2136ed6085358\"\n \"checksum itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1306f3464951f30e30d12373d31c79fbd52d236e5e896fd92f96ec7babbbe60b\"\n \"checksum join_to_string 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4dc7a5290e8c2606ce2be49f456d50f69173cb96d1541e4f66e34ac8b331a98f\"\n@@ -1586,7 +1647,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3\"\n \"checksum serde 1.0.84 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0e732ed5a5592c17d961555e3b552985baf98d50ce418b7b655f31f6ba7eb1b7\"\n \"checksum serde_derive 1.0.84 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b4d6115a3ca25c224e409185325afc16a0d5aaaabc15c42b09587d6f1ba39a5b\"\n-\"checksum serde_json 1.0.34 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bdf540260cfee6da923831f4776ddc495ada940c30117977c70f1313a6130545\"\n+\"checksum serde_json 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dfb1277d4d0563e4593e0b8b5d23d744d277b55d2bc0bf1c38d0d8a6589d38aa\"\n \"checksum sha-1 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"51b9d1f3b5de8a167ab06834a7c883bd197f2191e1dda1a22d9ccfeedbf9aded\"\n \"checksum slug 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b3bc762e6a4b6c6fcaade73e77f9ebc6991b676f88bb2358bddb56560f073373\"\n \"checksum smallvec 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b73ea3738b47563803ef814925e69be00799a8c07420be8b996f8e98fb2336db\"\n@@ -1600,6 +1661,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum tera 0.11.20 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4b505279e19d8f7d24b1a9dc58327c9c36174b1a2c7ebdeac70792d017cb64f3\"\n \"checksum teraron 0.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0d89ad4617d1dec55331067fadaa041e813479e1779616f3d3ce9308bf46184e\"\n \"checksum termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"689a3bdfaab439fd92bc87df5c4c78417d3cbe537487274e9b0b2dce76e92096\"\n+\"checksum termios 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"72b620c5ea021d75a735c943269bb07d30c9b77d6ac6b236bc8b5c496ef05625\"\n \"checksum text_unit 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"158bb1c22b638b1da3c95a8ad9f061ea40d4d39fd0301be3a520f92efeeb189e\"\n \"checksum textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"307686869c93e71f94da64286f9a9524c0f308a9e1c87a583de8e9c9039ad3f6\"\n \"checksum thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c6b53e329000edc2b34dbe8545fd20e55a333362d0a321909685a19bd28c3f1b\""}, {"sha": "f7013c3c11ad55c790998cf34a3b49d3ba7fedef", "filename": "crates/ra_ide_api/Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2FCargo.toml?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -21,3 +21,6 @@ ra_text_edit = { path = \"../ra_text_edit\" }\n ra_db = { path = \"../ra_db\" }\n hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n test_utils = { path = \"../test_utils\" }\n+\n+[dev-dependencies]\n+insta = \"0.1.4\""}, {"sha": "9f0ab2f1c815f5118170c13d2de7ad21ee8d8c86", "filename": "crates/ra_ide_api/src/extend_selection.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fextend_selection.rs?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -38,8 +38,9 @@ fn find_macro_call(node: &SyntaxNode, range: TextRange) -> Option<&ast::MacroCal\n \n #[cfg(test)]\n mod tests {\n+    use ra_syntax::TextRange;\n+\n     use crate::mock_analysis::single_file_with_range;\n-    use test_utils::assert_eq_dbg;\n \n     #[test]\n     fn extend_selection_inside_macros() {\n@@ -51,6 +52,6 @@ mod tests {\n         \",\n         );\n         let r = analysis.extend_selection(frange);\n-        assert_eq_dbg(\"[51; 56)\", &r);\n+        assert_eq!(r, TextRange::from_to(51.into(), 56.into()));\n     }\n }"}, {"sha": "f1de28094f0c3b4883b531c980a98abb545463c0", "filename": "crates/ra_ide_api/src/runnables.rs", "status": "modified", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -92,3 +92,100 @@ fn runnable_mod(db: &RootDatabase, file_id: FileId, module: &ast::Module) -> Opt\n         kind: RunnableKind::TestMod { path },\n     })\n }\n+\n+#[cfg(test)]\n+mod tests {\n+    use insta::assert_debug_snapshot_matches;\n+\n+    use crate::mock_analysis::analysis_and_position;\n+\n+    #[test]\n+    fn test_runnables() {\n+        let (analysis, pos) = analysis_and_position(\n+            r#\"\n+        //- /lib.rs\n+        <|> //empty\n+        fn main() {}\n+\n+        #[test]\n+        fn test_foo() {}\n+\n+        #[test]\n+        #[ignore]\n+        fn test_foo() {}\n+        \"#,\n+        );\n+        let runnables = analysis.runnables(pos.file_id).unwrap();\n+        assert_debug_snapshot_matches!(\"runnables\", &runnables)\n+    }\n+\n+    #[test]\n+    fn test_runnables_module() {\n+        let (analysis, pos) = analysis_and_position(\n+            r#\"\n+        //- /lib.rs\n+        <|> //empty\n+        mod test_mod {\n+            #[test]\n+            fn test_foo1() {}\n+        }\n+        \"#,\n+        );\n+        let runnables = analysis.runnables(pos.file_id).unwrap();\n+        assert_debug_snapshot_matches!(\"runnables_module\", &runnables)\n+    }\n+\n+    #[test]\n+    fn test_runnables_one_depth_layer_module() {\n+        let (analysis, pos) = analysis_and_position(\n+            r#\"\n+        //- /lib.rs\n+        <|> //empty\n+        mod foo {\n+            mod test_mod {\n+                #[test]\n+                fn test_foo1() {}\n+            }\n+        }\n+        \"#,\n+        );\n+        let runnables = analysis.runnables(pos.file_id).unwrap();\n+        assert_debug_snapshot_matches!(\"runnables_one_depth_layer_module\", &runnables)\n+    }\n+\n+    #[test]\n+    fn test_runnables_multiple_depth_module() {\n+        let (analysis, pos) = analysis_and_position(\n+            r#\"\n+        //- /lib.rs\n+        <|> //empty\n+        mod foo {\n+            mod bar {\n+                mod test_mod {\n+                    #[test]\n+                    fn test_foo1() {}\n+                }\n+            }\n+        }\n+        \"#,\n+        );\n+        let runnables = analysis.runnables(pos.file_id).unwrap();\n+        assert_debug_snapshot_matches!(\"runnables_multiple_depth_module\", &runnables)\n+    }\n+\n+    #[test]\n+    fn test_runnables_no_test_function_in_module() {\n+        let (analysis, pos) = analysis_and_position(\n+            r#\"\n+        //- /lib.rs\n+        <|> //empty\n+        mod test_mod {\n+            fn foo1() {}\n+        }\n+        \"#,\n+        );\n+        let runnables = analysis.runnables(pos.file_id).unwrap();\n+        assert!(runnables.is_empty())\n+    }\n+\n+}"}, {"sha": "b84aa9c78e938c3873e53da8f7d2a8cb033013cd", "filename": "crates/ra_ide_api/src/snapshots/tests__highlight_query_group_macro.snap", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlight_query_group_macro.snap", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlight_query_group_macro.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlight_query_group_macro.snap?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -0,0 +1,26 @@\n+Created: 2019-01-15T11:15:20.732493641+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/syntax_highlighting.rs\n+\n+[\n+    HighlightedRange {\n+        range: [20; 32),\n+        tag: \"macro\"\n+    },\n+    HighlightedRange {\n+        range: [13; 18),\n+        tag: \"text\"\n+    },\n+    HighlightedRange {\n+        range: [51; 54),\n+        tag: \"keyword\"\n+    },\n+    HighlightedRange {\n+        range: [55; 60),\n+        tag: \"keyword\"\n+    },\n+    HighlightedRange {\n+        range: [61; 72),\n+        tag: \"function\"\n+    }\n+]"}, {"sha": "14c6e5a4e36356848b95d475e7661659e8440489", "filename": "crates/ra_ide_api/src/snapshots/tests__highlights_code_inside_macros.snap", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlights_code_inside_macros.snap", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlights_code_inside_macros.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlights_code_inside_macros.snap?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -0,0 +1,70 @@\n+Created: 2019-01-15T11:15:20.732523231+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/syntax_highlighting.rs\n+\n+[\n+    HighlightedRange {\n+        range: [13; 15),\n+        tag: \"keyword\"\n+    },\n+    HighlightedRange {\n+        range: [16; 20),\n+        tag: \"function\"\n+    },\n+    HighlightedRange {\n+        range: [41; 46),\n+        tag: \"macro\"\n+    },\n+    HighlightedRange {\n+        range: [49; 52),\n+        tag: \"keyword\"\n+    },\n+    HighlightedRange {\n+        range: [57; 59),\n+        tag: \"literal\"\n+    },\n+    HighlightedRange {\n+        range: [82; 86),\n+        tag: \"macro\"\n+    },\n+    HighlightedRange {\n+        range: [89; 92),\n+        tag: \"keyword\"\n+    },\n+    HighlightedRange {\n+        range: [97; 99),\n+        tag: \"literal\"\n+    },\n+    HighlightedRange {\n+        range: [49; 52),\n+        tag: \"keyword\"\n+    },\n+    HighlightedRange {\n+        range: [53; 54),\n+        tag: \"function\"\n+    },\n+    HighlightedRange {\n+        range: [57; 59),\n+        tag: \"literal\"\n+    },\n+    HighlightedRange {\n+        range: [61; 62),\n+        tag: \"text\"\n+    },\n+    HighlightedRange {\n+        range: [89; 92),\n+        tag: \"keyword\"\n+    },\n+    HighlightedRange {\n+        range: [93; 94),\n+        tag: \"function\"\n+    },\n+    HighlightedRange {\n+        range: [97; 99),\n+        tag: \"literal\"\n+    },\n+    HighlightedRange {\n+        range: [101; 102),\n+        tag: \"text\"\n+    }\n+]"}, {"sha": "ba6cba0ab983996756526709562c778a38e210b6", "filename": "crates/ra_ide_api/src/snapshots/tests__runnables.snap", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables.snap", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables.snap?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -0,0 +1,22 @@\n+Created: 2019-01-15T11:15:20.732460119+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/runnables.rs\n+\n+[\n+    Runnable {\n+        range: [1; 21),\n+        kind: Bin\n+    },\n+    Runnable {\n+        range: [22; 46),\n+        kind: Test {\n+            name: \"test_foo\"\n+        }\n+    },\n+    Runnable {\n+        range: [47; 81),\n+        kind: Test {\n+            name: \"test_foo\"\n+        }\n+    }\n+]"}, {"sha": "b3f2d4d6ecebcfb360ea8881e45ddb756cc19027", "filename": "crates/ra_ide_api/src/snapshots/tests__runnables_module.snap", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_module.snap", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_module.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_module.snap?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -0,0 +1,18 @@\n+Created: 2019-01-15T11:15:20.732460109+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/runnables.rs\n+\n+[\n+    Runnable {\n+        range: [1; 59),\n+        kind: TestMod {\n+            path: \"test_mod\"\n+        }\n+    },\n+    Runnable {\n+        range: [28; 57),\n+        kind: Test {\n+            name: \"test_foo1\"\n+        }\n+    }\n+]"}, {"sha": "6eba482e74816f08bf50dd6f266877a2f70de56e", "filename": "crates/ra_ide_api/src/snapshots/tests__runnables_multiple_depth_module.snap", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_multiple_depth_module.snap", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_multiple_depth_module.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_multiple_depth_module.snap?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -0,0 +1,18 @@\n+Created: 2019-01-15T11:15:20.732522773+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/runnables.rs\n+\n+[\n+    Runnable {\n+        range: [41; 115),\n+        kind: TestMod {\n+            path: \"foo::bar::test_mod\"\n+        }\n+    },\n+    Runnable {\n+        range: [68; 105),\n+        kind: Test {\n+            name: \"test_foo1\"\n+        }\n+    }\n+]"}, {"sha": "f40c762f30f6ac42dedabdbe0c565196bcaec6ea", "filename": "crates/ra_ide_api/src/snapshots/tests__runnables_one_depth_layer_module.snap", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_one_depth_layer_module.snap", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_one_depth_layer_module.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_one_depth_layer_module.snap?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -0,0 +1,18 @@\n+Created: 2019-01-15T11:15:20.732480089+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/runnables.rs\n+\n+[\n+    Runnable {\n+        range: [23; 85),\n+        kind: TestMod {\n+            path: \"foo::test_mod\"\n+        }\n+    },\n+    Runnable {\n+        range: [46; 79),\n+        kind: Test {\n+            name: \"test_foo1\"\n+        }\n+    }\n+]"}, {"sha": "480b78dcec7f8fe2675a61b8b0dcf54e333613e4", "filename": "crates/ra_ide_api/src/syntax_highlighting.rs", "status": "modified", "additions": 4, "deletions": 28, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -34,7 +34,8 @@ pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Cancelable<Vec<Hi\n #[cfg(test)]\n mod tests {\n     use crate::mock_analysis::single_file;\n-    use test_utils::assert_eq_dbg;\n+\n+    use insta::assert_debug_snapshot_matches;\n \n     #[test]\n     fn highlights_code_inside_macros() {\n@@ -47,25 +48,7 @@ mod tests {\n             \",\n         );\n         let highlights = analysis.highlight(file_id).unwrap();\n-        assert_eq_dbg(\n-            r#\"[HighlightedRange { range: [13; 15), tag: \"keyword\" },\n-                HighlightedRange { range: [16; 20), tag: \"function\" },\n-                HighlightedRange { range: [41; 46), tag: \"macro\" },\n-                HighlightedRange { range: [49; 52), tag: \"keyword\" },\n-                HighlightedRange { range: [57; 59), tag: \"literal\" },\n-                HighlightedRange { range: [82; 86), tag: \"macro\" },\n-                HighlightedRange { range: [89; 92), tag: \"keyword\" },\n-                HighlightedRange { range: [97; 99), tag: \"literal\" },\n-                HighlightedRange { range: [49; 52), tag: \"keyword\" },\n-                HighlightedRange { range: [53; 54), tag: \"function\" },\n-                HighlightedRange { range: [57; 59), tag: \"literal\" },\n-                HighlightedRange { range: [61; 62), tag: \"text\" },\n-                HighlightedRange { range: [89; 92), tag: \"keyword\" },\n-                HighlightedRange { range: [93; 94), tag: \"function\" },\n-                HighlightedRange { range: [97; 99), tag: \"literal\" },\n-                HighlightedRange { range: [101; 102), tag: \"text\" }]\"#,\n-            &highlights,\n-        )\n+        assert_debug_snapshot_matches!(\"highlights_code_inside_macros\", &highlights);\n     }\n \n     // FIXME: this test is not really necessary: artifact of the inital hacky\n@@ -80,13 +63,6 @@ mod tests {\n             \",\n         );\n         let highlights = analysis.highlight(file_id).unwrap();\n-        assert_eq_dbg(\n-            r#\"[HighlightedRange { range: [20; 32), tag: \"macro\" },\n-                HighlightedRange { range: [13; 18), tag: \"text\" },\n-                HighlightedRange { range: [51; 54), tag: \"keyword\" },\n-                HighlightedRange { range: [55; 60), tag: \"keyword\" },\n-                HighlightedRange { range: [61; 72), tag: \"function\" }]\"#,\n-            &highlights,\n-        )\n+        assert_debug_snapshot_matches!(\"highlight_query_group_macro\", &highlights);\n     }\n }"}, {"sha": "2b863aedf347b9d1da20ddc567537ab361e1dd2c", "filename": "crates/ra_ide_api/tests/test/main.rs", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Ftests%2Ftest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Ftests%2Ftest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Ftests%2Ftest%2Fmain.rs?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -1,7 +1,6 @@\n-mod runnables;\n-\n use ra_syntax::TextRange;\n-use test_utils::{assert_eq_dbg, assert_eq_text};\n+use test_utils::assert_eq_text;\n+use insta::assert_debug_snapshot_matches;\n \n use ra_ide_api::{\n     mock_analysis::{single_file, single_file_with_position, MockAnalysis},\n@@ -12,26 +11,15 @@ use ra_ide_api::{\n fn test_unresolved_module_diagnostic() {\n     let (analysis, file_id) = single_file(\"mod foo;\");\n     let diagnostics = analysis.diagnostics(file_id).unwrap();\n-    assert_eq_dbg(\n-        r#\"[Diagnostic {\n-            message: \"unresolved module\",\n-            range: [4; 7),\n-            fix: Some(SourceChange {\n-                label: \"create module\",\n-                source_file_edits: [],\n-                file_system_edits: [CreateFile { source_root: SourceRootId(0), path: \"foo.rs\" }],\n-                cursor_position: None }),\n-                severity: Error }]\"#,\n-        &diagnostics,\n-    );\n+    assert_debug_snapshot_matches!(\"unresolved_module_diagnostic\", &diagnostics);\n }\n \n // FIXME: move this test to hir\n #[test]\n fn test_unresolved_module_diagnostic_no_diag_for_inline_mode() {\n     let (analysis, file_id) = single_file(\"mod foo {}\");\n     let diagnostics = analysis.diagnostics(file_id).unwrap();\n-    assert_eq_dbg(r#\"[]\"#, &diagnostics);\n+    assert!(diagnostics.is_empty());\n }\n \n #[test]"}, {"sha": "da8d5e0d5dd0a22cee05709ffe1f4125a4d186ae", "filename": "crates/ra_ide_api/tests/test/runnables.rs", "status": "removed", "additions": 0, "deletions": 109, "changes": 109, "blob_url": "https://github.com/rust-lang/rust/blob/8caff4e03475c20392f13e8c6ad469bd01a4b4ce/crates%2Fra_ide_api%2Ftests%2Ftest%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8caff4e03475c20392f13e8c6ad469bd01a4b4ce/crates%2Fra_ide_api%2Ftests%2Ftest%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Ftests%2Ftest%2Frunnables.rs?ref=8caff4e03475c20392f13e8c6ad469bd01a4b4ce", "patch": "@@ -1,109 +0,0 @@\n-use test_utils::assert_eq_dbg;\n-\n-use ra_ide_api::mock_analysis::analysis_and_position;\n-\n-#[test]\n-fn test_runnables() {\n-    let (analysis, pos) = analysis_and_position(\n-        r#\"\n-        //- /lib.rs\n-        <|> //empty\n-        fn main() {}\n-\n-        #[test]\n-        fn test_foo() {}\n-\n-        #[test]\n-        #[ignore]\n-        fn test_foo() {}\n-        \"#,\n-    );\n-    let runnables = analysis.runnables(pos.file_id).unwrap();\n-    assert_eq_dbg(\n-        r#\"[Runnable { range: [1; 21), kind: Bin },\n-                Runnable { range: [22; 46), kind: Test { name: \"test_foo\" } },\n-                Runnable { range: [47; 81), kind: Test { name: \"test_foo\" } }]\"#,\n-        &runnables,\n-    )\n-}\n-\n-#[test]\n-fn test_runnables_module() {\n-    let (analysis, pos) = analysis_and_position(\n-        r#\"\n-        //- /lib.rs\n-        <|> //empty\n-        mod test_mod {\n-            #[test]\n-            fn test_foo1() {}\n-        }\n-        \"#,\n-    );\n-    let runnables = analysis.runnables(pos.file_id).unwrap();\n-    assert_eq_dbg(\n-        r#\"[Runnable { range: [1; 59), kind: TestMod { path: \"test_mod\" } },\n-                Runnable { range: [28; 57), kind: Test { name: \"test_foo1\" } }]\"#,\n-        &runnables,\n-    )\n-}\n-\n-#[test]\n-fn test_runnables_one_depth_layer_module() {\n-    let (analysis, pos) = analysis_and_position(\n-        r#\"\n-        //- /lib.rs\n-        <|> //empty\n-        mod foo {\n-            mod test_mod {\n-                #[test]\n-                fn test_foo1() {}\n-            }\n-        }\n-        \"#,\n-    );\n-    let runnables = analysis.runnables(pos.file_id).unwrap();\n-    assert_eq_dbg(\n-        r#\"[Runnable { range: [23; 85), kind: TestMod { path: \"foo::test_mod\" } },\n-                Runnable { range: [46; 79), kind: Test { name: \"test_foo1\" } }]\"#,\n-        &runnables,\n-    )\n-}\n-\n-#[test]\n-fn test_runnables_multiple_depth_module() {\n-    let (analysis, pos) = analysis_and_position(\n-        r#\"\n-        //- /lib.rs\n-        <|> //empty\n-        mod foo {\n-            mod bar {\n-                mod test_mod {\n-                    #[test]\n-                    fn test_foo1() {}\n-                }\n-            }\n-        }\n-        \"#,\n-    );\n-    let runnables = analysis.runnables(pos.file_id).unwrap();\n-    assert_eq_dbg(\n-        r#\"[Runnable { range: [41; 115), kind: TestMod { path: \"foo::bar::test_mod\" } },\n-                Runnable { range: [68; 105), kind: Test { name: \"test_foo1\" } }]\"#,\n-        &runnables,\n-    )\n-}\n-\n-#[test]\n-fn test_runnables_no_test_function_in_module() {\n-    let (analysis, pos) = analysis_and_position(\n-        r#\"\n-        //- /lib.rs\n-        <|> //empty\n-        mod test_mod {\n-            fn foo1() {}\n-        }\n-        \"#,\n-    );\n-    let runnables = analysis.runnables(pos.file_id).unwrap();\n-    assert_eq_dbg(r#\"[]\"#, &runnables)\n-}"}, {"sha": "1b41e2b00913d8652e8661b58ec7bda852172365", "filename": "crates/ra_ide_api/tests/test/snapshots/test__unresolved_module_diagnostic.snap", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Ftests%2Ftest%2Fsnapshots%2Ftest__unresolved_module_diagnostic.snap", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api%2Ftests%2Ftest%2Fsnapshots%2Ftest__unresolved_module_diagnostic.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Ftests%2Ftest%2Fsnapshots%2Ftest__unresolved_module_diagnostic.snap?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -0,0 +1,26 @@\n+Created: 2019-01-15T11:15:20.891129945+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/tests/test/main.rs\n+\n+[\n+    Diagnostic {\n+        message: \"unresolved module\",\n+        range: [4; 7),\n+        fix: Some(\n+            SourceChange {\n+                label: \"create module\",\n+                source_file_edits: [],\n+                file_system_edits: [\n+                    CreateFile {\n+                        source_root: SourceRootId(\n+                            0\n+                        ),\n+                        path: \"foo.rs\"\n+                    }\n+                ],\n+                cursor_position: None\n+            }\n+        ),\n+        severity: Error\n+    }\n+]"}, {"sha": "16cf228e7bab5d3bba819a67e4eac30314398c47", "filename": "crates/ra_ide_api_light/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api_light%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api_light%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2FCargo.toml?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -17,3 +17,4 @@ ra_text_edit = { path = \"../ra_text_edit\" }\n [dev-dependencies]\n test_utils = { path = \"../test_utils\" }\n proptest = \"0.8.7\"\n+insta = \"0.1.4\""}, {"sha": "9dd72701d7072b6c400ffa473a880f8be7311eab", "filename": "crates/ra_ide_api_light/src/lib.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -132,8 +132,9 @@ pub fn syntax_tree(file: &SourceFile) -> String {\n #[cfg(test)]\n mod tests {\n     use ra_syntax::AstNode;\n+    use insta::assert_debug_snapshot_matches;\n \n-    use crate::test_utils::{add_cursor, assert_eq_dbg, assert_eq_text, extract_offset};\n+    use crate::test_utils::{add_cursor, assert_eq_text, extract_offset};\n \n     use super::*;\n \n@@ -147,15 +148,7 @@ fn main() {}\n \"#,\n         );\n         let hls = highlight(file.syntax());\n-        assert_eq_dbg(\n-            r#\"[HighlightedRange { range: [1; 11), tag: \"comment\" },\n-                HighlightedRange { range: [12; 14), tag: \"keyword\" },\n-                HighlightedRange { range: [15; 19), tag: \"function\" },\n-                HighlightedRange { range: [29; 37), tag: \"macro\" },\n-                HighlightedRange { range: [38; 50), tag: \"string\" },\n-                HighlightedRange { range: [52; 54), tag: \"literal\" }]\"#,\n-            &hls,\n-        );\n+        assert_debug_snapshot_matches!(\"highlighting\", hls);\n     }\n \n     #[test]"}, {"sha": "10eb5c724e2002748fffcdc7710609c3940cb4db", "filename": "crates/ra_ide_api_light/src/snapshots/tests__file_structure.snap", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -0,0 +1,80 @@\n+Created: 2019-01-15T11:15:21.073862814+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api_light/src/structure.rs\n+\n+[\n+    StructureNode {\n+        parent: None,\n+        label: \"Foo\",\n+        navigation_range: [8; 11),\n+        node_range: [1; 26),\n+        kind: STRUCT_DEF\n+    },\n+    StructureNode {\n+        parent: Some(\n+            0\n+        ),\n+        label: \"x\",\n+        navigation_range: [18; 19),\n+        node_range: [18; 24),\n+        kind: NAMED_FIELD_DEF\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"m\",\n+        navigation_range: [32; 33),\n+        node_range: [28; 53),\n+        kind: MODULE\n+    },\n+    StructureNode {\n+        parent: Some(\n+            2\n+        ),\n+        label: \"bar\",\n+        navigation_range: [43; 46),\n+        node_range: [40; 51),\n+        kind: FN_DEF\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"E\",\n+        navigation_range: [60; 61),\n+        node_range: [55; 75),\n+        kind: ENUM_DEF\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"T\",\n+        navigation_range: [81; 82),\n+        node_range: [76; 88),\n+        kind: TYPE_DEF\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"S\",\n+        navigation_range: [96; 97),\n+        node_range: [89; 108),\n+        kind: STATIC_DEF\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"C\",\n+        navigation_range: [115; 116),\n+        node_range: [109; 127),\n+        kind: CONST_DEF\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"impl E\",\n+        navigation_range: [134; 135),\n+        node_range: [129; 138),\n+        kind: IMPL_BLOCK\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"impl fmt::Debug for E\",\n+        navigation_range: [160; 161),\n+        node_range: [140; 164),\n+        kind: IMPL_BLOCK\n+    }\n+]"}, {"sha": "d8f44a713a84150704f280ec17079981919ac95e", "filename": "crates/ra_ide_api_light/src/snapshots/tests__highlighting.snap", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__highlighting.snap", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__highlighting.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__highlighting.snap?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -0,0 +1,30 @@\n+Created: 2019-01-15T11:15:21.073858657+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api_light/src/lib.rs\n+\n+[\n+    HighlightedRange {\n+        range: [1; 11),\n+        tag: \"comment\"\n+    },\n+    HighlightedRange {\n+        range: [12; 14),\n+        tag: \"keyword\"\n+    },\n+    HighlightedRange {\n+        range: [15; 19),\n+        tag: \"function\"\n+    },\n+    HighlightedRange {\n+        range: [29; 37),\n+        tag: \"macro\"\n+    },\n+    HighlightedRange {\n+        range: [38; 50),\n+        tag: \"string\"\n+    },\n+    HighlightedRange {\n+        range: [52; 54),\n+        tag: \"literal\"\n+    }\n+]"}, {"sha": "3c6f39e16206ae4d71a9d97973c642c695b5d31e", "filename": "crates/ra_ide_api_light/src/structure.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api_light%2Fsrc%2Fstructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Fra_ide_api_light%2Fsrc%2Fstructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fstructure.rs?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -87,7 +87,7 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use test_utils::assert_eq_dbg;\n+    use insta::assert_debug_snapshot_matches;\n \n     #[test]\n     fn test_file_structure() {\n@@ -112,18 +112,6 @@ impl fmt::Debug for E {}\n \"#,\n         );\n         let structure = file_structure(&file);\n-        assert_eq_dbg(\n-            r#\"[StructureNode { parent: None, label: \"Foo\", navigation_range: [8; 11), node_range: [1; 26), kind: STRUCT_DEF },\n-                StructureNode { parent: Some(0), label: \"x\", navigation_range: [18; 19), node_range: [18; 24), kind: NAMED_FIELD_DEF },\n-                StructureNode { parent: None, label: \"m\", navigation_range: [32; 33), node_range: [28; 53), kind: MODULE },\n-                StructureNode { parent: Some(2), label: \"bar\", navigation_range: [43; 46), node_range: [40; 51), kind: FN_DEF },\n-                StructureNode { parent: None, label: \"E\", navigation_range: [60; 61), node_range: [55; 75), kind: ENUM_DEF },\n-                StructureNode { parent: None, label: \"T\", navigation_range: [81; 82), node_range: [76; 88), kind: TYPE_DEF },\n-                StructureNode { parent: None, label: \"S\", navigation_range: [96; 97), node_range: [89; 108), kind: STATIC_DEF },\n-                StructureNode { parent: None, label: \"C\", navigation_range: [115; 116), node_range: [109; 127), kind: CONST_DEF },\n-                StructureNode { parent: None, label: \"impl E\", navigation_range: [134; 135), node_range: [129; 138), kind: IMPL_BLOCK },\n-                StructureNode { parent: None, label: \"impl fmt::Debug for E\", navigation_range: [160; 161), node_range: [140; 164), kind: IMPL_BLOCK }]\"#,\n-            &structure,\n-        )\n+        assert_debug_snapshot_matches!(\"file_structure\", structure);\n     }\n }"}, {"sha": "6489033ddef119cd171e41b6fb52e95f65449752", "filename": "crates/test_utils/src/lib.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Ftest_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c/crates%2Ftest_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Flib.rs?ref=d79a9b17dc4fb132443aa4ec1ca0ab278d2a217c", "patch": "@@ -1,8 +1,6 @@\n-use std::fmt;\n use std::fs;\n use std::path::{Path, PathBuf};\n \n-use itertools::Itertools;\n use text_unit::{TextRange, TextUnit};\n use serde_json::Value;\n \n@@ -31,12 +29,6 @@ macro_rules! assert_eq_text {\n     }};\n }\n \n-pub fn assert_eq_dbg(expected: &str, actual: &impl fmt::Debug) {\n-    let actual = format!(\"{:?}\", actual);\n-    let expected = expected.lines().map(|l| l.trim()).join(\" \");\n-    assert_eq!(expected, actual);\n-}\n-\n pub fn extract_offset(text: &str) -> (TextUnit, String) {\n     match try_extract_offset(text) {\n         None => panic!(\"text should contain cursor marker\"),"}]}