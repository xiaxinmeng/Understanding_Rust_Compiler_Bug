{"sha": "e74d953bdc062d739ad06b36bcbc3228b01913f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3NGQ5NTNiZGMwNjJkNzM5YWQwNmIzNmJjYmMzMjI4YjAxOTEzZjE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-24T21:45:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-24T21:45:19Z"}, "message": "Rollup merge of #64296 - KodrAus:chore/iter_order_by, r=Centril\n\nDocument the unstable iter_order_by library feature\n\nTracking issue: #64295\n\nFollow-up for: #62205\n\nReferences the tracking issue and adds a page to the unstable book for the new unstable `iter_order_by` feature.", "tree": {"sha": "aef9e3058537db44047afea03c169d42fd5d484d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aef9e3058537db44047afea03c169d42fd5d484d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e74d953bdc062d739ad06b36bcbc3228b01913f1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdio5vCRBK7hj4Ov3rIwAAdHIIACUkTscddSs5Her/hQ48rOgc\nU8PF8e+5IkIlxh9hCNVIEijnwF2BDPN8zQASSdQ+v4IPHSl5IsW2ldqBC6A7k6Cb\nyUtooTSC2JjdTbN+zSwKWOd4KUplgfcACWmqNZ9ISxh4lYJxJ/nH/p16S2NOQU8O\nGXdVrGOrGHtymqfMBXdK3JNTsfBW6ISeQpR99zkB4zXZgNyT9m+ore/vQ4ef1KsK\ndmpZBuzpk2V3u5cYJrcXrUR/B0ROuRFW20cbcpyqxPsBKN2shTjXnLL7LiUczcyA\nMpq9q4uPusSrf171mI/CuUEDMkHvURX1+ovnehYjTiqtCkecVmFS7hr8kQEVRec=\n=J+i/\n-----END PGP SIGNATURE-----\n", "payload": "tree aef9e3058537db44047afea03c169d42fd5d484d\nparent ad0b78d2c99a83f39111ecaf60d9225201a699e4\nparent 4ea371e40bfff6254f66c9b35510be09de5db1e6\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569361519 +0200\ncommitter GitHub <noreply@github.com> 1569361519 +0200\n\nRollup merge of #64296 - KodrAus:chore/iter_order_by, r=Centril\n\nDocument the unstable iter_order_by library feature\n\nTracking issue: #64295\n\nFollow-up for: #62205\n\nReferences the tracking issue and adds a page to the unstable book for the new unstable `iter_order_by` feature.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e74d953bdc062d739ad06b36bcbc3228b01913f1", "html_url": "https://github.com/rust-lang/rust/commit/e74d953bdc062d739ad06b36bcbc3228b01913f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e74d953bdc062d739ad06b36bcbc3228b01913f1/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad0b78d2c99a83f39111ecaf60d9225201a699e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad0b78d2c99a83f39111ecaf60d9225201a699e4", "html_url": "https://github.com/rust-lang/rust/commit/ad0b78d2c99a83f39111ecaf60d9225201a699e4"}, {"sha": "4ea371e40bfff6254f66c9b35510be09de5db1e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ea371e40bfff6254f66c9b35510be09de5db1e6", "html_url": "https://github.com/rust-lang/rust/commit/4ea371e40bfff6254f66c9b35510be09de5db1e6"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "0a9e076ec58690d43bb17315898ea9cdd30e129b", "filename": "src/libcore/iter/traits/iterator.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e74d953bdc062d739ad06b36bcbc3228b01913f1/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e74d953bdc062d739ad06b36bcbc3228b01913f1/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs?ref=e74d953bdc062d739ad06b36bcbc3228b01913f1", "patch": "@@ -2581,7 +2581,7 @@ pub trait Iterator {\n     /// assert_eq!(xs.iter().cmp_by(&ys, |&x, &y| (x * x).cmp(&y)), Ordering::Equal);\n     /// assert_eq!(xs.iter().cmp_by(&ys, |&x, &y| (2 * x).cmp(&y)), Ordering::Greater);\n     /// ```\n-    #[unstable(feature = \"iter_order_by\", issue = \"0\")]\n+    #[unstable(feature = \"iter_order_by\", issue = \"64295\")]\n     fn cmp_by<I, F>(mut self, other: I, mut cmp: F) -> Ordering\n     where\n         Self: Sized,\n@@ -2664,7 +2664,7 @@ pub trait Iterator {\n     ///     Some(Ordering::Greater)\n     /// );\n     /// ```\n-    #[unstable(feature = \"iter_order_by\", issue = \"0\")]\n+    #[unstable(feature = \"iter_order_by\", issue = \"64295\")]\n     fn partial_cmp_by<I, F>(mut self, other: I, mut partial_cmp: F) -> Option<Ordering>\n     where\n         Self: Sized,\n@@ -2729,7 +2729,7 @@ pub trait Iterator {\n     ///\n     /// assert!(xs.iter().eq_by(&ys, |&x, &y| x * x == y));\n     /// ```\n-    #[unstable(feature = \"iter_order_by\", issue = \"0\")]\n+    #[unstable(feature = \"iter_order_by\", issue = \"64295\")]\n     fn eq_by<I, F>(mut self, other: I, mut eq: F) -> bool\n     where\n         Self: Sized,"}]}