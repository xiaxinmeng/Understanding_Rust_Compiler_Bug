{"sha": "96b0446b538a160c83ade3d9e5e9d2203868492d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2YjA0NDZiNTM4YTE2MGM4M2FkZTNkOWU1ZTlkMjIwMzg2ODQ5MmQ=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-10-11T15:11:33Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-10-11T15:11:33Z"}, "message": "Move `PartialOrd` impl out of rustc\n\nRustdoc's ordering requirements are probably not relevant to the rest of\nthe compiler.", "tree": {"sha": "06cdeec32ee1c4ea98b6e44090d3b930346b2269", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06cdeec32ee1c4ea98b6e44090d3b930346b2269"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96b0446b538a160c83ade3d9e5e9d2203868492d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96b0446b538a160c83ade3d9e5e9d2203868492d", "html_url": "https://github.com/rust-lang/rust/commit/96b0446b538a160c83ade3d9e5e9d2203868492d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96b0446b538a160c83ade3d9e5e9d2203868492d/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85c0479e179639180c13c5fe6a6789e6538ea891", "url": "https://api.github.com/repos/rust-lang/rust/commits/85c0479e179639180c13c5fe6a6789e6538ea891", "html_url": "https://github.com/rust-lang/rust/commit/85c0479e179639180c13c5fe6a6789e6538ea891"}], "stats": {"total": 26, "additions": 6, "deletions": 20}, "files": [{"sha": "9c309345000bbe2b96f601b7b9e91c29df6f99a1", "filename": "compiler/rustc_attr/src/builtin.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/96b0446b538a160c83ade3d9e5e9d2203868492d/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96b0446b538a160c83ade3d9e5e9d2203868492d/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs?ref=96b0446b538a160c83ade3d9e5e9d2203868492d", "patch": "@@ -9,7 +9,6 @@ use rustc_session::parse::{feature_err, ParseSess};\n use rustc_session::Session;\n use rustc_span::hygiene::Transparency;\n use rustc_span::{symbol::sym, symbol::Symbol, Span};\n-use std::cmp;\n use std::num::NonZeroU32;\n use version_check::Version;\n \n@@ -163,19 +162,6 @@ pub enum StabilityLevel {\n     Stable { since: Symbol },\n }\n \n-impl cmp::PartialOrd for StabilityLevel {\n-    // This only take into account stability, not any fields.\n-    // Therefore it is only `PartialOrd` and not `Ord`.\n-    fn partial_cmp(&self, other: &Self) -> Option<cmp::Ordering> {\n-        match (self, other) {\n-            (Self::Unstable { .. }, Self::Unstable { .. }) => Some(cmp::Ordering::Equal),\n-            (Self::Stable { .. }, Self::Stable { .. }) => Some(cmp::Ordering::Equal),\n-            (Self::Unstable { .. }, Self::Stable { .. }) => Some(cmp::Ordering::Less),\n-            (Self::Stable { .. }, Self::Unstable { .. }) => Some(cmp::Ordering::Greater),\n-        }\n-    }\n-}\n-\n impl StabilityLevel {\n     pub fn is_unstable(&self) -> bool {\n         matches!(self, StabilityLevel::Unstable { .. })"}, {"sha": "f81ea0f6d46ac89904c66bb4d13befea2ffdebd4", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/96b0446b538a160c83ade3d9e5e9d2203868492d/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96b0446b538a160c83ade3d9e5e9d2203868492d/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=96b0446b538a160c83ade3d9e5e9d2203868492d", "patch": "@@ -1984,12 +1984,12 @@ fn item_module(w: &mut Buffer, cx: &Context, item: &clean::Item, items: &[clean:\n         }\n         let s1 = i1.stability.as_ref().map(|s| s.level);\n         let s2 = i2.stability.as_ref().map(|s| s.level);\n-        match (s1, s2) {\n-            (Some(a), Some(b)) => match a.partial_cmp(&b) {\n-                Some(Ordering::Equal) | None => {}\n-                Some(other) => return other,\n-            },\n-            _ => {}\n+        if let (Some(a), Some(b)) = (s1, s2) {\n+            match (a.is_stable(), b.is_stable()) {\n+                (true, true) | (false, false) => {}\n+                (false, true) => return Ordering::Less,\n+                (true, false) => return Ordering::Greater,\n+            }\n         }\n         let lhs = i1.name.as_ref().map_or(\"\", |s| &**s);\n         let rhs = i2.name.as_ref().map_or(\"\", |s| &**s);"}]}