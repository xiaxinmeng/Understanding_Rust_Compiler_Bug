{"sha": "8d36e8b32c800e6227ab2ffa7fb64729313e10a1", "node_id": "C_kwDOAAsO6NoAKDhkMzZlOGIzMmM4MDBlNjIyN2FiMmZmYTdmYjY0NzI5MzEzZTEwYTE", "commit": {"author": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2021-12-25T23:45:33Z"}, "committer": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2022-06-06T18:15:19Z"}, "message": "Add weak memory config option", "tree": {"sha": "afcad613712e3005d11ebbcadae6bbdb83863a92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afcad613712e3005d11ebbcadae6bbdb83863a92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d36e8b32c800e6227ab2ffa7fb64729313e10a1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE7dcbcBMl24/h63ldGBtJ+fOPM3QFAmKeRDcACgkQGBtJ+fOP\nM3TtIAv/TUF/sMyOawddxpO3FJZJZWteM4tAblaalKu7EpdKgfjsWdiGh7d2Xwz3\niEKlnFK9LLv7E5NJaDvABNXVtxc9iiG3eyB0ltMeHcAFpZCynWMOzjgLQ0NLwFzY\n3OD5mxEiFKMZSijiDaWpBHbqDLbf7BwfCvg1R4E2FDmRmbD3llrdce72TKKz9y/A\nT7XeTVC4492LO82OuxGqtONUdoVJRRRy7OOTP2lOo+oo6b5IwXDVdZgEeoROmzxk\nr/wO/d0DuCcGYzQnOISszcbe5Wp2EFpbb5SJlhk720x3ptv13ZiOdOlEzRj3dZkP\no2iBQnob0DoGfeawG9uInNKj6aXq29vuLZU7gDJ6lmthrWY9mp1lqZz8kL1laYA4\njwoD0n7bFkvb2F8zCxO/QtSEM0ZxgivR2e4PA78p1eDuwop6/jSX99fufsm7vblL\nMY4vRSReiJyLcBtDJQkpXgy7viVMOTDdb9CkDxgfxQupZyif5EkraQrxWFGM+C21\na0RfHaTk\n=f9UK\n-----END PGP SIGNATURE-----", "payload": "tree afcad613712e3005d11ebbcadae6bbdb83863a92\nparent 3361eabf3882578207a483f2cee631646e80eabc\nauthor Andy Wang <cbeuw.andy@gmail.com> 1640475933 +0000\ncommitter Andy Wang <cbeuw.andy@gmail.com> 1654539319 +0100\n\nAdd weak memory config option\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d36e8b32c800e6227ab2ffa7fb64729313e10a1", "html_url": "https://github.com/rust-lang/rust/commit/8d36e8b32c800e6227ab2ffa7fb64729313e10a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d36e8b32c800e6227ab2ffa7fb64729313e10a1/comments", "author": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3361eabf3882578207a483f2cee631646e80eabc", "url": "https://api.github.com/repos/rust-lang/rust/commits/3361eabf3882578207a483f2cee631646e80eabc", "html_url": "https://github.com/rust-lang/rust/commit/3361eabf3882578207a483f2cee631646e80eabc"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "907e620404b9bba5817bfc32a25abfef66719540", "filename": "src/bin/miri.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8d36e8b32c800e6227ab2ffa7fb64729313e10a1/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d36e8b32c800e6227ab2ffa7fb64729313e10a1/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=8d36e8b32c800e6227ab2ffa7fb64729313e10a1", "patch": "@@ -318,6 +318,7 @@ fn main() {\n             miri_config.stacked_borrows = false;\n         } else if arg == \"-Zmiri-disable-data-race-detector\" {\n             miri_config.data_race_detector = false;\n+            miri_config.weak_memory_emulation = false;\n         } else if arg == \"-Zmiri-disable-alignment-check\" {\n             miri_config.check_alignment = miri::AlignmentCheck::None;\n         } else if arg == \"-Zmiri-symbolic-alignment-check\" {\n@@ -340,6 +341,8 @@ fn main() {\n                 isolation_enabled = Some(false);\n             }\n             miri_config.isolated_op = miri::IsolatedOp::Allow;\n+        } else if arg == \"-Zmiri-disable-weak-memory-emulation\" {\n+            miri_config.weak_memory_emulation = false;\n         } else if let Some(param) = arg.strip_prefix(\"-Zmiri-isolation-error=\") {\n             if matches!(isolation_enabled, Some(false)) {\n                 panic!(\"-Zmiri-isolation-error cannot be used along with -Zmiri-disable-isolation\");"}, {"sha": "bdf527a0d13e0565a479859ca39d8b6ce2750555", "filename": "src/eval.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8d36e8b32c800e6227ab2ffa7fb64729313e10a1/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d36e8b32c800e6227ab2ffa7fb64729313e10a1/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=8d36e8b32c800e6227ab2ffa7fb64729313e10a1", "patch": "@@ -105,6 +105,8 @@ pub struct MiriConfig {\n     pub tag_raw: bool,\n     /// Determine if data race detection should be enabled\n     pub data_race_detector: bool,\n+    /// Determine if weak memory emulation should be enabled. Requires data race detection to be enabled\n+    pub weak_memory_emulation: bool,\n     /// Rate of spurious failures for compare_exchange_weak atomic operations,\n     /// between 0.0 and 1.0, defaulting to 0.8 (80% chance of failure).\n     pub cmpxchg_weak_failure_rate: f64,\n@@ -142,6 +144,7 @@ impl Default for MiriConfig {\n             tracked_alloc_ids: HashSet::default(),\n             tag_raw: false,\n             data_race_detector: true,\n+            weak_memory_emulation: true,\n             cmpxchg_weak_failure_rate: 0.8,\n             measureme_out: None,\n             panic_on_unsupported: false,"}, {"sha": "2060bba0b8530bf56601ad102f95f95c54848144", "filename": "src/machine.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8d36e8b32c800e6227ab2ffa7fb64729313e10a1/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d36e8b32c800e6227ab2ffa7fb64729313e10a1/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=8d36e8b32c800e6227ab2ffa7fb64729313e10a1", "patch": "@@ -323,6 +323,9 @@ pub struct Evaluator<'mir, 'tcx> {\n \n     /// Corresponds to -Zmiri-mute-stdout-stderr and doesn't write the output but acts as if it succeeded.\n     pub(crate) mute_stdout_stderr: bool,\n+\n+    /// Whether weak memory emulation is enabled\n+    pub(crate) weak_memory: bool,\n }\n \n impl<'mir, 'tcx> Evaluator<'mir, 'tcx> {\n@@ -378,6 +381,7 @@ impl<'mir, 'tcx> Evaluator<'mir, 'tcx> {\n             check_alignment: config.check_alignment,\n             cmpxchg_weak_failure_rate: config.cmpxchg_weak_failure_rate,\n             mute_stdout_stderr: config.mute_stdout_stderr,\n+            weak_memory: config.weak_memory_emulation,\n         }\n     }\n "}]}