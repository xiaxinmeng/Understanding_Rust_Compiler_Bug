{"sha": "477ecc51caea03c22eb6c7dedcf5656593b71fb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3N2VjYzUxY2FlYTAzYzIyZWI2YzdkZWRjZjU2NTY1OTNiNzFmYjA=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-06-23T23:21:53Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-06-24T21:53:30Z"}, "message": "Generalize generator-debug test a bit\n\nDon't be so reliant on particular line ordering (though FileCheck makes\nthis hard in general, IMO). Also disable for MSVC.", "tree": {"sha": "7a0929e4377194ec65ceecfb9ffb1b889fbe3aca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a0929e4377194ec65ceecfb9ffb1b889fbe3aca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/477ecc51caea03c22eb6c7dedcf5656593b71fb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/477ecc51caea03c22eb6c7dedcf5656593b71fb0", "html_url": "https://github.com/rust-lang/rust/commit/477ecc51caea03c22eb6c7dedcf5656593b71fb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/477ecc51caea03c22eb6c7dedcf5656593b71fb0/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "547d86307c6acd10520af96f8e2974522c50ac1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/547d86307c6acd10520af96f8e2974522c50ac1e", "html_url": "https://github.com/rust-lang/rust/commit/547d86307c6acd10520af96f8e2974522c50ac1e"}], "stats": {"total": 40, "additions": 19, "deletions": 21}, "files": [{"sha": "fa16a460dde4dddffa3984a962b5aad435b2ee78", "filename": "src/test/codegen/generator-debug.rs", "status": "modified", "additions": 19, "deletions": 21, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/477ecc51caea03c22eb6c7dedcf5656593b71fb0/src%2Ftest%2Fcodegen%2Fgenerator-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/477ecc51caea03c22eb6c7dedcf5656593b71fb0/src%2Ftest%2Fcodegen%2Fgenerator-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fgenerator-debug.rs?ref=477ecc51caea03c22eb6c7dedcf5656593b71fb0", "patch": "@@ -5,6 +5,7 @@\n //\n // ignore-tidy-linelength\n // compile-flags: -C debuginfo=2 --edition=2018\n+// ignore-msvc\n \n #![feature(generators, generator_trait)]\n use std::ops::Generator;\n@@ -26,66 +27,63 @@ async fn async_fn_test() {\n \n // FIXME: We need \"checksum\" to prevent matching with the wrong (duplicate) file\n //        metadata, even when -C codegen-units=1.\n-// CHECK:      [[FILE:!.*]] = !DIFile(filename: \"{{.*}}/generator-debug.rs\", {{.*}}, checksum:\n+// CHECK-DAG:  [[FILE:!.*]] = !DIFile(filename: \"{{.*}}generator-debug.rs\", {{.*}}, checksum:\n \n-// CHECK:      [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"generator-0\", scope: [[FN:![0-9]*]],\n-// CHECK-SAME: flags: DIFlagArtificial\n-// CHECK:      [[FN]] = !DINamespace(name: \"generator_test\"\n-// CHECK:      [[VARIANT:!.*]] = !DICompositeType(tag: DW_TAG_variant_part, scope: [[FN]],\n+// CHECK-DAG:  [[GEN_FN:!.*]] = !DINamespace(name: \"generator_test\"\n+// CHECK-DAG:  [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"generator-0\", scope: [[GEN_FN]], {{.*}}flags: DIFlagArtificial\n+// CHECK:      [[VARIANT:!.*]] = !DICompositeType(tag: DW_TAG_variant_part, scope: [[GEN_FN]],\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK-SAME: discriminator: [[DISC:![0-9]*]]\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"0\", scope: [[VARIANT]],\n-// CHECK-SAME: file: [[FILE]], line: 13,\n+// CHECK-SAME: file: [[FILE]], line: 14,\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DICompositeType(tag: DW_TAG_structure_type, name: \"Unresumed\", scope: [[GEN]],\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"1\", scope: [[VARIANT]],\n-// CHECK-SAME: file: [[FILE]], line: 17,\n+// CHECK-SAME: file: [[FILE]], line: 18,\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"2\", scope: [[VARIANT]],\n-// CHECK-SAME: file: [[FILE]], line: 17,\n+// CHECK-SAME: file: [[FILE]], line: 18,\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"3\", scope: [[VARIANT]],\n-// CHECK-SAME: file: [[FILE]], line: 14,\n+// CHECK-SAME: file: [[FILE]], line: 15,\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"4\", scope: [[VARIANT]],\n-// CHECK-SAME: file: [[FILE]], line: 16,\n+// CHECK-SAME: file: [[FILE]], line: 17,\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      [[S1:!.*]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"Suspend1\", scope: [[GEN]],\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"s\", scope: [[S1]]\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      [[DISC]] = !DIDerivedType(tag: DW_TAG_member, name: \"__state\", scope: [[FN]],\n+// CHECK:      [[DISC]] = !DIDerivedType(tag: DW_TAG_member, name: \"__state\", scope: [[GEN_FN]],\n // CHECK-SAME: flags: DIFlagArtificial\n \n-// CHECK:      [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"generator-0\", scope: [[FN:![0-9]*]],\n-// CHECK-SAME: flags: DIFlagArtificial\n-// CHECK:      [[FN]] = !DINamespace(name: \"async_fn_test\"\n-// CHECK:      [[VARIANT:!.*]] = !DICompositeType(tag: DW_TAG_variant_part, scope: [[FN]],\n+// CHECK-DAG:  [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"generator-0\", scope: [[ASYNC_FN:![0-9]*]], {{.*}}flags: DIFlagArtificial\n+// CHECK:      [[VARIANT:!.*]] = !DICompositeType(tag: DW_TAG_variant_part, scope: [[ASYNC_FN]],\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK-SAME: discriminator: [[DISC:![0-9]*]]\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"0\", scope: [[VARIANT]],\n-// CHECK-SAME: file: [[FILE]], line: 21,\n+// CHECK-SAME: file: [[FILE]], line: 22,\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"1\", scope: [[VARIANT]],\n-// CHECK-SAME: file: [[FILE]], line: 25,\n+// CHECK-SAME: file: [[FILE]], line: 26,\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"2\", scope: [[VARIANT]],\n-// CHECK-SAME: file: [[FILE]], line: 25,\n+// CHECK-SAME: file: [[FILE]], line: 26,\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"3\", scope: [[VARIANT]],\n-// CHECK-SAME: file: [[FILE]], line: 22,\n+// CHECK-SAME: file: [[FILE]], line: 23,\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"4\", scope: [[VARIANT]],\n-// CHECK-SAME: file: [[FILE]], line: 24,\n+// CHECK-SAME: file: [[FILE]], line: 25,\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      [[S1:!.*]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"Suspend1\", scope: [[GEN]],\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"s\", scope: [[S1]]\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      [[DISC]] = !DIDerivedType(tag: DW_TAG_member, name: \"__state\", scope: [[FN]],\n+// CHECK:      [[DISC]] = !DIDerivedType(tag: DW_TAG_member, name: \"__state\", scope: [[ASYNC_FN]],\n // CHECK-SAME: flags: DIFlagArtificial\n \n fn main() {"}]}