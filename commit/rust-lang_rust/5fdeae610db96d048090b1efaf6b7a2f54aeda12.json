{"sha": "5fdeae610db96d048090b1efaf6b7a2f54aeda12", "node_id": "C_kwDOAAsO6NoAKDVmZGVhZTYxMGRiOTZkMDQ4MDkwYjFlZmFmNmI3YTJmNTRhZWRhMTI", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-05-23T13:11:17Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-05-23T14:54:30Z"}, "message": "codegen: allow extra attributes to functions when panic=abort\n\nWhen compiling with panic=abort (or using a target that doesn't have\nunwinding support), the compiler adds the \"nounwind\" attribute to\nfunctions. This results in a different LLVM IR, which results in a #NNN\nadded after the function name:\n\n    tail call void @bar() #13, !dbg !467\n    attributes #13 = { nounwind }\n\n...instead of:\n\n    tail call void @bar(), !dbg !467\n\nThis commit changes the matchers to swallow the #NNN, as it's not needed\nfor these specific tests.", "tree": {"sha": "5f374da14c031a5af61d6c0b64adb92c96827ff0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f374da14c031a5af61d6c0b64adb92c96827ff0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fdeae610db96d048090b1efaf6b7a2f54aeda12", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmRs06YACgkQzXazX3c0\ndp7F3w//etxoIjrDYZQ6GqKF7jIZHH7TsLMGT4kwGStOEUrHe6cxRCl+TXk9o2hQ\n3YW8tmULItDAZTwk250kqjGsGe2AqB5HPUk8m9mC3wV4tGhdmOysh7hrG5WPMTGc\nqJAwm4AEPBl27JxG4cxIrlfXCLyQxHXVsWxVOQDTBLmTRuaS4wsXuvUaqLxhBG6r\ngtDgQ/Sk13KsGIp/NFfJZV1s68g8sG2WErurhAiPFpyQA5ugvFKWFnUY6VJZCf2j\n5ZtGX/EeQDEm8tr/nxvxdZv2wqYRiNyN9cKb52Et5ne1V98QjvjNPK/TMry5Mp8t\nQ0Vad7GD/09lsNqRrNEF3ajFIVvT1g6lY5jSmGe0imS0JgTQSFFoeWLdG6y9p2wy\n/kK1JQTHdS7jtSesTMe2G/zQxA0yX7EA/SXfvx/3GD3oy3amC7vRmWAruRJNo+H0\ndUUHlRBBI2989zGw92uouYDOK7Ji5Z0GHkO2sbaNW3/sHY9OkTbkugpZ6gU9k/WH\ntj7bLzoWxB5czfFIfEo7Bu69QCn7UD2d+rhj3FrhvZDtJoDODDtk2pQ5DDZoiUfA\nbFUdMMlb+0tEwWEM8kis+fPG4+MX7SfI8CzckN4e/imsiA99AtZGfC/Jp+9xTpkB\nIr2p0XRC1y+q0XZ5I6pRIEjoRkhBQgGJtTCJ51KaGCA0FEjhfA4=\n=FUPI\n-----END PGP SIGNATURE-----", "payload": "tree 5f374da14c031a5af61d6c0b64adb92c96827ff0\nparent f3d597b31c0f101a02c230798afa31a36bdacbc6\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1684847477 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1684853670 +0200\n\ncodegen: allow extra attributes to functions when panic=abort\n\nWhen compiling with panic=abort (or using a target that doesn't have\nunwinding support), the compiler adds the \"nounwind\" attribute to\nfunctions. This results in a different LLVM IR, which results in a #NNN\nadded after the function name:\n\n    tail call void @bar() #13, !dbg !467\n    attributes #13 = { nounwind }\n\n...instead of:\n\n    tail call void @bar(), !dbg !467\n\nThis commit changes the matchers to swallow the #NNN, as it's not needed\nfor these specific tests.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fdeae610db96d048090b1efaf6b7a2f54aeda12", "html_url": "https://github.com/rust-lang/rust/commit/5fdeae610db96d048090b1efaf6b7a2f54aeda12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fdeae610db96d048090b1efaf6b7a2f54aeda12/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3d597b31c0f101a02c230798afa31a36bdacbc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3d597b31c0f101a02c230798afa31a36bdacbc6", "html_url": "https://github.com/rust-lang/rust/commit/f3d597b31c0f101a02c230798afa31a36bdacbc6"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "07cc0c963717e6920edc4023368f3857c543e64f", "filename": "tests/codegen/call-metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5fdeae610db96d048090b1efaf6b7a2f54aeda12/tests%2Fcodegen%2Fcall-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fdeae610db96d048090b1efaf6b7a2f54aeda12/tests%2Fcodegen%2Fcall-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fcall-metadata.rs?ref=5fdeae610db96d048090b1efaf6b7a2f54aeda12", "patch": "@@ -6,7 +6,7 @@\n #![crate_type = \"lib\"]\n \n pub fn test() {\n-    // CHECK: call noundef i8 @some_true(), !range [[R0:![0-9]+]]\n+    // CHECK: call noundef i8 @some_true(){{( #[0-9]+)?}}, !range [[R0:![0-9]+]]\n     // CHECK: [[R0]] = !{i8 0, i8 3}\n     some_true();\n }"}, {"sha": "f3b19a2eb2f42318f56149adf322d11d078dabd8", "filename": "tests/codegen/debug-column.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5fdeae610db96d048090b1efaf6b7a2f54aeda12/tests%2Fcodegen%2Fdebug-column.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fdeae610db96d048090b1efaf6b7a2f54aeda12/tests%2Fcodegen%2Fdebug-column.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdebug-column.rs?ref=5fdeae610db96d048090b1efaf6b7a2f54aeda12", "patch": "@@ -6,11 +6,11 @@\n fn main() {\n     unsafe {\n         // Column numbers are 1-based. Regression test for #65437.\n-        // CHECK: call void @giraffe(), !dbg [[A:!.*]]\n+        // CHECK: call void @giraffe(){{( #[0-9]+)?}}, !dbg [[A:!.*]]\n         giraffe();\n \n         // Column numbers use byte offests. Regression test for #67360\n-        // CHECK: call void @turtle(), !dbg [[B:!.*]]\n+        // CHECK: call void @turtle(){{( #[0-9]+)?}}, !dbg [[B:!.*]]\n /* \u017c */ turtle();\n \n         // CHECK: [[A]] = !DILocation(line: 10, column: 9,"}, {"sha": "d13527b95213052cb3f5333c3dadca9f32279a50", "filename": "tests/codegen/mir-inlined-line-numbers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5fdeae610db96d048090b1efaf6b7a2f54aeda12/tests%2Fcodegen%2Fmir-inlined-line-numbers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fdeae610db96d048090b1efaf6b7a2f54aeda12/tests%2Fcodegen%2Fmir-inlined-line-numbers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fmir-inlined-line-numbers.rs?ref=5fdeae610db96d048090b1efaf6b7a2f54aeda12", "patch": "@@ -19,7 +19,7 @@ pub fn example() {\n }\n \n // CHECK-LABEL: @example\n-// CHECK:   tail call void @bar(), !dbg [[DBG_ID:![0-9]+]]\n+// CHECK:   tail call void @bar(){{( #[0-9]+)?}}, !dbg [[DBG_ID:![0-9]+]]\n // CHECK: [[DBG_ID]] = !DILocation(line: 7,\n // CHECK-SAME:                     inlinedAt: [[INLINE_ID:![0-9]+]])\n // CHECK: [[INLINE_ID]] = !DILocation(line: 18,"}]}