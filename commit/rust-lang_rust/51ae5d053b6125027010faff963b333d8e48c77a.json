{"sha": "51ae5d053b6125027010faff963b333d8e48c77a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxYWU1ZDA1M2I2MTI1MDI3MDEwZmFmZjk2M2IzMzNkOGU0OGM3N2E=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-05T01:59:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-05T01:59:52Z"}, "message": "Rollup merge of #64148 - guanqun:typo-fix, r=zackmdavis\n\nfix a few typos in comments", "tree": {"sha": "df8c02fb78ed123bf2e2e65501a037753fe6f4fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df8c02fb78ed123bf2e2e65501a037753fe6f4fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51ae5d053b6125027010faff963b333d8e48c77a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdcGwYCRBK7hj4Ov3rIwAAdHIIAHnIBl0Ac3sd0MSlM3+7FdKf\ntlnzEjCnO9dEtLLyivh6YteBDYNIsdGuI1V2xtGXRmn5NDaibRjGIs90IbVYJMkI\nQGZp79RJK+BbUiPDdp7v4LVgitNjMHEbVWMK7Isemk3YaYH5Ug4DdeHKQwIW9oCs\nv6dOZZClyrwMe7B7CSUBd7B4rUKksR5oL3H8wZ1M0hyxwbc7ODWv+KmLS692TnVF\nGVeOody7B0TIdtp3aRi+z3aKpQ4FAtVtQL0T/lnRgkMOAZwTRxt6fUv16oJLhfah\nK2fYTr3vayraauDWTHf91NJ6OVpfIGh7lVuWfHBC1sjErF7lHjwVcLiCnr21hOc=\n=OITO\n-----END PGP SIGNATURE-----\n", "payload": "tree df8c02fb78ed123bf2e2e65501a037753fe6f4fe\nparent a0f0a96e5d1b252a5d6e17e01e2467cb0eb012ee\nparent 8e067243e450528c9c61f8f0e5f91e3fc7ec707d\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1567648792 +0200\ncommitter GitHub <noreply@github.com> 1567648792 +0200\n\nRollup merge of #64148 - guanqun:typo-fix, r=zackmdavis\n\nfix a few typos in comments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51ae5d053b6125027010faff963b333d8e48c77a", "html_url": "https://github.com/rust-lang/rust/commit/51ae5d053b6125027010faff963b333d8e48c77a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51ae5d053b6125027010faff963b333d8e48c77a/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0f0a96e5d1b252a5d6e17e01e2467cb0eb012ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0f0a96e5d1b252a5d6e17e01e2467cb0eb012ee", "html_url": "https://github.com/rust-lang/rust/commit/a0f0a96e5d1b252a5d6e17e01e2467cb0eb012ee"}, {"sha": "8e067243e450528c9c61f8f0e5f91e3fc7ec707d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e067243e450528c9c61f8f0e5f91e3fc7ec707d", "html_url": "https://github.com/rust-lang/rust/commit/8e067243e450528c9c61f8f0e5f91e3fc7ec707d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "62a3757757b800f9ca77d60cdbe1ed62d7aba071", "filename": "src/librustc_llvm/build.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51ae5d053b6125027010faff963b333d8e48c77a/src%2Flibrustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51ae5d053b6125027010faff963b333d8e48c77a/src%2Flibrustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fbuild.rs?ref=51ae5d053b6125027010faff963b333d8e48c77a", "patch": "@@ -54,15 +54,15 @@ fn main() {\n     // LLVM are compiled the same way, but for us that's typically the case.\n     //\n     // We *want* detect this cross compiling situation by asking llvm-config\n-    // what it's host-target is. If that's not the TARGET, then we're cross\n+    // what its host-target is. If that's not the TARGET, then we're cross\n     // compiling. Unfortunately `llvm-config` seems either be buggy, or we're\n     // misconfiguring it, because the `i686-pc-windows-gnu` build of LLVM will\n     // report itself with a `--host-target` of `x86_64-pc-windows-gnu`. This\n     // tricks us into thinking we're doing a cross build when we aren't, so\n     // havoc ensues.\n     //\n     // In any case, if we're cross compiling, this generally just means that we\n-    // can't trust all the output of llvm-config becaues it might be targeted\n+    // can't trust all the output of llvm-config because it might be targeted\n     // for the host rather than the target. As a result a bunch of blocks below\n     // are gated on `if !is_crossed`\n     let target = env::var(\"TARGET\").expect(\"TARGET was not set\");\n@@ -166,7 +166,7 @@ fn main() {\n \n     let (llvm_kind, llvm_link_arg) = detect_llvm_link();\n \n-    // Link in all LLVM libraries, if we're uwring the \"wrong\" llvm-config then\n+    // Link in all LLVM libraries, if we're using the \"wrong\" llvm-config then\n     // we don't pick up system libs because unfortunately they're for the host\n     // of llvm-config, not the target that we're attempting to link.\n     let mut cmd = Command::new(&llvm_config);"}]}