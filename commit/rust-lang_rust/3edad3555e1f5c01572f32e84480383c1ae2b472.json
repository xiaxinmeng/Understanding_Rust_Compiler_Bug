{"sha": "3edad3555e1f5c01572f32e84480383c1ae2b472", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZGFkMzU1NWUxZjVjMDE1NzJmMzJlODQ0ODAzODNjMWFlMmI0NzI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-12T10:50:37Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-13T03:24:24Z"}, "message": "core: Add iter::count", "tree": {"sha": "c8e021b1384a6d311c12c4acddeaebac28f379f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8e021b1384a6d311c12c4acddeaebac28f379f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3edad3555e1f5c01572f32e84480383c1ae2b472", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3edad3555e1f5c01572f32e84480383c1ae2b472", "html_url": "https://github.com/rust-lang/rust/commit/3edad3555e1f5c01572f32e84480383c1ae2b472", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3edad3555e1f5c01572f32e84480383c1ae2b472/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85175d639f0b40062d2741f4918df48aee3ef758", "url": "https://api.github.com/repos/rust-lang/rust/commits/85175d639f0b40062d2741f4918df48aee3ef758", "html_url": "https://github.com/rust-lang/rust/commit/85175d639f0b40062d2741f4918df48aee3ef758"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "6af10bd8a35202676540b64986e160a46db4cb7b", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3edad3555e1f5c01572f32e84480383c1ae2b472/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3edad3555e1f5c01572f32e84480383c1ae2b472/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=3edad3555e1f5c01572f32e84480383c1ae2b472", "patch": "@@ -82,6 +82,16 @@ fn reverse<A:copy,IA:iterable<A>>(self: IA, blk: fn(A)) {\n     vec::riter(to_list(self), blk)\n }\n \n+fn count<A,IA:iterable<A>>(self: IA, x: A) -> uint {\n+    foldl(self, 0u) {|count, value|\n+        if value == x {\n+            count + 1u\n+        } else {\n+            count\n+        }\n+    }\n+}\n+\n fn repeat(times: uint, blk: fn()) {\n     let i = 0u;\n     while i < times {\n@@ -223,4 +233,9 @@ fn test_max_empty() {\n #[test]\n fn test_reverse() {\n     assert to_list(bind reverse([1, 2, 3], _)) == [3, 2, 1];\n+}\n+\n+#[test]\n+fn test_count() {\n+    assert count([1, 2, 1, 2, 1], 1) == 3u;\n }\n\\ No newline at end of file"}]}