{"sha": "3f4d91514733c81b41a2f7249cf7a87e997de2d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNGQ5MTUxNDczM2M4MWI0MWEyZjcyNDljZjdhODdlOTk3ZGUyZDc=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-21T03:38:09Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-21T03:38:09Z"}, "message": "Rollup merge of #33679 - Manishearth:rustdoc-readmore-impls, r=alexcrichton\n\nrustdoc: Add doc snippets for trait impls, with a read more link\n\nThe read more link only appears if the documentation is more than one line long.\n\n![screenshot from 2016-05-17 06 54 14](https://cloud.githubusercontent.com/assets/1617736/15308544/4c2ba0ce-1bfc-11e6-9add-29de8dc7ac6e.png)\n\nIt currently does not appear on non-defaulted methods, since you can document them directly. I could make it so that default documentation gets forwarded if regular docs don't exist.\n\nFixes #33672\n\nr? @alexcrichton\n\ncc @steveklabnik", "tree": {"sha": "551e7ab3ac3328cebc3378b2437f495863e569ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/551e7ab3ac3328cebc3378b2437f495863e569ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f4d91514733c81b41a2f7249cf7a87e997de2d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f4d91514733c81b41a2f7249cf7a87e997de2d7", "html_url": "https://github.com/rust-lang/rust/commit/3f4d91514733c81b41a2f7249cf7a87e997de2d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f4d91514733c81b41a2f7249cf7a87e997de2d7/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87a22885a0157ff820b0e4e1b7f4a48e06cdfb51", "url": "https://api.github.com/repos/rust-lang/rust/commits/87a22885a0157ff820b0e4e1b7f4a48e06cdfb51", "html_url": "https://github.com/rust-lang/rust/commit/87a22885a0157ff820b0e4e1b7f4a48e06cdfb51"}, {"sha": "9ce018bafbda6f1d8484adf4796a48e5cf9093bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ce018bafbda6f1d8484adf4796a48e5cf9093bb", "html_url": "https://github.com/rust-lang/rust/commit/9ce018bafbda6f1d8484adf4796a48e5cf9093bb"}], "stats": {"total": 80, "additions": 62, "deletions": 18}, "files": [{"sha": "7357ff3abac131e96c76ffcc45d71863b67d6032", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 43, "deletions": 12, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/3f4d91514733c81b41a2f7249cf7a87e997de2d7/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4d91514733c81b41a2f7249cf7a87e997de2d7/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=3f4d91514733c81b41a2f7249cf7a87e997de2d7", "patch": "@@ -1658,6 +1658,19 @@ fn document(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item) -> fmt::Re\n     Ok(())\n }\n \n+fn document_short(w: &mut fmt::Formatter, item: &clean::Item, link: AssocItemLink) -> fmt::Result {\n+    if let Some(s) = item.doc_value() {\n+        let markdown = if s.contains('\\n') {\n+            format!(\"{} [Read more]({})\",\n+                    &plain_summary_line(Some(s)), naive_assoc_href(item, link))\n+        } else {\n+            format!(\"{}\", &plain_summary_line(Some(s)))\n+        };\n+        write!(w, \"<div class='docblock'>{}</div>\", Markdown(&markdown))?;\n+    }\n+    Ok(())\n+}\n+\n fn item_module(w: &mut fmt::Formatter, cx: &Context,\n                item: &clean::Item, items: &[clean::Item]) -> fmt::Result {\n     document(w, cx, item)?;\n@@ -2555,8 +2568,9 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n     }\n \n     fn doctraititem(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item,\n-                    link: AssocItemLink, render_static: bool, is_default_item: bool,\n-                    outer_version: Option<&str>) -> fmt::Result {\n+                    link: AssocItemLink, render_static: bool,\n+                    is_default_item: bool, outer_version: Option<&str>,\n+                    trait_: Option<&clean::Trait>) -> fmt::Result {\n         let shortty = shortty(item);\n         let name = item.name.as_ref().unwrap();\n \n@@ -2607,16 +2621,35 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n             _ => panic!(\"can't make docs for trait item with name {:?}\", item.name)\n         }\n \n-        if !is_default_item && (!is_static || render_static) {\n-            document(w, cx, item)\n-        } else {\n-            Ok(())\n+        if !is_static || render_static {\n+            if !is_default_item {\n+\n+                if item.doc_value().is_some() {\n+                    document(w, cx, item)?;\n+                } else {\n+                    // In case the item isn't documented,\n+                    // provide short documentation from the trait\n+                    if let Some(t) = trait_ {\n+                        if let Some(it) = t.items.iter()\n+                                           .find(|i| i.name == item.name) {\n+                            document_short(w, it, link)?;\n+                        }\n+                    }\n+                }\n+            } else {\n+                document_short(w, item, link)?;\n+            }\n         }\n+        Ok(())\n     }\n \n+    let traits = &cache().traits;\n+    let trait_ = i.trait_did().and_then(|did| traits.get(&did));\n+\n     write!(w, \"<div class='impl-items'>\")?;\n     for trait_item in &i.inner_impl().items {\n-        doctraititem(w, cx, trait_item, link, render_header, false, outer_version)?;\n+        doctraititem(w, cx, trait_item, link, render_header,\n+                     false, outer_version, trait_)?;\n     }\n \n     fn render_default_items(w: &mut fmt::Formatter,\n@@ -2634,17 +2667,15 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n             let assoc_link = AssocItemLink::GotoSource(did, &i.provided_trait_methods);\n \n             doctraititem(w, cx, trait_item, assoc_link, render_static, true,\n-                         outer_version)?;\n+                         outer_version, None)?;\n         }\n         Ok(())\n     }\n \n     // If we've implemented a trait, then also emit documentation for all\n     // default items which weren't overridden in the implementation block.\n-    if let Some(did) = i.trait_did() {\n-        if let Some(t) = cache().traits.get(&did) {\n-            render_default_items(w, cx, t, &i.inner_impl(), render_header, outer_version)?;\n-        }\n+    if let Some(t) = trait_ {\n+        render_default_items(w, cx, t, &i.inner_impl(), render_header, outer_version)?;\n     }\n     write!(w, \"</div>\")?;\n     Ok(())"}, {"sha": "befd3161ac48683c2681477cb961d3371c52aed8", "filename": "src/test/rustdoc/manual_impl.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/3f4d91514733c81b41a2f7249cf7a87e997de2d7/src%2Ftest%2Frustdoc%2Fmanual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4d91514733c81b41a2f7249cf7a87e997de2d7/src%2Ftest%2Frustdoc%2Fmanual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmanual_impl.rs?ref=3f4d91514733c81b41a2f7249cf7a87e997de2d7", "patch": "@@ -21,13 +21,24 @@ pub trait T {\n     fn b_method(&self) -> usize {\n         self.a_method()\n     }\n+\n+    /// Docs associated with the trait c_method definition.\n+    ///\n+    /// There is another line\n+    fn c_method(&self) -> usize {\n+        self.a_method()\n+    }\n }\n \n // @has manual_impl/struct.S1.html '//*[@class=\"trait\"]' 'T'\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S1 trait implementation.'\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S1 trait a_method implementation.'\n // @!has - '//*[@class=\"docblock\"]' 'Docs associated with the trait a_method definition.'\n-// @!has - '//*[@class=\"docblock\"]' 'Docs associated with the trait b_method definition.'\n+// @has - '//*[@class=\"docblock\"]' 'Docs associated with the trait b_method definition.'\n+// @has - '//*[@class=\"docblock\"]' 'Docs associated with the trait b_method definition.'\n+// @has - '//*[@class=\"docblock\"]' 'Docs associated with the trait c_method definition.'\n+// @!has - '//*[@class=\"docblock\"]' 'There is another line'\n+// @has - '//*[@class=\"docblock\"]' 'Read more'\n pub struct S1(usize);\n \n /// Docs associated with the S1 trait implementation.\n@@ -41,9 +52,11 @@ impl T for S1 {\n // @has manual_impl/struct.S2.html '//*[@class=\"trait\"]' 'T'\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S2 trait implementation.'\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S2 trait a_method implementation.'\n-// @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S2 trait b_method implementation.'\n+// @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S2 trait c_method implementation.'\n // @!has - '//*[@class=\"docblock\"]' 'Docs associated with the trait a_method definition.'\n-// @!has - '//*[@class=\"docblock\"]' 'Docs associated with the trait b_method definition.'\n+// @!has - '//*[@class=\"docblock\"]' 'Docs associated with the trait c_method definition.'\n+// @has - '//*[@class=\"docblock\"]' 'Docs associated with the trait b_method definition.'\n+// @!has - '//*[@class=\"docblock\"]' 'Read more'\n pub struct S2(usize);\n \n /// Docs associated with the S2 trait implementation.\n@@ -53,16 +66,16 @@ impl T for S2 {\n         self.0\n     }\n \n-    /// Docs associated with the S2 trait b_method implementation.\n-    fn b_method(&self) -> usize {\n+    /// Docs associated with the S2 trait c_method implementation.\n+    fn c_method(&self) -> usize {\n         5\n     }\n }\n \n // @has manual_impl/struct.S3.html '//*[@class=\"trait\"]' 'T'\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S3 trait implementation.'\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S3 trait b_method implementation.'\n-// @!has - '//*[@class=\"docblock\"]' 'Docs associated with the trait a_method definition.'\n+// @has - '//*[@class=\"docblock\"]' 'Docs associated with the trait a_method definition.'\n pub struct S3(usize);\n \n /// Docs associated with the S3 trait implementation."}]}