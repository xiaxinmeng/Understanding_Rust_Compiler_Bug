{"sha": "e6468a82151c073130dc1c6517890bb41929ad11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NDY4YTgyMTUxYzA3MzEzMGRjMWM2NTE3ODkwYmI0MTkyOWFkMTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-24T17:01:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-24T17:01:57Z"}, "message": "auto merge of #13113 : pnkfelix/rust/correct-static-kind-doc, r=huonw\n\nWhile double-checking my understanding of the meaning of `'static`, I made the following test program:\r\n\r\n```rust\r\nfn foo<X:'static>(_x: X) { }\r\n\r\n#[cfg(not(acceptable))]\r\nfn bar() {\r\n    let a = 3;\r\n    let b = &a;\r\n    foo(b);\r\n}\r\n\r\n#[cfg(acceptable)]\r\nfn bar() {\r\n    static c : int = 4;;\r\n    let d : &'static int = &c;\r\n    foo(d);\r\n}\r\n\r\nfn main() {\r\n    bar();\r\n}\r\n```\r\n\r\nTranscript of compiling above program, illustrating that the `--cfg acceptable` variant of `bar` compiles successfully, showing that the`'static` kind bound only disallows non-`static` references, not *all* references:\r\n\r\n```\r\n% rustc --version\r\n/Users/fklock/opt/rust-dbg/bin/rustc 0.10-pre (caf17fe 2014-03-21 02:21:50 -0700)\r\nhost: x86_64-apple-darwin\r\n% rustc /tmp/s.rs\r\n/tmp/s.rs:7:5: 7:8 error: instantiating a type parameter with an incompatible type `&int`, which does not fulfill `'static`\r\n/tmp/s.rs:7     foo(b);\r\n                ^~~\r\nerror: aborting due to previous error\r\n% rustc --cfg acceptable /tmp/s.rs\r\n% ./s\r\n%\r\n```\r\n\r\n(Note that the explicit type annotation on `let d : &'static int` is necessary; it did not suffice for me to just write `let d = &'static c;`. That might be a latent bug, I am not sure yet.)\r\n\r\nAnyway, a fix to the documentation seemed prudent.", "tree": {"sha": "75b8efa0abff0babb865ea530d68dd468b752ff5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75b8efa0abff0babb865ea530d68dd468b752ff5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6468a82151c073130dc1c6517890bb41929ad11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6468a82151c073130dc1c6517890bb41929ad11", "html_url": "https://github.com/rust-lang/rust/commit/e6468a82151c073130dc1c6517890bb41929ad11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6468a82151c073130dc1c6517890bb41929ad11/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8f60d80bf573cd8b4b5680b44c9cabe2b862f78", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8f60d80bf573cd8b4b5680b44c9cabe2b862f78", "html_url": "https://github.com/rust-lang/rust/commit/f8f60d80bf573cd8b4b5680b44c9cabe2b862f78"}, {"sha": "57ac379a630d9756c71f2747debe1756ccf62c5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/57ac379a630d9756c71f2747debe1756ccf62c5f", "html_url": "https://github.com/rust-lang/rust/commit/57ac379a630d9756c71f2747debe1756ccf62c5f"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "ef66fc7abe2e154ae422acd78c2cca421dd1cc4e", "filename": "src/doc/rust.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e6468a82151c073130dc1c6517890bb41929ad11/src%2Fdoc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/e6468a82151c073130dc1c6517890bb41929ad11/src%2Fdoc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust.md?ref=e6468a82151c073130dc1c6517890bb41929ad11", "patch": "@@ -3446,8 +3446,9 @@ The kinds are:\n     This kind includes scalars and immutable references,\n     as well as structural types containing other `Pod` types.\n `'static`\n-  : Types of this kind do not contain any references;\n-    this can be a useful guarantee for code\n+  : Types of this kind do not contain any references (except for\n+    references with the `static` lifetime, which are allowed).\n+    This can be a useful guarantee for code\n     that breaks borrowing assumptions\n     using [`unsafe` operations](#unsafe-functions).\n `Drop`"}]}