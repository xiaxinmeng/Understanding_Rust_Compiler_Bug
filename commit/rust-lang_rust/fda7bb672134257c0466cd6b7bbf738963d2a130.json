{"sha": "fda7bb672134257c0466cd6b7bbf738963d2a130", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYTdiYjY3MjEzNDI1N2MwNDY2Y2Q2YjdiYmY3Mzg5NjNkMmExMzA=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-04-18T14:11:12Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-04-18T15:21:39Z"}, "message": "Fix oversight in type_use.rs\n\nCloses #2053", "tree": {"sha": "d0998df70e52005d6e17d84fa386d5d9a6046edb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0998df70e52005d6e17d84fa386d5d9a6046edb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fda7bb672134257c0466cd6b7bbf738963d2a130", "comment_count": 14, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fda7bb672134257c0466cd6b7bbf738963d2a130", "html_url": "https://github.com/rust-lang/rust/commit/fda7bb672134257c0466cd6b7bbf738963d2a130", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fda7bb672134257c0466cd6b7bbf738963d2a130/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73ea690016452d7c7d732d0fd6940d6271411606", "url": "https://api.github.com/repos/rust-lang/rust/commits/73ea690016452d7c7d732d0fd6940d6271411606", "html_url": "https://github.com/rust-lang/rust/commit/73ea690016452d7c7d732d0fd6940d6271411606"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "c7f09c9dc5fb5cf850b75f41f0a1ccad282072ab", "filename": "src/rustc/middle/trans/type_use.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fda7bb672134257c0466cd6b7bbf738963d2a130/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fda7bb672134257c0466cd6b7bbf738963d2a130/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs?ref=fda7bb672134257c0466cd6b7bbf738963d2a130", "patch": "@@ -180,6 +180,21 @@ fn mark_for_expr(cx: ctx, e: @expr) {\n         // after the chosen field\n         let base_ty = ty::node_id_to_type(cx.ccx.tcx, base.id);\n         type_needs(cx, use_repr, ty::type_autoderef(cx.ccx.tcx, base_ty));\n+\n+        option::iter(cx.ccx.maps.method_map.find(e.id)) {|mth|\n+            alt mth {\n+              typeck::method_static(did) {\n+                option::iter(cx.ccx.tcx.node_type_substs.find(e.id)) {|ts|\n+                    vec::iter2(type_uses_for(cx.ccx, did, ts.len()), ts)\n+                        {|uses, subst| type_needs(cx, uses, subst)}\n+                }\n+              }\n+              typeck::method_param(_, _, param, _) {\n+                cx.uses[param] |= use_tydesc;\n+              }\n+              typeck::method_iface(_, _) {}\n+            }\n+        }\n       }\n       expr_log(_, _, val) {\n         node_type_needs(cx, use_tydesc, val.id);"}]}