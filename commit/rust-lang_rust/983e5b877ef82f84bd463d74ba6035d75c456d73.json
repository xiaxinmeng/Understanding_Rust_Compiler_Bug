{"sha": "983e5b877ef82f84bd463d74ba6035d75c456d73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4M2U1Yjg3N2VmODJmODRiZDQ2M2Q3NGJhNjAzNWQ3NWM0NTZkNzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-16T08:35:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-16T08:35:06Z"}, "message": "Auto merge of #7566 - dswij:manual-flatten-use, r=xFrednet\n\nCheck expr usage for  `manual_flatten`\n\nFixes #6784\nFixes #7538\n\n`manual_flatten` should not trigger when `if let` match expression will be used.\n\nchangelog: [`manual_flatten`] checks for expr usage after `if let`", "tree": {"sha": "d7027a3aa0da3053baea7cbfe2763529eb53165e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7027a3aa0da3053baea7cbfe2763529eb53165e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/983e5b877ef82f84bd463d74ba6035d75c456d73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/983e5b877ef82f84bd463d74ba6035d75c456d73", "html_url": "https://github.com/rust-lang/rust/commit/983e5b877ef82f84bd463d74ba6035d75c456d73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/983e5b877ef82f84bd463d74ba6035d75c456d73/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f0c97740f10372a6dc8a085eba571822911afc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f0c97740f10372a6dc8a085eba571822911afc7", "html_url": "https://github.com/rust-lang/rust/commit/3f0c97740f10372a6dc8a085eba571822911afc7"}, {"sha": "a09bc1b6fe97839b23122ae7e386f75a1bf9c823", "url": "https://api.github.com/repos/rust-lang/rust/commits/a09bc1b6fe97839b23122ae7e386f75a1bf9c823", "html_url": "https://github.com/rust-lang/rust/commit/a09bc1b6fe97839b23122ae7e386f75a1bf9c823"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "d8153abc9653b859d30b6bfed00569345fb54b35", "filename": "clippy_lints/src/loops/manual_flatten.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/983e5b877ef82f84bd463d74ba6035d75c456d73/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/983e5b877ef82f84bd463d74ba6035d75c456d73/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs?ref=983e5b877ef82f84bd463d74ba6035d75c456d73", "patch": "@@ -1,6 +1,7 @@\n use super::utils::make_iterator_snippet;\n use super::MANUAL_FLATTEN;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::visitors::LocalUsedVisitor;\n use clippy_utils::{is_lang_ctor, path_to_local_id};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n@@ -37,16 +38,18 @@ pub(super) fn check<'tcx>(\n         if_chain! {\n             if let Some(inner_expr) = inner_expr;\n             if let ExprKind::Match(\n-                match_expr, match_arms, MatchSource::IfLetDesugar{ contains_else_clause: false }\n+                match_expr, [true_arm, _else_arm], MatchSource::IfLetDesugar{ contains_else_clause: false }\n             ) = inner_expr.kind;\n             // Ensure match_expr in `if let` statement is the same as the pat from the for-loop\n             if let PatKind::Binding(_, pat_hir_id, _, _) = pat.kind;\n             if path_to_local_id(match_expr, pat_hir_id);\n             // Ensure the `if let` statement is for the `Some` variant of `Option` or the `Ok` variant of `Result`\n-            if let PatKind::TupleStruct(ref qpath, _, _) = match_arms[0].pat.kind;\n+            if let PatKind::TupleStruct(ref qpath, _, _) = true_arm.pat.kind;\n             let some_ctor = is_lang_ctor(cx, qpath, OptionSome);\n             let ok_ctor = is_lang_ctor(cx, qpath, ResultOk);\n             if some_ctor || ok_ctor;\n+            // Ensure epxr in `if let` is not used afterwards\n+            if !LocalUsedVisitor::new(cx, pat_hir_id).check_arm(true_arm);\n             then {\n                 let if_let_type = if some_ctor { \"Some\" } else { \"Ok\" };\n                 // Prepare the error message"}, {"sha": "7db6b730963c94f6399e4ff2a69921b2a0d3ff61", "filename": "tests/ui/manual_flatten.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/983e5b877ef82f84bd463d74ba6035d75c456d73/tests%2Fui%2Fmanual_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/983e5b877ef82f84bd463d74ba6035d75c456d73/tests%2Fui%2Fmanual_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_flatten.rs?ref=983e5b877ef82f84bd463d74ba6035d75c456d73", "patch": "@@ -91,6 +91,19 @@ fn main() {\n         }\n     }\n \n+    struct Test {\n+        a: usize,\n+    }\n+\n+    let mut vec_of_struct = [Some(Test { a: 1 }), None];\n+\n+    // Usage of `if let` expression should not trigger lint\n+    for n in vec_of_struct.iter_mut() {\n+        if let Some(z) = n {\n+            *n = None;\n+        }\n+    }\n+\n     // Using manual flatten should not trigger the lint\n     for n in vec![Some(1), Some(2), Some(3)].iter().flatten() {\n         println!(\"{}\", n);"}]}