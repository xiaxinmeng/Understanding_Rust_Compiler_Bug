{"sha": "c735b979ed6f60483a66808077e1e59062c8e36f", "node_id": "C_kwDOAAsO6NoAKGM3MzViOTc5ZWQ2ZjYwNDgzYTY2ODA4MDc3ZTFlNTkwNjJjOGUzNmY", "commit": {"author": {"name": "cameron", "email": "cameron.studdstreet@gmail.com", "date": "2022-04-04T12:51:51Z"}, "committer": {"name": "cameron", "email": "cameron.studdstreet@gmail.com", "date": "2022-04-04T12:51:51Z"}, "message": "complete pattern args based on type name", "tree": {"sha": "0535be86033c40dd85b8342c2f1036c8a442e19e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0535be86033c40dd85b8342c2f1036c8a442e19e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c735b979ed6f60483a66808077e1e59062c8e36f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c735b979ed6f60483a66808077e1e59062c8e36f", "html_url": "https://github.com/rust-lang/rust/commit/c735b979ed6f60483a66808077e1e59062c8e36f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c735b979ed6f60483a66808077e1e59062c8e36f/comments", "author": {"login": "cameron1024", "id": 29902409, "node_id": "MDQ6VXNlcjI5OTAyNDA5", "avatar_url": "https://avatars.githubusercontent.com/u/29902409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cameron1024", "html_url": "https://github.com/cameron1024", "followers_url": "https://api.github.com/users/cameron1024/followers", "following_url": "https://api.github.com/users/cameron1024/following{/other_user}", "gists_url": "https://api.github.com/users/cameron1024/gists{/gist_id}", "starred_url": "https://api.github.com/users/cameron1024/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cameron1024/subscriptions", "organizations_url": "https://api.github.com/users/cameron1024/orgs", "repos_url": "https://api.github.com/users/cameron1024/repos", "events_url": "https://api.github.com/users/cameron1024/events{/privacy}", "received_events_url": "https://api.github.com/users/cameron1024/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cameron1024", "id": 29902409, "node_id": "MDQ6VXNlcjI5OTAyNDA5", "avatar_url": "https://avatars.githubusercontent.com/u/29902409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cameron1024", "html_url": "https://github.com/cameron1024", "followers_url": "https://api.github.com/users/cameron1024/followers", "following_url": "https://api.github.com/users/cameron1024/following{/other_user}", "gists_url": "https://api.github.com/users/cameron1024/gists{/gist_id}", "starred_url": "https://api.github.com/users/cameron1024/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cameron1024/subscriptions", "organizations_url": "https://api.github.com/users/cameron1024/orgs", "repos_url": "https://api.github.com/users/cameron1024/repos", "events_url": "https://api.github.com/users/cameron1024/events{/privacy}", "received_events_url": "https://api.github.com/users/cameron1024/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba9aed19c7e2fd95b337f27acddaae3c82bc8939", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba9aed19c7e2fd95b337f27acddaae3c82bc8939", "html_url": "https://github.com/rust-lang/rust/commit/ba9aed19c7e2fd95b337f27acddaae3c82bc8939"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "82688cfae6a85a1fb20ad340f92ddcb5361d48f7", "filename": "crates/ide_completion/src/render/function.rs", "status": "modified", "additions": 43, "deletions": 2, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/c735b979ed6f60483a66808077e1e59062c8e36f/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c735b979ed6f60483a66808077e1e59062c8e36f/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs?ref=c735b979ed6f60483a66808077e1e59062c8e36f", "patch": "@@ -3,7 +3,7 @@\n use hir::{db::HirDatabase, AsAssocItem, HirDisplay};\n use ide_db::{SnippetCap, SymbolKind};\n use itertools::Itertools;\n-use stdx::format_to;\n+use stdx::{format_to, to_lower_snake_case};\n use syntax::SmolStr;\n \n use crate::{\n@@ -135,7 +135,15 @@ pub(super) fn add_call_parens<'b>(\n                             let ref_ = ref_of_param(ctx, text, param.ty());\n                             f(&format_args!(\"${{{}:{}{}}}\", index + offset, ref_, text))\n                         }\n-                        None => f(&format_args!(\"${{{}:_}}\", index + offset,)),\n+                        None => {\n+                            let name = match param.ty().as_adt() {\n+                                Some(adt) => {\n+                                    to_lower_snake_case(&adt.name(ctx.db).as_text().unwrap())\n+                                }\n+                                None => \"_\".to_string(),\n+                            };\n+                            f(&format_args!(\"${{{}:{}}}\", index + offset, name))\n+                        }\n                     }\n                 });\n             match self_param {\n@@ -516,6 +524,39 @@ fn take_mutably(mut x: &i32) {}\n fn main() {\n     take_mutably(${1:x})$0\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_pattern_args_with_type_name_if_adt() {\n+        check_edit(\n+            \"qux\",\n+            r#\"\n+struct Foo {\n+    bar: i32\n+}\n+\n+fn qux(Foo { bar }: Foo) {\n+    println!(\"{}\", bar);\n+}\n+\n+fn main() {\n+  qu$0\n+}\n+\"#,\n+            r#\"\n+struct Foo {\n+    bar: i32\n+}\n+\n+fn qux(Foo { bar }: Foo) {\n+    println!(\"{}\", bar);\n+}\n+\n+fn main() {\n+  qux(${1:foo})$0\n+}\n \"#,\n         );\n     }"}]}