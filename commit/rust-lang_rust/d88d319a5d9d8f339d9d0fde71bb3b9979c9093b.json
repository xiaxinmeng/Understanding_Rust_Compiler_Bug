{"sha": "d88d319a5d9d8f339d9d0fde71bb3b9979c9093b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4OGQzMTlhNWQ5ZDhmMzM5ZDlkMGZkZTcxYmIzYjk5NzljOTA5M2I=", "commit": {"author": {"name": "Niv Kaminer", "email": "nivkner@zoho.com", "date": "2018-12-18T20:47:13Z"}, "committer": {"name": "Niv Kaminer", "email": "nivkner@zoho.com", "date": "2018-12-19T08:51:47Z"}, "message": "FIXME(53451) remove fixme and unnecessary pubs", "tree": {"sha": "6d8f042772e166e85cf3659de5ba38ac21f11fd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d8f042772e166e85cf3659de5ba38ac21f11fd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d88d319a5d9d8f339d9d0fde71bb3b9979c9093b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d88d319a5d9d8f339d9d0fde71bb3b9979c9093b", "html_url": "https://github.com/rust-lang/rust/commit/d88d319a5d9d8f339d9d0fde71bb3b9979c9093b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d88d319a5d9d8f339d9d0fde71bb3b9979c9093b/comments", "author": {"login": "nivkner", "id": 22821514, "node_id": "MDQ6VXNlcjIyODIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/22821514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nivkner", "html_url": "https://github.com/nivkner", "followers_url": "https://api.github.com/users/nivkner/followers", "following_url": "https://api.github.com/users/nivkner/following{/other_user}", "gists_url": "https://api.github.com/users/nivkner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nivkner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nivkner/subscriptions", "organizations_url": "https://api.github.com/users/nivkner/orgs", "repos_url": "https://api.github.com/users/nivkner/repos", "events_url": "https://api.github.com/users/nivkner/events{/privacy}", "received_events_url": "https://api.github.com/users/nivkner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nivkner", "id": 22821514, "node_id": "MDQ6VXNlcjIyODIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/22821514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nivkner", "html_url": "https://github.com/nivkner", "followers_url": "https://api.github.com/users/nivkner/followers", "following_url": "https://api.github.com/users/nivkner/following{/other_user}", "gists_url": "https://api.github.com/users/nivkner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nivkner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nivkner/subscriptions", "organizations_url": "https://api.github.com/users/nivkner/orgs", "repos_url": "https://api.github.com/users/nivkner/repos", "events_url": "https://api.github.com/users/nivkner/events{/privacy}", "received_events_url": "https://api.github.com/users/nivkner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "897c18235a28e9470badd4a3e93a0641dd9c2865", "url": "https://api.github.com/repos/rust-lang/rust/commits/897c18235a28e9470badd4a3e93a0641dd9c2865", "html_url": "https://github.com/rust-lang/rust/commit/897c18235a28e9470badd4a3e93a0641dd9c2865"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "d6c2848b034339e314db0c971ed8200c40c5eb3d", "filename": "src/libproc_macro/bridge/client.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d88d319a5d9d8f339d9d0fde71bb3b9979c9093b/src%2Flibproc_macro%2Fbridge%2Fclient.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d88d319a5d9d8f339d9d0fde71bb3b9979c9093b/src%2Flibproc_macro%2Fbridge%2Fclient.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Fbridge%2Fclient.rs?ref=d88d319a5d9d8f339d9d0fde71bb3b9979c9093b", "patch": "@@ -25,8 +25,7 @@ macro_rules! define_handles {\n         }\n \n         impl HandleCounters {\n-            // FIXME(#53451) public to work around `Cannot create local mono-item` ICE.\n-            pub extern \"C\" fn get() -> &'static Self {\n+            extern \"C\" fn get() -> &'static Self {\n                 static COUNTERS: HandleCounters = HandleCounters {\n                     $($oty: AtomicUsize::new(1),)*\n                     $($ity: AtomicUsize::new(1),)*\n@@ -345,9 +344,7 @@ pub struct Client<F> {\n     pub(super) f: F,\n }\n \n-// FIXME(#53451) public to work around `Cannot create local mono-item` ICE,\n-// affecting not only the function itself, but also the `BridgeState` `thread_local!`.\n-pub extern \"C\" fn __run_expand1(\n+extern \"C\" fn run_expand1(\n     mut bridge: Bridge,\n     f: fn(::TokenStream) -> ::TokenStream,\n ) -> Buffer<u8> {\n@@ -392,15 +389,13 @@ impl Client<fn(::TokenStream) -> ::TokenStream> {\n     pub const fn expand1(f: fn(::TokenStream) -> ::TokenStream) -> Self {\n         Client {\n             get_handle_counters: HandleCounters::get,\n-            run: __run_expand1,\n+            run: run_expand1,\n             f,\n         }\n     }\n }\n \n-// FIXME(#53451) public to work around `Cannot create local mono-item` ICE,\n-// affecting not only the function itself, but also the `BridgeState` `thread_local!`.\n-pub extern \"C\" fn __run_expand2(\n+extern \"C\" fn run_expand2(\n     mut bridge: Bridge,\n     f: fn(::TokenStream, ::TokenStream) -> ::TokenStream,\n ) -> Buffer<u8> {\n@@ -446,7 +441,7 @@ impl Client<fn(::TokenStream, ::TokenStream) -> ::TokenStream> {\n     pub const fn expand2(f: fn(::TokenStream, ::TokenStream) -> ::TokenStream) -> Self {\n         Client {\n             get_handle_counters: HandleCounters::get,\n-            run: __run_expand2,\n+            run: run_expand2,\n             f,\n         }\n     }"}]}