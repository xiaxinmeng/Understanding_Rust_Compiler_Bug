{"sha": "b000cf07261af68c7aa47e10140c692bc03c85da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMDBjZjA3MjYxYWY2OGM3YWE0N2UxMDE0MGM2OTJiYzAzYzg1ZGE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-06-04T21:44:35Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-06-09T12:07:25Z"}, "message": "Add lint for intra link resolution failure", "tree": {"sha": "3d01760da01524fbc2c490030b278e3d3b34cadc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d01760da01524fbc2c490030b278e3d3b34cadc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b000cf07261af68c7aa47e10140c692bc03c85da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b000cf07261af68c7aa47e10140c692bc03c85da", "html_url": "https://github.com/rust-lang/rust/commit/b000cf07261af68c7aa47e10140c692bc03c85da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b000cf07261af68c7aa47e10140c692bc03c85da/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40f20b5327cdd8cf26601962d3a9cc01ce8b177c", "url": "https://api.github.com/repos/rust-lang/rust/commits/40f20b5327cdd8cf26601962d3a9cc01ce8b177c", "html_url": "https://github.com/rust-lang/rust/commit/40f20b5327cdd8cf26601962d3a9cc01ce8b177c"}], "stats": {"total": 85, "additions": 76, "deletions": 9}, "files": [{"sha": "e2acd77a3b6cb44b80e280bcffded77badad56fd", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b000cf07261af68c7aa47e10140c692bc03c85da/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b000cf07261af68c7aa47e10140c692bc03c85da/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=b000cf07261af68c7aa47e10140c692bc03c85da", "patch": "@@ -298,6 +298,12 @@ declare_lint! {\n     \"detects duplicate macro exports\"\n }\n \n+declare_lint! {\n+    pub INTRA_LINK_RESOLUTION_FAILURE,\n+    Warn,\n+    \"warn about documentation intra links resolution failure\"\n+}\n+\n /// Does nothing as a lint pass, but registers some `Lint`s\n /// which are used by other parts of the compiler.\n #[derive(Copy, Clone)]\n@@ -351,6 +357,7 @@ impl LintPass for HardwiredLints {\n             UNSTABLE_NAME_COLLISIONS,\n             DUPLICATE_ASSOCIATED_TYPE_BINDINGS,\n             DUPLICATE_MACRO_EXPORTS,\n+            INTRA_LINK_RESOLUTION_FAILURE,\n         )\n     }\n }"}, {"sha": "8328a8385c3147dbd314b5170b5131dfeb29f371", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b000cf07261af68c7aa47e10140c692bc03c85da/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b000cf07261af68c7aa47e10140c692bc03c85da/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=b000cf07261af68c7aa47e10140c692bc03c85da", "patch": "@@ -21,7 +21,7 @@ pub use self::Visibility::{Public, Inherited};\n \n use syntax;\n use rustc_target::spec::abi::Abi;\n-use syntax::ast::{self, AttrStyle, Ident};\n+use syntax::ast::{self, AttrStyle, NodeId, Ident};\n use syntax::attr;\n use syntax::codemap::{dummy_spanned, Spanned};\n use syntax::feature_gate::UnstableFeatures;\n@@ -46,9 +46,10 @@ use rustc::middle::stability;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_typeck::hir_ty_to_ty;\n use rustc::infer::region_constraints::{RegionConstraintData, Constraint};\n+use rustc::lint as lint;\n+\n use std::collections::hash_map::Entry;\n use std::fmt;\n-\n use std::default::Default;\n use std::{mem, slice, vec};\n use std::iter::{FromIterator, once};\n@@ -1283,10 +1284,16 @@ fn resolution_failure(\n                 link_range.end + code_dox_len,\n             );\n \n-            diag = cx.sess().struct_span_warn(sp, &msg);\n+            diag = cx.tcx.struct_span_lint_node(lint::builtin::INTRA_LINK_RESOLUTION_FAILURE,\n+                                                NodeId::new(0),\n+                                                sp,\n+                                                &msg);\n             diag.span_label(sp, \"cannot be resolved, ignoring\");\n         } else {\n-            diag = cx.sess().struct_span_warn(sp, &msg);\n+            diag = cx.tcx.struct_span_lint_node(lint::builtin::INTRA_LINK_RESOLUTION_FAILURE,\n+                                                NodeId::new(0),\n+                                                sp,\n+                                                &msg);\n \n             let last_new_line_offset = dox[..link_range.start].rfind('\\n').map_or(0, |n| n + 1);\n             let line = dox[last_new_line_offset..].lines().next().unwrap_or(\"\");\n@@ -1303,7 +1310,10 @@ fn resolution_failure(\n         }\n         diag\n     } else {\n-        cx.sess().struct_span_warn(sp, &msg)\n+        cx.tcx.struct_span_lint_node(lint::builtin::INTRA_LINK_RESOLUTION_FAILURE,\n+                                                NodeId::new(0),\n+                                                sp,\n+                                                &msg)\n     };\n     diag.emit();\n }"}, {"sha": "9a733ab424906fcd669f2406440845844fbf99f3", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b000cf07261af68c7aa47e10140c692bc03c85da/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b000cf07261af68c7aa47e10140c692bc03c85da/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=b000cf07261af68c7aa47e10140c692bc03c85da", "patch": "@@ -17,7 +17,7 @@ use rustc::middle::cstore::CrateStore;\n use rustc::middle::privacy::AccessLevels;\n use rustc::ty::{self, TyCtxt, AllArenas};\n use rustc::hir::map as hir_map;\n-use rustc::lint;\n+use rustc::lint::{self, LintPass};\n use rustc::session::config::ErrorOutputType;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_resolve as resolve;\n@@ -187,16 +187,36 @@ pub fn run_core(search_paths: SearchPaths,\n         _ => None\n     };\n \n-    let warning_lint = lint::builtin::WARNINGS.name_lower();\n+    let intra_link_resolution_failure_name = lint::builtin::INTRA_LINK_RESOLUTION_FAILURE.name;\n+    let warnings_lint_name = lint::builtin::WARNINGS.name;\n+    let lints = lint::builtin::HardwiredLints.get_lints()\n+                    .iter()\n+                    .filter_map(|lint| {\n+                        if lint.name == warnings_lint_name {\n+                            None\n+                        } else {\n+                            let level = if lint.name == intra_link_resolution_failure_name {\n+                                lint::Warn\n+                            } else {\n+                                lint::Allow\n+                            };\n+                            Some((lint.name_lower(), level))\n+                        }\n+                    })\n+                    .collect::<Vec<_>>();\n \n     let host_triple = TargetTriple::from_triple(config::host_triple());\n     // plays with error output here!\n     let sessopts = config::Options {\n         maybe_sysroot,\n         search_paths,\n         crate_types: vec![config::CrateTypeRlib],\n-        lint_opts: if !allow_warnings { vec![(warning_lint, lint::Allow)] } else { vec![] },\n-        lint_cap: Some(lint::Allow),\n+        lint_opts: if !allow_warnings {\n+            lints\n+        } else {\n+            vec![]\n+        },\n+        lint_cap: Some(lint::Warn),\n         cg,\n         externs,\n         target_triple: triple.unwrap_or(host_triple),"}, {"sha": "f816621c16f277b0cc4950eabcc45e41d394a827", "filename": "src/test/rustdoc-ui/deny-intra-link-resolution-failure.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b000cf07261af68c7aa47e10140c692bc03c85da/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b000cf07261af68c7aa47e10140c692bc03c85da/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.rs?ref=b000cf07261af68c7aa47e10140c692bc03c85da", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![deny(intra_link_resolution_failure)]\n+\n+/// [v2] //~ ERROR\n+pub fn foo() {}"}, {"sha": "39fb33ce9337e611fc131aca708b3e414d90457c", "filename": "src/test/rustdoc-ui/deny-intra-link-resolution-failure.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b000cf07261af68c7aa47e10140c692bc03c85da/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b000cf07261af68c7aa47e10140c692bc03c85da/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.stderr?ref=b000cf07261af68c7aa47e10140c692bc03c85da", "patch": "@@ -0,0 +1,16 @@\n+warning: [v2] cannot be resolved, ignoring it...\n+  --> src/test/rustdoc-ui/deny-intra-link-resolution-failure.rs:13:1\n+   |\n+LL | /// [v2] //~ ERROR\n+   | ^^^^^^^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> src/test/rustdoc-ui/deny-intra-link-resolution-failure.rs:11:9\n+   |\n+LL | #![deny(intra_link_resolution_failure)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: the link appears in this line:\n+\n+            [v2] //~ ERROR\n+             ^^\n+"}]}