{"sha": "b4465aca5ab22447dde52a4a7083d6e3d29e56e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0NDY1YWNhNWFiMjI0NDdkZGU1MmE0YTcwODNkNmUzZDI5ZTU2ZTI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-01T05:21:30Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-01T05:21:30Z"}, "message": "stdlib: Fix long line in sort.rs", "tree": {"sha": "3ff48bc4ba8cec78c0e7c62371518452bdada0b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ff48bc4ba8cec78c0e7c62371518452bdada0b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4465aca5ab22447dde52a4a7083d6e3d29e56e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4465aca5ab22447dde52a4a7083d6e3d29e56e2", "html_url": "https://github.com/rust-lang/rust/commit/b4465aca5ab22447dde52a4a7083d6e3d29e56e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4465aca5ab22447dde52a4a7083d6e3d29e56e2/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c76bfdc1f460692d378803b478f02dc45b7e049", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c76bfdc1f460692d378803b478f02dc45b7e049", "html_url": "https://github.com/rust-lang/rust/commit/4c76bfdc1f460692d378803b478f02dc45b7e049"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "9154d6a823a47eb89ec64c12d8e6d9a25e8ef8b1", "filename": "src/lib/sort.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b4465aca5ab22447dde52a4a7083d6e3d29e56e2/src%2Flib%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4465aca5ab22447dde52a4a7083d6e3d29e56e2/src%2Flib%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fsort.rs?ref=b4465aca5ab22447dde52a4a7083d6e3d29e56e2", "patch": "@@ -209,7 +209,8 @@ mod ivector {\n     // Based on algorithm presented by Sedgewick and Bentley here:\n     // http://www.cs.princeton.edu/~rs/talks/QuicksortIsOptimal.pdf\n     // According to these slides this is the algorithm of choice for\n-    // 'randomly ordered keys, abstract compare' & 'small number of key values'\n+    // 'randomly ordered keys, abstract compare' & 'small number of key\n+    // values'\n     fn qsort3[T](lteq[T] compare_func_lt, lteq[T] compare_func_eq,\n                  &T[mutable] arr, int left, int right) {\n         if (right <= left) { ret; }"}]}