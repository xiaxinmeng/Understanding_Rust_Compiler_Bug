{"sha": "65a0125f7f2e016a066bb3e8944b6ec31d2d46c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1YTAxMjVmN2YyZTAxNmEwNjZiYjNlODk0NGI2ZWMzMWQyZDQ2Yzc=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-13T05:56:50Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-13T06:37:58Z"}, "message": "add Option map_consume_default method", "tree": {"sha": "9f34f6f351c8f7a0e18ffa531cfa6914c85bbeac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f34f6f351c8f7a0e18ffa531cfa6914c85bbeac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65a0125f7f2e016a066bb3e8944b6ec31d2d46c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65a0125f7f2e016a066bb3e8944b6ec31d2d46c7", "html_url": "https://github.com/rust-lang/rust/commit/65a0125f7f2e016a066bb3e8944b6ec31d2d46c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65a0125f7f2e016a066bb3e8944b6ec31d2d46c7/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a33966b2f2a93b5108d0fd4464b18912da270e15", "url": "https://api.github.com/repos/rust-lang/rust/commits/a33966b2f2a93b5108d0fd4464b18912da270e15", "html_url": "https://github.com/rust-lang/rust/commit/a33966b2f2a93b5108d0fd4464b18912da270e15"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "6a5e90c58ad5ef6d9523b5088b6eca55d3cf7141", "filename": "src/libcore/option.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/65a0125f7f2e016a066bb3e8944b6ec31d2d46c7/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65a0125f7f2e016a066bb3e8944b6ec31d2d46c7/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=65a0125f7f2e016a066bb3e8944b6ec31d2d46c7", "patch": "@@ -277,6 +277,13 @@ impl<T> Option<T> {\n         map_default(self, move def, f)\n     }\n \n+    /// As `map_default`, but consumes the option and gives `f`\n+    /// ownership to avoid copying.\n+    #[inline(always)]\n+    pure fn map_consume_default<U>(self, def: U, f: fn(v: T) -> U) -> U {\n+        match self { None => def, Some(v) => f(v) }\n+    }\n+\n     /// Performs an operation on the contained value by reference\n     #[inline(always)]\n     pure fn iter(&self, f: fn(x: &T)) { iter(self, f) }"}]}