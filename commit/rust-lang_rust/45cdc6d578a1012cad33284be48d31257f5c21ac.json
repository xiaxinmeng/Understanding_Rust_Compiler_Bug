{"sha": "45cdc6d578a1012cad33284be48d31257f5c21ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1Y2RjNmQ1NzhhMTAxMmNhZDMzMjg0YmU0OGQzMTI1N2Y1YzIxYWM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-04T02:48:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-04T02:48:03Z"}, "message": "Rollup merge of #61135 - czipperz:rc-make_mut-weak-doc, r=Mark-Simulacrum\n\nFix documentation of `Rc::make_mut` regarding `rc::Weak`.\n\nCloses #60961", "tree": {"sha": "60bd4f605618cad13f8ba6ccba4c6372efde7261", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60bd4f605618cad13f8ba6ccba4c6372efde7261"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45cdc6d578a1012cad33284be48d31257f5c21ac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc9dvjCRBK7hj4Ov3rIwAAdHIIAKAizGjpkrX32+xIsug/XcWR\npo5hEQHHVYvqISytxPS7PAb7Shh8r4xoz8zKVZcZGx/m5fSVL5QOQPmFI3nfh0Ea\nfELYQfDJ61j396VyhH150cA0xcEdWb9pUiHG5ELbmAWrinwGi/ND0UjznKD/MrxF\nxK00Vn1Sf3X5FKpnNAnXGwN3Ty1KOGudTq1T72mQOCK0KqPOYo/cORPUhpWlOn9l\npk0FRPbwS9z4sqvUkYAYdIWMgBjJz2qBag76MHotmFREQWByVC7Ej9c2FbTuVKPU\ns7W9AMxZ4m8k0auIv9WjgQUHXN7K5AGqxRc3Y9LJ7Zd0duGIWRCqa+MPcJxHF2E=\n=9PQ1\n-----END PGP SIGNATURE-----\n", "payload": "tree 60bd4f605618cad13f8ba6ccba4c6372efde7261\nparent e22b7a3eef962b1314d344ba7b2f27c986320b32\nparent b34b714a896644c7ac5787b214f4115fc0226d96\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1559616483 +0200\ncommitter GitHub <noreply@github.com> 1559616483 +0200\n\nRollup merge of #61135 - czipperz:rc-make_mut-weak-doc, r=Mark-Simulacrum\n\nFix documentation of `Rc::make_mut` regarding `rc::Weak`.\n\nCloses #60961\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45cdc6d578a1012cad33284be48d31257f5c21ac", "html_url": "https://github.com/rust-lang/rust/commit/45cdc6d578a1012cad33284be48d31257f5c21ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45cdc6d578a1012cad33284be48d31257f5c21ac/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e22b7a3eef962b1314d344ba7b2f27c986320b32", "url": "https://api.github.com/repos/rust-lang/rust/commits/e22b7a3eef962b1314d344ba7b2f27c986320b32", "html_url": "https://github.com/rust-lang/rust/commit/e22b7a3eef962b1314d344ba7b2f27c986320b32"}, {"sha": "b34b714a896644c7ac5787b214f4115fc0226d96", "url": "https://api.github.com/repos/rust-lang/rust/commits/b34b714a896644c7ac5787b214f4115fc0226d96", "html_url": "https://github.com/rust-lang/rust/commit/b34b714a896644c7ac5787b214f4115fc0226d96"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "c827e218b2fb35f445572993f1fa6c3bd4ea2052", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/45cdc6d578a1012cad33284be48d31257f5c21ac/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45cdc6d578a1012cad33284be48d31257f5c21ac/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=45cdc6d578a1012cad33284be48d31257f5c21ac", "patch": "@@ -580,15 +580,18 @@ impl<T: ?Sized> Rc<T> {\n impl<T: Clone> Rc<T> {\n     /// Makes a mutable reference into the given `Rc`.\n     ///\n-    /// If there are other `Rc` or [`Weak`][weak] pointers to the same value,\n-    /// then `make_mut` will invoke [`clone`][clone] on the inner value to\n-    /// ensure unique ownership. This is also referred to as clone-on-write.\n+    /// If there are other `Rc` pointers to the same value, then `make_mut` will\n+    /// [`clone`] the inner value to ensure unique ownership.  This is also\n+    /// referred to as clone-on-write.\n     ///\n-    /// See also [`get_mut`][get_mut], which will fail rather than cloning.\n+    /// If there are no other `Rc` pointers to this value, then [`Weak`]\n+    /// pointers to this value will be dissassociated.\n     ///\n-    /// [weak]: struct.Weak.html\n-    /// [clone]: ../../std/clone/trait.Clone.html#tymethod.clone\n-    /// [get_mut]: struct.Rc.html#method.get_mut\n+    /// See also [`get_mut`], which will fail rather than cloning.\n+    ///\n+    /// [`Weak`]: struct.Weak.html\n+    /// [`clone`]: ../../std/clone/trait.Clone.html#tymethod.clone\n+    /// [`get_mut`]: struct.Rc.html#method.get_mut\n     ///\n     /// # Examples\n     ///\n@@ -607,6 +610,23 @@ impl<T: Clone> Rc<T> {\n     /// assert_eq!(*data, 8);\n     /// assert_eq!(*other_data, 12);\n     /// ```\n+    ///\n+    /// [`Weak`] pointers will be dissassociated:\n+    ///\n+    /// ```\n+    /// use std::rc::Rc;\n+    ///\n+    /// let mut data = Rc::new(75);\n+    /// let weak = Rc::downgrade(&data);\n+    ///\n+    /// assert!(75 == *data);\n+    /// assert!(75 == *weak.upgrade().unwrap());\n+    ///\n+    /// *Rc::make_mut(&mut data) += 1;\n+    ///\n+    /// assert!(76 == *data);\n+    /// assert!(weak.upgrade().is_none());\n+    /// ```\n     #[inline]\n     #[stable(feature = \"rc_unique\", since = \"1.4.0\")]\n     pub fn make_mut(this: &mut Self) -> &mut T {"}]}