{"sha": "83dc7fe6691b5897b27cc9ca446d3841ed7d86de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZGM3ZmU2NjkxYjU4OTdiMjdjYzljYTQ0NmQzODQxZWQ3ZDg2ZGU=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-01-27T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-01-27T15:13:18Z"}, "message": "Inline trivial implementation of rustc_target::abi::Align", "tree": {"sha": "6b4b068bd5b5005ab548d46128f4acce8a9966ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b4b068bd5b5005ab548d46128f4acce8a9966ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83dc7fe6691b5897b27cc9ca446d3841ed7d86de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83dc7fe6691b5897b27cc9ca446d3841ed7d86de", "html_url": "https://github.com/rust-lang/rust/commit/83dc7fe6691b5897b27cc9ca446d3841ed7d86de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83dc7fe6691b5897b27cc9ca446d3841ed7d86de/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "613ef740f3f37702728c6324f948d0abd1e9c82b", "url": "https://api.github.com/repos/rust-lang/rust/commits/613ef740f3f37702728c6324f948d0abd1e9c82b", "html_url": "https://github.com/rust-lang/rust/commit/613ef740f3f37702728c6324f948d0abd1e9c82b"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "88b2923f6c48f95ae45e4d0eb90db72ab55dfad0", "filename": "compiler/rustc_target/src/abi/mod.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/83dc7fe6691b5897b27cc9ca446d3841ed7d86de/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83dc7fe6691b5897b27cc9ca446d3841ed7d86de/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs?ref=83dc7fe6691b5897b27cc9ca446d3841ed7d86de", "patch": "@@ -441,36 +441,50 @@ pub struct Align {\n }\n \n impl Align {\n+    #[inline]\n     pub fn from_bits(bits: u64) -> Result<Align, String> {\n         Align::from_bytes(Size::from_bits(bits).bytes())\n     }\n \n+    #[inline]\n     pub fn from_bytes(align: u64) -> Result<Align, String> {\n         // Treat an alignment of 0 bytes like 1-byte alignment.\n         if align == 0 {\n             return Ok(Align { pow2: 0 });\n         }\n \n+        #[cold]\n+        fn not_power_of_2(align: u64) -> String {\n+            format!(\"`{}` is not a power of 2\", align)\n+        }\n+\n+        #[cold]\n+        fn too_large(align: u64) -> String {\n+            format!(\"`{}` is too large\", align)\n+        }\n+\n         let mut bytes = align;\n         let mut pow2: u8 = 0;\n         while (bytes & 1) == 0 {\n             pow2 += 1;\n             bytes >>= 1;\n         }\n         if bytes != 1 {\n-            return Err(format!(\"`{}` is not a power of 2\", align));\n+            return Err(not_power_of_2(align));\n         }\n         if pow2 > 29 {\n-            return Err(format!(\"`{}` is too large\", align));\n+            return Err(too_large(align));\n         }\n \n         Ok(Align { pow2 })\n     }\n \n+    #[inline]\n     pub fn bytes(self) -> u64 {\n         1 << self.pow2\n     }\n \n+    #[inline]\n     pub fn bits(self) -> u64 {\n         self.bytes() * 8\n     }\n@@ -479,12 +493,14 @@ impl Align {\n     /// (the largest power of two that the offset is a multiple of).\n     ///\n     /// N.B., for an offset of `0`, this happens to return `2^64`.\n+    #[inline]\n     pub fn max_for_offset(offset: Size) -> Align {\n         Align { pow2: offset.bytes().trailing_zeros() as u8 }\n     }\n \n     /// Lower the alignment, if necessary, such that the given offset\n     /// is aligned to it (the offset is a multiple of the alignment).\n+    #[inline]\n     pub fn restrict_for_offset(self, offset: Size) -> Align {\n         self.min(Align::max_for_offset(offset))\n     }"}]}