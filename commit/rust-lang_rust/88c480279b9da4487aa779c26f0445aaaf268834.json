{"sha": "88c480279b9da4487aa779c26f0445aaaf268834", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4YzQ4MDI3OWI5ZGE0NDg3YWE3NzljMjZmMDQ0NWFhYWYyNjg4MzQ=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-04-11T14:07:39Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-04-13T15:37:51Z"}, "message": "rustc_target: Inherit `windows_uwp_gnu_base` from `windows_gnu_base`", "tree": {"sha": "6059a4ef623d30884ec1afdfbd65302beb2e6438", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6059a4ef623d30884ec1afdfbd65302beb2e6438"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88c480279b9da4487aa779c26f0445aaaf268834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88c480279b9da4487aa779c26f0445aaaf268834", "html_url": "https://github.com/rust-lang/rust/commit/88c480279b9da4487aa779c26f0445aaaf268834", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88c480279b9da4487aa779c26f0445aaaf268834/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd0e2987eda697cfa1ec754021477f54a46645aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd0e2987eda697cfa1ec754021477f54a46645aa", "html_url": "https://github.com/rust-lang/rust/commit/fd0e2987eda697cfa1ec754021477f54a46645aa"}], "stats": {"total": 34, "additions": 13, "deletions": 21}, "files": [{"sha": "aa99c3f7d95e533050ecf6f5c9e9c5227da47da1", "filename": "src/librustc_target/spec/windows_uwp_gnu_base.rs", "status": "modified", "additions": 13, "deletions": 21, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/88c480279b9da4487aa779c26f0445aaaf268834/src%2Flibrustc_target%2Fspec%2Fwindows_uwp_gnu_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88c480279b9da4487aa779c26f0445aaaf268834/src%2Flibrustc_target%2Fspec%2Fwindows_uwp_gnu_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwindows_uwp_gnu_base.rs?ref=88c480279b9da4487aa779c26f0445aaaf268834", "patch": "@@ -1,6 +1,9 @@\n use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n+    let base = super::windows_gnu_base::opts();\n+\n+    // FIXME: Consider adding `-nostdlib` and inheriting from `windows_gnu_base`.\n     let mut pre_link_args = LinkArgs::new();\n     pre_link_args.insert(\n         LinkerFlavor::Gcc,\n@@ -13,7 +16,10 @@ pub fn opts() -> TargetOptions {\n         ],\n     );\n \n+    // FIXME: Should UWP target be updated for the exception machinery changes from #67502?\n     let mut late_link_args = LinkArgs::new();\n+    let late_link_args_dynamic = LinkArgs::new();\n+    let late_link_args_static = LinkArgs::new();\n     late_link_args.insert(\n         LinkerFlavor::Gcc,\n         vec![\n@@ -32,31 +38,17 @@ pub fn opts() -> TargetOptions {\n     );\n \n     TargetOptions {\n-        // FIXME(#13846) this should be enabled for windows\n-        function_sections: false,\n-        linker: Some(\"gcc\".to_string()),\n-        dynamic_linking: true,\n         executables: false,\n-        dll_prefix: String::new(),\n-        dll_suffix: \".dll\".to_string(),\n-        exe_suffix: \".exe\".to_string(),\n-        staticlib_prefix: \"lib\".to_string(),\n-        staticlib_suffix: \".a\".to_string(),\n-        target_family: Some(\"windows\".to_string()),\n-        is_like_windows: true,\n-        allows_weak_linkage: false,\n+        limit_rdylib_exports: false,\n         pre_link_args,\n-        pre_link_objects_exe: vec![\n-            \"rsbegin.o\".to_string(), // Rust compiler runtime initialization, see rsbegin.rs\n-        ],\n+        // FIXME: Consider adding `-nostdlib` and inheriting from `windows_gnu_base`.\n+        pre_link_objects_exe: vec![\"rsbegin.o\".to_string()],\n+        // FIXME: Consider adding `-nostdlib` and inheriting from `windows_gnu_base`.\n         pre_link_objects_dll: vec![\"rsbegin.o\".to_string()],\n         late_link_args,\n-        post_link_objects: vec![\"rsend.o\".to_string()],\n-        abi_return_struct_as_int: true,\n-        emit_debug_gdb_scripts: false,\n-        requires_uwtable: true,\n-        limit_rdylib_exports: false,\n+        late_link_args_dynamic,\n+        late_link_args_static,\n \n-        ..Default::default()\n+        ..base\n     }\n }"}]}