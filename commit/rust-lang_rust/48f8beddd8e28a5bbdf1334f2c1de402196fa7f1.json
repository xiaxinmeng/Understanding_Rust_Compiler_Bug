{"sha": "48f8beddd8e28a5bbdf1334f2c1de402196fa7f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ZjhiZWRkZDhlMjhhNWJiZGYxMzM0ZjJjMWRlNDAyMTk2ZmE3ZjE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-10-09T14:37:48Z"}, "committer": {"name": "Dan Aloni", "email": "dan@kernelim.com", "date": "2019-10-09T15:07:22Z"}, "message": "resolve: Use field spans for reporting the private constructor error", "tree": {"sha": "2ae1e5dcc63c49288f1e7986afbf72be252013e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ae1e5dcc63c49288f1e7986afbf72be252013e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48f8beddd8e28a5bbdf1334f2c1de402196fa7f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48f8beddd8e28a5bbdf1334f2c1de402196fa7f1", "html_url": "https://github.com/rust-lang/rust/commit/48f8beddd8e28a5bbdf1334f2c1de402196fa7f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48f8beddd8e28a5bbdf1334f2c1de402196fa7f1/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d8af38329a2f3cf93f392239252664fd7d25a69", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d8af38329a2f3cf93f392239252664fd7d25a69", "html_url": "https://github.com/rust-lang/rust/commit/5d8af38329a2f3cf93f392239252664fd7d25a69"}], "stats": {"total": 311, "additions": 204, "deletions": 107}, "files": [{"sha": "d87c6032bd915e2f425866b89c0f6894997e6e32", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/48f8beddd8e28a5bbdf1334f2c1de402196fa7f1/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48f8beddd8e28a5bbdf1334f2c1de402196fa7f1/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=48f8beddd8e28a5bbdf1334f2c1de402196fa7f1", "patch": "@@ -30,7 +30,7 @@ use rustc::hir::def::{self, DefKind, PartialRes, CtorKind, CtorOf, NonMacroAttrK\n use rustc::hir::def::Namespace::*;\n use rustc::hir::def_id::{CRATE_DEF_INDEX, LOCAL_CRATE, DefId};\n use rustc::hir::{TraitMap, GlobMap};\n-use rustc::ty;\n+use rustc::ty::{self, DefIdTree};\n use rustc::util::nodemap::{NodeMap, NodeSet, FxHashMap, FxHashSet, DefIdMap};\n use rustc::span_bug;\n \n@@ -1006,7 +1006,7 @@ impl<'a> AsMut<Resolver<'a>> for Resolver<'a> {\n     fn as_mut(&mut self) -> &mut Resolver<'a> { self }\n }\n \n-impl<'a, 'b> ty::DefIdTree for &'a Resolver<'b> {\n+impl<'a, 'b> DefIdTree for &'a Resolver<'b> {\n     fn parent(self, id: DefId) -> Option<DefId> {\n         match id.krate {\n             LOCAL_CRATE => self.definitions.def_key(id.index).parent,\n@@ -2391,23 +2391,17 @@ impl<'a> Resolver<'a> {\n                     binding.res().descr(),\n                     ident.name,\n                 );\n-                // FIXME: use the ctor's `def_id` to check wether any of the fields is not visible\n-                match binding.kind {\n-                    NameBindingKind::Res(Res::Def(DefKind::Ctor(\n-                        CtorOf::Struct,\n-                        CtorKind::Fn,\n-                    ), _def_id), _) => {\n-                        err.note(\"a tuple struct constructor is private if any of its fields \\\n-                                  is private\");\n-                    }\n-                    NameBindingKind::Res(Res::Def(DefKind::Ctor(\n-                        CtorOf::Variant,\n-                        CtorKind::Fn,\n-                    ), _def_id), _) => {\n-                        err.note(\"a tuple variant constructor is private if any of its fields \\\n-                                  is private\");\n+                if let NameBindingKind::Res(\n+                    Res::Def(DefKind::Ctor(CtorOf::Struct, CtorKind::Fn), ctor_def_id), _\n+                ) = binding.kind {\n+                    let def_id = (&*self).parent(ctor_def_id).expect(\"no parent for a constructor\");\n+                    if let Some(fields) = self.field_names.get(&def_id) {\n+                        let first_field = fields.first().expect(\"empty field list in the map\");\n+                        err.span_label(\n+                            fields.iter().fold(first_field.span, |acc, field| acc.to(field.span)),\n+                            \"a tuple struct constructor is private if any of its fields is private\",\n+                        );\n                     }\n-                    _ => {}\n                 }\n                 err.emit();\n             }"}, {"sha": "c1b90d7c6bf23ec8a5239f039cb9a411fecdce8d", "filename": "src/test/ui/privacy/privacy5.stderr", "status": "modified", "additions": 168, "deletions": 72, "changes": 240, "blob_url": "https://github.com/rust-lang/rust/blob/48f8beddd8e28a5bbdf1334f2c1de402196fa7f1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48f8beddd8e28a5bbdf1334f2c1de402196fa7f1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr?ref=48f8beddd8e28a5bbdf1334f2c1de402196fa7f1", "patch": "@@ -1,386 +1,482 @@\n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:51:16\n    |\n+LL |     pub struct A(());\n+   |                  -- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let a = a::A(());\n    |                ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:52:16\n    |\n+LL |     pub struct B(isize);\n+   |                  ----- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let b = a::B(2);\n    |                ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:53:16\n    |\n+LL |     pub struct C(pub isize, isize);\n+   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let c = a::C(2, 3);\n    |                ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:56:12\n    |\n+LL |     pub struct A(());\n+   |                  -- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let a::A(()) = a;\n    |            ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:57:12\n    |\n+LL |     pub struct A(());\n+   |                  -- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let a::A(_) = a;\n    |            ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:58:18\n    |\n+LL |     pub struct A(());\n+   |                  -- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     match a { a::A(()) => {} }\n    |                  ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:59:18\n    |\n+LL |     pub struct A(());\n+   |                  -- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     match a { a::A(_) => {} }\n    |                  ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:61:12\n    |\n+LL |     pub struct B(isize);\n+   |                  ----- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let a::B(_) = b;\n    |            ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:62:12\n    |\n+LL |     pub struct B(isize);\n+   |                  ----- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let a::B(_b) = b;\n    |            ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:63:18\n    |\n+LL |     pub struct B(isize);\n+   |                  ----- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     match b { a::B(_) => {} }\n    |                  ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:64:18\n    |\n+LL |     pub struct B(isize);\n+   |                  ----- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     match b { a::B(_b) => {} }\n    |                  ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:65:18\n    |\n+LL |     pub struct B(isize);\n+   |                  ----- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     match b { a::B(1) => {} a::B(_) => {} }\n    |                  ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:65:32\n    |\n+LL |     pub struct B(isize);\n+   |                  ----- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     match b { a::B(1) => {} a::B(_) => {} }\n    |                                ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:68:12\n    |\n+LL |     pub struct C(pub isize, isize);\n+   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let a::C(_, _) = c;\n    |            ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:69:12\n    |\n+LL |     pub struct C(pub isize, isize);\n+   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let a::C(_a, _) = c;\n    |            ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:70:12\n    |\n+LL |     pub struct C(pub isize, isize);\n+   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let a::C(_, _b) = c;\n    |            ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:71:12\n    |\n+LL |     pub struct C(pub isize, isize);\n+   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let a::C(_a, _b) = c;\n    |            ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:72:18\n    |\n+LL |     pub struct C(pub isize, isize);\n+   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     match c { a::C(_, _) => {} }\n    |                  ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:73:18\n    |\n+LL |     pub struct C(pub isize, isize);\n+   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     match c { a::C(_a, _) => {} }\n    |                  ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:74:18\n    |\n+LL |     pub struct C(pub isize, isize);\n+   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     match c { a::C(_, _b) => {} }\n    |                  ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:75:18\n    |\n+LL |     pub struct C(pub isize, isize);\n+   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     match c { a::C(_a, _b) => {} }\n    |                  ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:83:17\n    |\n+LL |     pub struct A(());\n+   |                  -- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let a2 = a::A;\n    |                 ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:84:17\n    |\n+LL |     pub struct B(isize);\n+   |                  ----- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let b2 = a::B;\n    |                 ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:85:17\n    |\n+LL |     pub struct C(pub isize, isize);\n+   |                  ---------------- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let c2 = a::C;\n    |                 ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:90:20\n    |\n LL |     let a = other::A(());\n    |                    ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct A(());\n+   |              -- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:91:20\n    |\n LL |     let b = other::B(2);\n    |                    ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct B(isize);\n+   |              ----- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:92:20\n    |\n LL |     let c = other::C(2, 3);\n    |                    ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct C(pub isize, isize);\n+   |              ---------------- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:95:16\n    |\n LL |     let other::A(()) = a;\n    |                ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct A(());\n+   |              -- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:96:16\n    |\n LL |     let other::A(_) = a;\n    |                ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct A(());\n+   |              -- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:97:22\n    |\n LL |     match a { other::A(()) => {} }\n    |                      ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct A(());\n+   |              -- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:98:22\n    |\n LL |     match a { other::A(_) => {} }\n    |                      ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct A(());\n+   |              -- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:100:16\n    |\n LL |     let other::B(_) = b;\n    |                ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct B(isize);\n+   |              ----- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:101:16\n    |\n LL |     let other::B(_b) = b;\n    |                ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct B(isize);\n+   |              ----- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:102:22\n    |\n LL |     match b { other::B(_) => {} }\n    |                      ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct B(isize);\n+   |              ----- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:103:22\n    |\n LL |     match b { other::B(_b) => {} }\n    |                      ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct B(isize);\n+   |              ----- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:104:22\n    |\n LL |     match b { other::B(1) => {} other::B(_) => {} }\n    |                      ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct B(isize);\n+   |              ----- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:104:40\n    |\n LL |     match b { other::B(1) => {} other::B(_) => {} }\n    |                                        ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct B(isize);\n+   |              ----- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:107:16\n    |\n LL |     let other::C(_, _) = c;\n    |                ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct C(pub isize, isize);\n+   |              ---------------- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:108:16\n    |\n LL |     let other::C(_a, _) = c;\n    |                ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct C(pub isize, isize);\n+   |              ---------------- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:109:16\n    |\n LL |     let other::C(_, _b) = c;\n    |                ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct C(pub isize, isize);\n+   |              ---------------- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:110:16\n    |\n LL |     let other::C(_a, _b) = c;\n    |                ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct C(pub isize, isize);\n+   |              ---------------- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:111:22\n    |\n LL |     match c { other::C(_, _) => {} }\n    |                      ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct C(pub isize, isize);\n+   |              ---------------- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:112:22\n    |\n LL |     match c { other::C(_a, _) => {} }\n    |                      ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct C(pub isize, isize);\n+   |              ---------------- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:113:22\n    |\n LL |     match c { other::C(_, _b) => {} }\n    |                      ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct C(pub isize, isize);\n+   |              ---------------- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:114:22\n    |\n LL |     match c { other::C(_a, _b) => {} }\n    |                      ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct C(pub isize, isize);\n+   |              ---------------- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:122:21\n    |\n LL |     let a2 = other::A;\n    |                     ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct A(());\n+   |              -- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:123:21\n    |\n LL |     let b2 = other::B;\n    |                     ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct B(isize);\n+   |              ----- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:124:21\n    |\n LL |     let c2 = other::C;\n    |                     ^\n+   | \n+  ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct C(pub isize, isize);\n+   |              ---------------- a tuple struct constructor is private if any of its fields is private\n \n error: aborting due to 48 previous errors\n "}, {"sha": "d5311fde2e79e8123e48275117f104bc9a6c97f5", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/48f8beddd8e28a5bbdf1334f2c1de402196fa7f1/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48f8beddd8e28a5bbdf1334f2c1de402196fa7f1/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=48f8beddd8e28a5bbdf1334f2c1de402196fa7f1", "patch": "@@ -37,50 +37,60 @@ LL | use m::S;\n error[E0603]: tuple struct `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:18:12\n    |\n+LL |         pub(in m) struct Z(pub(in m::n) u8);\n+   |                            --------------- a tuple struct constructor is private if any of its fields is private\n+...\n LL |         n::Z;\n    |            ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `S` is private\n   --> $DIR/privacy-struct-ctor.rs:29:8\n    |\n+LL |     pub struct S(u8);\n+   |                  -- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     m::S;\n    |        ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `S` is private\n   --> $DIR/privacy-struct-ctor.rs:31:19\n    |\n+LL |     pub struct S(u8);\n+   |                  -- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     let _: S = m::S(2);\n    |                   ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:35:11\n    |\n+LL |         pub(in m) struct Z(pub(in m::n) u8);\n+   |                            --------------- a tuple struct constructor is private if any of its fields is private\n+...\n LL |     m::n::Z;\n    |           ^\n-   |\n-   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `S` is private\n   --> $DIR/privacy-struct-ctor.rs:41:16\n    |\n LL |     xcrate::m::S;\n    |                ^\n+   | \n+  ::: $DIR/auxiliary/privacy-struct-ctor.rs:2:18\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL |     pub struct S(u8);\n+   |                  -- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:45:19\n    |\n LL |     xcrate::m::n::Z;\n    |                   ^\n+   | \n+  ::: $DIR/auxiliary/privacy-struct-ctor.rs:5:28\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL |         pub(in m) struct Z(pub(in m::n) u8);\n+   |                            --------------- a tuple struct constructor is private if any of its fields is private\n \n error: aborting due to 10 previous errors\n "}, {"sha": "15f97f7e1d6f886962dc46f0827fa1036dc9a1e9", "filename": "src/test/ui/rfc-2008-non-exhaustive/struct.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/48f8beddd8e28a5bbdf1334f2c1de402196fa7f1/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48f8beddd8e28a5bbdf1334f2c1de402196fa7f1/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr?ref=48f8beddd8e28a5bbdf1334f2c1de402196fa7f1", "patch": "@@ -15,8 +15,11 @@ error[E0603]: tuple struct `TupleStruct` is private\n    |\n LL |     let ts_explicit = structs::TupleStruct(640, 480);\n    |                                ^^^^^^^^^^^\n+   | \n+  ::: $DIR/auxiliary/structs.rs:13:24\n    |\n-   = note: a tuple struct constructor is private if any of its fields is private\n+LL | pub struct TupleStruct(pub u16, pub u16);\n+   |                        ---------------- a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: unit struct `UnitStruct` is private\n   --> $DIR/struct.rs:32:32"}, {"sha": "d9d6ea21b8bd4dccce0e8365873285e99ed9e6b6", "filename": "src/test/ui/rfc-2008-non-exhaustive/variant.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/48f8beddd8e28a5bbdf1334f2c1de402196fa7f1/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48f8beddd8e28a5bbdf1334f2c1de402196fa7f1/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr?ref=48f8beddd8e28a5bbdf1334f2c1de402196fa7f1", "patch": "@@ -3,8 +3,6 @@ error[E0603]: tuple variant `Tuple` is private\n    |\n LL |     let variant_tuple = NonExhaustiveVariants::Tuple(640);\n    |                                                ^^^^^\n-   |\n-   = note: a tuple variant constructor is private if any of its fields is private\n \n error[E0603]: unit variant `Unit` is private\n   --> $DIR/variant.rs:14:47\n@@ -23,16 +21,12 @@ error[E0603]: tuple variant `Tuple` is private\n    |\n LL |         NonExhaustiveVariants::Tuple(fe_tpl) => \"\",\n    |                                ^^^^^\n-   |\n-   = note: a tuple variant constructor is private if any of its fields is private\n \n error[E0603]: tuple variant `Tuple` is private\n   --> $DIR/variant.rs:26:35\n    |\n LL |     if let NonExhaustiveVariants::Tuple(fe_tpl) = variant_struct {\n    |                                   ^^^^^\n-   |\n-   = note: a tuple variant constructor is private if any of its fields is private\n \n error[E0639]: cannot create non-exhaustive variant using struct expression\n   --> $DIR/variant.rs:8:26"}]}