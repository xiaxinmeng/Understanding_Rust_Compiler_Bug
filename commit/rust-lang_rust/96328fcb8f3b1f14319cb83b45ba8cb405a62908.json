{"sha": "96328fcb8f3b1f14319cb83b45ba8cb405a62908", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MzI4ZmNiOGYzYjFmMTQzMTljYjgzYjQ1YmE4Y2I0MDVhNjI5MDg=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-05-25T01:50:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-25T01:50:08Z"}, "message": "Rollup merge of #42186 - devurandom:fix/bootstrap-verbose, r=alexcrichton\n\nbootstrap: Make bootstrap verbose if requested\n\nFixes: #42099", "tree": {"sha": "3e81b3c017493c8e2aa8ee8b9b45a87c088204d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e81b3c017493c8e2aa8ee8b9b45a87c088204d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96328fcb8f3b1f14319cb83b45ba8cb405a62908", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96328fcb8f3b1f14319cb83b45ba8cb405a62908", "html_url": "https://github.com/rust-lang/rust/commit/96328fcb8f3b1f14319cb83b45ba8cb405a62908", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96328fcb8f3b1f14319cb83b45ba8cb405a62908/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84302717ae9d5245935750ab49693466f761d5f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/84302717ae9d5245935750ab49693466f761d5f1", "html_url": "https://github.com/rust-lang/rust/commit/84302717ae9d5245935750ab49693466f761d5f1"}, {"sha": "cd86a9ba4a727dff5e9139b925408bc500160168", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd86a9ba4a727dff5e9139b925408bc500160168", "html_url": "https://github.com/rust-lang/rust/commit/cd86a9ba4a727dff5e9139b925408bc500160168"}], "stats": {"total": 39, "additions": 21, "deletions": 18}, "files": [{"sha": "0f85ba81d1268c90176e9935ead434cf1fb17daa", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/96328fcb8f3b1f14319cb83b45ba8cb405a62908/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/96328fcb8f3b1f14319cb83b45ba8cb405a62908/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=96328fcb8f3b1f14319cb83b45ba8cb405a62908", "patch": "@@ -127,13 +127,13 @@ def unpack(tarball, dst, verbose=False, match=None):\n             shutil.move(tp, fp)\n     shutil.rmtree(os.path.join(dst, fname))\n \n-def run(args, verbose=False, exception=False, cwd=None):\n+def run(args, verbose=False, exception=False, cwd=None, env=None):\n     if verbose:\n         print(\"running: \" + ' '.join(args))\n     sys.stdout.flush()\n     # Use Popen here instead of call() as it apparently allows powershell on\n     # Windows to not lock up waiting for input presumably.\n-    ret = subprocess.Popen(args, cwd=cwd)\n+    ret = subprocess.Popen(args, cwd=cwd, env=env)\n     code = ret.wait()\n     if code != 0:\n         err = \"failed to run: \" + ' '.join(args)\n@@ -385,17 +385,15 @@ def build_bootstrap(self):\n             raise Exception(\"no cargo executable found at `%s`\" % self.cargo())\n         args = [self.cargo(), \"build\", \"--manifest-path\",\n                 os.path.join(self.rust_root, \"src/bootstrap/Cargo.toml\")]\n+        if self.verbose:\n+            args.append(\"--verbose\")\n+            if self.verbose > 1:\n+                args.append(\"--verbose\")\n         if self.use_locked_deps:\n             args.append(\"--locked\")\n         if self.use_vendored_sources:\n             args.append(\"--frozen\")\n-        self.run(args, env)\n-\n-    def run(self, args, env=None, cwd=None):\n-        proc = subprocess.Popen(args, env=env, cwd=cwd)\n-        ret = proc.wait()\n-        if ret != 0:\n-            sys.exit(ret)\n+        run(args, env=env, verbose=self.verbose)\n \n     def output(self, args, env=None, cwd=None):\n         default_encoding = sys.getdefaultencoding()\n@@ -567,7 +565,7 @@ def update_submodules(self):\n             path = line[1:].split(' ')[1]\n             submodules.append([path, line[0]])\n \n-        self.run([\"git\", \"submodule\", \"sync\"], cwd=self.rust_root)\n+        run([\"git\", \"submodule\", \"sync\"], cwd=self.rust_root)\n \n         for submod in submodules:\n             path, status = submod\n@@ -580,15 +578,15 @@ def update_submodules(self):\n             submod_path = os.path.join(self.rust_root, path)\n \n             if status == ' ':\n-                self.run([\"git\", \"reset\", \"--hard\"], cwd=submod_path)\n-                self.run([\"git\", \"clean\", \"-fdx\"], cwd=submod_path)\n+                run([\"git\", \"reset\", \"--hard\"], cwd=submod_path)\n+                run([\"git\", \"clean\", \"-fdx\"], cwd=submod_path)\n             elif status == '+':\n-                self.run([\"git\", \"submodule\", \"update\", path], cwd=self.rust_root)\n-                self.run([\"git\", \"reset\", \"--hard\"], cwd=submod_path)\n-                self.run([\"git\", \"clean\", \"-fdx\"], cwd=submod_path)\n+                run([\"git\", \"submodule\", \"update\", path], cwd=self.rust_root)\n+                run([\"git\", \"reset\", \"--hard\"], cwd=submod_path)\n+                run([\"git\", \"clean\", \"-fdx\"], cwd=submod_path)\n             elif status == '-':\n-                self.run([\"git\", \"submodule\", \"init\", path], cwd=self.rust_root)\n-                self.run([\"git\", \"submodule\", \"update\", path], cwd=self.rust_root)\n+                run([\"git\", \"submodule\", \"init\", path], cwd=self.rust_root)\n+                run([\"git\", \"submodule\", \"update\", path], cwd=self.rust_root)\n             else:\n                 raise ValueError('unknown submodule status: ' + status)\n \n@@ -620,6 +618,11 @@ def bootstrap():\n     except:\n         pass\n \n+    if '\\nverbose = 2' in rb.config_toml:\n+        rb.verbose = 2\n+    elif '\\nverbose = 1' in rb.config_toml:\n+        rb.verbose = 1\n+\n     rb.use_vendored_sources = '\\nvendor = true' in rb.config_toml or \\\n                               'CFG_ENABLE_VENDOR' in rb.config_mk\n \n@@ -676,7 +679,7 @@ def bootstrap():\n     env[\"BUILD\"] = rb.build\n     env[\"SRC\"] = rb.rust_root\n     env[\"BOOTSTRAP_PARENT_ID\"] = str(os.getpid())\n-    rb.run(args, env)\n+    run(args, env=env, verbose=rb.verbose)\n \n def main():\n     start_time = time()"}]}