{"sha": "99e9e52fbc9c3b18241e3db874daba6321508018", "node_id": "C_kwDOAAsO6NoAKDk5ZTllNTJmYmM5YzNiMTgyNDFlM2RiODc0ZGFiYTYzMjE1MDgwMTg", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-04-13T14:01:09Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-04-13T14:01:09Z"}, "message": "Remove trailing `;` when turning assignment into `==` comparison", "tree": {"sha": "1afd2a24766937546d977fc35817cefe0813e379", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1afd2a24766937546d977fc35817cefe0813e379"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99e9e52fbc9c3b18241e3db874daba6321508018", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99e9e52fbc9c3b18241e3db874daba6321508018", "html_url": "https://github.com/rust-lang/rust/commit/99e9e52fbc9c3b18241e3db874daba6321508018", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99e9e52fbc9c3b18241e3db874daba6321508018/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9dd7db817164317c3e4d259b8d4526113c42c59", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9dd7db817164317c3e4d259b8d4526113c42c59", "html_url": "https://github.com/rust-lang/rust/commit/b9dd7db817164317c3e4d259b8d4526113c42c59"}], "stats": {"total": 71, "additions": 70, "deletions": 1}, "files": [{"sha": "24d4073170c975832f3a87af1adb83c615cd8f07", "filename": "crates/ide/src/typing.rs", "status": "modified", "additions": 70, "deletions": 1, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/99e9e52fbc9c3b18241e3db874daba6321508018/crates%2Fide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e9e52fbc9c3b18241e3db874daba6321508018/crates%2Fide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ftyping.rs?ref=99e9e52fbc9c3b18241e3db874daba6321508018", "patch": "@@ -173,6 +173,9 @@ fn on_eq_typed(file: &SourceFile, offset: TextSize) -> Option<TextEdit> {\n     if let Some(edit) = assign_expr(file, offset) {\n         return Some(edit);\n     }\n+    if let Some(edit) = assign_to_eq(file, offset) {\n+        return Some(edit);\n+    }\n \n     return None;\n \n@@ -182,13 +185,13 @@ fn on_eq_typed(file: &SourceFile, offset: TextSize) -> Option<TextEdit> {\n             return None;\n         }\n \n+        // Parent must be `ExprStmt` or `StmtList` for `;` to be valid.\n         if let Some(expr_stmt) = ast::ExprStmt::cast(binop.syntax().parent()?) {\n             if expr_stmt.semicolon_token().is_some() {\n                 return None;\n             }\n         } else {\n             if !ast::StmtList::can_cast(binop.syntax().parent()?.kind()) {\n-                // Parent must be `ExprStmt` or `StmtList` for `;` to be valid.\n                 return None;\n             }\n         }\n@@ -205,6 +208,25 @@ fn on_eq_typed(file: &SourceFile, offset: TextSize) -> Option<TextEdit> {\n         Some(TextEdit::insert(offset, \";\".to_string()))\n     }\n \n+    /// `a =$0 b;` removes the semicolon if an expression is valid in this context.\n+    fn assign_to_eq(file: &SourceFile, offset: TextSize) -> Option<TextEdit> {\n+        let binop: ast::BinExpr = find_node_at_offset(file.syntax(), offset)?;\n+        if !matches!(binop.op_kind(), Some(ast::BinaryOp::CmpOp(ast::CmpOp::Eq { negated: false })))\n+        {\n+            return None;\n+        }\n+\n+        let expr_stmt = ast::ExprStmt::cast(binop.syntax().parent()?)?;\n+        let semi = expr_stmt.semicolon_token()?;\n+\n+        if expr_stmt.syntax().next_sibling().is_some() {\n+            // Not the last statement in the list.\n+            return None;\n+        }\n+\n+        Some(TextEdit::delete(semi.text_range()))\n+    }\n+\n     fn let_stmt(file: &SourceFile, offset: TextSize) -> Option<TextEdit> {\n         let let_stmt: ast::LetStmt = find_node_at_offset(file.syntax(), offset)?;\n         if let_stmt.semicolon_token().is_some() {\n@@ -424,6 +446,53 @@ fn f() {\n         );\n     }\n \n+    #[test]\n+    fn assign_to_eq() {\n+        type_char(\n+            '=',\n+            r#\"\n+fn f(a: u8) {\n+    a =$0 0;\n+}\n+\"#,\n+            r#\"\n+fn f(a: u8) {\n+    a == 0\n+}\n+\"#,\n+        );\n+        type_char(\n+            '=',\n+            r#\"\n+fn f(a: u8) {\n+    a $0= 0;\n+}\n+\"#,\n+            r#\"\n+fn f(a: u8) {\n+    a == 0\n+}\n+\"#,\n+        );\n+        type_char_noop(\n+            '=',\n+            r#\"\n+fn f(a: u8) {\n+    let e = a =$0 0;\n+}\n+\"#,\n+        );\n+        type_char_noop(\n+            '=',\n+            r#\"\n+fn f(a: u8) {\n+    let e = a =$0 0;\n+    e\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn indents_new_chain_call() {\n         type_char("}]}