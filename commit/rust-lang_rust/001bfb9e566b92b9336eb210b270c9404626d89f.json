{"sha": "001bfb9e566b92b9336eb210b270c9404626d89f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwMWJmYjllNTY2YjkyYjkzMzZlYjIxMGIyNzBjOTQwNDYyNmQ4OWY=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-02-05T14:14:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-05T14:14:34Z"}, "message": "Rollup merge of #38518 - nagisa:exec-doc, r=alexcrichton\n\nExpand documentation of process::exit and exec\n\nShow a conventional way to use process::exit when destructors are considered important and also\nmention that the same caveats wrt destructors apply to exec as well.", "tree": {"sha": "f4e77ba967a4f57fa7154f2eb0e2f49cea1a4775", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4e77ba967a4f57fa7154f2eb0e2f49cea1a4775"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/001bfb9e566b92b9336eb210b270c9404626d89f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/001bfb9e566b92b9336eb210b270c9404626d89f", "html_url": "https://github.com/rust-lang/rust/commit/001bfb9e566b92b9336eb210b270c9404626d89f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/001bfb9e566b92b9336eb210b270c9404626d89f/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "696f5c1fc695494053709ae3b18b4c6a65b619a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/696f5c1fc695494053709ae3b18b4c6a65b619a6", "html_url": "https://github.com/rust-lang/rust/commit/696f5c1fc695494053709ae3b18b4c6a65b619a6"}, {"sha": "c2eab73788a066384f3d1facca1ca7b9fc214962", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2eab73788a066384f3d1facca1ca7b9fc214962", "html_url": "https://github.com/rust-lang/rust/commit/c2eab73788a066384f3d1facca1ca7b9fc214962"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "23a53d777a5adf98397d591a85ae536dea53b5c5", "filename": "src/libstd/process.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/001bfb9e566b92b9336eb210b270c9404626d89f/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/001bfb9e566b92b9336eb210b270c9404626d89f/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=001bfb9e566b92b9336eb210b270c9404626d89f", "patch": "@@ -959,10 +959,27 @@ impl Child {\n ///\n /// # Examples\n ///\n+/// Due to this function\u2019s behavior regarding destructors, a conventional way\n+/// to use the function is to extract the actual computation to another\n+/// function and compute the exit code from its return value:\n+///\n /// ```\n-/// use std::process;\n+/// use std::io::{self, Write};\n+///\n+/// fn run_app() -> Result<(), ()> {\n+///     // Application logic here\n+///     Ok(())\n+/// }\n ///\n-/// process::exit(0);\n+/// fn main() {\n+///     ::std::process::exit(match run_app() {\n+///        Ok(_) => 0,\n+///        Err(err) => {\n+///            writeln!(io::stderr(), \"error: {:?}\", err).unwrap();\n+///            1\n+///        }\n+///     });\n+/// }\n /// ```\n ///\n /// Due to [platform-specific behavior], the exit code for this example will be"}, {"sha": "2961c4ec58245588d1592ef7d0799702852383c7", "filename": "src/libstd/sys/unix/ext/process.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/001bfb9e566b92b9336eb210b270c9404626d89f/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/001bfb9e566b92b9336eb210b270c9404626d89f/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs?ref=001bfb9e566b92b9336eb210b270c9404626d89f", "patch": "@@ -67,10 +67,20 @@ pub trait CommandExt {\n     /// an error indicating why the exec (or another part of the setup of the\n     /// `Command`) failed.\n     ///\n+    /// `exec` not returning has the same implications as calling\n+    /// [`process::exit`] \u2013 no destructors on the current stack or any other\n+    /// thread\u2019s stack will be run. Therefore, it is recommended to only call\n+    /// `exec` at a point where it is fine to not run any destructors. Note,\n+    /// that the `execvp` syscall independently guarantees that all memory is\n+    /// freed and all file descriptors with the `CLOEXEC` option (set by default\n+    /// on all file descriptors opened by the standard library) are closed.\n+    ///\n     /// This function, unlike `spawn`, will **not** `fork` the process to create\n     /// a new child. Like spawn, however, the default behavior for the stdio\n     /// descriptors will be to inherited from the current process.\n     ///\n+    /// [`process::exit`]: ../../../process/fn.exit.html\n+    ///\n     /// # Notes\n     ///\n     /// The process may be in a \"broken state\" if this function returns in"}]}