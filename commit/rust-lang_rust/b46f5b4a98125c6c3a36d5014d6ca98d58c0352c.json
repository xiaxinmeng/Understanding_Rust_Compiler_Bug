{"sha": "b46f5b4a98125c6c3a36d5014d6ca98d58c0352c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0NmY1YjRhOTgxMjVjNmMzYTM2ZDUwMTRkNmNhOThkNThjMDM1MmM=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-10-04T12:24:47Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-10-04T13:39:46Z"}, "message": "Rustup to rust-lang/rust#64874\n\nEpisode 1 - The simple cases", "tree": {"sha": "10f205d91fa4d5f853fb30bad35f6493fe1d35cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10f205d91fa4d5f853fb30bad35f6493fe1d35cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b46f5b4a98125c6c3a36d5014d6ca98d58c0352c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl2XS6IACgkQaTCGhp1Q\nZjerUBAAk28OaLBXic0958yjvEAXMbpd2od0elfAE7LxqpKQamKFblr5pkKHGsv9\nbnXWrnzl0AvMmG27MIBfKjuj95pSzHxWh04BZAhi4cjRBteSaj7dKC4gEI0/tGQu\n5dSl3+PmK5rKn7KBxtNLqWYGr3zzPUIStF+0ob91iA5tZqMYFJ+pAu7gQbAxO6H6\nh0p9iI/iZOrRu5QXb8H9Uck/QZEzVEzQdcY0w5oZWWFcnVTxjoXqWdNULQEEveeX\nqg7nweXTbsI2LVETZBgntpN4WTayxhuM+or8eOzViw+778bAKxXofqaKGbMRyWXR\nHYzrXgJfUpOD+sGwnQMdiQ7pSA3EHxKo3VarjWTpsZBcRCCmcJlbwrD7Jg0GR5cq\n6icyK1wTOxNgyJAJ7NGjRv30RUDOjrYQpGF8VO0T340eG2l3P7AYMYZj/oi15xGN\nw9kMJsWU67EtbpWEpxPhkn36T6Hw9vptaxlVSOXTQgIZvcSak+waBmHfQQ9mXfI3\nQQ6/N40hMFStIE8cDAewOb7UQEhkyZP5zCY+ouWPY2yJ9xJn2wAbo8Uor1xvEqNv\nAPUZLikVZAOIbq5KNW6W7YzCAJD8u7ZISTEarvmi9FkptIYsi2Wc5y5e6YQwE8w7\nVyJgLy0CsEeI9ekqj85VD075vflezu8o9Z/85ZV9wWwfp+LeENs=\n=lkdS\n-----END PGP SIGNATURE-----", "payload": "tree 10f205d91fa4d5f853fb30bad35f6493fe1d35cb\nparent 54bf4ffd626970e831bb80c037f804a3b3450835\nauthor flip1995 <hello@philkrones.com> 1570191887 +0200\ncommitter flip1995 <hello@philkrones.com> 1570196386 +0200\n\nRustup to rust-lang/rust#64874\n\nEpisode 1 - The simple cases\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b46f5b4a98125c6c3a36d5014d6ca98d58c0352c", "html_url": "https://github.com/rust-lang/rust/commit/b46f5b4a98125c6c3a36d5014d6ca98d58c0352c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b46f5b4a98125c6c3a36d5014d6ca98d58c0352c/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54bf4ffd626970e831bb80c037f804a3b3450835", "url": "https://api.github.com/repos/rust-lang/rust/commits/54bf4ffd626970e831bb80c037f804a3b3450835", "html_url": "https://github.com/rust-lang/rust/commit/54bf4ffd626970e831bb80c037f804a3b3450835"}], "stats": {"total": 66, "additions": 20, "deletions": 46}, "files": [{"sha": "3055e081c6249dec1c161defe213a45c59322db3", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b46f5b4a98125c6c3a36d5014d6ca98d58c0352c/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b46f5b4a98125c6c3a36d5014d6ca98d58c0352c/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=b46f5b4a98125c6c3a36d5014d6ca98d58c0352c", "patch": "@@ -85,7 +85,6 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BoxedLocal {\n             cx.param_env,\n             region_scope_tree,\n             cx.tables,\n-            None,\n         )\n         .consume_body(body);\n \n@@ -114,15 +113,14 @@ fn is_argument(map: &hir::map::Map<'_>, id: HirId) -> bool {\n }\n \n impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n-    fn consume(&mut self, _: HirId, _: Span, cmt: &cmt_<'tcx>, mode: ConsumeMode) {\n+    fn consume(&mut self, cmt: &cmt_<'tcx>, mode: ConsumeMode) {\n         if let Categorization::Local(lid) = cmt.cat {\n-            if let Move(DirectRefMove) | Move(CaptureMove) = mode {\n+            if let ConsumeMode::Move = mode {\n                 // moved out or in. clearly can't be localized\n                 self.set.remove(&lid);\n             }\n         }\n     }\n-    fn matched_pat(&mut self, _: &Pat, _: &cmt_<'tcx>, _: MatchMode) {}\n     fn consume_pat(&mut self, consume_pat: &Pat, cmt: &cmt_<'tcx>, _: ConsumeMode) {\n         let map = &self.cx.tcx.hir();\n         if is_argument(map, consume_pat.hir_id) {\n@@ -137,7 +135,7 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n             }\n             return;\n         }\n-        if let Categorization::Rvalue(..) = cmt.cat {\n+        if let Categorization::Rvalue = cmt.cat {\n             if let Some(Node::Stmt(st)) = map.find(map.get_parent_node(cmt.hir_id)) {\n                 if let StmtKind::Local(ref loc) = st.kind {\n                     if let Some(ref ex) = loc.init {\n@@ -163,12 +161,10 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n             }\n         }\n     }\n+\n     fn borrow(\n         &mut self,\n-        _: HirId,\n-        _: Span,\n         cmt: &cmt_<'tcx>,\n-        _: ty::Region<'_>,\n         _: ty::BorrowKind,\n         loan_cause: LoanCause,\n     ) {\n@@ -192,8 +188,8 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n             }\n         }\n     }\n-    fn decl_without_init(&mut self, _: HirId, _: Span) {}\n-    fn mutate(&mut self, _: HirId, _: Span, _: &cmt_<'tcx>, _: MutateMode) {}\n+\n+    fn mutate(&mut self, _: &cmt_<'tcx>) {}\n }\n \n impl<'a, 'tcx> EscapeDelegate<'a, 'tcx> {"}, {"sha": "ea496a0294ab2b762f6ea6804360519af18762a0", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b46f5b4a98125c6c3a36d5014d6ca98d58c0352c/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b46f5b4a98125c6c3a36d5014d6ca98d58c0352c/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=b46f5b4a98125c6c3a36d5014d6ca98d58c0352c", "patch": "@@ -1547,37 +1547,31 @@ struct MutatePairDelegate {\n }\n \n impl<'tcx> Delegate<'tcx> for MutatePairDelegate {\n-    fn consume(&mut self, _: HirId, _: Span, _: &cmt_<'tcx>, _: ConsumeMode) {}\n+    fn consume(&mut self, _: &cmt_<'tcx>, _: ConsumeMode) {}\n \n-    fn matched_pat(&mut self, _: &Pat, _: &cmt_<'tcx>, _: MatchMode) {}\n-\n-    fn consume_pat(&mut self, _: &Pat, _: &cmt_<'tcx>, _: ConsumeMode) {}\n-\n-    fn borrow(&mut self, _: HirId, sp: Span, cmt: &cmt_<'tcx>, _: ty::Region<'_>, bk: ty::BorrowKind, _: LoanCause) {\n+    fn borrow(&mut self, cmt: &cmt_<'tcx>, bk: ty::BorrowKind) {\n         if let ty::BorrowKind::MutBorrow = bk {\n             if let Categorization::Local(id) = cmt.cat {\n                 if Some(id) == self.hir_id_low {\n-                    self.span_low = Some(sp)\n+                    self.span_low = Some(cmt.span)\n                 }\n                 if Some(id) == self.hir_id_high {\n-                    self.span_high = Some(sp)\n+                    self.span_high = Some(cmt.span)\n                 }\n             }\n         }\n     }\n \n-    fn mutate(&mut self, _: HirId, sp: Span, cmt: &cmt_<'tcx>, _: MutateMode) {\n+    fn mutate(&mut self, cmt: &cmt_<'tcx>) {\n         if let Categorization::Local(id) = cmt.cat {\n             if Some(id) == self.hir_id_low {\n-                self.span_low = Some(sp)\n+                self.span_low = Some(cmt.span)\n             }\n             if Some(id) == self.hir_id_high {\n-                self.span_high = Some(sp)\n+                self.span_high = Some(cmt.span)\n             }\n         }\n     }\n-\n-    fn decl_without_init(&mut self, _: HirId, _: Span) {}\n }\n \n impl<'tcx> MutatePairDelegate {\n@@ -1655,7 +1649,6 @@ fn check_for_mutation(\n         cx.param_env,\n         region_scope_tree,\n         cx.tables,\n-        None,\n     )\n     .walk_expr(body);\n     delegate.mutation_span()"}, {"sha": "932660da19cbd40325dab324bc86348758550dad", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b46f5b4a98125c6c3a36d5014d6ca98d58c0352c/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b46f5b4a98125c6c3a36d5014d6ca98d58c0352c/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=b46f5b4a98125c6c3a36d5014d6ca98d58c0352c", "patch": "@@ -143,7 +143,6 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n                 cx.param_env,\n                 region_scope_tree,\n                 cx.tables,\n-                None,\n             )\n             .consume_body(body);\n             ctx\n@@ -400,9 +399,9 @@ impl<'a, 'tcx> MovedVariablesCtxt<'a, 'tcx> {\n }\n \n impl<'a, 'tcx> euv::Delegate<'tcx> for MovedVariablesCtxt<'a, 'tcx> {\n-    fn consume(&mut self, consume_id: HirId, consume_span: Span, cmt: &mc::cmt_<'tcx>, mode: euv::ConsumeMode) {\n-        if let euv::ConsumeMode::Move(_) = mode {\n-            self.move_common(consume_id, consume_span, cmt);\n+    fn consume(&mut self, cmt: &mc::cmt_<'tcx>, mode: euv::ConsumeMode) {\n+        if let euv::ConsumeMode::Move = mode {\n+            self.move_common(cmt.hir_id, cmt.span, cmt);\n         }\n     }\n \n@@ -422,18 +421,12 @@ impl<'a, 'tcx> euv::Delegate<'tcx> for MovedVariablesCtxt<'a, 'tcx> {\n \n     fn borrow(\n         &mut self,\n-        _: HirId,\n-        _: Span,\n         _: &mc::cmt_<'tcx>,\n-        _: ty::Region<'_>,\n         _: ty::BorrowKind,\n-        _: euv::LoanCause,\n     ) {\n     }\n \n-    fn mutate(&mut self, _: HirId, _: Span, _: &mc::cmt_<'tcx>, _: euv::MutateMode) {}\n-\n-    fn decl_without_init(&mut self, _: HirId, _: Span) {}\n+    fn mutate(&mut self, _: &mc::cmt_<'tcx>) {}\n }\n \n fn unwrap_downcast_or_interior<'a, 'tcx>(mut cmt: &'a mc::cmt_<'tcx>) -> mc::cmt_<'tcx> {"}, {"sha": "41662099fd3d785ec64bb97d170e1ad71d3d580b", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b46f5b4a98125c6c3a36d5014d6ca98d58c0352c/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b46f5b4a98125c6c3a36d5014d6ca98d58c0352c/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=b46f5b4a98125c6c3a36d5014d6ca98d58c0352c", "patch": "@@ -6,7 +6,6 @@ use rustc::middle::mem_categorization::cmt_;\n use rustc::middle::mem_categorization::Categorization;\n use rustc::ty;\n use rustc_data_structures::fx::FxHashSet;\n-use syntax::source_map::Span;\n \n /// Returns a set of mutated local variable IDs, or `None` if mutations could not be determined.\n pub fn mutated_variables<'a, 'tcx>(expr: &'tcx Expr, cx: &'a LateContext<'a, 'tcx>) -> Option<FxHashSet<HirId>> {\n@@ -23,7 +22,6 @@ pub fn mutated_variables<'a, 'tcx>(expr: &'tcx Expr, cx: &'a LateContext<'a, 'tc\n         cx.param_env,\n         region_scope_tree,\n         cx.tables,\n-        None,\n     )\n     .walk_expr(expr);\n \n@@ -66,21 +64,15 @@ impl<'tcx> MutVarsDelegate {\n }\n \n impl<'tcx> Delegate<'tcx> for MutVarsDelegate {\n-    fn consume(&mut self, _: HirId, _: Span, _: &cmt_<'tcx>, _: ConsumeMode) {}\n+    fn consume(&mut self, _: &cmt_<'tcx>, _: ConsumeMode) {}\n \n-    fn matched_pat(&mut self, _: &Pat, _: &cmt_<'tcx>, _: MatchMode) {}\n-\n-    fn consume_pat(&mut self, _: &Pat, _: &cmt_<'tcx>, _: ConsumeMode) {}\n-\n-    fn borrow(&mut self, _: HirId, _: Span, cmt: &cmt_<'tcx>, _: ty::Region<'_>, bk: ty::BorrowKind, _: LoanCause) {\n+    fn borrow(&mut self, cmt: &cmt_<'tcx>, bk: ty::BorrowKind) {\n         if let ty::BorrowKind::MutBorrow = bk {\n             self.update(&cmt.cat)\n         }\n     }\n \n-    fn mutate(&mut self, _: HirId, _: Span, cmt: &cmt_<'tcx>, _: MutateMode) {\n+    fn mutate(&mut self, cmt: &cmt_<'tcx>) {\n         self.update(&cmt.cat)\n     }\n-\n-    fn decl_without_init(&mut self, _: HirId, _: Span) {}\n }"}]}