{"sha": "375bccb8b3fa2a517e6e19e24da25cad0413987d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NWJjY2I4YjNmYTJhNTE3ZTZlMTllMjRkYTI1Y2FkMDQxMzk4N2Q=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-08-05T16:27:54Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-08-05T16:30:37Z"}, "message": "add min_const_generics feature gate", "tree": {"sha": "86f55dce03f5539b0a7c01874f457c02a306d71a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86f55dce03f5539b0a7c01874f457c02a306d71a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/375bccb8b3fa2a517e6e19e24da25cad0413987d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/375bccb8b3fa2a517e6e19e24da25cad0413987d", "html_url": "https://github.com/rust-lang/rust/commit/375bccb8b3fa2a517e6e19e24da25cad0413987d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/375bccb8b3fa2a517e6e19e24da25cad0413987d/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec9d5241f749978150a35f82a2358f494c5b9080", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec9d5241f749978150a35f82a2358f494c5b9080", "html_url": "https://github.com/rust-lang/rust/commit/ec9d5241f749978150a35f82a2358f494c5b9080"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "0e98c047c2fcfa1cb8a0008c05ca1e57c844ac72", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/375bccb8b3fa2a517e6e19e24da25cad0413987d/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/375bccb8b3fa2a517e6e19e24da25cad0413987d/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=375bccb8b3fa2a517e6e19e24da25cad0413987d", "patch": "@@ -776,7 +776,13 @@ fn validate_generic_param_order<'a>(\n             span,\n             &format!(\n                 \"reorder the parameters: lifetimes, then types{}\",\n-                if sess.features_untracked().const_generics { \", then consts\" } else { \"\" },\n+                if sess.features_untracked().const_generics\n+                    || sess.features_untracked().min_const_generics\n+                {\n+                    \", then consts\"\n+                } else {\n+                    \"\"\n+                },\n             ),\n             ordered_params.clone(),\n             Applicability::MachineApplicable,"}, {"sha": "0c8edc565bd03d6d0943904d01890220b6a91a77", "filename": "src/librustc_ast_passes/feature_gate.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/375bccb8b3fa2a517e6e19e24da25cad0413987d/src%2Flibrustc_ast_passes%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/375bccb8b3fa2a517e6e19e24da25cad0413987d/src%2Flibrustc_ast_passes%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Ffeature_gate.rs?ref=375bccb8b3fa2a517e6e19e24da25cad0413987d", "patch": "@@ -526,12 +526,13 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n \n     fn visit_generic_param(&mut self, param: &'a GenericParam) {\n         if let GenericParamKind::Const { .. } = param.kind {\n-            gate_feature_post!(\n+            gate_feature_fn!(\n                 &self,\n-                const_generics,\n+                |x: &Features| x.const_generics || x.min_const_generics,\n                 param.ident.span,\n+                sym::const_generics,\n                 \"const generics are unstable\"\n-            )\n+            );\n         }\n         visit::walk_generic_param(self, param)\n     }"}, {"sha": "d726fd8d5f7ce72696f67486489ca8407e34c17a", "filename": "src/librustc_feature/active.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/375bccb8b3fa2a517e6e19e24da25cad0413987d/src%2Flibrustc_feature%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/375bccb8b3fa2a517e6e19e24da25cad0413987d/src%2Flibrustc_feature%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_feature%2Factive.rs?ref=375bccb8b3fa2a517e6e19e24da25cad0413987d", "patch": "@@ -579,6 +579,9 @@ declare_features! (\n     /// Alloc calling `transmute` in const fn\n     (active, const_fn_transmute, \"1.46.0\", Some(53605), None),\n \n+    /// The smallest useful subset of `const_generics`.\n+    (active, min_const_generics, \"1.46.0\", None, None),\n+\n     // -------------------------------------------------------------------------\n     // feature-group-end: actual feature gates\n     // -------------------------------------------------------------------------"}, {"sha": "16f5e9a42d3733b32762c5f6609b89d5c4767204", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/375bccb8b3fa2a517e6e19e24da25cad0413987d/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/375bccb8b3fa2a517e6e19e24da25cad0413987d/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=375bccb8b3fa2a517e6e19e24da25cad0413987d", "patch": "@@ -1380,7 +1380,9 @@ impl<'tcx> TyCtxt<'tcx> {\n     /// we still evaluate them eagerly.\n     #[inline]\n     pub fn lazy_normalization(self) -> bool {\n-        self.features().const_generics || self.features().lazy_normalization_consts\n+        let features = self.features();\n+        // Note: We do not enable lazy normalization for `features.min_const_generics`.\n+        features.const_generics || features.lazy_normalization_consts\n     }\n \n     #[inline]"}, {"sha": "5203bfdb3b7ce8f43bc4579c5b1571a914c3ce1a", "filename": "src/librustc_span/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/375bccb8b3fa2a517e6e19e24da25cad0413987d/src%2Flibrustc_span%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/375bccb8b3fa2a517e6e19e24da25cad0413987d/src%2Flibrustc_span%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsymbol.rs?ref=375bccb8b3fa2a517e6e19e24da25cad0413987d", "patch": "@@ -672,6 +672,7 @@ symbols! {\n         min_align_of,\n         min_align_of_val,\n         min_const_fn,\n+        min_const_generics,\n         min_const_unsafe_fn,\n         min_specialization,\n         minnumf32,"}, {"sha": "bab8db46a9d897eca0d6e1a545ed192043baf76d", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/375bccb8b3fa2a517e6e19e24da25cad0413987d/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/375bccb8b3fa2a517e6e19e24da25cad0413987d/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=375bccb8b3fa2a517e6e19e24da25cad0413987d", "patch": "@@ -1238,6 +1238,9 @@ fn generics_of(tcx: TyCtxt<'_>, def_id: DefId) -> ty::Generics {\n                 // HACK(eddyb) this provides the correct generics when\n                 // `feature(const_generics)` is enabled, so that const expressions\n                 // used with const generics, e.g. `Foo<{N+1}>`, can work at all.\n+                //\n+                // Note that we do not supply the parent generics when using\n+                // `feature(min_const_generics)`.\n                 Some(parent_def_id.to_def_id())\n             } else {\n                 let parent_node = tcx.hir().get(tcx.hir().get_parent_node(hir_id));"}]}