{"sha": "cdca5cfbfd0679645f91031b2619aac42cb5f68a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkY2E1Y2ZiZmQwNjc5NjQ1ZjkxMDMxYjI2MTlhYWM0MmNiNWY2OGE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-03T06:40:18Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-20T21:41:28Z"}, "message": "parser: extract error_outer_attrs", "tree": {"sha": "403fd388a20625de6b3a9f098509bd259062aa9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/403fd388a20625de6b3a9f098509bd259062aa9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdca5cfbfd0679645f91031b2619aac42cb5f68a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdca5cfbfd0679645f91031b2619aac42cb5f68a", "html_url": "https://github.com/rust-lang/rust/commit/cdca5cfbfd0679645f91031b2619aac42cb5f68a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdca5cfbfd0679645f91031b2619aac42cb5f68a/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "467c86f4cbdd610f5f67a6dc4e97a4d1a5567e59", "url": "https://api.github.com/repos/rust-lang/rust/commits/467c86f4cbdd610f5f67a6dc4e97a4d1a5567e59", "html_url": "https://github.com/rust-lang/rust/commit/467c86f4cbdd610f5f67a6dc4e97a4d1a5567e59"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "c5c3683057ee613d67c2a8207e852df2589d0eef", "filename": "src/librustc_parse/parser/stmt.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/cdca5cfbfd0679645f91031b2619aac42cb5f68a/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdca5cfbfd0679645f91031b2619aac42cb5f68a/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fstmt.rs?ref=cdca5cfbfd0679645f91031b2619aac42cb5f68a", "patch": "@@ -90,21 +90,9 @@ impl<'a> Parser<'a> {\n             return Ok(Some(self.mk_stmt(lo.to(item.span), StmtKind::Item(item))));\n         }\n \n-        let unused_attrs = |attrs: &[Attribute], s: &mut Self| {\n-            if !attrs.is_empty() {\n-                if s.prev_token_kind == PrevTokenKind::DocComment {\n-                    s.span_fatal_err(s.prev_span, Error::UselessDocComment).emit();\n-                } else if attrs.iter().any(|a| a.style == AttrStyle::Outer) {\n-                    s.span_err(\n-                        s.token.span, \"expected statement after outer attribute\"\n-                    );\n-                }\n-            }\n-        };\n-\n         // Do not attempt to parse an expression if we're done here.\n         if self.token == token::Semi {\n-            unused_attrs(&attrs, self);\n+            self.error_outer_attrs(&attrs);\n             self.bump();\n             let mut last_semi = lo;\n             while self.token == token::Semi {\n@@ -122,7 +110,7 @@ impl<'a> Parser<'a> {\n         }\n \n         if self.token == token::CloseDelim(token::Brace) {\n-            unused_attrs(&attrs, self);\n+            self.error_outer_attrs(&attrs);\n             return Ok(None);\n         }\n \n@@ -190,6 +178,18 @@ impl<'a> Parser<'a> {\n         Ok(Some(self.mk_stmt(lo.to(hi), kind)))\n     }\n \n+    /// Error on outer attributes in this context.\n+    /// Also error if the previous token was a doc comment.\n+    fn error_outer_attrs(&self, attrs: &[Attribute]) {\n+        if !attrs.is_empty() {\n+            if self.prev_token_kind == PrevTokenKind::DocComment {\n+                self.span_fatal_err(self.prev_span, Error::UselessDocComment).emit();\n+            } else if attrs.iter().any(|a| a.style == AttrStyle::Outer) {\n+                self.span_err(self.token.span, \"expected statement after outer attribute\");\n+            }\n+        }\n+    }\n+\n     /// Parses a local variable declaration.\n     fn parse_local(&mut self, attrs: ThinVec<Attribute>) -> PResult<'a, P<Local>> {\n         let lo = self.prev_span;"}]}