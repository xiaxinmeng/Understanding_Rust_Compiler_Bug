{"sha": "0016af5f13702feb92f6323417fb9fe495e964d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwMTZhZjVmMTM3MDJmZWI5MmY2MzIzNDE3ZmI5ZmU0OTVlOTY0ZDA=", "commit": {"author": {"name": "Alex Burka", "email": "durka42+github@gmail.com", "date": "2016-06-13T21:54:39Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-07-27T17:58:51Z"}, "message": "not just a single field", "tree": {"sha": "9f30975292018a571fbc554712bdbef2d7b56e62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f30975292018a571fbc554712bdbef2d7b56e62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0016af5f13702feb92f6323417fb9fe495e964d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0016af5f13702feb92f6323417fb9fe495e964d0", "html_url": "https://github.com/rust-lang/rust/commit/0016af5f13702feb92f6323417fb9fe495e964d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0016af5f13702feb92f6323417fb9fe495e964d0/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84366b6f281614f61381962e2e46b73bb471c737", "url": "https://api.github.com/repos/rust-lang/rust/commits/84366b6f281614f61381962e2e46b73bb471c737", "html_url": "https://github.com/rust-lang/rust/commit/84366b6f281614f61381962e2e46b73bb471c737"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "07b8d8e0da8a980adb8eddb44f0329a966f396da", "filename": "src/doc/book/ffi.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0016af5f13702feb92f6323417fb9fe495e964d0/src%2Fdoc%2Fbook%2Fffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/0016af5f13702feb92f6323417fb9fe495e964d0/src%2Fdoc%2Fbook%2Fffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fffi.md?ref=0016af5f13702feb92f6323417fb9fe495e964d0", "patch": "@@ -580,7 +580,7 @@ However, the language provides a workaround.\n \n As a special case, an `enum` is eligible for the \"nullable pointer optimization\" if it\n contains exactly two variants, one of which contains no data and the other contains\n-a single field of one of the non-nullable types listed above (or a struct containing such a type).\n+a field of one of the non-nullable types listed above (or a struct containing such a type).\n This means it is represented as a single pointer, and the non-data variant is represented as a\n null pointer. This is called an \"optimization\", but unlike other optimizations it is guaranteed\n to apply to eligible types."}]}