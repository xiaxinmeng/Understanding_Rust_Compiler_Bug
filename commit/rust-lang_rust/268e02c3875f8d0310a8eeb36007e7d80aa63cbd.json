{"sha": "268e02c3875f8d0310a8eeb36007e7d80aa63cbd", "node_id": "C_kwDOAAsO6NoAKDI2OGUwMmMzODc1ZjhkMDMxMGE4ZWViMzYwMDdlN2Q4MGFhNjNjYmQ", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-10-01T18:22:46Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-10-02T13:42:14Z"}, "message": "Remove type argument of array_alloca and rename to byte_array_alloca", "tree": {"sha": "cdf94a3f3267286ef221c5026e188c6d538502a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdf94a3f3267286ef221c5026e188c6d538502a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/268e02c3875f8d0310a8eeb36007e7d80aa63cbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/268e02c3875f8d0310a8eeb36007e7d80aa63cbd", "html_url": "https://github.com/rust-lang/rust/commit/268e02c3875f8d0310a8eeb36007e7d80aa63cbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/268e02c3875f8d0310a8eeb36007e7d80aa63cbd/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fe84bc38b19bacb7cb2a5765fb4ffa2106fe9e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fe84bc38b19bacb7cb2a5765fb4ffa2106fe9e2", "html_url": "https://github.com/rust-lang/rust/commit/0fe84bc38b19bacb7cb2a5765fb4ffa2106fe9e2"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "a314b7cc2152ddf7d1a74ec5a16300e51e212d05", "filename": "compiler/rustc_codegen_gcc/src/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/268e02c3875f8d0310a8eeb36007e7d80aa63cbd/compiler%2Frustc_codegen_gcc%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268e02c3875f8d0310a8eeb36007e7d80aa63cbd/compiler%2Frustc_codegen_gcc%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fbuilder.rs?ref=268e02c3875f8d0310a8eeb36007e7d80aa63cbd", "patch": "@@ -655,7 +655,7 @@ impl<'a, 'gcc, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'gcc, 'tcx> {\n         self.current_func().new_local(None, aligned_type, &format!(\"stack_var_{}\", self.stack_var_count.get())).get_address(None)\n     }\n \n-    fn array_alloca(&mut self, _ty: Type<'gcc>, _len: RValue<'gcc>, _align: Align) -> RValue<'gcc> {\n+    fn byte_array_alloca(&mut self, _len: RValue<'gcc>, _align: Align) -> RValue<'gcc> {\n         unimplemented!();\n     }\n "}, {"sha": "fca43a0d86ddd5b8614424fd0aac1ddbf87daf6d", "filename": "compiler/rustc_codegen_llvm/src/builder.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/268e02c3875f8d0310a8eeb36007e7d80aa63cbd/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268e02c3875f8d0310a8eeb36007e7d80aa63cbd/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs?ref=268e02c3875f8d0310a8eeb36007e7d80aa63cbd", "patch": "@@ -418,9 +418,10 @@ impl<'a, 'll, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         }\n     }\n \n-    fn array_alloca(&mut self, ty: &'ll Type, len: &'ll Value, align: Align) -> &'ll Value {\n+    fn byte_array_alloca(&mut self, len: &'ll Value, align: Align) -> &'ll Value {\n         unsafe {\n-            let alloca = llvm::LLVMBuildArrayAlloca(self.llbuilder, ty, len, UNNAMED);\n+            let alloca =\n+                llvm::LLVMBuildArrayAlloca(self.llbuilder, self.cx().type_i8(), len, UNNAMED);\n             llvm::LLVMSetAlignment(alloca, align.bytes() as c_uint);\n             alloca\n         }"}, {"sha": "e6ba642a7ed0e969a1eb3d3e7bdc0ad6fc13d361", "filename": "compiler/rustc_codegen_ssa/src/mir/operand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/268e02c3875f8d0310a8eeb36007e7d80aa63cbd/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268e02c3875f8d0310a8eeb36007e7d80aa63cbd/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs?ref=268e02c3875f8d0310a8eeb36007e7d80aa63cbd", "patch": "@@ -352,7 +352,7 @@ impl<'a, 'tcx, V: CodegenObject> OperandValue<V> {\n \n         // Allocate an appropriate region on the stack, and copy the value into it\n         let (llsize, _) = glue::size_and_align_of_dst(bx, unsized_ty, Some(llextra));\n-        let lldst = bx.array_alloca(bx.cx().type_i8(), llsize, max_align);\n+        let lldst = bx.byte_array_alloca(llsize, max_align);\n         bx.memcpy(lldst, max_align, llptr, min_align, llsize, flags);\n \n         // Store the allocated region and the extra to the indirect place."}, {"sha": "01408f39fb30606a63b5a8b4a81be9a8d15ca610", "filename": "compiler/rustc_codegen_ssa/src/traits/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/268e02c3875f8d0310a8eeb36007e7d80aa63cbd/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268e02c3875f8d0310a8eeb36007e7d80aa63cbd/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbuilder.rs?ref=268e02c3875f8d0310a8eeb36007e7d80aa63cbd", "patch": "@@ -135,7 +135,7 @@ pub trait BuilderMethods<'a, 'tcx>:\n     fn to_immediate_scalar(&mut self, val: Self::Value, scalar: Scalar) -> Self::Value;\n \n     fn alloca(&mut self, ty: Self::Type, align: Align) -> Self::Value;\n-    fn array_alloca(&mut self, ty: Self::Type, len: Self::Value, align: Align) -> Self::Value;\n+    fn byte_array_alloca(&mut self, len: Self::Value, align: Align) -> Self::Value;\n \n     fn load(&mut self, ty: Self::Type, ptr: Self::Value, align: Align) -> Self::Value;\n     fn volatile_load(&mut self, ty: Self::Type, ptr: Self::Value) -> Self::Value;"}]}