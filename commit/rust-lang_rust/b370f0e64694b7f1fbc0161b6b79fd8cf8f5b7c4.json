{"sha": "b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNzBmMGU2NDY5NGI3ZjFmYmMwMTYxYjZiNzlmZDhjZjhmNWI3YzQ=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-06-08T23:20:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-08T23:20:58Z"}, "message": "Rollup merge of #51276 - Havvy:dyn-trait-send-send, r=nikomatsakis\n\nDedup auto traits in trait objects.\n\nFixes #47010\n\nNote that the test file `run-pass/trait-object-auto-dedup.rs` passes before and after this change. It's the `ui` test that changed from compiling to not compiling. Which does make this a breaking change, but I cannot imagine anybody actually being broken by it.", "tree": {"sha": "8cfffb6c87eb53fb8e5c333795343007ab1b377f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cfffb6c87eb53fb8e5c333795343007ab1b377f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbGw9aCRBK7hj4Ov3rIwAAdHIIAFKSYfAfnmZ1Hq1mWLk2y5ck\nT1PHItJY9YBNckh6De+2bSgPHhEUBbHFgUjlvz59GdnwsZUZsxMeD5LhdV814/tO\nE+H8KPBnFZu1HGmeeRLvVqTSQyQtWAPPYqMTWnn6DZvbvOZtdmgvowKG4ocx8nPG\nPv5Oox8Eeo3dOoNB3oi2V/Ks8usk+P/oerr/ulqZ81OfcmIZDt8Y8vjQVgSV8bfY\nM7YpbP72NRgvYXUROM1981g57R1n2M/EgwiOTbJ6rX9HHS+hNuNN/RHyA1PahEWt\noavloiujnTAFfgFe732+D0hV+jjhvV6PJ/rkezdtf8OxQOvwxcYFXuVoBuCtCYQ=\n=eRcj\n-----END PGP SIGNATURE-----\n", "payload": "tree 8cfffb6c87eb53fb8e5c333795343007ab1b377f\nparent 71865fb94753da6e4eff4de5e5ddc165d87e8ff4\nparent eccd2ede3c1b11ddcdde7929e049c4773df690ae\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1528500058 -0600\ncommitter GitHub <noreply@github.com> 1528500058 -0600\n\nRollup merge of #51276 - Havvy:dyn-trait-send-send, r=nikomatsakis\n\nDedup auto traits in trait objects.\n\nFixes #47010\n\nNote that the test file `run-pass/trait-object-auto-dedup.rs` passes before and after this change. It's the `ui` test that changed from compiling to not compiling. Which does make this a breaking change, but I cannot imagine anybody actually being broken by it.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4", "html_url": "https://github.com/rust-lang/rust/commit/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71865fb94753da6e4eff4de5e5ddc165d87e8ff4", "url": "https://api.github.com/repos/rust-lang/rust/commits/71865fb94753da6e4eff4de5e5ddc165d87e8ff4", "html_url": "https://github.com/rust-lang/rust/commit/71865fb94753da6e4eff4de5e5ddc165d87e8ff4"}, {"sha": "eccd2ede3c1b11ddcdde7929e049c4773df690ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/eccd2ede3c1b11ddcdde7929e049c4773df690ae", "html_url": "https://github.com/rust-lang/rust/commit/eccd2ede3c1b11ddcdde7929e049c4773df690ae"}], "stats": {"total": 103, "additions": 101, "deletions": 2}, "files": [{"sha": "f29e29c1fb2bf849bf752f9f023da8dfde19bede", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4", "patch": "@@ -30,6 +30,7 @@ use util::common::ErrorReported;\n use util::nodemap::{FxHashSet, FxHashMap};\n use errors::FatalError;\n \n+// use std::cmp::Ordering;\n use std::iter;\n use syntax::ast;\n use syntax::feature_gate::{GateIssue, emit_feature_err};\n@@ -646,7 +647,7 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n                                             &mut vec![]);\n         }\n \n-        let (auto_traits, trait_bounds) = split_auto_traits(tcx, &trait_bounds[1..]);\n+        let (mut auto_traits, trait_bounds) = split_auto_traits(tcx, &trait_bounds[1..]);\n \n         if !trait_bounds.is_empty() {\n             let b = &trait_bounds[0];\n@@ -707,6 +708,10 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n                         .emit();\n         }\n \n+        // Dedup auto traits so that `dyn Trait + Send + Send` is the same as `dyn Trait + Send`.\n+        auto_traits.sort();\n+        auto_traits.dedup();\n+\n         // skip_binder is okay, because the predicates are re-bound.\n         let mut v =\n             iter::once(ty::ExistentialPredicate::Trait(*existential_principal.skip_binder()))\n@@ -1319,7 +1324,7 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n     }\n }\n \n-/// Divides a list of general trait bounds into two groups: builtin bounds (Sync/Send) and the\n+/// Divides a list of general trait bounds into two groups: auto traits (e.g. Sync and Send) and the\n /// remaining general trait bounds.\n fn split_auto_traits<'a, 'b, 'gcx, 'tcx>(tcx: TyCtxt<'a, 'gcx, 'tcx>,\n                                          trait_bounds: &'b [hir::PolyTraitRef])"}, {"sha": "9f5845f6d77b06091bc70b892325908af0bfb742", "filename": "src/test/run-pass/trait-object-auto-dedup.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4/src%2Ftest%2Frun-pass%2Ftrait-object-auto-dedup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4/src%2Ftest%2Frun-pass%2Ftrait-object-auto-dedup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-object-auto-dedup.rs?ref=b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4", "patch": "@@ -0,0 +1,53 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that duplicate auto trait bounds in trait objects don't create new types.\n+#[allow(unused_assignments)]\n+\n+use std::marker::Send as SendAlias;\n+\n+// A dummy trait for the non-auto trait.\n+trait Trait {}\n+\n+// A dummy struct to implement Trait, Send, and .\n+struct Struct;\n+\n+impl Trait for Struct {}\n+\n+// These three functions should be equivalent.\n+fn takes_dyn_trait_send(_: Box<dyn Trait + Send>) {}\n+fn takes_dyn_trait_send_send(_: Box<dyn Trait + Send + Send>) {}\n+fn takes_dyn_trait_send_sendalias(_: Box<dyn Trait + Send + SendAlias>) {}\n+\n+impl dyn Trait + Send + Send {\n+    fn do_nothing(&self) {}\n+}\n+\n+fn main() {\n+    // 1. Moving into a variable with more Sends and back.\n+    let mut dyn_trait_send = Box::new(Struct) as Box<dyn Trait + Send>;\n+    let dyn_trait_send_send: Box<dyn Trait + Send + Send> = dyn_trait_send;\n+    dyn_trait_send = dyn_trait_send_send;\n+\n+    // 2. Calling methods with different number of Sends.\n+    let dyn_trait_send = Box::new(Struct) as Box<dyn Trait + Send>;\n+    takes_dyn_trait_send_send(dyn_trait_send);\n+\n+    let dyn_trait_send_send = Box::new(Struct) as Box<dyn Trait + Send + Send>;\n+    takes_dyn_trait_send(dyn_trait_send_send);\n+\n+    // 3. Aliases to the trait are transparent.\n+    let dyn_trait_send = Box::new(Struct) as Box<dyn Trait + Send>;\n+    takes_dyn_trait_send_sendalias(dyn_trait_send);\n+\n+    // 4. Calling an impl that duplicates an auto trait.\n+    let dyn_trait_send = Box::new(Struct) as Box<dyn Trait + Send>;\n+    dyn_trait_send.do_nothing();\n+}"}, {"sha": "d3e4627a4c9b8c56ef237e1ec7186f3373738c4e", "filename": "src/test/ui/trait-object-auto-dedup-in-impl.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4/src%2Ftest%2Fui%2Ftrait-object-auto-dedup-in-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4/src%2Ftest%2Fui%2Ftrait-object-auto-dedup-in-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-object-auto-dedup-in-impl.rs?ref=b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Checks to make sure that `dyn Trait + Send` and `dyn Trait + Send + Send` are the same type.\n+// Issue: #47010\n+\n+struct Struct;\n+impl Trait for Struct {}\n+trait Trait {}\n+\n+type Send1 = Trait + Send;\n+type Send2 = Trait + Send + Send;\n+\n+fn main () {}\n+\n+impl Trait + Send {\n+    fn test(&self) { println!(\"one\"); } //~ ERROR duplicate definitions with name `test`\n+}\n+\n+impl Trait + Send + Send {\n+    fn test(&self) { println!(\"two\"); }\n+}"}, {"sha": "9abd81cdcfa2370acb44f282099db5ce32c2f8e2", "filename": "src/test/ui/trait-object-auto-dedup-in-impl.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4/src%2Ftest%2Fui%2Ftrait-object-auto-dedup-in-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4/src%2Ftest%2Fui%2Ftrait-object-auto-dedup-in-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-object-auto-dedup-in-impl.stderr?ref=b370f0e64694b7f1fbc0161b6b79fd8cf8f5b7c4", "patch": "@@ -0,0 +1,12 @@\n+error[E0592]: duplicate definitions with name `test`\n+  --> $DIR/trait-object-auto-dedup-in-impl.rs:24:5\n+   |\n+LL |     fn test(&self) { println!(\"one\"); } //~ ERROR duplicate definitions with name `test`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ duplicate definitions for `test`\n+...\n+LL |     fn test(&self) { println!(\"two\"); }\n+   |     ----------------------------------- other definition for `test`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0592`."}]}