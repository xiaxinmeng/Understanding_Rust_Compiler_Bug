{"sha": "c384f9568d9f3e794db0d550ae1fc4041e19060a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzODRmOTU2OGQ5ZjNlNzk0ZGIwZDU1MGFlMWZjNDA0MWUxOTA2MGE=", "commit": {"author": {"name": "David Renshaw", "email": "david@sandstorm.io", "date": "2017-05-30T13:27:08Z"}, "committer": {"name": "David Renshaw", "email": "david@sandstorm.io", "date": "2017-05-30T13:27:08Z"}, "message": "Rvalue::Box -> Rvalue::NullaryOp", "tree": {"sha": "df7d019bdb574b41fb6f784e20e088abb4577e12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df7d019bdb574b41fb6f784e20e088abb4577e12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c384f9568d9f3e794db0d550ae1fc4041e19060a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c384f9568d9f3e794db0d550ae1fc4041e19060a", "html_url": "https://github.com/rust-lang/rust/commit/c384f9568d9f3e794db0d550ae1fc4041e19060a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c384f9568d9f3e794db0d550ae1fc4041e19060a/comments", "author": null, "committer": null, "parents": [{"sha": "bea6d83651d3273b04dc1c6d6f6ece30711073af", "url": "https://api.github.com/repos/rust-lang/rust/commits/bea6d83651d3273b04dc1c6d6f6ece30711073af", "html_url": "https://github.com/rust-lang/rust/commit/bea6d83651d3273b04dc1c6d6f6ece30711073af"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "77d9d9b20cd8f1f0d1ac77cbea4dd911f599c490", "filename": "src/eval_context.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c384f9568d9f3e794db0d550ae1fc4041e19060a/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c384f9568d9f3e794db0d550ae1fc4041e19060a/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=c384f9568d9f3e794db0d550ae1fc4041e19060a", "patch": "@@ -788,11 +788,15 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 self.write_value(val, dest, dest_ty)?;\n             }\n \n-            Box(ty) => {\n+            NullaryOp(mir::NullOp::Box, ty) => {\n                 let ptr = self.alloc_ptr(ty)?;\n                 self.write_primval(dest, PrimVal::Ptr(ptr), dest_ty)?;\n             }\n \n+            NullaryOp(mir::NullOp::SizeOf, _ty) => {\n+                unimplemented!()\n+            }\n+\n             Cast(kind, ref operand, cast_ty) => {\n                 debug_assert_eq!(self.monomorphize(cast_ty, self.substs()), dest_ty);\n                 use rustc::mir::CastKind::*;"}]}