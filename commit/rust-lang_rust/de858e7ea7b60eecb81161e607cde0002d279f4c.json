{"sha": "de858e7ea7b60eecb81161e607cde0002d279f4c", "node_id": "C_kwDOAAsO6NoAKGRlODU4ZTdlYTdiNjBlZWNiODExNjFlNjA3Y2RlMDAwMmQyNzlmNGM", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2023-05-11T04:33:38Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2023-05-11T19:15:02Z"}, "message": "miri: Move patterns for simd tests\n\nIt isn't clear to me why these error patterns do not trigger,\nbut I am not going to waste time analyzing bugs in compiletest.", "tree": {"sha": "4ab9f31bf721cc92bc0c4ac576ccc9fd56d37c41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ab9f31bf721cc92bc0c4ac576ccc9fd56d37c41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de858e7ea7b60eecb81161e607cde0002d279f4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de858e7ea7b60eecb81161e607cde0002d279f4c", "html_url": "https://github.com/rust-lang/rust/commit/de858e7ea7b60eecb81161e607cde0002d279f4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de858e7ea7b60eecb81161e607cde0002d279f4c/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4499daac77fa60a9e1ae4956caed263f2d719c0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4499daac77fa60a9e1ae4956caed263f2d719c0d", "html_url": "https://github.com/rust-lang/rust/commit/4499daac77fa60a9e1ae4956caed263f2d719c0d"}], "stats": {"total": 52, "additions": 17, "deletions": 35}, "files": [{"sha": "10939c0f1c38a82bb57f6ab3caf8a887e5c47878", "filename": "src/tools/miri/tests/fail/intrinsics/simd-float-to-int.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/de858e7ea7b60eecb81161e607cde0002d279f4c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-float-to-int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de858e7ea7b60eecb81161e607cde0002d279f4c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-float-to-int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-float-to-int.rs?ref=de858e7ea7b60eecb81161e607cde0002d279f4c", "patch": "@@ -1,9 +1,8 @@\n-//@error-in-other-file: cannot be represented in target type `i32`\n #![feature(portable_simd)]\n use std::simd::*;\n \n fn main() {\n     unsafe {\n-        let _x: i32x2 = f32x2::from_array([f32::MAX, f32::MIN]).to_int_unchecked();\n+        let _x: i32x2 = f32x2::from_array([f32::MAX, f32::MIN]).to_int_unchecked(); //~ERROR: cannot be represented in target type `i32`\n     }\n }"}, {"sha": "ea5ad62aea908765d616d27fd9f9a7c6d2694974", "filename": "src/tools/miri/tests/fail/intrinsics/simd-float-to-int.stderr", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/de858e7ea7b60eecb81161e607cde0002d279f4c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-float-to-int.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de858e7ea7b60eecb81161e607cde0002d279f4c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-float-to-int.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-float-to-int.stderr?ref=de858e7ea7b60eecb81161e607cde0002d279f4c", "patch": "@@ -1,18 +1,13 @@\n error: Undefined Behavior: `float_to_int_unchecked` intrinsic called on 3.40282347E+38 which cannot be represented in target type `i32`\n-  --> RUSTLIB/core/src/../../portable-simd/crates/core_simd/src/vector.rs:LL:CC\n+  --> $DIR/simd-float-to-int.rs:LL:CC\n    |\n-LL |         unsafe { intrinsics::simd_cast(self) }\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 3.40282347E+38 which cannot be represented in target type `i32`\n+LL |         let _x: i32x2 = f32x2::from_array([f32::MAX, f32::MIN]).to_int_unchecked();\n+   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `float_to_int_unchecked` intrinsic called on 3.40282347E+38 which cannot be represented in target type `i32`\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `std::simd::Simd::<f32, 2>::to_int_unchecked::<i32>` at RUSTLIB/core/src/../../portable-simd/crates/core_simd/src/vector.rs:LL:CC\n-note: inside `main`\n-  --> $DIR/simd-float-to-int.rs:LL:CC\n-   |\n-LL |         let _x: i32x2 = f32x2::from_array([f32::MAX, f32::MIN]).to_int_unchecked();\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: inside `main` at $DIR/simd-float-to-int.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "ceb7beebd8abad93bd8e3559032a049b372f41e5", "filename": "src/tools/miri/tests/fail/intrinsics/simd-gather.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/de858e7ea7b60eecb81161e607cde0002d279f4c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-gather.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de858e7ea7b60eecb81161e607cde0002d279f4c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-gather.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-gather.rs?ref=de858e7ea7b60eecb81161e607cde0002d279f4c", "patch": "@@ -1,11 +1,10 @@\n-//@error-in-other-file: pointer to 1 byte starting at offset 9 is out-of-bounds\n #![feature(portable_simd)]\n use std::simd::*;\n \n fn main() {\n     unsafe {\n         let vec: &[i8] = &[10, 11, 12, 13, 14, 15, 16, 17, 18];\n         let idxs = Simd::from_array([9, 3, 0, 17]);\n-        let _result = Simd::gather_select_unchecked(&vec, Mask::splat(true), idxs, Simd::splat(0));\n+        let _result = Simd::gather_select_unchecked(&vec, Mask::splat(true), idxs, Simd::splat(0)); //~ERROR: pointer to 1 byte starting at offset 9 is out-of-bounds\n     }\n }"}, {"sha": "f82b30a9633ee4e29ee449815ae6daa64edbd5f3", "filename": "src/tools/miri/tests/fail/intrinsics/simd-gather.stderr", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/de858e7ea7b60eecb81161e607cde0002d279f4c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-gather.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de858e7ea7b60eecb81161e607cde0002d279f4c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-gather.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-gather.stderr?ref=de858e7ea7b60eecb81161e607cde0002d279f4c", "patch": "@@ -1,18 +1,13 @@\n error: Undefined Behavior: dereferencing pointer failed: ALLOC has size 9, so pointer to 1 byte starting at offset 9 is out-of-bounds\n-  --> RUSTLIB/core/src/../../portable-simd/crates/core_simd/src/vector.rs:LL:CC\n+  --> $DIR/simd-gather.rs:LL:CC\n    |\n-LL |         unsafe { intrinsics::simd_gather(or, ptrs, enable.to_int()) }\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereferencing pointer failed: ALLOC has size 9, so pointer to 1 byte starting at offset 9 is out-of-bounds\n+LL |         let _result = Simd::gather_select_unchecked(&vec, Mask::splat(true), idxs, Simd::splat(0));\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereferencing pointer failed: ALLOC has size 9, so pointer to 1 byte starting at offset 9 is out-of-bounds\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = note: BACKTRACE:\n-   = note: inside `std::simd::Simd::<i8, 4>::gather_select_unchecked` at RUSTLIB/core/src/../../portable-simd/crates/core_simd/src/vector.rs:LL:CC\n-note: inside `main`\n-  --> $DIR/simd-gather.rs:LL:CC\n-   |\n-LL |         let _result = Simd::gather_select_unchecked(&vec, Mask::splat(true), idxs, Simd::splat(0));\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: inside `main` at $DIR/simd-gather.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "606a6b2798a088854beb00d34e81f544408c47a1", "filename": "src/tools/miri/tests/fail/intrinsics/simd-scatter.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/de858e7ea7b60eecb81161e607cde0002d279f4c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-scatter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de858e7ea7b60eecb81161e607cde0002d279f4c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-scatter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-scatter.rs?ref=de858e7ea7b60eecb81161e607cde0002d279f4c", "patch": "@@ -1,12 +1,11 @@\n-//@error-in-other-file: pointer to 1 byte starting at offset 9 is out-of-bounds\n #![feature(portable_simd)]\n use std::simd::*;\n \n fn main() {\n     unsafe {\n         let mut vec: Vec<i8> = vec![10, 11, 12, 13, 14, 15, 16, 17, 18];\n         let idxs = Simd::from_array([9, 3, 0, 17]);\n-        Simd::from_array([-27, 82, -41, 124]).scatter_select_unchecked(\n+        Simd::from_array([-27, 82, -41, 124]).scatter_select_unchecked( //~ERROR: pointer to 1 byte starting at offset 9 is out-of-bounds\n             &mut vec,\n             Mask::splat(true),\n             idxs,"}, {"sha": "6d959af85fa751021b9c20f48382350ed87d05fb", "filename": "src/tools/miri/tests/fail/intrinsics/simd-scatter.stderr", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/de858e7ea7b60eecb81161e607cde0002d279f4c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-scatter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de858e7ea7b60eecb81161e607cde0002d279f4c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-scatter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fintrinsics%2Fsimd-scatter.stderr?ref=de858e7ea7b60eecb81161e607cde0002d279f4c", "patch": "@@ -1,22 +1,17 @@\n error: Undefined Behavior: dereferencing pointer failed: ALLOC has size 9, so pointer to 1 byte starting at offset 9 is out-of-bounds\n-  --> RUSTLIB/core/src/../../portable-simd/crates/core_simd/src/vector.rs:LL:CC\n-   |\n-LL |             intrinsics::simd_scatter(self, ptrs, enable.to_int())\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereferencing pointer failed: ALLOC has size 9, so pointer to 1 byte starting at offset 9 is out-of-bounds\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-   = note: BACKTRACE:\n-   = note: inside `std::simd::Simd::<i8, 4>::scatter_select_unchecked` at RUSTLIB/core/src/../../portable-simd/crates/core_simd/src/vector.rs:LL:CC\n-note: inside `main`\n   --> $DIR/simd-scatter.rs:LL:CC\n    |\n LL | /         Simd::from_array([-27, 82, -41, 124]).scatter_select_unchecked(\n LL | |             &mut vec,\n LL | |             Mask::splat(true),\n LL | |             idxs,\n LL | |         );\n-   | |_________^\n+   | |_________^ dereferencing pointer failed: ALLOC has size 9, so pointer to 1 byte starting at offset 9 is out-of-bounds\n+   |\n+   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n+   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n+   = note: BACKTRACE:\n+   = note: inside `main` at $DIR/simd-scatter.rs:LL:CC\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}]}