{"sha": "a5b9a0cb787b69204a2861f7c49f711ddfafafea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1YjlhMGNiNzg3YjY5MjA0YTI4NjFmN2M0OWY3MTFkZGZhZmFmZWE=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2017-02-07T08:45:22Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2017-02-07T08:45:22Z"}, "message": "Simplify logging output.", "tree": {"sha": "884455645259108d1e8a4d3d5cf026b0b1a1311b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/884455645259108d1e8a4d3d5cf026b0b1a1311b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5b9a0cb787b69204a2861f7c49f711ddfafafea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5b9a0cb787b69204a2861f7c49f711ddfafafea", "html_url": "https://github.com/rust-lang/rust/commit/a5b9a0cb787b69204a2861f7c49f711ddfafafea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5b9a0cb787b69204a2861f7c49f711ddfafafea/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0afcb0568e46cec1e82510f6cd52c2c4edd662f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0afcb0568e46cec1e82510f6cd52c2c4edd662f1", "html_url": "https://github.com/rust-lang/rust/commit/0afcb0568e46cec1e82510f6cd52c2c4edd662f1"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "f1a97d0a44b5c9b258704652cd89563e4f30de41", "filename": "src/bin/miri.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a5b9a0cb787b69204a2861f7c49f711ddfafafea/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5b9a0cb787b69204a2861f7c49f711ddfafafea/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=a5b9a0cb787b69204a2861f7c49f711ddfafafea", "patch": "@@ -143,24 +143,25 @@ fn resource_limits_from_attributes(state: &CompileState) -> miri::ResourceLimits\n }\n \n fn init_logger() {\n-    const MAX_INDENT: usize = 40;\n-\n     let format = |record: &log::LogRecord| {\n         if record.level() == log::LogLevel::Trace {\n             // prepend spaces to indent the final string\n             let indentation = log_settings::settings().indentation;\n-            format!(\"{lvl}:{module}{depth:2}{indent:<indentation$} {text}\",\n+            format!(\n+                \"{lvl}:{module}:{indent:<indentation$} {text}\",\n                 lvl = record.level(),\n                 module = record.location().module_path(),\n-                depth = indentation / MAX_INDENT,\n-                indentation = indentation % MAX_INDENT,\n+                indentation = indentation,\n                 indent = \"\",\n-                text = record.args())\n+                text = record.args(),\n+            )\n         } else {\n-            format!(\"{lvl}:{module}: {text}\",\n+            format!(\n+                \"{lvl}:{module}: {text}\",\n                 lvl = record.level(),\n                 module = record.location().module_path(),\n-                text = record.args())\n+                text = record.args(),\n+            )\n         }\n     };\n "}]}