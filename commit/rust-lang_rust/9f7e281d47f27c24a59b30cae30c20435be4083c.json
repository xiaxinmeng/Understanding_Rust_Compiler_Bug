{"sha": "9f7e281d47f27c24a59b30cae30c20435be4083c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmN2UyODFkNDdmMjdjMjRhNTliMzBjYWUzMGMyMDQzNWJlNDA4M2M=", "commit": {"author": {"name": "Vishad Goyal", "email": "vishad1996@gmail.com", "date": "2021-09-16T13:58:03Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-09-16T18:22:32Z"}, "message": "delay error for enabling unstable lib features\n\nIf #![feature] is used outside the nightly channel for only lib\nfeatures, the check will be delayed to the stability pass after\nparsing. This is done so that appropriate help messages can be shown if\nthe #![feature] has been used needlessly", "tree": {"sha": "8622ced72091968b042055b48f113674ebaa92f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8622ced72091968b042055b48f113674ebaa92f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f7e281d47f27c24a59b30cae30c20435be4083c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f7e281d47f27c24a59b30cae30c20435be4083c", "html_url": "https://github.com/rust-lang/rust/commit/9f7e281d47f27c24a59b30cae30c20435be4083c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f7e281d47f27c24a59b30cae30c20435be4083c/comments", "author": {"login": "vishadGoyal", "id": 23337113, "node_id": "MDQ6VXNlcjIzMzM3MTEz", "avatar_url": "https://avatars.githubusercontent.com/u/23337113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishadGoyal", "html_url": "https://github.com/vishadGoyal", "followers_url": "https://api.github.com/users/vishadGoyal/followers", "following_url": "https://api.github.com/users/vishadGoyal/following{/other_user}", "gists_url": "https://api.github.com/users/vishadGoyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishadGoyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishadGoyal/subscriptions", "organizations_url": "https://api.github.com/users/vishadGoyal/orgs", "repos_url": "https://api.github.com/users/vishadGoyal/repos", "events_url": "https://api.github.com/users/vishadGoyal/events{/privacy}", "received_events_url": "https://api.github.com/users/vishadGoyal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1d8145dffde1092135b571d1d19205fe2a8fc44", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1d8145dffde1092135b571d1d19205fe2a8fc44", "html_url": "https://github.com/rust-lang/rust/commit/d1d8145dffde1092135b571d1d19205fe2a8fc44"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "06e9d9ed329331e3d18e72d77ba7c45f2baea978", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f7e281d47f27c24a59b30cae30c20435be4083c/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f7e281d47f27c24a59b30cae30c20435be4083c/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=9f7e281d47f27c24a59b30cae30c20435be4083c", "patch": "@@ -702,10 +702,16 @@ pub fn check_crate(krate: &ast::Crate, sess: &Session) {\n }\n \n fn maybe_stage_features(sess: &Session, krate: &ast::Crate) {\n+    // checks if `#![feature]` has been used to enable any lang feature\n+    // does not check the same for lib features unless there's at least one\n+    // declared lang feature\n     use rustc_errors::Applicability;\n \n     if !sess.opts.unstable_features.is_nightly_build() {\n         let lang_features = &sess.features_untracked().declared_lang_features;\n+        if lang_features.len() == 0 {\n+            return;\n+        }\n         for attr in krate.attrs.iter().filter(|attr| attr.has_name(sym::feature)) {\n             let mut err = struct_span_err!(\n                 sess.parse_sess.span_diagnostic,"}, {"sha": "d7c354aeb490f6accc78a15593b84410dc3655f5", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9f7e281d47f27c24a59b30cae30c20435be4083c/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f7e281d47f27c24a59b30cae30c20435be4083c/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=9f7e281d47f27c24a59b30cae30c20435be4083c", "patch": "@@ -929,6 +929,16 @@ pub fn check_unused_or_stable_features(tcx: TyCtxt<'_>) {\n     let declared_lib_features = &tcx.features().declared_lib_features;\n     let mut remaining_lib_features = FxHashMap::default();\n     for (feature, span) in declared_lib_features {\n+        if !tcx.sess.opts.unstable_features.is_nightly_build() {\n+            struct_span_err!(\n+                tcx.sess,\n+                *span,\n+                E0554,\n+                \"`#![feature]` may not be used on the {} release channel\",\n+                env!(\"CFG_RELEASE_CHANNEL\")\n+            )\n+            .emit();\n+        }\n         if remaining_lib_features.contains_key(&feature) {\n             // Warn if the user enables a lib feature multiple times.\n             duplicate_feature_err(tcx.sess, *span, *feature);"}]}