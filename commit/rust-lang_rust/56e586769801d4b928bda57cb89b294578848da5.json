{"sha": "56e586769801d4b928bda57cb89b294578848da5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2ZTU4Njc2OTgwMWQ0YjkyOGJkYTU3Y2I4OWIyOTQ1Nzg4NDhkYTU=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2017-01-05T15:53:29Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2017-01-05T15:53:29Z"}, "message": "ICH: Add some more test cases for trait impls.", "tree": {"sha": "82be03bc74b24bda10d4be61d1510cb815d687ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82be03bc74b24bda10d4be61d1510cb815d687ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56e586769801d4b928bda57cb89b294578848da5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56e586769801d4b928bda57cb89b294578848da5", "html_url": "https://github.com/rust-lang/rust/commit/56e586769801d4b928bda57cb89b294578848da5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56e586769801d4b928bda57cb89b294578848da5/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f56207b1283857de92537288893e8d428551a02", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f56207b1283857de92537288893e8d428551a02", "html_url": "https://github.com/rust-lang/rust/commit/2f56207b1283857de92537288893e8d428551a02"}], "stats": {"total": 152, "additions": 152, "deletions": 0}, "files": [{"sha": "15094492248e647480c00bb5df1853507f27a5f0", "filename": "src/test/incremental/hashes/trait_impls.rs", "status": "modified", "additions": 152, "deletions": 0, "changes": 152, "blob_url": "https://github.com/rust-lang/rust/blob/56e586769801d4b928bda57cb89b294578848da5/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56e586769801d4b928bda57cb89b294578848da5/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs?ref=56e586769801d4b928bda57cb89b294578848da5", "patch": "@@ -402,3 +402,155 @@ impl ChangeArgumentTypeTrait for Foo {\n     fn method_name(&self, _x: char) { }\n }\n \n+\n+\n+struct Bar<T>(T);\n+\n+// Add Type Parameter To Impl --------------------------------------------------\n+trait AddTypeParameterToImpl<T> {\n+    fn id(t: T) -> T;\n+}\n+\n+#[cfg(cfail1)]\n+impl AddTypeParameterToImpl<u32> for Bar<u32> {\n+    fn id(t: u32) -> u32 { t }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl<T> AddTypeParameterToImpl<T> for Bar<T> {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    fn id(t: T) -> T { t }\n+}\n+\n+\n+\n+// Change Self Type of Impl ----------------------------------------------------\n+trait ChangeSelfTypeOfImpl {\n+    fn id(self) -> Self;\n+}\n+\n+#[cfg(cfail1)]\n+impl ChangeSelfTypeOfImpl for u32 {\n+    fn id(self) -> Self { self }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl ChangeSelfTypeOfImpl for u64 {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    fn id(self) -> Self { self }\n+}\n+\n+\n+\n+// Add Lifetime Bound to Impl --------------------------------------------------\n+trait AddLifetimeBoundToImplParameter {\n+    fn id(self) -> Self;\n+}\n+\n+#[cfg(cfail1)]\n+impl<T> AddLifetimeBoundToImplParameter for T {\n+    fn id(self) -> Self { self }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl<T: 'static> AddLifetimeBoundToImplParameter for T {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    fn id(self) -> Self { self }\n+}\n+\n+\n+\n+// Add Trait Bound to Impl Parameter -------------------------------------------\n+trait AddTraitBoundToImplParameter {\n+    fn id(self) -> Self;\n+}\n+\n+#[cfg(cfail1)]\n+impl<T> AddTraitBoundToImplParameter for T {\n+    fn id(self) -> Self { self }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl<T: Clone> AddTraitBoundToImplParameter for T {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    fn id(self) -> Self { self }\n+}\n+\n+\n+\n+// Add #[no_mangle] to Method --------------------------------------------------\n+trait AddNoMangleToMethod {\n+    fn add_no_mangle_to_method(&self) { }\n+}\n+\n+#[cfg(cfail1)]\n+impl AddNoMangleToMethod for Foo {\n+    fn add_no_mangle_to_method(&self) { }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl AddNoMangleToMethod for Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    #[no_mangle]\n+    fn add_no_mangle_to_method(&self) { }\n+}\n+\n+\n+// Make Method #[inline] -------------------------------------------------------\n+trait MakeMethodInline {\n+    fn make_method_inline(&self) -> u8 { 0 }\n+}\n+\n+#[cfg(cfail1)]\n+impl MakeMethodInline for Foo {\n+    fn make_method_inline(&self) -> u8 { 0 }\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_clean(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+impl MakeMethodInline for Foo {\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    #[inline]\n+    fn make_method_inline(&self) -> u8 { 0 }\n+}"}]}