{"sha": "46174188e8d8b6b42debbd0939a95d14b91c514f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2MTc0MTg4ZThkOGI2YjQyZGViYmQwOTM5YTk1ZDE0YjkxYzUxNGY=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-03T17:51:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-03T17:51:18Z"}, "message": "Rollup merge of #81716 - m-ou-se:fix-ice, r=eddyb\n\nFix non-existent-field ICE for generic fields.\n\nI mentioned this ICE in a chat and it took about 3 milliseconds before `@eddyb` found the problem and said this change would fix it. :)\n\nThis also changes one the field types in the related test to one that triggered the ICE.\n\nFixes #81627.\nFixes #81672.\nFixes #81709.\n\nCc https://github.com/rust-lang/rust/pull/81480 `@b-naber` `@estebank.`", "tree": {"sha": "8ffabda42410e78509f79b3912db5ce17b9da589", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ffabda42410e78509f79b3912db5ce17b9da589"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46174188e8d8b6b42debbd0939a95d14b91c514f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgGuKXCRBK7hj4Ov3rIwAAdHIIAIkGRmzk2NEcq3/YNAYrNYxx\ngPUiOz2CCsVC0pGtiUW3o/YnpXda2R/cK3W9BsHfDPJ59FMJ0M4ZL+eSWiqo5Vx3\nD0ysY10z69VFcXQDble/ArHSZmwEadgBLPpwYvePwwgY+F7hrU08XHfJgjqPQAdX\nA+eN6KAgnDTbmtRXBR0v+0N0lXgQwIxKHPE/bPlo6V+uaTNKWYP6vocN+Oudy2lg\nq5aoGHEghYOPXyXcFA/vheAQryDexXib5mdz7Dd91JYCRihga4Iy3pbQ9NgBmiZz\n4Ag7a1LVeOhuxSNFXpGulU8zrY7f5Q1aL1ONdgVvOStrqXLX8Qy9PrT0xkQO550=\n=I6Em\n-----END PGP SIGNATURE-----\n", "payload": "tree 8ffabda42410e78509f79b3912db5ce17b9da589\nparent 65b3c0caf0549efab0ca0ad126d91ffdd7848cd3\nparent 68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5\nauthor Mara Bos <m-ou.se@m-ou.se> 1612374678 +0100\ncommitter GitHub <noreply@github.com> 1612374678 +0100\n\nRollup merge of #81716 - m-ou-se:fix-ice, r=eddyb\n\nFix non-existent-field ICE for generic fields.\n\nI mentioned this ICE in a chat and it took about 3 milliseconds before `@eddyb` found the problem and said this change would fix it. :)\n\nThis also changes one the field types in the related test to one that triggered the ICE.\n\nFixes #81627.\nFixes #81672.\nFixes #81709.\n\nCc https://github.com/rust-lang/rust/pull/81480 `@b-naber` `@estebank.`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46174188e8d8b6b42debbd0939a95d14b91c514f", "html_url": "https://github.com/rust-lang/rust/commit/46174188e8d8b6b42debbd0939a95d14b91c514f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46174188e8d8b6b42debbd0939a95d14b91c514f/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65b3c0caf0549efab0ca0ad126d91ffdd7848cd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/65b3c0caf0549efab0ca0ad126d91ffdd7848cd3", "html_url": "https://github.com/rust-lang/rust/commit/65b3c0caf0549efab0ca0ad126d91ffdd7848cd3"}, {"sha": "68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5", "html_url": "https://github.com/rust-lang/rust/commit/68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "33b1c0bb2c97cb8a50ed6a8a3ef688370d23a5e7", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46174188e8d8b6b42debbd0939a95d14b91c514f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46174188e8d8b6b42debbd0939a95d14b91c514f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=46174188e8d8b6b42debbd0939a95d14b91c514f", "patch": "@@ -1974,7 +1974,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n             field_path.push(candidate_field.ident.normalize_to_macros_2_0());\n             let field_ty = candidate_field.ty(self.tcx, subst);\n-            if let Some((nested_fields, _)) = self.get_field_candidates(span, &field_ty) {\n+            if let Some((nested_fields, subst)) = self.get_field_candidates(span, &field_ty) {\n                 for field in nested_fields.iter() {\n                     let ident = field.ident.normalize_to_macros_2_0();\n                     if ident == target_field {"}, {"sha": "e58b4e6ca4d6f8f7f63a7b788ac83218af229243", "filename": "src/test/ui/suggestions/non-existent-field-present-in-subfield.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46174188e8d8b6b42debbd0939a95d14b91c514f/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/46174188e8d8b6b42debbd0939a95d14b91c514f/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield.fixed?ref=46174188e8d8b6b42debbd0939a95d14b91c514f", "patch": "@@ -3,7 +3,7 @@\n struct Foo {\n     first: Bar,\n     _second: u32,\n-    _third: u32,\n+    _third: Vec<String>,\n }\n \n struct Bar {\n@@ -32,7 +32,7 @@ fn main() {\n     let d = D { test: e };\n     let c = C { c: d };\n     let bar = Bar { bar: c };\n-    let fooer = Foo { first: bar, _second: 4, _third: 5 };\n+    let fooer = Foo { first: bar, _second: 4, _third: Vec::new() };\n \n     let _test = &fooer.first.bar.c;\n     //~^ ERROR no field"}, {"sha": "7e273ac23d8c3828167a263459aaac4b9521abc7", "filename": "src/test/ui/suggestions/non-existent-field-present-in-subfield.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46174188e8d8b6b42debbd0939a95d14b91c514f/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46174188e8d8b6b42debbd0939a95d14b91c514f/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield.rs?ref=46174188e8d8b6b42debbd0939a95d14b91c514f", "patch": "@@ -3,7 +3,7 @@\n struct Foo {\n     first: Bar,\n     _second: u32,\n-    _third: u32,\n+    _third: Vec<String>,\n }\n \n struct Bar {\n@@ -32,7 +32,7 @@ fn main() {\n     let d = D { test: e };\n     let c = C { c: d };\n     let bar = Bar { bar: c };\n-    let fooer = Foo { first: bar, _second: 4, _third: 5 };\n+    let fooer = Foo { first: bar, _second: 4, _third: Vec::new() };\n \n     let _test = &fooer.c;\n     //~^ ERROR no field"}]}