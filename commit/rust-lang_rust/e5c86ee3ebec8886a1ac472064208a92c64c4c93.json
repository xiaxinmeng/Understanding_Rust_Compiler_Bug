{"sha": "e5c86ee3ebec8886a1ac472064208a92c64c4c93", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1Yzg2ZWUzZWJlYzg4ODZhMWFjNDcyMDY0MjA4YTkyYzY0YzRjOTM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-02T19:43:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-02T19:43:29Z"}, "message": "Merge #9117\n\n9117: Allow expand-macro to be invoked anywhere inside a macro call r=Veykril a=Veykril\n\nI don't really see a reason to only limit this to the name-ref of a macro.\r\nbors r+\r\nCloses #4606\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "d244a1693324ec27fbf1dbdd6dc28f2badff34d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d244a1693324ec27fbf1dbdd6dc28f2badff34d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5c86ee3ebec8886a1ac472064208a92c64c4c93", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgt99hCRBK7hj4Ov3rIwAAAG4IAJuaJ4pZlIOK8hw3M6aAb/dj\nmedWaPlVK6kUhDpiDAI8MpeuzyCetfODzxzauSujOaCXJOo4opemWcgTqGrbh1wj\nUwJ4c8+QtkKAYW6m+CG1QSLy0zkxwhq9WxC9PdwBMl1rs4W4y7965NACxyTWWAAG\nEfwoArF098Yq3/vxtlfEUT1nTxs2vUY0hxvXzGjb105i7XV8Gx3FBY3F+pHCsUgO\nPpZvFNDzcBwtaYBi99IJZtBf0RmTxPrRuE+79ewTThB40O1VpvRWiUPHLZKaZ8gx\nRubjl8jItOktP4XVhulL4JDjs40h/VVC9rlAjKgqmy8EN1dOdr8zubpeaueGF10=\n=1Rgw\n-----END PGP SIGNATURE-----\n", "payload": "tree d244a1693324ec27fbf1dbdd6dc28f2badff34d5\nparent 5193728e1d650e6732a42ac5afd57609ff82e407\nparent 841feef79ee9349a9f82e4b642f22aa0f7abcae5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1622663009 +0000\ncommitter GitHub <noreply@github.com> 1622663009 +0000\n\nMerge #9117\n\n9117: Allow expand-macro to be invoked anywhere inside a macro call r=Veykril a=Veykril\n\nI don't really see a reason to only limit this to the name-ref of a macro.\r\nbors r+\r\nCloses #4606\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5c86ee3ebec8886a1ac472064208a92c64c4c93", "html_url": "https://github.com/rust-lang/rust/commit/e5c86ee3ebec8886a1ac472064208a92c64c4c93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5c86ee3ebec8886a1ac472064208a92c64c4c93/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5193728e1d650e6732a42ac5afd57609ff82e407", "url": "https://api.github.com/repos/rust-lang/rust/commits/5193728e1d650e6732a42ac5afd57609ff82e407", "html_url": "https://github.com/rust-lang/rust/commit/5193728e1d650e6732a42ac5afd57609ff82e407"}, {"sha": "841feef79ee9349a9f82e4b642f22aa0f7abcae5", "url": "https://api.github.com/repos/rust-lang/rust/commits/841feef79ee9349a9f82e4b642f22aa0f7abcae5", "html_url": "https://github.com/rust-lang/rust/commit/841feef79ee9349a9f82e4b642f22aa0f7abcae5"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e0d01fa96ed8cb4540a50d529474678a9e1914d3", "filename": "crates/ide/src/expand_macro.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5c86ee3ebec8886a1ac472064208a92c64c4c93/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5c86ee3ebec8886a1ac472064208a92c64c4c93/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fexpand_macro.rs?ref=e5c86ee3ebec8886a1ac472064208a92c64c4c93", "patch": "@@ -28,16 +28,16 @@ pub struct ExpandedMacro {\n pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<ExpandedMacro> {\n     let sema = Semantics::new(db);\n     let file = sema.parse(position.file_id);\n-    let name_ref = find_node_at_offset::<ast::NameRef>(file.syntax(), position.offset)?;\n-    let mac = name_ref.syntax().ancestors().find_map(ast::MacroCall::cast)?;\n+    let mac = find_node_at_offset::<ast::MacroCall>(file.syntax(), position.offset)?;\n+    let name = mac.path()?.segment()?.name_ref()?;\n \n     let expanded = expand_macro_recur(&sema, &mac)?;\n \n     // FIXME:\n     // macro expansion may lose all white space information\n     // But we hope someday we can use ra_fmt for that\n     let expansion = insert_whitespaces(expanded);\n-    Some(ExpandedMacro { name: name_ref.text().to_string(), expansion })\n+    Some(ExpandedMacro { name: name.to_string(), expansion })\n }\n \n fn expand_macro_recur("}]}