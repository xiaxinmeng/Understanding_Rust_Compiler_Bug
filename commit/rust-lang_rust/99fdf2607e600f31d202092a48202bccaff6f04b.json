{"sha": "99fdf2607e600f31d202092a48202bccaff6f04b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ZmRmMjYwN2U2MDBmMzFkMjAyMDkyYTQ4MjAyYmNjYWZmNmYwNGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-13T08:45:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-13T08:45:23Z"}, "message": "Auto merge of #3873 - phansch:hiridification, r=flip1995\n\nSome more HirId-ification\n\n* 8a59f81: Rename span_lint_node* functions to span_lint_hir*\n* a457258: Use `HirId` instead of `NodeId` for lookup", "tree": {"sha": "fc1931e2e305a8b2151526e5091a4ae32abea119", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc1931e2e305a8b2151526e5091a4ae32abea119"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99fdf2607e600f31d202092a48202bccaff6f04b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99fdf2607e600f31d202092a48202bccaff6f04b", "html_url": "https://github.com/rust-lang/rust/commit/99fdf2607e600f31d202092a48202bccaff6f04b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99fdf2607e600f31d202092a48202bccaff6f04b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fc0a738e3fb82bb956c996438c71272ed92e49c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fc0a738e3fb82bb956c996438c71272ed92e49c", "html_url": "https://github.com/rust-lang/rust/commit/8fc0a738e3fb82bb956c996438c71272ed92e49c"}, {"sha": "bf86c1b989f9dd79f8f58343ac5bbe8cdfd22236", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf86c1b989f9dd79f8f58343ac5bbe8cdfd22236", "html_url": "https://github.com/rust-lang/rust/commit/bf86c1b989f9dd79f8f58343ac5bbe8cdfd22236"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "59ca2563cda6eb4a247aeb4789e9195f25b7aad5", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/99fdf2607e600f31d202092a48202bccaff6f04b/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99fdf2607e600f31d202092a48202bccaff6f04b/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=99fdf2607e600f31d202092a48202bccaff6f04b", "patch": "@@ -122,8 +122,7 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n             return;\n         }\n         if let Categorization::Rvalue(..) = cmt.cat {\n-            let id = map.hir_to_node_id(cmt.hir_id);\n-            if let Some(Node::Stmt(st)) = map.find(map.get_parent_node(id)) {\n+            if let Some(Node::Stmt(st)) = map.find_by_hir_id(map.get_parent_node_by_hir_id(cmt.hir_id)) {\n                 if let StmtKind::Local(ref loc) = st.node {\n                     if let Some(ref ex) = loc.init {\n                         if let ExprKind::Box(..) = ex.node {"}, {"sha": "fde4081ae8f5389c04df175672e831708b331b89", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/99fdf2607e600f31d202092a48202bccaff6f04b/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99fdf2607e600f31d202092a48202bccaff6f04b/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=99fdf2607e600f31d202092a48202bccaff6f04b", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::paths;\n use crate::utils::sugg::DiagnosticBuilderExt;\n-use crate::utils::{get_trait_def_id, implements_trait, return_ty, same_tys, span_lint_node_and_then};\n+use crate::utils::{get_trait_def_id, implements_trait, return_ty, same_tys, span_lint_hir_and_then};\n use if_chain::if_chain;\n use rustc::hir;\n use rustc::hir::def_id::DefId;\n@@ -163,7 +163,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NewWithoutDefault {\n                                     }\n \n                                     if let Some(sp) = can_derive_default(self_ty, cx, default_trait_id) {\n-                                        span_lint_node_and_then(\n+                                        span_lint_hir_and_then(\n                                             cx,\n                                             NEW_WITHOUT_DEFAULT,\n                                             id,\n@@ -182,7 +182,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NewWithoutDefault {\n                                                 );\n                                             });\n                                     } else {\n-                                        span_lint_node_and_then(\n+                                        span_lint_hir_and_then(\n                                             cx,\n                                             NEW_WITHOUT_DEFAULT,\n                                             id,"}, {"sha": "2f034b9f1aac51d01e03db025943b83c428974ad", "filename": "clippy_lints/src/partialeq_ne_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/99fdf2607e600f31d202092a48202bccaff6f04b/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99fdf2607e600f31d202092a48202bccaff6f04b/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs?ref=99fdf2607e600f31d202092a48202bccaff6f04b", "patch": "@@ -1,4 +1,4 @@\n-use crate::utils::{is_automatically_derived, span_lint_node};\n+use crate::utils::{is_automatically_derived, span_lint_hir};\n use if_chain::if_chain;\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n@@ -51,7 +51,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n             then {\n                 for impl_item in impl_items {\n                     if impl_item.ident.name == \"ne\" {\n-                        span_lint_node(\n+                        span_lint_hir(\n                             cx,\n                             PARTIALEQ_NE_IMPL,\n                             impl_item.id.hir_id,"}, {"sha": "9a17e593fdfabb9ded5bdea61301b2b0c3d4c95c", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/99fdf2607e600f31d202092a48202bccaff6f04b/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99fdf2607e600f31d202092a48202bccaff6f04b/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=99fdf2607e600f31d202092a48202bccaff6f04b", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{\n-    has_drop, in_macro, is_copy, match_def_path, match_type, paths, snippet_opt, span_lint_node,\n-    span_lint_node_and_then, walk_ptrs_ty_depth,\n+    has_drop, in_macro, is_copy, match_def_path, match_type, paths, snippet_opt, span_lint_hir, span_lint_hir_and_then,\n+    walk_ptrs_ty_depth,\n };\n use if_chain::if_chain;\n use matches::matches;\n@@ -199,7 +199,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for RedundantClone {\n                             span.lo() + BytePos(u32::try_from(dot).unwrap())\n                         );\n \n-                        span_lint_node_and_then(cx, REDUNDANT_CLONE, node, sugg_span, \"redundant clone\", |db| {\n+                        span_lint_hir_and_then(cx, REDUNDANT_CLONE, node, sugg_span, \"redundant clone\", |db| {\n                             db.span_suggestion(\n                                 sugg_span,\n                                 \"remove this\",\n@@ -212,7 +212,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for RedundantClone {\n                             );\n                         });\n                     } else {\n-                        span_lint_node(cx, REDUNDANT_CLONE, node, span, \"redundant clone\");\n+                        span_lint_hir(cx, REDUNDANT_CLONE, node, span, \"redundant clone\");\n                     }\n                 }\n             }"}, {"sha": "fa9a7dac9a0b830df2d1ea4f0bb48f170e709d86", "filename": "clippy_lints/src/utils/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/99fdf2607e600f31d202092a48202bccaff6f04b/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99fdf2607e600f31d202092a48202bccaff6f04b/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs?ref=99fdf2607e600f31d202092a48202bccaff6f04b", "patch": "@@ -134,19 +134,19 @@ pub fn span_lint_and_then<'a, 'tcx: 'a, T: LintContext<'tcx>, F>(\n     db.docs_link(lint);\n }\n \n-pub fn span_lint_node(cx: &LateContext<'_, '_>, lint: &'static Lint, node: HirId, sp: Span, msg: &str) {\n-    DiagnosticWrapper(cx.tcx.struct_span_lint_hir(lint, node, sp, msg)).docs_link(lint);\n+pub fn span_lint_hir(cx: &LateContext<'_, '_>, lint: &'static Lint, hir_id: HirId, sp: Span, msg: &str) {\n+    DiagnosticWrapper(cx.tcx.struct_span_lint_hir(lint, hir_id, sp, msg)).docs_link(lint);\n }\n \n-pub fn span_lint_node_and_then(\n+pub fn span_lint_hir_and_then(\n     cx: &LateContext<'_, '_>,\n     lint: &'static Lint,\n-    node: HirId,\n+    hir_id: HirId,\n     sp: Span,\n     msg: &str,\n     f: impl FnOnce(&mut DiagnosticBuilder<'_>),\n ) {\n-    let mut db = DiagnosticWrapper(cx.tcx.struct_span_lint_hir(lint, node, sp, msg));\n+    let mut db = DiagnosticWrapper(cx.tcx.struct_span_lint_hir(lint, hir_id, sp, msg));\n     f(&mut db.0);\n     db.docs_link(lint);\n }"}]}