{"sha": "f9692d5d000bc0fc53b65663d5f10c8a187fafb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NjkyZDVkMDAwYmMwZmM1M2I2NTY2M2Q1ZjEwYzhhMTg3ZmFmYjI=", "commit": {"author": {"name": "Eli Friedman", "email": "eli.friedman@gmail.com", "date": "2015-07-31T03:51:51Z"}, "committer": {"name": "Eli Friedman", "email": "eli.friedman@gmail.com", "date": "2015-07-31T03:51:51Z"}, "message": "Remove unused code in parser.", "tree": {"sha": "d9818d52c3021d3c9e45aa2294f0da4a59861e51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9818d52c3021d3c9e45aa2294f0da4a59861e51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9692d5d000bc0fc53b65663d5f10c8a187fafb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9692d5d000bc0fc53b65663d5f10c8a187fafb2", "html_url": "https://github.com/rust-lang/rust/commit/f9692d5d000bc0fc53b65663d5f10c8a187fafb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9692d5d000bc0fc53b65663d5f10c8a187fafb2/comments", "author": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28869d45dd1d3ba04e17dec82408f9f3c548e776", "url": "https://api.github.com/repos/rust-lang/rust/commits/28869d45dd1d3ba04e17dec82408f9f3c548e776", "html_url": "https://github.com/rust-lang/rust/commit/28869d45dd1d3ba04e17dec82408f9f3c548e776"}], "stats": {"total": 31, "additions": 0, "deletions": 31}, "files": [{"sha": "bc355f70fb31e92637a3e3a712ecd4581570cde5", "filename": "src/libsyntax/parse/obsolete.rs", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f9692d5d000bc0fc53b65663d5f10c8a187fafb2/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9692d5d000bc0fc53b65663d5f10c8a187fafb2/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fobsolete.rs?ref=f9692d5d000bc0fc53b65663d5f10c8a187fafb2", "patch": "@@ -13,11 +13,8 @@\n //!\n //! Obsolete syntax that becomes too hard to parse can be removed.\n \n-use ast::{Expr, ExprTup};\n use codemap::Span;\n use parse::parser;\n-use parse::token;\n-use ptr::P;\n \n /// The specific types of unsupported syntax\n #[derive(Copy, Clone, PartialEq, Eq, Hash)]\n@@ -29,17 +26,12 @@ pub enum ObsoleteSyntax {\n pub trait ParserObsoleteMethods {\n     /// Reports an obsolete syntax non-fatal error.\n     fn obsolete(&mut self, sp: Span, kind: ObsoleteSyntax);\n-    /// Reports an obsolete syntax non-fatal error, and returns\n-    /// a placeholder expression\n-    fn obsolete_expr(&mut self, sp: Span, kind: ObsoleteSyntax) -> P<Expr>;\n     fn report(&mut self,\n               sp: Span,\n               kind: ObsoleteSyntax,\n               kind_str: &str,\n               desc: &str,\n               error: bool);\n-    fn is_obsolete_ident(&mut self, ident: &str) -> bool;\n-    fn eat_obsolete_ident(&mut self, ident: &str) -> bool;\n }\n \n impl<'a> ParserObsoleteMethods for parser::Parser<'a> {\n@@ -61,13 +53,6 @@ impl<'a> ParserObsoleteMethods for parser::Parser<'a> {\n         self.report(sp, kind, kind_str, desc, error);\n     }\n \n-    /// Reports an obsolete syntax non-fatal error, and returns\n-    /// a placeholder expression\n-    fn obsolete_expr(&mut self, sp: Span, kind: ObsoleteSyntax) -> P<Expr> {\n-        self.obsolete(sp, kind);\n-        self.mk_expr(sp.lo, sp.hi, ExprTup(vec![]))\n-    }\n-\n     fn report(&mut self,\n               sp: Span,\n               kind: ObsoleteSyntax,\n@@ -89,20 +74,4 @@ impl<'a> ParserObsoleteMethods for parser::Parser<'a> {\n             self.obsolete_set.insert(kind);\n         }\n     }\n-\n-    fn is_obsolete_ident(&mut self, ident: &str) -> bool {\n-        match self.token {\n-            token::Ident(sid, _) => sid.name == ident,\n-            _ => false,\n-        }\n-    }\n-\n-    fn eat_obsolete_ident(&mut self, ident: &str) -> bool {\n-        if self.is_obsolete_ident(ident) {\n-            panictry!(self.bump());\n-            true\n-        } else {\n-            false\n-        }\n-    }\n }"}]}