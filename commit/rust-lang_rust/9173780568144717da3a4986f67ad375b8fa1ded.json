{"sha": "9173780568144717da3a4986f67ad375b8fa1ded", "node_id": "C_kwDOAAsO6NoAKDkxNzM3ODA1NjgxNDQ3MTdkYTNhNDk4NmY2N2FkMzc1YjhmYTFkZWQ", "commit": {"author": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2022-04-29T23:57:16Z"}, "committer": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2022-04-29T23:57:16Z"}, "message": "Make filters implicit; Update symbols", "tree": {"sha": "b0369f11577e7ca67e30660637c6401970588525", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0369f11577e7ca67e30660637c6401970588525"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9173780568144717da3a4986f67ad375b8fa1ded", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9173780568144717da3a4986f67ad375b8fa1ded", "html_url": "https://github.com/rust-lang/rust/commit/9173780568144717da3a4986f67ad375b8fa1ded", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9173780568144717da3a4986f67ad375b8fa1ded/comments", "author": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06cc1abbb1b64a60c059137b3d610bbe0e0f3bea", "url": "https://api.github.com/repos/rust-lang/rust/commits/06cc1abbb1b64a60c059137b3d610bbe0e0f3bea", "html_url": "https://github.com/rust-lang/rust/commit/06cc1abbb1b64a60c059137b3d610bbe0e0f3bea"}], "stats": {"total": 46, "additions": 21, "deletions": 25}, "files": [{"sha": "0a990df96f325a16f0d78fba0384271f780a58e1", "filename": "util/gh-pages/index.html", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9173780568144717da3a4986f67ad375b8fa1ded/util%2Fgh-pages%2Findex.html", "raw_url": "https://github.com/rust-lang/rust/raw/9173780568144717da3a4986f67ad375b8fa1ded/util%2Fgh-pages%2Findex.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fgh-pages%2Findex.html?ref=9173780568144717da3a4986f67ad375b8fa1ded", "patch": "@@ -109,6 +109,10 @@\n                 right: 0;\n                 left: auto;\n             }\n+\n+            #version-filter-count {\n+                display: none;\n+            }\n         }\n \n         .label {\n@@ -297,7 +301,7 @@\n \n         #version-filter li label {\n             padding-right: 0;\n-            width: 80%;\n+            width: 40%;\n         }\n \n         .version-filter-input {\n@@ -425,7 +429,7 @@ <h1>Clippy Lints</h1>\n                         <div id=\"version-filter\">\n                             <div class=\"btn-group\" filter-dropdown>\n                                 <button type=\"button\" class=\"btn btn-default dropdown-toggle\">\n-                                    Version <span class=\"caret\"></span>\n+                                    Version <span id=\"version-filter-count\" class=\"badge\">{{versionFilterCount(version_filters)}}</span> <span class=\"caret\"></span>\n                                 </button>\n                                 <ul id=\"version-filter-selector\" class=\"dropdown-menu\">\n                                     <li class=\"checkbox\">\n@@ -436,11 +440,8 @@ <h1>Clippy Lints</h1>\n                                     </li>\n                                     <li role=\"separator\" class=\"divider\"></li>\n                                     <li class=\"checkbox\" ng-repeat=\"(filter, vars) in version_filters\">\n-                                        <label>\n-                                            <input type=\"checkbox\" ng-model=\"version_filters[filter].enabled\" />\n-                                            {{filter}}\n-                                        </label>\n-                                        <input type=\"text\" class=\"version-filter-input form-control filter-input\" maxlength=\"6\" placeholder=\"1.62.0\" ng-model=\"version_filters[filter].version_str\" ng-model-options=\"{debounce: 50}\"/>\n+                                        <label ng-attr-for=\"filter-{filter}\">{{filter}}</label>\n+                                        <input type=\"text\" ng-attr-id=\"filter-{filter}\" class=\"version-filter-input form-control filter-input\" maxlength=\"6\" placeholder=\"1.62.0\" ng-model=\"version_filters[filter].version_str\" ng-model-options=\"{debounce: 50}\"/>\n                                     </li>\n                                 </ul>\n                             </div>"}, {"sha": "8fbd3f50d3c36aec471348a2f91d3e8eb03072f0", "filename": "util/gh-pages/script.js", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9173780568144717da3a4986f67ad375b8fa1ded/util%2Fgh-pages%2Fscript.js", "raw_url": "https://github.com/rust-lang/rust/raw/9173780568144717da3a4986f67ad375b8fa1ded/util%2Fgh-pages%2Fscript.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fgh-pages%2Fscript.js?ref=9173780568144717da3a4986f67ad375b8fa1ded", "patch": "@@ -137,13 +137,13 @@\n             $scope.themes = THEMES_DEFAULT;\n \n             const DEFAULT_VERSION_FILTERS = {\n-                \">=\": { enabled: false, version_str: \"\" },\n-                \"<=\": { enabled: false, version_str: \"\" },\n-                \"==\": { enabled: false, version_str: \"\" },\n+                \"\u2265\": { enabled: false, version_str: \"\" },\n+                \"\u2264\": { enabled: false, version_str: \"\" },\n+                \"=\": { enabled: false, version_str: \"\" },\n             };\n             // Weird workaround to get a copy of the object\n             $scope.version_filters = JSON.parse(JSON.stringify(DEFAULT_VERSION_FILTERS));\n-            $scope.version_regex = new RegExp('\\\\d\\.\\\\d{2}\\.\\\\d');\n+            $scope.version_regex = new RegExp('1\\.\\\\d{2}\\.\\\\d');\n \n             $scope.selectTheme = function (theme) {\n                 setTheme(theme, true);\n@@ -175,16 +175,8 @@\n                 $scope.version_filters = JSON.parse(JSON.stringify(DEFAULT_VERSION_FILTERS));\n             }\n \n-            $scope.versionSymbol = function() {\n-                const version_filters = $scope.version_filters;\n-                let filter = \">=\";\n-                for (const key in version_filters) {\n-                    if (version_filters[key]) {\n-                        filter = key;\n-                    }\n-                }\n-\n-                return filter;\n+            $scope.versionFilterCount = function(obj) {\n+                return Object.values(obj).filter(x => x.enabled).length;\n             }\n \n             $scope.byVersion = function(lint) {\n@@ -214,10 +206,13 @@\n                     let version_str = filters[filter].version_str;\n \n                     // Skip the work for version strings with invalid lengths or characters\n-                    if (!filters[filter].enabled || !validate_version_str(version_str)) {\n+                    if (!validate_version_str(version_str)) {\n+                        filters[filter].enabled = false;\n                         continue;\n                     }\n \n+                    filters[filter].enabled = true;\n+\n                     let result = cmp_version(lint_version, version_str, filter);\n                     if (result && filter === \"==\") {\n                         return true;\n@@ -226,10 +221,10 @@\n                     }\n \n                     let cmp_filter;\n-                    if (filter === \">=\") {\n-                        cmp_filter = \"<=\";\n+                    if (filter === \"\u2265\") {\n+                        cmp_filter = \"\u2264\";\n                     } else {\n-                        cmp_filter = \">=\";\n+                        cmp_filter = \"\u2265\";\n                     }\n \n                     let cmp_version_str = filters[cmp_filter].version_str;"}]}