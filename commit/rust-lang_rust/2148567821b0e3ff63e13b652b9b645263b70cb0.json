{"sha": "2148567821b0e3ff63e13b652b9b645263b70cb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNDg1Njc4MjFiMGUzZmY2M2UxM2I2NTJiOWI2NDUyNjNiNzBjYjA=", "commit": {"author": {"name": "Joshua Landau", "email": "joshua@landau.ws", "date": "2015-06-11T17:10:25Z"}, "committer": {"name": "Joshua Landau", "email": "joshua@landau.ws", "date": "2015-06-11T17:10:25Z"}, "message": "Changed patch wording", "tree": {"sha": "ffd3a3b18dc1398fc870d702c00dc32df5632492", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffd3a3b18dc1398fc870d702c00dc32df5632492"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2148567821b0e3ff63e13b652b9b645263b70cb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2148567821b0e3ff63e13b652b9b645263b70cb0", "html_url": "https://github.com/rust-lang/rust/commit/2148567821b0e3ff63e13b652b9b645263b70cb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2148567821b0e3ff63e13b652b9b645263b70cb0/comments", "author": {"login": "Veedrac", "id": 2867413, "node_id": "MDQ6VXNlcjI4Njc0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2867413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veedrac", "html_url": "https://github.com/Veedrac", "followers_url": "https://api.github.com/users/Veedrac/followers", "following_url": "https://api.github.com/users/Veedrac/following{/other_user}", "gists_url": "https://api.github.com/users/Veedrac/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veedrac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veedrac/subscriptions", "organizations_url": "https://api.github.com/users/Veedrac/orgs", "repos_url": "https://api.github.com/users/Veedrac/repos", "events_url": "https://api.github.com/users/Veedrac/events{/privacy}", "received_events_url": "https://api.github.com/users/Veedrac/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veedrac", "id": 2867413, "node_id": "MDQ6VXNlcjI4Njc0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2867413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veedrac", "html_url": "https://github.com/Veedrac", "followers_url": "https://api.github.com/users/Veedrac/followers", "following_url": "https://api.github.com/users/Veedrac/following{/other_user}", "gists_url": "https://api.github.com/users/Veedrac/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veedrac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veedrac/subscriptions", "organizations_url": "https://api.github.com/users/Veedrac/orgs", "repos_url": "https://api.github.com/users/Veedrac/repos", "events_url": "https://api.github.com/users/Veedrac/events{/privacy}", "received_events_url": "https://api.github.com/users/Veedrac/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b107af3ada920f6902ee4cbed08858013ea60177", "url": "https://api.github.com/repos/rust-lang/rust/commits/b107af3ada920f6902ee4cbed08858013ea60177", "html_url": "https://github.com/rust-lang/rust/commit/b107af3ada920f6902ee4cbed08858013ea60177"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "8a8cf9e7c53019476f2f2e8baa66e8958d79339d", "filename": "src/libstd/sys/windows/os.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2148567821b0e3ff63e13b652b9b645263b70cb0/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2148567821b0e3ff63e13b652b9b645263b70cb0/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs?ref=2148567821b0e3ff63e13b652b9b645263b70cb0", "patch": "@@ -311,7 +311,8 @@ impl ExactSizeIterator for Args {\n \n impl Drop for Args {\n     fn drop(&mut self) {\n-        // NULL-safe\n+        // self.cur can be null if CommandLineToArgvW previously failed,\n+        // but LocalFree ignores NULL pointers\n         unsafe { c::LocalFree(self.cur as *mut c_void); }\n     }\n }\n@@ -322,8 +323,9 @@ pub fn args() -> Args {\n         let lpCmdLine = c::GetCommandLineW();\n         let szArgList = c::CommandLineToArgvW(lpCmdLine, &mut nArgs);\n \n-        // cur may be NULL if CommandLineToArgvW failed,\n-        // in which case the range is empty to prevent reads\n+        // szArcList can be NULL if CommandLinToArgvW failed,\n+        // but in that case nArgs is 0 so we won't actually\n+        // try to read a null pointer\n         Args { cur: szArgList, range: 0..(nArgs as isize) }\n     }\n }"}]}