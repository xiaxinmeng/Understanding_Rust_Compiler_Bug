{"sha": "870b9e8139052f7cb1ef1e5717f2f4ce523fb688", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3MGI5ZTgxMzkwNTJmN2NiMWVmMWU1NzE3ZjJmNGNlNTIzZmI2ODg=", "commit": {"author": {"name": "Tim Robinson", "email": "tim.g.robinson@gmail.com", "date": "2020-03-23T16:06:15Z"}, "committer": {"name": "Tim Robinson", "email": "tim.g.robinson@gmail.com", "date": "2020-03-23T16:45:31Z"}, "message": "nursery group -> style", "tree": {"sha": "baa3796509719e8bf2927c5bd06e5f38b21a90d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/baa3796509719e8bf2927c5bd06e5f38b21a90d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/870b9e8139052f7cb1ef1e5717f2f4ce523fb688", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/870b9e8139052f7cb1ef1e5717f2f4ce523fb688", "html_url": "https://github.com/rust-lang/rust/commit/870b9e8139052f7cb1ef1e5717f2f4ce523fb688", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/comments", "author": {"login": "1tgr", "id": 91127, "node_id": "MDQ6VXNlcjkxMTI3", "avatar_url": "https://avatars.githubusercontent.com/u/91127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1tgr", "html_url": "https://github.com/1tgr", "followers_url": "https://api.github.com/users/1tgr/followers", "following_url": "https://api.github.com/users/1tgr/following{/other_user}", "gists_url": "https://api.github.com/users/1tgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/1tgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1tgr/subscriptions", "organizations_url": "https://api.github.com/users/1tgr/orgs", "repos_url": "https://api.github.com/users/1tgr/repos", "events_url": "https://api.github.com/users/1tgr/events{/privacy}", "received_events_url": "https://api.github.com/users/1tgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "1tgr", "id": 91127, "node_id": "MDQ6VXNlcjkxMTI3", "avatar_url": "https://avatars.githubusercontent.com/u/91127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1tgr", "html_url": "https://github.com/1tgr", "followers_url": "https://api.github.com/users/1tgr/followers", "following_url": "https://api.github.com/users/1tgr/following{/other_user}", "gists_url": "https://api.github.com/users/1tgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/1tgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1tgr/subscriptions", "organizations_url": "https://api.github.com/users/1tgr/orgs", "repos_url": "https://api.github.com/users/1tgr/repos", "events_url": "https://api.github.com/users/1tgr/events{/privacy}", "received_events_url": "https://api.github.com/users/1tgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de9092438df744895cfc2a2a35fcc577b657cd13", "url": "https://api.github.com/repos/rust-lang/rust/commits/de9092438df744895cfc2a2a35fcc577b657cd13", "html_url": "https://github.com/rust-lang/rust/commit/de9092438df744895cfc2a2a35fcc577b657cd13"}], "stats": {"total": 47, "additions": 25, "deletions": 22}, "files": [{"sha": "33329acb83272b736406dc52c362c48a9742b3b2", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=870b9e8139052f7cb1ef1e5717f2f4ce523fb688", "patch": "@@ -323,7 +323,7 @@ pub mod zero_div_zero;\n pub use crate::utils::conf::Conf;\n \n mod reexport {\n-    crate use rustc_ast::ast::Name;\n+    pub use rustc_ast::ast::Name;\n }\n \n /// Register all pre expansion lints\n@@ -1324,6 +1324,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&redundant_clone::REDUNDANT_CLONE),\n         LintId::of(&redundant_field_names::REDUNDANT_FIELD_NAMES),\n         LintId::of(&redundant_pattern_matching::REDUNDANT_PATTERN_MATCHING),\n+        LintId::of(&redundant_pub_crate::REDUNDANT_PUB_CRATE),\n         LintId::of(&redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES),\n         LintId::of(&reference::DEREF_ADDROF),\n         LintId::of(&reference::REF_IN_DEREF),\n@@ -1465,6 +1466,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&question_mark::QUESTION_MARK),\n         LintId::of(&redundant_field_names::REDUNDANT_FIELD_NAMES),\n         LintId::of(&redundant_pattern_matching::REDUNDANT_PATTERN_MATCHING),\n+        LintId::of(&redundant_pub_crate::REDUNDANT_PUB_CRATE),\n         LintId::of(&redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES),\n         LintId::of(&regex::REGEX_MACRO),\n         LintId::of(&regex::TRIVIAL_REGEX),\n@@ -1672,7 +1674,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&mutex_atomic::MUTEX_INTEGER),\n         LintId::of(&needless_borrow::NEEDLESS_BORROW),\n         LintId::of(&path_buf_push_overwrite::PATH_BUF_PUSH_OVERWRITE),\n-        LintId::of(&redundant_pub_crate::REDUNDANT_PUB_CRATE),\n         LintId::of(&use_self::USE_SELF),\n     ]);\n }"}, {"sha": "af4ab367f5fae06a077c3ed77a79a7e4ec9c8ad3", "filename": "clippy_lints/src/redundant_pub_crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/clippy_lints%2Fsrc%2Fredundant_pub_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/clippy_lints%2Fsrc%2Fredundant_pub_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_pub_crate.rs?ref=870b9e8139052f7cb1ef1e5717f2f4ce523fb688", "patch": "@@ -28,7 +28,7 @@ declare_clippy_lint! {\n     /// }\n     /// ```\n     pub REDUNDANT_PUB_CRATE,\n-    nursery,\n+    style,\n     \"Using `pub(crate)` visibility on items that are not crate visible due to the visibility of the module that contains them.\"\n }\n "}, {"sha": "722104e5b52492da1a120ffc0536235455326e12", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=870b9e8139052f7cb1ef1e5717f2f4ce523fb688", "patch": "@@ -80,7 +80,7 @@ macro_rules! define_Conf {\n             $(\n                 mod $config {\n                     use serde::Deserialize;\n-                    crate fn deserialize<'de, D: serde::Deserializer<'de>>(deserializer: D) -> Result<$Ty, D::Error> {\n+                    pub fn deserialize<'de, D: serde::Deserializer<'de>>(deserializer: D) -> Result<$Ty, D::Error> {\n                         use super::super::{ERRORS, Error};\n                         Ok(\n                             <$Ty>::deserialize(deserializer).unwrap_or_else(|e| {"}, {"sha": "99413153d49bbc08f28dd38deaabef9e62239988", "filename": "clippy_lints/src/utils/numeric_literal.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/clippy_lints%2Fsrc%2Futils%2Fnumeric_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/clippy_lints%2Fsrc%2Futils%2Fnumeric_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fnumeric_literal.rs?ref=870b9e8139052f7cb1ef1e5717f2f4ce523fb688", "patch": "@@ -1,7 +1,7 @@\n use rustc_ast::ast::{Lit, LitFloatType, LitIntType, LitKind};\n \n #[derive(Debug, PartialEq)]\n-pub(crate) enum Radix {\n+pub enum Radix {\n     Binary,\n     Octal,\n     Decimal,\n@@ -26,7 +26,7 @@ pub fn format(lit: &str, type_suffix: Option<&str>, float: bool) -> String {\n }\n \n #[derive(Debug)]\n-pub(crate) struct NumericLiteral<'a> {\n+pub struct NumericLiteral<'a> {\n     /// Which radix the literal was represented in.\n     pub radix: Radix,\n     /// The radix prefix, if present."}, {"sha": "50d5c88195287428e8248831e341e6d702a2bdd4", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=870b9e8139052f7cb1ef1e5717f2f4ce523fb688", "patch": "@@ -1766,7 +1766,7 @@ pub const ALL_LINTS: [Lint; 362] = [\n     },\n     Lint {\n         name: \"redundant_pub_crate\",\n-        group: \"nursery\",\n+        group: \"style\",\n         desc: \"Using `pub(crate)` visibility on items that are not crate visible due to the visibility of the module that contains them.\",\n         deprecation: None,\n         module: \"redundant_pub_crate\","}, {"sha": "69ab6e1f8c14399fe8ae72b72a5af787cd252ea9", "filename": "tests/ui/wildcard_imports.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/tests%2Fui%2Fwildcard_imports.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/tests%2Fui%2Fwildcard_imports.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.fixed?ref=870b9e8139052f7cb1ef1e5717f2f4ce523fb688", "patch": "@@ -2,6 +2,7 @@\n // aux-build:wildcard_imports_helper.rs\n \n #![warn(clippy::wildcard_imports)]\n+#![allow(clippy::redundant_pub_crate)]\n #![allow(unused)]\n #![warn(unused_imports)]\n "}, {"sha": "e64ac4ce51908c730707574925d91d10fe8b77f1", "filename": "tests/ui/wildcard_imports.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/tests%2Fui%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/tests%2Fui%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.rs?ref=870b9e8139052f7cb1ef1e5717f2f4ce523fb688", "patch": "@@ -2,6 +2,7 @@\n // aux-build:wildcard_imports_helper.rs\n \n #![warn(clippy::wildcard_imports)]\n+#![allow(clippy::redundant_pub_crate)]\n #![allow(unused)]\n #![warn(unused_imports)]\n "}, {"sha": "050e4c6304f05b49640f208d94bf7b80c2f64e0f", "filename": "tests/ui/wildcard_imports.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/tests%2Fui%2Fwildcard_imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/870b9e8139052f7cb1ef1e5717f2f4ce523fb688/tests%2Fui%2Fwildcard_imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.stderr?ref=870b9e8139052f7cb1ef1e5717f2f4ce523fb688", "patch": "@@ -1,91 +1,91 @@\n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:10:5\n+  --> $DIR/wildcard_imports.rs:11:5\n    |\n LL | use crate::fn_mod::*;\n    |     ^^^^^^^^^^^^^^^^ help: try: `crate::fn_mod::foo`\n    |\n    = note: `-D clippy::wildcard-imports` implied by `-D warnings`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:11:5\n+  --> $DIR/wildcard_imports.rs:12:5\n    |\n LL | use crate::mod_mod::*;\n    |     ^^^^^^^^^^^^^^^^^ help: try: `crate::mod_mod::inner_mod`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:12:5\n+  --> $DIR/wildcard_imports.rs:13:5\n    |\n LL | use crate::multi_fn_mod::*;\n    |     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `crate::multi_fn_mod::{multi_bar, multi_foo, multi_inner_mod}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:14:5\n+  --> $DIR/wildcard_imports.rs:15:5\n    |\n LL | use crate::struct_mod::*;\n    |     ^^^^^^^^^^^^^^^^^^^^ help: try: `crate::struct_mod::{A, inner_struct_mod}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:18:5\n+  --> $DIR/wildcard_imports.rs:19:5\n    |\n LL | use wildcard_imports_helper::inner::inner_for_self_import::*;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::inner::inner_for_self_import::inner_extern_bar`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:19:5\n+  --> $DIR/wildcard_imports.rs:20:5\n    |\n LL | use wildcard_imports_helper::*;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::{ExternA, extern_foo}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:88:13\n+  --> $DIR/wildcard_imports.rs:89:13\n    |\n LL |         use crate::fn_mod::*;\n    |             ^^^^^^^^^^^^^^^^ help: try: `crate::fn_mod::foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:94:75\n+  --> $DIR/wildcard_imports.rs:95:75\n    |\n LL |         use wildcard_imports_helper::inner::inner_for_self_import::{self, *};\n    |                                                                           ^ help: try: `inner_extern_foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:95:13\n+  --> $DIR/wildcard_imports.rs:96:13\n    |\n LL |         use wildcard_imports_helper::*;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::{ExternA, extern_foo}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:106:20\n+  --> $DIR/wildcard_imports.rs:107:20\n    |\n LL |         use self::{inner::*, inner2::*};\n    |                    ^^^^^^^^ help: try: `inner::inner_foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:106:30\n+  --> $DIR/wildcard_imports.rs:107:30\n    |\n LL |         use self::{inner::*, inner2::*};\n    |                              ^^^^^^^^^ help: try: `inner2::inner_bar`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:113:13\n+  --> $DIR/wildcard_imports.rs:114:13\n    |\n LL |         use wildcard_imports_helper::*;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::{ExternExportedEnum, ExternExportedStruct, extern_exported}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:142:9\n+  --> $DIR/wildcard_imports.rs:143:9\n    |\n LL |     use crate::in_fn_test::*;\n    |         ^^^^^^^^^^^^^^^^^^^^ help: try: `crate::in_fn_test::{ExportedEnum, ExportedStruct, exported}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:151:9\n+  --> $DIR/wildcard_imports.rs:152:9\n    |\n LL |     use crate:: in_fn_test::  * ;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `crate:: in_fn_test::exported`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:152:9\n+  --> $DIR/wildcard_imports.rs:153:9\n    |\n LL |       use crate:: fn_mod::\n    |  _________^"}]}