{"sha": "562d97d978fbe4cee2fe454c54bda30c1bed7035", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MmQ5N2Q5NzhmYmU0Y2VlMmZlNDU0YzU0YmRhMzBjMWJlZDcwMzU=", "commit": {"author": {"name": "Jon Purdy", "email": "evincarofautumn@gmail.com", "date": "2018-06-02T07:20:00Z"}, "committer": {"name": "Jon Purdy", "email": "evincarofautumn@gmail.com", "date": "2018-06-02T07:20:00Z"}, "message": "Fix typos of 'ambiguous'", "tree": {"sha": "1c22462ed10513aa5c7051d89194213f1004883d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c22462ed10513aa5c7051d89194213f1004883d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/562d97d978fbe4cee2fe454c54bda30c1bed7035", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/562d97d978fbe4cee2fe454c54bda30c1bed7035", "html_url": "https://github.com/rust-lang/rust/commit/562d97d978fbe4cee2fe454c54bda30c1bed7035", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/562d97d978fbe4cee2fe454c54bda30c1bed7035/comments", "author": {"login": "evincarofautumn", "id": 729779, "node_id": "MDQ6VXNlcjcyOTc3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/729779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evincarofautumn", "html_url": "https://github.com/evincarofautumn", "followers_url": "https://api.github.com/users/evincarofautumn/followers", "following_url": "https://api.github.com/users/evincarofautumn/following{/other_user}", "gists_url": "https://api.github.com/users/evincarofautumn/gists{/gist_id}", "starred_url": "https://api.github.com/users/evincarofautumn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evincarofautumn/subscriptions", "organizations_url": "https://api.github.com/users/evincarofautumn/orgs", "repos_url": "https://api.github.com/users/evincarofautumn/repos", "events_url": "https://api.github.com/users/evincarofautumn/events{/privacy}", "received_events_url": "https://api.github.com/users/evincarofautumn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "evincarofautumn", "id": 729779, "node_id": "MDQ6VXNlcjcyOTc3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/729779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evincarofautumn", "html_url": "https://github.com/evincarofautumn", "followers_url": "https://api.github.com/users/evincarofautumn/followers", "following_url": "https://api.github.com/users/evincarofautumn/following{/other_user}", "gists_url": "https://api.github.com/users/evincarofautumn/gists{/gist_id}", "starred_url": "https://api.github.com/users/evincarofautumn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evincarofautumn/subscriptions", "organizations_url": "https://api.github.com/users/evincarofautumn/orgs", "repos_url": "https://api.github.com/users/evincarofautumn/repos", "events_url": "https://api.github.com/users/evincarofautumn/events{/privacy}", "received_events_url": "https://api.github.com/users/evincarofautumn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edae1cc38b467518a8eea590c9c3e0c103b4ecb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/edae1cc38b467518a8eea590c9c3e0c103b4ecb0", "html_url": "https://github.com/rust-lang/rust/commit/edae1cc38b467518a8eea590c9c3e0c103b4ecb0"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "82f351782bbcdd71a91f981399fd905bfecf6e91", "filename": "src/librustc/traits/project.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/562d97d978fbe4cee2fe454c54bda30c1bed7035/src%2Flibrustc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/562d97d978fbe4cee2fe454c54bda30c1bed7035/src%2Flibrustc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fproject.rs?ref=562d97d978fbe4cee2fe454c54bda30c1bed7035", "patch": "@@ -146,7 +146,7 @@ impl<'tcx> ProjectionTyCandidateSet<'tcx> {\n         // was not used). On other paths, it is not assigned,\n         // and hence if those paths *could* reach the code that\n         // comes after the match, this fn would not compile.\n-        let convert_to_ambigious;\n+        let convert_to_ambiguous;\n \n         match self {\n             None => {\n@@ -169,10 +169,10 @@ impl<'tcx> ProjectionTyCandidateSet<'tcx> {\n                 // clauses are the safer choice. See the comment on\n                 // `select::SelectionCandidate` and #21974 for more details.\n                 match (current, candidate) {\n-                    (ParamEnv(..), ParamEnv(..)) => convert_to_ambigious = (),\n+                    (ParamEnv(..), ParamEnv(..)) => convert_to_ambiguous = (),\n                     (ParamEnv(..), _) => return false,\n                     (_, ParamEnv(..)) => { unreachable!(); }\n-                    (_, _) => convert_to_ambigious = (),\n+                    (_, _) => convert_to_ambiguous = (),\n                 }\n             }\n \n@@ -183,7 +183,7 @@ impl<'tcx> ProjectionTyCandidateSet<'tcx> {\n \n         // We only ever get here when we moved from a single candidate\n         // to ambiguous.\n-        let () = convert_to_ambigious;\n+        let () = convert_to_ambiguous;\n         *self = Ambiguous;\n         false\n     }"}, {"sha": "f08b95f59fa3da963a522eb4855047828a906fad", "filename": "src/librustc/traits/query/normalize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/562d97d978fbe4cee2fe454c54bda30c1bed7035/src%2Flibrustc%2Ftraits%2Fquery%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/562d97d978fbe4cee2fe454c54bda30c1bed7035/src%2Flibrustc%2Ftraits%2Fquery%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Fnormalize.rs?ref=562d97d978fbe4cee2fe454c54bda30c1bed7035", "patch": "@@ -33,7 +33,7 @@ impl<'cx, 'gcx, 'tcx> At<'cx, 'gcx, 'tcx> {\n     /// normalized. If you don't care about regions, you should prefer\n     /// `normalize_erasing_regions`, which is more efficient.\n     ///\n-    /// If the normalization succeeds and is unambigious, returns back\n+    /// If the normalization succeeds and is unambiguous, returns back\n     /// the normalized value along with various outlives relations (in\n     /// the form of obligations that must be discharged).\n     ///"}]}