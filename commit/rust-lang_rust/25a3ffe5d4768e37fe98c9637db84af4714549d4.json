{"sha": "25a3ffe5d4768e37fe98c9637db84af4714549d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1YTNmZmU1ZDQ3NjhlMzdmZTk4Yzk2MzdkYjg0YWY0NzE0NTQ5ZDQ=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-21T03:58:46Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-21T04:00:56Z"}, "message": "Move from bash to rust", "tree": {"sha": "2f2653a302d701be8832efc5e5cb1b61ff39b67d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f2653a302d701be8832efc5e5cb1b61ff39b67d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25a3ffe5d4768e37fe98c9637db84af4714549d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25a3ffe5d4768e37fe98c9637db84af4714549d4", "html_url": "https://github.com/rust-lang/rust/commit/25a3ffe5d4768e37fe98c9637db84af4714549d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25a3ffe5d4768e37fe98c9637db84af4714549d4/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d44d77c4d97f46bbfd184e3995e0278b8c3d096", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d44d77c4d97f46bbfd184e3995e0278b8c3d096", "html_url": "https://github.com/rust-lang/rust/commit/4d44d77c4d97f46bbfd184e3995e0278b8c3d096"}], "stats": {"total": 73, "additions": 33, "deletions": 40}, "files": [{"sha": "ca9fad41b5624ef860d123522d5d508b76dd30ab", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 33, "deletions": 16, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/25a3ffe5d4768e37fe98c9637db84af4714549d4/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25a3ffe5d4768e37fe98c9637db84af4714549d4/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=25a3ffe5d4768e37fe98c9637db84af4714549d4", "patch": "@@ -2390,22 +2390,39 @@ impl<'test> TestCx<'test> {\n             proc_res.fatal(Some(\"failed to run nightly rustdoc\"), || ());\n         }\n \n-        // NOTE: this is fine since compiletest never runs out-of-tree\n-        let tidy = concat!(env!(\"CARGO_MANIFEST_DIR\"), \"/tidy-rustdoc.sh\");\n-        // FIXME: this overwrites `out_dir` in place, maybe we should make a copy?\n-        let status = Command::new(tidy)\n-            .arg(out_dir)\n-            .spawn()\n-            .expect(\"tidy-rustdoc not found\")\n-            .wait()\n-            .unwrap();\n-        if !status.success() {\n-            self.fatal(\"failed to run tidy - is it installed?\");\n-        }\n-        let status = Command::new(tidy).arg(&compare_dir).spawn().unwrap().wait().unwrap();\n-        if !status.success() {\n-            self.fatal(\"failed to run tidy\");\n-        }\n+        #[rustfmt::skip]\n+        let tidy_args = [\n+            \"--indent\", \"yes\",\n+            \"--indent-spaces\", \"2\",\n+            \"--wrap\", \"0\",\n+            \"--show-warnings\", \"no\",\n+            \"--markup\", \"yes\",\n+            \"--quiet\", \"yes\",\n+            \"-modify\",\n+        ];\n+        let tidy_dir = |dir| {\n+            let tidy = |file: &_| {\n+                Command::new(\"tidy\")\n+                    .args(&tidy_args)\n+                    .arg(file)\n+                    .spawn()\n+                    .unwrap_or_else(|err| {\n+                        self.fatal(&format!(\"failed to run tidy - is it installed? - {}\", err))\n+                    })\n+                    .wait()\n+                    .unwrap()\n+            };\n+            for entry in walkdir::WalkDir::new(dir) {\n+                let entry = entry.expect(\"failed to read file\");\n+                if entry.file_type().is_file()\n+                    && entry.path().extension().and_then(|p| p.to_str()) == Some(\"html\".into())\n+                {\n+                    tidy(entry.path());\n+                }\n+            }\n+        };\n+        tidy_dir(out_dir);\n+        tidy_dir(&compare_dir);\n \n         let pager = {\n             let output = Command::new(\"git\").args(&[\"config\", \"--get\", \"core.pager\"]).output().ok();"}, {"sha": "407e9169af5413699f26d9ef9bcc88584d94b973", "filename": "src/tools/compiletest/tidy-rustdoc.sh", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4d44d77c4d97f46bbfd184e3995e0278b8c3d096/src%2Ftools%2Fcompiletest%2Ftidy-rustdoc.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4d44d77c4d97f46bbfd184e3995e0278b8c3d096/src%2Ftools%2Fcompiletest%2Ftidy-rustdoc.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Ftidy-rustdoc.sh?ref=4d44d77c4d97f46bbfd184e3995e0278b8c3d096", "patch": "@@ -1,24 +0,0 @@\n-#!/usr/bin/env bash\n-\n-set -euo pipefail\n-\n-indir=\"${1:?Missing argument 1: input directory}\"\n-\n-tidy () {\n-  command tidy \\\n-      --indent yes \\\n-      --indent-spaces 2 \\\n-      --wrap 0 \\\n-      --show-warnings no \\\n-      --markup yes \\\n-      --quiet yes \\\n-      \"$@\" \\\n-      >/dev/null \\\n-  || [ $? -eq 1 ] # tidy exits with code 1 if there were any warnings\n-}\n-\n-find \"$indir\" -type f -name '*.html' -print0 \\\n-| while IFS= read -d '' -r file\n-do\n-  tidy -modify \"$file\"\n-done"}]}