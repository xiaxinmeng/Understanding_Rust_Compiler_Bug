{"sha": "4dc6b367d3326cced23e33004ccedc44814d7c46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYzZiMzY3ZDMzMjZjY2VkMjNlMzMwMDRjY2VkYzQ0ODE0ZDdjNDY=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2018-10-18T18:12:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-18T18:12:28Z"}, "message": "Merge pull request #3332 from lukasstevens/fix798\n\nCheck for comments in collapsible ifs", "tree": {"sha": "9d03622ba8f1425051ed7359a5a4387b3b4ab1e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d03622ba8f1425051ed7359a5a4387b3b4ab1e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dc6b367d3326cced23e33004ccedc44814d7c46", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbyM0MCRBK7hj4Ov3rIwAAdHIIADftP5XBMmzv13iaG/dfxTi/\nCbjDX068aJMdNtM+HcMB/9ox7Dq/8ROPoQT+IaWe5WjpskJ4KO8IkXxXFscj66Eq\nD/zVuNdtfdDGON9yj6oPiW+WNHu/A5e/HTFZZkvfDKycEyNXdYdb9uAn4rIEPeNJ\n3oKASb03VkTnUen2TjMM4opt++NvheZmDxrnmBK3IKZlYG27rCVb/P08qJE59t/F\nDwPmRf0sFRJI2BGww4HayQPMvhtcwwCocpnL7avrxIWev0JcEGqdGFu/G/JeH47U\nFnkLWlPhljVQq0S/ao0WwEZywsbzhKNl16NwAjAW3mzWKl16AKc7rmfJid2ALn8=\n=Rq+w\n-----END PGP SIGNATURE-----\n", "payload": "tree 9d03622ba8f1425051ed7359a5a4387b3b4ab1e3\nparent 1264bb6b7d74095f7fb9221904bbc288ff21a3c3\nparent 5614dcb4ead82724e5873172961a26ffbfddcd18\nauthor Philipp Krones <hello@philkrones.com> 1539886348 +0200\ncommitter GitHub <noreply@github.com> 1539886348 +0200\n\nMerge pull request #3332 from lukasstevens/fix798\n\nCheck for comments in collapsible ifs"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dc6b367d3326cced23e33004ccedc44814d7c46", "html_url": "https://github.com/rust-lang/rust/commit/4dc6b367d3326cced23e33004ccedc44814d7c46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dc6b367d3326cced23e33004ccedc44814d7c46/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1264bb6b7d74095f7fb9221904bbc288ff21a3c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1264bb6b7d74095f7fb9221904bbc288ff21a3c3", "html_url": "https://github.com/rust-lang/rust/commit/1264bb6b7d74095f7fb9221904bbc288ff21a3c3"}, {"sha": "5614dcb4ead82724e5873172961a26ffbfddcd18", "url": "https://api.github.com/repos/rust-lang/rust/commits/5614dcb4ead82724e5873172961a26ffbfddcd18", "html_url": "https://github.com/rust-lang/rust/commit/5614dcb4ead82724e5873172961a26ffbfddcd18"}], "stats": {"total": 85, "additions": 84, "deletions": 1}, "files": [{"sha": "a55ca04f706a78272750f872dd12c0abd564dcc4", "filename": "clippy_lints/src/collapsible_if.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4dc6b367d3326cced23e33004ccedc44814d7c46/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dc6b367d3326cced23e33004ccedc44814d7c46/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_if.rs?ref=4dc6b367d3326cced23e33004ccedc44814d7c46", "patch": "@@ -112,9 +112,17 @@ fn check_if(cx: &EarlyContext<'_>, expr: &ast::Expr) {\n     }\n }\n \n+fn block_starts_with_comment(cx: &EarlyContext<'_>, expr: &ast::Block) -> bool {\n+    // We trim all opening braces and whitespaces and then check if the next string is a comment.\n+    let trimmed_block_text =\n+        snippet_block(cx, expr.span, \"..\").trim_left_matches(|c: char| c.is_whitespace() || c == '{').to_owned();\n+    trimmed_block_text.starts_with(\"//\") || trimmed_block_text.starts_with(\"/*\")\n+}\n+\n fn check_collapsible_maybe_if_let(cx: &EarlyContext<'_>, else_: &ast::Expr) {\n     if_chain! {\n         if let ast::ExprKind::Block(ref block, _) = else_.node;\n+        if !block_starts_with_comment(cx, block);\n         if let Some(else_) = expr_block(block);\n         if !in_macro(else_.span);\n         then {\n@@ -135,6 +143,7 @@ fn check_collapsible_maybe_if_let(cx: &EarlyContext<'_>, else_: &ast::Expr) {\n \n fn check_collapsible_no_if_let(cx: &EarlyContext<'_>, expr: &ast::Expr, check: &ast::Expr, then: &ast::Block) {\n     if_chain! {\n+        if !block_starts_with_comment(cx, then);\n         if let Some(inner) = expr_block(then);\n         if let ast::ExprKind::If(ref check_inner, ref content, None) = inner.node;\n         then {"}, {"sha": "1bc866010fd1956091271443be6084b56dcdddab", "filename": "tests/ui/collapsible_if.rs", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/4dc6b367d3326cced23e33004ccedc44814d7c46/tests%2Fui%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dc6b367d3326cced23e33004ccedc44814d7c46/tests%2Fui%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.rs?ref=4dc6b367d3326cced23e33004ccedc44814d7c46", "patch": "@@ -151,4 +151,62 @@ fn main() {\n     } else {\n         assert!(true); // assert! is just an `if`\n     }\n+\n+\n+    // The following tests check for the fix of https://github.com/rust-lang-nursery/rust-clippy/issues/798\n+    if x == \"hello\" {// Not collapsible\n+        if y == \"world\" {\n+            println!(\"Hello world!\");\n+        }\n+    }\n+\n+    if x == \"hello\" { // Not collapsible\n+        if y == \"world\" {\n+            println!(\"Hello world!\");\n+        }\n+    }\n+\n+    if x == \"hello\" {\n+        // Not collapsible\n+        if y == \"world\" {\n+            println!(\"Hello world!\");\n+        }\n+    }\n+\n+    if x == \"hello\" {\n+        if y == \"world\" { // Collapsible\n+            println!(\"Hello world!\");\n+        }\n+    }\n+\n+    if x == \"hello\" {\n+        print!(\"Hello \");\n+    } else {\n+        // Not collapsible\n+        if y == \"world\" {\n+            println!(\"world!\")\n+        }\n+    }\n+\n+    if x == \"hello\" {\n+        print!(\"Hello \");\n+    } else {\n+        // Not collapsible\n+        if let Some(42) = Some(42) {\n+            println!(\"world!\")\n+        }\n+    }\n+\n+    if x == \"hello\" {\n+        /* Not collapsible */\n+        if y == \"world\" {\n+            println!(\"Hello world!\");\n+        }\n+    }\n+\n+    if x == \"hello\" { /* Not collapsible */\n+        if y == \"world\" {\n+            println!(\"Hello world!\");\n+        }\n+    }\n }"}, {"sha": "3f06dca5495225eb6ed33462fbfaf728049cb038", "filename": "tests/ui/collapsible_if.stderr", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4dc6b367d3326cced23e33004ccedc44814d7c46/tests%2Fui%2Fcollapsible_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4dc6b367d3326cced23e33004ccedc44814d7c46/tests%2Fui%2Fcollapsible_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.stderr?ref=4dc6b367d3326cced23e33004ccedc44814d7c46", "patch": "@@ -240,5 +240,21 @@ help: try\n 122 | }\n     |\n \n-error: aborting due to 13 previous errors\n+error: this if statement can be collapsed\n+   --> $DIR/collapsible_if.rs:176:5\n+    |\n+176 | /     if x == \"hello\" {\n+177 | |         if y == \"world\" { // Collapsible\n+178 | |             println!(\"Hello world!\");\n+179 | |         }\n+180 | |     }\n+    | |_____^\n+help: try\n+    |\n+176 |     if x == \"hello\" && y == \"world\" { // Collapsible\n+177 |     println!(\"Hello world!\");\n+178 | }\n+    |\n+\n+error: aborting due to 14 previous errors\n "}]}