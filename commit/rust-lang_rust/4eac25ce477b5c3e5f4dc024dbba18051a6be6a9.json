{"sha": "4eac25ce477b5c3e5f4dc024dbba18051a6be6a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlYWMyNWNlNDc3YjVjM2U1ZjRkYzAyNGRiYmExODA1MWE2YmU2YTk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-11T21:18:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-11T21:18:43Z"}, "message": "Merge pull request #680 from RalfJung/miri-unsized\n\ntest calling Box<dyn FnOnce>", "tree": {"sha": "53d63454d47c9e6c7d0f0dd0e21e36939d26b19f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53d63454d47c9e6c7d0f0dd0e21e36939d26b19f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4eac25ce477b5c3e5f4dc024dbba18051a6be6a9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcr68zCRBK7hj4Ov3rIwAAdHIIAHK6QRHZn8SLPl0zQ5rnOqGG\nWes+c2wv1AAGk9RTewc4qQjyPk6nImHO1PwMCqa0GnNQtF1x+bH0kVNqeAFcovpR\nZl5G6/CA2zI2YlCWYOSAuwqyBGh4J2Pzt3F1GxckpKW2VhDBCv8XGUlsdZN5i2OY\nWrC+Ha6K4Lfg3RL5r//eZnYkJLiLZeStd4sc+2cX8e4kDYewfaPhCUsnunCjzqRe\nGv91h6gsMhNPb6uasJIi00+ra86rfY38Zxcu21frCjszw9qfbiNVPbRJs/gUMxI6\ngInih8oteR5oum7osvfxizrFIRRGwzB9IgbQ8HW4WwxwoQbMwmOS8oZ4YejGDRc=\n=369E\n-----END PGP SIGNATURE-----\n", "payload": "tree 53d63454d47c9e6c7d0f0dd0e21e36939d26b19f\nparent 2dc6e8b01f5b5462249617baf79e29da0be363d0\nparent 8235f5694cccdb131f1a26f94eb7a9bc8f9e3117\nauthor Ralf Jung <post@ralfj.de> 1555017523 +0200\ncommitter GitHub <noreply@github.com> 1555017523 +0200\n\nMerge pull request #680 from RalfJung/miri-unsized\n\ntest calling Box<dyn FnOnce>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4eac25ce477b5c3e5f4dc024dbba18051a6be6a9", "html_url": "https://github.com/rust-lang/rust/commit/4eac25ce477b5c3e5f4dc024dbba18051a6be6a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4eac25ce477b5c3e5f4dc024dbba18051a6be6a9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dc6e8b01f5b5462249617baf79e29da0be363d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dc6e8b01f5b5462249617baf79e29da0be363d0", "html_url": "https://github.com/rust-lang/rust/commit/2dc6e8b01f5b5462249617baf79e29da0be363d0"}, {"sha": "8235f5694cccdb131f1a26f94eb7a9bc8f9e3117", "url": "https://api.github.com/repos/rust-lang/rust/commits/8235f5694cccdb131f1a26f94eb7a9bc8f9e3117", "html_url": "https://github.com/rust-lang/rust/commit/8235f5694cccdb131f1a26f94eb7a9bc8f9e3117"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "69a46de1d45d09f3fa75ac4d38752f02bb4b09ae", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eac25ce477b5c3e5f4dc024dbba18051a6be6a9/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/4eac25ce477b5c3e5f4dc024dbba18051a6be6a9/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=4eac25ce477b5c3e5f4dc024dbba18051a6be6a9", "patch": "@@ -1 +1 @@\n-f717b58dd70829f105960a071c7992b440720482\n+3de0106789468b211bcc3a25c09c0cf07119186d"}, {"sha": "ba9b69703a416823fead00107f9aaec6695ab03d", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4eac25ce477b5c3e5f4dc024dbba18051a6be6a9/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eac25ce477b5c3e5f4dc024dbba18051a6be6a9/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=4eac25ce477b5c3e5f4dc024dbba18051a6be6a9", "patch": "@@ -270,9 +270,7 @@ pub fn eval_main<'a, 'tcx: 'a>(\n                 trace!(\"Frame {}\", i);\n                 trace!(\"    return: {:#?}\", frame.return_place);\n                 for (i, local) in frame.locals.iter().enumerate() {\n-                    if let Ok(local) = local.access() {\n-                        trace!(\"    local {}: {:?}\", i, local);\n-                    }\n+                    trace!(\"    local {}: {:?}\", i, local.value);\n                 }\n             }\n         }"}, {"sha": "7af2304cb400ebc3a64e36553e27da763b89687b", "filename": "tests/run-pass/async-fn.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4eac25ce477b5c3e5f4dc024dbba18051a6be6a9/tests%2Frun-pass%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eac25ce477b5c3e5f4dc024dbba18051a6be6a9/tests%2Frun-pass%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fasync-fn.rs?ref=4eac25ce477b5c3e5f4dc024dbba18051a6be6a9", "patch": "@@ -1,12 +1,11 @@\n-// ignore-test FIXME ignored to let https://github.com/rust-lang/rust/pull/59119 land\n #![feature(\n     async_await,\n     await_macro,\n     futures_api,\n )]\n \n use std::{future::Future, pin::Pin, task::Poll, ptr};\n-use std::task::{Waker, RawWaker, RawWakerVTable};\n+use std::task::{Waker, RawWaker, RawWakerVTable, Context};\n \n // See if we can run a basic `async fn`\n pub async fn foo(x: &u32, y: u32) -> u32 {\n@@ -27,15 +26,16 @@ fn raw_waker_wake(_this: *const ()) {\n }\n fn raw_waker_drop(_this: *const ()) {}\n \n-static RAW_WAKER: RawWakerVTable = RawWakerVTable {\n-    clone: raw_waker_clone,\n-    wake: raw_waker_wake,\n-    drop: raw_waker_drop,\n-};\n+static RAW_WAKER: RawWakerVTable = RawWakerVTable::new(\n+    raw_waker_clone,\n+    raw_waker_wake,\n+    raw_waker_drop,\n+);\n \n fn main() {\n     let x = 5;\n     let mut fut = foo(&x, 7);\n     let waker = unsafe { Waker::new_unchecked(RawWaker::new(ptr::null(), &RAW_WAKER)) };\n-    assert_eq!(unsafe { Pin::new_unchecked(&mut fut) }.poll(&waker), Poll::Ready(31));\n+    let mut context = Context::from_waker(&waker);\n+    assert_eq!(unsafe { Pin::new_unchecked(&mut fut) }.poll(&mut context), Poll::Ready(31));\n }"}, {"sha": "141e6cd6d08a2777f99cf4459b6d034e9802ee4e", "filename": "tests/run-pass/closures.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4eac25ce477b5c3e5f4dc024dbba18051a6be6a9/tests%2Frun-pass%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eac25ce477b5c3e5f4dc024dbba18051a6be6a9/tests%2Frun-pass%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fclosures.rs?ref=4eac25ce477b5c3e5f4dc024dbba18051a6be6a9", "patch": "@@ -40,9 +40,14 @@ fn fn_once_closure_with_multiple_args() -> i64 {\n     }\n }\n \n+fn boxed(f: Box<dyn FnOnce() -> i32>) -> i32 {\n+    f()\n+}\n+\n fn main() {\n     assert_eq!(simple(), 12);\n     assert_eq!(crazy_closure(), (84, 10, 10));\n     assert_eq!(closure_arg_adjustment_problem(), 3);\n     assert_eq!(fn_once_closure_with_multiple_args(), 6);\n+    assert_eq!(boxed(Box::new({let x = 13; move || x})), 13);\n }"}]}