{"sha": "e475a69fa8d5da30be90179b883704d0ba74c150", "node_id": "C_kwDOAAsO6NoAKGU0NzVhNjlmYThkNWRhMzBiZTkwMTc5Yjg4MzcwNGQwYmE3NGMxNTA", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-05-03T20:14:07Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-06T21:23:52Z"}, "message": "Reword create_def comment.", "tree": {"sha": "052c2ba0b7ae2eb963c3cb0868124f5d6c9a8402", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/052c2ba0b7ae2eb963c3cb0868124f5d6c9a8402"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e475a69fa8d5da30be90179b883704d0ba74c150", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e475a69fa8d5da30be90179b883704d0ba74c150", "html_url": "https://github.com/rust-lang/rust/commit/e475a69fa8d5da30be90179b883704d0ba74c150", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e475a69fa8d5da30be90179b883704d0ba74c150/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e912c8dfe0f74f41c9b3dae1a4e1900f3dd9d0e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e912c8dfe0f74f41c9b3dae1a4e1900f3dd9d0e6", "html_url": "https://github.com/rust-lang/rust/commit/e912c8dfe0f74f41c9b3dae1a4e1900f3dd9d0e6"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "38e4095997c97d1f91765d460ab98e3c89f3489a", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e475a69fa8d5da30be90179b883704d0ba74c150/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e475a69fa8d5da30be90179b883704d0ba74c150/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=e475a69fa8d5da30be90179b883704d0ba74c150", "patch": "@@ -1470,21 +1470,28 @@ impl<'tcx> TyCtxt<'tcx> {\n \n     /// Create a new definition within the incr. comp. engine.\n     pub fn create_def(self, parent: LocalDefId, data: hir::definitions::DefPathData) -> LocalDefId {\n-        // The following call has the side effect of modifying the tables inside `definitions`.\n-        // These very tables are relied on by the incr. comp. engine to decode DepNodes and to\n-        // decode the on-disk cache.\n-        let def_id = self.definitions.write().create_def(parent, data);\n-\n+        // This function modifies `self.definitions` using a side-effect.\n         // We need to ensure that these side effects are re-run by the incr. comp. engine.\n+        // Depending on the forever-red node will tell the graph that the calling query\n+        // needs to be re-evaluated.\n         use rustc_query_system::dep_graph::DepNodeIndex;\n         self.dep_graph.read_index(DepNodeIndex::FOREVER_RED_NODE);\n \n+        // The following call has the side effect of modifying the tables inside `definitions`.\n+        // These very tables are relied on by the incr. comp. engine to decode DepNodes and to\n+        // decode the on-disk cache.\n+        //\n         // Any LocalDefId which is used within queries, either as key or result, either:\n         // - has been created before the construction of the TyCtxt;\n         // - has been created by this call to `create_def`.\n         // As a consequence, this LocalDefId is always re-created before it is needed by the incr.\n         // comp. engine itself.\n-        def_id\n+        //\n+        // This call also writes to the value of `source_span` and `expn_that_defined` queries.\n+        // This is fine because:\n+        // - those queries are `eval_always` so we won't miss their result changing;\n+        // - this write will have happened before these queries are called.\n+        self.definitions.write().create_def(parent, data)\n     }\n \n     pub fn iter_local_def_id(self) -> impl Iterator<Item = LocalDefId> + 'tcx {"}]}