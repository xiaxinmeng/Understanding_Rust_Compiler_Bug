{"sha": "22b4c40e38da17de8581004fb3cd2f12c0133a14", "node_id": "C_kwDOAAsO6NoAKDIyYjRjNDBlMzhkYTE3ZGU4NTgxMDA0ZmIzY2QyZjEyYzAxMzNhMTQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-19T13:50:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-19T13:50:27Z"}, "message": "Rollup merge of #95109 - Urgau:check-cfg-all-any, r=petrochenkov\n\nExtend --check-cfg tests to all predicate inside all/any\n\nNow that https://github.com/rust-lang/rust/pull/94295 is merged it's time to add more tests to check that all predicate inside `all` and `any` are always checked.\n\nr? `@petrochenkov`", "tree": {"sha": "97c21e1ec248f19378f21f050e47757677328942", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97c21e1ec248f19378f21f050e47757677328942"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22b4c40e38da17de8581004fb3cd2f12c0133a14", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiNd+jCRBK7hj4Ov3rIwAAOIMIAB0L8QqCmQ5iQqSP5OeSS4p7\ngIVChnKMkvbDAL7cYliwko88U+0hGqlYzZ2fDZq5NMJj4E8Yjyg+eoBZpTKybyIU\n8ri/kotcnO/ARnXmJbWmNsl5MzoIe1rh+lFBDUM6TJqGuZLBL5vZEeIww4hpkxSs\nxkl85+/LiV/87ppU0nfsf42MpHGWA5rOeH5q3BdM6+HfiLv2lqCbcNFkfX32L+4J\nt9wPTNZLvP2CnMsx/338+xIcNfvgqI+5aksR7mJADDcOq3gEfu8dFPXafbxvHlTl\nG3YyNlgXNO05965tbVs5plAlMVI/gk4+Ug6fStd7xY6+qJx/Gk7NGrILNtZlQs0=\n=/+QL\n-----END PGP SIGNATURE-----\n", "payload": "tree 97c21e1ec248f19378f21f050e47757677328942\nparent 7de48eafa179b299edd1c19c33a86d89653ac78d\nparent a12674a0523c4b5ca20c981be179f4216f325dbd\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1647697827 +0100\ncommitter GitHub <noreply@github.com> 1647697827 +0100\n\nRollup merge of #95109 - Urgau:check-cfg-all-any, r=petrochenkov\n\nExtend --check-cfg tests to all predicate inside all/any\n\nNow that https://github.com/rust-lang/rust/pull/94295 is merged it's time to add more tests to check that all predicate inside `all` and `any` are always checked.\n\nr? `@petrochenkov`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22b4c40e38da17de8581004fb3cd2f12c0133a14", "html_url": "https://github.com/rust-lang/rust/commit/22b4c40e38da17de8581004fb3cd2f12c0133a14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22b4c40e38da17de8581004fb3cd2f12c0133a14/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7de48eafa179b299edd1c19c33a86d89653ac78d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7de48eafa179b299edd1c19c33a86d89653ac78d", "html_url": "https://github.com/rust-lang/rust/commit/7de48eafa179b299edd1c19c33a86d89653ac78d"}, {"sha": "a12674a0523c4b5ca20c981be179f4216f325dbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/a12674a0523c4b5ca20c981be179f4216f325dbd", "html_url": "https://github.com/rust-lang/rust/commit/a12674a0523c4b5ca20c981be179f4216f325dbd"}], "stats": {"total": 118, "additions": 117, "deletions": 1}, "files": [{"sha": "b51d356f61fdff1935edd636722cb3972b610b09", "filename": "src/test/ui/check-cfg/mix.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/22b4c40e38da17de8581004fb3cd2f12c0133a14/src%2Ftest%2Fui%2Fcheck-cfg%2Fmix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22b4c40e38da17de8581004fb3cd2f12c0133a14/src%2Ftest%2Fui%2Fcheck-cfg%2Fmix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-cfg%2Fmix.rs?ref=22b4c40e38da17de8581004fb3cd2f12c0133a14", "patch": "@@ -45,6 +45,28 @@ fn test_cfg_macro() {\n     //~^ WARNING unexpected `cfg` condition name\n     cfg!(any(feature = \"bad\", windows));\n     //~^ WARNING unexpected `cfg` condition value\n+    cfg!(any(windows, xxx));\n+    //~^ WARNING unexpected `cfg` condition name\n+    cfg!(all(unix, xxx));\n+    //~^ WARNING unexpected `cfg` condition name\n+    cfg!(all(aa, bb));\n+    //~^ WARNING unexpected `cfg` condition name\n+    //~| WARNING unexpected `cfg` condition name\n+    cfg!(any(aa, bb));\n+    //~^ WARNING unexpected `cfg` condition name\n+    //~| WARNING unexpected `cfg` condition name\n+    cfg!(any(unix, feature = \"zebra\"));\n+    //~^ WARNING unexpected `cfg` condition value\n+    cfg!(any(xxx, feature = \"zebra\"));\n+    //~^ WARNING unexpected `cfg` condition name\n+    //~| WARNING unexpected `cfg` condition value\n+    cfg!(any(xxx, unix, xxx));\n+    //~^ WARNING unexpected `cfg` condition name\n+    //~| WARNING unexpected `cfg` condition name\n+    cfg!(all(feature = \"zebra\", feature = \"zebra\", feature = \"zebra\"));\n+    //~^ WARNING unexpected `cfg` condition value\n+    //~| WARNING unexpected `cfg` condition value\n+    //~| WARNING unexpected `cfg` condition value\n }\n \n fn main() {}"}, {"sha": "08a338da104d0bd89e097ed77c7df0be12f239cf", "filename": "src/test/ui/check-cfg/mix.stderr", "status": "modified", "additions": 95, "deletions": 1, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/22b4c40e38da17de8581004fb3cd2f12c0133a14/src%2Ftest%2Fui%2Fcheck-cfg%2Fmix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/22b4c40e38da17de8581004fb3cd2f12c0133a14/src%2Ftest%2Fui%2Fcheck-cfg%2Fmix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-cfg%2Fmix.stderr?ref=22b4c40e38da17de8581004fb3cd2f12c0133a14", "patch": "@@ -62,5 +62,99 @@ LL |     cfg!(any(feature = \"bad\", windows));\n    |\n    = note: expected values for `feature` are: bar, foo\n \n-warning: 9 warnings emitted\n+warning: unexpected `cfg` condition name\n+  --> $DIR/mix.rs:48:23\n+   |\n+LL |     cfg!(any(windows, xxx));\n+   |                       ^^^\n+\n+warning: unexpected `cfg` condition name\n+  --> $DIR/mix.rs:50:20\n+   |\n+LL |     cfg!(all(unix, xxx));\n+   |                    ^^^\n+\n+warning: unexpected `cfg` condition name\n+  --> $DIR/mix.rs:52:14\n+   |\n+LL |     cfg!(all(aa, bb));\n+   |              ^^\n+\n+warning: unexpected `cfg` condition name\n+  --> $DIR/mix.rs:52:18\n+   |\n+LL |     cfg!(all(aa, bb));\n+   |                  ^^\n+\n+warning: unexpected `cfg` condition name\n+  --> $DIR/mix.rs:55:14\n+   |\n+LL |     cfg!(any(aa, bb));\n+   |              ^^\n+\n+warning: unexpected `cfg` condition name\n+  --> $DIR/mix.rs:55:18\n+   |\n+LL |     cfg!(any(aa, bb));\n+   |                  ^^\n+\n+warning: unexpected `cfg` condition value\n+  --> $DIR/mix.rs:58:20\n+   |\n+LL |     cfg!(any(unix, feature = \"zebra\"));\n+   |                    ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: expected values for `feature` are: bar, foo\n+\n+warning: unexpected `cfg` condition name\n+  --> $DIR/mix.rs:60:14\n+   |\n+LL |     cfg!(any(xxx, feature = \"zebra\"));\n+   |              ^^^\n+\n+warning: unexpected `cfg` condition value\n+  --> $DIR/mix.rs:60:19\n+   |\n+LL |     cfg!(any(xxx, feature = \"zebra\"));\n+   |                   ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: expected values for `feature` are: bar, foo\n+\n+warning: unexpected `cfg` condition name\n+  --> $DIR/mix.rs:63:14\n+   |\n+LL |     cfg!(any(xxx, unix, xxx));\n+   |              ^^^\n+\n+warning: unexpected `cfg` condition name\n+  --> $DIR/mix.rs:63:25\n+   |\n+LL |     cfg!(any(xxx, unix, xxx));\n+   |                         ^^^\n+\n+warning: unexpected `cfg` condition value\n+  --> $DIR/mix.rs:66:14\n+   |\n+LL |     cfg!(all(feature = \"zebra\", feature = \"zebra\", feature = \"zebra\"));\n+   |              ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: expected values for `feature` are: bar, foo\n+\n+warning: unexpected `cfg` condition value\n+  --> $DIR/mix.rs:66:33\n+   |\n+LL |     cfg!(all(feature = \"zebra\", feature = \"zebra\", feature = \"zebra\"));\n+   |                                 ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: expected values for `feature` are: bar, foo\n+\n+warning: unexpected `cfg` condition value\n+  --> $DIR/mix.rs:66:52\n+   |\n+LL |     cfg!(all(feature = \"zebra\", feature = \"zebra\", feature = \"zebra\"));\n+   |                                                    ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: expected values for `feature` are: bar, foo\n+\n+warning: 23 warnings emitted\n "}]}