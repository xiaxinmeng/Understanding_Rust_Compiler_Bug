{"sha": "c84a894ed7fa16c13a7e9395b85990cb2dacf71a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NGE4OTRlZDdmYTE2YzEzYTdlOTM5NWI4NTk5MGNiMmRhY2Y3MWE=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-01-02T07:15:32Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-01-02T07:15:32Z"}, "message": "rustfmt", "tree": {"sha": "fc3dc1202ac5a315842fc2a8ddcb3cba00a48056", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc3dc1202ac5a315842fc2a8ddcb3cba00a48056"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c84a894ed7fa16c13a7e9395b85990cb2dacf71a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlwsZR4ACgkQtvoGpuDi\nZlunORAAkAljDgfXDAAW3Rxfr4dg7HWzKiTKAwDy8vBGeT3JCddtqTNPOYp3L6GW\nNtHRe/cL0rUe9UuHhu7obaNNMwoUOaZI+UQG2q7MThnP74XMi194WL7SV1mEp5NU\nassJ+KVm+kQeOHqbEMAOKziOQ9Ub+Ep5Blz/qEaUfJPqNDcetM+89niLFfUYSWmt\nsPKwjIG7/D/IyM0kde8DOHXdKoasfrjiAJXiCKo4/RwZhlTSBM82tanRMAdNLroj\nj/7LFA39TSjScgvNbkwp2PDeB53lxUxz5g/7WaB4b/dkTuapymoYrdiaQ6nJ5TMb\nsNC6OfVGKW3lTQx+Y8KY3WQkwzPi1rFfl+CXulU7aJ/9JJWXqaVlaO6L1yzWXacm\n0Q4Nf/9Fw4lGzdDBthqolQp4iV+opd5b4c1I9HoGLCXF442Yaz5ZIIecHA4GSk/N\nCPSU2bbUoyPLk8q5rTVmNW7QRRlK8BOeOOL1hVWfrEf6FRoJ9/9F2JDJjKS0Yr/k\nBh4Xp3vpuGZmIHRpC0k0fq5cIQviqwkq+ufNj6yLyPvvVNT2nH/mbIx6qvfuml8w\nkOcl1abMC1jd0YHrB+2mOTXz+uuXUqtL6wiVVH6lXbNDcDV5c8WVpnK2RVZD2nxp\nXg/XfDQGjwH4IEqAuqFL37Mg/2gX0ZtYcH+IryyQyATFZ9zOMa0=\n=0faG\n-----END PGP SIGNATURE-----", "payload": "tree fc3dc1202ac5a315842fc2a8ddcb3cba00a48056\nparent 0c54913afef6b5ca2e6c037bbbfb25e67f9a560a\nauthor Philipp Hansch <dev@phansch.net> 1546413332 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1546413332 +0100\n\nrustfmt\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c84a894ed7fa16c13a7e9395b85990cb2dacf71a", "html_url": "https://github.com/rust-lang/rust/commit/c84a894ed7fa16c13a7e9395b85990cb2dacf71a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c84a894ed7fa16c13a7e9395b85990cb2dacf71a/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c54913afef6b5ca2e6c037bbbfb25e67f9a560a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c54913afef6b5ca2e6c037bbbfb25e67f9a560a", "html_url": "https://github.com/rust-lang/rust/commit/0c54913afef6b5ca2e6c037bbbfb25e67f9a560a"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "add237d6fe075de9699c815988e8ee853bf441e0", "filename": "tests/auxiliary/option_helpers.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c84a894ed7fa16c13a7e9395b85990cb2dacf71a/tests%2Fauxiliary%2Foption_helpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84a894ed7fa16c13a7e9395b85990cb2dacf71a/tests%2Fauxiliary%2Foption_helpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fauxiliary%2Foption_helpers.rs?ref=c84a894ed7fa16c13a7e9395b85990cb2dacf71a", "patch": "@@ -2,7 +2,9 @@\n /// The lints included in `option_methods()` should not lint if the call to map is partially\n /// within a macro\n macro_rules! opt_map {\n-    ($opt:expr, $map:expr) => {($opt).map($map)};\n+    ($opt:expr, $map:expr) => {\n+        ($opt).map($map)\n+    };\n }\n \n /// Struct to generate false positive for Iterator-based lints"}, {"sha": "b3f832399616612792fa5b010d6f991b8997d259", "filename": "tests/ui/result_map_unwrap_or_else.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c84a894ed7fa16c13a7e9395b85990cb2dacf71a/tests%2Fui%2Fresult_map_unwrap_or_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84a894ed7fa16c13a7e9395b85990cb2dacf71a/tests%2Fui%2Fresult_map_unwrap_or_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unwrap_or_else.rs?ref=c84a894ed7fa16c13a7e9395b85990cb2dacf71a", "patch": "@@ -18,18 +18,10 @@ fn result_methods() {\n \n     // Check RESULT_MAP_UNWRAP_OR_ELSE\n     // single line case\n-    let _ = res.map(|x| x + 1)\n-\n-               .unwrap_or_else(|e| 0); // should lint even though this call is on a separate line\n-    // multi line cases\n-    let _ = res.map(|x| {\n-                        x + 1\n-                    }\n-              ).unwrap_or_else(|e| 0);\n-    let _ = res.map(|x| x + 1)\n-               .unwrap_or_else(|e|\n-                    0\n-                );\n+    let _ = res.map(|x| x + 1).unwrap_or_else(|e| 0); // should lint even though this call is on a separate line\n+                                                      // multi line cases\n+    let _ = res.map(|x| x + 1).unwrap_or_else(|e| 0);\n+    let _ = res.map(|x| x + 1).unwrap_or_else(|e| 0);\n     // macro case\n     let _ = opt_map!(res, |x| x + 1).unwrap_or_else(|e| 0); // should not lint\n }"}]}