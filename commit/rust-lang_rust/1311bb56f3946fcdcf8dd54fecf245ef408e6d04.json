{"sha": "1311bb56f3946fcdcf8dd54fecf245ef408e6d04", "node_id": "C_kwDOAAsO6NoAKDEzMTFiYjU2ZjM5NDZmY2RjZjhkZDU0ZmVjZjI0NWVmNDA4ZTZkMDQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-16T00:48:29Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-17T03:32:45Z"}, "message": "Simplify an ObjectData field", "tree": {"sha": "adf636c23944a7cc74ae6a6cbaff054e59b8dd4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adf636c23944a7cc74ae6a6cbaff054e59b8dd4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1311bb56f3946fcdcf8dd54fecf245ef408e6d04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1311bb56f3946fcdcf8dd54fecf245ef408e6d04", "html_url": "https://github.com/rust-lang/rust/commit/1311bb56f3946fcdcf8dd54fecf245ef408e6d04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1311bb56f3946fcdcf8dd54fecf245ef408e6d04/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e68b6f50515ef2e402c7b945bc2041d5cbaa5ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e68b6f50515ef2e402c7b945bc2041d5cbaa5ca", "html_url": "https://github.com/rust-lang/rust/commit/9e68b6f50515ef2e402c7b945bc2041d5cbaa5ca"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "a39f3ae7b4d6f1503414e8fc3ef0adc19ac485b9", "filename": "compiler/rustc_middle/src/traits/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1311bb56f3946fcdcf8dd54fecf245ef408e6d04/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1311bb56f3946fcdcf8dd54fecf245ef408e6d04/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs?ref=1311bb56f3946fcdcf8dd54fecf245ef408e6d04", "patch": "@@ -653,7 +653,7 @@ pub enum ImplSource<'tcx, N> {\n     Param(Vec<N>, ty::BoundConstness),\n \n     /// Virtual calls through an object.\n-    Object(ImplSourceObjectData<'tcx, N>),\n+    Object(ImplSourceObjectData<N>),\n \n     /// Successful resolution for a builtin trait.\n     Builtin(Vec<N>),\n@@ -735,7 +735,7 @@ impl<'tcx, N> ImplSource<'tcx, N> {\n             ImplSource::Param(n, ct) => ImplSource::Param(n.into_iter().map(f).collect(), ct),\n             ImplSource::Builtin(n) => ImplSource::Builtin(n.into_iter().map(f).collect()),\n             ImplSource::Object(o) => ImplSource::Object(ImplSourceObjectData {\n-                upcast_trait_ref: o.upcast_trait_ref,\n+                upcast_trait_def_id: o.upcast_trait_def_id,\n                 vtable_base: o.vtable_base,\n                 nested: o.nested.into_iter().map(f).collect(),\n             }),\n@@ -835,9 +835,9 @@ pub struct ImplSourceTraitUpcastingData<N> {\n \n #[derive(PartialEq, Eq, Clone, TyEncodable, TyDecodable, HashStable, Lift)]\n #[derive(TypeFoldable, TypeVisitable)]\n-pub struct ImplSourceObjectData<'tcx, N> {\n+pub struct ImplSourceObjectData<N> {\n     /// `Foo` upcast to the obligation trait. This will be some supertrait of `Foo`.\n-    pub upcast_trait_ref: ty::PolyTraitRef<'tcx>,\n+    pub upcast_trait_def_id: DefId,\n \n     /// The vtable is formed by concatenating together the method lists of\n     /// the base object trait and all supertraits, pointers to supertrait vtable will"}, {"sha": "3e7ed4dabe97ac216c1f43d5e8d96330052c151a", "filename": "compiler/rustc_middle/src/traits/structural_impls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1311bb56f3946fcdcf8dd54fecf245ef408e6d04/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1311bb56f3946fcdcf8dd54fecf245ef408e6d04/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fstructural_impls.rs?ref=1311bb56f3946fcdcf8dd54fecf245ef408e6d04", "patch": "@@ -82,12 +82,12 @@ impl<N: fmt::Debug> fmt::Debug for traits::ImplSourceTraitUpcastingData<N> {\n     }\n }\n \n-impl<'tcx, N: fmt::Debug> fmt::Debug for traits::ImplSourceObjectData<'tcx, N> {\n+impl<N: fmt::Debug> fmt::Debug for traits::ImplSourceObjectData<N> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         write!(\n             f,\n             \"ImplSourceObjectData(upcast={:?}, vtable_base={}, nested={:?})\",\n-            self.upcast_trait_ref, self.vtable_base, self.nested\n+            self.upcast_trait_def_id, self.vtable_base, self.nested\n         )\n     }\n }"}, {"sha": "bf37cc68b8c0dfa1117a440d3815b3cb0d40b10c", "filename": "compiler/rustc_trait_selection/src/traits/select/confirmation.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1311bb56f3946fcdcf8dd54fecf245ef408e6d04/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1311bb56f3946fcdcf8dd54fecf245ef408e6d04/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs?ref=1311bb56f3946fcdcf8dd54fecf245ef408e6d04", "patch": "@@ -486,7 +486,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         &mut self,\n         obligation: &TraitObligation<'tcx>,\n         index: usize,\n-    ) -> Result<ImplSourceObjectData<'tcx, PredicateObligation<'tcx>>, SelectionError<'tcx>> {\n+    ) -> Result<ImplSourceObjectData<PredicateObligation<'tcx>>, SelectionError<'tcx>> {\n         let tcx = self.tcx();\n         debug!(?obligation, ?index, \"confirm_object_candidate\");\n \n@@ -653,7 +653,11 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             (unnormalized_upcast_trait_ref, ty::Binder::dummy(object_trait_ref)),\n         );\n \n-        Ok(ImplSourceObjectData { upcast_trait_ref, vtable_base, nested })\n+        Ok(ImplSourceObjectData {\n+            upcast_trait_def_id: upcast_trait_ref.def_id(),\n+            vtable_base,\n+            nested,\n+        })\n     }\n \n     fn confirm_fn_pointer_candidate("}, {"sha": "906c357e8ca7ed95ed097f00f168552a6f66405f", "filename": "compiler/rustc_trait_selection/src/traits/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1311bb56f3946fcdcf8dd54fecf245ef408e6d04/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1311bb56f3946fcdcf8dd54fecf245ef408e6d04/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Futil.rs?ref=1311bb56f3946fcdcf8dd54fecf245ef408e6d04", "patch": "@@ -243,12 +243,12 @@ pub fn upcast_choices<'tcx>(\n /// `object.upcast_trait_ref`) within the vtable for `object`.\n pub fn get_vtable_index_of_object_method<'tcx, N>(\n     tcx: TyCtxt<'tcx>,\n-    object: &super::ImplSourceObjectData<'tcx, N>,\n+    object: &super::ImplSourceObjectData<N>,\n     method_def_id: DefId,\n ) -> Option<usize> {\n     // Count number of methods preceding the one we are selecting and\n     // add them to the total offset.\n-    tcx.own_existential_vtable_entries(object.upcast_trait_ref.def_id())\n+    tcx.own_existential_vtable_entries(object.upcast_trait_def_id)\n         .iter()\n         .copied()\n         .position(|def_id| def_id == method_def_id)"}]}