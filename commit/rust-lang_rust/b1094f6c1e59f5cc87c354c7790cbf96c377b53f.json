{"sha": "b1094f6c1e59f5cc87c354c7790cbf96c377b53f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxMDk0ZjZjMWU1OWY1Y2M4N2MzNTRjNzc5MGNiZjk2YzM3N2I1M2Y=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-10-16T09:21:41Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-10-16T09:21:41Z"}, "message": "Deallocate primval conversion hack allocs.\n\nIt's a hack, sure, but it should learn some manners.", "tree": {"sha": "0ca03d6294866f60293336403cb06f23d45cf857", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ca03d6294866f60293336403cb06f23d45cf857"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1094f6c1e59f5cc87c354c7790cbf96c377b53f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1094f6c1e59f5cc87c354c7790cbf96c377b53f", "html_url": "https://github.com/rust-lang/rust/commit/b1094f6c1e59f5cc87c354c7790cbf96c377b53f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1094f6c1e59f5cc87c354c7790cbf96c377b53f/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55f2164bcdbf2748aca988d867ab2b767fb83547", "url": "https://api.github.com/repos/rust-lang/rust/commits/55f2164bcdbf2748aca988d867ab2b767fb83547", "html_url": "https://github.com/rust-lang/rust/commit/55f2164bcdbf2748aca988d867ab2b767fb83547"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "d9d3cba31c0d210d6909b80dc96d687deb9a2b32", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1094f6c1e59f5cc87c354c7790cbf96c377b53f/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1094f6c1e59f5cc87c354c7790cbf96c377b53f/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=b1094f6c1e59f5cc87c354c7790cbf96c377b53f", "patch": "@@ -1124,7 +1124,9 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             Value::ByVal(primval) => {\n                 let ptr = self.alloc_ptr(ty)?;\n                 self.memory.write_primval(ptr, primval)?;\n-                self.value_to_primval(Value::ByRef(ptr), ty)\n+                let primval = self.value_to_primval(Value::ByRef(ptr), ty)?;\n+                self.memory.deallocate(ptr)?;\n+                Ok(primval)\n             }\n \n             Value::ByValPair(..) => bug!(\"value_to_primval can't work with fat pointers\"),"}, {"sha": "d249829425280245bbe2e1ce610f536317095ee4", "filename": "tests/compile-fail/oom2.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b1094f6c1e59f5cc87c354c7790cbf96c377b53f/tests%2Fcompile-fail%2Foom2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1094f6c1e59f5cc87c354c7790cbf96c377b53f/tests%2Fcompile-fail%2Foom2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Foom2.rs?ref=b1094f6c1e59f5cc87c354c7790cbf96c377b53f", "patch": "@@ -2,7 +2,7 @@\n #![miri(memory_size=1000)]\n \n fn bar(i: i32) {\n-    if i < 1000 { //~ERROR tried to allocate 4 more bytes, but only 1 bytes are free of the 1000 byte memory\n+    if i < 1000 { //~ERROR tried to allocate 4 more bytes, but only 0 bytes are free of the 1000 byte memory\n         bar(i + 1)\n         //~^NOTE inside call to bar\n         //~|NOTE inside call to bar\n@@ -31,6 +31,15 @@ fn bar(i: i32) {\n         //~|NOTE inside call to bar\n         //~|NOTE inside call to bar\n         //~|NOTE inside call to bar\n+        //~|NOTE inside call to bar\n+        //~|NOTE inside call to bar\n+        //~|NOTE inside call to bar\n+        //~|NOTE inside call to bar\n+        //~|NOTE inside call to bar\n+        //~|NOTE inside call to bar\n+        //~|NOTE inside call to bar\n+        //~|NOTE inside call to bar\n+        //~|NOTE inside call to bar\n     }\n }\n "}]}