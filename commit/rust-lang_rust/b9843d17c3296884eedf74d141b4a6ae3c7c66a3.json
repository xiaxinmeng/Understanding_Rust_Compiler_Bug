{"sha": "b9843d17c3296884eedf74d141b4a6ae3c7c66a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5ODQzZDE3YzMyOTY4ODRlZWRmNzRkMTQxYjRhNmFlM2M3YzY2YTM=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-07T07:06:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-07T07:06:52Z"}, "message": "Merge pull request #2515 from sinkuu/nested_shape_lazy_static\n\nUse nested_shape for indenting types of lazy_static", "tree": {"sha": "9ac2fd22ea801e547de36c4a1e8a730fc744575f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ac2fd22ea801e547de36c4a1e8a730fc744575f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9843d17c3296884eedf74d141b4a6ae3c7c66a3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJan4+MCRBK7hj4Ov3rIwAAdHIIAKGnq0YeBrVqo5PJSiB/rja0\nf6mQvm573UOx1kzs1TIzl3Tj/EvyLR9Fku+AvsDi5iM+95NVHNuZT0Uuu7b9YjMN\nZgqtsGqnXUtIJleTbh4M7iVl59Giqxc508uAKqOOZ3sh1Vm9yTgC6dGKvdDrosfl\nboSiXtGu07E7NiXMXR2rgxJPswiabRaEvyHrv2VlSGtD8Unkv3kb4iynletNd+41\n6NUBgkYBQ44ukNabpuc61TdFH1A+CHWLvMABhBbYn/mKOPFVMnalhU0IT7eGYLD5\nou1Z73CfbOVHdCxm5sjozk9b08AeZkBopX7BUa7t+kcr0r3wyqi4DBhfzqNieO4=\n=DZHv\n-----END PGP SIGNATURE-----\n", "payload": "tree 9ac2fd22ea801e547de36c4a1e8a730fc744575f\nparent 61919022ddf1f490414304b107946127cd15c6f1\nparent b3fa50db7320aa23e94ec15d774ad47c856757b5\nauthor Seiichi Uchida <seuchida@gmail.com> 1520406412 +0900\ncommitter GitHub <noreply@github.com> 1520406412 +0900\n\nMerge pull request #2515 from sinkuu/nested_shape_lazy_static\n\nUse nested_shape for indenting types of lazy_static"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9843d17c3296884eedf74d141b4a6ae3c7c66a3", "html_url": "https://github.com/rust-lang/rust/commit/b9843d17c3296884eedf74d141b4a6ae3c7c66a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9843d17c3296884eedf74d141b4a6ae3c7c66a3/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61919022ddf1f490414304b107946127cd15c6f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/61919022ddf1f490414304b107946127cd15c6f1", "html_url": "https://github.com/rust-lang/rust/commit/61919022ddf1f490414304b107946127cd15c6f1"}, {"sha": "b3fa50db7320aa23e94ec15d774ad47c856757b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3fa50db7320aa23e94ec15d774ad47c856757b5", "html_url": "https://github.com/rust-lang/rust/commit/b3fa50db7320aa23e94ec15d774ad47c856757b5"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "6be6a1f2664942c693ee206b410dfc164e054b1c", "filename": "src/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9843d17c3296884eedf74d141b4a6ae3c7c66a3/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9843d17c3296884eedf74d141b4a6ae3c7c66a3/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=b9843d17c3296884eedf74d141b4a6ae3c7c66a3", "patch": "@@ -916,7 +916,7 @@ fn format_lazy_static(context: &RewriteContext, shape: Shape, ts: &TokenStream)\n             \"{}static ref {}: {} =\",\n             vis,\n             id,\n-            ty.rewrite(context, shape)?\n+            ty.rewrite(context, nested_shape)?\n         ));\n         result.push_str(&::expr::rewrite_assign_rhs(\n             context,"}, {"sha": "38fefbcbef5ef4224c4c23590fe3621c90bc3277", "filename": "tests/source/lazy_static.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b9843d17c3296884eedf74d141b4a6ae3c7c66a3/tests%2Fsource%2Flazy_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9843d17c3296884eedf74d141b4a6ae3c7c66a3/tests%2Fsource%2Flazy_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Flazy_static.rs?ref=b9843d17c3296884eedf74d141b4a6ae3c7c66a3", "patch": "@@ -35,3 +35,11 @@ let ptr = :: remacs_sys :: xmalloc (\n remacs_sys :: Lisp_Subr ; :: std :: ptr :: copy_nonoverlapping (\n & subr , ptr , 1 ) ; :: std :: mem :: forget ( subr ) ; :: lisp :: ExternalPtr\n :: new ( ptr ) } } ; }\n+\n+\n+lazy_static! {\n+static ref FOO: HashMap<String,\n+(&'static str,\n+fn(Foo) -> Result<Box<Bar>, Either<FooError, BarError>>\n+),> = HashMap::new();\n+}"}, {"sha": "0aed6d38ccfc295e02e04389edf8e68a5be5c0e5", "filename": "tests/target/lazy_static.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b9843d17c3296884eedf74d141b4a6ae3c7c66a3/tests%2Ftarget%2Flazy_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9843d17c3296884eedf74d141b4a6ae3c7c66a3/tests%2Ftarget%2Flazy_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Flazy_static.rs?ref=b9843d17c3296884eedf74d141b4a6ae3c7c66a3", "patch": "@@ -37,3 +37,13 @@ lazy_static! {\n         }\n     };\n }\n+\n+lazy_static! {\n+    static ref FOO: HashMap<\n+        String,\n+        (\n+            &'static str,\n+            fn(Foo) -> Result<Box<Bar>, Either<FooError, BarError>>\n+        ),\n+    > = HashMap::new();\n+}"}]}