{"sha": "6022aeb9ab93a6584a5408c9547ada31f8faf59a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMjJhZWI5YWI5M2E2NTg0YTU0MDhjOTU0N2FkYTMxZjhmYWY1OWE=", "commit": {"author": {"name": "Behnam Esfahbod", "email": "behnam@behnam.es", "date": "2017-01-13T03:23:35Z"}, "committer": {"name": "Behnam Esfahbod", "email": "behnam@behnam.es", "date": "2017-01-13T03:23:35Z"}, "message": "[libcollections] [doc] Fix typo in documentation", "tree": {"sha": "977cdb98587adad73d8404401d8dafbcd69189d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/977cdb98587adad73d8404401d8dafbcd69189d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6022aeb9ab93a6584a5408c9547ada31f8faf59a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6022aeb9ab93a6584a5408c9547ada31f8faf59a", "html_url": "https://github.com/rust-lang/rust/commit/6022aeb9ab93a6584a5408c9547ada31f8faf59a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6022aeb9ab93a6584a5408c9547ada31f8faf59a/comments", "author": {"login": "behnam", "id": 37169, "node_id": "MDQ6VXNlcjM3MTY5", "avatar_url": "https://avatars.githubusercontent.com/u/37169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/behnam", "html_url": "https://github.com/behnam", "followers_url": "https://api.github.com/users/behnam/followers", "following_url": "https://api.github.com/users/behnam/following{/other_user}", "gists_url": "https://api.github.com/users/behnam/gists{/gist_id}", "starred_url": "https://api.github.com/users/behnam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/behnam/subscriptions", "organizations_url": "https://api.github.com/users/behnam/orgs", "repos_url": "https://api.github.com/users/behnam/repos", "events_url": "https://api.github.com/users/behnam/events{/privacy}", "received_events_url": "https://api.github.com/users/behnam/received_events", "type": "User", "site_admin": false}, "committer": {"login": "behnam", "id": 37169, "node_id": "MDQ6VXNlcjM3MTY5", "avatar_url": "https://avatars.githubusercontent.com/u/37169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/behnam", "html_url": "https://github.com/behnam", "followers_url": "https://api.github.com/users/behnam/followers", "following_url": "https://api.github.com/users/behnam/following{/other_user}", "gists_url": "https://api.github.com/users/behnam/gists{/gist_id}", "starred_url": "https://api.github.com/users/behnam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/behnam/subscriptions", "organizations_url": "https://api.github.com/users/behnam/orgs", "repos_url": "https://api.github.com/users/behnam/repos", "events_url": "https://api.github.com/users/behnam/events{/privacy}", "received_events_url": "https://api.github.com/users/behnam/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a2ed98d344b6cbddc57db8841b42f935877e08d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a2ed98d344b6cbddc57db8841b42f935877e08d", "html_url": "https://github.com/rust-lang/rust/commit/1a2ed98d344b6cbddc57db8841b42f935877e08d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "50d4d0170fc70809c82b2dc392b3373f50b81f4c", "filename": "src/doc/book/ffi.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6022aeb9ab93a6584a5408c9547ada31f8faf59a/src%2Fdoc%2Fbook%2Fffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/6022aeb9ab93a6584a5408c9547ada31f8faf59a/src%2Fdoc%2Fbook%2Fffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fffi.md?ref=6022aeb9ab93a6584a5408c9547ada31f8faf59a", "patch": "@@ -309,7 +309,7 @@ However it is often desired that the callback is targeted to a special\n Rust object. This could be the object that represents the wrapper for the\n respective C object.\n \n-This can be achieved by passing an raw pointer to the object down to the\n+This can be achieved by passing a raw pointer to the object down to the\n C library. The C library can then include the pointer to the Rust object in\n the notification. This will allow the callback to unsafely access the\n referenced Rust object."}, {"sha": "805021516db713b8b98370a879aef52a82216a2e", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6022aeb9ab93a6584a5408c9547ada31f8faf59a/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6022aeb9ab93a6584a5408c9547ada31f8faf59a/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=6022aeb9ab93a6584a5408c9547ada31f8faf59a", "patch": "@@ -423,7 +423,7 @@ impl<T> [T] {\n         core_slice::SliceExt::get_unchecked_mut(self, index)\n     }\n \n-    /// Returns an raw pointer to the slice's buffer.\n+    /// Returns a raw pointer to the slice's buffer.\n     ///\n     /// The caller must ensure that the slice outlives the pointer this\n     /// function returns, or else it will end up pointing to garbage."}]}