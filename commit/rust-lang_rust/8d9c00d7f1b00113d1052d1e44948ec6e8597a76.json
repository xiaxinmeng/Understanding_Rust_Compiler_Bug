{"sha": "8d9c00d7f1b00113d1052d1e44948ec6e8597a76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkOWMwMGQ3ZjFiMDAxMTNkMTA1MmQxZTQ0OTQ4ZWM2ZTg1OTdhNzY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-06-26T20:57:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-26T20:57:39Z"}, "message": "Rollup merge of #73694 - poliorcetics:self-upper-keyword, r=Mark-Simulacrum\n\nDocument the Self keyword\n\nPartial fix of #34601.\n\nDocument the `Self` keyword.\n\nThis contains simple examples of the places where `Self` can be used.", "tree": {"sha": "cbd7577dc2294bd04d74dba5a38a3ccf8fac0ed4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbd7577dc2294bd04d74dba5a38a3ccf8fac0ed4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d9c00d7f1b00113d1052d1e44948ec6e8597a76", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe9mFDCRBK7hj4Ov3rIwAAdHIIAKFqZKU1khOE0BOH3pmF23B8\nnDXv4DVReGJpx5/RXYY+YxM2GjgPVi2HVt24wBadQPHb8lYsvXo9LUnNdpmUCHlO\nkWO5ujv7AQi7DvsQZnYHW0ZTeMt6iD8XKY3sdyTP7RMENCwLd0XzQZ/igvx3DYh1\n9ZddTk4Fdd6bYaSvaiQiAdSRkmtMIBCLos4BWDMKl/XGkCKaYI6GTDiWdPgN720Z\nB6sGixxVP2iqTN3bix2t8fjDWfJewiPdWeNLstXF7P6R1oxsOb/UUDD7uuBzrRGP\na7zWacUMACwXw2UrqG2POfsuL8t0uTJVH7qvuo3SBlXA1ZYQJnfeoqnMqaOWM8U=\n=rp92\n-----END PGP SIGNATURE-----\n", "payload": "tree cbd7577dc2294bd04d74dba5a38a3ccf8fac0ed4\nparent c18e919a79c701d25b33cffa0a183ee21085f2e6\nparent f44b8b96aa30d03c8e4de56a13f656a422910dec\nauthor Manish Goregaokar <manishsmail@gmail.com> 1593205059 -0700\ncommitter GitHub <noreply@github.com> 1593205059 -0700\n\nRollup merge of #73694 - poliorcetics:self-upper-keyword, r=Mark-Simulacrum\n\nDocument the Self keyword\n\nPartial fix of #34601.\n\nDocument the `Self` keyword.\n\nThis contains simple examples of the places where `Self` can be used.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d9c00d7f1b00113d1052d1e44948ec6e8597a76", "html_url": "https://github.com/rust-lang/rust/commit/8d9c00d7f1b00113d1052d1e44948ec6e8597a76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d9c00d7f1b00113d1052d1e44948ec6e8597a76/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c18e919a79c701d25b33cffa0a183ee21085f2e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c18e919a79c701d25b33cffa0a183ee21085f2e6", "html_url": "https://github.com/rust-lang/rust/commit/c18e919a79c701d25b33cffa0a183ee21085f2e6"}, {"sha": "f44b8b96aa30d03c8e4de56a13f656a422910dec", "url": "https://api.github.com/repos/rust-lang/rust/commits/f44b8b96aa30d03c8e4de56a13f656a422910dec", "html_url": "https://github.com/rust-lang/rust/commit/f44b8b96aa30d03c8e4de56a13f656a422910dec"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "a4c48b696dd6a6665fea19b0be7d91f03cc5e629", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 57, "deletions": 2, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/8d9c00d7f1b00113d1052d1e44948ec6e8597a76/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d9c00d7f1b00113d1052d1e44948ec6e8597a76/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=8d9c00d7f1b00113d1052d1e44948ec6e8597a76", "patch": "@@ -1217,11 +1217,66 @@ mod self_keyword {}\n /// The implementing type within a [`trait`] or [`impl`] block, or the current type within a type\n /// definition.\n ///\n-/// The documentation for this keyword is [not yet complete]. Pull requests welcome!\n+/// Within a type definition:\n+///\n+/// ```\n+/// # #![allow(dead_code)]\n+/// struct Node {\n+///     elem: i32,\n+///     // `Self` is a `Node` here.\n+///     next: Option<Box<Self>>,\n+/// }\n+/// ```\n+///\n+/// In an [`impl`] block:\n+///\n+/// ```\n+/// struct Foo(i32);\n+///\n+/// impl Foo {\n+///     fn new() -> Self {\n+///         Self(0)\n+///     }\n+/// }\n+///\n+/// assert_eq!(Foo::new().0, Foo(0).0);\n+/// ```\n+///\n+/// Generic parameters are implicit with `Self`:\n+///\n+/// ```\n+/// # #![allow(dead_code)]\n+/// struct Wrap<T> {\n+///     elem: T,\n+/// }\n+///\n+/// impl<T> Wrap<T> {\n+///     fn new(elem: T) -> Self {\n+///         Self { elem }\n+///     }\n+/// }\n+/// ```\n+///\n+/// In a [`trait`] definition and related [`impl`] block:\n+///\n+/// ```\n+/// trait Example {\n+///     fn example() -> Self;\n+/// }\n+///\n+/// struct Foo(i32);\n+///\n+/// impl Example for Foo {\n+///     fn example() -> Self {\n+///         Self(42)\n+///     }\n+/// }\n+///\n+/// assert_eq!(Foo::example().0, Foo(42).0);\n+/// ```\n ///\n /// [`impl`]: keyword.impl.html\n /// [`trait`]: keyword.trait.html\n-/// [not yet complete]: https://github.com/rust-lang/rust/issues/34601\n mod self_upper_keyword {}\n \n #[doc(keyword = \"static\")]"}]}