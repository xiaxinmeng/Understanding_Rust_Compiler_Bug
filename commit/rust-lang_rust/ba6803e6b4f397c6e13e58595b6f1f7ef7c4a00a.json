{"sha": "ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhNjgwM2U2YjRmMzk3YzZlMTNlNTg1OTViNmYxZjdlZjdjNGEwMGE=", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-01-20T00:15:04Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-01-20T00:28:28Z"}, "message": "No longer require unstable for jsondocck, only build it for json tests", "tree": {"sha": "c542ca2f1eff86a72ac03de2afb3c5f4e3ec7906", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c542ca2f1eff86a72ac03de2afb3c5f4e3ec7906"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEETdpCnQmiF6hBYUqdfsyTL4sscx4FAmAHeTIACgkQfsyTL4ss\ncx6wPxAAtbbmlV0gWZ+6IjMlQYL8mwnTGMqkJov9gSqSBDhYj/PK+74vveR+2L49\nFlEdILa2wk4R6E/Mrsx6bJW46IslIqmPp3UATyk803N5b7vQUAPGQMuM3bDB7ZDm\nlG/lS+tWR4sA1nWcgbf6y9eapXuPNlaSsBWDLXe+A8Jhn1//mscVkbtVMnGaWc3g\nSU/vhtIg4ZkrAN/wK6Dn96ETt5C3Oj+m1QMgoKM4sAHz9WFTxuCyrcJD9iivxqbE\n9nIE7yVvk6YNjLRMDhIb0nZI4JLJwYD+I6tGNzb3W/W/80DIwIe4h3LzD1p2lki3\nk78VK17ypP5zdGrWY5XDUY+R+nE81a4teNkGqLeXBkZDQI5msy4heG/aBkEUjf/H\nkJKekFqJ7zLH1TlhkZZm8O25ZsX0i8LP/qKkVVKd2NHNxAkyhyqqywiXwFFJwex3\nux9OyyLOw1ELC9zpK6eN9dxFiz/7+JaWik10wXUdQaj1VXVyXRdewZU00P1sbN/x\nmvrNxbhYDOkUYYjOUJ3egfQOIFANmdMJCkG5YRI8Pg8pTGUNe096nY8kjPGQKATg\n5v0u0wwf91rHKDwv3p3j1/DsDOLuQED9uKLkiVAHLkj68i6xDHFTgTi3F+58GSXg\nwrt8ugl2pi3zRILI3oXJGAhMPBYqQkf3KLFQKNqQftwmUAHcn6M=\n=RGdm\n-----END PGP SIGNATURE-----", "payload": "tree c542ca2f1eff86a72ac03de2afb3c5f4e3ec7906\nparent 728ffc8c03917b374dbee47d81799544059208b7\nauthor Rune Tynan <runetynan@gmail.com> 1611101704 -0500\ncommitter Rune Tynan <runetynan@gmail.com> 1611102508 -0500\n\nNo longer require unstable for jsondocck, only build it for json tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a", "html_url": "https://github.com/rust-lang/rust/commit/ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "728ffc8c03917b374dbee47d81799544059208b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/728ffc8c03917b374dbee47d81799544059208b7", "html_url": "https://github.com/rust-lang/rust/commit/728ffc8c03917b374dbee47d81799544059208b7"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "335a173100290f45306b5d5edad7dab95cb17ea1", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a", "patch": "@@ -1011,6 +1011,13 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n             cmd.arg(\"--rustdoc-path\").arg(builder.rustdoc(compiler));\n         }\n \n+        if mode == \"rustdoc-json\" {\n+            // Use the beta compiler for jsondocck\n+            let json_compiler = compiler.with_stage(0);\n+            cmd.arg(\"--jsondocck-path\")\n+                .arg(builder.ensure(tool::JsonDocCk { compiler: json_compiler, target }));\n+        }\n+\n         if mode == \"run-make\" && suite.ends_with(\"fulldeps\") {\n             cmd.arg(\"--rust-demangler-path\").arg(builder.tool_exe(Tool::RustDemangler));\n         }\n@@ -1072,8 +1079,6 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n \n         cmd.arg(\"--docck-python\").arg(builder.python());\n \n-        cmd.arg(\"--jsondocck-path\").arg(builder.ensure(tool::JsonDocCk { compiler, target }));\n-\n         if builder.config.build.ends_with(\"apple-darwin\") {\n             // Force /usr/bin/python3 on macOS for LLDB tests because we're loading the\n             // LLDB plugin's compiled module which only works with the system python"}, {"sha": "835b8beb0e7dfea464d65724283d91858b45d120", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a", "patch": "@@ -367,7 +367,7 @@ bootstrap_tool!(\n     RustdocTheme, \"src/tools/rustdoc-themes\", \"rustdoc-themes\";\n     ExpandYamlAnchors, \"src/tools/expand-yaml-anchors\", \"expand-yaml-anchors\";\n     LintDocs, \"src/tools/lint-docs\", \"lint-docs\";\n-    JsonDocCk, \"src/tools/jsondocck\", \"jsondocck\", is_unstable_tool = true;\n+    JsonDocCk, \"src/tools/jsondocck\", \"jsondocck\";\n );\n \n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq, Ord, PartialOrd)]"}, {"sha": "5424889a8388bf4cacbf82e046f81608aa89c0cb", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a", "patch": "@@ -199,7 +199,7 @@ pub struct Config {\n     pub docck_python: String,\n \n     /// The jsondocck executable.\n-    pub jsondocck_path: String,\n+    pub jsondocck_path: Option<String>,\n \n     /// The LLVM `FileCheck` binary path.\n     pub llvm_filecheck: Option<PathBuf>,"}, {"sha": "688cf930033ef6a8d132e3c4b3ad6bf3a6603e38", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a", "patch": "@@ -60,7 +60,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         .optopt(\"\", \"rust-demangler-path\", \"path to rust-demangler to use in tests\", \"PATH\")\n         .reqopt(\"\", \"lldb-python\", \"path to python to use for doc tests\", \"PATH\")\n         .reqopt(\"\", \"docck-python\", \"path to python to use for doc tests\", \"PATH\")\n-        .reqopt(\"\", \"jsondocck-path\", \"path to jsondocck to use for doc tests\", \"PATH\")\n+        .optopt(\"\", \"jsondocck-path\", \"path to jsondocck to use for doc tests\", \"PATH\")\n         .optopt(\"\", \"valgrind-path\", \"path to Valgrind executable for Valgrind tests\", \"PROGRAM\")\n         .optflag(\"\", \"force-valgrind\", \"fail if Valgrind tests cannot be run under Valgrind\")\n         .optopt(\"\", \"run-clang-based-tests-with\", \"path to Clang executable\", \"PATH\")\n@@ -208,7 +208,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         rust_demangler_path: matches.opt_str(\"rust-demangler-path\").map(PathBuf::from),\n         lldb_python: matches.opt_str(\"lldb-python\").unwrap(),\n         docck_python: matches.opt_str(\"docck-python\").unwrap(),\n-        jsondocck_path: matches.opt_str(\"jsondocck-path\").unwrap(),\n+        jsondocck_path: matches.opt_str(\"jsondocck-path\"),\n         valgrind_path: matches.opt_str(\"valgrind-path\"),\n         force_valgrind: matches.opt_present(\"force-valgrind\"),\n         run_clang_based_tests_with: matches.opt_str(\"run-clang-based-tests-with\"),"}, {"sha": "5608ff98417cdca847c1e1e04432f87de862fc41", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=ba6803e6b4f397c6e13e58595b6f1f7ef7c4a00a", "patch": "@@ -2490,7 +2490,7 @@ impl<'test> TestCx<'test> {\n         let mut json_out = out_dir.join(self.testpaths.file.file_stem().unwrap());\n         json_out.set_extension(\"json\");\n         let res = self.cmd2procres(\n-            Command::new(&self.config.jsondocck_path)\n+            Command::new(self.config.jsondocck_path.as_ref().unwrap())\n                 .arg(\"--doc-dir\")\n                 .arg(root.join(&out_dir))\n                 .arg(\"--template\")"}]}