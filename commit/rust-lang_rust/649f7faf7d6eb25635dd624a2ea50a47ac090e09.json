{"sha": "649f7faf7d6eb25635dd624a2ea50a47ac090e09", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0OWY3ZmFmN2Q2ZWIyNTYzNWRkNjI0YTJlYTUwYTQ3YWMwOTBlMDk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-05T14:03:27Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-05T14:03:27Z"}, "message": "fix tests on windows", "tree": {"sha": "c1d75c6565f3cfc97e910b5f1a1ff9c11a2b8a67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1d75c6565f3cfc97e910b5f1a1ff9c11a2b8a67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/649f7faf7d6eb25635dd624a2ea50a47ac090e09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/649f7faf7d6eb25635dd624a2ea50a47ac090e09", "html_url": "https://github.com/rust-lang/rust/commit/649f7faf7d6eb25635dd624a2ea50a47ac090e09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/649f7faf7d6eb25635dd624a2ea50a47ac090e09/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f87771092c5df9e9c07bcb5052e662bde0a0fa59", "url": "https://api.github.com/repos/rust-lang/rust/commits/f87771092c5df9e9c07bcb5052e662bde0a0fa59", "html_url": "https://github.com/rust-lang/rust/commit/f87771092c5df9e9c07bcb5052e662bde0a0fa59"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "9d2db731bdc4161dbcb04fb0b5b277253be67fed", "filename": "crates/libanalysis/tests/tests.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/649f7faf7d6eb25635dd624a2ea50a47ac090e09/crates%2Flibanalysis%2Ftests%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649f7faf7d6eb25635dd624a2ea50a47ac090e09/crates%2Flibanalysis%2Ftests%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibanalysis%2Ftests%2Ftests.rs?ref=649f7faf7d6eb25635dd624a2ea50a47ac090e09", "patch": "@@ -28,11 +28,18 @@ impl FileResolver for FileMap {\n         self.path(id).file_stem().unwrap().to_str().unwrap().to_string()\n     }\n     fn resolve(&self, id: FileId, rel: &RelativePath) -> Option<FileId> {\n-        let path = rel.to_path(self.path(id));\n-        let path = path.to_str().unwrap();\n-        let path = RelativePath::new(&path[1..]).normalize();\n+        let path = {\n+            if rel.starts_with(\"..\") {\n+                rel.strip_prefix(\"..\").unwrap()\n+                    .to_path(&self.path(id).parent().unwrap())\n+            } else {\n+                rel.to_path(self.path(id))\n+            }\n+        };\n+        let path = &path.to_str().unwrap()[1..];\n+        let path = RelativePath::new(&path[0..]).normalize();\n         let &(id, _) = self.0.iter()\n-            .find(|it| path == RelativePath::new(&it.1[1..]).normalize())?;\n+            .find(|it| path == RelativePath::new(&it.1[0..]).normalize())?;\n         Some(FileId(id))\n     }\n }"}]}