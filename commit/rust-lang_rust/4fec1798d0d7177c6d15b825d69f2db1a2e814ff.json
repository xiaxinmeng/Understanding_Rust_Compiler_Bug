{"sha": "4fec1798d0d7177c6d15b825d69f2db1a2e814ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZWMxNzk4ZDBkNzE3N2M2ZDE1YjgyNWQ2OWYyZGIxYTJlODE0ZmY=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-01T14:41:14Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-01T14:41:14Z"}, "message": "Tie up some ends in the tutorial", "tree": {"sha": "b587beea691317c4afdd0f6a8920fd403c825102", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b587beea691317c4afdd0f6a8920fd403c825102"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fec1798d0d7177c6d15b825d69f2db1a2e814ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fec1798d0d7177c6d15b825d69f2db1a2e814ff", "html_url": "https://github.com/rust-lang/rust/commit/4fec1798d0d7177c6d15b825d69f2db1a2e814ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6d856c57c7b61106d08dcc3444b0f394ff2c73e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6d856c57c7b61106d08dcc3444b0f394ff2c73e", "html_url": "https://github.com/rust-lang/rust/commit/a6d856c57c7b61106d08dcc3444b0f394ff2c73e"}], "stats": {"total": 74, "additions": 63, "deletions": 11}, "files": [{"sha": "7c084687bb2612d3f836457e39a6b2b5adefe666", "filename": "doc/tutorial/args.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Fargs.md", "raw_url": "https://github.com/rust-lang/rust/raw/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Fargs.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Fargs.md?ref=4fec1798d0d7177c6d15b825d69f2db1a2e814ff", "patch": "@@ -105,7 +105,7 @@ and `&&` for by(-immutable)-reference. It is sometimes necessary to\n override the defaults. We'll talk more about this when discussing\n [generics][gens].\n \n-[gens]: FIXME\n+[gens]: generic.html\n \n ## Other uses of safe references\n "}, {"sha": "198d035accba18d28ea1f49862bb35c22be572f9", "filename": "doc/tutorial/control.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Fcontrol.md", "raw_url": "https://github.com/rust-lang/rust/raw/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Fcontrol.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Fcontrol.md?ref=4fec1798d0d7177c6d15b825d69f2db1a2e814ff", "patch": "@@ -148,7 +148,7 @@ handle the failure, allowing the program to continue running.\n to access a vector out of bounds, or running a pattern match with no\n matching clauses, both result in the equivalent of a `fail`.\n \n-[tasks]: FIXME\n+[tasks]: task.html\n \n ## Logging\n "}, {"sha": "0ae474aa54c8473fb1e1f95de181427ff74efcf3", "filename": "doc/tutorial/data.md", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Fdata.md", "raw_url": "https://github.com/rust-lang/rust/raw/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Fdata.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Fdata.md?ref=4fec1798d0d7177c6d15b825d69f2db1a2e814ff", "patch": "@@ -292,4 +292,17 @@ strings. They are always immutable.\n \n ## Resources\n \n-FIXME fill this in\n+Resources are data types that have a destructor associated with them.\n+\n+    resource file_desc(fd: int) {\n+        close_file_desc(fd);\n+    }\n+\n+This defines a type `file_desc` and a constructor of the same name,\n+which takes an integer. Values of such a type can not be copied, and\n+when they are destroyed (by going out of scope, or, when boxed, when\n+their box is cleaned up), their body runs. In the example above, this\n+would cause the given file descriptor to be closed.\n+\n+NOTE: We're considering alternative approaches for data types with\n+destructors. Resources might go away in the future."}, {"sha": "1c97e62f6a8f974a7379e4f776ad69ec1780cb05", "filename": "doc/tutorial/generic.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Fgeneric.md", "raw_url": "https://github.com/rust-lang/rust/raw/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Fgeneric.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Fgeneric.md?ref=4fec1798d0d7177c6d15b825d69f2db1a2e814ff", "patch": "@@ -102,3 +102,6 @@ pass to a generic higher-order function as being passed by pointer:\n \n NOTE: This is inconvenient, and we are hoping to get rid of this\n restriction in the future.\n+\n+FIXME discuss kinds, when they have settled\n+"}, {"sha": "50f7afb765ab17a6810ea89b3f243804f21f695c", "filename": "doc/tutorial/mod.md", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Fmod.md", "raw_url": "https://github.com/rust-lang/rust/raw/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Fmod.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Fmod.md?ref=4fec1798d0d7177c6d15b825d69f2db1a2e814ff", "patch": "@@ -35,7 +35,7 @@ It is also possible to include multiple files in a crate. For this\n purpose, you create a `.rc` crate file, which references any number of\n `.rs` code files. A crate file could look like this:\n \n-    #[link(name = \"farm\", vers = \"2.5\", author = \"mjh\")]\n+    #[link(name = \"farm\", vers = \"2.5\", author = \"mjh\")];\n     mod cow;\n     mod chicken;\n     mod horse;\n@@ -90,7 +90,7 @@ local name `myfarm`.\n \n Our example crate declared this set of `link` attributes:\n \n-    #[link(name = \"farm\", vers = \"2.5\", author = \"mjh\")]\n+    #[link(name = \"farm\", vers = \"2.5\", author = \"mjh\")];\n \n The version does not match the one provided in the `use` directive, so\n unless the compiler can find another crate with the right version\n@@ -102,14 +102,13 @@ Now for something that you can actually compile yourself. We have\n these two files:\n \n     // mylib.rs\n+    #[link(name = \"mylib\", vers = \"1.0\")];\n     fn world() -> str { \"world\" }\n \n     // main.rs\n     use mylib;\n     fn main() { log_err \"hello \" + mylib::world(); }\n \n-FIXME the compiler currently complains about missing link metas when you compile this\n-\n Now compile and run like this (adjust to your platform if necessary):\n \n     > rustc --lib mylib.rs"}, {"sha": "bf621816d47c5cbbacb9fac9f5c2d35ba6acee02", "filename": "doc/tutorial/order", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Forder", "raw_url": "https://github.com/rust-lang/rust/raw/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Forder", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Forder?ref=4fec1798d0d7177c6d15b825d69f2db1a2e814ff", "patch": "@@ -9,3 +9,4 @@ generic\n mod\n ffi\n task\n+test"}, {"sha": "44d99891f765043ab81dfa0fb85fb31c7226e668", "filename": "doc/tutorial/setup.md", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Fsetup.md", "raw_url": "https://github.com/rust-lang/rust/raw/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Fsetup.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Fsetup.md?ref=4fec1798d0d7177c6d15b825d69f2db1a2e814ff", "patch": "@@ -10,8 +10,8 @@ Rust program files are, by convention, given the extension `.rs`. Say\n we have a file `hello.rs` containing this program:\n \n     use std;\n-    fn main() {\n-        std::io::println(\"hello world!\");\n+    fn main(args: [str]) {\n+        std::io::println(\"hello world from \" + args[0] + \"!\");\n     }\n \n If the Rust compiler was installed successfully, running `rustc\n@@ -30,7 +30,16 @@ into an error.\n \n ## Anatomy of a Rust program\n \n-FIXME say something about libs, main, modules, use\n+In its simplest form, a Rust program is simply a `.rs` file with some\n+types and functions defined in it. If it has a `main` function, it can\n+be compiled to an executable. Rust does not allow code that's not a\n+declaration to appear at the top level of the file\u2014all statements must\n+live inside a function.\n+\n+Rust programs can also be compiled as libraries, and included in other\n+programs. The `use std` directive that appears at the top of a lot of\n+examples imports the standard library. This is described in more\n+detail [later on](mod.html).\n \n ## Editing Rust code\n "}, {"sha": "1ccd49760ec8c9b05f271cb2bfc736950191515b", "filename": "doc/tutorial/syntax.md", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Fsyntax.md", "raw_url": "https://github.com/rust-lang/rust/raw/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Fsyntax.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Fsyntax.md?ref=4fec1798d0d7177c6d15b825d69f2db1a2e814ff", "patch": "@@ -280,4 +280,28 @@ exists, convert the result of the expression to the given type.\n \n ## Attributes\n \n-FIXME Briefly introduce attributes\n+Every definition can be annotated with attributes. Attributes are meta\n+information that can serve a variety of purposes. One of those is\n+conditional compilation:\n+\n+    #[cfg(target_os = \"win32\")]\n+    fn register_win_service() { /* ... */ }\n+\n+This will cause the function to vanish without a trace during\n+compilation on a non-Windows platform. Attributes always look like\n+`#[attr]`, where `attr` can be simply a name (as in `#[test]`, which\n+is used by the [built-in test framework](test.html)), a name followed\n+by `=` and then a literal (as in `#[license = \"BSD\"]`, which is a\n+valid way to annotate a Rust program as being released under a\n+BSD-style license), or a name followed by a comma-separated list of\n+nested attributes, as in the `cfg` example above.\n+\n+An attribute without a semicolon following it applies to the\n+definition that follows it. When terminated with a semicolon, it\n+applies to the current context. The above example could also be\n+written like this:\n+\n+    fn register_win_service() {\n+        #[cfg(target_os = \"win32\")];\n+        /* ... */\n+    }"}, {"sha": "636f65947a05ef52fca7d0ef4020bbd405a363ef", "filename": "doc/tutorial/test.md", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Ftest.md", "raw_url": "https://github.com/rust-lang/rust/raw/4fec1798d0d7177c6d15b825d69f2db1a2e814ff/doc%2Ftutorial%2Ftest.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Ftest.md?ref=4fec1798d0d7177c6d15b825d69f2db1a2e814ff", "patch": "@@ -0,0 +1,3 @@\n+# Testing\n+\n+FIXME to be written"}]}