{"sha": "1479de86885c5c2b35556cc89196a6d2385341c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NzlkZTg2ODg1YzVjMmIzNTU1NmNjODkxOTZhNmQyMzg1MzQxYzg=", "commit": {"author": {"name": "Steven Allen", "email": "steven@stebalien.com", "date": "2015-01-21T21:38:50Z"}, "committer": {"name": "Steven Allen", "email": "steven@stebalien.com", "date": "2015-01-22T00:10:41Z"}, "message": "Add test cases for ExactSizeIterator impls\n\nByRef is not tested included because it is a trivial pass through.", "tree": {"sha": "4ec5bc35ee784aa5f766707d68e2383b5fbd5e0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ec5bc35ee784aa5f766707d68e2383b5fbd5e0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1479de86885c5c2b35556cc89196a6d2385341c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1479de86885c5c2b35556cc89196a6d2385341c8", "html_url": "https://github.com/rust-lang/rust/commit/1479de86885c5c2b35556cc89196a6d2385341c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1479de86885c5c2b35556cc89196a6d2385341c8/comments", "author": {"login": "Stebalien", "id": 310393, "node_id": "MDQ6VXNlcjMxMDM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/310393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stebalien", "html_url": "https://github.com/Stebalien", "followers_url": "https://api.github.com/users/Stebalien/followers", "following_url": "https://api.github.com/users/Stebalien/following{/other_user}", "gists_url": "https://api.github.com/users/Stebalien/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stebalien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stebalien/subscriptions", "organizations_url": "https://api.github.com/users/Stebalien/orgs", "repos_url": "https://api.github.com/users/Stebalien/repos", "events_url": "https://api.github.com/users/Stebalien/events{/privacy}", "received_events_url": "https://api.github.com/users/Stebalien/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Stebalien", "id": 310393, "node_id": "MDQ6VXNlcjMxMDM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/310393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stebalien", "html_url": "https://github.com/Stebalien", "followers_url": "https://api.github.com/users/Stebalien/followers", "following_url": "https://api.github.com/users/Stebalien/following{/other_user}", "gists_url": "https://api.github.com/users/Stebalien/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stebalien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stebalien/subscriptions", "organizations_url": "https://api.github.com/users/Stebalien/orgs", "repos_url": "https://api.github.com/users/Stebalien/repos", "events_url": "https://api.github.com/users/Stebalien/events{/privacy}", "received_events_url": "https://api.github.com/users/Stebalien/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a13e7212025e5339133126d129e64fe8e7aff84b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a13e7212025e5339133126d129e64fe8e7aff84b", "html_url": "https://github.com/rust-lang/rust/commit/a13e7212025e5339133126d129e64fe8e7aff84b"}], "stats": {"total": 61, "additions": 57, "deletions": 4}, "files": [{"sha": "91a9ecf0cf348bc6f30fdd5cfd327aecb3a28e6f", "filename": "src/libcoretest/iter.rs", "status": "modified", "additions": 57, "deletions": 4, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/1479de86885c5c2b35556cc89196a6d2385341c8/src%2Flibcoretest%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1479de86885c5c2b35556cc89196a6d2385341c8/src%2Flibcoretest%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fiter.rs?ref=1479de86885c5c2b35556cc89196a6d2385341c8", "patch": "@@ -120,18 +120,32 @@ fn test_iterator_enumerate() {\n fn test_iterator_peekable() {\n     let xs = vec![0u, 1, 2, 3, 4, 5];\n     let mut it = xs.iter().map(|&x|x).peekable();\n+\n+    assert_eq!(it.len(), 6);\n     assert_eq!(it.peek().unwrap(), &0);\n+    assert_eq!(it.len(), 6);\n     assert_eq!(it.next().unwrap(), 0);\n+    assert_eq!(it.len(), 5);\n     assert_eq!(it.next().unwrap(), 1);\n+    assert_eq!(it.len(), 4);\n     assert_eq!(it.next().unwrap(), 2);\n+    assert_eq!(it.len(), 3);\n     assert_eq!(it.peek().unwrap(), &3);\n+    assert_eq!(it.len(), 3);\n     assert_eq!(it.peek().unwrap(), &3);\n+    assert_eq!(it.len(), 3);\n     assert_eq!(it.next().unwrap(), 3);\n+    assert_eq!(it.len(), 2);\n     assert_eq!(it.next().unwrap(), 4);\n+    assert_eq!(it.len(), 1);\n     assert_eq!(it.peek().unwrap(), &5);\n+    assert_eq!(it.len(), 1);\n     assert_eq!(it.next().unwrap(), 5);\n+    assert_eq!(it.len(), 0);\n     assert!(it.peek().is_none());\n+    assert_eq!(it.len(), 0);\n     assert!(it.next().is_none());\n+    assert_eq!(it.len(), 0);\n }\n \n #[test]\n@@ -166,24 +180,45 @@ fn test_iterator_skip() {\n     let ys = [13, 15, 16, 17, 19, 20, 30];\n     let mut it = xs.iter().skip(5);\n     let mut i = 0;\n-    for &x in it {\n+    while let Some(&x) = it.next() {\n         assert_eq!(x, ys[i]);\n         i += 1;\n+        assert_eq!(it.len(), xs.len()-5-i);\n     }\n     assert_eq!(i, ys.len());\n+    assert_eq!(it.len(), 0);\n }\n \n #[test]\n fn test_iterator_take() {\n-    let xs = [0u, 1, 2, 3, 5, 13, 15, 16, 17, 19];\n-    let ys = [0u, 1, 2, 3, 5];\n+    let xs = [0us, 1, 2, 3, 5, 13, 15, 16, 17, 19];\n+    let ys = [0us, 1, 2, 3, 5];\n     let mut it = xs.iter().take(5);\n     let mut i = 0;\n-    for &x in it {\n+    assert_eq!(it.len(), 5);\n+    while let Some(&x) = it.next() {\n+        assert_eq!(x, ys[i]);\n+        i += 1;\n+        assert_eq!(it.len(), 5-i);\n+    }\n+    assert_eq!(i, ys.len());\n+    assert_eq!(it.len(), 0);\n+}\n+\n+#[test]\n+fn test_iterator_take_short() {\n+    let xs = [0us, 1, 2, 3];\n+    let ys = [0us, 1, 2, 3];\n+    let mut it = xs.iter().take(5);\n+    let mut i = 0;\n+    assert_eq!(it.len(), 4);\n+    while let Some(&x) = it.next() {\n         assert_eq!(x, ys[i]);\n         i += 1;\n+        assert_eq!(it.len(), 4-i);\n     }\n     assert_eq!(i, ys.len());\n+    assert_eq!(it.len(), 0);\n }\n \n #[test]\n@@ -828,6 +863,24 @@ fn test_repeat() {\n     assert_eq!(it.next(), Some(42u));\n }\n \n+#[test]\n+fn test_fuse() {\n+    let mut it = 0us..3;\n+    assert_eq!(it.len(), 3);\n+    assert_eq!(it.next(), Some(0us));\n+    assert_eq!(it.len(), 2);\n+    assert_eq!(it.next(), Some(1us));\n+    assert_eq!(it.len(), 1);\n+    assert_eq!(it.next(), Some(2us));\n+    assert_eq!(it.len(), 0);\n+    assert_eq!(it.next(), None);\n+    assert_eq!(it.len(), 0);\n+    assert_eq!(it.next(), None);\n+    assert_eq!(it.len(), 0);\n+    assert_eq!(it.next(), None);\n+    assert_eq!(it.len(), 0);\n+}\n+\n #[bench]\n fn bench_rposition(b: &mut Bencher) {\n     let it: Vec<uint> = range(0u, 300).collect();"}]}