{"sha": "5429f9440548378c0beb56e890f4b6afe693ae2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MjlmOTQ0MDU0ODM3OGMwYmViNTZlODkwZjRiNmFmZTY5M2FlMmI=", "commit": {"author": {"name": "kjpgit", "email": "kjpgit@users.noreply.github.com", "date": "2015-03-17T16:48:57Z"}, "committer": {"name": "kjpgit", "email": "kjpgit@users.noreply.github.com", "date": "2015-03-17T16:52:14Z"}, "message": "book: improve pointer box borrowing examples\n\nThese two borrowing examples were confusing/misleading.  This changes it\nto more clearly show how you _can_ borrow a box, and also uses & instead\nof &*.", "tree": {"sha": "26cdf2bdf526436fb5247bac4d380a02866fdd40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26cdf2bdf526436fb5247bac4d380a02866fdd40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5429f9440548378c0beb56e890f4b6afe693ae2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5429f9440548378c0beb56e890f4b6afe693ae2b", "html_url": "https://github.com/rust-lang/rust/commit/5429f9440548378c0beb56e890f4b6afe693ae2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5429f9440548378c0beb56e890f4b6afe693ae2b/comments", "author": {"login": "kjpgit", "id": 8010221, "node_id": "MDQ6VXNlcjgwMTAyMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/8010221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjpgit", "html_url": "https://github.com/kjpgit", "followers_url": "https://api.github.com/users/kjpgit/followers", "following_url": "https://api.github.com/users/kjpgit/following{/other_user}", "gists_url": "https://api.github.com/users/kjpgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjpgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjpgit/subscriptions", "organizations_url": "https://api.github.com/users/kjpgit/orgs", "repos_url": "https://api.github.com/users/kjpgit/repos", "events_url": "https://api.github.com/users/kjpgit/events{/privacy}", "received_events_url": "https://api.github.com/users/kjpgit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjpgit", "id": 8010221, "node_id": "MDQ6VXNlcjgwMTAyMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/8010221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjpgit", "html_url": "https://github.com/kjpgit", "followers_url": "https://api.github.com/users/kjpgit/followers", "following_url": "https://api.github.com/users/kjpgit/following{/other_user}", "gists_url": "https://api.github.com/users/kjpgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjpgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjpgit/subscriptions", "organizations_url": "https://api.github.com/users/kjpgit/orgs", "repos_url": "https://api.github.com/users/kjpgit/repos", "events_url": "https://api.github.com/users/kjpgit/events{/privacy}", "received_events_url": "https://api.github.com/users/kjpgit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d6f5100aff24aa97275dc92ade728caac605560", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d6f5100aff24aa97275dc92ade728caac605560", "html_url": "https://github.com/rust-lang/rust/commit/3d6f5100aff24aa97275dc92ade728caac605560"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "f05d2891e70ee33f038af2c67ce747cc90233f22", "filename": "src/doc/trpl/pointers.md", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5429f9440548378c0beb56e890f4b6afe693ae2b/src%2Fdoc%2Ftrpl%2Fpointers.md", "raw_url": "https://github.com/rust-lang/rust/raw/5429f9440548378c0beb56e890f4b6afe693ae2b/src%2Fdoc%2Ftrpl%2Fpointers.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fpointers.md?ref=5429f9440548378c0beb56e890f4b6afe693ae2b", "patch": "@@ -560,38 +560,40 @@ fn main() {\n In this case, Rust knows that `x` is being *borrowed* by the `add_one()`\n function, and since it's only reading the value, allows it.\n \n-We can borrow `x` multiple times, as long as it's not simultaneous:\n+We can borrow `x` as read-only multiple times, even simultaneously:\n \n ```{rust}\n-fn add_one(x: &i32) -> i32 {\n-    *x + 1\n+fn add(x: &i32, y: &i32) -> i32 {\n+    *x + *y\n }\n \n fn main() {\n     let x = Box::new(5);\n \n-    println!(\"{}\", add_one(&*x));\n-    println!(\"{}\", add_one(&*x));\n-    println!(\"{}\", add_one(&*x));\n+    println!(\"{}\", add(&x, &x));\n+    println!(\"{}\", add(&x, &x));\n }\n ```\n \n-Or as long as it's not a mutable borrow. This will error:\n+We can mutably borrow `x` multiple times, but only if x itself is mutable, and\n+it may not be *simultaneously* borrowed: \n \n ```{rust,ignore}\n-fn add_one(x: &mut i32) -> i32 {\n-    *x + 1\n+fn increment(x: &mut i32) {\n+    *x += 1;\n }\n \n fn main() {\n-    let x = Box::new(5);\n+    // If variable x is not \"mut\", this will not compile\n+    let mut x = Box::new(5);\n \n-    println!(\"{}\", add_one(&*x)); // error: cannot borrow immutable dereference\n-                                  // of `&`-pointer as mutable\n+    increment(&mut x);\n+    increment(&mut x);\n+    println!(\"{}\", x);\n }\n ```\n \n-Notice we changed the signature of `add_one()` to request a mutable reference.\n+Notice the signature of `increment()` requests a mutable reference.\n \n ## Best practices\n "}]}