{"sha": "c91ab64048a32861c48d94f31f31b609addfdda7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5MWFiNjQwNDhhMzI4NjFjNDhkOTRmMzFmMzFiNjA5YWRkZmRkYTc=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-24T23:23:15Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-24T23:23:15Z"}, "message": "Add extra arc_wake", "tree": {"sha": "5eb3e628c9fddd58a2f60743a6f3df157f66e280", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5eb3e628c9fddd58a2f60743a6f3df157f66e280"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c91ab64048a32861c48d94f31f31b609addfdda7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c91ab64048a32861c48d94f31f31b609addfdda7", "html_url": "https://github.com/rust-lang/rust/commit/c91ab64048a32861c48d94f31f31b609addfdda7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c91ab64048a32861c48d94f31f31b609addfdda7/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79816bb9e3dd8d52aad69288b0cd4a4afec4b8e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/79816bb9e3dd8d52aad69288b0cd4a4afec4b8e7", "html_url": "https://github.com/rust-lang/rust/commit/79816bb9e3dd8d52aad69288b0cd4a4afec4b8e7"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "c21886f26f467e2176460fc166f95d0d9ee3cc6c", "filename": "src/test/ui/async-await/auxiliary/arc_wake.rs", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/c91ab64048a32861c48d94f31f31b609addfdda7/src%2Ftest%2Fui%2Fasync-await%2Fauxiliary%2Farc_wake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c91ab64048a32861c48d94f31f31b609addfdda7/src%2Ftest%2Fui%2Fasync-await%2Fauxiliary%2Farc_wake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fauxiliary%2Farc_wake.rs?ref=c91ab64048a32861c48d94f31f31b609addfdda7", "patch": "@@ -0,0 +1,64 @@\n+// edition:2018\n+\n+use std::sync::Arc;\n+use std::task::{\n+    Waker, RawWaker, RawWakerVTable,\n+};\n+\n+macro_rules! waker_vtable {\n+    ($ty:ident) => {\n+        &RawWakerVTable::new(\n+            clone_arc_raw::<$ty>,\n+            wake_arc_raw::<$ty>,\n+            wake_by_ref_arc_raw::<$ty>,\n+            drop_arc_raw::<$ty>,\n+        )\n+    };\n+}\n+\n+pub trait ArcWake {\n+    fn wake(self: Arc<Self>);\n+\n+    fn wake_by_ref(arc_self: &Arc<Self>) {\n+        arc_self.clone().wake()\n+    }\n+\n+    fn into_waker(wake: Arc<Self>) -> Waker where Self: Sized\n+    {\n+        let ptr = Arc::into_raw(wake) as *const ();\n+\n+        unsafe {\n+            Waker::from_raw(RawWaker::new(ptr, waker_vtable!(Self)))\n+        }\n+    }\n+}\n+\n+unsafe fn increase_refcount<T: ArcWake>(data: *const ()) {\n+    // Retain Arc by creating a copy\n+    let arc: Arc<T> = Arc::from_raw(data as *const T);\n+    let arc_clone = arc.clone();\n+    // Forget the Arcs again, so that the refcount isn't decrased\n+    let _ = Arc::into_raw(arc);\n+    let _ = Arc::into_raw(arc_clone);\n+}\n+\n+unsafe fn clone_arc_raw<T: ArcWake>(data: *const ()) -> RawWaker {\n+    increase_refcount::<T>(data);\n+    RawWaker::new(data, waker_vtable!(T))\n+}\n+\n+unsafe fn drop_arc_raw<T: ArcWake>(data: *const ()) {\n+    // Drop Arc\n+    let _: Arc<T> = Arc::from_raw(data as *const T);\n+}\n+\n+unsafe fn wake_arc_raw<T: ArcWake>(data: *const ()) {\n+    let arc: Arc<T> = Arc::from_raw(data as *const T);\n+    ArcWake::wake(arc);\n+}\n+\n+unsafe fn wake_by_ref_arc_raw<T: ArcWake>(data: *const ()) {\n+    let arc: Arc<T> = Arc::from_raw(data as *const T);\n+    ArcWake::wake_by_ref(&arc);\n+    let _ = Arc::into_raw(arc);\n+}"}]}