{"sha": "2d6eccdb67aef48d0804cb473536b925f61a7f18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNmVjY2RiNjdhZWY0OGQwODA0Y2I0NzM1MzZiOTI1ZjYxYTdmMTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-13T10:19:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-13T10:19:30Z"}, "message": "Auto merge of #77755 - bugadani:perf-calc-dtor, r=ecstatic-morse\n\nMonomorphize `calculate_dtor` instead of using function pointers\n\nChange `calculate_dtor` to avoid dynamic dispatching. This change allows the empty functions to be optimized away.\n\nBased on the discussion in https://github.com/rust-lang/rust/pull/77754#discussion_r502498970, the performance impact of this change was measured.\n\nPerf run results: https://perf.rust-lang.org/compare.html?start=7bc5839e99411aad9061a632b62075d1346cbb3b&end=ffec759ae9bbc4d6d2235ff40ade6723a85bc7cc", "tree": {"sha": "5478fee9f3a0243bbe4974013ecc73afdf2bc29e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5478fee9f3a0243bbe4974013ecc73afdf2bc29e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d6eccdb67aef48d0804cb473536b925f61a7f18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d6eccdb67aef48d0804cb473536b925f61a7f18", "html_url": "https://github.com/rust-lang/rust/commit/2d6eccdb67aef48d0804cb473536b925f61a7f18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d6eccdb67aef48d0804cb473536b925f61a7f18/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8529c79cce76b47b7b61060db36cf8201c688a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8529c79cce76b47b7b61060db36cf8201c688a3", "html_url": "https://github.com/rust-lang/rust/commit/e8529c79cce76b47b7b61060db36cf8201c688a3"}, {"sha": "0d27b765a6bd4abaa2787d13fbd438d35bcedf8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d27b765a6bd4abaa2787d13fbd438d35bcedf8c", "html_url": "https://github.com/rust-lang/rust/commit/0d27b765a6bd4abaa2787d13fbd438d35bcedf8c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "05b8dad3097e413f52c37020e56525c65c06ceec", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d6eccdb67aef48d0804cb473536b925f61a7f18/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d6eccdb67aef48d0804cb473536b925f61a7f18/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=2d6eccdb67aef48d0804cb473536b925f61a7f18", "patch": "@@ -94,7 +94,7 @@ provide! { <'tcx> tcx, def_id, other, cdata,\n     adt_def => { cdata.get_adt_def(def_id.index, tcx) }\n     adt_destructor => {\n         let _ = cdata;\n-        tcx.calculate_dtor(def_id, &mut |_,_| Ok(()))\n+        tcx.calculate_dtor(def_id, |_,_| Ok(()))\n     }\n     variances_of => { tcx.arena.alloc_from_iter(cdata.get_item_variances(def_id.index)) }\n     associated_item_def_ids => {"}, {"sha": "5ac12dfa993661dea69f2be093b6cc07f98f5961", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d6eccdb67aef48d0804cb473536b925f61a7f18/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d6eccdb67aef48d0804cb473536b925f61a7f18/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=2d6eccdb67aef48d0804cb473536b925f61a7f18", "patch": "@@ -341,7 +341,7 @@ impl<'tcx> TyCtxt<'tcx> {\n     pub fn calculate_dtor(\n         self,\n         adt_did: DefId,\n-        validate: &mut dyn FnMut(Self, DefId) -> Result<(), ErrorReported>,\n+        validate: impl Fn(Self, DefId) -> Result<(), ErrorReported>,\n     ) -> Option<ty::Destructor> {\n         let drop_trait = self.lang_items().drop_trait()?;\n         self.ensure().coherent_trait(drop_trait);"}, {"sha": "fb89b36060a28ace819f2ffa1748cbc471a597a0", "filename": "compiler/rustc_mir/src/transform/check_const_item_mutation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d6eccdb67aef48d0804cb473536b925f61a7f18/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_const_item_mutation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d6eccdb67aef48d0804cb473536b925f61a7f18/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_const_item_mutation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_const_item_mutation.rs?ref=2d6eccdb67aef48d0804cb473536b925f61a7f18", "patch": "@@ -53,7 +53,7 @@ impl<'a, 'tcx> ConstMutationChecker<'a, 'tcx> {\n         //\n         //     #[const_mutation_allowed]\n         //     pub const LOG: Log = Log { msg: \"\" };\n-        match self.tcx.calculate_dtor(def_id, &mut |_, _| Ok(())) {\n+        match self.tcx.calculate_dtor(def_id, |_, _| Ok(())) {\n             Some(_) => None,\n             None => Some(def_id),\n         }"}, {"sha": "1cb6ae21a47bbba05072f23fc61d156e1f409922", "filename": "compiler/rustc_typeck/src/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d6eccdb67aef48d0804cb473536b925f61a7f18/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d6eccdb67aef48d0804cb473536b925f61a7f18/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs?ref=2d6eccdb67aef48d0804cb473536b925f61a7f18", "patch": "@@ -264,7 +264,7 @@ pub fn provide(providers: &mut Providers) {\n }\n \n fn adt_destructor(tcx: TyCtxt<'_>, def_id: DefId) -> Option<ty::Destructor> {\n-    tcx.calculate_dtor(def_id, &mut dropck::check_drop_impl)\n+    tcx.calculate_dtor(def_id, dropck::check_drop_impl)\n }\n \n /// If this `DefId` is a \"primary tables entry\", returns"}]}