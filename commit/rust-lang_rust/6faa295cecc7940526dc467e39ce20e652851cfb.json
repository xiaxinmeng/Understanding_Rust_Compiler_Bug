{"sha": "6faa295cecc7940526dc467e39ce20e652851cfb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmYWEyOTVjZWNjNzk0MDUyNmRjNDY3ZTM5Y2UyMGU2NTI4NTFjZmI=", "commit": {"author": {"name": "Orson Peters", "email": "orsonpeters@gmail.com", "date": "2018-07-09T04:13:58Z"}, "committer": {"name": "Orson Peters", "email": "orsonpeters@gmail.com", "date": "2018-07-09T04:13:58Z"}, "message": "Reimplemented Vec's swap_remove to not rely on pop.", "tree": {"sha": "621625c51535eb0bc877f9902e79b075c14b9b53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/621625c51535eb0bc877f9902e79b075c14b9b53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6faa295cecc7940526dc467e39ce20e652851cfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6faa295cecc7940526dc467e39ce20e652851cfb", "html_url": "https://github.com/rust-lang/rust/commit/6faa295cecc7940526dc467e39ce20e652851cfb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6faa295cecc7940526dc467e39ce20e652851cfb/comments", "author": {"login": "orlp", "id": 202547, "node_id": "MDQ6VXNlcjIwMjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/202547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orlp", "html_url": "https://github.com/orlp", "followers_url": "https://api.github.com/users/orlp/followers", "following_url": "https://api.github.com/users/orlp/following{/other_user}", "gists_url": "https://api.github.com/users/orlp/gists{/gist_id}", "starred_url": "https://api.github.com/users/orlp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orlp/subscriptions", "organizations_url": "https://api.github.com/users/orlp/orgs", "repos_url": "https://api.github.com/users/orlp/repos", "events_url": "https://api.github.com/users/orlp/events{/privacy}", "received_events_url": "https://api.github.com/users/orlp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "orlp", "id": 202547, "node_id": "MDQ6VXNlcjIwMjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/202547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orlp", "html_url": "https://github.com/orlp", "followers_url": "https://api.github.com/users/orlp/followers", "following_url": "https://api.github.com/users/orlp/following{/other_user}", "gists_url": "https://api.github.com/users/orlp/gists{/gist_id}", "starred_url": "https://api.github.com/users/orlp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orlp/subscriptions", "organizations_url": "https://api.github.com/users/orlp/orgs", "repos_url": "https://api.github.com/users/orlp/repos", "events_url": "https://api.github.com/users/orlp/events{/privacy}", "received_events_url": "https://api.github.com/users/orlp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "295768ae8fd07ec129142668bdd8030f9c3856ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/295768ae8fd07ec129142668bdd8030f9c3856ac", "html_url": "https://github.com/rust-lang/rust/commit/295768ae8fd07ec129142668bdd8030f9c3856ac"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "98660fe415dc7d622642671e1e977f61628a7657", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6faa295cecc7940526dc467e39ce20e652851cfb/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6faa295cecc7940526dc467e39ce20e652851cfb/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=6faa295cecc7940526dc467e39ce20e652851cfb", "patch": "@@ -810,11 +810,13 @@ impl<T> Vec<T> {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn swap_remove(&mut self, index: usize) -> T {\n         unsafe {\n-            // We replace self[index] with the last element. Note that this is\n-            // safe even when index == self.len() - 1, as pop() only uses\n-            // ptr::read and leaves the memory at self[index] untouched.\n+            // We replace self[index] with the last element. Note that if the \n+            // bounds check on hole succeeds there must be a last element (which\n+            // can be self[index] itself).\n             let hole: *mut T = &mut self[index];\n-            ptr::replace(hole, self.pop().unwrap())\n+            let last = ptr::read(self.get_unchecked(self.len - 1));\n+            self.len -= 1;\n+            ptr::replace(hole, last)\n         }\n     }\n "}]}