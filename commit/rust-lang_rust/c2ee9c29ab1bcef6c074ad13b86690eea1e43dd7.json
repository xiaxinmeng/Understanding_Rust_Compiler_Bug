{"sha": "c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyZWU5YzI5YWIxYmNlZjZjMDc0YWQxM2I4NjY5MGVlYTFlNDNkZDc=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2018-09-29T13:27:47Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2018-09-29T13:27:47Z"}, "message": "Merge branch 'master' into unnecessary_filter_map", "tree": {"sha": "22e8801f18966280cd5209d666ad58ad0a028823", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22e8801f18966280cd5209d666ad58ad0a028823"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7", "html_url": "https://github.com/rust-lang/rust/commit/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/comments", "author": null, "committer": null, "parents": [{"sha": "06f6b36025bd2b3f322cf1ba39a45fd9702ad260", "url": "https://api.github.com/repos/rust-lang/rust/commits/06f6b36025bd2b3f322cf1ba39a45fd9702ad260", "html_url": "https://github.com/rust-lang/rust/commit/06f6b36025bd2b3f322cf1ba39a45fd9702ad260"}, {"sha": "67d85bc47dbfa6c5d37bdfe09e45b746e31c4804", "url": "https://api.github.com/repos/rust-lang/rust/commits/67d85bc47dbfa6c5d37bdfe09e45b746e31c4804", "html_url": "https://github.com/rust-lang/rust/commit/67d85bc47dbfa6c5d37bdfe09e45b746e31c4804"}], "stats": {"total": 300, "additions": 51, "deletions": 249}, "files": [{"sha": "f1f4fa4e242aafc008a3a74ab9af21100a0eb35a", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7", "patch": "@@ -15,7 +15,7 @@ out\n *.exe\n \n # Generated by Cargo\n-Cargo.lock\n+*Cargo.lock\n /target\n /clippy_lints/target\n /clippy_workspace_tests/target"}, {"sha": "2d94755bae30b6eafa0f537ea0345916514c09b3", "filename": "clippy_dev/Cargo.lock", "status": "removed", "additions": 0, "deletions": 224, "changes": 224, "blob_url": "https://github.com/rust-lang/rust/blob/06f6b36025bd2b3f322cf1ba39a45fd9702ad260/clippy_dev%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/06f6b36025bd2b3f322cf1ba39a45fd9702ad260/clippy_dev%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.lock?ref=06f6b36025bd2b3f322cf1ba39a45fd9702ad260", "patch": "@@ -1,224 +0,0 @@\n-[[package]]\n-name = \"aho-corasick\"\n-version = \"0.6.8\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"memchr 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"ansi_term\"\n-version = \"0.11.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"atty\"\n-version = \"0.2.11\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"bitflags\"\n-version = \"1.0.4\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n-[[package]]\n-name = \"clap\"\n-version = \"2.32.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"strsim 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"clippy_dev\"\n-version = \"0.0.1\"\n-dependencies = [\n- \"clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"regex 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"either\"\n-version = \"1.5.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n-[[package]]\n-name = \"itertools\"\n-version = \"0.7.8\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"lazy_static\"\n-version = \"1.1.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"version_check 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"libc\"\n-version = \"0.2.43\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n-[[package]]\n-name = \"memchr\"\n-version = \"2.0.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"redox_syscall\"\n-version = \"0.1.40\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n-[[package]]\n-name = \"redox_termios\"\n-version = \"0.1.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"regex\"\n-version = \"1.0.4\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"aho-corasick 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"memchr 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"regex-syntax 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"utf8-ranges 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"regex-syntax\"\n-version = \"0.6.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"ucd-util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"strsim\"\n-version = \"0.7.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n-[[package]]\n-name = \"termion\"\n-version = \"1.5.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"textwrap\"\n-version = \"0.10.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"thread_local\"\n-version = \"0.3.6\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"ucd-util\"\n-version = \"0.1.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n-[[package]]\n-name = \"unicode-width\"\n-version = \"0.1.5\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n-[[package]]\n-name = \"utf8-ranges\"\n-version = \"1.0.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n-[[package]]\n-name = \"vec_map\"\n-version = \"0.8.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n-[[package]]\n-name = \"version_check\"\n-version = \"0.1.4\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n-[[package]]\n-name = \"winapi\"\n-version = \"0.3.5\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"winapi-i686-pc-windows-gnu\"\n-version = \"0.4.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n-[[package]]\n-name = \"winapi-x86_64-pc-windows-gnu\"\n-version = \"0.4.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n-[metadata]\n-\"checksum aho-corasick 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"68f56c7353e5a9547cbd76ed90f7bb5ffc3ba09d4ea9bd1d8c06c8b1142eeb5a\"\n-\"checksum ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b\"\n-\"checksum atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9a7d5b8723950951411ee34d271d99dddcc2035a16ab25310ea2c8cfd4369652\"\n-\"checksum bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"228047a76f468627ca71776ecdebd732a3423081fcf5125585bcd7c49886ce12\"\n-\"checksum clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b957d88f4b6a63b9d70d5f454ac8011819c6efa7727858f458ab71c756ce2d3e\"\n-\"checksum either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3be565ca5c557d7f59e7cfcf1844f9e3033650c929c6566f511e8005f205c1d0\"\n-\"checksum itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f58856976b776fedd95533137617a02fb25719f40e7d9b01c7043cd65474f450\"\n-\"checksum lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ca488b89a5657b0a2ecd45b95609b3e848cf1755da332a0da46e2b2b1cb371a7\"\n-\"checksum libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\" = \"76e3a3ef172f1a0b9a9ff0dd1491ae5e6c948b94479a3021819ba7d860c8645d\"\n-\"checksum memchr 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a3b4142ab8738a78c51896f704f83c11df047ff1bda9a92a661aa6361552d93d\"\n-\"checksum redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c214e91d3ecf43e9a4e41e578973adeb14b474f2bee858742d127af75a0112b1\"\n-\"checksum redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76\"\n-\"checksum regex 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"67d0301b0c6804eca7e3c275119d0b01ff3b7ab9258a65709e608a66312a1025\"\n-\"checksum regex-syntax 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"747ba3b235651f6e2f67dfa8bcdcd073ddb7c243cb21c442fc12395dfcac212d\"\n-\"checksum strsim 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bb4f380125926a99e52bc279241539c018323fab05ad6368b56f93d9369ff550\"\n-\"checksum termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"689a3bdfaab439fd92bc87df5c4c78417d3cbe537487274e9b0b2dce76e92096\"\n-\"checksum textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"307686869c93e71f94da64286f9a9524c0f308a9e1c87a583de8e9c9039ad3f6\"\n-\"checksum thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c6b53e329000edc2b34dbe8545fd20e55a333362d0a321909685a19bd28c3f1b\"\n-\"checksum ucd-util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fd2be2d6639d0f8fe6cdda291ad456e23629558d466e2789d2c3e9892bda285d\"\n-\"checksum unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"882386231c45df4700b275c7ff55b6f3698780a650026380e72dabe76fa46526\"\n-\"checksum utf8-ranges 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fd70f467df6810094968e2fce0ee1bd0e87157aceb026a8c083bcf5e25b9efe4\"\n-\"checksum vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"05c78687fb1a80548ae3250346c3db86a80a7cdd77bda190189f2d0a0987c81a\"\n-\"checksum version_check 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7716c242968ee87e5542f8021178248f267f295a5c4803beae8b8b7fd9bc6051\"\n-\"checksum winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"773ef9dcc5f24b7d850d0ff101e542ff24c3b090a9768e03ff889fdef41f00fd\"\n-\"checksum winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n-\"checksum winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\""}, {"sha": "2f91c987cb169f453a0e0fcc6d5887f1b0eaeefc", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7", "patch": "@@ -35,8 +35,8 @@ pub struct Lint {\n }\n \n impl Lint {\n-    pub fn new(name: &str, group: &str, desc: &str, deprecation: Option<&str>, module: &str) -> Lint {\n-        Lint {\n+    pub fn new(name: &str, group: &str, desc: &str, deprecation: Option<&str>, module: &str) -> Self {\n+        Self {\n             name: name.to_lowercase(),\n             group: group.to_string(),\n             desc: NL_ESCAPE_RE.replace(&desc.replace(\"\\\\\\\"\", \"\\\"\"), \"\").to_string(),\n@@ -46,12 +46,12 @@ impl Lint {\n     }\n \n     /// Returns all non-deprecated lints\n-    pub fn active_lints(lints: &[Lint]) -> impl Iterator<Item=&Lint> {\n+    pub fn active_lints(lints: &[Self]) -> impl Iterator<Item=&Self> {\n         lints.iter().filter(|l| l.deprecation.is_none())\n     }\n \n     /// Returns the lints in a HashMap, grouped by the different lint groups\n-    pub fn by_lint_group(lints: &[Lint]) -> HashMap<String, Vec<Lint>> {\n+    pub fn by_lint_group(lints: &[Self]) -> HashMap<String, Vec<Self>> {\n         lints.iter().map(|lint| (lint.group.to_string(), lint.clone())).into_group_map()\n     }\n }"}, {"sha": "0690d6934e51c8130de518a7275adefbfc84369d", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7", "patch": "@@ -123,11 +123,11 @@ impl Constant {\n             (&Constant::Tuple(ref l), &Constant::Tuple(ref r)) | (&Constant::Vec(ref l), &Constant::Vec(ref r)) => l\n                 .iter()\n                 .zip(r.iter())\n-                .map(|(li, ri)| Constant::partial_cmp(tcx, cmp_type, li, ri))\n+                .map(|(li, ri)| Self::partial_cmp(tcx, cmp_type, li, ri))\n                 .find(|r| r.map_or(true, |o| o != Ordering::Equal))\n                 .unwrap_or_else(|| Some(l.len().cmp(&r.len()))),\n             (&Constant::Repeat(ref lv, ref ls), &Constant::Repeat(ref rv, ref rs)) => {\n-                match Constant::partial_cmp(tcx, cmp_type, lv, rv) {\n+                match Self::partial_cmp(tcx, cmp_type, lv, rv) {\n                     Some(Equal) => Some(ls.cmp(rs)),\n                     x => x,\n                 }"}, {"sha": "709cbd277549a651a786baadfd2449bf6360db95", "filename": "clippy_lints/src/duration_subsec.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/clippy_lints%2Fsrc%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/clippy_lints%2Fsrc%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fduration_subsec.rs?ref=c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7", "patch": "@@ -46,9 +46,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for DurationSubsec {\n             if let Some((Constant::Int(divisor), _)) = constant(cx, cx.tables, right);\n             then {\n                 let suggested_fn = match (method_path.ident.as_str().as_ref(), divisor) {\n-                    (\"subsec_micros\", 1_000) => \"subsec_millis\",\n+                    (\"subsec_micros\", 1_000) | (\"subsec_nanos\", 1_000_000) => \"subsec_millis\",\n                     (\"subsec_nanos\", 1_000) => \"subsec_micros\",\n-                    (\"subsec_nanos\", 1_000_000) => \"subsec_millis\",\n                     _ => return,\n                 };\n                 span_lint_and_sugg("}, {"sha": "167259b73538df66bbf5ead10c5372a24133de1c", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7", "patch": "@@ -46,7 +46,7 @@ pub struct Pass {\n \n impl Default for Pass {\n     fn default() -> Self {\n-        Pass { impls: FxHashMap::default() }\n+        Self { impls: FxHashMap::default() }\n     }\n }\n "}, {"sha": "2524152a1202f6617edc4bcfec46f297c15d0b92", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7", "patch": "@@ -1452,22 +1452,33 @@ fn lint_get_unwrap(cx: &LateContext<'_, '_>, expr: &hir::Expr, get_args: &[hir::\n     // Note: we don't want to lint `get_mut().unwrap` for HashMap or BTreeMap,\n     // because they do not implement `IndexMut`\n     let expr_ty = cx.tables.expr_ty(&get_args[0]);\n+    let get_args_str = if get_args.len() > 1 {\n+        snippet(cx, get_args[1].span, \"_\")\n+    } else {\n+        return; // not linting on a .get().unwrap() chain or variant\n+    };\n+    let needs_ref;\n     let caller_type = if derefs_to_slice(cx, &get_args[0], expr_ty).is_some() {\n+        needs_ref = get_args_str.parse::<usize>().is_ok();\n         \"slice\"\n     } else if match_type(cx, expr_ty, &paths::VEC) {\n+        needs_ref = get_args_str.parse::<usize>().is_ok();\n         \"Vec\"\n     } else if match_type(cx, expr_ty, &paths::VEC_DEQUE) {\n+        needs_ref = get_args_str.parse::<usize>().is_ok();\n         \"VecDeque\"\n     } else if !is_mut && match_type(cx, expr_ty, &paths::HASHMAP) {\n+        needs_ref = true;\n         \"HashMap\"\n     } else if !is_mut && match_type(cx, expr_ty, &paths::BTREEMAP) {\n+        needs_ref = true;\n         \"BTreeMap\"\n     } else {\n         return; // caller is not a type that we want to lint\n     };\n \n     let mut_str = if is_mut { \"_mut\" } else { \"\" };\n-    let borrow_str = if is_mut { \"&mut \" } else { \"&\" };\n+    let borrow_str = if !needs_ref { \"\" } else if is_mut { \"&mut \" } else { \"&\" };\n     span_lint_and_sugg(\n         cx,\n         GET_UNWRAP,\n@@ -1482,7 +1493,7 @@ fn lint_get_unwrap(cx: &LateContext<'_, '_>, expr: &hir::Expr, get_args: &[hir::\n             \"{}{}[{}]\",\n             borrow_str,\n             snippet(cx, get_args[0].span, \"_\"),\n-            snippet(cx, get_args[1].span, \"_\")\n+            get_args_str\n         ),\n     );\n }"}, {"sha": "9c10a929d6f1de9c0edbcb5dbfb40ac097547826", "filename": "clippy_lints/src/multiple_crate_versions.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs?ref=c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7", "patch": "@@ -41,18 +41,17 @@ impl LintPass for Pass {\n \n impl EarlyLintPass for Pass {\n     fn check_crate(&mut self, cx: &EarlyContext<'_>, krate: &Crate) {\n-        let metadata = match cargo_metadata::metadata_deps(None, true) {\n-            Ok(metadata) => metadata,\n-            Err(_) => {\n-                span_lint(\n-                    cx,\n-                    MULTIPLE_CRATE_VERSIONS,\n-                    krate.span,\n-                    \"could not read cargo metadata\"\n-                );\n+        let metadata = if let Ok(metadata) = cargo_metadata::metadata_deps(None, true) {\n+            metadata\n+        } else {\n+            span_lint(\n+                cx,\n+                MULTIPLE_CRATE_VERSIONS,\n+                krate.span,\n+                \"could not read cargo metadata\"\n+            );\n \n-                return;\n-            }\n+            return;\n         };\n \n         let mut packages = metadata.packages;"}, {"sha": "d79a7743e0f82cdb6d48a4fe17062f3e942591d7", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7", "patch": "@@ -148,7 +148,7 @@ define_Conf! {\n }\n \n impl Default for Conf {\n-    fn default() -> Conf {\n+    fn default() -> Self {\n         toml::from_str(\"\").expect(\"we never error on empty config files\")\n     }\n }"}, {"sha": "141233e0d8ad65d02c19a3653e28df0aa20619be", "filename": "tests/ui/get_unwrap.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/tests%2Fui%2Fget_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/tests%2Fui%2Fget_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fget_unwrap.rs?ref=c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7", "patch": "@@ -43,4 +43,9 @@ fn main() {\n         *some_btreemap.get_mut(&1).unwrap() = 'b';\n         *false_positive.get_mut(0).unwrap() = 1;\n     }\n+\n+    { // Test `get().unwrap().foo()` and `get_mut().unwrap().bar()`\n+        let _ = some_vec.get(0..1).unwrap().to_vec();\n+        let _ = some_vec.get_mut(0..1).unwrap().to_vec();\n+    }\n }"}, {"sha": "669903da190c965c04c638432073b38af09f094b", "filename": "tests/ui/get_unwrap.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/tests%2Fui%2Fget_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7/tests%2Fui%2Fget_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fget_unwrap.stderr?ref=c2ee9c29ab1bcef6c074ad13b86690eea1e43dd7", "patch": "@@ -60,5 +60,17 @@ error: called `.get_mut().unwrap()` on a VecDeque. Using `[]` is more clear and\n 40 |         *some_vecdeque.get_mut(0).unwrap() = 1;\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut some_vecdeque[0]`\n \n-error: aborting due to 10 previous errors\n+error: called `.get().unwrap()` on a Vec. Using `[]` is more clear and more concise\n+  --> $DIR/get_unwrap.rs:48:17\n+   |\n+48 |         let _ = some_vec.get(0..1).unwrap().to_vec();\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `some_vec[0..1]`\n+\n+error: called `.get_mut().unwrap()` on a Vec. Using `[]` is more clear and more concise\n+  --> $DIR/get_unwrap.rs:49:17\n+   |\n+49 |         let _ = some_vec.get_mut(0..1).unwrap().to_vec();\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `some_vec[0..1]`\n+\n+error: aborting due to 12 previous errors\n "}]}