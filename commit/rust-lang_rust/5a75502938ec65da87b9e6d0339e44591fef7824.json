{"sha": "5a75502938ec65da87b9e6d0339e44591fef7824", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhNzU1MDI5MzhlYzY1ZGE4N2I5ZTZkMDMzOWU0NDU5MWZlZjc4MjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-01T18:21:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-01T18:21:57Z"}, "message": "Auto merge of #4870 - lzutao:check-macro-missing_inline_in_public_items, r=flip1995\n\naccount for external macro in MISSING_INLINE_IN_PUBLIC_ITEMS lint\n\nCloses #4861\nchangelog: Fix FP (external macro) in [`missing_inline_in_public_items`] lint", "tree": {"sha": "dc1b6dc0bbcc5f6f8a0738c182647196bc409990", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc1b6dc0bbcc5f6f8a0738c182647196bc409990"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a75502938ec65da87b9e6d0339e44591fef7824", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a75502938ec65da87b9e6d0339e44591fef7824", "html_url": "https://github.com/rust-lang/rust/commit/5a75502938ec65da87b9e6d0339e44591fef7824", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a75502938ec65da87b9e6d0339e44591fef7824/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e47ae20b5b480d09c7d6abced3e16478b0684190", "url": "https://api.github.com/repos/rust-lang/rust/commits/e47ae20b5b480d09c7d6abced3e16478b0684190", "html_url": "https://github.com/rust-lang/rust/commit/e47ae20b5b480d09c7d6abced3e16478b0684190"}, {"sha": "5488672d1f1ae02cc9910ecd67485affce996bc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5488672d1f1ae02cc9910ecd67485affce996bc8", "html_url": "https://github.com/rust-lang/rust/commit/5488672d1f1ae02cc9910ecd67485affce996bc8"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "927ead77a24f12aaece9b48c233592ac4ddb4137", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5a75502938ec65da87b9e6d0339e44591fef7824/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a75502938ec65da87b9e6d0339e44591fef7824/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=5a75502938ec65da87b9e6d0339e44591fef7824", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::span_lint;\n use rustc::hir;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{self, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::{declare_lint_pass, declare_tool_lint};\n use syntax::ast;\n use syntax::source_map::Span;\n@@ -81,7 +81,7 @@ declare_lint_pass!(MissingInline => [MISSING_INLINE_IN_PUBLIC_ITEMS]);\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingInline {\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, it: &'tcx hir::Item) {\n-        if is_executable(cx) {\n+        if lint::in_external_macro(cx.sess(), it.span) || is_executable(cx) {\n             return;\n         }\n \n@@ -131,7 +131,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingInline {\n \n     fn check_impl_item(&mut self, cx: &LateContext<'a, 'tcx>, impl_item: &'tcx hir::ImplItem) {\n         use rustc::ty::{ImplContainer, TraitContainer};\n-        if is_executable(cx) {\n+        if lint::in_external_macro(cx.sess(), impl_item.span) || is_executable(cx) {\n             return;\n         }\n "}, {"sha": "b73b24b8e0a3b9b50fc6eaaf7b3e68d95168d324", "filename": "tests/ui/missing_inline.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a75502938ec65da87b9e6d0339e44591fef7824/tests%2Fui%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a75502938ec65da87b9e6d0339e44591fef7824/tests%2Fui%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_inline.rs?ref=5a75502938ec65da87b9e6d0339e44591fef7824", "patch": "@@ -60,3 +60,7 @@ impl Foo {\n impl PubFoo {\n     pub fn PubFooImpl() {} // missing #[inline]\n }\n+\n+// do not lint this since users cannot control the external code\n+#[derive(Debug)]\n+pub struct S {}"}]}