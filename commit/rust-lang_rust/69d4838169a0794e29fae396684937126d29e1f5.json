{"sha": "69d4838169a0794e29fae396684937126d29e1f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5ZDQ4MzgxNjlhMDc5NGUyOWZhZTM5NjY4NDkzNzEyNmQyOWUxZjU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-17T23:02:43Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-17T23:08:45Z"}, "message": "Stop parsing old-style vec types", "tree": {"sha": "84a87850b13b76b74fef87edeb3f163e50eaf70d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84a87850b13b76b74fef87edeb3f163e50eaf70d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69d4838169a0794e29fae396684937126d29e1f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69d4838169a0794e29fae396684937126d29e1f5", "html_url": "https://github.com/rust-lang/rust/commit/69d4838169a0794e29fae396684937126d29e1f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69d4838169a0794e29fae396684937126d29e1f5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df10df821b734b51dc7d434db979156a180a84e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/df10df821b734b51dc7d434db979156a180a84e1", "html_url": "https://github.com/rust-lang/rust/commit/df10df821b734b51dc7d434db979156a180a84e1"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "4ed645313199f40020351f2d483185db0b17ba73", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/69d4838169a0794e29fae396684937126d29e1f5/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69d4838169a0794e29fae396684937126d29e1f5/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=69d4838169a0794e29fae396684937126d29e1f5", "patch": "@@ -568,11 +568,6 @@ fn parse_ty(p: &parser, colons_before_params: bool) -> @ast::ty {\n                 ast::ty_constr(@spanned(lo, hi, t),\n                                parse_type_constraints(p));\n         }\n-    } else if (eat_word(p, \"vec\")) {\n-        expect(p, token::LT);\n-        t = ast::ty_vec(parse_mt(p));\n-        hi = p.get_hi_pos();\n-        expect_gt(p);\n     } else if (p.peek() == token::LBRACKET) {\n         expect(p, token::LBRACKET);\n         t = ast::ty_ivec(parse_mt(p));"}]}