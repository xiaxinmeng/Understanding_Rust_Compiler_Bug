{"sha": "53037a7c0982a91549afba717517e2b13df7a232", "node_id": "C_kwDOAAsO6NoAKDUzMDM3YTdjMDk4MmE5MTU0OWFmYmE3MTc1MTdlMmIxM2RmN2EyMzI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-06T21:13:31Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-20T03:33:15Z"}, "message": "allow NOP-casts with mismatching vtables", "tree": {"sha": "0fedde99e1434a54d8204fa6e2af167adeade9c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fedde99e1434a54d8204fa6e2af167adeade9c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53037a7c0982a91549afba717517e2b13df7a232", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53037a7c0982a91549afba717517e2b13df7a232", "html_url": "https://github.com/rust-lang/rust/commit/53037a7c0982a91549afba717517e2b13df7a232", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53037a7c0982a91549afba717517e2b13df7a232/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09118da54fa6498eef98533e2156d24958d4a79f", "url": "https://api.github.com/repos/rust-lang/rust/commits/09118da54fa6498eef98533e2156d24958d4a79f", "html_url": "https://github.com/rust-lang/rust/commit/09118da54fa6498eef98533e2156d24958d4a79f"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "648ac07c43ec98cebb115e3a585c6ae9b962c2c3", "filename": "tests/fail/dyn-upcast-trait-mismatch.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/53037a7c0982a91549afba717517e2b13df7a232/tests%2Ffail%2Fdyn-upcast-trait-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53037a7c0982a91549afba717517e2b13df7a232/tests%2Ffail%2Fdyn-upcast-trait-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdyn-upcast-trait-mismatch.rs?ref=53037a7c0982a91549afba717517e2b13df7a232", "patch": "@@ -51,8 +51,7 @@ impl Baz for i32 {\n \n fn main() {\n     let baz: &dyn Baz = &1;\n-    // We already fail on the implicit upcast inserted here.\n     let baz_fake: &dyn Bar = unsafe { std::mem::transmute(baz) };\n-    //~^ERROR: upcast on a pointer whose vtable does not match its type\n     let _err = baz_fake as &dyn Foo;\n+    //~^ERROR: upcast on a pointer whose vtable does not match its type\n }"}, {"sha": "cdd1421a660c9024d9012df9dc25c93d88a415cd", "filename": "tests/fail/dyn-upcast-trait-mismatch.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/53037a7c0982a91549afba717517e2b13df7a232/tests%2Ffail%2Fdyn-upcast-trait-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53037a7c0982a91549afba717517e2b13df7a232/tests%2Ffail%2Fdyn-upcast-trait-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdyn-upcast-trait-mismatch.stderr?ref=53037a7c0982a91549afba717517e2b13df7a232", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: upcast on a pointer whose vtable does not match its type\n   --> $DIR/dyn-upcast-trait-mismatch.rs:LL:CC\n    |\n-LL |     let baz_fake: &dyn Bar = unsafe { std::mem::transmute(baz) };\n-   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^ upcast on a pointer whose vtable does not match its type\n+LL |     let _err = baz_fake as &dyn Foo;\n+   |                ^^^^^^^^ upcast on a pointer whose vtable does not match its type\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "8432012a9ba52f99263d68b2b046369e8a7d12f8", "filename": "tests/pass/dyn-upcast.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/53037a7c0982a91549afba717517e2b13df7a232/tests%2Fpass%2Fdyn-upcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53037a7c0982a91549afba717517e2b13df7a232/tests%2Fpass%2Fdyn-upcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fdyn-upcast.rs?ref=53037a7c0982a91549afba717517e2b13df7a232", "patch": "@@ -6,6 +6,15 @@ fn main() {\n     diamond();\n     struct_();\n     replace_vptr();\n+    vtable_mismatch_nop_cast();\n+}\n+\n+fn vtable_mismatch_nop_cast() {\n+    let ptr: &dyn std::fmt::Display = &0;\n+    // Even though the vtable is for the wrong trait, this cast doesn't actually change the needed\n+    // vtable so it should still be allowed.\n+    let ptr: *const (dyn std::fmt::Debug + Send + Sync) = unsafe { std::mem::transmute(ptr) };\n+    let _ptr2 = ptr as *const dyn std::fmt::Debug;\n }\n \n fn basic() {"}]}