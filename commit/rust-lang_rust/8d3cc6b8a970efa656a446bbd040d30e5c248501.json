{"sha": "8d3cc6b8a970efa656a446bbd040d30e5c248501", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkM2NjNmI4YTk3MGVmYTY1NmE0NDZiYmQwNDBkMzBlNWMyNDg1MDE=", "commit": {"author": {"name": "xiongmao86", "email": "xiongmao86dev@sina.com", "date": "2020-01-07T08:33:33Z"}, "committer": {"name": "xiongmao86", "email": "xiongmao86dev@sina.com", "date": "2020-01-12T11:54:17Z"}, "message": "Change lint message.", "tree": {"sha": "338870aac164535f3202d64482837a0852cea514", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/338870aac164535f3202d64482837a0852cea514"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d3cc6b8a970efa656a446bbd040d30e5c248501", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d3cc6b8a970efa656a446bbd040d30e5c248501", "html_url": "https://github.com/rust-lang/rust/commit/8d3cc6b8a970efa656a446bbd040d30e5c248501", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d3cc6b8a970efa656a446bbd040d30e5c248501/comments", "author": {"login": "xiongmao86", "id": 1770218, "node_id": "MDQ6VXNlcjE3NzAyMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1770218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiongmao86", "html_url": "https://github.com/xiongmao86", "followers_url": "https://api.github.com/users/xiongmao86/followers", "following_url": "https://api.github.com/users/xiongmao86/following{/other_user}", "gists_url": "https://api.github.com/users/xiongmao86/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiongmao86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiongmao86/subscriptions", "organizations_url": "https://api.github.com/users/xiongmao86/orgs", "repos_url": "https://api.github.com/users/xiongmao86/repos", "events_url": "https://api.github.com/users/xiongmao86/events{/privacy}", "received_events_url": "https://api.github.com/users/xiongmao86/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xiongmao86", "id": 1770218, "node_id": "MDQ6VXNlcjE3NzAyMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1770218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiongmao86", "html_url": "https://github.com/xiongmao86", "followers_url": "https://api.github.com/users/xiongmao86/followers", "following_url": "https://api.github.com/users/xiongmao86/following{/other_user}", "gists_url": "https://api.github.com/users/xiongmao86/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiongmao86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiongmao86/subscriptions", "organizations_url": "https://api.github.com/users/xiongmao86/orgs", "repos_url": "https://api.github.com/users/xiongmao86/repos", "events_url": "https://api.github.com/users/xiongmao86/events{/privacy}", "received_events_url": "https://api.github.com/users/xiongmao86/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2909bc372fb51fe21be59aca3950eca9ad1514d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/2909bc372fb51fe21be59aca3950eca9ad1514d8", "html_url": "https://github.com/rust-lang/rust/commit/2909bc372fb51fe21be59aca3950eca9ad1514d8"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "2798f6f74abbc92761461d64c74470ba6df0a9c9", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8d3cc6b8a970efa656a446bbd040d30e5c248501/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d3cc6b8a970efa656a446bbd040d30e5c248501/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=8d3cc6b8a970efa656a446bbd040d30e5c248501", "patch": "@@ -3268,18 +3268,27 @@ fn lint_filetype_is_file(cx: &LateContext<'_, '_>, expr: &hir::Expr<'_>, args: &\n         return;\n     }\n \n+    let span: &hir::Expr<'_>;\n+    let verb: &str;\n+    let lint_unary: &str;\n+    let help_unary: &str;\n     if_chain! {\n         if let Some(parent) = get_parent_expr(cx, expr);\n         if let hir::ExprKind::Unary(op, _) = parent.kind;\n         if op == hir::UnNot;\n         then {\n-            let lint_msg = \"`!FileType::is_file()` does not deny all readable file types\";\n-            let help_msg = \"use `FileType::is_dir()` instead\";\n-            span_help_and_lint(cx, FILETYPE_IS_FILE, parent.span, lint_msg, help_msg);\n+            lint_unary = \"!\";\n+            verb = \"denys\";\n+            help_unary = \"\";\n+            span = parent;\n         } else {\n-            let lint_msg = \"`FileType::is_file()` does not cover all readable file types\";\n-            let help_msg = \"use `!FileType::is_dir()` instead\";\n-            span_help_and_lint(cx, FILETYPE_IS_FILE, expr.span, lint_msg, help_msg);\n+            lint_unary = \"\";\n+            verb = \"covers\";\n+            help_unary = \"!\";\n+            span = expr;\n         }\n     }\n+    let lint_msg = format!(\"`{}FileType::is_file()` only {} regular files\", lint_unary, verb);\n+    let help_msg = format!(\"use `{}FileType::is_dir()` instead\", help_unary);\n+    span_help_and_lint(cx, FILETYPE_IS_FILE, span.span, &lint_msg, &help_msg);\n }"}, {"sha": "434c1d7b269d38140ec52504806cafe7d17e022a", "filename": "tests/ui/filetype_is_file.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8d3cc6b8a970efa656a446bbd040d30e5c248501/tests%2Fui%2Ffiletype_is_file.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d3cc6b8a970efa656a446bbd040d30e5c248501/tests%2Fui%2Ffiletype_is_file.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffiletype_is_file.stderr?ref=8d3cc6b8a970efa656a446bbd040d30e5c248501", "patch": "@@ -1,4 +1,4 @@\n-error: `FileType::is_file()` does not cover all readable file types\n+error: `FileType::is_file()` only covers regular files\n   --> $DIR/filetype_is_file.rs:8:8\n    |\n LL |     if fs::metadata(\"foo.txt\")?.file_type().is_file() {\n@@ -7,15 +7,15 @@ LL |     if fs::metadata(\"foo.txt\")?.file_type().is_file() {\n    = note: `-D clippy::filetype-is-file` implied by `-D warnings`\n    = help: use `!FileType::is_dir()` instead\n \n-error: `!FileType::is_file()` does not deny all readable file types\n+error: `!FileType::is_file()` only denys regular files\n   --> $DIR/filetype_is_file.rs:13:8\n    |\n LL |     if !fs::metadata(\"foo.txt\")?.file_type().is_file() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use `FileType::is_dir()` instead\n \n-error: `FileType::is_file()` does not cover all readable file types\n+error: `FileType::is_file()` only covers regular files\n   --> $DIR/filetype_is_file.rs:18:9\n    |\n LL |     if !fs::metadata(\"foo.txt\")?.file_type().is_file().bitor(true) {"}]}