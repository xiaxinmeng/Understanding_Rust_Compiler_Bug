{"sha": "c850470f73b21d55842801f69e83546d7dd727a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NTA0NzBmNzNiMjFkNTU4NDI4MDFmNjllODM1NDZkN2RkNzI3YTc=", "commit": {"author": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2016-07-14T17:32:53Z"}, "committer": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2016-07-15T17:37:15Z"}, "message": "mk: If local-rust is the same as the current version, then force a local-rebuild", "tree": {"sha": "fb37aa680d98d326fda997bff0651a2fb89724df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb37aa680d98d326fda997bff0651a2fb89724df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c850470f73b21d55842801f69e83546d7dd727a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c850470f73b21d55842801f69e83546d7dd727a7", "html_url": "https://github.com/rust-lang/rust/commit/c850470f73b21d55842801f69e83546d7dd727a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c850470f73b21d55842801f69e83546d7dd727a7/comments", "author": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65fb7be72820f9be7ee7bb8e626e1d0fbb03968d", "url": "https://api.github.com/repos/rust-lang/rust/commits/65fb7be72820f9be7ee7bb8e626e1d0fbb03968d", "html_url": "https://github.com/rust-lang/rust/commit/65fb7be72820f9be7ee7bb8e626e1d0fbb03968d"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "fd009a757a4b70dee62e84b4d8d391ec503d6344", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c850470f73b21d55842801f69e83546d7dd727a7/configure", "raw_url": "https://github.com/rust-lang/rust/raw/c850470f73b21d55842801f69e83546d7dd727a7/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=c850470f73b21d55842801f69e83546d7dd727a7", "patch": "@@ -600,7 +600,7 @@ opt debug-assertions 0 \"build with debugging assertions\"\n opt fast-make 0 \"use .gitmodules as timestamp for submodule deps\"\n opt ccache 0 \"invoke gcc/clang via ccache to reuse object files between builds\"\n opt local-rust 0 \"use an installed rustc rather than downloading a snapshot\"\n-opt local-rebuild 0 \"use an installed rustc matching the current version, for rebuilds\"\n+opt local-rebuild 0 \"assume local-rust matches the current version, for rebuilds; implies local-rust, and is implied if local-rust already matches the current version\"\n opt llvm-static-stdcpp 0 \"statically link to libstdc++ for LLVM\"\n opt rpath 1 \"build rpaths into rustc itself\"\n opt stage0-landing-pads 1 \"enable landing pads during bootstrap with stage0\""}, {"sha": "fd12bf26dfc72fdca793e5efa4ae459c24320819", "filename": "mk/main.mk", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c850470f73b21d55842801f69e83546d7dd727a7/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/c850470f73b21d55842801f69e83546d7dd727a7/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=c850470f73b21d55842801f69e83546d7dd727a7", "patch": "@@ -64,12 +64,21 @@ CFG_FILENAME_EXTRA=$(shell printf '%s' $(CFG_RELEASE)$(CFG_EXTRA_FILENAME) | $(C\n # from users enabling unstable features on the stable compiler.\n CFG_BOOTSTRAP_KEY=$(CFG_FILENAME_EXTRA)\n \n+# If local-rust is the same as the current version, then force a local-rebuild\n+ifdef CFG_ENABLE_LOCAL_RUST\n+ifeq ($(CFG_RELEASE),\\\n+      $(shell $(S)src/etc/local_stage0.sh --print-rustc-release $(CFG_LOCAL_RUST_ROOT)))\n+    CFG_INFO := $(info cfg: auto-detected local-rebuild $(CFG_RELEASE))\n+    CFG_ENABLE_LOCAL_REBUILD = 1\n+endif\n+endif\n+\n # The stage0 compiler needs to use the previous key recorded in src/stage0.txt,\n # except for local-rebuild when it just uses the same current key.\n ifdef CFG_ENABLE_LOCAL_REBUILD\n CFG_BOOTSTRAP_KEY_STAGE0=$(CFG_BOOTSTRAP_KEY)\n else\n-CFG_BOOTSTRAP_KEY_STAGE0=$(shell grep 'rustc_key' $(S)src/stage0.txt | sed 's/rustc_key: '//)\n+CFG_BOOTSTRAP_KEY_STAGE0=$(shell sed -ne 's/^rustc_key: //p' $(S)src/stage0.txt)\n endif\n \n # The name of the package to use for creating tarballs, installers etc."}, {"sha": "8a2bf2ebbde649817af12b2eb753fa2559939a3a", "filename": "mk/stage0.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c850470f73b21d55842801f69e83546d7dd727a7/mk%2Fstage0.mk", "raw_url": "https://github.com/rust-lang/rust/raw/c850470f73b21d55842801f69e83546d7dd727a7/mk%2Fstage0.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage0.mk?ref=c850470f73b21d55842801f69e83546d7dd727a7", "patch": "@@ -11,6 +11,7 @@ endif\n \n $(SNAPSHOT_RUSTC_POST_CLEANUP): \\\n \t\t$(S)src/stage0.txt \\\n+\t\t$(S)src/etc/local_stage0.sh \\\n \t\t$(S)src/etc/get-stage0.py $(MKFILE_DEPS) \\\n \t\t| $(HBIN0_H_$(CFG_BUILD))/\n \t@$(call E, fetch: $@)"}, {"sha": "354be34b6a2950efe920bd2e44e57efe77e2bf74", "filename": "src/etc/local_stage0.sh", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c850470f73b21d55842801f69e83546d7dd727a7/src%2Fetc%2Flocal_stage0.sh", "raw_url": "https://github.com/rust-lang/rust/raw/c850470f73b21d55842801f69e83546d7dd727a7/src%2Fetc%2Flocal_stage0.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flocal_stage0.sh?ref=c850470f73b21d55842801f69e83546d7dd727a7", "patch": "@@ -49,6 +49,13 @@ if [ -z $TARG_DIR ]; then\n     exit 1\n fi\n \n+case \"$TARG_DIR\" in\n+--print-rustc-release)\n+  # not actually copying to TARG_DIR, just print the local rustc version and exit\n+  ${PREFIX}/bin/rustc${BIN_SUF} --version --verbose | sed -ne 's/^release: //p'\n+;;\n+*)\n+\n cp ${PREFIX}/bin/rustc${BIN_SUF} ${TARG_DIR}/stage0/bin/\n cp ${PREFIX}/${LIB_DIR}/${RUSTLIBDIR}/${TARG_DIR}/${LIB_DIR}/* ${TARG_DIR}/stage0/${LIB_DIR}/\n cp ${PREFIX}/${LIB_DIR}/${LIB_PREFIX}extra*${LIB_SUF} ${TARG_DIR}/stage0/${LIB_DIR}/\n@@ -66,3 +73,5 @@ cp ${PREFIX}/${LIB_DIR}/${LIB_PREFIX}term*${LIB_SUF} ${TARG_DIR}/stage0/${LIB_DI\n \n # do not fail if one of the above fails, as all we need is a working rustc!\n exit 0\n+\n+esac"}]}