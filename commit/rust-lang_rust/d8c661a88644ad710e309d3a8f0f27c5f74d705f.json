{"sha": "d8c661a88644ad710e309d3a8f0f27c5f74d705f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YzY2MWE4ODY0NGFkNzEwZTMwOWQzYThmMGYyN2M1Zjc0ZDcwNWY=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-01-21T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-01-21T00:00:00Z"}, "message": "Mark __msan_keep_going as an exported symbol for LTO", "tree": {"sha": "c43a6cdfdd122500dbf4d676a1abc2c4145fdd60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c43a6cdfdd122500dbf4d676a1abc2c4145fdd60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8c661a88644ad710e309d3a8f0f27c5f74d705f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8c661a88644ad710e309d3a8f0f27c5f74d705f", "html_url": "https://github.com/rust-lang/rust/commit/d8c661a88644ad710e309d3a8f0f27c5f74d705f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8c661a88644ad710e309d3a8f0f27c5f74d705f/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c0845c6ccfdee7fb255756918a22101376efa7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c0845c6ccfdee7fb255756918a22101376efa7e", "html_url": "https://github.com/rust-lang/rust/commit/2c0845c6ccfdee7fb255756918a22101376efa7e"}], "stats": {"total": 64, "additions": 42, "deletions": 22}, "files": [{"sha": "d680e14bbbd5b9d884d7aa4bf6df547b8bb7d6f3", "filename": "src/librustc_codegen_ssa/back/symbol_export.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d8c661a88644ad710e309d3a8f0f27c5f74d705f/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8c661a88644ad710e309d3a8f0f27c5f74d705f/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs?ref=d8c661a88644ad710e309d3a8f0f27c5f74d705f", "patch": "@@ -208,8 +208,12 @@ fn exported_symbols_provider_local(\n \n     if let Some(Sanitizer::Memory) = tcx.sess.opts.debugging_opts.sanitizer {\n         // Similar to profiling, preserve weak msan symbol during LTO.\n-        let exported_symbol = ExportedSymbol::NoDefId(SymbolName::new(\"__msan_track_origins\"));\n-        symbols.push((exported_symbol, SymbolExportLevel::C));\n+        const MSAN_WEAK_SYMBOLS: [&str; 2] = [\"__msan_track_origins\", \"__msan_keep_going\"];\n+\n+        symbols.extend(MSAN_WEAK_SYMBOLS.iter().map(|sym| {\n+            let exported_symbol = ExportedSymbol::NoDefId(SymbolName::new(sym));\n+            (exported_symbol, SymbolExportLevel::C)\n+        }));\n     }\n \n     if tcx.sess.crate_types.borrow().contains(&config::CrateType::Dylib) {"}, {"sha": "9a583725b0bf0c42d81e353341a964cacfbcd101", "filename": "src/test/codegen/sanitizer-recover.rs", "status": "modified", "additions": 36, "deletions": 20, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/d8c661a88644ad710e309d3a8f0f27c5f74d705f/src%2Ftest%2Fcodegen%2Fsanitizer-recover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8c661a88644ad710e309d3a8f0f27c5f74d705f/src%2Ftest%2Fcodegen%2Fsanitizer-recover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fsanitizer-recover.rs?ref=d8c661a88644ad710e309d3a8f0f27c5f74d705f", "patch": "@@ -4,31 +4,47 @@\n // needs-sanitizer-support\n // only-linux\n // only-x86_64\n-// revisions:ASAN ASAN-RECOVER MSAN MSAN-RECOVER\n+// revisions:ASAN ASAN-RECOVER MSAN MSAN-RECOVER MSAN-RECOVER-LTO\n+// no-prefer-dynamic\n //\n-//[ASAN]         compile-flags: -Zsanitizer=address\n-//[ASAN-RECOVER] compile-flags: -Zsanitizer=address -Zsanitizer-recover=address\n-//[MSAN]         compile-flags: -Zsanitizer=memory\n-//[MSAN-RECOVER] compile-flags: -Zsanitizer=memory  -Zsanitizer-recover=memory\n-\n-#![crate_type=\"lib\"]\n+//[ASAN]             compile-flags: -Zsanitizer=address\n+//[ASAN-RECOVER]     compile-flags: -Zsanitizer=address -Zsanitizer-recover=address\n+//[MSAN]             compile-flags: -Zsanitizer=memory\n+//[MSAN-RECOVER]     compile-flags: -Zsanitizer=memory  -Zsanitizer-recover=memory\n+//[MSAN-RECOVER-LTO] compile-flags: -Zsanitizer=memory  -Zsanitizer-recover=memory -C lto=fat\n+//\n+// MSAN-NOT:         @__msan_keep_going\n+// MSAN-RECOVER:     @__msan_keep_going = weak_odr {{.*}} constant i32 1\n+// MSAN-RECOVER-LTO: @__msan_keep_going = weak_odr {{.*}} constant i32 1\n \n-// ASAN-LABEL:         define i32 @penguin(\n+// ASAN-LABEL: define i32 @penguin(\n+// ASAN:         call void @__asan_report_load4(i64 %0)\n+// ASAN:         unreachable\n+// ASAN:       }\n+//\n // ASAN-RECOVER-LABEL: define i32 @penguin(\n-// MSAN-LABEL:         define i32 @penguin(\n+// ASAN-RECOVER:         call void @__asan_report_load4_noabort(\n+// ASAN-RECOVER-NOT:     unreachable\n+// ASAN:               }\n+//\n+// MSAN-LABEL: define i32 @penguin(\n+// MSAN:         call void @__msan_warning_noreturn()\n+// MSAN:         unreachable\n+// MSAN:       }\n+//\n // MSAN-RECOVER-LABEL: define i32 @penguin(\n+// MSAN-RECOVER:         call void @__msan_warning()\n+// MSAN-RECOVER-NOT:     unreachable\n+// MSAN-RECOVER:       }\n+//\n+// MSAN-RECOVER-LTO-LABEL: define i32 @penguin(\n+// MSAN-RECOVER-LTO:          call void @__msan_warning()\n+// MSAN-RECOVER-LTO-NOT:      unreachable\n+// MSAN-RECOVER-LTO:       }\n+//\n #[no_mangle]\n pub fn penguin(p: &mut i32) -> i32 {\n-    // ASAN:             call void @__asan_report_load4(i64 %0)\n-    // ASAN:             unreachable\n-    //\n-    // ASAN-RECOVER:     call void @__asan_report_load4_noabort(\n-    // ASAN-RECOVER-NOT: unreachable\n-    //\n-    // MSAN:             call void @__msan_warning_noreturn()\n-    // MSAN:             unreachable\n-    //\n-    // MSAN-RECOVER:     call void @__msan_warning()\n-    // MSAN-RECOVER-NOT: unreachable\n     *p\n }\n+\n+fn main() {}"}]}