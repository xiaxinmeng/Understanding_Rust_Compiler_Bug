{"sha": "f9fa649545bcf16ffbfc47a24fa7c6001d4eea2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZmE2NDk1NDViY2YxNmZmYmZjNDdhMjRmYTdjNjAwMWQ0ZWVhMmM=", "commit": {"author": {"name": "Denis Vasilik", "email": "contact@denisvasilik.com", "date": "2020-09-18T09:05:26Z"}, "committer": {"name": "Denis Vasilik", "email": "contact@denisvasilik.com", "date": "2020-09-19T21:30:52Z"}, "message": "Use intra-doc links", "tree": {"sha": "4c378437befbc8befe8b6cb86efd57fc23097958", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c378437befbc8befe8b6cb86efd57fc23097958"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9fa649545bcf16ffbfc47a24fa7c6001d4eea2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9fa649545bcf16ffbfc47a24fa7c6001d4eea2c", "html_url": "https://github.com/rust-lang/rust/commit/f9fa649545bcf16ffbfc47a24fa7c6001d4eea2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9fa649545bcf16ffbfc47a24fa7c6001d4eea2c/comments", "author": {"login": "denisvasilik", "id": 18697981, "node_id": "MDQ6VXNlcjE4Njk3OTgx", "avatar_url": "https://avatars.githubusercontent.com/u/18697981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denisvasilik", "html_url": "https://github.com/denisvasilik", "followers_url": "https://api.github.com/users/denisvasilik/followers", "following_url": "https://api.github.com/users/denisvasilik/following{/other_user}", "gists_url": "https://api.github.com/users/denisvasilik/gists{/gist_id}", "starred_url": "https://api.github.com/users/denisvasilik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denisvasilik/subscriptions", "organizations_url": "https://api.github.com/users/denisvasilik/orgs", "repos_url": "https://api.github.com/users/denisvasilik/repos", "events_url": "https://api.github.com/users/denisvasilik/events{/privacy}", "received_events_url": "https://api.github.com/users/denisvasilik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "denisvasilik", "id": 18697981, "node_id": "MDQ6VXNlcjE4Njk3OTgx", "avatar_url": "https://avatars.githubusercontent.com/u/18697981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denisvasilik", "html_url": "https://github.com/denisvasilik", "followers_url": "https://api.github.com/users/denisvasilik/followers", "following_url": "https://api.github.com/users/denisvasilik/following{/other_user}", "gists_url": "https://api.github.com/users/denisvasilik/gists{/gist_id}", "starred_url": "https://api.github.com/users/denisvasilik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denisvasilik/subscriptions", "organizations_url": "https://api.github.com/users/denisvasilik/orgs", "repos_url": "https://api.github.com/users/denisvasilik/repos", "events_url": "https://api.github.com/users/denisvasilik/events{/privacy}", "received_events_url": "https://api.github.com/users/denisvasilik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bdb5dee7bac15458b10b148e9e24968e633053e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bdb5dee7bac15458b10b148e9e24968e633053e", "html_url": "https://github.com/rust-lang/rust/commit/7bdb5dee7bac15458b10b148e9e24968e633053e"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "3e6a4e4ead6e88d96ac1192e65ee941446a00a45", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f9fa649545bcf16ffbfc47a24fa7c6001d4eea2c/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9fa649545bcf16ffbfc47a24fa7c6001d4eea2c/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=f9fa649545bcf16ffbfc47a24fa7c6001d4eea2c", "patch": "@@ -47,7 +47,6 @@ use UnderflowResult::*;\n /// any other key, as determined by the [`Ord`] trait, changes while it is in the map. This is\n /// normally only possible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.\n ///\n-/// [`Ord`]: core::cmp::Ord\n /// [`Cell`]: core::cell::Cell\n /// [`RefCell`]: core::cell::RefCell\n ///\n@@ -93,9 +92,10 @@ use UnderflowResult::*;\n /// }\n /// ```\n ///\n-/// `BTreeMap` also implements an [`Entry API`](#method.entry), which allows\n-/// for more complex methods of getting, setting, updating and removing keys and\n-/// their values:\n+/// `BTreeMap` also implements an [`Entry API`], which allows for more complex\n+/// methods of getting, setting, updating and removing keys and their values:\n+///\n+/// [`Entry API`]: BTreeMap::entry\n ///\n /// ```\n /// use std::collections::BTreeMap;\n@@ -453,8 +453,6 @@ impl<K: Debug + Ord, V: Debug> Debug for Entry<'_, K, V> {\n \n /// A view into a vacant entry in a `BTreeMap`.\n /// It is part of the [`Entry`] enum.\n-///\n-/// [`Entry`]: enum.Entry.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct VacantEntry<'a, K: 'a, V: 'a> {\n     key: K,\n@@ -474,8 +472,6 @@ impl<K: Debug + Ord, V> Debug for VacantEntry<'_, K, V> {\n \n /// A view into an occupied entry in a `BTreeMap`.\n /// It is part of the [`Entry`] enum.\n-///\n-/// [`Entry`]: enum.Entry.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct OccupiedEntry<'a, K: 'a, V: 'a> {\n     handle: Handle<NodeRef<marker::Mut<'a>, K, V, marker::LeafOrInternal>, marker::KV>,\n@@ -815,7 +811,7 @@ impl<K: Ord, V> BTreeMap<K, V> {\n     /// types that can be `==` without being identical. See the [module-level\n     /// documentation] for more.\n     ///\n-    /// [module-level documentation]: index.html#insert-and-complex-keys\n+    /// [module-level documentation]: crate::collections#insert-and-complex-keys\n     ///\n     /// # Examples\n     ///\n@@ -2554,7 +2550,7 @@ impl<'a, K: Ord, V> OccupiedEntry<'a, K, V> {\n     /// If you need a reference to the `OccupiedEntry` that may outlive the\n     /// destruction of the `Entry` value, see [`into_mut`].\n     ///\n-    /// [`into_mut`]: #method.into_mut\n+    /// [`into_mut`]: OccupiedEntry::into_mut\n     ///\n     /// # Examples\n     ///\n@@ -2584,7 +2580,7 @@ impl<'a, K: Ord, V> OccupiedEntry<'a, K, V> {\n     ///\n     /// If you need multiple references to the `OccupiedEntry`, see [`get_mut`].\n     ///\n-    /// [`get_mut`]: #method.get_mut\n+    /// [`get_mut`]: OccupiedEntry::get_mut\n     ///\n     /// # Examples\n     ///"}, {"sha": "412c65681e684003ada71c0df9d8ee4f3f7a087a", "filename": "library/alloc/src/collections/linked_list.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9fa649545bcf16ffbfc47a24fa7c6001d4eea2c/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9fa649545bcf16ffbfc47a24fa7c6001d4eea2c/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs?ref=f9fa649545bcf16ffbfc47a24fa7c6001d4eea2c", "patch": "@@ -102,7 +102,7 @@ impl<T: fmt::Debug> fmt::Debug for IterMut<'_, T> {\n /// This `struct` is created by the [`into_iter`] method on [`LinkedList`]\n /// (provided by the `IntoIterator` trait). See its documentation for more.\n ///\n-/// [`into_iter`]: struct.LinkedList.html#method.into_iter\n+/// [`into_iter`]: LinkedList::into_iter\n #[derive(Clone)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct IntoIter<T> {"}]}