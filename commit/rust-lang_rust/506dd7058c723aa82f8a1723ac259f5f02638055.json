{"sha": "506dd7058c723aa82f8a1723ac259f5f02638055", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNmRkNzA1OGM3MjNhYTgyZjhhMTcyM2FjMjU5ZjVmMDI2MzgwNTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-26T14:36:18Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-28T17:57:05Z"}, "message": "fix const_prop detecting unary neg underflows", "tree": {"sha": "e593e99ac68b0bd81dccca1ef02ae5968684fd24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e593e99ac68b0bd81dccca1ef02ae5968684fd24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/506dd7058c723aa82f8a1723ac259f5f02638055", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/506dd7058c723aa82f8a1723ac259f5f02638055", "html_url": "https://github.com/rust-lang/rust/commit/506dd7058c723aa82f8a1723ac259f5f02638055", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/506dd7058c723aa82f8a1723ac259f5f02638055/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6a5a9418a35b4bfb9681123838fce58130bfd1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6a5a9418a35b4bfb9681123838fce58130bfd1f", "html_url": "https://github.com/rust-lang/rust/commit/e6a5a9418a35b4bfb9681123838fce58130bfd1f"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "1715930dbb61cc6ab276edfca09b7f71ca07db58", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/506dd7058c723aa82f8a1723ac259f5f02638055/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/506dd7058c723aa82f8a1723ac259f5f02638055/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=506dd7058c723aa82f8a1723ac259f5f02638055", "patch": "@@ -14,7 +14,7 @@\n \n use rustc::hir::def::Def;\n use rustc::mir::{Constant, Location, Place, Mir, Operand, Rvalue, Local};\n-use rustc::mir::{NullOp, StatementKind, Statement, BasicBlock, LocalKind};\n+use rustc::mir::{NullOp, UnOp, StatementKind, Statement, BasicBlock, LocalKind};\n use rustc::mir::{TerminatorKind, ClearCrossCrate, SourceInfo, BinOp, ProjectionElem};\n use rustc::mir::visit::{Visitor, PlaceContext};\n use rustc::mir::interpret::{\n@@ -381,6 +381,20 @@ impl<'b, 'a, 'tcx:'b> ConstPropagator<'b, 'a, 'tcx> {\n                 let (arg, _) = self.eval_operand(arg, source_info)?;\n                 let val = self.use_ecx(source_info, |this| {\n                     let prim = this.ecx.read_scalar(arg)?.not_undef()?;\n+                    match op {\n+                        UnOp::Neg => {\n+                            // Need to do overflow check here: For actual CTFE, MIR\n+                            // generation emits code that does this before calling the op.\n+                            let size = arg.layout.size;\n+                            if prim.to_bits(size)? == (1 << (size.bits() - 1)) {\n+                                return err!(OverflowNeg);\n+                            }\n+                        }\n+                        UnOp::Not => {\n+                            // Cannot overflow\n+                        }\n+                    }\n+                    // Now run the actual operation.\n                     this.ecx.unary_op(op, prim, arg.layout)\n                 })?;\n                 Some((OpTy::from_scalar_value(val, place_layout), span))"}]}