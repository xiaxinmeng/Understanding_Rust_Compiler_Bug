{"sha": "b758688505440db18d4c1702f68a2e9cfd929fbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NTg2ODg1MDU0NDBkYjE4ZDRjMTcwMmY2OGEyZTljZmQ5MjlmYmQ=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-08-11T13:34:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-11T13:34:00Z"}, "message": "Rollup merge of #35552 - theypsilon:master, r=jonathandturner\n\nUpdate error message E0384 to new format\n\nPart of #35233\nFixes #35184\n\nr? @jonathandturner", "tree": {"sha": "608aa7a73f807ecf12baca5cbb33bc3d6f14b612", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/608aa7a73f807ecf12baca5cbb33bc3d6f14b612"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b758688505440db18d4c1702f68a2e9cfd929fbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b758688505440db18d4c1702f68a2e9cfd929fbd", "html_url": "https://github.com/rust-lang/rust/commit/b758688505440db18d4c1702f68a2e9cfd929fbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b758688505440db18d4c1702f68a2e9cfd929fbd/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08d5df8f5f709741c5bc78183b4ed0ac3657cb9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/08d5df8f5f709741c5bc78183b4ed0ac3657cb9f", "html_url": "https://github.com/rust-lang/rust/commit/08d5df8f5f709741c5bc78183b4ed0ac3657cb9f"}, {"sha": "71a34d728b79d0f290aa6e7eebaad8cdd789ecd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/71a34d728b79d0f290aa6e7eebaad8cdd789ecd0", "html_url": "https://github.com/rust-lang/rust/commit/71a34d728b79d0f290aa6e7eebaad8cdd789ecd0"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "e0cbd972bd37f9f3c62fc9d65e26b18bb47915af", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b758688505440db18d4c1702f68a2e9cfd929fbd/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b758688505440db18d4c1702f68a2e9cfd929fbd/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=b758688505440db18d4c1702f68a2e9cfd929fbd", "patch": "@@ -760,12 +760,16 @@ impl<'a, 'tcx> BorrowckCtxt<'a, 'tcx> {\n                                                 lp: &LoanPath<'tcx>,\n                                                 assign:\n                                                 &move_data::Assignment) {\n-        struct_span_err!(\n+        let mut err = struct_span_err!(\n             self.tcx.sess, span, E0384,\n             \"re-assignment of immutable variable `{}`\",\n-            self.loan_path_to_string(lp))\n-            .span_note(assign.span, \"prior assignment occurs here\")\n-            .emit();\n+            self.loan_path_to_string(lp));\n+        err.span_label(span, &format!(\"re-assignment of immutable variable\"));\n+        if span != assign.span {\n+            err.span_label(assign.span, &format!(\"first assignment to `{}`\",\n+                                              self.loan_path_to_string(lp)));\n+        }\n+        err.emit();\n     }\n \n     pub fn span_err(&self, s: Span, m: &str) {"}, {"sha": "0541faa021356f0a0719423833dde86ee85b24c3", "filename": "src/test/compile-fail/asm-out-assign-imm.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b758688505440db18d4c1702f68a2e9cfd929fbd/src%2Ftest%2Fcompile-fail%2Fasm-out-assign-imm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b758688505440db18d4c1702f68a2e9cfd929fbd/src%2Ftest%2Fcompile-fail%2Fasm-out-assign-imm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fasm-out-assign-imm.rs?ref=b758688505440db18d4c1702f68a2e9cfd929fbd", "patch": "@@ -18,11 +18,12 @@ fn foo(x: isize) { println!(\"{}\", x); }\n           target_arch = \"aarch64\"))]\n pub fn main() {\n     let x: isize;\n-    x = 1; //~ NOTE prior assignment occurs here\n+    x = 1; //~ NOTE first assignment\n     foo(x);\n     unsafe {\n         asm!(\"mov $1, $0\" : \"=r\"(x) : \"r\"(5));\n         //~^ ERROR re-assignment of immutable variable `x`\n+        //~| NOTE re-assignment of immutable\n         //~| NOTE in this expansion of asm!\n     }\n     foo(x);"}, {"sha": "9a5d6289b589ecd3b5d556ffe3dff14b8d6b3f5c", "filename": "src/test/compile-fail/assign-imm-local-twice.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b758688505440db18d4c1702f68a2e9cfd929fbd/src%2Ftest%2Fcompile-fail%2Fassign-imm-local-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b758688505440db18d4c1702f68a2e9cfd929fbd/src%2Ftest%2Fcompile-fail%2Fassign-imm-local-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassign-imm-local-twice.rs?ref=b758688505440db18d4c1702f68a2e9cfd929fbd", "patch": "@@ -10,9 +10,10 @@\n \n fn test() {\n     let v: isize;\n-    v = 1; //~ NOTE prior assignment occurs here\n+    v = 1; //~ NOTE first assignment\n     println!(\"v={}\", v);\n     v = 2; //~ ERROR re-assignment of immutable variable\n+           //~| NOTE re-assignment of immutable\n     println!(\"v={}\", v);\n }\n "}, {"sha": "9d246f8ea5e0e5bb08f01569508b805abee44ebc", "filename": "src/test/compile-fail/liveness-assign-imm-local-in-loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b758688505440db18d4c1702f68a2e9cfd929fbd/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-in-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b758688505440db18d4c1702f68a2e9cfd929fbd/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-in-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-in-loop.rs?ref=b758688505440db18d4c1702f68a2e9cfd929fbd", "patch": "@@ -12,7 +12,7 @@ fn test() {\n     let v: isize;\n     loop {\n         v = 1; //~ ERROR re-assignment of immutable variable\n-        //~^ NOTE prior assignment occurs here\n+        //~^ NOTE re-assignment of immutable variable\n         v.clone(); // just to prevent liveness warnings\n     }\n }"}, {"sha": "e1eb3246137d22a9d711d93d5dd518ff22b1dd37", "filename": "src/test/compile-fail/liveness-assign-imm-local-in-op-eq.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b758688505440db18d4c1702f68a2e9cfd929fbd/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-in-op-eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b758688505440db18d4c1702f68a2e9cfd929fbd/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-in-op-eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-in-op-eq.rs?ref=b758688505440db18d4c1702f68a2e9cfd929fbd", "patch": "@@ -10,8 +10,9 @@\n \n fn test() {\n     let v: isize;\n-    v = 2;  //~ NOTE prior assignment occurs here\n+    v = 2;  //~ NOTE first assignment\n     v += 1; //~ ERROR re-assignment of immutable variable\n+            //~| NOTE re-assignment of immutable\n     v.clone();\n }\n "}, {"sha": "2468c91f34bbd018a4c324eed5c3e924f4a28b5c", "filename": "src/test/compile-fail/liveness-assign-imm-local-with-init.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b758688505440db18d4c1702f68a2e9cfd929fbd/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-with-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b758688505440db18d4c1702f68a2e9cfd929fbd/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-with-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-assign-imm-local-with-init.rs?ref=b758688505440db18d4c1702f68a2e9cfd929fbd", "patch": "@@ -9,9 +9,10 @@\n // except according to those terms.\n \n fn test() {\n-    let v: isize = 1; //~ NOTE prior assignment occurs here\n+    let v: isize = 1; //~ NOTE first assignment\n     v.clone();\n     v = 2; //~ ERROR re-assignment of immutable variable\n+           //~| NOTE re-assignment of immutable\n     v.clone();\n }\n "}]}