{"sha": "e19bc6eb8060395501c641c15f01d381a2818070", "node_id": "C_kwDOAAsO6NoAKGUxOWJjNmViODA2MDM5NTUwMWM2NDFjMTVmMDFkMzgxYTI4MTgwNzA", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-20T09:27:38Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-20T09:28:14Z"}, "message": "move core::arch into separate file", "tree": {"sha": "098d1a220d18510647b4b184b9fe1ded2e8da73b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/098d1a220d18510647b4b184b9fe1ded2e8da73b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e19bc6eb8060395501c641c15f01d381a2818070", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e19bc6eb8060395501c641c15f01d381a2818070", "html_url": "https://github.com/rust-lang/rust/commit/e19bc6eb8060395501c641c15f01d381a2818070", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e19bc6eb8060395501c641c15f01d381a2818070/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ed65da15279d25e8b8b91d60162930ab48f16f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ed65da15279d25e8b8b91d60162930ab48f16f6", "html_url": "https://github.com/rust-lang/rust/commit/2ed65da15279d25e8b8b91d60162930ab48f16f6"}], "stats": {"total": 62, "additions": 31, "deletions": 31}, "files": [{"sha": "fc2a5b89c149814c22661e6c5537b221f16edfa9", "filename": "library/core/src/arch.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e19bc6eb8060395501c641c15f01d381a2818070/library%2Fcore%2Fsrc%2Farch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e19bc6eb8060395501c641c15f01d381a2818070/library%2Fcore%2Fsrc%2Farch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farch.rs?ref=e19bc6eb8060395501c641c15f01d381a2818070", "patch": "@@ -0,0 +1,30 @@\n+#![doc = include_str!(\"../../stdarch/crates/core_arch/src/core_arch_docs.md\")]\n+\n+#[stable(feature = \"simd_arch\", since = \"1.27.0\")]\n+pub use crate::core_arch::arch::*;\n+\n+/// Inline assembly.\n+///\n+/// Refer to [rust by example] for a usage guide and the [reference] for\n+/// detailed information about the syntax and available options.\n+///\n+/// [rust by example]: https://doc.rust-lang.org/nightly/rust-by-example/unsafe/asm.html\n+/// [reference]: https://doc.rust-lang.org/nightly/reference/inline-assembly.html\n+#[stable(feature = \"asm\", since = \"1.59.0\")]\n+#[rustc_builtin_macro]\n+pub macro asm(\"assembly template\", $(operands,)* $(options($(option),*))?) {\n+    /* compiler built-in */\n+}\n+\n+/// Module-level inline assembly.\n+///\n+/// Refer to [rust by example] for a usage guide and the [reference] for\n+/// detailed information about the syntax and available options.\n+///\n+/// [rust by example]: https://doc.rust-lang.org/nightly/rust-by-example/unsafe/asm.html\n+/// [reference]: https://doc.rust-lang.org/nightly/reference/inline-assembly.html\n+#[stable(feature = \"global_asm\", since = \"1.59.0\")]\n+#[rustc_builtin_macro]\n+pub macro global_asm(\"assembly template\", $(operands,)* $(options($(option),*))?) {\n+    /* compiler built-in */\n+}"}, {"sha": "e1711d7f18bc46744a4f7535eafc56628aa3ee6d", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e19bc6eb8060395501c641c15f01d381a2818070/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e19bc6eb8060395501c641c15f01d381a2818070/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=e19bc6eb8060395501c641c15f01d381a2818070", "patch": "@@ -392,38 +392,8 @@ pub mod primitive;\n #[unstable(feature = \"stdsimd\", issue = \"48556\")]\n mod core_arch;\n \n-#[doc = include_str!(\"../../stdarch/crates/core_arch/src/core_arch_docs.md\")]\n #[stable(feature = \"simd_arch\", since = \"1.27.0\")]\n-pub mod arch {\n-    #[stable(feature = \"simd_arch\", since = \"1.27.0\")]\n-    pub use crate::core_arch::arch::*;\n-\n-    /// Inline assembly.\n-    ///\n-    /// Refer to [rust by example] for a usage guide and the [reference] for\n-    /// detailed information about the syntax and available options.\n-    ///\n-    /// [rust by example]: https://doc.rust-lang.org/nightly/rust-by-example/unsafe/asm.html\n-    /// [reference]: https://doc.rust-lang.org/nightly/reference/inline-assembly.html\n-    #[stable(feature = \"asm\", since = \"1.59.0\")]\n-    #[rustc_builtin_macro]\n-    pub macro asm(\"assembly template\", $(operands,)* $(options($(option),*))?) {\n-        /* compiler built-in */\n-    }\n-\n-    /// Module-level inline assembly.\n-    ///\n-    /// Refer to [rust by example] for a usage guide and the [reference] for\n-    /// detailed information about the syntax and available options.\n-    ///\n-    /// [rust by example]: https://doc.rust-lang.org/nightly/rust-by-example/unsafe/asm.html\n-    /// [reference]: https://doc.rust-lang.org/nightly/reference/inline-assembly.html\n-    #[stable(feature = \"global_asm\", since = \"1.59.0\")]\n-    #[rustc_builtin_macro]\n-    pub macro global_asm(\"assembly template\", $(operands,)* $(options($(option),*))?) {\n-        /* compiler built-in */\n-    }\n-}\n+pub mod arch;\n \n // Pull in the `core_simd` crate directly into libcore. The contents of\n // `core_simd` are in a different repository: rust-lang/portable-simd."}]}