{"sha": "03c6364160316fb0625877e26fe471973599b3c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzYzYzNjQxNjAzMTZmYjA2MjU4NzdlMjZmZTQ3MTk3MzU5OWIzYzY=", "commit": {"author": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2021-01-23T13:49:20Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2021-01-23T16:51:23Z"}, "message": "Move test to mir-opt so we actually see that no inlining is happening", "tree": {"sha": "04257672dbb482d9a1fcfdf83de7cc7e2070bd84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04257672dbb482d9a1fcfdf83de7cc7e2070bd84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03c6364160316fb0625877e26fe471973599b3c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03c6364160316fb0625877e26fe471973599b3c6", "html_url": "https://github.com/rust-lang/rust/commit/03c6364160316fb0625877e26fe471973599b3c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03c6364160316fb0625877e26fe471973599b3c6/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "209889ddc1d51c125c7fded26e51cd259129b699", "url": "https://api.github.com/repos/rust-lang/rust/commits/209889ddc1d51c125c7fded26e51cd259129b699", "html_url": "https://github.com/rust-lang/rust/commit/209889ddc1d51c125c7fded26e51cd259129b699"}], "stats": {"total": 99, "additions": 95, "deletions": 4}, "files": [{"sha": "4f7924170b4cf3ec5d08aee03dfa1acb3f5232b3", "filename": "src/test/mir-opt/inline/cycle.f.Inline.diff", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/03c6364160316fb0625877e26fe471973599b3c6/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.f.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/03c6364160316fb0625877e26fe471973599b3c6/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.f.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.f.Inline.diff?ref=03c6364160316fb0625877e26fe471973599b3c6", "patch": "@@ -0,0 +1,42 @@\n+- // MIR for `f` before Inline\n++ // MIR for `f` after Inline\n+  \n+  fn f(_1: impl Fn()) -> () {\n+      debug g => _1;                       // in scope 0 at $DIR/cycle.rs:3:6: 3:7\n+      let mut _0: ();                      // return place in scope 0 at $DIR/cycle.rs:3:20: 3:20\n+      let _2: ();                          // in scope 0 at $DIR/cycle.rs:4:5: 4:8\n+      let mut _3: &impl Fn();              // in scope 0 at $DIR/cycle.rs:4:5: 4:6\n+      let mut _4: ();                      // in scope 0 at $DIR/cycle.rs:4:5: 4:8\n+  \n+      bb0: {\n+          StorageLive(_2);                 // scope 0 at $DIR/cycle.rs:4:5: 4:8\n+          StorageLive(_3);                 // scope 0 at $DIR/cycle.rs:4:5: 4:6\n+          _3 = &_1;                        // scope 0 at $DIR/cycle.rs:4:5: 4:6\n+          StorageLive(_4);                 // scope 0 at $DIR/cycle.rs:4:5: 4:8\n+          _2 = <impl Fn() as Fn<()>>::call(move _3, move _4) -> [return: bb1, unwind: bb3]; // scope 0 at $DIR/cycle.rs:4:5: 4:8\n+                                           // mir::Constant\n+                                           // + span: $DIR/cycle.rs:4:5: 4:6\n+                                           // + literal: Const { ty: for<'r> extern \"rust-call\" fn(&'r impl Fn(), ()) -> <impl Fn() as std::ops::FnOnce<()>>::Output {<impl Fn() as std::ops::Fn<()>>::call}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb1: {\n+          StorageDead(_4);                 // scope 0 at $DIR/cycle.rs:4:7: 4:8\n+          StorageDead(_3);                 // scope 0 at $DIR/cycle.rs:4:7: 4:8\n+          StorageDead(_2);                 // scope 0 at $DIR/cycle.rs:4:8: 4:9\n+          _0 = const ();                   // scope 0 at $DIR/cycle.rs:3:20: 5:2\n+          drop(_1) -> [return: bb2, unwind: bb4]; // scope 0 at $DIR/cycle.rs:5:1: 5:2\n+      }\n+  \n+      bb2: {\n+          return;                          // scope 0 at $DIR/cycle.rs:5:2: 5:2\n+      }\n+  \n+      bb3 (cleanup): {\n+          drop(_1) -> bb4;                 // scope 0 at $DIR/cycle.rs:5:1: 5:2\n+      }\n+  \n+      bb4 (cleanup): {\n+          resume;                          // scope 0 at $DIR/cycle.rs:3:1: 5:2\n+      }\n+  }\n+  "}, {"sha": "4fbdce3eb0ae4bbf4891a9b43feb2f805ff6b13d", "filename": "src/test/mir-opt/inline/cycle.g.Inline.diff", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/03c6364160316fb0625877e26fe471973599b3c6/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.g.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/03c6364160316fb0625877e26fe471973599b3c6/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.g.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.g.Inline.diff?ref=03c6364160316fb0625877e26fe471973599b3c6", "patch": "@@ -0,0 +1,25 @@\n+- // MIR for `g` before Inline\n++ // MIR for `g` after Inline\n+  \n+  fn g() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/cycle.rs:9:8: 9:8\n+      let _1: ();                          // in scope 0 at $DIR/cycle.rs:10:5: 10:12\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/cycle.rs:10:5: 10:12\n+          _1 = f::<fn() {main}>(main) -> bb1; // scope 0 at $DIR/cycle.rs:10:5: 10:12\n+                                           // mir::Constant\n+                                           // + span: $DIR/cycle.rs:10:5: 10:6\n+                                           // + literal: Const { ty: fn(fn() {main}) {f::<fn() {main}>}, val: Value(Scalar(<ZST>)) }\n+                                           // mir::Constant\n+                                           // + span: $DIR/cycle.rs:10:7: 10:11\n+                                           // + literal: Const { ty: fn() {main}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb1: {\n+          StorageDead(_1);                 // scope 0 at $DIR/cycle.rs:10:12: 10:13\n+          _0 = const ();                   // scope 0 at $DIR/cycle.rs:9:8: 11:2\n+          return;                          // scope 0 at $DIR/cycle.rs:11:2: 11:2\n+      }\n+  }\n+  "}, {"sha": "3c7dfc2494ef2aa80771c910d6272f28dc4b4f6a", "filename": "src/test/mir-opt/inline/cycle.main.Inline.diff", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/03c6364160316fb0625877e26fe471973599b3c6/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.main.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/03c6364160316fb0625877e26fe471973599b3c6/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.main.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.main.Inline.diff?ref=03c6364160316fb0625877e26fe471973599b3c6", "patch": "@@ -0,0 +1,25 @@\n+- // MIR for `main` before Inline\n++ // MIR for `main` after Inline\n+  \n+  fn main() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/cycle.rs:14:11: 14:11\n+      let _1: ();                          // in scope 0 at $DIR/cycle.rs:15:5: 15:9\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/cycle.rs:15:5: 15:9\n+          _1 = f::<fn() {g}>(g) -> bb1;    // scope 0 at $DIR/cycle.rs:15:5: 15:9\n+                                           // mir::Constant\n+                                           // + span: $DIR/cycle.rs:15:5: 15:6\n+                                           // + literal: Const { ty: fn(fn() {g}) {f::<fn() {g}>}, val: Value(Scalar(<ZST>)) }\n+                                           // mir::Constant\n+                                           // + span: $DIR/cycle.rs:15:7: 15:8\n+                                           // + literal: Const { ty: fn() {g}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb1: {\n+          StorageDead(_1);                 // scope 0 at $DIR/cycle.rs:15:9: 15:10\n+          _0 = const ();                   // scope 0 at $DIR/cycle.rs:14:11: 16:2\n+          return;                          // scope 0 at $DIR/cycle.rs:16:2: 16:2\n+      }\n+  }\n+  "}, {"sha": "0be6fec99dda1ec6da3e675fb759888000341cb0", "filename": "src/test/mir-opt/inline/cycle.rs", "status": "renamed", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/03c6364160316fb0625877e26fe471973599b3c6/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03c6364160316fb0625877e26fe471973599b3c6/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.rs?ref=03c6364160316fb0625877e26fe471973599b3c6", "patch": "@@ -1,17 +1,16 @@\n-// Needs build-pass to trigger `optimized_mir` on all mir bodies\n-// build-pass\n-// compile-flags: -Zmir-opt-level=2\n-\n+// EMIT_MIR cycle.f.Inline.diff\n #[inline(always)]\n fn f(g: impl Fn()) {\n     g();\n }\n \n+// EMIT_MIR cycle.g.Inline.diff\n #[inline(always)]\n fn g() {\n     f(main);\n }\n \n+// EMIT_MIR cycle.main.Inline.diff\n fn main() {\n     f(g);\n }", "previous_filename": "src/test/ui/inline_cycle.rs"}]}