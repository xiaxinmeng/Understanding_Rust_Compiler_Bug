{"sha": "a1131748c2e86bcbcbbbec81a83ca844e58073b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExMTMxNzQ4YzJlODZiY2JjYmJiZWM4MWE4M2NhODQ0ZTU4MDczYjQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-08T19:03:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-12T00:31:34Z"}, "message": "Add a waitpid wrapper to std::run that interprets the exit status on unix\n\nThis makes the result of running a program a little more uniform between unix\nand windows", "tree": {"sha": "5b2dbfc90af41e05af80be6d52ee484b8039611a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b2dbfc90af41e05af80be6d52ee484b8039611a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1131748c2e86bcbcbbbec81a83ca844e58073b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1131748c2e86bcbcbbbec81a83ca844e58073b4", "html_url": "https://github.com/rust-lang/rust/commit/a1131748c2e86bcbcbbbec81a83ca844e58073b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1131748c2e86bcbcbbbec81a83ca844e58073b4/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "476bbca87abb9aa17f84d1a8fb91bdefda4668ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/476bbca87abb9aa17f84d1a8fb91bdefda4668ba", "html_url": "https://github.com/rust-lang/rust/commit/476bbca87abb9aa17f84d1a8fb91bdefda4668ba"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "6e65e5261d47999d6fcd9af9c18f7085e406ba81", "filename": "src/lib/run_program.rs", "status": "modified", "additions": 41, "deletions": 2, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/a1131748c2e86bcbcbbbec81a83ca844e58073b4/src%2Flib%2Frun_program.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1131748c2e86bcbcbbbec81a83ca844e58073b4/src%2Flib%2Frun_program.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Frun_program.rs?ref=a1131748c2e86bcbcbbbec81a83ca844e58073b4", "patch": "@@ -6,6 +6,7 @@ export run_program;\n export start_program;\n export program_output;\n export spawn_process;\n+export waitpid;\n \n native \"rust\" mod rustrt {\n     fn rust_run_program(argv: *sbuf, in_fd: int, out_fd: int, err_fd: int) ->\n@@ -33,7 +34,7 @@ fn spawn_process(prog: &str, args: &[str], in_fd: int, out_fd: int,\n }\n \n fn run_program(prog: &str, args: &[str]) -> int {\n-    ret os::waitpid(spawn_process(prog, args, 0, 0, 0));\n+    ret waitpid(spawn_process(prog, args, 0, 0, 0));\n }\n \n type program =\n@@ -87,7 +88,7 @@ fn start_program(prog: &str, args: &[str]) -> @program_res {\n             if finished { ret 0; }\n             finished = true;\n             self.close_input();\n-            ret os::waitpid(pid);\n+            ret waitpid(pid);\n         }\n         fn destroy() {\n             self.finish();\n@@ -117,6 +118,44 @@ fn program_output(prog: &str, args: &[str]) ->\n          out: read_all(pr.output()),\n          err: read_all(pr.err())};\n }\n+\n+/* Returns an exit status */\n+#[cfg(target_os = \"win32\")]\n+fn waitpid(pid: int) -> int {\n+    os::waitpid(pid)\n+}\n+\n+#[cfg(target_os = \"linux\")]\n+#[cfg(target_os = \"macos\")]\n+fn waitpid(pid: int) -> int {\n+    #[cfg(target_os = \"linux\")]\n+    fn WIFEXITED(status: int) -> bool {\n+        (status & 0xff) == 0\n+    }\n+\n+    #[cfg(target_os = \"macos\")]\n+    fn WIFEXITED(status: int) -> bool {\n+        (status & 0x7f) == 0\n+    }\n+\n+    #[cfg(target_os = \"linux\")]\n+    fn WEXITSTATUS(status: int) -> int {\n+        (status >> 8) & 0xff\n+    }\n+\n+    #[cfg(target_os = \"macos\")]\n+    fn WEXITSTATUS(status: int) -> int {\n+        status >> 8\n+    }\n+\n+    let status = os::waitpid(pid);\n+    ret if WIFEXITED(status) {\n+        WEXITSTATUS(status)\n+    } else {\n+        1\n+    };\n+}\n+\n // Local Variables:\n // mode: rust\n // fill-column: 78;"}, {"sha": "f6cf8b5f07fef848bcd9f1d7ccabb0b387c1dad3", "filename": "src/test/stdtest/run.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a1131748c2e86bcbcbbbec81a83ca844e58073b4/src%2Ftest%2Fstdtest%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1131748c2e86bcbcbbbec81a83ca844e58073b4/src%2Ftest%2Fstdtest%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Frun.rs?ref=a1131748c2e86bcbcbbbec81a83ca844e58073b4", "patch": "@@ -65,3 +65,10 @@ fn test_pipes() {\n         ret buf;\n     }\n }\n+\n+#[test]\n+fn waitpid() {\n+    let pid = run::spawn_process(\"false\", [], 0, 0, 0);\n+    let status = run::waitpid(pid);\n+    assert status == 1;\n+}"}]}