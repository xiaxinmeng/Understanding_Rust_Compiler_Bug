{"sha": "5541d1ac16547e6bb4aad9a1b38c0b3b8722eebc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NDFkMWFjMTY1NDdlNmJiNGFhZDlhMWIzOGMwYjNiODcyMmVlYmM=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-07-11T19:31:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-11T19:31:59Z"}, "message": "Rollup merge of #86951 - cyberia-ng:fp-negative-zero-sqrt-docs, r=Mark-Simulacrum\n\n[docs] Clarify behaviour of f64 and f32::sqrt when argument is negative zero\n\nFrom IEEE 754 section 6.3:\n> Except that squareRoot(\u22120) shall be \u22120, every numeric squareRoot result shall have a positive sign.", "tree": {"sha": "db4d1dbc7338b60fa2c915c2c198cd1a6bc13b4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db4d1dbc7338b60fa2c915c2c198cd1a6bc13b4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5541d1ac16547e6bb4aad9a1b38c0b3b8722eebc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg60cwCRBK7hj4Ov3rIwAAvmUIAKI4YtPIptDEI66+H1E1VOe5\nvk7bgnGEouh06RESTTfk8GZ7KyuRnc8VJmOEJguJBC+2n3Bq9PYsypYMb4ffiPNm\npZnnxu6ifwLK7ZRlzA26vDyPpRlLLPdRKAV1EsJKinI4oClrPKn6G+XqarnfHyAL\nVkc69dv9USGB/KUAWCBWS/G/+Tc2kYEPW3HwjgalkVnp/ByXHtk/U9os0k7szxcZ\n8tDZnt491L7BqBxC2n+RmxognkWp66zPP66/oSMrIEu1+w2agxg090FOSudrW2bC\nwEBWI4vipdA2C23Urmp+7toRsk4R1kzfhqxybN82n++5i6l81994oSLMlQCuykg=\n=gu3c\n-----END PGP SIGNATURE-----\n", "payload": "tree db4d1dbc7338b60fa2c915c2c198cd1a6bc13b4c\nparent a4e7a3c29c43c8087066899ca9b9b00c7289a0d9\nparent a853a49425c042ffd2d0d46883537a6fc85dddba\nauthor Yuki Okushi <jtitor@2k36.org> 1626031919 +0900\ncommitter GitHub <noreply@github.com> 1626031919 +0900\n\nRollup merge of #86951 - cyberia-ng:fp-negative-zero-sqrt-docs, r=Mark-Simulacrum\n\n[docs] Clarify behaviour of f64 and f32::sqrt when argument is negative zero\n\nFrom IEEE 754 section 6.3:\n> Except that squareRoot(\u22120) shall be \u22120, every numeric squareRoot result shall have a positive sign.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5541d1ac16547e6bb4aad9a1b38c0b3b8722eebc", "html_url": "https://github.com/rust-lang/rust/commit/5541d1ac16547e6bb4aad9a1b38c0b3b8722eebc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5541d1ac16547e6bb4aad9a1b38c0b3b8722eebc/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4e7a3c29c43c8087066899ca9b9b00c7289a0d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4e7a3c29c43c8087066899ca9b9b00c7289a0d9", "html_url": "https://github.com/rust-lang/rust/commit/a4e7a3c29c43c8087066899ca9b9b00c7289a0d9"}, {"sha": "a853a49425c042ffd2d0d46883537a6fc85dddba", "url": "https://api.github.com/repos/rust-lang/rust/commits/a853a49425c042ffd2d0d46883537a6fc85dddba", "html_url": "https://github.com/rust-lang/rust/commit/a853a49425c042ffd2d0d46883537a6fc85dddba"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "e0cc6ad1d4231731b75470337b2c02260944d980", "filename": "library/std/src/f32.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5541d1ac16547e6bb4aad9a1b38c0b3b8722eebc/library%2Fstd%2Fsrc%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5541d1ac16547e6bb4aad9a1b38c0b3b8722eebc/library%2Fstd%2Fsrc%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ff32.rs?ref=5541d1ac16547e6bb4aad9a1b38c0b3b8722eebc", "patch": "@@ -324,18 +324,20 @@ impl f32 {\n \n     /// Returns the square root of a number.\n     ///\n-    /// Returns NaN if `self` is a negative number.\n+    /// Returns NaN if `self` is a negative number other than `-0.0`.\n     ///\n     /// # Examples\n     ///\n     /// ```\n     /// let positive = 4.0_f32;\n     /// let negative = -4.0_f32;\n+    /// let negative_zero = -0.0_f32;\n     ///\n     /// let abs_difference = (positive.sqrt() - 2.0).abs();\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// assert!(negative.sqrt().is_nan());\n+    /// assert!(negative_zero.sqrt() == negative_zero);\n     /// ```\n     #[must_use = \"method returns a new number and does not mutate the original value\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "7ed65b7dafec5ccb2c8d7214bf27c37e6c87c916", "filename": "library/std/src/f64.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5541d1ac16547e6bb4aad9a1b38c0b3b8722eebc/library%2Fstd%2Fsrc%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5541d1ac16547e6bb4aad9a1b38c0b3b8722eebc/library%2Fstd%2Fsrc%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ff64.rs?ref=5541d1ac16547e6bb4aad9a1b38c0b3b8722eebc", "patch": "@@ -324,18 +324,20 @@ impl f64 {\n \n     /// Returns the square root of a number.\n     ///\n-    /// Returns NaN if `self` is a negative number.\n+    /// Returns NaN if `self` is a negative number other than `-0.0`.\n     ///\n     /// # Examples\n     ///\n     /// ```\n     /// let positive = 4.0_f64;\n     /// let negative = -4.0_f64;\n+    /// let negative_zero = -0.0_f64;\n     ///\n     /// let abs_difference = (positive.sqrt() - 2.0).abs();\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// assert!(negative.sqrt().is_nan());\n+    /// assert!(negative_zero.sqrt() == negative_zero);\n     /// ```\n     #[must_use = \"method returns a new number and does not mutate the original value\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}