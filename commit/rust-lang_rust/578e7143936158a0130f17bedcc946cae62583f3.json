{"sha": "578e7143936158a0130f17bedcc946cae62583f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3OGU3MTQzOTM2MTU4YTAxMzBmMTdiZWRjYzk0NmNhZTYyNTgzZjM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-05T12:09:33Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-05T12:10:10Z"}, "message": "Fix dropck issue of SyncOnceCell.\n\nFixes #76367.", "tree": {"sha": "3decdba35a9db6bdbc7e0b47035edf40b7bccb69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3decdba35a9db6bdbc7e0b47035edf40b7bccb69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/578e7143936158a0130f17bedcc946cae62583f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/578e7143936158a0130f17bedcc946cae62583f3", "html_url": "https://github.com/rust-lang/rust/commit/578e7143936158a0130f17bedcc946cae62583f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/578e7143936158a0130f17bedcc946cae62583f3/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3364780d2cfddfe329f62a3ec138fd4f9a60e27", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3364780d2cfddfe329f62a3ec138fd4f9a60e27", "html_url": "https://github.com/rust-lang/rust/commit/c3364780d2cfddfe329f62a3ec138fd4f9a60e27"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "fc485f0cd47ba5592d098d06f648924bae03747c", "filename": "library/std/src/lazy.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/578e7143936158a0130f17bedcc946cae62583f3/library%2Fstd%2Fsrc%2Flazy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/578e7143936158a0130f17bedcc946cae62583f3/library%2Fstd%2Fsrc%2Flazy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flazy.rs?ref=578e7143936158a0130f17bedcc946cae62583f3", "patch": "@@ -6,6 +6,7 @@ mod tests;\n use crate::{\n     cell::{Cell, UnsafeCell},\n     fmt,\n+    marker::PhantomData,\n     mem::{self, MaybeUninit},\n     ops::{Deref, Drop},\n     panic::{RefUnwindSafe, UnwindSafe},\n@@ -46,6 +47,8 @@ pub struct SyncOnceCell<T> {\n     once: Once,\n     // Whether or not the value is initialized is tracked by `state_and_queue`.\n     value: UnsafeCell<MaybeUninit<T>>,\n+    // Make sure dropck understands we're dropping T in our Drop impl.\n+    _marker: PhantomData<T>,\n }\n \n // Why do we need `T: Send`?\n@@ -119,7 +122,11 @@ impl<T> SyncOnceCell<T> {\n     /// Creates a new empty cell.\n     #[unstable(feature = \"once_cell\", issue = \"74465\")]\n     pub const fn new() -> SyncOnceCell<T> {\n-        SyncOnceCell { once: Once::new(), value: UnsafeCell::new(MaybeUninit::uninit()) }\n+        SyncOnceCell {\n+            once: Once::new(),\n+            value: UnsafeCell::new(MaybeUninit::uninit()),\n+            _marker: PhantomData,\n+        }\n     }\n \n     /// Gets the reference to the underlying value."}]}