{"sha": "12b8d4366cc48ed93441f4b039bc18e30b0f0baa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyYjhkNDM2NmNjNDhlZDkzNDQxZjRiMDM5YmMxOGUzMGIwZjBiYWE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-03T07:32:21Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-03T08:47:28Z"}, "message": "avoid integer overflow in ptr-to-int cast", "tree": {"sha": "4c371ff0dfb7953519f4d1a2411528cc911d8d18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c371ff0dfb7953519f4d1a2411528cc911d8d18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12b8d4366cc48ed93441f4b039bc18e30b0f0baa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12b8d4366cc48ed93441f4b039bc18e30b0f0baa", "html_url": "https://github.com/rust-lang/rust/commit/12b8d4366cc48ed93441f4b039bc18e30b0f0baa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12b8d4366cc48ed93441f4b039bc18e30b0f0baa/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6e4f760a21f0d25215a9b5b6b01798e5d08c5ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6e4f760a21f0d25215a9b5b6b01798e5d08c5ca", "html_url": "https://github.com/rust-lang/rust/commit/c6e4f760a21f0d25215a9b5b6b01798e5d08c5ca"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "5797895c54f809b888ad9615bd2f4269794cec7e", "filename": "src/intptrcast.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/12b8d4366cc48ed93441f4b039bc18e30b0f0baa/src%2Fintptrcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12b8d4366cc48ed93441f4b039bc18e30b0f0baa/src%2Fintptrcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintptrcast.rs?ref=12b8d4366cc48ed93441f4b039bc18e30b0f0baa", "patch": "@@ -4,7 +4,8 @@ use std::cmp::max;\n \n use rand::Rng;\n \n-use rustc_mir::interpret::{AllocId, Pointer, InterpResult, Memory, AllocCheck};\n+use rustc::ty::layout::HasDataLayout;\n+use rustc_mir::interpret::{AllocId, Pointer, InterpResult, Memory, AllocCheck, PointerArithmetic};\n use rustc_target::abi::Size;\n \n use crate::{Evaluator, Tag, STACK_ADDR};\n@@ -109,7 +110,9 @@ impl<'mir, 'tcx> GlobalState {\n         };\n \n         debug_assert_eq!(base_addr % align.bytes(), 0); // sanity check\n-        Ok(base_addr + ptr.offset.bytes())\n+        // Add offset with the right kind of pointer-overflowing arithmetic.\n+        let dl = memory.data_layout();\n+        Ok(dl.overflowing_offset(base_addr, ptr.offset.bytes()).0)\n     }\n \n     /// Shifts `addr` to make it aligned with `align` by rounding `addr` to the smallest multiple"}]}