{"sha": "6daff1400a28fef4616a23a6c04cb5569df2b8d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkYWZmMTQwMGEyOGZlZjQ2MTZhMjNhNmMwNGNiNTU2OWRmMmI4ZDY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-31T19:38:14Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-04-02T11:40:43Z"}, "message": "direct imports for langitem stuff", "tree": {"sha": "0e134b64efe2aed6fc71c3143869fcb6094c8c6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e134b64efe2aed6fc71c3143869fcb6094c8c6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6daff1400a28fef4616a23a6c04cb5569df2b8d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6daff1400a28fef4616a23a6c04cb5569df2b8d6", "html_url": "https://github.com/rust-lang/rust/commit/6daff1400a28fef4616a23a6c04cb5569df2b8d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6daff1400a28fef4616a23a6c04cb5569df2b8d6/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86c0fca44bc0b49085b177d0244bc300f6cd4655", "url": "https://api.github.com/repos/rust-lang/rust/commits/86c0fca44bc0b49085b177d0244bc300f6cd4655", "html_url": "https://github.com/rust-lang/rust/commit/86c0fca44bc0b49085b177d0244bc300f6cd4655"}], "stats": {"total": 100, "additions": 48, "deletions": 52}, "files": [{"sha": "029741515555362ef6296af869e8224c9421eb56", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -31,12 +31,12 @@ use rustc_data_structures::profiling::print_time_passes_entry;\n use rustc_data_structures::sync::{par_iter, Lock, ParallelIterator};\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc_hir::lang_items::StartFnLangItem;\n use rustc_index::vec::Idx;\n use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrs;\n use rustc_middle::middle::cstore::EncodedMetadata;\n use rustc_middle::middle::cstore::{self, LinkagePreference};\n use rustc_middle::middle::lang_items;\n-use rustc_middle::middle::lang_items::StartFnLangItem;\n use rustc_middle::mir::mono::{CodegenUnit, CodegenUnitNameBuilder, MonoItem};\n use rustc_middle::ty::layout::{self, HasTyCtxt, TyAndLayout};\n use rustc_middle::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};"}, {"sha": "0d0321ec4ae5e5099189a959a3acbb86b8e91adb", "filename": "src/librustc_codegen_ssa/common.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_codegen_ssa%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_codegen_ssa%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fcommon.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -1,17 +1,16 @@\n #![allow(non_camel_case_types, non_snake_case)]\n \n use rustc_errors::struct_span_err;\n+use rustc_hir as hir;\n+use rustc_hir::def_id::DefId;\n+use rustc_hir::LangItem;\n use rustc_middle::ty::{Ty, TyCtxt};\n use rustc_session::Session;\n use rustc_span::Span;\n \n use crate::base;\n-use crate::traits::*;\n-use rustc_hir::def_id::DefId;\n-use rustc_middle::middle::lang_items::LangItem;\n-\n use crate::traits::BuilderMethods;\n-use rustc_hir as hir;\n+use crate::traits::*;\n \n pub enum IntPredicate {\n     IntEQ,"}, {"sha": "bf8441562c55ba207b36d082df3ecec9947c980a", "filename": "src/librustc_codegen_ssa/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_codegen_ssa%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_codegen_ssa%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Flib.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -21,10 +21,10 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::Lrc;\n use rustc_hir::def_id::CrateNum;\n+use rustc_hir::LangItem;\n use rustc_middle::dep_graph::WorkProduct;\n use rustc_middle::middle::cstore::{CrateSource, LibSource, NativeLibrary};\n use rustc_middle::middle::dependency_format::Dependencies;\n-use rustc_middle::middle::lang_items::LangItem;\n use rustc_middle::ty::query::Providers;\n use rustc_session::config::{OutputFilenames, OutputType, RUST_CGU_EXT};\n use rustc_span::symbol::Symbol;"}, {"sha": "219d5aa77ea0d9b168ca2af9884fdd85a6410485", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -9,8 +9,8 @@ use crate::meth;\n use crate::traits::*;\n use crate::MemFlags;\n \n+use rustc_hir::lang_items;\n use rustc_index::vec::Idx;\n-use rustc_middle::middle::lang_items;\n use rustc_middle::mir;\n use rustc_middle::mir::AssertKind;\n use rustc_middle::ty::layout::{FnAbiExt, HasTyCtxt};"}, {"sha": "33f449ed270bebf7f5cb11a4347cd31de8de7b4c", "filename": "src/librustc_codegen_ssa/mir/rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -8,7 +8,7 @@ use crate::traits::*;\n use crate::MemFlags;\n \n use rustc_apfloat::{ieee, Float, Round, Status};\n-use rustc_middle::middle::lang_items::ExchangeMallocFnLangItem;\n+use rustc_hir::lang_items::ExchangeMallocFnLangItem;\n use rustc_middle::mir;\n use rustc_middle::ty::cast::{CastTy, IntTy};\n use rustc_middle::ty::layout::HasTyCtxt;"}, {"sha": "1cb5dcb465c72c3e5556fb0b25447be52be3aea2", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -18,13 +18,13 @@ use rustc_hir::def::{CtorKind, CtorOf, DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, DefIndex, LocalDefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::definitions::DefPathTable;\n use rustc_hir::definitions::{DefKey, DefPath, DefPathData, DefPathHash};\n+use rustc_hir::lang_items;\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::dep_graph::{self, DepNode, DepNodeExt, DepNodeIndex};\n use rustc_middle::hir::exports::Export;\n use rustc_middle::middle::cstore::{CrateSource, ExternCrate};\n use rustc_middle::middle::cstore::{ForeignModule, LinkagePreference, NativeLibrary};\n use rustc_middle::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n-use rustc_middle::middle::lang_items;\n use rustc_middle::mir::interpret::{AllocDecodingSession, AllocDecodingState};\n use rustc_middle::mir::{self, interpret, BodyAndCache, Promoted};\n use rustc_middle::ty::codec::TyDecoder;"}, {"sha": "417c54869077975380f1f43099fd9edd5e66b944", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -15,6 +15,7 @@ use rustc_hir::def_id::{CrateNum, DefId, DefIndex, LocalDefId, CRATE_DEF_INDEX,\n use rustc_hir::definitions::DefPathTable;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::itemlikevisit::{ItemLikeVisitor, ParItemLikeVisitor};\n+use rustc_hir::lang_items;\n use rustc_hir::{AnonConst, GenericParamKind};\n use rustc_index::vec::Idx;\n use rustc_middle::hir::map::Map;\n@@ -25,7 +26,6 @@ use rustc_middle::middle::dependency_format::Linkage;\n use rustc_middle::middle::exported_symbols::{\n     metadata_symbol_name, ExportedSymbol, SymbolExportLevel,\n };\n-use rustc_middle::middle::lang_items;\n use rustc_middle::mir::{self, interpret};\n use rustc_middle::traits::specialization_graph;\n use rustc_middle::ty::codec::{self as ty_codec, TyEncoder};"}, {"sha": "d6260c536aa182aeb6e10bd0768ade9034dc7fb1", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -8,11 +8,11 @@ use rustc_data_structures::sync::MetadataRef;\n use rustc_hir as hir;\n use rustc_hir::def::CtorKind;\n use rustc_hir::def_id::{DefId, DefIndex};\n+use rustc_hir::lang_items;\n use rustc_index::vec::IndexVec;\n use rustc_middle::hir::exports::Export;\n use rustc_middle::middle::cstore::{DepKind, ForeignModule, LinkagePreference, NativeLibrary};\n use rustc_middle::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n-use rustc_middle::middle::lang_items;\n use rustc_middle::mir;\n use rustc_middle::ty::{self, ReprOptions, Ty};\n use rustc_serialize::opaque::Encoder;"}, {"sha": "e3dec59478c1f6095e44397f6fe0e4e4c60ac65c", "filename": "src/librustc_middle/arena.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_middle%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_middle%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Farena.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -106,7 +106,7 @@ macro_rules! arena_types {\n                 String\n             >,\n             [few] get_lib_features: rustc_middle::middle::lib_features::LibFeatures,\n-            [few] defined_lib_features: rustc_middle::middle::lang_items::LanguageItems,\n+            [few] defined_lib_features: rustc_hir::lang_items::LanguageItems,\n             [few] visible_parent_map: rustc_hir::def_id::DefIdMap<rustc_hir::def_id::DefId>,\n             [few] foreign_module: rustc_middle::middle::cstore::ForeignModule,\n             [few] foreign_modules: Vec<rustc_middle::middle::cstore::ForeignModule>,"}, {"sha": "0f98c338c16b149f036a443c71b1e85e4ff4075d", "filename": "src/librustc_middle/middle/lang_items.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_middle%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_middle%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Flang_items.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -7,17 +7,13 @@\n //! * Traits that represent operators; e.g., `Add`, `Sub`, `Index`.\n //! * Functions called by the compiler itself.\n \n-pub use self::LangItem::*;\n-\n use crate::ty::{self, TyCtxt};\n \n use rustc_hir::def_id::DefId;\n+use rustc_hir::LangItem;\n use rustc_span::Span;\n use rustc_target::spec::PanicStrategy;\n \n-pub use rustc_hir::weak_lang_items::link_name;\n-pub use rustc_hir::{LangItem, LanguageItems};\n-\n impl<'tcx> TyCtxt<'tcx> {\n     /// Returns the `DefId` for a given `LangItem`.\n     /// If not found, fatally aborts compilation."}, {"sha": "95d0c758d08dea9b0035e012cc5f5518b5d85467", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -11,8 +11,6 @@ use crate::lint::{struct_lint_level, LintSource};\n use crate::middle;\n use crate::middle::cstore::CrateStoreDyn;\n use crate::middle::cstore::EncodedMetadata;\n-use crate::middle::lang_items;\n-use crate::middle::lang_items::PanicLocationLangItem;\n use crate::middle::resolve_lifetime::{self, ObjectLifetimeDefault};\n use crate::middle::stability;\n use crate::mir::interpret::{Allocation, ConstValue, Scalar};\n@@ -53,6 +51,8 @@ use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, DefIdSet, LocalDefId, LOCAL_CRATE};\n use rustc_hir::definitions::{DefPathData, DefPathHash, Definitions};\n+use rustc_hir::lang_items;\n+use rustc_hir::lang_items::PanicLocationLangItem;\n use rustc_hir::{HirId, Node, TraitCandidate};\n use rustc_hir::{ItemKind, ItemLocalId, ItemLocalMap, ItemLocalSet};\n use rustc_index::vec::{Idx, IndexVec};\n@@ -1203,7 +1203,7 @@ impl<'tcx> TyCtxt<'tcx> {\n     }\n \n     /// Obtain all lang items of this crate and all dependencies (recursively)\n-    pub fn lang_items(self) -> &'tcx middle::lang_items::LanguageItems {\n+    pub fn lang_items(self) -> &'tcx rustc_hir::lang_items::LanguageItems {\n         self.get_lang_items(LOCAL_CRATE)\n     }\n "}, {"sha": "5d47a6e13f488c1bc44ddea9b3792b523b0c5929", "filename": "src/librustc_middle/ty/instance.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_middle%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_middle%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Finstance.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -1,10 +1,10 @@\n use crate::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n-use crate::middle::lang_items::DropInPlaceFnLangItem;\n use crate::ty::print::{FmtPrinter, Printer};\n use crate::ty::{self, SubstsRef, Ty, TyCtxt, TypeFoldable};\n use rustc_data_structures::AtomicRef;\n use rustc_hir::def::Namespace;\n use rustc_hir::def_id::{CrateNum, DefId};\n+use rustc_hir::lang_items::DropInPlaceFnLangItem;\n use rustc_macros::HashStable;\n \n use std::fmt;"}, {"sha": "3d1893d3bd07bc59e0d9013905f0f272199c85b9", "filename": "src/librustc_middle/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_middle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_middle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fmod.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -11,7 +11,6 @@ use crate::hir::exports::ExportMap;\n use crate::ich::StableHashingContext;\n use crate::infer::canonical::Canonical;\n use crate::middle::cstore::CrateStoreDyn;\n-use crate::middle::lang_items::{FnMutTraitLangItem, FnOnceTraitLangItem, FnTraitLangItem};\n use crate::middle::resolve_lifetime::ObjectLifetimeDefault;\n use crate::mir::interpret::ErrorHandled;\n use crate::mir::GeneratorLayout;\n@@ -34,6 +33,7 @@ use rustc_data_structures::sync::{self, par_iter, Lrc, ParallelIterator};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, CtorOf, DefKind, Namespace, Res};\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, LocalDefId, CRATE_DEF_INDEX};\n+use rustc_hir::lang_items::{FnMutTraitLangItem, FnOnceTraitLangItem, FnTraitLangItem};\n use rustc_hir::{Constness, GlobMap, Node, TraitMap};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_macros::HashStable;"}, {"sha": "9986eb88dc32681e20f9f27c4d59362e6fa19577", "filename": "src/librustc_middle/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -7,7 +7,6 @@ use crate::middle::codegen_fn_attrs::CodegenFnAttrs;\n use crate::middle::cstore::{CrateSource, DepKind, NativeLibraryKind};\n use crate::middle::cstore::{ExternCrate, ForeignModule, LinkagePreference, NativeLibrary};\n use crate::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n-use crate::middle::lang_items::{LangItem, LanguageItems};\n use crate::middle::lib_features::LibFeatures;\n use crate::middle::privacy::AccessLevels;\n use crate::middle::region;\n@@ -44,6 +43,7 @@ use rustc_errors::ErrorReported;\n use rustc_hir as hir;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, DefIdSet, LocalDefId};\n+use rustc_hir::lang_items::{LangItem, LanguageItems};\n use rustc_hir::{Crate, HirIdSet, ItemLocalId, TraitCandidate};\n use rustc_index::vec::IndexVec;\n use rustc_session::config::{EntryFnType, OptLevel, OutputFilenames, SymbolManglingVersion};"}, {"sha": "4d67d7204ca6e27465e0273771ad66c395c7a3e8", "filename": "src/librustc_mir/borrow_check/universal_regions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -17,10 +17,10 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::DiagnosticBuilder;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::lang_items;\n use rustc_hir::{BodyOwnerKind, HirId};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin};\n-use rustc_middle::middle::lang_items;\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use rustc_middle::ty::{self, RegionVid, Ty, TyCtxt};"}, {"sha": "754f45d9ec05b3ade7d264a5ec762e51fd62239b", "filename": "src/librustc_mir/interpret/intrinsics/caller_location.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Fcaller_location.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Fcaller_location.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Fcaller_location.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -1,6 +1,6 @@\n use std::convert::TryFrom;\n \n-use rustc_middle::middle::lang_items::PanicLocationLangItem;\n+use rustc_hir::lang_items::PanicLocationLangItem;\n use rustc_middle::ty::subst::Subst;\n use rustc_span::{Span, Symbol};\n use rustc_target::abi::LayoutOf;"}, {"sha": "1032ff413af41a40b6e1c93d79ea0da1841d2844", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -181,9 +181,9 @@ use rustc_data_structures::sync::{par_iter, MTLock, MTRef, ParallelIterator};\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, DefIdMap, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_hir::lang_items::{ExchangeMallocFnLangItem, StartFnLangItem};\n use rustc_index::bit_set::GrowableBitSet;\n use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n-use rustc_middle::middle::lang_items::{ExchangeMallocFnLangItem, StartFnLangItem};\n use rustc_middle::mir::interpret::{AllocId, ConstValue};\n use rustc_middle::mir::interpret::{ErrorHandled, GlobalAlloc, Scalar};\n use rustc_middle::mir::mono::{InstantiationMode, MonoItem};"}, {"sha": "e4a0b9cdb48b11c65b7e30d46f8ebfec47dfe562", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -1,10 +1,10 @@\n //! The `Visitor` responsible for actually checking a `mir::Body` for invalid operations.\n \n use rustc_errors::struct_span_err;\n+use rustc_hir::lang_items;\n use rustc_hir::{def_id::DefId, HirId};\n use rustc_index::bit_set::BitSet;\n use rustc_infer::infer::TyCtxtInferExt;\n-use rustc_middle::middle::lang_items;\n use rustc_middle::mir::visit::{MutatingUseContext, NonMutatingUseContext, PlaceContext, Visitor};\n use rustc_middle::mir::*;\n use rustc_middle::ty::cast::CastTy;"}, {"sha": "e3a96ca78967efb89137b6ea4b50d371e690682a", "filename": "src/librustc_mir/util/elaborate_drops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -1,7 +1,7 @@\n use crate::util::patch::MirPatch;\n use rustc_hir as hir;\n+use rustc_hir::lang_items;\n use rustc_index::vec::Idx;\n-use rustc_middle::middle::lang_items;\n use rustc_middle::mir::*;\n use rustc_middle::traits::Reveal;\n use rustc_middle::ty::subst::SubstsRef;"}, {"sha": "c049842d061bfade8de638fa973303035ba854b9", "filename": "src/librustc_mir_build/build/matches/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Ftest.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -362,7 +362,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         place: Place<'tcx>,\n         mut ty: Ty<'tcx>,\n     ) {\n-        use rustc_middle::middle::lang_items::EqTraitLangItem;\n+        use rustc_hir::lang_items::EqTraitLangItem;\n \n         let mut expect = self.literal_operand(source_info.span, value);\n         let mut val = Operand::Copy(place);"}, {"sha": "24395702020530c8077efa364101affafe5d3821", "filename": "src/librustc_mir_build/build/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -2,17 +2,17 @@ use crate::build;\n use crate::build::scope::DropKind;\n use crate::hair::cx::Cx;\n use crate::hair::{BindingMode, LintLevel, PatKind};\n-use rustc_middle::middle::lang_items;\n-use rustc_middle::middle::region;\n-use rustc_middle::mir::*;\n-use rustc_middle::ty::subst::Subst;\n-use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_attr::{self as attr, UnwindAttr};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::lang_items;\n use rustc_hir::{GeneratorKind, HirIdMap, Node};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_infer::infer::TyCtxtInferExt;\n+use rustc_middle::middle::region;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::subst::Subst;\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_span::symbol::kw;\n use rustc_span::Span;\n use rustc_target::spec::abi::Abi;"}, {"sha": "8e56ef0da5237ab79ba3701a82a0e4ecf3db90fa", "filename": "src/librustc_passes/weak_lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_passes%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_passes%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fweak_lang_items.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -4,8 +4,8 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n+use rustc_hir::lang_items;\n use rustc_hir::weak_lang_items::WEAK_ITEMS_REFS;\n-use rustc_middle::middle::lang_items;\n use rustc_middle::middle::lang_items::whitelisted;\n use rustc_middle::ty::TyCtxt;\n use rustc_session::config;"}, {"sha": "24eb22fbd00b1b57a735d9a211ecb63535f9cd0c", "filename": "src/librustc_trait_selection/infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_trait_selection%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_trait_selection%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Finfer.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -2,11 +2,11 @@ use crate::traits::query::outlives_bounds::InferCtxtExt as _;\n use crate::traits::{self, TraitEngine, TraitEngineExt};\n \n use rustc_hir as hir;\n+use rustc_hir::lang_items;\n use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n use rustc_infer::traits::ObligationCause;\n use rustc_middle::arena::ArenaAllocatable;\n use rustc_middle::infer::canonical::{Canonical, CanonicalizedQueryResponse, QueryResponse};\n-use rustc_middle::middle::lang_items;\n use rustc_middle::traits::query::Fallible;\n use rustc_middle::ty::{self, Ty, TypeFoldable};\n use rustc_span::{Span, DUMMY_SP};"}, {"sha": "3d95824cdf00e1da4f190c41584babc395583c89", "filename": "src/librustc_trait_selection/traits/select.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_trait_selection%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_trait_selection%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fselect.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -39,9 +39,9 @@ use rustc_ast::attr;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::lang_items;\n use rustc_index::bit_set::GrowableBitSet;\n use rustc_middle::dep_graph::{DepKind, DepNodeIndex};\n-use rustc_middle::middle::lang_items;\n use rustc_middle::ty::fast_reject;\n use rustc_middle::ty::relate::TypeRelation;\n use rustc_middle::ty::subst::{Subst, SubstsRef};"}, {"sha": "1eb41e0b4d1aeb409c207e247cb7a7a5a6c377ec", "filename": "src/librustc_trait_selection/traits/wf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_trait_selection%2Ftraits%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_trait_selection%2Ftraits%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fwf.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -3,7 +3,7 @@ use crate::opaque_types::required_region_bounds;\n use crate::traits::{self, AssocTypeBoundData};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n-use rustc_middle::middle::lang_items;\n+use rustc_hir::lang_items;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n use rustc_span::symbol::{kw, Ident};"}, {"sha": "265b811571afec9b70648d5eb9295f9b8bad2988", "filename": "src/librustc_ty/common_traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_ty%2Fcommon_traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_ty%2Fcommon_traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ty%2Fcommon_traits.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -1,7 +1,7 @@\n //! Queries for checking whether a type implements one of a few common traits.\n \n+use rustc_hir::lang_items;\n use rustc_infer::infer::TyCtxtInferExt;\n-use rustc_middle::middle::lang_items;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_span::DUMMY_SP;\n use rustc_trait_selection::traits;"}, {"sha": "c3ebcbfc832d13b263ee021dfe08fd228f2ef8fd", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -6,7 +6,6 @@\n // ignore-tidy-filelength\n \n use crate::collect::PlaceholderHirTyCollector;\n-use crate::middle::lang_items::SizedTraitLangItem;\n use crate::middle::resolve_lifetime as rl;\n use crate::require_c_abi_if_c_variadic;\n use rustc_ast::ast;\n@@ -18,6 +17,7 @@ use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind, Namespace, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{walk_generics, Visitor as _};\n+use rustc_hir::lang_items::SizedTraitLangItem;\n use rustc_hir::{Constness, GenericArg, GenericArgs};\n use rustc_middle::ty::subst::{self, InternalSubsts, Subst, SubstsRef};\n use rustc_middle::ty::{"}, {"sha": "5de0184f2bba9d48d6b0e6d47d5d78401eed63ff", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -35,7 +35,7 @@ use crate::type_error_struct;\n use rustc_ast::ast;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder, ErrorReported};\n use rustc_hir as hir;\n-use rustc_middle::middle::lang_items;\n+use rustc_hir::lang_items;\n use rustc_middle::ty::adjustment::AllowTwoPhase;\n use rustc_middle::ty::cast::{CastKind, CastTy};\n use rustc_middle::ty::error::TypeError;"}, {"sha": "922d9ca6485bbf75ac79c9865d828dfabe6e0e60", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -3,9 +3,10 @@\n use super::{check_fn, Expectation, FnCtxt, GeneratorTypes};\n \n use crate::astconv::AstConv;\n-use crate::middle::{lang_items, region};\n+use crate::middle::region;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::lang_items;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::LateBoundRegionConversionTime;\n use rustc_infer::infer::{InferOk, InferResult};"}, {"sha": "9c57ffaf055acae2db713be6709fb57a30135c09", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -24,10 +24,10 @@ use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder,\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n use rustc_hir::def_id::DefId;\n+use rustc_hir::lang_items;\n use rustc_hir::{ExprKind, QPath};\n use rustc_infer::infer;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc_middle::middle::lang_items;\n use rustc_middle::ty;\n use rustc_middle::ty::adjustment::{\n     Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability,"}, {"sha": "add706b5fcc9a7fa335c73df71e11d4addc7b359", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -2,7 +2,6 @@\n //! found or is otherwise invalid.\n \n use crate::check::FnCtxt;\n-use crate::middle::lang_items::FnOnceTraitLangItem;\n use rustc_ast::ast;\n use rustc_ast::util::lev_distance;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -11,6 +10,7 @@ use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Namespace, Res};\n use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::intravisit;\n+use rustc_hir::lang_items::FnOnceTraitLangItem;\n use rustc_hir::{ExprKind, Node, QPath};\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_middle::hir::map as hir_map;"}, {"sha": "293c4feac62f5c5b241af3a1fbed38891635df9e", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -88,7 +88,6 @@ mod wfcheck;\n pub mod writeback;\n \n use crate::astconv::{AstConv, GenericArgCountMismatch, PathSeg};\n-use crate::middle::lang_items;\n use rustc_ast::ast;\n use rustc_ast::util::parser::ExprPrecedence;\n use rustc_attr as attr;\n@@ -101,6 +100,7 @@ use rustc_hir::def::{CtorOf, DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, DefIdSet, LocalDefId, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_hir::lang_items;\n use rustc_hir::{ExprKind, GenericArg, HirIdMap, Item, ItemKind, Node, PatKind, QPath};\n use rustc_index::vec::Idx;\n use rustc_infer::infer::canonical::{Canonical, OriginalQueryValues, QueryResponse};"}, {"sha": "30a53cbc397e8eb8432e9bfa7cb2316fb18c3dc3", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -7,8 +7,8 @@ use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::itemlikevisit::ParItemLikeVisitor;\n+use rustc_hir::lang_items;\n use rustc_hir::ItemKind;\n-use rustc_middle::middle::lang_items;\n use rustc_middle::ty::subst::{InternalSubsts, Subst};\n use rustc_middle::ty::trait_def::TraitSpecializationKind;\n use rustc_middle::ty::{"}, {"sha": "384a22d010e56acbddefbadc44d2bfe11427a606", "filename": "src/librustc_typeck/coherence/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -4,11 +4,11 @@\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::lang_items::UnsizeTraitLangItem;\n use rustc_hir::ItemKind;\n use rustc_infer::infer;\n use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n use rustc_infer::infer::{RegionckMode, TyCtxtInferExt};\n-use rustc_middle::middle::lang_items::UnsizeTraitLangItem;\n use rustc_middle::middle::region;\n use rustc_middle::ty::adjustment::CoerceUnsizedInfo;\n use rustc_middle::ty::TypeFoldable;"}, {"sha": "13c6670f6b2269586ec9c1f86d839a48e6b3e6bc", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -17,7 +17,6 @@\n use crate::astconv::{AstConv, Bounds, SizedByDefault};\n use crate::check::intrinsic::intrinsic_operation_unsafety;\n use crate::constrained_generic_params as cgp;\n-use crate::middle::lang_items;\n use crate::middle::resolve_lifetime as rl;\n use rustc_ast::ast;\n use rustc_ast::ast::{Ident, MetaItemKind};\n@@ -29,6 +28,7 @@ use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n+use rustc_hir::weak_lang_items;\n use rustc_hir::{GenericParamKind, Node, Unsafety};\n use rustc_middle::hir::map::blocks::FnLikeNode;\n use rustc_middle::hir::map::Map;\n@@ -2569,7 +2569,7 @@ fn codegen_fn_attrs(tcx: TyCtxt<'_>, id: DefId) -> CodegenFnAttrs {\n     if tcx.is_weak_lang_item(id) {\n         codegen_fn_attrs.flags |= CodegenFnAttrFlags::RUSTC_STD_INTERNAL_SYMBOL;\n     }\n-    if let Some(name) = lang_items::link_name(&attrs) {\n+    if let Some(name) = weak_lang_items::link_name(&attrs) {\n         codegen_fn_attrs.export_name = Some(name);\n         codegen_fn_attrs.link_name = Some(name);\n     }"}, {"sha": "73df844a91b8038d85e04e2503c073fc81c50950", "filename": "src/librustdoc/clean/auto_trait.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -1,5 +1,6 @@\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n+use rustc_hir::lang_items;\n use rustc_middle::ty::{self, Region, RegionVid, TypeFoldable};\n use rustc_trait_selection::traits::auto_trait::{self, AutoTraitResult};\n "}, {"sha": "e027db8b56c003f8b6302b195ace534670c94561", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -17,7 +17,6 @@ use rustc_hir::def::{CtorKind, DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_infer::infer::region_constraints::{Constraint, RegionConstraintData};\n-use rustc_middle::middle::lang_items;\n use rustc_middle::middle::resolve_lifetime as rl;\n use rustc_middle::middle::stability;\n use rustc_middle::ty::fold::TypeFolder;"}, {"sha": "2e5ecacee12dfa5fce9d5a39bf67fdab701fec43", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daff1400a28fef4616a23a6c04cb5569df2b8d6/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=6daff1400a28fef4616a23a6c04cb5569df2b8d6", "patch": "@@ -15,9 +15,9 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::def_id::{CrateNum, DefId};\n+use rustc_hir::lang_items;\n use rustc_hir::Mutability;\n use rustc_index::vec::IndexVec;\n-use rustc_middle::middle::lang_items;\n use rustc_middle::middle::stability;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::DUMMY_SP;"}]}