{"sha": "ffe545cc37b9d4b1c45171575a6cc3128fa346e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmZTU0NWNjMzdiOWQ0YjFjNDUxNzE1NzVhNmNjMzEyOGZhMzQ2ZTU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-27T21:34:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-27T21:34:16Z"}, "message": "Brush up CONTRIBUTING.md", "tree": {"sha": "ac8dd8bd38c8a6441b3eb7cdcc624cc84af128ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac8dd8bd38c8a6441b3eb7cdcc624cc84af128ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffe545cc37b9d4b1c45171575a6cc3128fa346e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffe545cc37b9d4b1c45171575a6cc3128fa346e5", "html_url": "https://github.com/rust-lang/rust/commit/ffe545cc37b9d4b1c45171575a6cc3128fa346e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffe545cc37b9d4b1c45171575a6cc3128fa346e5/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4880ca03e76f09e85bea1441360edde40f4157c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4880ca03e76f09e85bea1441360edde40f4157c", "html_url": "https://github.com/rust-lang/rust/commit/a4880ca03e76f09e85bea1441360edde40f4157c"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "570a26c51489ad82435d2d899be4044e843edbf9", "filename": "CONTRIBUTING.md", "status": "renamed", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ffe545cc37b9d4b1c45171575a6cc3128fa346e5/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/ffe545cc37b9d4b1c45171575a6cc3128fa346e5/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=ffe545cc37b9d4b1c45171575a6cc3128fa346e5", "patch": "@@ -1,32 +1,39 @@\n The project is in its early stages: contributions are welcome and\n would be **very** helpful, but the project is not *yet* optimized for\n-contributors. Moreover, it is doubly experimental, so there's no\n+contribution. Moreover, it is doubly experimental, so there's no\n guarantee that any work here would reach production. That said, here\n-are some arias where contributions would be **especially** welcome:\n+are some areas where contributions would be **especially** welcome:\n \n \n * Designing internal data structures: RFC only outlines the\n   constraints, it's an open question how to satisfy them in the\n   optimal way. See `ARCHITECTURE.md` for current design questions.\n-  \n+\n * Porting libsyntax parser to libsyntax2: currently libsyntax2 parses\n   only a tiny subset of Rust. This should be fixed by porting parsing\n-  functions from libsyntax one by one.\n-  \n+  functions from libsyntax one by one. Take a look at the\n+  [libsyntax parser](https://github.com/rust-lang/rust/blob/6b99adeb11313197f409b4f7c4083c2ceca8a4fe/src/libsyntax/parse/parser.rs)\n+  for \"what to port\" and at the\n+  [Kotlin parser](https://github.com/JetBrains/kotlin/blob/4d951de616b20feca92f3e9cc9679b2de9e65195/compiler/frontend/src/org/jetbrains/kotlin/parsing/KotlinParsing.java)\n+  for \"how to port\".\n+\n * Writing validators: by design, libsyntax2 is very lax about the\n   input. For example, the lexer happily accepts unclosed strings. The\n   idea is that there should be a higher level visitor, which walks the\n   syntax tree after parsing and produces all the warnings. Alas,\n   there's no such visitor yet :( Would you like to write one? :)\n-  \n+\n * Creating tests: it would be tremendously helpful to read each of\n   libsyntax and libsyntax2 parser functions and crate a small separate\n   test cases to cover each and every edge case.\n-  \n+\n * Building stuff with libsyntax2: it would be really cool to compile\n   libsyntax2 to WASM and add *client side* syntax validation to rust\n   playground!\n \n \n Do take a look at the issue tracker, and try to read other docs in\n-this folder.\n+the [./docs] folder!\n+\n+If you don't know where to start, or have *any* questions or suggestions,\n+don't hesitate to chat at [Gitter](https://gitter.im/libsyntax2/Lobby)!", "previous_filename": "docs/CONTRIBUTING.md"}]}