{"sha": "29a4a551eb23969cde9a895d081bee682254974c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YTRhNTUxZWIyMzk2OWNkZTlhODk1ZDA4MWJlZTY4MjI1NDk3NGM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-04-12T10:09:05Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-04-12T10:09:05Z"}, "message": "Rustfmt", "tree": {"sha": "a426c671c3505573a1c5a30e9b75981169326141", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a426c671c3505573a1c5a30e9b75981169326141"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29a4a551eb23969cde9a895d081bee682254974c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29a4a551eb23969cde9a895d081bee682254974c", "html_url": "https://github.com/rust-lang/rust/commit/29a4a551eb23969cde9a895d081bee682254974c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29a4a551eb23969cde9a895d081bee682254974c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53bfc6729ae4a53c8092473452de7a272224df5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/53bfc6729ae4a53c8092473452de7a272224df5d", "html_url": "https://github.com/rust-lang/rust/commit/53bfc6729ae4a53c8092473452de7a272224df5d"}], "stats": {"total": 32, "additions": 7, "deletions": 25}, "files": [{"sha": "9f58db62a1fa63b839104fc570364e80bb2d9712", "filename": "src/backend.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/29a4a551eb23969cde9a895d081bee682254974c/src%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29a4a551eb23969cde9a895d081bee682254974c/src%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbackend.rs?ref=29a4a551eb23969cde9a895d081bee682254974c", "patch": "@@ -142,12 +142,8 @@ pub(crate) fn with_object(sess: &Session, name: &str, f: impl FnOnce(&mut Object\n }\n \n pub(crate) fn make_module(sess: &Session, isa: Box<dyn TargetIsa>, name: String) -> ObjectModule {\n-    let mut builder = ObjectBuilder::new(\n-        isa,\n-        name + \".o\",\n-        cranelift_module::default_libcall_names(),\n-    )\n-    .unwrap();\n+    let mut builder =\n+        ObjectBuilder::new(isa, name + \".o\", cranelift_module::default_libcall_names()).unwrap();\n     // Unlike cg_llvm, cg_clif defaults to disabling -Zfunction-sections. For cg_llvm binary size\n     // is important, while cg_clif cares more about compilation times. Enabling -Zfunction-sections\n     // can easily double the amount of time necessary to perform linking."}, {"sha": "8b7a7caade54d56e02db9ea81e60eb315401a915", "filename": "src/base.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/29a4a551eb23969cde9a895d081bee682254974c/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29a4a551eb23969cde9a895d081bee682254974c/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=29a4a551eb23969cde9a895d081bee682254974c", "patch": "@@ -101,12 +101,7 @@ pub(crate) fn codegen_fn<'tcx>(cx: &mut crate::CodegenCx<'_, 'tcx>, instance: In\n \n     // Perform rust specific optimizations\n     tcx.sess.time(\"optimize clif ir\", || {\n-        crate::optimize::optimize_function(\n-            tcx,\n-            instance,\n-            context,\n-            &mut clif_comments,\n-        );\n+        crate::optimize::optimize_function(tcx, instance, context, &mut clif_comments);\n     });\n \n     // If the return block is not reachable, then the SSA builder may have inserted an `iconst.i128`\n@@ -351,13 +346,7 @@ fn codegen_fn_content(fx: &mut FunctionCx<'_, '_, '_>) {\n                 from_hir_call: _,\n             } => {\n                 fx.tcx.sess.time(\"codegen call\", || {\n-                    crate::abi::codegen_terminator_call(\n-                        fx,\n-                        *fn_span,\n-                        func,\n-                        args,\n-                        *destination,\n-                    )\n+                    crate::abi::codegen_terminator_call(fx, *fn_span, func, args, *destination)\n                 });\n             }\n             TerminatorKind::InlineAsm {"}, {"sha": "5bfe0b3ad494f3f635a6e1596b18e90d7e54ad5f", "filename": "src/driver/aot.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/29a4a551eb23969cde9a895d081bee682254974c/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29a4a551eb23969cde9a895d081bee682254974c/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=29a4a551eb23969cde9a895d081bee682254974c", "patch": "@@ -227,7 +227,8 @@ pub(super) fn run_aot(\n     tcx.sess.abort_if_errors();\n \n     let isa = crate::build_isa(tcx.sess, &backend_config);\n-    let mut allocator_module = crate::backend::make_module(tcx.sess, isa, \"allocator_shim\".to_string());\n+    let mut allocator_module =\n+        crate::backend::make_module(tcx.sess, isa, \"allocator_shim\".to_string());\n     assert_eq!(pointer_ty(tcx), allocator_module.target_config().pointer_type());\n     let mut allocator_unwind_context = UnwindContext::new(tcx, allocator_module.isa(), true);\n     let created_alloc_shim ="}, {"sha": "d31e05bdbd5384c49d3e4f30054baa5151cd7640", "filename": "src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/29a4a551eb23969cde9a895d081bee682254974c/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29a4a551eb23969cde9a895d081bee682254974c/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=29a4a551eb23969cde9a895d081bee682254974c", "patch": "@@ -162,7 +162,6 @@ impl<'m, 'tcx> CodegenCx<'m, 'tcx> {\n     }\n }\n \n-\n pub struct CraneliftCodegenBackend {\n     pub config: Option<BackendConfig>,\n }"}, {"sha": "30e487a99f43113e99700f66c42b6fdd98d51485", "filename": "src/pretty_clif.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/29a4a551eb23969cde9a895d081bee682254974c/src%2Fpretty_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29a4a551eb23969cde9a895d081bee682254974c/src%2Fpretty_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpretty_clif.rs?ref=29a4a551eb23969cde9a895d081bee682254974c", "patch": "@@ -247,10 +247,7 @@ pub(crate) fn write_clif_file<'tcx>(\n             &mut clif_comments,\n             &mut clif,\n             &context.func,\n-            &DisplayFunctionAnnotations {\n-                isa,\n-                value_ranges: value_ranges.as_ref(),\n-            },\n+            &DisplayFunctionAnnotations { isa, value_ranges: value_ranges.as_ref() },\n         )\n         .unwrap();\n "}]}