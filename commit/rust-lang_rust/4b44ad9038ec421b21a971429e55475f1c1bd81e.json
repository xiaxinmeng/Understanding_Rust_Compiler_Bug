{"sha": "4b44ad9038ec421b21a971429e55475f1c1bd81e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNDRhZDkwMzhlYzQyMWIyMWE5NzE0MjllNTU0NzVmMWMxYmQ4MWU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-20T07:28:01Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-20T07:28:13Z"}, "message": "deduplicate slice_from_raw_parts_mut.", "tree": {"sha": "02369c11c68a6082bd79a56daab22a23c18f71be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02369c11c68a6082bd79a56daab22a23c18f71be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b44ad9038ec421b21a971429e55475f1c1bd81e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b44ad9038ec421b21a971429e55475f1c1bd81e", "html_url": "https://github.com/rust-lang/rust/commit/4b44ad9038ec421b21a971429e55475f1c1bd81e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b44ad9038ec421b21a971429e55475f1c1bd81e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1dbf15bb5d06b8213b8ed3c61b0f92faf1c001c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1dbf15bb5d06b8213b8ed3c61b0f92faf1c001c", "html_url": "https://github.com/rust-lang/rust/commit/b1dbf15bb5d06b8213b8ed3c61b0f92faf1c001c"}], "stats": {"total": 38, "additions": 3, "deletions": 35}, "files": [{"sha": "cef41f974e436562fef1aac52e47ef175918175f", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b44ad9038ec421b21a971429e55475f1c1bd81e/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b44ad9038ec421b21a971429e55475f1c1bd81e/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=4b44ad9038ec421b21a971429e55475f1c1bd81e", "patch": "@@ -94,6 +94,7 @@\n #![feature(ptr_offset_from)]\n #![feature(rustc_attrs)]\n #![feature(receiver_trait)]\n+#![feature(slice_from_raw_parts)]\n #![feature(specialization)]\n #![feature(staged_api)]\n #![feature(std_internals)]\n@@ -102,7 +103,6 @@\n #![feature(try_reserve)]\n #![feature(unboxed_closures)]\n #![feature(unicode_internals)]\n-#![feature(untagged_unions)]\n #![feature(unsize)]\n #![feature(unsized_locals)]\n #![feature(allocator_internals)]"}, {"sha": "1e9cd3ff396940d053c093b13ac7a88cb4415612", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4b44ad9038ec421b21a971429e55475f1c1bd81e/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b44ad9038ec421b21a971429e55475f1c1bd81e/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=4b44ad9038ec421b21a971429e55475f1c1bd81e", "patch": "@@ -764,25 +764,9 @@ impl<T: ?Sized> Rc<T> {\n impl<T> Rc<[T]> {\n     // Allocates an `RcBox<[T]>` with the given length.\n     unsafe fn allocate_for_slice(len: usize) -> *mut RcBox<[T]> {\n-        // FIXME(#60667): Deduplicate.\n-        fn slice_from_raw_parts_mut<T>(data: *mut T, len: usize) -> *mut [T] {\n-            #[repr(C)]\n-            union Repr<T> {\n-                rust_mut: *mut [T],\n-                raw: FatPtr<T>,\n-            }\n-\n-            #[repr(C)]\n-            struct FatPtr<T> {\n-                data: *const T,\n-                len: usize,\n-            }\n-            unsafe { Repr { raw: FatPtr { data, len } }.rust_mut }\n-        }\n-\n         Self::allocate_for_unsized(\n             Layout::array::<T>(len).unwrap(),\n-            |mem| slice_from_raw_parts_mut(mem as *mut T, len) as *mut RcBox<[T]>,\n+            |mem| ptr::slice_from_raw_parts_mut(mem as *mut T, len) as *mut RcBox<[T]>,\n         )\n     }\n }"}, {"sha": "07eae9168948715670e0501906fceb09825199c2", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4b44ad9038ec421b21a971429e55475f1c1bd81e/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b44ad9038ec421b21a971429e55475f1c1bd81e/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=4b44ad9038ec421b21a971429e55475f1c1bd81e", "patch": "@@ -652,25 +652,9 @@ impl<T: ?Sized> Arc<T> {\n impl<T> Arc<[T]> {\n     // Allocates an `ArcInner<[T]>` with the given length.\n     unsafe fn allocate_for_slice(len: usize) -> *mut ArcInner<[T]> {\n-        // FIXME(#60667): Deduplicate.\n-        fn slice_from_raw_parts_mut<T>(data: *mut T, len: usize) -> *mut [T] {\n-            #[repr(C)]\n-            union Repr<T> {\n-                rust_mut: *mut [T],\n-                raw: FatPtr<T>,\n-            }\n-\n-            #[repr(C)]\n-            struct FatPtr<T> {\n-                data: *const T,\n-                len: usize,\n-            }\n-            unsafe { Repr { raw: FatPtr { data, len } }.rust_mut }\n-        }\n-\n         Self::allocate_for_unsized(\n             Layout::array::<T>(len).unwrap(),\n-            |mem| slice_from_raw_parts_mut(mem as *mut T, len) as *mut ArcInner<[T]>,\n+            |mem| ptr::slice_from_raw_parts_mut(mem as *mut T, len) as *mut ArcInner<[T]>,\n         )\n     }\n }"}]}