{"sha": "8dad2ced7ab104cac44a918d3c23766053df83aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYWQyY2VkN2FiMTA0Y2FjNDRhOTE4ZDNjMjM3NjYwNTNkZjgzYWE=", "commit": {"author": {"name": "Pascal Hertleif", "email": "killercup@gmail.com", "date": "2016-07-15T11:08:04Z"}, "committer": {"name": "Pascal Hertleif", "email": "killercup@gmail.com", "date": "2016-07-15T11:08:04Z"}, "message": "HMTL Docs: Add Configuration, Fix Example Section", "tree": {"sha": "690905a099ec3cef22842b129e91cc66a3d7e151", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/690905a099ec3cef22842b129e91cc66a3d7e151"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dad2ced7ab104cac44a918d3c23766053df83aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dad2ced7ab104cac44a918d3c23766053df83aa", "html_url": "https://github.com/rust-lang/rust/commit/8dad2ced7ab104cac44a918d3c23766053df83aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dad2ced7ab104cac44a918d3c23766053df83aa/comments", "author": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbbd0a5475095962e8eaeef57d9ad62f5ba018fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbbd0a5475095962e8eaeef57d9ad62f5ba018fd", "html_url": "https://github.com/rust-lang/rust/commit/bbbd0a5475095962e8eaeef57d9ad62f5ba018fd"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "9ef06e6a2bacc9125ef6fbfe825849bb9cf9b486", "filename": "util/export.py", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8dad2ced7ab104cac44a918d3c23766053df83aa/util%2Fexport.py", "raw_url": "https://github.com/rust-lang/rust/raw/8dad2ced7ab104cac44a918d3c23766053df83aa/util%2Fexport.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fexport.py?ref=8dad2ced7ab104cac44a918d3c23766053df83aa", "patch": "@@ -7,19 +7,34 @@\n level_re = re.compile(r'''(Forbid|Deny|Warn|Allow)''')\n conf_re = re.compile(r'''define_Conf! {\\n([^}]*)\\n}''', re.MULTILINE)\n confvar_re = re.compile(r'''/// Lint: (\\w+). (.*).*\\n *\\(\"([^\"]*)\", (?:[^,]*), (.*) => (.*)\\),''')\n-lint_subheadline = re.compile(r'''^\\*\\*([\\w\\s]+)[:?.!]\\*\\*(.*)''')\n+lint_subheadline = re.compile(r'''^\\*\\*([\\w\\s]+?)[:?.!]?\\*\\*(.*)''')\n+\n+conf_template = \"\"\"\n+This lint has the following configuration variables:\n+\n+* `%s: %s`: %s (defaults to `%s`).\n+\"\"\"\n \n # TODO: actual logging\n def warn(*args): print(args)\n def debug(*args): print(args)\n def info(*args): print(args)\n \n def parse_path(p=\"clippy_lints/src\"):\n-    d = []\n+    lints = []\n     for f in os.listdir(p):\n         if f.endswith(\".rs\"):\n-            parse_file(d, os.path.join(p, f))\n-    return (d, parse_conf(p))\n+            parse_file(lints, os.path.join(p, f))\n+\n+    conf = parse_conf(p)\n+    info(conf)\n+\n+    for lint_id in conf:\n+        lint = next(l for l in lints if l['id'] == lint_id)\n+        if lint:\n+            lint['docs']['Configuration'] = (conf_template % conf[lint_id]).strip()\n+\n+    return lints\n \n \n def parse_conf(p):\n@@ -120,7 +135,7 @@ def parse_file(d, f):\n                     comment = True\n \n def main():\n-    (lints, config) = parse_path()\n+    lints = parse_path()\n     info(\"got %s lints\" % len(lints))\n     with open(\"util/gh-pages/lints.json\", \"w\") as file:\n         json.dump(lints, file, indent=2)"}]}