{"sha": "cd94e9121b082370a5b85d6ba431c04b79db7e10", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkOTRlOTEyMWIwODIzNzBhNWI4NWQ2YmE0MzFjMDRiNzlkYjdlMTA=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-07-07T20:13:58Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-04T20:32:41Z"}, "message": "std: cleanup os and str tests", "tree": {"sha": "ef9e0db03d029f8ec73722003e350a149ee0d515", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef9e0db03d029f8ec73722003e350a149ee0d515"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd94e9121b082370a5b85d6ba431c04b79db7e10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd94e9121b082370a5b85d6ba431c04b79db7e10", "html_url": "https://github.com/rust-lang/rust/commit/cd94e9121b082370a5b85d6ba431c04b79db7e10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd94e9121b082370a5b85d6ba431c04b79db7e10/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dca9ff9a13b0ca04160828413e4550225fb1e04f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dca9ff9a13b0ca04160828413e4550225fb1e04f", "html_url": "https://github.com/rust-lang/rust/commit/dca9ff9a13b0ca04160828413e4550225fb1e04f"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "f17a59db38f5a4030f189bf0f0adb28d4c7ffce2", "filename": "src/libstd/os.rs", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/cd94e9121b082370a5b85d6ba431c04b79db7e10/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd94e9121b082370a5b85d6ba431c04b79db7e10/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=cd94e9121b082370a5b85d6ba431c04b79db7e10", "patch": "@@ -1934,39 +1934,39 @@ mod tests {\n     #[test]\n     fn copy_file_ok() {\n         unsafe {\n-          let tempdir = getcwd(); // would like to use $TMPDIR,\n-                                  // doesn't seem to work on Linux\n-          assert!((tempdir.to_str().len() > 0u));\n-          let input = tempdir.push(\"in.txt\");\n-          let out = tempdir.push(\"out.txt\");\n+            let tempdir = getcwd(); // would like to use $TMPDIR,\n+                                    // doesn't seem to work on Linux\n+            assert!((tempdir.to_str().len() > 0u));\n+            let input = tempdir.push(\"in.txt\");\n+            let out = tempdir.push(\"out.txt\");\n \n-          /* Write the temp input file */\n+            /* Write the temp input file */\n             let ostream = do input.to_str().as_c_str |fromp| {\n                 do \"w+b\".as_c_str |modebuf| {\n                     libc::fopen(fromp, modebuf)\n                 }\n-          };\n-          assert!((ostream as uint != 0u));\n-          let s = ~\"hello\";\n-          let mut buf = s.to_owned().to_c_str();\n-          let len = buf.len();\n-          do buf.as_mut_buf |b, _len| {\n-              assert_eq!(libc::fwrite(b as *c_void, 1u as size_t,\n-                                      (s.len() + 1u) as size_t, ostream),\n-                         len as size_t)\n-          }\n-          assert_eq!(libc::fclose(ostream), (0u as c_int));\n-          let in_mode = input.get_mode();\n-          let rs = os::copy_file(&input, &out);\n-          if (!os::path_exists(&input)) {\n-            fail!(\"%s doesn't exist\", input.to_str());\n-          }\n-          assert!((rs));\n-          let rslt = run::process_status(\"diff\", [input.to_str(), out.to_str()]);\n-          assert_eq!(rslt, 0);\n-          assert_eq!(out.get_mode(), in_mode);\n-          assert!((remove_file(&input)));\n-          assert!((remove_file(&out)));\n+            };\n+            assert!((ostream as uint != 0u));\n+            let s = ~\"hello\";\n+            let mut buf = s.to_owned().to_c_str();\n+            let len = buf.len();\n+            do buf.as_mut_buf |b, _len| {\n+                assert_eq!(libc::fwrite(b as *c_void, 1u as size_t,\n+                                        (s.len() + 1u) as size_t, ostream),\n+                           len as size_t)\n+            }\n+            assert_eq!(libc::fclose(ostream), (0u as c_int));\n+            let in_mode = input.get_mode();\n+            let rs = os::copy_file(&input, &out);\n+            if (!os::path_exists(&input)) {\n+                fail!(\"%s doesn't exist\", input.to_str());\n+            }\n+            assert!((rs));\n+            let rslt = run::process_status(\"diff\", [input.to_str(), out.to_str()]);\n+            assert_eq!(rslt, 0);\n+            assert_eq!(out.get_mode(), in_mode);\n+            assert!((remove_file(&input)));\n+            assert!((remove_file(&out)));\n         }\n     }\n "}]}