{"sha": "d21f41ce6b28cb7a96cbbaa6b5f7373853a1ef78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMWY0MWNlNmIyOGNiN2E5NmNiYmFhNmI1ZjczNzM4NTNhMWVmNzg=", "commit": {"author": {"name": "Oliver Schneider", "email": "github6541940@oli-obk.de", "date": "2015-05-23T17:03:18Z"}, "committer": {"name": "Oliver Schneider", "email": "github6541940@oli-obk.de", "date": "2015-05-23T17:03:18Z"}, "message": "Rollup merge of #25702 - killercup:rustdoc/search-primitives, r=Gankro\n\nThis minimally changes rustdoc's search as described in #25167.\r\n\r\nAdditionally, I also cleaned up some parts of the JS code.\r\n\r\nThere is one more change I made: After each result for a primitive type, I added \"(Overview of primitive type)\". This further differentiates the result from the module (previously, the only difference was that the module's link was blue). I'm not this is the way to go (this seems to be the only place where we do this) and it's no problem for me to remove that commit.\r\n\r\n![std__str_-_rust](https://cloud.githubusercontent.com/assets/20063/7770589/67e8cb26-0090-11e5-8f99-c2a3af9fa37f.png)\r\n\r\ncc @steveklabnik (it concerns docs) and @alexcrichton (who made changes to rustdoc previously)", "tree": {"sha": "91814a7754aff42f03aab3e66bd320e53ed15d52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91814a7754aff42f03aab3e66bd320e53ed15d52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d21f41ce6b28cb7a96cbbaa6b5f7373853a1ef78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d21f41ce6b28cb7a96cbbaa6b5f7373853a1ef78", "html_url": "https://github.com/rust-lang/rust/commit/d21f41ce6b28cb7a96cbbaa6b5f7373853a1ef78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d21f41ce6b28cb7a96cbbaa6b5f7373853a1ef78/comments", "author": null, "committer": null, "parents": [{"sha": "a72ddbc2d0dfa8201f6fe47607aad127b600c52a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a72ddbc2d0dfa8201f6fe47607aad127b600c52a", "html_url": "https://github.com/rust-lang/rust/commit/a72ddbc2d0dfa8201f6fe47607aad127b600c52a"}, {"sha": "ec60d9f20cfdfa158c58a27c2bce38ff08962016", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec60d9f20cfdfa158c58a27c2bce38ff08962016", "html_url": "https://github.com/rust-lang/rust/commit/ec60d9f20cfdfa158c58a27c2bce38ff08962016"}], "stats": {"total": 126, "additions": 66, "deletions": 60}, "files": [{"sha": "575322e63526d531b10611eb3cd6b1aeb0f93759", "filename": "src/librustdoc/html/static/main.css", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d21f41ce6b28cb7a96cbbaa6b5f7373853a1ef78/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css", "raw_url": "https://github.com/rust-lang/rust/raw/d21f41ce6b28cb7a96cbbaa6b5f7373853a1ef78/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css?ref=d21f41ce6b28cb7a96cbbaa6b5f7373853a1ef78", "patch": "@@ -443,6 +443,8 @@ a {\n .content .search-results td:first-child { padding-right: 0; }\n .content .search-results td:first-child a { padding-right: 10px; }\n \n+tr.result span.primitive::after { content: ' (primitive type)'; font-style: italic; }\n+\n #help {\n     background: #e9e9e9;\n     border-radius: 4px;"}, {"sha": "7f8f40ff08a4d71e108b024adccc00b2b7be80aa", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 64, "deletions": 60, "changes": 124, "blob_url": "https://github.com/rust-lang/rust/blob/d21f41ce6b28cb7a96cbbaa6b5f7373853a1ef78/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/d21f41ce6b28cb7a96cbbaa6b5f7373853a1ef78/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=d21f41ce6b28cb7a96cbbaa6b5f7373853a1ef78", "patch": "@@ -13,7 +13,6 @@\n \n (function() {\n     \"use strict\";\n-    var resizeTimeout, interval;\n \n     // This mapping table should match the discriminants of\n     // `rustdoc::html::item_type::ItemType` type in Rust.\n@@ -37,6 +36,9 @@\n                      \"constant\",\n                      \"associatedconstant\"];\n \n+    // used for special search precedence\n+    var TY_PRIMITIVE = itemTypes.indexOf(\"primitive\");\n+\n     $('.js-only').removeClass('js-only');\n \n     function getQueryStringParams() {\n@@ -64,7 +66,7 @@\n             if ($('#' + from).length === 0) {\n                 return;\n             }\n-            if (ev === null) $('#' + from)[0].scrollIntoView();\n+            if (ev === null) { $('#' + from)[0].scrollIntoView(); };\n             $('.line-numbers span').removeClass('line-highlighted');\n             for (i = from; i <= to; ++i) {\n                 $('#' + i).addClass('line-highlighted');\n@@ -74,7 +76,7 @@\n     highlightSourceLines(null);\n     $(window).on('hashchange', highlightSourceLines);\n \n-    $(document).on('keyup', function(e) {\n+    $(document).on('keyup', function handleKeyboardShortcut(e) {\n         if (document.activeElement.tagName === 'INPUT') {\n             return;\n         }\n@@ -133,29 +135,28 @@\n         return function(s1, s2) {\n             if (s1 === s2) {\n                 return 0;\n-            } else {\n-                var s1_len = s1.length, s2_len = s2.length;\n-                if (s1_len && s2_len) {\n-                    var i1 = 0, i2 = 0, a, b, c, c2, row = row2;\n-                    while (i1 < s1_len)\n-                        row[i1] = ++i1;\n-                    while (i2 < s2_len) {\n-                        c2 = s2.charCodeAt(i2);\n-                        a = i2;\n-                        ++i2;\n-                        b = i2;\n-                        for (i1 = 0; i1 < s1_len; ++i1) {\n-                            c = a + (s1.charCodeAt(i1) !== c2 ? 1 : 0);\n-                            a = row[i1];\n-                            b = b < a ? (b < c ? b + 1 : c) : (a < c ? a + 1 : c);\n-                            row[i1] = b;\n-                        }\n+            }\n+            var s1_len = s1.length, s2_len = s2.length;\n+            if (s1_len && s2_len) {\n+                var i1 = 0, i2 = 0, a, b, c, c2, row = row2;\n+                while (i1 < s1_len) {\n+                    row[i1] = ++i1;\n+                }\n+                while (i2 < s2_len) {\n+                    c2 = s2.charCodeAt(i2);\n+                    a = i2;\n+                    ++i2;\n+                    b = i2;\n+                    for (i1 = 0; i1 < s1_len; ++i1) {\n+                        c = a + (s1.charCodeAt(i1) !== c2 ? 1 : 0);\n+                        a = row[i1];\n+                        b = b < a ? (b < c ? b + 1 : c) : (a < c ? a + 1 : c);\n+                        row[i1] = b;\n                     }\n-                    return b;\n-                } else {\n-                    return s1_len + s2_len;\n                 }\n+                return b;\n             }\n+            return s1_len + s2_len;\n         };\n     })();\n \n@@ -187,7 +188,7 @@\n                 results = [],\n                 split = valLower.split(\"::\");\n \n-            //remove empty keywords\n+            // remove empty keywords\n             for (var j = 0; j < split.length; ++j) {\n                 split[j].toLowerCase();\n                 if (split[j] === \"\") {\n@@ -286,58 +287,63 @@\n                 return [];\n             }\n \n-            results.sort(function(aaa, bbb) {\n+            results.sort(function sortResults(aaa, bbb) {\n                 var a, b;\n \n                 // Sort by non levenshtein results and then levenshtein results by the distance\n                 // (less changes required to match means higher rankings)\n                 a = (aaa.lev);\n                 b = (bbb.lev);\n-                if (a !== b) return a - b;\n+                if (a !== b) { return a - b; }\n \n                 // sort by crate (non-current crate goes later)\n                 a = (aaa.item.crate !== window.currentCrate);\n                 b = (bbb.item.crate !== window.currentCrate);\n-                if (a !== b) return a - b;\n+                if (a !== b) { return a - b; }\n \n                 // sort by exact match (mismatch goes later)\n                 a = (aaa.word !== valLower);\n                 b = (bbb.word !== valLower);\n-                if (a !== b) return a - b;\n+                if (a !== b) { return a - b; }\n \n                 // sort by item name length (longer goes later)\n                 a = aaa.word.length;\n                 b = bbb.word.length;\n-                if (a !== b) return a - b;\n+                if (a !== b) { return a - b; }\n \n                 // sort by item name (lexicographically larger goes later)\n                 a = aaa.word;\n                 b = bbb.word;\n-                if (a !== b) return (a > b ? +1 : -1);\n+                if (a !== b) { return (a > b ? +1 : -1); }\n \n                 // sort by index of keyword in item name (no literal occurrence goes later)\n                 a = (aaa.index < 0);\n                 b = (bbb.index < 0);\n-                if (a !== b) return a - b;\n+                if (a !== b) { return a - b; }\n                 // (later literal occurrence, if any, goes later)\n                 a = aaa.index;\n                 b = bbb.index;\n-                if (a !== b) return a - b;\n+                if (a !== b) { return a - b; }\n+\n+                // special precedence for primitive pages\n+                if ((aaa.item.ty === TY_PRIMITIVE) && (bbb.item.ty !== TY_PRIMITIVE)) {\n+                    return -1;\n+                }\n \n                 // sort by description (no description goes later)\n                 a = (aaa.item.desc === '');\n                 b = (bbb.item.desc === '');\n-                if (a !== b) return a - b;\n+                if (a !== b) { return a - b; }\n \n                 // sort by type (later occurrence in `itemTypes` goes later)\n                 a = aaa.item.ty;\n                 b = bbb.item.ty;\n-                if (a !== b) return a - b;\n+                if (a !== b) { return a - b; }\n \n                 // sort by path (lexicographically larger goes later)\n                 a = aaa.item.path;\n                 b = bbb.item.path;\n-                if (a !== b) return (a > b ? +1 : -1);\n+                if (a !== b) { return (a > b ? +1 : -1); }\n \n                 // que sera, sera\n                 return 0;\n@@ -388,7 +394,7 @@\n          * @return {[boolean]}       [Whether the result is valid or not]\n          */\n         function validateResult(name, path, keys, parent) {\n-            for (var i=0; i < keys.length; ++i) {\n+            for (var i = 0; i < keys.length; ++i) {\n                 // each check is for validation so we negate the conditions and invalidate\n                 if (!(\n                     // check for an exact name match\n@@ -423,7 +429,7 @@\n                 raw: raw,\n                 query: query,\n                 type: type,\n-                id: query + type,\n+                id: query + type\n             };\n         }\n \n@@ -432,7 +438,7 @@\n \n             $results.on('click', function() {\n                 var dst = $(this).find('a')[0];\n-                if (window.location.pathname == dst.pathname) {\n+                if (window.location.pathname === dst.pathname) {\n                     $('#search').addClass('hidden');\n                     $('#main').removeClass('hidden');\n                     document.location.href = dst.href;\n@@ -595,7 +601,7 @@\n \n         function itemTypeFromName(typename) {\n             for (var i = 0; i < itemTypes.length; ++i) {\n-                if (itemTypes[i] === typename) return i;\n+                if (itemTypes[i] === typename) { return i; }\n             }\n             return -1;\n         }\n@@ -604,7 +610,7 @@\n             searchIndex = [];\n             var searchWords = [];\n             for (var crate in rawSearchIndex) {\n-                if (!rawSearchIndex.hasOwnProperty(crate)) { continue }\n+                if (!rawSearchIndex.hasOwnProperty(crate)) { continue; }\n \n                 // an array of [(Number) item type,\n                 //              (String) name,\n@@ -690,32 +696,31 @@\n         }\n \n         function plainSummaryLine(markdown) {\n-            var str = markdown.replace(/\\n/g, ' ')\n-            str = str.replace(/'/g, \"\\'\")\n-            str = str.replace(/^#+? (.+?)/, \"$1\")\n-            str = str.replace(/\\[(.*?)\\]\\(.*?\\)/g, \"$1\")\n-            str = str.replace(/\\[(.*?)\\]\\[.*?\\]/g, \"$1\")\n-            return str;\n+            markdown.replace(/\\n/g, ' ')\n+            .replace(/'/g, \"\\'\")\n+            .replace(/^#+? (.+?)/, \"$1\")\n+            .replace(/\\[(.*?)\\]\\(.*?\\)/g, \"$1\")\n+            .replace(/\\[(.*?)\\]\\[.*?\\]/g, \"$1\");\n         }\n \n         index = buildIndex(rawSearchIndex);\n         startSearch();\n \n         // Draw a convenient sidebar of known crates if we have a listing\n-        if (rootPath == '../') {\n+        if (rootPath === '../') {\n             var sidebar = $('.sidebar');\n             var div = $('<div>').attr('class', 'block crate');\n             div.append($('<h2>').text('Crates'));\n \n             var crates = [];\n             for (var crate in rawSearchIndex) {\n-                if (!rawSearchIndex.hasOwnProperty(crate)) { continue }\n+                if (!rawSearchIndex.hasOwnProperty(crate)) { continue; }\n                 crates.push(crate);\n             }\n             crates.sort();\n             for (var i = 0; i < crates.length; ++i) {\n                 var klass = 'crate';\n-                if (crates[i] == window.currentCrate) {\n+                if (crates[i] === window.currentCrate) {\n                     klass += ' current';\n                 }\n                 if (rawSearchIndex[crates[i]].items[0]) {\n@@ -738,7 +743,7 @@\n \n         function block(shortty, longty) {\n             var filtered = items[shortty];\n-            if (!filtered) return;\n+            if (!filtered) { return; }\n \n             var div = $('<div>').attr('class', 'block ' + shortty);\n             div.append($('<h2>').text(longty));\n@@ -749,7 +754,7 @@\n                 var desc = item[1]; // can be null\n \n                 var klass = shortty;\n-                if (name === current.name && shortty == current.ty) {\n+                if (name === current.name && shortty === current.ty) {\n                     klass += ' current';\n                 }\n                 var path;\n@@ -779,7 +784,7 @@\n         var list = $('#implementors-list');\n         var libs = Object.getOwnPropertyNames(imp);\n         for (var i = 0; i < libs.length; ++i) {\n-            if (libs[i] == currentCrate) continue;\n+            if (libs[i] === currentCrate) { continue; }\n             var structs = imp[libs[i]];\n             for (var j = 0; j < structs.length; ++j) {\n                 var code = $('<code>').append(structs[j]);\n@@ -811,11 +816,10 @@\n         if (sectionIsCollapsed) {\n             // button will expand the section\n             return \"+\";\n-        } else {\n-            // button will collapse the section\n-            // note that this text is also set in the HTML template in render.rs\n-            return \"\\u2212\"; // \"\\u2212\" is '\u2212' minus sign\n         }\n+        // button will collapse the section\n+        // note that this text is also set in the HTML template in render.rs\n+        return \"\\u2212\"; // \"\\u2212\" is '\u2212' minus sign\n     }\n \n     $(\"#toggle-all-docs\").on(\"click\", function() {\n@@ -847,12 +851,12 @@\n         }\n         if (relatedDoc.is(\".docblock\")) {\n             if (relatedDoc.is(\":visible\")) {\n-                relatedDoc.slideUp({duration:'fast', easing:'linear'});\n+                relatedDoc.slideUp({duration: 'fast', easing: 'linear'});\n                 toggle.parent(\".toggle-wrapper\").addClass(\"collapsed\");\n                 toggle.children(\".inner\").text(labelForToggleButton(true));\n                 toggle.children(\".toggle-label\").fadeIn();\n             } else {\n-                relatedDoc.slideDown({duration:'fast', easing:'linear'});\n+                relatedDoc.slideDown({duration: 'fast', easing: 'linear'});\n                 toggle.parent(\".toggle-wrapper\").removeClass(\"collapsed\");\n                 toggle.children(\".inner\").text(labelForToggleButton(false));\n                 toggle.children(\".toggle-label\").hide();\n@@ -877,7 +881,7 @@\n                 $('<span/>', {'class': 'toggle-label'})\n                     .css('display', 'none')\n                     .html('&nbsp;Expand&nbsp;description'));\n-        var wrapper =  $(\"<div class='toggle-wrapper'>\").append(mainToggle);\n+        var wrapper = $(\"<div class='toggle-wrapper'>\").append(mainToggle);\n         $(\"#main > .docblock\").before(wrapper);\n     });\n \n@@ -894,7 +898,7 @@\n         }\n \n         return function(ev) {\n-            var cur_id = parseInt(ev.target.id);\n+            var cur_id = parseInt(ev.target.id, 10);\n \n             if (ev.shiftKey && prev_id) {\n                 if (prev_id > cur_id) {"}]}