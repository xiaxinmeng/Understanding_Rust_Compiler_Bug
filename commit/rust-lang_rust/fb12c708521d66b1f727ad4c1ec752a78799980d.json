{"sha": "fb12c708521d66b1f727ad4c1ec752a78799980d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMTJjNzA4NTIxZDY2YjFmNzI3YWQ0YzFlYzc1MmE3ODc5OTk4MGQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-09T14:47:38Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-27T16:05:57Z"}, "message": "rustc, rustc_passes: don't depend on syntax_expand.\n\nThis is done by moving some data definitions to syntax::expand.", "tree": {"sha": "45db802c6ea92c6b7bcce21b52dd596b7c2c0d17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45db802c6ea92c6b7bcce21b52dd596b7c2c0d17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb12c708521d66b1f727ad4c1ec752a78799980d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb12c708521d66b1f727ad4c1ec752a78799980d", "html_url": "https://github.com/rust-lang/rust/commit/fb12c708521d66b1f727ad4c1ec752a78799980d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb12c708521d66b1f727ad4c1ec752a78799980d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16329402bff5115135804580386ffa8a9e89f1f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/16329402bff5115135804580386ffa8a9e89f1f9", "html_url": "https://github.com/rust-lang/rust/commit/16329402bff5115135804580386ffa8a9e89f1f9"}], "stats": {"total": 185, "additions": 94, "deletions": 91}, "files": [{"sha": "4b264ef3f9fafab5380c75e73e47df034c5c7f6f", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -3135,7 +3135,6 @@ dependencies = [\n  \"serialize\",\n  \"smallvec\",\n  \"syntax\",\n- \"syntax_expand\",\n  \"syntax_pos\",\n ]\n \n@@ -3451,7 +3450,6 @@ dependencies = [\n  \"rustc_target\",\n  \"serialize\",\n  \"syntax\",\n- \"syntax_expand\",\n  \"syntax_pos\",\n  \"tempfile\",\n ]\n@@ -3707,7 +3705,6 @@ dependencies = [\n  \"rustc_index\",\n  \"rustc_target\",\n  \"syntax\",\n- \"syntax_expand\",\n  \"syntax_pos\",\n ]\n "}, {"sha": "9d26ff6001767dcd1e97c6884271a3f397b7770b", "filename": "src/librustc/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FCargo.toml?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -29,7 +29,6 @@ rustc_index = { path = \"../librustc_index\" }\n errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n syntax = { path = \"../libsyntax\" }\n-syntax_expand = { path = \"../libsyntax_expand\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n backtrace = \"0.3.3\"\n parking_lot = \"0.9\""}, {"sha": "d4d7af92fe359593f9516d83011d45ea74be5ce1", "filename": "src/librustc/hir/def.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fhir%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fhir%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -6,8 +6,8 @@ use crate::ty;\n use crate::util::nodemap::DefIdMap;\n \n use syntax::ast;\n-use syntax_expand::base::MacroKind;\n use syntax::ast::NodeId;\n+use syntax_pos::hygiene::MacroKind;\n use syntax_pos::Span;\n use rustc_macros::HashStable;\n "}, {"sha": "12ab44515c38d03b6e21102c743714b04b38908c", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -64,7 +64,7 @@ use syntax::ast;\n use syntax::ptr::P as AstP;\n use syntax::ast::*;\n use syntax::errors;\n-use syntax_expand::base::SpecialDerives;\n+use syntax::expand::SpecialDerives;\n use syntax::print::pprust;\n use syntax::parse::token::{self, Nonterminal, Token};\n use syntax::tokenstream::{TokenStream, TokenTree};"}, {"sha": "9da87090c79bb75bdfb17ca2b3449045ca78dfe4", "filename": "src/librustc/hir/lowering/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -18,7 +18,7 @@ use smallvec::SmallVec;\n use syntax::attr;\n use syntax::ast::*;\n use syntax::visit::{self, Visitor};\n-use syntax_expand::base::SpecialDerives;\n+use syntax::expand::SpecialDerives;\n use syntax::source_map::{respan, DesugaringKind, Spanned};\n use syntax::symbol::{kw, sym};\n use syntax_pos::Span;"}, {"sha": "e9970e30bf9e5d716a33eff2839567be8dc61324", "filename": "src/librustc/hir/map/def_collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -2,10 +2,10 @@ use crate::hir::map::definitions::*;\n use crate::hir::def_id::DefIndex;\n \n use syntax::ast::*;\n-use syntax_expand::hygiene::ExpnId;\n use syntax::visit;\n use syntax::symbol::{kw, sym};\n use syntax::parse::token::{self, Token};\n+use syntax_pos::hygiene::ExpnId;\n use syntax_pos::Span;\n \n /// Creates `DefId`s for nodes in the AST."}, {"sha": "4e163314f6b07de17d6279962cf7d0928a518020", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -17,8 +17,8 @@ use std::borrow::Borrow;\n use std::fmt::Write;\n use std::hash::Hash;\n use syntax::ast;\n-use syntax_expand::hygiene::ExpnId;\n-use syntax::symbol::{Symbol, sym};\n+use syntax_pos::symbol::{Symbol, sym};\n+use syntax_pos::hygiene::ExpnId;\n use syntax_pos::{Span, DUMMY_SP};\n \n /// The `DefPathTable` maps `DefIndex`es to `DefKey`s and vice versa."}, {"sha": "cd36944253dbbdc492e94f2ab36f4c9b0e52c994", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -20,7 +20,7 @@ use rustc_data_structures::svh::Svh;\n use rustc_index::vec::IndexVec;\n use syntax::ast::{self, Name, NodeId};\n use syntax::source_map::Spanned;\n-use syntax_expand::base::MacroKind;\n+use syntax_pos::hygiene::MacroKind;\n use syntax_pos::{Span, DUMMY_SP};\n \n pub mod blocks;"}, {"sha": "957dab39414f04e4790e6edbd5cde05e424deb3e", "filename": "src/librustc/ich/hcx.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fhcx.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -13,11 +13,10 @@ use std::cell::RefCell;\n \n use syntax::ast;\n use syntax::source_map::SourceMap;\n-use syntax_expand::hygiene::SyntaxContext;\n use syntax::symbol::Symbol;\n use syntax::tokenstream::DelimSpan;\n use syntax_pos::{Span, DUMMY_SP};\n-use syntax_pos::hygiene;\n+use syntax_pos::hygiene::{self, SyntaxContext};\n \n use rustc_data_structures::stable_hasher::{\n     HashStable, StableHasher, ToStableHashKey,"}, {"sha": "51aa79078f2fc3ad89bb97b1d45494c884990b4f", "filename": "src/librustc/ich/impls_syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_syntax.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -60,7 +60,7 @@ impl_stable_hash_for!(enum ::syntax::ast::AsmDialect {\n     Intel\n });\n \n-impl_stable_hash_for!(enum ::syntax_expand::base::MacroKind {\n+impl_stable_hash_for!(enum ::syntax_pos::hygiene::MacroKind {\n     Bang,\n     Attr,\n     Derive,"}, {"sha": "4da146b1e5d57dedd77167ee25ab2fe7fba9eb7b", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -39,8 +39,8 @@ use syntax::ast;\n use syntax::source_map::{MultiSpan, ExpnKind, DesugaringKind};\n use syntax::early_buffered_lints::BufferedEarlyLintId;\n use syntax::edition::Edition;\n-use syntax_expand::base::MacroKind;\n use syntax::symbol::{Symbol, sym};\n+use syntax_pos::hygiene::MacroKind;\n use syntax_pos::Span;\n \n pub use crate::lint::context::{LateContext, EarlyContext, LintContext, LintStore,"}, {"sha": "8bf4765111d36cae823d9477b95e50afa7a6fc6b", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -24,7 +24,7 @@ use errors::emitter::HumanReadableErrorType;\n use errors::annotate_snippet_emitter_writer::{AnnotateSnippetEmitterWriter};\n use syntax::ast::{self, NodeId};\n use syntax::edition::Edition;\n-use syntax_expand::allocator::AllocatorKind;\n+use syntax::expand::allocator::AllocatorKind;\n use syntax::feature_gate::{self, AttributeType};\n use syntax::json::JsonEmitter;\n use syntax::source_map;"}, {"sha": "1353fe89017c41becb6cdbcbfc47dd3f65088463", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -46,8 +46,8 @@ use std::{mem, ptr};\n use std::ops::Range;\n use syntax::ast::{self, Name, Ident, NodeId};\n use syntax::attr;\n-use syntax_expand::hygiene::ExpnId;\n-use syntax::symbol::{kw, sym, Symbol};\n+use syntax_pos::symbol::{kw, sym, Symbol};\n+use syntax_pos::hygiene::ExpnId;\n use syntax_pos::Span;\n \n use smallvec;"}, {"sha": "11b6e0befa1b10fb28c35c3f1297a1d419ded267", "filename": "src/librustc_codegen_llvm/allocator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_codegen_llvm%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_codegen_llvm%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fallocator.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -3,7 +3,7 @@ use std::ffi::CString;\n use crate::attributes;\n use libc::c_uint;\n use rustc::ty::TyCtxt;\n-use syntax_expand::allocator::{AllocatorKind, AllocatorTy, ALLOCATOR_METHODS};\n+use syntax::expand::allocator::{AllocatorKind, AllocatorTy, ALLOCATOR_METHODS};\n \n use crate::ModuleLlvm;\n use crate::llvm::{self, False, True};"}, {"sha": "2ad6c28cd0838d2c24b58b9e5b5b19f5ebda4228", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -39,7 +39,6 @@ extern crate rustc_driver as _;\n \n #[macro_use] extern crate log;\n extern crate syntax;\n-extern crate syntax_expand;\n extern crate syntax_pos;\n extern crate rustc_errors as errors;\n \n@@ -49,7 +48,7 @@ use rustc_codegen_ssa::back::lto::{SerializedModule, LtoModuleCodegen, ThinModul\n use rustc_codegen_ssa::CompiledModule;\n use errors::{FatalError, Handler};\n use rustc::dep_graph::WorkProduct;\n-use syntax_expand::allocator::AllocatorKind;\n+use syntax::expand::allocator::AllocatorKind;\n pub use llvm_util::target_features;\n use std::any::Any;\n use std::sync::Arc;"}, {"sha": "c7d09a423d5e3b7c2ec9aef13a13a4480c66c811", "filename": "src/librustc_codegen_ssa/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_codegen_ssa%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_codegen_ssa%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2FCargo.toml?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -21,7 +21,6 @@ tempfile = \"3.1\"\n \n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n syntax = { path = \"../libsyntax\" }\n-syntax_expand = { path = \"../libsyntax_expand\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n rustc = { path = \"../librustc\" }\n rustc_apfloat = { path = \"../librustc_apfloat\" }"}, {"sha": "9443f225723788faaac36c3849ea27ab752d8027", "filename": "src/librustc_codegen_ssa/back/symbol_export.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -14,7 +14,7 @@ use rustc::ty::query::Providers;\n use rustc::ty::subst::SubstsRef;\n use rustc::util::nodemap::{FxHashMap, DefIdMap};\n use rustc_index::vec::IndexVec;\n-use syntax_expand::allocator::ALLOCATOR_METHODS;\n+use syntax::expand::allocator::ALLOCATOR_METHODS;\n \n pub type ExportedSymbols = FxHashMap<\n     CrateNum,"}, {"sha": "b302b9ae7f0e4a4b9997cf10dcb6234c25e4e5b2", "filename": "src/librustc_codegen_ssa/back/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -27,7 +27,7 @@ use rustc_errors::{Handler, Level, FatalError, DiagnosticId, SourceMapperDyn};\n use rustc_errors::emitter::{Emitter};\n use rustc_target::spec::MergeFunctions;\n use syntax::attr;\n-use syntax_expand::hygiene::ExpnId;\n+use syntax_pos::hygiene::ExpnId;\n use syntax_pos::symbol::{Symbol, sym};\n use jobserver::{Client, Acquired};\n "}, {"sha": "8ab8243afdab7c43f88038d0abffd89fd53fc773", "filename": "src/librustc_codegen_ssa/traits/backend.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -9,7 +9,7 @@ use rustc::ty::TyCtxt;\n use rustc_codegen_utils::codegen_backend::CodegenBackend;\n use std::sync::Arc;\n use std::sync::mpsc;\n-use syntax_expand::allocator::AllocatorKind;\n+use syntax::expand::allocator::AllocatorKind;\n use syntax_pos::symbol::Symbol;\n \n pub trait BackendTypes {"}, {"sha": "b8593bd91990e0efac2c283fe73946c6e34cd030", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -502,7 +502,7 @@ pub fn lower_to_hir(\n \n     // Discard hygiene data, which isn't required after lowering to HIR.\n     if !sess.opts.debugging_opts.keep_hygiene_data {\n-        syntax_expand::hygiene::clear_syntax_context_map();\n+        syntax_pos::hygiene::clear_syntax_context_map();\n     }\n \n     Ok(hir_forest)"}, {"sha": "234a5395047c6a321d2166a020ee45d759922e7d", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -25,7 +25,7 @@ use std::{cmp, fs};\n \n use syntax::ast;\n use syntax::attr;\n-use syntax_expand::allocator::{global_allocator_spans, AllocatorKind};\n+use syntax::expand::allocator::{global_allocator_spans, AllocatorKind};\n use syntax::symbol::{Symbol, sym};\n use syntax::span_fatal;\n use syntax_pos::{Span, DUMMY_SP};"}, {"sha": "0e6ecbbf0176a8c0a69900df4e12e21ca89eafac", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -33,12 +33,12 @@ use rustc_serialize::{Decodable, Decoder, Encodable, SpecializedDecoder, opaque}\n use syntax::attr;\n use syntax::ast::{self, Ident};\n use syntax::source_map::{self, respan, Spanned};\n-use syntax::symbol::{Symbol, sym};\n-use syntax_expand::base::{MacroKind, SyntaxExtensionKind, SyntaxExtension};\n-use syntax_pos::{self, Span, BytePos, Pos, DUMMY_SP};\n+use syntax_expand::base::{SyntaxExtensionKind, SyntaxExtension};\n+use syntax_expand::proc_macro::{AttrProcMacro, ProcMacroDerive, BangProcMacro};\n+use syntax_pos::{self, Span, BytePos, Pos, DUMMY_SP, hygiene::MacroKind};\n+use syntax_pos::symbol::{Symbol, sym};\n use log::debug;\n use proc_macro::bridge::client::ProcMacro;\n-use syntax_expand::proc_macro::{AttrProcMacro, ProcMacroDerive, BangProcMacro};\n \n crate struct DecodeContext<'a, 'tcx> {\n     opaque: opaque::Decoder<'a>,"}, {"sha": "fa961fe04dcc4d11b7233d771c5d27fd9b4ac785", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -32,7 +32,7 @@ use std::path::Path;\n use std::u32;\n use syntax::ast;\n use syntax::attr;\n-use syntax_expand::proc_macro::is_proc_macro_attr;\n+use syntax::expand::is_proc_macro_attr;\n use syntax::source_map::Spanned;\n use syntax::symbol::{kw, sym, Ident, Symbol};\n use syntax_pos::{self, FileName, SourceFile, Span};"}, {"sha": "9d29a230314437f8e6b887d91c901551ebffdd78", "filename": "src/librustc_passes/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2FCargo.toml?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -13,7 +13,6 @@ log = \"0.4\"\n rustc = { path = \"../librustc\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n syntax = { path = \"../libsyntax\" }\n-syntax_expand = { path = \"../libsyntax_expand\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n rustc_target = { path = \"../librustc_target\" }"}, {"sha": "994e9405fb6431c033d6bfb39c06ea84fc7f8f7f", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -14,7 +14,7 @@ use rustc::session::Session;\n use rustc_data_structures::fx::FxHashMap;\n use syntax::ast::*;\n use syntax::attr;\n-use syntax_expand::proc_macro::is_proc_macro_attr;\n+use syntax::expand::is_proc_macro_attr;\n use syntax::feature_gate::is_builtin_attr;\n use syntax::source_map::Spanned;\n use syntax::symbol::{kw, sym};"}, {"sha": "d0725c7b8028d1c79c2ab193c59113feb37cc372", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -32,17 +32,16 @@ use syntax::attr;\n \n use syntax::ast::{self, Block, ForeignItem, ForeignItemKind, Item, ItemKind, NodeId};\n use syntax::ast::{MetaItemKind, StmtKind, TraitItem, TraitItemKind};\n-use syntax_expand::base::{MacroKind, SyntaxExtension};\n-use syntax_expand::expand::AstFragment;\n-use syntax_expand::hygiene::ExpnId;\n use syntax::feature_gate::is_builtin_attr;\n use syntax::parse::token::{self, Token};\n use syntax::print::pprust;\n use syntax::{span_err, struct_span_err};\n use syntax::source_map::{respan, Spanned};\n use syntax::symbol::{kw, sym};\n use syntax::visit::{self, Visitor};\n-\n+use syntax_expand::base::SyntaxExtension;\n+use syntax_expand::expand::AstFragment;\n+use syntax_pos::hygiene::{MacroKind, ExpnId};\n use syntax_pos::{Span, DUMMY_SP};\n \n use log::debug;"}, {"sha": "c0dfb7381acc255f3767a21778a9fec1bea398cb", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -10,12 +10,12 @@ use rustc::session::Session;\n use rustc::ty::{self, DefIdTree};\n use rustc::util::nodemap::FxHashSet;\n use syntax::ast::{self, Ident, Path};\n-use syntax_expand::base::MacroKind;\n use syntax::feature_gate::BUILTIN_ATTRIBUTES;\n use syntax::source_map::SourceMap;\n use syntax::struct_span_err;\n use syntax::symbol::{Symbol, kw};\n use syntax::util::lev_distance::find_best_match_for_name;\n+use syntax_pos::hygiene::MacroKind;\n use syntax_pos::{BytePos, Span, MultiSpan};\n \n use crate::resolve_imports::{ImportDirective, ImportDirectiveSubclass, ImportResolver};"}, {"sha": "9c31f89987ed0ccc59a0abd648f89fd33357db4b", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -13,9 +13,9 @@ use rustc::hir::PrimTy;\n use rustc::session::config::nightly_options;\n use rustc::util::nodemap::FxHashSet;\n use syntax::ast::{self, Expr, ExprKind, Ident, NodeId, Path, Ty, TyKind};\n-use syntax_expand::base::MacroKind;\n use syntax::symbol::kw;\n use syntax::util::lev_distance::find_best_match_for_name;\n+use syntax_pos::hygiene::MacroKind;\n use syntax_pos::Span;\n \n type Res = def::Res<ast::NodeId>;"}, {"sha": "cea205a8236650691d3ec4f208527dd5e5b05258", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -35,17 +35,18 @@ use rustc::span_bug;\n use rustc_metadata::creader::CrateLoader;\n use rustc_metadata::cstore::CStore;\n \n-use syntax_expand::hygiene::{ExpnId, Transparency, SyntaxContext};\n-use syntax_expand::base::{SyntaxExtension, MacroKind, SpecialDerives};\n use syntax::{struct_span_err, unwrap_or};\n-use syntax::attr;\n+use syntax::expand::SpecialDerives;\n use syntax::ast::{self, Name, NodeId, Ident, FloatTy, IntTy, UintTy};\n-use syntax::ast::{ItemKind, Path, CRATE_NODE_ID, Crate};\n+use syntax::ast::{CRATE_NODE_ID, Crate};\n+use syntax::ast::{ItemKind, Path};\n+use syntax::attr;\n use syntax::print::pprust;\n use syntax::symbol::{kw, sym};\n use syntax::source_map::Spanned;\n use syntax::visit::{self, Visitor};\n-\n+use syntax_expand::base::SyntaxExtension;\n+use syntax_pos::hygiene::{MacroKind, ExpnId, Transparency, SyntaxContext};\n use syntax_pos::{Span, DUMMY_SP};\n use errors::{Applicability, DiagnosticBuilder};\n "}, {"sha": "8b1b6db3ddc230342d43c38ef1a70ef6a64f4c98", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -14,20 +14,21 @@ use rustc::{ty, lint, span_bug};\n use syntax::ast::{self, NodeId, Ident};\n use syntax::attr::StabilityLevel;\n use syntax::edition::Edition;\n-use syntax_expand::base::{self, InvocationRes, Indeterminate, SpecialDerives};\n-use syntax_expand::base::{MacroKind, SyntaxExtension};\n-use syntax_expand::expand::{AstFragment, AstFragmentKind, Invocation, InvocationKind};\n-use syntax_expand::hygiene::{self, ExpnId, ExpnData, ExpnKind};\n-use syntax_expand::compile_declarative_macro;\n+use syntax::expand::SpecialDerives;\n use syntax::feature_gate::{emit_feature_err, is_builtin_attr_name};\n use syntax::feature_gate::GateIssue;\n use syntax::print::pprust;\n use syntax::symbol::{Symbol, kw, sym};\n+use syntax_expand::base::{self, InvocationRes, Indeterminate};\n+use syntax_expand::base::SyntaxExtension;\n+use syntax_expand::expand::{AstFragment, AstFragmentKind, Invocation, InvocationKind};\n+use syntax_expand::compile_declarative_macro;\n+use syntax_pos::hygiene::{self, ExpnId, ExpnData, ExpnKind};\n use syntax_pos::{Span, DUMMY_SP};\n \n use std::{mem, ptr};\n use rustc_data_structures::sync::Lrc;\n-use syntax_pos::hygiene::AstPass;\n+use syntax_pos::hygiene::{MacroKind, AstPass};\n \n type Res = def::Res<NodeId>;\n "}, {"sha": "c95009858e4c0f91353cf3681043a841dbf26206", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -28,10 +28,10 @@ use rustc::util::nodemap::FxHashSet;\n use rustc::{bug, span_bug};\n \n use syntax::ast::{Ident, Name, NodeId, CRATE_NODE_ID};\n-use syntax_expand::hygiene::ExpnId;\n use syntax::symbol::kw;\n use syntax::util::lev_distance::find_best_match_for_name;\n use syntax::{struct_span_err, unwrap_or};\n+use syntax_pos::hygiene::ExpnId;\n use syntax_pos::{MultiSpan, Span};\n \n use log::*;"}, {"sha": "b3b3750320a95c75df46cf91ed4b4278d174d512", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -3,8 +3,8 @@\n use std::iter::once;\n \n use syntax::ast;\n-use syntax_expand::base::MacroKind;\n use syntax::symbol::sym;\n+use syntax_pos::hygiene::MacroKind;\n use syntax_pos::Span;\n \n use rustc::hir;"}, {"sha": "bdc0206223036d2a8b7a823dc391a33eeb28afec", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -28,10 +28,10 @@ use rustc::ty::layout::VariantIdx;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use syntax::ast::{self, Attribute, AttrStyle, AttrItem, Ident};\n use syntax::attr;\n-use syntax_expand::base::MacroKind;\n use syntax::parse::lexer::comments;\n use syntax::source_map::DUMMY_SP;\n-use syntax::symbol::{Symbol, kw, sym};\n+use syntax_pos::symbol::{Symbol, kw, sym};\n+use syntax_pos::hygiene::MacroKind;\n use syntax_pos::{self, Pos, FileName};\n \n use std::collections::hash_map::Entry;"}, {"sha": "002ca6fe983ba0c89c74df32356b505debdf82b2", "filename": "src/librustdoc/doctree.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustdoc%2Fdoctree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustdoc%2Fdoctree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctree.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -4,7 +4,7 @@ pub use self::StructType::*;\n \n use syntax::ast;\n use syntax::ast::Name;\n-use syntax_expand::base::MacroKind;\n+use syntax_pos::hygiene::MacroKind;\n use syntax_pos::{self, Span};\n \n use rustc::hir;"}, {"sha": "f5e45924893eabbcc82c7ed1884b6d89ea827cc6", "filename": "src/librustdoc/html/item_type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -1,7 +1,7 @@\n //! Item types.\n \n use std::fmt;\n-use syntax_expand::base::MacroKind;\n+use syntax_pos::hygiene::MacroKind;\n use crate::clean;\n \n /// Item type. Corresponds to `clean::ItemEnum` variants."}, {"sha": "c4ee84d33f39b3ebf322ae28a86cdc0387769428", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -49,7 +49,7 @@ use syntax::feature_gate::UnstableFeatures;\n use syntax::print::pprust;\n use syntax::source_map::FileName;\n use syntax::symbol::{Symbol, sym};\n-use syntax_expand::base::MacroKind;\n+use syntax_pos::hygiene::MacroKind;\n use rustc::hir::def_id::DefId;\n use rustc::middle::privacy::AccessLevels;\n use rustc::middle::stability;"}, {"sha": "5a83569f02a5c344df6348ea7d7e271de69b3333", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -8,9 +8,9 @@ use rustc::middle::privacy::AccessLevel;\n use rustc::util::nodemap::{FxHashSet, FxHashMap};\n use rustc::ty::TyCtxt;\n use syntax::ast;\n-use syntax_expand::base::MacroKind;\n use syntax::source_map::Spanned;\n use syntax::symbol::sym;\n+use syntax_pos::hygiene::MacroKind;\n use syntax_pos::{self, Span};\n \n use std::mem;"}, {"sha": "20487b9af03a6525bce1f32b80f5e079addb3f66", "filename": "src/libsyntax/expand/allocator.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax%2Fexpand%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax%2Fexpand%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fexpand%2Fallocator.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -1,5 +1,5 @@\n-use syntax::{ast, attr, visit};\n-use syntax::symbol::{sym, Symbol};\n+use crate::{ast, attr, visit};\n+use syntax_pos::symbol::{sym, Symbol};\n use syntax_pos::Span;\n \n #[derive(Clone, Copy)]", "previous_filename": "src/libsyntax_expand/allocator.rs"}, {"sha": "038f60287befdd231dac141552ad340e22de628c", "filename": "src/libsyntax/expand/mod.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax%2Fexpand%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax%2Fexpand%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fexpand%2Fmod.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -0,0 +1,21 @@\n+//! Definitions shared by macros / syntax extensions and e.g. librustc.\n+\n+use crate::ast::Attribute;\n+use syntax_pos::symbol::sym;\n+\n+pub mod allocator;\n+\n+bitflags::bitflags! {\n+    /// Built-in derives that need some extra tracking beyond the usual macro functionality.\n+    #[derive(Default)]\n+    pub struct SpecialDerives: u8 {\n+        const PARTIAL_EQ = 1 << 0;\n+        const EQ         = 1 << 1;\n+        const COPY       = 1 << 2;\n+    }\n+}\n+\n+pub fn is_proc_macro_attr(attr: &Attribute) -> bool {\n+    [sym::proc_macro, sym::proc_macro_attribute, sym::proc_macro_derive]\n+        .iter().any(|kind| attr.check_name(*kind))\n+}"}, {"sha": "7be6e6c7e1876ecad9015494c3d6763b040e7831", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -95,6 +95,7 @@ pub mod json;\n \n pub mod ast;\n pub mod attr;\n+pub mod expand;\n pub mod source_map;\n #[macro_use] pub mod config;\n pub mod entry;"}, {"sha": "a66263a9a028a17359b20cc35517acc5062a607c", "filename": "src/libsyntax_expand/base.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_expand%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_expand%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fbase.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -1,5 +1,4 @@\n use crate::expand::{self, AstFragment, Invocation};\n-use crate::hygiene::ExpnId;\n \n use syntax::ast::{self, NodeId, Attribute, Name, PatKind};\n use syntax::attr::{self, HasAttrs, Stability, Deprecation};\n@@ -14,11 +13,12 @@ use syntax::symbol::{kw, sym, Ident, Symbol};\n use syntax::{ThinVec, MACRO_ARGUMENTS};\n use syntax::tokenstream::{self, TokenStream};\n use syntax::visit::Visitor;\n+crate use syntax::expand::SpecialDerives;\n \n use errors::{DiagnosticBuilder, DiagnosticId};\n use smallvec::{smallvec, SmallVec};\n use syntax_pos::{FileName, Span, MultiSpan, DUMMY_SP};\n-use syntax_pos::hygiene::{AstPass, ExpnData, ExpnKind};\n+use syntax_pos::hygiene::{AstPass, ExpnId, ExpnData, ExpnKind};\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::{self, Lrc};\n@@ -27,7 +27,7 @@ use std::path::PathBuf;\n use std::rc::Rc;\n use std::default::Default;\n \n-pub use syntax_pos::hygiene::MacroKind;\n+crate use syntax_pos::hygiene::MacroKind;\n \n #[derive(Debug,Clone)]\n pub enum Annotatable {\n@@ -837,16 +837,6 @@ pub enum InvocationRes {\n /// Error type that denotes indeterminacy.\n pub struct Indeterminate;\n \n-bitflags::bitflags! {\n-    /// Built-in derives that need some extra tracking beyond the usual macro functionality.\n-    #[derive(Default)]\n-    pub struct SpecialDerives: u8 {\n-        const PARTIAL_EQ = 1 << 0;\n-        const EQ         = 1 << 1;\n-        const COPY       = 1 << 2;\n-    }\n-}\n-\n pub trait Resolver {\n     fn next_node_id(&mut self) -> NodeId;\n "}, {"sha": "10eb3ecb20bd02d542c3f8e33db66bc2ac96b12a", "filename": "src/libsyntax_expand/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_expand%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_expand%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Flib.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -28,9 +28,8 @@ macro_rules! panictry {\n mod placeholders;\n mod proc_macro_server;\n \n-pub use syntax_pos::hygiene;\n+crate use syntax_pos::hygiene;\n pub use mbe::macro_rules::compile_declarative_macro;\n-pub mod allocator;\n pub mod base;\n pub mod build;\n pub mod expand;"}, {"sha": "bda9478ce96a9ea436763014665c3afc739e1a90", "filename": "src/libsyntax_expand/proc_macro.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_expand%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_expand%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fproc_macro.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -178,11 +178,6 @@ impl<'a> Visitor<'a> for MarkAttrs<'a> {\n     fn visit_mac(&mut self, _mac: &Mac) {}\n }\n \n-pub fn is_proc_macro_attr(attr: &Attribute) -> bool {\n-    [sym::proc_macro, sym::proc_macro_attribute, sym::proc_macro_derive]\n-        .iter().any(|kind| attr.check_name(*kind))\n-}\n-\n crate fn collect_derives(cx: &mut ExtCtxt<'_>, attrs: &mut Vec<ast::Attribute>) -> Vec<ast::Path> {\n     let mut result = Vec::new();\n     attrs.retain(|attr| {"}, {"sha": "061afa379c6e3fae402e5dd4b5c6057a935fbc70", "filename": "src/libsyntax_ext/deriving/clone.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_ext%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_ext%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fclone.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -3,7 +3,8 @@ use crate::deriving::generic::*;\n use crate::deriving::generic::ty::*;\n \n use syntax::ast::{self, Expr, GenericArg, Generics, ItemKind, MetaItem, VariantData};\n-use syntax_expand::base::{Annotatable, ExtCtxt, SpecialDerives};\n+use syntax::expand::SpecialDerives;\n+use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax::ptr::P;\n use syntax::symbol::{kw, sym, Symbol};\n use syntax_pos::Span;"}, {"sha": "eddf8eea1db32f779767d21c730eefcdb70b8970", "filename": "src/libsyntax_ext/deriving/cmp/eq.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Feq.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -3,9 +3,10 @@ use crate::deriving::generic::*;\n use crate::deriving::generic::ty::*;\n \n use syntax::ast::{self, Ident, Expr, MetaItem, GenericArg};\n-use syntax_expand::base::{Annotatable, ExtCtxt, SpecialDerives};\n+use syntax::expand::SpecialDerives;\n use syntax::ptr::P;\n use syntax::symbol::{sym, Symbol};\n+use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax_pos::Span;\n \n pub fn expand_deriving_eq(cx: &mut ExtCtxt<'_>,"}, {"sha": "2e2be91de8a4623c7d4989a6768b4b9ccfaf0342", "filename": "src/libsyntax_ext/deriving/cmp/partial_eq.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Fpartial_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Fpartial_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Fpartial_eq.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -3,10 +3,11 @@ use crate::deriving::generic::*;\n use crate::deriving::generic::ty::*;\n \n use syntax::ast::{BinOpKind, Expr, MetaItem};\n-use syntax_expand::base::{Annotatable, ExtCtxt, SpecialDerives};\n+use syntax::expand::SpecialDerives;\n use syntax::ptr::P;\n use syntax::symbol::sym;\n-use syntax_pos::{self, Span};\n+use syntax_expand::base::{Annotatable, ExtCtxt};\n+use syntax_pos::Span;\n \n pub fn expand_deriving_partial_eq(cx: &mut ExtCtxt<'_>,\n                                   span: Span,"}, {"sha": "c04b65245e1f7911b8f4edf09e98d0caf9f47fcf", "filename": "src/libsyntax_ext/deriving/generic/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -186,13 +186,14 @@ use rustc_target::spec::abi::Abi;\n use syntax::ast::{self, BinOpKind, EnumDef, Expr, Generics, Ident, PatKind};\n use syntax::ast::{VariantData, GenericParamKind, GenericArg};\n use syntax::attr;\n+use syntax::expand::SpecialDerives;\n use syntax::source_map::respan;\n use syntax::util::map_in_place::MapInPlace;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n use syntax::symbol::{Symbol, kw, sym};\n-use syntax_expand::base::{Annotatable, ExtCtxt, SpecialDerives};\n-use syntax_pos::{Span};\n+use syntax_expand::base::{Annotatable, ExtCtxt};\n+use syntax_pos::Span;\n \n use ty::{LifetimeBounds, Path, Ptr, PtrTy, Self_, Ty};\n "}, {"sha": "90d2ea38bc33604f903f2cc12fc3b073918afd57", "filename": "src/libsyntax_ext/global_allocator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_ext%2Fglobal_allocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_ext%2Fglobal_allocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fglobal_allocator.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -2,10 +2,10 @@ use crate::util::check_builtin_macro_attribute;\n \n use syntax::ast::{ItemKind, Mutability, Stmt, Ty, TyKind, Unsafety};\n use syntax::ast::{self, Param, Attribute, Expr, FnHeader, Generics, Ident};\n-use syntax_expand::allocator::{AllocatorKind, AllocatorMethod, AllocatorTy, ALLOCATOR_METHODS};\n-use syntax_expand::base::{Annotatable, ExtCtxt};\n+use syntax::expand::allocator::{AllocatorKind, AllocatorMethod, AllocatorTy, ALLOCATOR_METHODS};\n use syntax::ptr::P;\n use syntax::symbol::{kw, sym, Symbol};\n+use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax_pos::Span;\n \n pub fn expand("}, {"sha": "fc4a7a0a0fe4729d6c469f52ef250a830dd8aa41", "filename": "src/libsyntax_ext/proc_macro_harness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_ext%2Fproc_macro_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_ext%2Fproc_macro_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fproc_macro_harness.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -3,14 +3,14 @@ use std::mem;\n use smallvec::smallvec;\n use syntax::ast::{self, Ident};\n use syntax::attr;\n+use syntax::expand::is_proc_macro_attr;\n use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n use syntax::symbol::{kw, sym};\n use syntax::visit::{self, Visitor};\n use syntax_expand::base::{ExtCtxt, Resolver};\n use syntax_expand::expand::{AstFragment, ExpansionConfig};\n-use syntax_expand::proc_macro::is_proc_macro_attr;\n use syntax_pos::{Span, DUMMY_SP};\n use syntax_pos::hygiene::AstPass;\n "}, {"sha": "6514ff5e252684cc2eb0f7fa4e2f1d1d560a2e44", "filename": "src/libsyntax_ext/standard_library_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_ext%2Fstandard_library_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb12c708521d66b1f727ad4c1ec752a78799980d/src%2Flibsyntax_ext%2Fstandard_library_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fstandard_library_imports.rs?ref=fb12c708521d66b1f727ad4c1ec752a78799980d", "patch": "@@ -4,9 +4,9 @@ use syntax::ptr::P;\n use syntax::sess::ParseSess;\n use syntax::symbol::{Ident, Symbol, kw, sym};\n use syntax_expand::expand::ExpansionConfig;\n-use syntax_expand::hygiene::AstPass;\n use syntax_expand::base::{ExtCtxt, Resolver};\n use syntax_pos::DUMMY_SP;\n+use syntax_pos::hygiene::AstPass;\n \n pub fn inject(\n     mut krate: ast::Crate,"}]}