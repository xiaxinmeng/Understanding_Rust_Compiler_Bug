{"sha": "b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "node_id": "C_kwDOAAsO6NoAKGI4MmQ2YTJlOWVlOTZkNGMwMDFlMmMzYWQ3NGQ4ZGM5NTIxYWM1YWM", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2023-03-08T14:18:38Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2023-03-12T13:50:32Z"}, "message": "Run existing impl trait in traits tests using -Zlower-impl-trait-in-trait-to-assoc-ty", "tree": {"sha": "d9023d536bd4c82fb8017f508753f45241a19a48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9023d536bd4c82fb8017f508753f45241a19a48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmQN2KgACgkQgTGiTgx5\n76+WfBAAqRMGbrSAVcYacjDFLG3DM4v9zmtcB/BIBdacfk93q0IELDkT5mOVqdWw\npnZ5Ukv2X4YXbMe8/QnpfdyKvHBR/19eVI2CxLHU/bHUm2EIaFxVNMvjrqfNC/Zl\n4jjYqHM5UCNQ5ml0uX61W0q0EqIJDZwtO5MA8wwhHAdlSIQA90slcZgoIhDNOtuz\nDXP96YcJmFOBykE8OsZZ+NXxv6GpY3ZDpx8t8UqGmfmWrbzUeqb/RHqimVKA5PDr\ntv9qUhOL36ed27V4hW3DuEwrXq1RobTjIZhDMZ0WBwgZdO/Qvn8qhDTZSPpzaXPC\nYxFTPsyVsJ6k3bP/aZWP9lf7NuDjnAxsa+bvuvRgYvPz3okYhe5gnRTbob0wyMAz\nMcJMfo8BnbAhT43Pmzob3vJdjA4UBY7Mm18tKJBkoN68EN8WyDINmEu0rGEfB0pv\nqsc5MvQlo6C4ISbtBD6a3PazEn/zXjKWnZ4wfK5Mkykpt/sVmUoa1zcXOiTmrju5\nYG/peavqdHAWIcZtuiXnwMZKmDYOUzDssB8a1Rp5g89RoA1R0VRnvO5EyhvYiRrv\nTmJRq9Fe0vnThDg2SkykrDBSAqxwbVK4qqg6uxkZfuCL4GJ1hrdm77NSS4y7C9VR\n0LBPJ/bP4jy7/dqRgy6bt1zFUjR8R6sDlNdpKS5D1hyvFD5UoLw=\n=S2Ft\n-----END PGP SIGNATURE-----", "payload": "tree d9023d536bd4c82fb8017f508753f45241a19a48\nparent 07e018dfef2f3f213a649181009623200b9f488c\nauthor Santiago Pastorino <spastorino@gmail.com> 1678285118 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1678629032 -0300\n\nRun existing impl trait in traits tests using -Zlower-impl-trait-in-trait-to-assoc-ty\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "html_url": "https://github.com/rust-lang/rust/commit/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07e018dfef2f3f213a649181009623200b9f488c", "url": "https://api.github.com/repos/rust-lang/rust/commits/07e018dfef2f3f213a649181009623200b9f488c", "html_url": "https://github.com/rust-lang/rust/commit/07e018dfef2f3f213a649181009623200b9f488c"}], "stats": {"total": 99, "additions": 91, "deletions": 8}, "files": [{"sha": "5c9d2e356fc7048fb301b9ff7898497599038ab0", "filename": "tests/ui/impl-trait/in-trait/deep-match-works.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdeep-match-works.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdeep-match-works.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdeep-match-works.rs?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -1,4 +1,6 @@\n // check-pass\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n \n #![feature(return_position_impl_trait_in_trait)]\n #![allow(incomplete_features)]\n@@ -10,7 +12,9 @@ trait Foo {\n }\n \n impl Foo for () {\n-    fn bar() -> Wrapper<i32> { Wrapper(0) }\n+    fn bar() -> Wrapper<i32> {\n+        Wrapper(0)\n+    }\n }\n \n fn main() {}"}, {"sha": "400db20c79c928fe1f863df3f8e146b34816d3b4", "filename": "tests/ui/impl-trait/in-trait/deep-match.current.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdeep-match.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdeep-match.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdeep-match.current.stderr?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -1,7 +1,7 @@\n error[E0053]: method `bar` has an incompatible return type for trait\n-  --> $DIR/deep-match.rs:11:17\n+  --> $DIR/deep-match.rs:14:17\n    |\n-LL |     fn bar() -> i32 { 0 }\n+LL |     fn bar() -> i32 {\n    |                 ^^^\n    |                 |\n    |                 expected `Wrapper<_>`, found `i32`", "previous_filename": "tests/ui/impl-trait/in-trait/deep-match.stderr"}, {"sha": "400db20c79c928fe1f863df3f8e146b34816d3b4", "filename": "tests/ui/impl-trait/in-trait/deep-match.next.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdeep-match.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdeep-match.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdeep-match.next.stderr?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -0,0 +1,15 @@\n+error[E0053]: method `bar` has an incompatible return type for trait\n+  --> $DIR/deep-match.rs:14:17\n+   |\n+LL |     fn bar() -> i32 {\n+   |                 ^^^\n+   |                 |\n+   |                 expected `Wrapper<_>`, found `i32`\n+   |                 return type in trait\n+   |\n+   = note: expected struct `Wrapper<_>`\n+                found type `i32`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0053`."}, {"sha": "413d054e148a6f8f8a75040c3355397ab642182b", "filename": "tests/ui/impl-trait/in-trait/deep-match.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdeep-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdeep-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdeep-match.rs?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -1,3 +1,6 @@\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n+\n #![feature(return_position_impl_trait_in_trait)]\n #![allow(incomplete_features)]\n \n@@ -8,8 +11,10 @@ trait Foo {\n }\n \n impl Foo for () {\n-    fn bar() -> i32 { 0 }\n-    //~^ ERROR method `bar` has an incompatible return type for trait\n+    fn bar() -> i32 {\n+        //~^ ERROR method `bar` has an incompatible return type for trait\n+        0\n+    }\n }\n \n fn main() {}"}, {"sha": "a0c0589b9a1c04fb7a7fbd3f4520697cb942ce0c", "filename": "tests/ui/impl-trait/in-trait/default-method-binder-shifting.current.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-method-binder-shifting.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-method-binder-shifting.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-method-binder-shifting.current.stderr?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `return_position_impl_trait_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/default-method-binder-shifting.rs:3:12\n+  --> $DIR/default-method-binder-shifting.rs:5:12\n    |\n LL | #![feature(return_position_impl_trait_in_trait)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^", "previous_filename": "tests/ui/impl-trait/in-trait/default-method-binder-shifting.stderr"}, {"sha": "a0c0589b9a1c04fb7a7fbd3f4520697cb942ce0c", "filename": "tests/ui/impl-trait/in-trait/default-method-binder-shifting.next.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-method-binder-shifting.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-method-binder-shifting.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-method-binder-shifting.next.stderr?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -0,0 +1,11 @@\n+warning: the feature `return_position_impl_trait_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/default-method-binder-shifting.rs:5:12\n+   |\n+LL | #![feature(return_position_impl_trait_in_trait)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+warning: 1 warning emitted\n+"}, {"sha": "75b0ec939847af189e9b2423f18ad6f7fe5a4bbd", "filename": "tests/ui/impl-trait/in-trait/default-method-binder-shifting.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-method-binder-shifting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-method-binder-shifting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdefault-method-binder-shifting.rs?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -1,4 +1,6 @@\n // check-pass\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n \n #![feature(return_position_impl_trait_in_trait)]\n //~^ WARN the feature `return_position_impl_trait_in_trait` is incomplete"}, {"sha": "98aaf4a6553f53c454123f8d4fecbcbb2817c0f3", "filename": "tests/ui/impl-trait/in-trait/encode.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fencode.rs?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -1,5 +1,7 @@\n // build-pass\n // compile-flags: --crate-type=lib\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n \n #![feature(return_position_impl_trait_in_trait)]\n #![allow(incomplete_features)]"}, {"sha": "a57653b2c9ed76ddb212df8a2a77c2a817326289", "filename": "tests/ui/impl-trait/in-trait/opaque-in-impl-is-opaque.current.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fopaque-in-impl-is-opaque.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fopaque-in-impl-is-opaque.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fopaque-in-impl-is-opaque.current.stderr?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: mismatched types\n-  --> $DIR/opaque-in-impl-is-opaque.rs:17:19\n+  --> $DIR/opaque-in-impl-is-opaque.rs:20:19\n    |\n LL |     fn bar(&self) -> impl Display {\n    |                      ------------ the found opaque type", "previous_filename": "tests/ui/impl-trait/in-trait/opaque-in-impl-is-opaque.stderr"}, {"sha": "a57653b2c9ed76ddb212df8a2a77c2a817326289", "filename": "tests/ui/impl-trait/in-trait/opaque-in-impl-is-opaque.next.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fopaque-in-impl-is-opaque.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fopaque-in-impl-is-opaque.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fopaque-in-impl-is-opaque.next.stderr?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -0,0 +1,17 @@\n+error[E0308]: mismatched types\n+  --> $DIR/opaque-in-impl-is-opaque.rs:20:19\n+   |\n+LL |     fn bar(&self) -> impl Display {\n+   |                      ------------ the found opaque type\n+...\n+LL |     let x: &str = ().bar();\n+   |            ----   ^^^^^^^^ expected `&str`, found opaque type\n+   |            |\n+   |            expected due to this\n+   |\n+   = note: expected reference `&str`\n+            found opaque type `impl std::fmt::Display`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "c07ece15a8324a919797365665493663e62a87f1", "filename": "tests/ui/impl-trait/in-trait/opaque-in-impl-is-opaque.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fopaque-in-impl-is-opaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fopaque-in-impl-is-opaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fopaque-in-impl-is-opaque.rs?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -1,3 +1,6 @@\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n+\n #![feature(return_position_impl_trait_in_trait)]\n #![allow(incomplete_features)]\n "}, {"sha": "1f42ec744dbe8031a1e3d4c38de3dae8fd036169", "filename": "tests/ui/impl-trait/in-trait/reveal.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Freveal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Freveal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Freveal.rs?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -1,4 +1,6 @@\n // check-pass\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n \n #![feature(return_position_impl_trait_in_trait)]\n #![allow(incomplete_features)]"}, {"sha": "eba270af7f0ee918d853f73cfe3345dde343fbb0", "filename": "tests/ui/impl-trait/in-trait/signature-mismatch.current.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.current.stderr?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -1,5 +1,5 @@\n error: `impl` item signature doesn't match `trait` item signature\n-  --> $DIR/signature-mismatch.rs:15:5\n+  --> $DIR/signature-mismatch.rs:17:5\n    |\n LL |     fn async_fn(&self, buff: &[u8]) -> impl Future<Output = Vec<u8>>;\n    |     ----------------------------------------------------------------- expected `fn(&'1 Struct, &'2 [u8]) -> impl Future<Output = Vec<u8>> + '3`", "previous_filename": "tests/ui/impl-trait/in-trait/signature-mismatch.stderr"}, {"sha": "eba270af7f0ee918d853f73cfe3345dde343fbb0", "filename": "tests/ui/impl-trait/in-trait/signature-mismatch.next.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.next.stderr?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -0,0 +1,16 @@\n+error: `impl` item signature doesn't match `trait` item signature\n+  --> $DIR/signature-mismatch.rs:17:5\n+   |\n+LL |     fn async_fn(&self, buff: &[u8]) -> impl Future<Output = Vec<u8>>;\n+   |     ----------------------------------------------------------------- expected `fn(&'1 Struct, &'2 [u8]) -> impl Future<Output = Vec<u8>> + '3`\n+...\n+LL |     fn async_fn<'a>(&self, buff: &'a [u8]) -> impl Future<Output = Vec<u8>> + 'a {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&'1 Struct, &'2 [u8]) -> impl Future<Output = Vec<u8>> + '2`\n+   |\n+   = note: expected signature `fn(&'1 Struct, &'2 [u8]) -> impl Future<Output = Vec<u8>> + '3`\n+              found signature `fn(&'1 Struct, &'2 [u8]) -> impl Future<Output = Vec<u8>> + '2`\n+   = help: the lifetime requirements from the `impl` do not correspond to the requirements in the `trait`\n+   = help: verify the lifetime relationships in the `trait` and `impl` between the `self` argument, the other inputs and its output\n+\n+error: aborting due to previous error\n+"}, {"sha": "38c902a97a980382b60aec36d73800e58455e1a7", "filename": "tests/ui/impl-trait/in-trait/signature-mismatch.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.rs?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -1,4 +1,6 @@\n // edition:2021\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n \n #![feature(return_position_impl_trait_in_trait)]\n #![allow(incomplete_features)]"}, {"sha": "dbc5d38f192929430e269b407b7148f9c3758ca3", "filename": "tests/ui/impl-trait/in-trait/specialization-substs-remap.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fspecialization-substs-remap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fspecialization-substs-remap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fspecialization-substs-remap.rs?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -1,4 +1,6 @@\n // check-pass\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n \n #![feature(specialization)]\n #![feature(return_position_impl_trait_in_trait)]"}, {"sha": "0e69e0490c776aece731e301d6b812726f433e80", "filename": "tests/ui/impl-trait/in-trait/success.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fsuccess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fsuccess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fsuccess.rs?ref=b82d6a2e9ee96d4c001e2c3ad74d8dc9521ac5ac", "patch": "@@ -1,4 +1,6 @@\n // check-pass\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n \n #![feature(return_position_impl_trait_in_trait)]\n #![allow(incomplete_features)]"}]}