{"sha": "e7b7c417e639a2070ae91c2b84e0574beafb0bb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3YjdjNDE3ZTYzOWEyMDcwYWU5MWMyYjg0ZTA1NzRiZWFmYjBiYjc=", "commit": {"author": {"name": "Emilio Cobos \u00c1lvarez", "email": "emilio@crisal.io", "date": "2019-03-14T01:23:08Z"}, "committer": {"name": "Emilio Cobos \u00c1lvarez", "email": "emilio@crisal.io", "date": "2019-03-14T02:06:45Z"}, "message": "bootstrap: Default to a sensible llvm-suffix.\n\nI used version-channel-sha, hopefully that should work.\n\nI checked that bootstrap builds, but I cannot check anything else since the llvm\nbuild process is started from cargo, and thus calls clang, and thus I hit the\nsame bug I hope to fix with this change.\n\nHopefully fixes #59034.", "tree": {"sha": "a9e403e7bb72beb051a54247abae745b0b907033", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9e403e7bb72beb051a54247abae745b0b907033"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7b7c417e639a2070ae91c2b84e0574beafb0bb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7b7c417e639a2070ae91c2b84e0574beafb0bb7", "html_url": "https://github.com/rust-lang/rust/commit/e7b7c417e639a2070ae91c2b84e0574beafb0bb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7b7c417e639a2070ae91c2b84e0574beafb0bb7/comments", "author": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "719b0d9849dab698c1ff0630313d068c7d561eae", "url": "https://api.github.com/repos/rust-lang/rust/commits/719b0d9849dab698c1ff0630313d068c7d561eae", "html_url": "https://github.com/rust-lang/rust/commit/719b0d9849dab698c1ff0630313d068c7d561eae"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "976b30a55c94b7d8db3e09a705069622ebfc9ade", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7b7c417e639a2070ae91c2b84e0574beafb0bb7/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7b7c417e639a2070ae91c2b84e0574beafb0bb7/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=e7b7c417e639a2070ae91c2b84e0574beafb0bb7", "patch": "@@ -241,6 +241,8 @@ pub struct Build {\n     clippy_info: channel::GitInfo,\n     miri_info: channel::GitInfo,\n     rustfmt_info: channel::GitInfo,\n+    in_tree_llvm_info: channel::GitInfo,\n+    emscripten_llvm_info: channel::GitInfo,\n     local_rebuild: bool,\n     fail_fast: bool,\n     doc_tests: DocTests,\n@@ -363,6 +365,8 @@ impl Build {\n         let clippy_info = channel::GitInfo::new(&config, &src.join(\"src/tools/clippy\"));\n         let miri_info = channel::GitInfo::new(&config, &src.join(\"src/tools/miri\"));\n         let rustfmt_info = channel::GitInfo::new(&config, &src.join(\"src/tools/rustfmt\"));\n+        let in_tree_llvm_info = channel::GitInfo::new(&config, &src.join(\"src/llvm-project\"));\n+        let emscripten_llvm_info = channel::GitInfo::new(&config, &src.join(\"src/llvm-emscripten\"));\n \n         let mut build = Build {\n             initial_rustc: config.initial_rustc.clone(),\n@@ -386,6 +390,8 @@ impl Build {\n             clippy_info,\n             miri_info,\n             rustfmt_info,\n+            in_tree_llvm_info,\n+            emscripten_llvm_info,\n             cc: HashMap::new(),\n             cxx: HashMap::new(),\n             ar: HashMap::new(),"}, {"sha": "3babbc9e102310b372112691091d0d3593564eb8", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e7b7c417e639a2070ae91c2b84e0574beafb0bb7/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7b7c417e639a2070ae91c2b84e0574beafb0bb7/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=e7b7c417e639a2070ae91c2b84e0574beafb0bb7", "patch": "@@ -18,6 +18,7 @@ use build_helper::output;\n use cmake;\n use cc;\n \n+use crate::channel;\n use crate::util::{self, exe};\n use build_helper::up_to_date;\n use crate::builder::{Builder, RunConfig, ShouldRun, Step};\n@@ -231,7 +232,26 @@ impl Step for Llvm {\n         }\n \n         if let Some(ref suffix) = builder.config.llvm_version_suffix {\n-            cfg.define(\"LLVM_VERSION_SUFFIX\", suffix);\n+            // Allow version-suffix=\"\" to not define a version suffix at all.\n+            if !suffix.is_empty() {\n+                cfg.define(\"LLVM_VERSION_SUFFIX\", suffix);\n+            }\n+        } else {\n+            let mut default_suffix = format!(\n+                \"-rust-{}-{}\",\n+                channel::CFG_RELEASE_NUM,\n+                builder.config.channel,\n+            );\n+            let llvm_info = if self.emscripten {\n+                &builder.emscripten_llvm_info\n+            } else {\n+                &builder.in_tree_llvm_info\n+            };\n+            if let Some(sha) = llvm_info.sha_short() {\n+                default_suffix.push_str(\"-\");\n+                default_suffix.push_str(sha);\n+            }\n+            cfg.define(\"LLVM_VERSION_SUFFIX\", default_suffix);\n         }\n \n         if let Some(ref linker) = builder.config.llvm_use_linker {"}]}