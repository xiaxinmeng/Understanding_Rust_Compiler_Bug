{"sha": "d722489e7126786aa848d0e164e1fc1f2140dbf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MjI0ODllNzEyNjc4NmFhODQ4ZDBlMTY0ZTFmYzFmMjE0MGRiZjU=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-08T11:14:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-08T11:14:20Z"}, "message": "Merge pull request #2823 from flip1995/thingies_things\n\nReplace cfg_attr(rustfmt... with rustfmt::skip", "tree": {"sha": "a30cd402c6ecba7329fb14bb8cfc58542d1089f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a30cd402c6ecba7329fb14bb8cfc58542d1089f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d722489e7126786aa848d0e164e1fc1f2140dbf5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbatCMCRBK7hj4Ov3rIwAAdHIIAHaMH+YsYGdcLRr4PfW+1WDA\nLkv37vbXE3Pq7yfd/OWcZatcHTxfLFuJuwf0Z15jcIX1XfvLzRMnWJWrBDgt3Z/w\nksB0iTzWYydxrxyXTwO16Mzw5XfDnpVpMkLiXazYJUbtnL5VfE2WSJDD/9AWw8J2\n6YqAdQzFyph4aJAppyqCseFHHOaVd2DnTyiDlO61I8K6nt7J0Nk14Qwg5xQ5qnBC\n4Ta6iJl9kJYQpW+wmR2VemN/8/C1Jxb4IUnCLTK0d8lAPW1a+A7CBDbgDD3O2VsH\nJoAZbAaZbJa+frFY3jhE/FhzvUtG1RJpwFqoHGpKCMZy940NpW0EBDbxa8gYi0U=\n=apwg\n-----END PGP SIGNATURE-----\n", "payload": "tree a30cd402c6ecba7329fb14bb8cfc58542d1089f4\nparent b109e1033476390f95c728d674909ef90f0ff0ca\nparent 12f2d61fa97fd963b2612f5a7cf918aa838203df\nauthor Oliver Schneider <github35764891676564198441@oli-obk.de> 1533726860 +0200\ncommitter GitHub <noreply@github.com> 1533726860 +0200\n\nMerge pull request #2823 from flip1995/thingies_things\n\nReplace cfg_attr(rustfmt... with rustfmt::skip"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d722489e7126786aa848d0e164e1fc1f2140dbf5", "html_url": "https://github.com/rust-lang/rust/commit/d722489e7126786aa848d0e164e1fc1f2140dbf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d722489e7126786aa848d0e164e1fc1f2140dbf5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b109e1033476390f95c728d674909ef90f0ff0ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/b109e1033476390f95c728d674909ef90f0ff0ca", "html_url": "https://github.com/rust-lang/rust/commit/b109e1033476390f95c728d674909ef90f0ff0ca"}, {"sha": "12f2d61fa97fd963b2612f5a7cf918aa838203df", "url": "https://api.github.com/repos/rust-lang/rust/commits/12f2d61fa97fd963b2612f5a7cf918aa838203df", "html_url": "https://github.com/rust-lang/rust/commit/12f2d61fa97fd963b2612f5a7cf918aa838203df"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "e0ef87938f9da24b911f6421178beec64170adec", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d722489e7126786aa848d0e164e1fc1f2140dbf5/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d722489e7126786aa848d0e164e1fc1f2140dbf5/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=d722489e7126786aa848d0e164e1fc1f2140dbf5", "patch": "@@ -11,6 +11,7 @@\n #![allow(stable_features)]\n #![feature(iterator_find_map)]\n #![feature(macro_at_most_once_rep)]\n+#![feature(tool_attributes)]\n #![feature(rust_2018_preview)]\n #![warn(rust_2018_idioms)]\n \n@@ -181,7 +182,7 @@ pub fn register_pre_expansion_lints(session: &rustc::session::Session, store: &m\n     store.register_pre_expansion_pass(Some(session), box redundant_field_names::RedundantFieldNames);\n }\n \n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[rustfmt::skip]\n pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>) {\n     let conf = match utils::conf::file_from_args(reg.args()) {\n         Ok(file_name) => {"}, {"sha": "61c35dc33b01f9520a5a7fe23bbf810e4e6d32da", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d722489e7126786aa848d0e164e1fc1f2140dbf5/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d722489e7126786aa848d0e164e1fc1f2140dbf5/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=d722489e7126786aa848d0e164e1fc1f2140dbf5", "patch": "@@ -1787,7 +1787,7 @@ impl<'a, 'tcx> Visitor<'tcx> for VarUsedAfterLoopVisitor<'a, 'tcx> {\n \n /// Return true if the type of expr is one that provides `IntoIterator` impls\n /// for `&T` and `&mut T`, such as `Vec`.\n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[rustfmt::skip]\n fn is_ref_iterable_type(cx: &LateContext<'_, '_>, e: &Expr) -> bool {\n     // no walk_ptrs_ty: calling iter() on a reference can make sense because it\n     // will allow further borrows afterwards"}, {"sha": "c12389a0a1f9922260865acfd2a43e64559e9672", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d722489e7126786aa848d0e164e1fc1f2140dbf5/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d722489e7126786aa848d0e164e1fc1f2140dbf5/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=d722489e7126786aa848d0e164e1fc1f2140dbf5", "patch": "@@ -199,7 +199,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MatchPass {\n     }\n }\n \n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[rustfmt::skip]\n fn check_single_match(cx: &LateContext<'_, '_>, ex: &Expr, arms: &[Arm], expr: &Expr) {\n     if arms.len() == 2 &&\n       arms[0].pats.len() == 1 && arms[0].guard.is_none() &&"}, {"sha": "25a8e73dd036ed53f3388b18f1f31e75f535b6f7", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d722489e7126786aa848d0e164e1fc1f2140dbf5/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d722489e7126786aa848d0e164e1fc1f2140dbf5/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=d722489e7126786aa848d0e164e1fc1f2140dbf5", "patch": "@@ -1963,7 +1963,7 @@ enum Convention {\n     StartsWith(&'static str),\n }\n \n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[rustfmt::skip]\n const CONVENTIONS: [(Convention, &[SelfKind]); 6] = [\n     (Convention::Eq(\"new\"), &[SelfKind::No]),\n     (Convention::StartsWith(\"as_\"), &[SelfKind::Ref, SelfKind::RefMut]),\n@@ -1973,7 +1973,7 @@ const CONVENTIONS: [(Convention, &[SelfKind]); 6] = [\n     (Convention::StartsWith(\"to_\"), &[SelfKind::Ref]),\n ];\n \n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[rustfmt::skip]\n const TRAIT_METHODS: [(&str, usize, SelfKind, OutType, &str); 30] = [\n     (\"add\", 2, SelfKind::Value, OutType::Any, \"std::ops::Add\"),\n     (\"as_mut\", 1, SelfKind::RefMut, OutType::Ref, \"std::convert::AsMut\"),\n@@ -2007,7 +2007,7 @@ const TRAIT_METHODS: [(&str, usize, SelfKind, OutType, &str); 30] = [\n     (\"sub\", 2, SelfKind::Value, OutType::Any, \"std::ops::Sub\"),\n ];\n \n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[rustfmt::skip]\n const PATTERN_METHODS: [(&str, usize); 17] = [\n     (\"contains\", 1),\n     (\"starts_with\", 1),"}, {"sha": "f731b3764743038ff757c12a7d03a2c937e622f1", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d722489e7126786aa848d0e164e1fc1f2140dbf5/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d722489e7126786aa848d0e164e1fc1f2140dbf5/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=d722489e7126786aa848d0e164e1fc1f2140dbf5", "patch": "@@ -158,7 +158,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NewWithoutDefault {\n }\n \n fn create_new_without_default_suggest_msg(ty: Ty<'_>) -> String {\n-    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    #[rustfmt::skip]\n     format!(\n \"impl Default for {} {{\n     fn default() -> Self {{"}, {"sha": "08d10d8e4547d51e01be06e7667287983f1e105b", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d722489e7126786aa848d0e164e1fc1f2140dbf5/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d722489e7126786aa848d0e164e1fc1f2140dbf5/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=d722489e7126786aa848d0e164e1fc1f2140dbf5", "patch": "@@ -89,7 +89,7 @@ struct SimilarNamesLocalVisitor<'a, 'tcx: 'a> {\n \n // this list contains lists of names that are allowed to be similar\n // the assumption is that no name is ever contained in multiple lists.\n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[rustfmt::skip]\n const WHITELIST: &[&[&str]] = &[\n     &[\"parsed\", \"parser\"],\n     &[\"lhs\", \"rhs\"],"}, {"sha": "f608ef1ad021c0c4324241ac0820d3985c1b777d", "filename": "tests/needless_continue_helpers.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d722489e7126786aa848d0e164e1fc1f2140dbf5/tests%2Fneedless_continue_helpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d722489e7126786aa848d0e164e1fc1f2140dbf5/tests%2Fneedless_continue_helpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fneedless_continue_helpers.rs?ref=d722489e7126786aa848d0e164e1fc1f2140dbf5", "patch": "@@ -1,11 +1,13 @@\n+#![feature(tool_attributes)]\n+\n // Tests for the various helper functions used by the needless_continue\n // lint that don't belong in utils.\n \n extern crate clippy_lints;\n use clippy_lints::needless_continue::{erode_block, erode_from_back, erode_from_front};\n \n #[test]\n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[rustfmt::skip]\n fn test_erode_from_back() {\n     let input = \"\\\n {\n@@ -23,7 +25,7 @@ fn test_erode_from_back() {\n }\n \n #[test]\n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[rustfmt::skip]\n fn test_erode_from_back_no_brace() {\n     let input = \"\\\n let x = 5;\n@@ -35,7 +37,7 @@ let y = something();\n }\n \n #[test]\n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[rustfmt::skip]\n fn test_erode_from_front() {\n     let input = \"\n         {\n@@ -54,7 +56,7 @@ fn test_erode_from_front() {\n }\n \n #[test]\n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[rustfmt::skip]\n fn test_erode_from_front_no_brace() {\n     let input = \"\n             something();\n@@ -70,7 +72,7 @@ fn test_erode_from_front_no_brace() {\n }\n \n #[test]\n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[rustfmt::skip]\n fn test_erode_block() {\n \n     let input = \""}, {"sha": "a61eee409287f74399832a8f91d4fb412474ff6a", "filename": "tests/trim_multiline.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d722489e7126786aa848d0e164e1fc1f2140dbf5/tests%2Ftrim_multiline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d722489e7126786aa848d0e164e1fc1f2140dbf5/tests%2Ftrim_multiline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftrim_multiline.rs?ref=d722489e7126786aa848d0e164e1fc1f2140dbf5", "patch": "@@ -1,3 +1,5 @@\n+#![feature(tool_attributes)]\n+\n /// test the multiline-trim function\n extern crate clippy_lints;\n \n@@ -13,7 +15,7 @@ fn test_single_line() {\n }\n \n #[test]\n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[rustfmt::skip]\n fn test_block() {\n     assert_eq!(\"\\\n if x {\n@@ -38,7 +40,7 @@ if x {\n }\n \n #[test]\n-#[cfg_attr(rustfmt, rustfmt_skip)]\n+#[rustfmt::skip]\n fn test_empty_line() {\n     assert_eq!(\"\\\n if x {"}]}