{"sha": "32103089d31ca34699e505cd4901f2194ab3b397", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMTAzMDg5ZDMxY2EzNDY5OWU1MDVjZDQ5MDFmMjE5NGFiM2IzOTc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-09-16T22:37:51Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-09-16T22:38:49Z"}, "message": "Create tag nodes for all the tags beforehand", "tree": {"sha": "cd5d4a2be2e2f4fb79ac7c3b391689aa940aff43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd5d4a2be2e2f4fb79ac7c3b391689aa940aff43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32103089d31ca34699e505cd4901f2194ab3b397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32103089d31ca34699e505cd4901f2194ab3b397", "html_url": "https://github.com/rust-lang/rust/commit/32103089d31ca34699e505cd4901f2194ab3b397", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32103089d31ca34699e505cd4901f2194ab3b397/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9dac49bcd613213347e1a6beba25d64bea2596b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dac49bcd613213347e1a6beba25d64bea2596b7", "html_url": "https://github.com/rust-lang/rust/commit/9dac49bcd613213347e1a6beba25d64bea2596b7"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "c9be05cc52ffb3b4c57d18c5824bcae57b39b01d", "filename": "src/boot/me/type.ml", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/32103089d31ca34699e505cd4901f2194ab3b397/src%2Fboot%2Fme%2Ftype.ml", "raw_url": "https://github.com/rust-lang/rust/raw/32103089d31ca34699e505cd4901f2194ab3b397/src%2Fboot%2Fme%2Ftype.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftype.ml?ref=32103089d31ca34699e505cd4901f2194ab3b397", "patch": "@@ -984,19 +984,23 @@ let check_stmt (cx:Semant.ctxt) : (fn_ctx -> Ast.stmt -> unit) =\n   in\n   check_stmt\n \n-let create_tag_graph_node (cx:Semant.ctxt) (id:Common.opaque_id) (n:int) =\n+let create_tag_graph_nodes (cx:Semant.ctxt) =\n+  let make_graph_node id _ =\n+    Hashtbl.add cx.Semant.ctxt_tag_containment id {\n+      Semant.tgn_index = None;\n+      Semant.tgn_children = Queue.create ()\n+    }\n+  in\n+  Hashtbl.iter make_graph_node cx.Semant.ctxt_all_tag_info\n+\n+let populate_tag_graph_node (cx:Semant.ctxt) (id:Common.opaque_id) (n:int) =\n   let tag_info = Hashtbl.find cx.Semant.ctxt_all_tag_info id in\n   let (_, _, ty_tup) = Hashtbl.find tag_info.Semant.tag_nums n in\n   let rec add_ty =\n     function\n         Ast.TY_tag { Ast.tag_id = id'; Ast.tag_args = tys } ->\n-          let make_graph_node () = {\n-            Semant.tgn_index = None;\n-            Semant.tgn_children = Queue.create ()\n-          } in\n           let tag_graph_node =\n-            Common.htab_search_or_add cx.Semant.ctxt_tag_containment id\n-              make_graph_node\n+            Hashtbl.find cx.Semant.ctxt_tag_containment id'\n           in\n           Queue.add id' tag_graph_node.Semant.tgn_children;\n           Array.iter add_ty tys\n@@ -1088,7 +1092,7 @@ let process_crate (cx:Semant.ctxt) (crate:Ast.crate) : unit =\n           Ast.MOD_ITEM_fn _ when\n               not (Hashtbl.mem cx.Semant.ctxt_required_items item_id) ->\n             finish_function item_id\n-        | Ast.MOD_ITEM_tag (_, id, n) -> create_tag_graph_node cx id n\n+        | Ast.MOD_ITEM_tag (_, id, n) -> populate_tag_graph_node cx id n\n         | _ -> ()\n     in\n \n@@ -1127,6 +1131,8 @@ let process_crate (cx:Semant.ctxt) (crate:Ast.crate) : unit =\n         raise (Common.Semant_err ((Some stmt.Common.id), msg))\n     in\n \n+    let visit_crate_pre _ : unit = create_tag_graph_nodes cx in\n+\n     let visit_crate_post _ : unit =\n       (* Fill in the autoderef info for any lvals we didn't get to. *)\n       let fill lval_id _ =\n@@ -1145,6 +1151,7 @@ let process_crate (cx:Semant.ctxt) (crate:Ast.crate) : unit =\n         Walk.visit_obj_fn_post = visit_obj_fn_post;\n         Walk.visit_obj_drop_pre = visit_obj_drop_pre;\n         Walk.visit_obj_drop_post = visit_obj_drop_post;\n+        Walk.visit_crate_pre = visit_crate_pre;\n         Walk.visit_crate_post = visit_crate_post\n     }\n   in"}]}