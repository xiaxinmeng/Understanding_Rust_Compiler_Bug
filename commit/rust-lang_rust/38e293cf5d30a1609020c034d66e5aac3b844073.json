{"sha": "38e293cf5d30a1609020c034d66e5aac3b844073", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZTI5M2NmNWQzMGExNjA5MDIwYzAzNGQ2NmU1YWFjM2I4NDQwNzM=", "commit": {"author": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2020-12-22T03:49:03Z"}, "committer": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-01-16T23:40:47Z"}, "message": "Remove PredicateKind::Atom", "tree": {"sha": "3d072c5c187a6631f1fda4365ebe2acd1f171d62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d072c5c187a6631f1fda4365ebe2acd1f171d62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38e293cf5d30a1609020c034d66e5aac3b844073", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38e293cf5d30a1609020c034d66e5aac3b844073", "html_url": "https://github.com/rust-lang/rust/commit/38e293cf5d30a1609020c034d66e5aac3b844073", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38e293cf5d30a1609020c034d66e5aac3b844073/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b3af4145b62781f6f8cf0b003cfd81780b608ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b3af4145b62781f6f8cf0b003cfd81780b608ec", "html_url": "https://github.com/rust-lang/rust/commit/7b3af4145b62781f6f8cf0b003cfd81780b608ec"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "ad50a6a0405fcc6eff1ee94154065938e2294102", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/38e293cf5d30a1609020c034d66e5aac3b844073/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e293cf5d30a1609020c034d66e5aac3b844073/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=38e293cf5d30a1609020c034d66e5aac3b844073", "patch": "@@ -115,13 +115,15 @@ impl<'tcx> LateLintPass<'tcx> for NeedlessPassByValue {\n             .filter(|p| !p.is_global())\n             .filter_map(|obligation| {\n                 // Note that we do not want to deal with qualified predicates here.\n-                if let ty::PredicateKind::Atom(ty::PredicateAtom::Trait(pred, _)) = obligation.predicate.kind() {\n-                    if pred.def_id() == sized_trait {\n-                        return None;\n+                let ty::PredicateKind::ForAll(binder) = obligation.predicate.kind();\n+                match binder.skip_binder() {\n+                    ty::PredicateAtom::Trait(pred, _) if !binder.has_escaping_bound_vars() => {\n+                        if pred.def_id() == sized_trait {\n+                            return None;\n+                        }\n+                        Some(pred)\n                     }\n-                    Some(pred)\n-                } else {\n-                    None\n+                    _ => None,\n                 }\n             })\n             .collect::<Vec<_>>();"}]}