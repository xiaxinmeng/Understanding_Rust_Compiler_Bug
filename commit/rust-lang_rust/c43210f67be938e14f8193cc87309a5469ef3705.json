{"sha": "c43210f67be938e14f8193cc87309a5469ef3705", "node_id": "C_kwDOAAsO6NoAKGM0MzIxMGY2N2JlOTM4ZTE0ZjgxOTNjYzg3MzA5YTU0NjllZjM3MDU", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-10-24T01:34:48Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-10-24T01:34:48Z"}, "message": "Pass on null handle values to child process", "tree": {"sha": "510afb1182b8e96ffc7617ac40adc7ccb6c069c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/510afb1182b8e96ffc7617ac40adc7ccb6c069c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c43210f67be938e14f8193cc87309a5469ef3705", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmNV67gACgkQcTRy8vRW\nJ968SRAAjMWLROqtOSJ/4Vf1XcrWK+Nw/QEW5NylpcCrcKPbtbQMEGAgyDNmu3J9\n6hklmxbfdM2FDEFliked7ciZd7n9ZfEVUgEUe3Phdr7xA8NDcMpq3YNIaqbzKPdc\nnXO/CD6Dy40SEtLSi22CfCpGwbVgph9H9LNSHq7qLIbIL2Y1JkctSG4LohdR04WH\n38NwI/XELygnxN/UU/1PefBSa8O0Zf0MrsP1x1qsm8a394gyP/9Mw1zjh2dhNCRk\nsBCjFMMDrbcXIdgU5XAyx1/Uh2wDlSmYsWIqkolL2ZDnFE4WTzSXjsf2RutYCu8C\nz+O544O2FPcbLLtsW2c2mgt5iEa/X63atq5eKt6rt8Z0/FwX7dXBHcOrige/lGIP\n7Q0TpyIVQ0S54hqLY0dLM5JVB53SWrQJrizmMdNfwFsqXyYCfaYpc5siHaH/8d/a\n9zaPWQ1Q/+ArX09OG/4EcZ7/Pcida3FKjoxlKJ6+7rb3CjeL+hlnjZBpU0vadCbB\nG1gLnzZvpQ5QdFeLhClz6aL2Tmk6BUdDwRw1swJynYPNWbcV54sTbFqGls4TU+JO\nv0FaCMRFOam8M6NcAuAjWt8TrO1QbZtXScT3iGh4wR/yQ10HhVrA8Bj8HQ4vXNDF\n9gf++iRBV2zWdc+97sO5defMxwJYkylWA07x8Do5e0YvZzSBUiY=\n=RlvW\n-----END PGP SIGNATURE-----", "payload": "tree 510afb1182b8e96ffc7617ac40adc7ccb6c069c5\nparent 7aa361390867181d225a7775340f50e8162e16a2\nauthor Chris Denton <christophersdenton@gmail.com> 1666575288 +0100\ncommitter Chris Denton <christophersdenton@gmail.com> 1666575288 +0100\n\nPass on null handle values to child process\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c43210f67be938e14f8193cc87309a5469ef3705", "html_url": "https://github.com/rust-lang/rust/commit/c43210f67be938e14f8193cc87309a5469ef3705", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c43210f67be938e14f8193cc87309a5469ef3705/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7aa361390867181d225a7775340f50e8162e16a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7aa361390867181d225a7775340f50e8162e16a2", "html_url": "https://github.com/rust-lang/rust/commit/7aa361390867181d225a7775340f50e8162e16a2"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "32be07aee8f411ba10dd9898aa6f2ab37ee5c39e", "filename": "library/std/src/sys/windows/process.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c43210f67be938e14f8193cc87309a5469ef3705/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c43210f67be938e14f8193cc87309a5469ef3705/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs?ref=c43210f67be938e14f8193cc87309a5469ef3705", "patch": "@@ -513,17 +513,15 @@ fn program_exists(path: &Path) -> Option<Vec<u16>> {\n impl Stdio {\n     fn to_handle(&self, stdio_id: c::DWORD, pipe: &mut Option<AnonPipe>) -> io::Result<Handle> {\n         match *self {\n-            // If no stdio handle is available, then inherit means that it\n-            // should still be unavailable so propagate the\n-            // INVALID_HANDLE_VALUE.\n             Stdio::Inherit => match stdio::get_handle(stdio_id) {\n                 Ok(io) => unsafe {\n                     let io = Handle::from_raw_handle(io);\n                     let ret = io.duplicate(0, true, c::DUPLICATE_SAME_ACCESS);\n                     io.into_raw_handle();\n                     ret\n                 },\n-                Err(..) => unsafe { Ok(Handle::from_raw_handle(c::INVALID_HANDLE_VALUE)) },\n+                // If no stdio handle is available, then propagate the null value.\n+                Err(..) => unsafe { Ok(Handle::from_raw_handle(ptr::null_mut())) },\n             },\n \n             Stdio::MakePipe => {\n@@ -730,9 +728,9 @@ fn zeroed_startupinfo() -> c::STARTUPINFO {\n         wShowWindow: 0,\n         cbReserved2: 0,\n         lpReserved2: ptr::null_mut(),\n-        hStdInput: c::INVALID_HANDLE_VALUE,\n-        hStdOutput: c::INVALID_HANDLE_VALUE,\n-        hStdError: c::INVALID_HANDLE_VALUE,\n+        hStdInput: ptr::null_mut(),\n+        hStdOutput: ptr::null_mut(),\n+        hStdError: ptr::null_mut(),\n     }\n }\n "}]}