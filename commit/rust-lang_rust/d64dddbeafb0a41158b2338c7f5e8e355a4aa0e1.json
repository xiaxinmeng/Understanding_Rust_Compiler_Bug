{"sha": "d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2NGRkZGJlYWZiMGE0MTE1OGIyMzM4YzdmNWU4ZTM1NWE0YWEwZTE=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-05-25T01:50:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-25T01:50:05Z"}, "message": "Rollup merge of #42150 - citizen428:feature/error-count-messages, r=Mark-Simulacrum\n\nChange error count messages\n\nSee #33525 for details. r? @Mark-Simulacrum", "tree": {"sha": "36d1814609cd7335140c7b409d6a18afcf53beec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36d1814609cd7335140c7b409d6a18afcf53beec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "html_url": "https://github.com/rust-lang/rust/commit/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73d4b19565e4195dffecf41e6fdf5f887eb6a3e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/73d4b19565e4195dffecf41e6fdf5f887eb6a3e2", "html_url": "https://github.com/rust-lang/rust/commit/73d4b19565e4195dffecf41e6fdf5f887eb6a3e2"}, {"sha": "5558c64f33446225739c1153b43d2e309bb4f50e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5558c64f33446225739c1153b43d2e309bb4f50e", "html_url": "https://github.com/rust-lang/rust/commit/5558c64f33446225739c1153b43d2e309bb4f50e"}], "stats": {"total": 500, "additions": 248, "deletions": 252}, "files": [{"sha": "c5f89e861fa131b759ba227ad2b4ac448143783a", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -118,8 +118,7 @@ const BUG_REPORT_URL: &'static str = \"https://github.com/rust-lang/rust/blob/mas\n fn abort_msg(err_count: usize) -> String {\n     match err_count {\n         0 => \"aborting with no errors (maybe a bug?)\".to_owned(),\n-        1 => \"aborting due to previous error\".to_owned(),\n-        e => format!(\"aborting due to {} previous errors\", e),\n+        _ => \"aborting due to previous error(s)\".to_owned(),\n     }\n }\n "}, {"sha": "f7191e49216375c6e21da99d2a94d2805f8c00cc", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -501,10 +501,7 @@ impl Handler {\n \n                 return;\n             }\n-            1 => s = \"aborting due to previous error\".to_string(),\n-            _ => {\n-                s = format!(\"aborting due to {} previous errors\", self.err_count.get());\n-            }\n+            _ => s = \"aborting due to previous error(s)\".to_string(),\n         }\n \n         panic!(self.fatal(&s));"}, {"sha": "a30d4cbd64c22e84e4362a5230c496d944c63568", "filename": "src/test/ui/borrowck/borrowck-in-static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-in-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-in-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-in-static.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error[E0507]: cannot move out of captured outer variable in an `Fn` closure\n 15 |     Box::new(|| x) //~ ERROR cannot move out of captured outer variable\n    |                 ^ cannot move out of captured outer variable in an `Fn` closure\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "a13971d32de084bc50f950fcd466c44074828eb8", "filename": "src/test/ui/borrowck/unboxed-closures-move-upvar-from-non-once-ref-closure.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fborrowck%2Funboxed-closures-move-upvar-from-non-once-ref-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fborrowck%2Funboxed-closures-move-upvar-from-non-once-ref-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Funboxed-closures-move-upvar-from-non-once-ref-closure.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0507]: cannot move out of captured outer variable in an `Fn` closure\n 21 |         y.into_iter();\n    |         ^ cannot move out of captured outer variable in an `Fn` closure\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "0cb264ff35e4eb0ffd5b491e6611a19b2c38d92d", "filename": "src/test/ui/check_match/issue-35609.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcheck_match%2Fissue-35609.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcheck_match%2Fissue-35609.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck_match%2Fissue-35609.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -46,5 +46,5 @@ error[E0004]: non-exhaustive patterns: `Some(B)`, `Some(C)`, `Some(D)` and 2 mor\n 49 |     match Some(A) {\n    |           ^^^^^^^ patterns `Some(B)`, `Some(C)`, `Some(D)` and 2 more not covered\n \n-error: aborting due to 8 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "cddc7df85ae3e763d8336c0705a015323cb4010d", "filename": "src/test/ui/codemap_tests/bad-format-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -22,5 +22,5 @@ error: expected token: `,`\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "1c32ce44109ed2002e047b0bc9414d61a27ef45d", "filename": "src/test/ui/codemap_tests/coherence-overlapping-inherent-impl-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Fcoherence-overlapping-inherent-impl-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Fcoherence-overlapping-inherent-impl-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fcoherence-overlapping-inherent-impl-trait.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error[E0592]: duplicate definitions with name `f`\n 15 | impl C { fn f() {} }\n    |          --------- other definition for `f`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "84e6e336b9343dfcad1ff05d48f97dade5f97f01", "filename": "src/test/ui/codemap_tests/empty_span.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Fempty_span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Fempty_span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fempty_span.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0321]: cross-crate traits with a default impl, like `std::marker::Send`,\n 17 |     unsafe impl Send for &'static Foo { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "059215157ec52ba715e106d6bfecc11c8e6feceb", "filename": "src/test/ui/codemap_tests/huge_multispan_highlight.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Fhuge_multispan_highlight.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Fhuge_multispan_highlight.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fhuge_multispan_highlight.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error: cannot borrow immutable local variable `x` as mutable\n 100 |     let y = &mut x;\n     |                  ^ cannot borrow mutably\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "dcc21672c56323b3c4d6f95505bf9a396463a9a8", "filename": "src/test/ui/codemap_tests/issue-11715.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-11715.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-11715.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-11715.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -8,5 +8,5 @@ error[E0499]: cannot borrow `x` as mutable more than once at a time\n 101 | }\n     | - first borrow ends here\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "5e611d42a1491236eadd99dfc2f5c75e1edd3640", "filename": "src/test/ui/codemap_tests/issue-28308.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error: cannot apply unary operator `!` to type `&'static str`\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "e2e0537226a92cff78795cff18bb17bb17c22eef", "filename": "src/test/ui/codemap_tests/one_line.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Fone_line.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Fone_line.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fone_line.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0499]: cannot borrow `v` as mutable more than once at a time\n    |     |      second mutable borrow occurs here\n    |     first mutable borrow occurs here\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "0af8c06cfdae71c0bbaa57991bbde19c68450313", "filename": "src/test/ui/codemap_tests/overlapping_inherent_impls.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_inherent_impls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_inherent_impls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_inherent_impls.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -25,5 +25,5 @@ error[E0592]: duplicate definitions with name `baz`\n 43 |     fn baz(&self) {}\n    |     ---------------- other definition for `baz`\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "9778015766ce55489807c5376526b84e30a1a04c", "filename": "src/test/ui/codemap_tests/overlapping_spans.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_spans.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0509]: cannot move out of type `S`, which implements the `Drop` trait\n    |         |    hint: to prevent move, use `ref _s` or `ref mut _s`\n    |         cannot move out of here\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "a3b76159b463fa9d3de9db2a82740d40d286e192", "filename": "src/test/ui/codemap_tests/tab.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0425]: cannot find value `bar` in this scope\n 14 | \\tbar;\n    | \\t^^^ not found in this scope\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "a6e3cf8b869f06b587906907e2102018ba1918df", "filename": "src/test/ui/codemap_tests/unicode.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error: invalid ABI: expected one of [cdecl, stdcall, fastcall, vectorcall, aapcs\n 11 | extern \"\u8def\u6feb\u72fc\u00e1\u0301\u0301\" fn foo() {}\n    |        ^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "28a99e58eca89d954f8aedb62625a15eb96ea9ac", "filename": "src/test/ui/coercion-missing-tail-expected-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcoercion-missing-tail-expected-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcoercion-missing-tail-expected-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoercion-missing-tail-expected-type.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -15,5 +15,5 @@ help: consider removing this semicolon:\n 14 |     x + 1;\n    |          ^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "63c48ffe26b28478f36a2149c9dc29b26c5e3411", "filename": "src/test/ui/compare-method/proj-outlives-region.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Fproj-outlives-region.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Fproj-outlives-region.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fproj-outlives-region.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -11,5 +11,5 @@ error[E0276]: impl has stricter requirements than trait\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "7adcc66d75c892b2eee2c83344b9ddc2eef7e855", "filename": "src/test/ui/compare-method/region-extra-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra-2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ error[E0276]: impl has stricter requirements than trait\n 22 | |     }\n    | |_____^ impl has extra requirement `'a: 'b`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "a29a292ac655656eaa3f1559ff9e0f3d0fbf9adb", "filename": "src/test/ui/compare-method/region-extra.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0276]: impl has stricter requirements than trait\n 22 |     fn foo() where 'a: 'b { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `'a: 'b`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "04de54cd05de215017b8fcf7d49680cab1eb33b9", "filename": "src/test/ui/compare-method/region-unrelated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Fregion-unrelated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Fregion-unrelated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fregion-unrelated.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -11,5 +11,5 @@ error[E0276]: impl has stricter requirements than trait\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "b5e9c89f2f591293daaac81bc912b65b7a01fea8", "filename": "src/test/ui/compare-method/reordered-type-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Freordered-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Freordered-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Freordered-type-param.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ error[E0053]: method `b` has an incompatible type for trait\n    = note: expected type `fn(&E, F) -> F`\n               found type `fn(&E, G) -> G`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "c4a4921289b3b56100d0da4946316f603b470af2", "filename": "src/test/ui/compare-method/trait-bound-on-type-parameter.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Ftrait-bound-on-type-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Ftrait-bound-on-type-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Ftrait-bound-on-type-parameter.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0276]: impl has stricter requirements than trait\n 25 |     fn b<F: Sync, G>(&self, _x: F) -> F { panic!() } //~ ERROR E0276\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `F: std::marker::Sync`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "6374b83e7946a10402671a5cec8b74832a48d3a0", "filename": "src/test/ui/compare-method/traits-misc-mismatch-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Ftraits-misc-mismatch-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Ftraits-misc-mismatch-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Ftraits-misc-mismatch-1.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -61,5 +61,5 @@ error[E0276]: impl has stricter requirements than trait\n 76 |     fn method<G: Getter<usize>>(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `G: Getter<usize>`\n \n-error: aborting due to 7 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "7ff2d93d820dbde51ca05bac13433999749ee20b", "filename": "src/test/ui/compare-method/traits-misc-mismatch-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Ftraits-misc-mismatch-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcompare-method%2Ftraits-misc-mismatch-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Ftraits-misc-mismatch-2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ error[E0276]: impl has stricter requirements than trait\n 26 | |     }\n    | |_____^ impl has extra requirement `U: Iterator<B>`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "3642a702a82955838cafc8b01e27df0e3cf247d1", "filename": "src/test/ui/cross-crate-macro-backtrace/main.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcross-crate-macro-backtrace%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fcross-crate-macro-backtrace%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcross-crate-macro-backtrace%2Fmain.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error: invalid reference to argument `0` (no arguments given)\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "bcf00df98323bd96a98b2f463bdc9c16698975ad", "filename": "src/test/ui/did_you_mean/E0178.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -22,5 +22,5 @@ error[E0178]: expected a path on the left-hand side of `+`, not `fn() -> Foo`\n 17 |     z: fn() -> Foo + 'a,\n    |        ^^^^^^^^^^^^^^^^ perhaps you forgot parentheses?\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "73b8e06183b25cf07732cffaae678c30989ff805", "filename": "src/test/ui/did_you_mean/issue-21659-show-relevant-trait-impls-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-1.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -8,5 +8,5 @@ error[E0277]: the trait bound `Bar: Foo<usize>` is not satisfied\n              <Bar as Foo<i32>>\n              <Bar as Foo<u8>>\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "e1e4e14b215c08617a251ae4253cc5c6b2270c29", "filename": "src/test/ui/did_you_mean/issue-21659-show-relevant-trait-impls-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -11,5 +11,5 @@ error[E0277]: the trait bound `Bar: Foo<usize>` is not satisfied\n              <Bar as Foo<u8>>\n            and 2 others\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "1bd8d5128337ac96d6fff5420232e759482a701f", "filename": "src/test/ui/did_you_mean/issue-31424.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -15,5 +15,5 @@ error: cannot borrow immutable argument `self` as mutable\n 23 |         (&mut self).bar();\n    |               ^^^^ cannot borrow mutably\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "606d6b2b259861455ce179b65e710d9ef7714cb4", "filename": "src/test/ui/did_you_mean/issue-34126.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error: cannot borrow immutable argument `self` as mutable\n    |                       try removing `&mut` here\n    |                       cannot reborrow mutably\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "c32fb56f61be0b042878d24d3e67cf2c9f590b1a", "filename": "src/test/ui/did_you_mean/issue-34337.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error: cannot borrow immutable local variable `key` as mutable\n    |              try removing `&mut` here\n    |              cannot reborrow mutably\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "09a9b796c6a461824ad6b443fcbc3bcdcf67f4dd", "filename": "src/test/ui/did_you_mean/issue-35937.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35937.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35937.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35937.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -22,5 +22,5 @@ error: cannot assign to immutable field `s.x`\n 30 |     s.x += 1;\n    |     ^^^^^^^^ cannot mutably borrow immutable field\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "ea628f10e0fd615571442c423842dc1586c66bd3", "filename": "src/test/ui/did_you_mean/issue-36798.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error: no field `baz` on type `Foo`\n 17 |     f.baz;\n    |       ^^^ did you mean `bar`?\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "a9090e3911b07e65464a53c4c9715a45c77fffb1", "filename": "src/test/ui/did_you_mean/issue-36798_unknown_field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798_unknown_field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798_unknown_field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798_unknown_field.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error: no field `zz` on type `Foo`\n 17 |     f.zz;\n    |       ^^ unknown field\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "acbeaafdf798d66fbc48d4fda09c51a8d6dd1c8b", "filename": "src/test/ui/did_you_mean/issue-37139.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error: cannot borrow immutable local variable `x` as mutable\n    |                       try removing `&mut` here\n    |                       cannot reborrow mutably\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "10f5972e36946554f4f304dbcc2cfc9a1ac38982", "filename": "src/test/ui/did_you_mean/issue-38054-do-not-show-unresolved-names.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38054-do-not-show-unresolved-names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38054-do-not-show-unresolved-names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38054-do-not-show-unresolved-names.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ error[E0432]: unresolved import `Foo1`\n 13 | use Foo1;\n    |     ^^^^ no `Foo1` in the root\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "85eecd037dd7badbe71bfbe844e7a2b8923a39cb", "filename": "src/test/ui/did_you_mean/issue-38147-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-1.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error[E0389]: cannot borrow data mutably in a `&` reference\n 27 |         self.s.push('x');\n    |         ^^^^^^ assignment into an immutable reference\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "83d46e3fc47271409a4e3c2dbf43dc9fdf9f7e72", "filename": "src/test/ui/did_you_mean/issue-38147-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error: cannot borrow immutable borrowed content `*self.s` as mutable\n 17 |         self.s.push('x');\n    |         ^^^^^^ cannot borrow as mutable\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "ca6f376ffd301c9682b0740b6d2767e63d4b98a2", "filename": "src/test/ui/did_you_mean/issue-38147-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-3.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error: cannot borrow immutable borrowed content `*self.s` as mutable\n 17 |         self.s.push('x');\n    |         ^^^^^^ cannot borrow as mutable\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "6fa152c970bdfe2227ff41634a4818cb52170ae3", "filename": "src/test/ui/did_you_mean/issue-38147-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-4.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error[E0389]: cannot borrow data mutably in a `&` reference\n 16 |     f.s.push('x');\n    |     ^^^ assignment into an immutable reference\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "9ae240bf420a5bfc176bcba5ef36e3a284d878ea", "filename": "src/test/ui/did_you_mean/issue-39544.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39544.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39544.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39544.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -96,5 +96,5 @@ error: cannot assign to immutable borrowed content `*x.0`\n 58 |     *x.0 = 1;\n    |     ^^^^^^^^ cannot borrow as mutable\n \n-error: aborting due to 12 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "6a0e94bf13803d3cd74e02c22a2ace99d1f6384a", "filename": "src/test/ui/did_you_mean/issue-39802-show-5-trait-impls.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39802-show-5-trait-impls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39802-show-5-trait-impls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39802-show-5-trait-impls.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -39,5 +39,5 @@ error[E0277]: the trait bound `bool: Foo<i32>` is not satisfied\n            and 2 others\n    = note: required by `Foo::bar`\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "b1dab01d81ff2637d5b8bdeba494846ba52f6c56", "filename": "src/test/ui/did_you_mean/issue-40006.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40006.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40006.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40006.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -64,5 +64,5 @@ error[E0038]: the trait `X` cannot be made into an object\n    |\n    = note: method `xxx` has no receiver\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "daee8df7ed89b219618a15b1321cc2b82837713d", "filename": "src/test/ui/did_you_mean/issue-40396.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40396.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40396.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40396.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -30,5 +30,5 @@ error: chained comparison operators require parentheses\n    |\n    = help: use `::<...>` instead of `<...>` if you meant to specify type arguments\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "5718471527d88459b31e6948d0cb45b76d55093c", "filename": "src/test/ui/did_you_mean/issue-40823.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40823.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40823.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40823.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error: cannot borrow immutable borrowed content `*buf` as mutable\n 13 |     buf.iter_mut();\n    |     ^^^ cannot borrow as mutable\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "4f210bb0b11b2d7ca60a359eb2c83961dee8a07b", "filename": "src/test/ui/did_you_mean/issue-41679.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error: `~` can not be used as a unary operator\n    |\n    = help: use `!` instead of `~` if you meant to perform bitwise negation\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "32f9d90ec2d8d5ea39bbeb72f69536e3dcbcae2e", "filename": "src/test/ui/did_you_mean/recursion_limit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -17,5 +17,5 @@ error[E0275]: overflow evaluating the requirement `K: std::marker::Send`\n    = note: required because it appears within the type `A`\n    = note: required by `is_send`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "ba8d3815181ac84c282682f0f290826d1fe13663", "filename": "src/test/ui/did_you_mean/recursion_limit_deref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -19,5 +19,5 @@ error[E0308]: mismatched types\n    = note: expected type `&Bottom`\n               found type `&Top`\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "50e296a1bc53758b491bd1f753e670f9ddcf1a43", "filename": "src/test/ui/did_you_mean/trait-object-reference-without-parens-suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -18,5 +18,5 @@ error[E0038]: the trait `std::marker::Copy` cannot be made into an object\n    |\n    = note: the trait cannot require that `Self : Sized`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "b69b4f9f32117957a7f5861a2ed0e3889aa5bf79", "filename": "src/test/ui/dropck/dropck-eyepatch-extern-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-extern-crate.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -42,5 +42,5 @@ error: `c` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "e1bfb4d8c1e181a4feb734c89e70252c9ad0f0c1", "filename": "src/test/ui/dropck/dropck-eyepatch-implies-unsafe-impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-implies-unsafe-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-implies-unsafe-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-implies-unsafe-impl.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -20,5 +20,5 @@ error[E0569]: requires an `unsafe impl` declaration due to `#[may_dangle]` attri\n 43 | | }\n    | |_^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "ddd213dd9ad7088feaefa06af61e1cae46c0da27", "filename": "src/test/ui/dropck/dropck-eyepatch-reorder.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-reorder.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-reorder.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-reorder.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -42,5 +42,5 @@ error: `c` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "d9d00919b6dcac704d56ef4928822d86f5127e82", "filename": "src/test/ui/dropck/dropck-eyepatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -42,5 +42,5 @@ error: `c` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "2466d2b43b6fcd648f325d5f44b146a2177cfaa4", "filename": "src/test/ui/fmt/format-string-error.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -16,5 +16,5 @@ error: invalid format string: unmatched `}` found\n    = note: if you intended to print `}`, you can escape it using `}}`\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "91c89e55c54a824d205081ab9c8c44d8557beb5c", "filename": "src/test/ui/fn_once-moved.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ffn_once-moved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ffn_once-moved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffn_once-moved.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -8,5 +8,5 @@ error[E0382]: use of moved value: `debug_dump_dict`\n    |\n    = help: closure was moved because it only implements `FnOnce`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "a08e77a2151e210c98916a99200a1848e2b9a60e", "filename": "src/test/ui/impl-trait/equality.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -51,5 +51,5 @@ error[E0308]: mismatched types\n    = note: expected type `impl Foo` (i32)\n               found type `impl Foo` (u32)\n \n-error: aborting due to 6 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "a444d5f5a40308bbae8a182f8392b831e1db5b5c", "filename": "src/test/ui/invalid-module-declaration/invalid-module-declaration.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ note: maybe move this module `$DIR/auxiliary/foo/bar.rs` to its own directory vi\n 11 | pub mod baz;\n    |         ^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "62223c553e377a7e9f91cd6adea6c238fb9d82a2", "filename": "src/test/ui/issue-37311-type-length-limit/issue-37311.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fissue-37311-type-length-limit%2Fissue-37311.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fissue-37311-type-length-limit%2Fissue-37311.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-37311-type-length-limit%2Fissue-37311.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -8,5 +8,5 @@ error: reached the type-length limit while instantiating `<T as Foo><(&(&(&(&(&(\n    |\n    = note: consider adding a `#![type_length_limit=\"2097152\"]` attribute to your crate\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "80f608c1d371040075d466165e1a1b6e75419f88", "filename": "src/test/ui/issue-40402-ref-hints/issue-40402-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-1.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0507]: cannot move out of indexed content\n    |             help: consider using a reference instead `&f.v[0]`\n    |             cannot move out of indexed content\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "d35800ac1e766f67d9dfca9ad611d5ac56b8ec77", "filename": "src/test/ui/issue-40402-ref-hints/issue-40402-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0507]: cannot move out of indexed content\n    |          |  ...and here (use `ref b` or `ref mut b`)\n    |          hint: to prevent move, use `ref a` or `ref mut a`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "a0177e79ac467b4445e94011d51f6d4bb7ba40ba", "filename": "src/test/ui/issue-41652/issue_41652.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fissue-41652%2Fissue_41652.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fissue-41652%2Fissue_41652.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-41652%2Fissue_41652.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -8,5 +8,5 @@ error: no method named `f` found for type `{integer}` in the current scope\n note: candidate #1 is defined in the trait `issue_41652_b::Tr`\n    = help: to disambiguate the method call, write `issue_41652_b::Tr::f(3)` instead\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "0ab24b0b3e6c417bb035f4df923ad9865b523c85", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -19,5 +19,5 @@ note: ...but the borrowed content is only valid for the anonymous lifetime #1 de\n 13 | | }\n    | |_^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "d005eeb40451ad8f9855665c8f10368510bc031d", "filename": "src/test/ui/lifetime-errors/ex1b-return-no-names-if-else.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetime-errors%2Fex1b-return-no-names-if-else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetime-errors%2Fex1b-return-no-names-if-else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1b-return-no-names-if-else.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error[E0106]: missing lifetime specifier\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `x` or `y`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "7d0947b364e03ff2318b3aaa4421f460d6667a09", "filename": "src/test/ui/lifetime-errors/ex2a-push-one-existing-name.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -21,5 +21,5 @@ note: ...does not necessarily outlive the lifetime 'a as defined on the function\n 17 | | }\n    | |_^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "6380a885f4467ddaf2a783ccb7716c454782fb4e", "filename": "src/test/ui/lifetime-errors/ex2b-push-no-existing-names.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -21,5 +21,5 @@ note: ...does not necessarily outlive the anonymous lifetime #2 defined on the f\n 17 | | }\n    | |_^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "b28a3c0c1351da9662f025cbb0f832a961146a13", "filename": "src/test/ui/lifetime-errors/ex2c-push-inference-variable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -31,5 +31,5 @@ note: ...so that expression is assignable (expected Ref<'b, _>, found Ref<'_, _>\n 17 |     x.push(z);\n    |            ^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "dd716bac513d2eab4fceba362c4f54de6983295a", "filename": "src/test/ui/lifetime-errors/ex2d-push-inference-variable-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -33,5 +33,5 @@ note: ...so that expression is assignable (expected &mut std::vec::Vec<Ref<'_, i\n 16 |     let a: &mut Vec<Ref<i32>> = x;\n    |                                 ^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "141f5a7c4528b1e55ec504aae50ab10bac9f3f41", "filename": "src/test/ui/lifetime-errors/ex2e-push-inference-variable-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -33,5 +33,5 @@ note: ...so that expression is assignable (expected &mut std::vec::Vec<Ref<'_, i\n 16 |     let a: &mut Vec<Ref<i32>> = x;\n    |                                 ^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "768057301d1263dfc79fc1ef70b09786203a5723", "filename": "src/test/ui/lifetimes/borrowck-let-suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetimes%2Fborrowck-let-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flifetimes%2Fborrowck-let-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fborrowck-let-suggestion.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ error: borrowed value does not live long enough\n    |\n    = note: consider using a `let` binding to increase its lifetime\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "d441702374b74dc42a3b8796a93ea26daf05f801", "filename": "src/test/ui/lint/command-line-lint-group-deny.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-deny.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-deny.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-deny.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error: variable `_InappropriateCamelCasing` should have a snake case name such a\n    |\n    = note: `-D non-snake-case` implied by `-D bad-style`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "9d4d0b12b187071d0311e4ed3e81faeb3f13ded1", "filename": "src/test/ui/lint/command-line-lint-group-forbid.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-forbid.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-forbid.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-forbid.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error: variable `_InappropriateCamelCasing` should have a snake case name such a\n    |\n    = note: `-F non-snake-case` implied by `-F bad-style`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "dec44c317e4b2f4c1eafb54251d74d4b443e685e", "filename": "src/test/ui/lint/lint-group-style.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flint%2Flint-group-style.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Flint%2Flint-group-style.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-group-style.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -63,5 +63,5 @@ note: lint level defined here\n 28 |         #![warn(bad_style)]\n    |                 ^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "7a4a9c3f012bf9d082a30af769b45f3614a861cc", "filename": "src/test/ui/loop-break-value-no-repeat.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Floop-break-value-no-repeat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Floop-break-value-no-repeat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floop-break-value-no-repeat.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0571]: `break` with value from a `for` loop\n 22 |         break 22\n    |         ^^^^^^^^ can only break with a value inside `loop`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "b8337c81834b89e6efcf9ae2857838405f526216", "filename": "src/test/ui/macros/bad_hello.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmacros%2Fbad_hello.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmacros%2Fbad_hello.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fbad_hello.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error: expected a literal\n 12 |     println!(3 + 4);\n    |              ^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "a964b92712ddb00711621b6f2eb3c0ef8e9861e3", "filename": "src/test/ui/macros/format-foreign.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmacros%2Fformat-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmacros%2Fformat-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fformat-foreign.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -48,5 +48,5 @@ error: named argument never used\n    = help: `$NAME` should be written as `{NAME}`\n    = note: shell formatting not supported; see the documentation for `std::fmt`\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "304d4459e4975dda4306e604f88961676e2b80bc", "filename": "src/test/ui/macros/macro-backtrace-invalid-internals.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-invalid-internals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-invalid-internals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-invalid-internals.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -52,5 +52,5 @@ error: attempted tuple index `0` on type `{integer}`, but the type was not a tup\n 56 |     let _ = fake_anon_field_expr!();\n    |             ----------------------- in this macro invocation\n \n-error: aborting due to 6 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "7835b85eafc0e8821889ec8abb9f7222a50de6ee", "filename": "src/test/ui/macros/macro-backtrace-nested.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-nested.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -16,5 +16,5 @@ error[E0425]: cannot find value `fake` in this scope\n 28 |     call_nested_expr_sum!();\n    |     ------------------------ in this macro invocation\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "4177240d97696d2693bff7b8824de62c0bca7425", "filename": "src/test/ui/macros/macro-backtrace-println.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-println.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-println.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-println.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error: invalid reference to argument `0` (no arguments given)\n 28 |     myprintln!(\"{}\");\n    |     ----------------- in this macro invocation\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "2ba2069677e3d9f1cb41225fb6995acbe84e5f88", "filename": "src/test/ui/mismatched_types/E0053.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2FE0053.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2FE0053.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2FE0053.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -22,5 +22,5 @@ error[E0053]: method `bar` has an incompatible type for trait\n    = note: expected type `fn(&Bar)`\n               found type `fn(&mut Bar)`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "fab48e9a740a29ed4de52b1010d09368dde86432", "filename": "src/test/ui/mismatched_types/E0281.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2FE0281.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2FE0281.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2FE0281.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -20,5 +20,5 @@ error[E0281]: type mismatch: `[closure@$DIR/E0281.rs:14:9: 14:24]` implements th\n    |\n    = note: required by `foo`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "a5f63aca13e2170128675f077be1d1e3a3d588d0", "filename": "src/test/ui/mismatched_types/E0409.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2FE0409.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2FE0409.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2FE0409.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -15,5 +15,5 @@ error[E0308]: mismatched types\n    = note: expected type `&{integer}`\n               found type `{integer}`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "78b5dcda1d9d24be75b73276e29c1cdc7a77b8ab", "filename": "src/test/ui/mismatched_types/abridged.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -64,5 +64,5 @@ error[E0308]: mismatched types\n    = note: expected type `X<X<_, std::string::String>, _>`\n               found type `X<X<_, {integer}>, _>`\n \n-error: aborting due to 6 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "d97c78137089ec721e9ee55db27a960e5077f963", "filename": "src/test/ui/mismatched_types/binops.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fbinops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fbinops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fbinops.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -54,5 +54,5 @@ error[E0277]: the trait bound `{integer}: std::cmp::PartialEq<std::result::Resul\n    |\n    = help: the trait `std::cmp::PartialEq<std::result::Result<{integer}, _>>` is not implemented for `{integer}`\n \n-error: aborting due to 7 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "8d31dd7500a34f81dcb6fb58dc562a8188fd9089", "filename": "src/test/ui/mismatched_types/cast-rfc0401.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fcast-rfc0401.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fcast-rfc0401.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fcast-rfc0401.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -236,5 +236,5 @@ help: did you mean `*s`?\n 81 |     vec![0.0].iter().map(|s| s as f32).collect::<Vec<f32>>();\n    |                              ^\n \n-error: aborting due to 34 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "cd16e5d70b68b6eb423b26e31ae15d6a116308b3", "filename": "src/test/ui/mismatched_types/closure-arg-count.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -55,5 +55,5 @@ error[E0593]: closure takes 1 argument but 2 arguments are required\n    |               |\n    |               expected closure that takes 2 arguments\n \n-error: aborting due to 7 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "2c9c918168d0299989fe7b508f10199863f19799", "filename": "src/test/ui/mismatched_types/closure-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-mismatch.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -20,5 +20,5 @@ error[E0281]: type mismatch: `[closure@$DIR/closure-mismatch.rs:18:9: 18:15]` im\n    = note: required because of the requirements on the impl of `Foo` for `[closure@$DIR/closure-mismatch.rs:18:9: 18:15]`\n    = note: required by `baz`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "5f67a66eb325fa7e287cf2537d32f24478fcc813", "filename": "src/test/ui/mismatched_types/const-fn-in-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ error[E0379]: trait fns cannot be declared const\n 21 |     const fn f() -> u32 { 22 }\n    |     ^^^^^ trait fns cannot be const\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "2030ad6c13b56af2ea42f0c0292875a523665914", "filename": "src/test/ui/mismatched_types/fn-variance-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Ffn-variance-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Ffn-variance-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Ffn-variance-1.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -14,5 +14,5 @@ error[E0281]: type mismatch: `fn(&isize) {takes_imm}` implements the trait `for<\n    |\n    = note: required by `apply`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "cbce4f810c5312469d168dd7e31798c42ead8e28", "filename": "src/test/ui/mismatched_types/issue-19109.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-19109.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-19109.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-19109.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0308]: mismatched types\n    = note: expected type `()`\n               found type `*mut Trait`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "dc3764a376cde4d8443f780a649f194146a1a445", "filename": "src/test/ui/mismatched_types/issue-26480.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-26480.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-26480.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-26480.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -16,5 +16,5 @@ error: non-scalar cast: `{integer}` as `()`\n 38 |     cast!(2);\n    |     --------- in this macro invocation\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "463d9fdf1717b3cac825bc248ad496976f37cf58", "filename": "src/test/ui/mismatched_types/issue-35030.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-35030.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-35030.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-35030.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0308]: mismatched types\n    = note: expected type `bool` (type parameter)\n               found type `bool` (bool)\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "d72ab326ce644168cdf3a5cb885ce86b034bbf80", "filename": "src/test/ui/mismatched_types/issue-36053-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -26,5 +26,5 @@ error[E0281]: type mismatch: `[closure@$DIR/issue-36053-2.rs:17:39: 17:53]` impl\n    |                                requires `for<'r> std::ops::FnOnce<(&'r &str,)>`\n    |                                expected &str, found str\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "76ffa6e50e133d2e58cad02b4802bf75db98b40e", "filename": "src/test/ui/mismatched_types/issue-38371.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-38371.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-38371.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-38371.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -32,5 +32,5 @@ error[E0529]: expected an array or slice, found `u32`\n 34 | fn ugh(&[bar]: &u32) {\n    |         ^^^^^ pattern cannot match with input type `u32`\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "b4e688e025e52b23ef87cc54223b8a86f3261375", "filename": "src/test/ui/mismatched_types/main.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fmain.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -9,5 +9,5 @@ error[E0308]: mismatched types\n    = note: expected type `u32`\n               found type `()`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "c7a52fea3bc8c3e0219e69ac0927424fcc6269d4", "filename": "src/test/ui/mismatched_types/method-help-unsatisfied-bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fmethod-help-unsatisfied-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Fmethod-help-unsatisfied-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fmethod-help-unsatisfied-bound.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error: no method named `unwrap` found for type `std::result::Result<(), Foo>` in\n    = note: the method `unwrap` exists but the following trait bounds were not satisfied:\n            `Foo : std::fmt::Debug`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "7c644e3a72dcd637e079bb6074c6d3e0c4934d75", "filename": "src/test/ui/mismatched_types/overloaded-calls-bad.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -19,5 +19,5 @@ error[E0057]: this function takes 1 parameter but 2 parameters were supplied\n 45 |     let ans = s(\"burma\", \"shave\");\n    |                 ^^^^^^^^^^^^^^^^ expected 1 parameter\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "9e7f79df35aee136652f733d095930b292dc876f", "filename": "src/test/ui/mismatched_types/trait-bounds-cant-coerce.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-bounds-cant-coerce.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-bounds-cant-coerce.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-bounds-cant-coerce.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0308]: mismatched types\n    = note: expected type `std::boxed::Box<Foo + std::marker::Send + 'static>`\n               found type `std::boxed::Box<Foo + 'static>`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "8741589f8464ed8b9a629ebc8975ff2bb9dcc450", "filename": "src/test/ui/mismatched_types/trait-impl-fn-incompatibility.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -22,5 +22,5 @@ error[E0053]: method `bar` has an incompatible type for trait\n    = note: expected type `fn(&mut Bar, &mut Bar)`\n               found type `fn(&mut Bar, &Bar)`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "c5bfb6e45e77e468aabcd6086ed53dc4e5ef9e7b", "filename": "src/test/ui/mismatched_types/unboxed-closures-vtable-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -26,5 +26,5 @@ error[E0281]: type mismatch: `[closure@$DIR/unboxed-closures-vtable-mismatch.rs:\n    |\n    = note: required by `call_it`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "878544937905d0907f6a10af8510a54e4ea10c32", "filename": "src/test/ui/missing-items/issue-40221.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmissing-items%2Fissue-40221.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmissing-items%2Fissue-40221.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-items%2Fissue-40221.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0004]: non-exhaustive patterns: `C(QA)` not covered\n 21 |     match proto {\n    |           ^^^^^ pattern `C(QA)` not covered\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "26748d18ffa954ac004fa583d92c45abebce771f", "filename": "src/test/ui/missing-items/m2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -11,5 +11,5 @@ error[E0046]: not all trait items implemented, missing: `CONSTANT`, `Type`, `met\n    = note: `Type` from trait: `type Type;`\n    = note: `method` from trait: `fn(&Self, std::string::String) -> <Self as m1::X>::Type`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "ce38178bf87bbfcb962ad807b93761e656f73ca2", "filename": "src/test/ui/missing-items/missing-type-parameter.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmissing-items%2Fmissing-type-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fmissing-items%2Fmissing-type-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-items%2Fmissing-type-parameter.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0282]: type annotations needed\n 14 |     foo();\n    |     ^^^ cannot infer type for `X`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "94fc8f15c2b9e23346ecd1e71f0d2652051ba2ba", "filename": "src/test/ui/pub/pub-restricted-error-fn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error-fn.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error: unmatched visibility `pub`\n 13 | pub(crate) () fn foo() {}\n    |          ^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "eebb2428ba3a5f023d5c2fba73465eefedb7838d", "filename": "src/test/ui/pub/pub-restricted-error.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error: expected identifier, found `(`\n 16 |     pub(crate) () foo: usize,\n    |                ^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "865b1d409e131bfa2e86ed0df3b3a25994047f7b", "filename": "src/test/ui/pub/pub-restricted-non-path.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-non-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-non-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-non-path.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error: expected identifier, found `.`\n 13 | pub (.) fn afn() {}\n    |      ^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "34cc80fcc752796e9f480fbe276d64af615b95df", "filename": "src/test/ui/pub/pub-restricted.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -48,5 +48,5 @@ error: visibilities can only be restricted to ancestor modules\n 33 |         pub (in x) non_parent_invalid: usize,\n    |                 ^\n \n-error: aborting due to 5 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "cbcbf88d86e7f6c39a3ba88843aee6d4df80ec8a", "filename": "src/test/ui/reachable/expr_add.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_add.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_add.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_add.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ note: lint level defined here\n 13 | #![deny(unreachable_code)]\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "20640c0a897b44c562c8658e7bc9847fa34098c5", "filename": "src/test/ui/reachable/expr_again.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_again.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_again.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_again.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -11,5 +11,5 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "c778aec08108e84c9afd5ec71ca43f3e3be67763", "filename": "src/test/ui/reachable/expr_array.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_array.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -16,5 +16,5 @@ error: unreachable expression\n 25 |     let x: [usize; 2] = [22, return];\n    |                         ^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "9310c000192739124476794271e214c4587f98f9", "filename": "src/test/ui/reachable/expr_assign.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_assign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_assign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_assign.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -22,5 +22,5 @@ error: unreachable expression\n 36 |     *{return; &mut i} = 22;\n    |               ^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "ea7b962e190d190c03a7a8237ee776f3e20529c3", "filename": "src/test/ui/reachable/expr_block.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_block.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -18,5 +18,5 @@ error: unreachable statement\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "ee89104df9e92413bdac699125cbffb35e9f30ac", "filename": "src/test/ui/reachable/expr_box.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_box.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ note: lint level defined here\n 13 | #![deny(unreachable_code)]\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "5e072ed1dc7abe766ec0e2ef41636a50eda5aba2", "filename": "src/test/ui/reachable/expr_call.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_call.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -16,5 +16,5 @@ error: unreachable expression\n 28 |     bar(return);\n    |     ^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "a8668dc7355c12f6d6ae17d8f06f8f9adf6acbaa", "filename": "src/test/ui/reachable/expr_cast.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ note: lint level defined here\n 14 | #![deny(unreachable_code)]\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "7f901511f7206f281972cdcd1be72ed9cf47926b", "filename": "src/test/ui/reachable/expr_if.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_if.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -11,5 +11,5 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "4fb6392f405c218eb4858fe9b6e2ac139aac957c", "filename": "src/test/ui/reachable/expr_loop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_loop.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -27,5 +27,5 @@ error: unreachable statement\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "387f7900f4948d86d53b3be53adbee9e24472f5a", "filename": "src/test/ui/reachable/expr_match.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_match.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -26,5 +26,5 @@ error: unreachable statement\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "68fd4973414151cf00e4c4985146e6cf108b552d", "filename": "src/test/ui/reachable/expr_method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_method.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -16,5 +16,5 @@ error: unreachable expression\n 31 |     Foo.bar(return);\n    |     ^^^^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "01b2e1009ee0c5507e2cf6c0d41df7c8a877f003", "filename": "src/test/ui/reachable/expr_repeat.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_repeat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_repeat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_repeat.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ note: lint level defined here\n 14 | #![deny(unreachable_code)]\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "ee958aa9089d8e3350705265f9339b47f153bf80", "filename": "src/test/ui/reachable/expr_return.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_return.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ note: lint level defined here\n 14 | #![deny(unreachable_code)]\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "08866bf32b873abf1d4a0437318e12309183b4de", "filename": "src/test/ui/reachable/expr_struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_struct.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -28,5 +28,5 @@ error: unreachable expression\n 40 |     let x = Foo { a: 22, b: return };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "780fb02f79037861879cc53c5441e81b1217acc5", "filename": "src/test/ui/reachable/expr_tup.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_tup.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_tup.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_tup.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -16,5 +16,5 @@ error: unreachable expression\n 25 |     let x: (usize, usize) = (2, return);\n    |                             ^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "1216ec2676eefe106e40ca1dec343bfa82e3e8da", "filename": "src/test/ui/reachable/expr_type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_type.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ note: lint level defined here\n 14 | #![deny(unreachable_code)]\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "889e3e01c6daaedd42dcd630cdc4529be745367a", "filename": "src/test/ui/reachable/expr_unary.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_unary.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_unary.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_unary.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error: cannot apply unary operator `!` to type `!`\n 18 |     let x: ! = ! { return; 22 };\n    |                ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "3da057f4bbd364ec61a0667518c4ecd378802fc0", "filename": "src/test/ui/reachable/expr_while.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_while.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Freachable%2Fexpr_while.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_while.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -27,5 +27,5 @@ error: unreachable statement\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "121a50d0eda172dd0e61a0283b61c9bb9b704880", "filename": "src/test/ui/regions-fn-subtyping-return-static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fregions-fn-subtyping-return-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fregions-fn-subtyping-return-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions-fn-subtyping-return-static.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -9,5 +9,5 @@ error[E0308]: mismatched types\n    = note: lifetime parameter `'b` declared on fn `bar` appears only in the return type, but here is required to be higher-ranked, which means that `'b` must appear in both argument and return types\n    = note: this error is the result of a recent bug fix; for more information, see issue #33685 <https://github.com/rust-lang/rust/issues/33685>\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "03e80046f679cb69140ee979474c762d8ba1b45a", "filename": "src/test/ui/resolve/enums-are-namespaced-xc.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -25,5 +25,5 @@ error[E0422]: cannot find struct, variant or union type `C` in module `namespace\n help: possible candidate is found in another module, you can import it into scope\n    | use namespaced_enums::Foo::C;\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "8aaad906ea28a477e8c7324b2815ed46e1469ade", "filename": "src/test/ui/resolve/issue-14254.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -144,5 +144,5 @@ error[E0425]: cannot find value `bah` in this scope\n \n error: main function not found\n \n-error: aborting due to 25 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "2fbf7d7185da3d3de70cdafcee7a45b43cc8a689", "filename": "src/test/ui/resolve/issue-16058.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -9,5 +9,5 @@ help: possible better candidates are found in other modules, you can import them\n    | use std::io::Result;\n    | use std::thread::Result;\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "69eeb178dffcca4abf6b12637628fba7e6bafdc0", "filename": "src/test/ui/resolve/issue-17518.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0422]: cannot find struct, variant or union type `E` in this scope\n help: possible candidate is found in another module, you can import it into scope\n    | use SomeEnum::E;\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "225e31010dabbfd4c0665d04df35e013fcc71b3d", "filename": "src/test/ui/resolve/issue-18252.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-18252.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-18252.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-18252.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0423]: expected function, found struct variant `Foo::Variant`\n 16 |     let f = Foo::Variant(42);\n    |             ^^^^^^^^^^^^ did you mean `Foo::Variant { /* fields */ }`?\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "25ee3a02146a70f5c614ae3dd6012440955b7962", "filename": "src/test/ui/resolve/issue-19452.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-19452.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-19452.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-19452.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ error[E0423]: expected value, found struct variant `issue_19452_aux::Homura::Mad\n 22 |     let homura = issue_19452_aux::Homura::Madoka;\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ did you mean `issue_19452_aux::Homura::Madoka { /* fields */ }`?\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "2ca541c161badea97dea7256ca4c1c9a2759c63d", "filename": "src/test/ui/resolve/issue-23305.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -11,5 +11,5 @@ note: the cycle begins when processing `<impl at $DIR/issue-23305.rs:15:1: 15:20\n    | ^^^^^^^^^^^^^^^^^^^\n    = note: ...which then again requires processing `<impl at $DIR/issue-23305.rs:15:1: 15:20>`, completing the cycle.\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "559598dd38ae92cbb882a31d38b240e6babd38e6", "filename": "src/test/ui/resolve/issue-2356.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -106,5 +106,5 @@ error[E0424]: expected value, found module `self`\n 122 |     self += 1;\n     |     ^^^^ `self` value is only available in methods with `self` parameter\n \n-error: aborting due to 17 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "14a2413feee23265c375b56bda9a2de934a9a09a", "filename": "src/test/ui/resolve/issue-24968.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-24968.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-24968.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-24968.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0411]: cannot find type `Self` in this scope\n 11 | fn foo(_: Self) {\n    |           ^^^^ `Self` is only available in traits and impls\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "a950075715ac014417aa46f2d1d2cdb57b4b766d", "filename": "src/test/ui/resolve/issue-33876.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-33876.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-33876.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-33876.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0423]: expected value, found trait `Bar`\n 20 |     let any: &Any = &Bar; //~ ERROR expected value, found trait `Bar`\n    |                      ^^^ not a value\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "4e1ef25f8033307f32eb48cf52d41fa3c71a8c34", "filename": "src/test/ui/resolve/issue-3907-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-3907-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-3907-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-3907-2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error[E0038]: the trait `issue_3907::Foo` cannot be made into an object\n    |\n    = note: method `bar` has no receiver\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "134a4540a8d9e39538814de39db8c61625d6be00", "filename": "src/test/ui/resolve/issue-39226.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0423]: expected value, found struct `Handle`\n    |                 did you mean `handle`?\n    |                 did you mean `Handle { /* fields */ }`?\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "9bdd7ee4fd4b588eff1181c3324aec71b8dd8bf8", "filename": "src/test/ui/resolve/issue-5035-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-5035-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-5035-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-5035-2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0277]: the trait bound `I + 'static: std::marker::Sized` is not satisfied\n    = help: the trait `std::marker::Sized` is not implemented for `I + 'static`\n    = note: all local variables must have a statically known size\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "620958190caf8f739343e3a38ad13dd1d702da1a", "filename": "src/test/ui/resolve/issue-6702.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-6702.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fissue-6702.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-6702.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0423]: expected function, found struct `Monster`\n 17 |     let _m = Monster(); //~ ERROR expected function, found struct `Monster`\n    |              ^^^^^^^ did you mean `Monster { /* fields */ }`?\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "d25c52eeab3ce9cb31b6464e31cbc464c74a970b", "filename": "src/test/ui/resolve/levenshtein.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -46,5 +46,5 @@ error[E0425]: cannot find value `second` in module `m`\n 32 |     let b: m::first = m::second; // Misspelled item in module.\n    |                          ^^^^^^ did you mean `Second`?\n \n-error: aborting due to 8 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "b21b10c63b02b7567082762656e09e57253edae6", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -65,5 +65,5 @@ error: tuple struct `Z` is private\n 45 |     xcrate::m::n::Z; //~ ERROR tuple struct `Z` is private\n    |     ^^^^^^^^^^^^^^^\n \n-error: aborting due to 8 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "c346612a68bb62a04353ef3fb401cacfc5a61a20", "filename": "src/test/ui/resolve/resolve-assoc-suggestions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fresolve-assoc-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fresolve-assoc-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-assoc-suggestions.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -52,5 +52,5 @@ error[E0425]: cannot find value `method` in this scope\n 52 |         method;\n    |         ^^^^^^ did you mean `self.method(...)`?\n \n-error: aborting due to 9 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "92f13f705b079adf766dee79291467c6319f5986", "filename": "src/test/ui/resolve/resolve-hint-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0423]: expected function, found macro `assert`\n 12 |     assert(true);\n    |     ^^^^^^ did you mean `assert!(...)`?\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "04c8087ace9ffa5e937fe36d8f6792971afc3621", "filename": "src/test/ui/resolve/resolve-speculative-adjustment.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fresolve-speculative-adjustment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fresolve-speculative-adjustment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-speculative-adjustment.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -22,5 +22,5 @@ error[E0425]: cannot find function `method` in this scope\n 38 |         method();\n    |         ^^^^^^ did you mean `self.method(...)`?\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "24cef694737e05e8cc32825e0954ed7de2504d24", "filename": "src/test/ui/resolve/suggest-path-instead-of-mod-dot-item.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -74,5 +74,5 @@ error[E0423]: expected function, found module `a::b`\n \n error: main function not found\n \n-error: aborting due to 10 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "7307f19c74de3ecb3347f92f37050a73c9014346", "filename": "src/test/ui/resolve/token-error-correct-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -16,5 +16,5 @@ error[E0425]: cannot find value `foo` in this scope\n 14 |     if foo {\n    |        ^^^ not found in this scope\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "d234c8538fe27a23d8128a70fbb317c7b31043d3", "filename": "src/test/ui/resolve/token-error-correct-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -40,5 +40,5 @@ error[E0308]: mismatched types\n    = note: expected type `()`\n               found type `std::result::Result<bool, std::io::Error>`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "1dd263affd4c3c6f923cf9b58f705fc2abbe2b86", "filename": "src/test/ui/resolve/token-error-correct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -52,5 +52,5 @@ error[E0425]: cannot find function `bar` in this scope\n 14 |     foo(bar(;\n    |         ^^^ not found in this scope\n \n-error: aborting due to 7 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "2fc5979a6065ebc4b42be1f855c6789dfaed7e44", "filename": "src/test/ui/resolve/tuple-struct-alias.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -28,5 +28,5 @@ error[E0532]: expected tuple struct/variant, found type alias `A`\n    |         did you mean `S`?\n    |         did you mean `A { /* fields */ }`?\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "ff6bcf2a53205ecb9f5c4b4a8fd153e77712088f", "filename": "src/test/ui/resolve/unresolved_static_type_field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Funresolved_static_type_field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fresolve%2Funresolved_static_type_field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Funresolved_static_type_field.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0425]: cannot find value `cx` in this scope\n    |           did you mean `self.cx`?\n    |           `self` value is only available in methods with `self` parameter\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "f722908ec108a07099a4db10567e1f27a8f89a96", "filename": "src/test/ui/span/E0046.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0046.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0046.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0046.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0046]: not all trait items implemented, missing: `foo`\n 18 | impl Foo for Bar {}\n    | ^^^^^^^^^^^^^^^^^^^ missing `foo` in implementation\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "bc3a3908dcaefef6033c4a40114732dc37acda19", "filename": "src/test/ui/span/E0057.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0057.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0057.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0057.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ error[E0057]: this function takes 1 parameter but 2 parameters were supplied\n 15 |     let c = f(2, 3); //~ ERROR E0057\n    |               ^^^^ expected 1 parameter\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "14e6bcb73b02b69c62058b93fc3861924f24afd7", "filename": "src/test/ui/span/E0072.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0072.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0072.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0072.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -9,5 +9,5 @@ error[E0072]: recursive type `ListNode` has infinite size\n    |\n    = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `ListNode` representable\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "fab2436922dda318fd5f2d16716b69ba17407645", "filename": "src/test/ui/span/E0204.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0204.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0204.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0204.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -34,5 +34,5 @@ error[E0204]: the trait `Copy` may not be implemented for this type\n 31 |     Bar(&'a mut bool),\n    |         ------------- this field does not implement `Copy`\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "5f8b57294d548e6aa6fb38133abb7adbc0017ba4", "filename": "src/test/ui/span/E0493.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0493.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0493.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0493.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0493]: constants are not allowed to have destructors\n 27 | const F : Foo = Foo { a : 0 };\n    |                 ^^^^^^^^^^^^^ constants cannot have destructors\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "64c0016085f07c1de13792dfe77ddd532828bbc4", "filename": "src/test/ui/span/E0535.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0535.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0535.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0535.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0535]: invalid argument\n 11 | #[inline(unknown)] //~ ERROR E0535\n    |          ^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "8a4cf34e565f5016348dd7b7b33efa26b2b42c5b", "filename": "src/test/ui/span/E0536.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0536.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0536.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0536.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0536]: expected 1 cfg-pattern\n 11 | #[cfg(not())] //~ ERROR E0536\n    |       ^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "1bd54a6a007ed94c2c18c128270da0be691bec71", "filename": "src/test/ui/span/E0537.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0537.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2FE0537.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0537.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0537]: invalid predicate `unknown`\n 11 | #[cfg(unknown())] //~ ERROR E0537\n    |       ^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "7cd9f30f42c1743a8d9d824fc3ca392a578d9785", "filename": "src/test/ui/span/borrowck-borrow-overloaded-auto-deref-mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-borrow-overloaded-auto-deref-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-borrow-overloaded-auto-deref-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-borrow-overloaded-auto-deref-mut.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -82,5 +82,5 @@ error: cannot borrow immutable borrowed content `*x` as mutable\n 143 |     *x.y_mut() = 3; //~ ERROR cannot borrow\n     |      ^ cannot borrow as mutable\n \n-error: aborting due to 10 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "83c49409049d8610410377c2dc816c6f7153cfad", "filename": "src/test/ui/span/borrowck-borrow-overloaded-deref-mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-borrow-overloaded-deref-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-borrow-overloaded-deref-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-borrow-overloaded-deref-mut.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -30,5 +30,5 @@ error: cannot borrow immutable borrowed content `*x` as mutable\n 63 |     **x = 3; //~ ERROR cannot borrow\n    |      ^^ cannot borrow as mutable\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "bfb51ba48166287eb8e1550800aadebfeb3ef927", "filename": "src/test/ui/span/borrowck-call-is-borrow-issue-12224.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-is-borrow-issue-12224.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-is-borrow-issue-12224.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-is-borrow-issue-12224.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -47,5 +47,5 @@ error[E0507]: cannot move out of captured outer variable in an `FnMut` closure\n 72 |         foo(f);\n    |             ^ cannot move out of captured outer variable in an `FnMut` closure\n \n-error: aborting due to 5 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "00fa6577545daf13fb1e711e70aa4214ff34c806", "filename": "src/test/ui/span/borrowck-call-method-from-mut-aliasable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-method-from-mut-aliasable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-method-from-mut-aliasable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-method-from-mut-aliasable.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error: cannot borrow immutable borrowed content `*x` as mutable\n 27 |     x.h(); //~ ERROR cannot borrow\n    |     ^ cannot borrow as mutable\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "75866b7e45e31236bc6d84e393ffeb1b57007f00", "filename": "src/test/ui/span/borrowck-fn-in-const-b.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-fn-in-const-b.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-fn-in-const-b.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-fn-in-const-b.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error: cannot borrow immutable borrowed content `*x` as mutable\n 17 |         x.push(format!(\"this is broken\"));\n    |         ^ cannot borrow as mutable\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "fd2a752c4721be2cc3e50b2a26c6edb2415c6ba3", "filename": "src/test/ui/span/borrowck-let-suggestion-suffixes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-let-suggestion-suffixes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-let-suggestion-suffixes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-let-suggestion-suffixes.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -48,5 +48,5 @@ error: borrowed value does not live long enough\n    |\n    = note: consider using a `let` binding to increase its lifetime\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "86316d8980d0ccf010e902e4a04b75dcc4d83cfd", "filename": "src/test/ui/span/borrowck-object-mutability.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-object-mutability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-object-mutability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-object-mutability.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -16,5 +16,5 @@ error: cannot borrow immutable `Box` content `*x` as mutable\n 29 |     x.borrowed_mut(); //~ ERROR cannot borrow\n    |     ^ cannot borrow as mutable\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "38ce3d398baaf892505db2e982a6105e976464ae", "filename": "src/test/ui/span/borrowck-ref-into-rvalue.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -12,5 +12,5 @@ error: borrowed value does not live long enough\n    |\n    = note: consider using a `let` binding to increase its lifetime\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "47ede6f2eb1a8a718df6dc5b46835ce37adf7d46", "filename": "src/test/ui/span/coerce-suggestions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -47,5 +47,5 @@ error[E0308]: mismatched types\n    = note: expected type `_`\n               found type `std::boxed::Box<_>`\n \n-error: aborting due to 5 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "bf449518ce70c7c0c1ed9fa3ea86ddcbf19389c5", "filename": "src/test/ui/span/destructor-restrictions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fdestructor-restrictions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fdestructor-restrictions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdestructor-restrictions.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -8,5 +8,5 @@ error: `*a` does not live long enough\n    |     |\n    |     `*a` dropped here while still borrowed\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "f098448527905ee8f83ab99d0038a28160ba31a4", "filename": "src/test/ui/span/dropck-object-cycle.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fdropck-object-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fdropck-object-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck-object-cycle.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -9,5 +9,5 @@ error: `*m` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "ea5163cf924729a43d83b81af50f004603291090", "filename": "src/test/ui/span/dropck_arr_cycle_checked.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -63,5 +63,5 @@ error: `b2` does not live long enough\n     |\n     = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 6 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "d5f22a2665049d802830d49e9b35cf6fc5c2f5d4", "filename": "src/test/ui/span/dropck_direct_cycle_with_drop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -19,5 +19,5 @@ error: `d1` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "4ad98b429c53b4c3bbdc7067dcc16d1477dcab72", "filename": "src/test/ui/span/dropck_misc_variants.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fdropck_misc_variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fdropck_misc_variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_misc_variants.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -19,5 +19,5 @@ error: `v` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "e38c49d6a5c36bed9cb88054305cb3733cfa4944", "filename": "src/test/ui/span/dropck_vec_cycle_checked.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -63,5 +63,5 @@ error: `c2` does not live long enough\n     |\n     = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 6 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "ca7286f50275b7c3899c281718b8b03cb13ddf74", "filename": "src/test/ui/span/impl-wrong-item-for-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -85,5 +85,5 @@ error[E0046]: not all trait items implemented, missing: `fmt`\n    |\n    = note: `fmt` from trait: `fn(&Self, &mut std::fmt::Formatter<'_>) -> std::result::Result<(), std::fmt::Error>`\n \n-error: aborting due to 7 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "18cbf9332301924aeb42a3258177893472d74c59", "filename": "src/test/ui/span/issue-11925.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-11925.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-11925.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-11925.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ error: `x` does not live long enough\n 23 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "d2534388f7255d3212331a80f72deb00bb67fcd5", "filename": "src/test/ui/span/issue-15480.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-15480.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-15480.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-15480.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -11,5 +11,5 @@ error: borrowed value does not live long enough\n    |\n    = note: consider using a `let` binding to increase its lifetime\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "bf7c099187ee64aaaf96f9c3d13e861102ebe42e", "filename": "src/test/ui/span/issue-23338-locals-die-before-temps-of-body.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-23338-locals-die-before-temps-of-body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-23338-locals-die-before-temps-of-body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-23338-locals-die-before-temps-of-body.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -18,5 +18,5 @@ error: `y` does not live long enough\n    |     |\n    |     `y` dropped here while still borrowed\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "d6aed36c8f63f9258323bfb42396d433a7b67ae3", "filename": "src/test/ui/span/issue-23729.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-23729.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-23729.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-23729.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -12,5 +12,5 @@ error[E0046]: not all trait items implemented, missing: `Item`\n    |\n    = note: `Item` from trait: `type Item;`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "a1d3f5c11df34e91c2d7f34c0069b79209a9e568", "filename": "src/test/ui/span/issue-23827.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-23827.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-23827.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-23827.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -12,5 +12,5 @@ error[E0046]: not all trait items implemented, missing: `Output`\n    |\n    = note: `Output` from trait: `type Output;`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "771ea787304b3c29862b4b7c6dc0c0002b776089", "filename": "src/test/ui/span/issue-24356.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-24356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-24356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-24356.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -11,5 +11,5 @@ error[E0046]: not all trait items implemented, missing: `Target`\n    |\n    = note: `Target` from trait: `type Target;`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "598f9f5130781552806f5301153d12ab512f6628", "filename": "src/test/ui/span/issue-24690.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -32,5 +32,5 @@ note: lint level defined here\n 16 | #![deny(warnings)]\n    |         ^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "8c2254483e03075c29ce2d0948cb7c1748205e0b", "filename": "src/test/ui/span/issue-24805-dropck-child-has-items-via-parent.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-24805-dropck-child-has-items-via-parent.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-24805-dropck-child-has-items-via-parent.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-24805-dropck-child-has-items-via-parent.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -9,5 +9,5 @@ error: `d1` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "450bc123e60bc9ab0f86171a9416c22c7ff0b778", "filename": "src/test/ui/span/issue-24805-dropck-trait-has-items.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-24805-dropck-trait-has-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-24805-dropck-trait-has-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-24805-dropck-trait-has-items.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -28,5 +28,5 @@ error: `d1` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "dfee66ae546cddee245e3dfce9ba3c78d2bf1cb9", "filename": "src/test/ui/span/issue-24895-copy-clone-dropck.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-24895-copy-clone-dropck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-24895-copy-clone-dropck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-24895-copy-clone-dropck.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -8,5 +8,5 @@ error: `d1` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "17c05557297530d43f53a3e44896e61877ce4aa5", "filename": "src/test/ui/span/issue-25199.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-25199.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-25199.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-25199.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -19,5 +19,5 @@ error: `container` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "1f5c64986c7369f1aaf8f8e7e01667e3d5a51b25", "filename": "src/test/ui/span/issue-26656.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-26656.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-26656.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-26656.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -8,5 +8,5 @@ error: `ticking` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "443595c6d2c764ae4c62a20c0a16dc56758c9375", "filename": "src/test/ui/span/issue-27522.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-27522.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-27522.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-27522.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0308]: mismatched method receiver\n    = note: expected type `&Self`\n               found type `&SomeType`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "2a7e59f0422e64725e1c55d6e30646354f3e8659", "filename": "src/test/ui/span/issue-29106.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-29106.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-29106.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-29106.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -18,5 +18,5 @@ error: `x` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "4065c4fb85713f3836cf1172c98672a3d1fd5971", "filename": "src/test/ui/span/issue-29595.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-29595.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-29595.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-29595.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error[E0277]: the trait bound `u8: Tr` is not satisfied\n    |\n    = note: required by `Tr::C`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "38256ec944b9b9c5debf9ed7f4a9cd55f075381a", "filename": "src/test/ui/span/issue-33884.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-33884.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-33884.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-33884.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -8,5 +8,5 @@ error[E0308]: mismatched types\n               found type `std::string::String`\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "48ed0b4ac89aa964e62debf10532383fa2873175", "filename": "src/test/ui/span/issue-34264.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -45,5 +45,5 @@ error[E0061]: this function takes 2 parameters but 3 parameters were supplied\n 19 |     bar(1, 2, 3);\n    |         ^^^^^^^ expected 2 parameters\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "5dc9bd8b79b19952cd313f6940e421135ea7eb7d", "filename": "src/test/ui/span/issue-36530.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -14,5 +14,5 @@ error: The attribute `foo` is currently unknown to the compiler and may have mea\n    |\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "dbce171dd9b7e5c14f166385f91b43628445e2f3", "filename": "src/test/ui/span/issue-36537.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-36537.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-36537.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-36537.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -8,5 +8,5 @@ error: `a` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "bd271641e7e3cca949f80c52bee1e71a435e3815", "filename": "src/test/ui/span/issue-37767.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-37767.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-37767.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-37767.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -55,5 +55,5 @@ note: candidate #2 is defined in the trait `F`\n    |     ^^^^^^^^^^^^^^^\n    = help: to disambiguate the method call, write `F::foo(a)` instead\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "f0b940cdf3fa9e150e1509ec9562f0dd10734b82", "filename": "src/test/ui/span/issue-39018.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -15,5 +15,5 @@ error[E0369]: binary operation `+` cannot be applied to type `World`\n    |\n    = note: an implementation of `std::ops::Add` might be missing for `World`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "0d0a07629c49a09309dacb4115d1e6cbafd73f15", "filename": "src/test/ui/span/issue-39698.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-39698.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-39698.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-39698.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -38,5 +38,5 @@ error[E0408]: variable `c` is not bound in all patterns\n    |         |             pattern doesn't bind `c`\n    |         pattern doesn't bind `c`\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "160f65fd1b9af499e7d842f484e10439bfc06d5e", "filename": "src/test/ui/span/issue-40157.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-40157.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-40157.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-40157.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ error: `foo` does not live long enough\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "c017e38680826d60fc7ddfb201a5b57dd9add551", "filename": "src/test/ui/span/issue-7575.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -61,5 +61,5 @@ note: candidate #1 is defined in the trait `ManyImplTrait`\n    = help: items from traits can only be used if the trait is implemented and in scope; the following trait defines an item `is_str`, perhaps you need to implement it:\n    = help: candidate #1: `ManyImplTrait`\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "06b7f922b684c538f95c8d127c8648ab6b8f13f7", "filename": "src/test/ui/span/issue28498-reject-ex1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-ex1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-ex1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-ex1.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -19,5 +19,5 @@ error: `foo.data` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "d166af522478e693afb238c9021ceae83e0368b9", "filename": "src/test/ui/span/issue28498-reject-lifetime-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-lifetime-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-lifetime-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-lifetime-param.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -20,5 +20,5 @@ error: `first_dropped` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "6a02d7015733de3cad307dc50acb402728c2d886", "filename": "src/test/ui/span/issue28498-reject-passed-to-fn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-passed-to-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-passed-to-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-passed-to-fn.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -20,5 +20,5 @@ error: `first_dropped` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "91a410e0f65894ca0c0fa1efd45bdd0ce3a82a3d", "filename": "src/test/ui/span/issue28498-reject-trait-bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-trait-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-trait-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-trait-bound.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -20,5 +20,5 @@ error: `first_dropped` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "2f5e60a1b3c9d0fbf07bb0899f18db927e6b467c", "filename": "src/test/ui/span/lint-unused-unsafe.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Flint-unused-unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Flint-unused-unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Flint-unused-unsafe.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -106,5 +106,5 @@ note: because it's nested under this `unsafe` fn\n 44 | | }\n    | |_^\n \n-error: aborting due to 8 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "6095a3b6be5cbd27ab75b128c648bf0b2f203519", "filename": "src/test/ui/span/loan-extend.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Floan-extend.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Floan-extend.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Floan-extend.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -9,5 +9,5 @@ error: `short` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "f76c5b049c4b04c0a65f69885be2573e89c647d3", "filename": "src/test/ui/span/move-closure.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fmove-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fmove-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmove-closure.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error[E0308]: mismatched types\n    = note: expected type `()`\n               found type `[closure@$DIR/move-closure.rs:15:17: 15:27]`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "881c2f5df45a2ffaee2e15f8a26870904589379a", "filename": "src/test/ui/span/multiline-span-E0072.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-E0072.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-E0072.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-E0072.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -12,5 +12,5 @@ error[E0072]: recursive type `ListNode` has infinite size\n    |\n    = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `ListNode` representable\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "057f8fe6ee274f6e22b6682013bc04be2e3a2488", "filename": "src/test/ui/span/multiline-span-simple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-simple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-simple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-simple.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -11,5 +11,5 @@ error[E0277]: the trait bound `u32: std::ops::Add<()>` is not satisfied\n    |\n    = help: the trait `std::ops::Add<()>` is not implemented for `u32`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "d5e6b62865586a7547e3e5da155759965a34160a", "filename": "src/test/ui/span/mut-arg-hint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fmut-arg-hint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fmut-arg-hint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmut-arg-hint.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -22,5 +22,5 @@ error: cannot borrow immutable borrowed content `*a` as mutable\n 25 |         a.push_str(\"foo\");\n    |         ^ cannot borrow as mutable\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "68dc87d0667e2d2bca63d17034be6b8a683e48be", "filename": "src/test/ui/span/mut-ptr-cant-outlive-ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fmut-ptr-cant-outlive-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fmut-ptr-cant-outlive-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmut-ptr-cant-outlive-ref.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -8,5 +8,5 @@ error: `b` does not live long enough\n 20 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "835b08f890751a853a2407902bdba88e9e702d03", "filename": "src/test/ui/span/pub-struct-field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fpub-struct-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fpub-struct-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fpub-struct-field.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -15,5 +15,5 @@ error[E0124]: field `bar` is already declared\n 17 |     pub(crate) bar: u8,\n    |     ^^^^^^^^^^^^^^^^^^ field already declared\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "4f638562bb8014a2e9045b8db0e2a6961ef3eb7f", "filename": "src/test/ui/span/range-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Frange-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Frange-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Frange-2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -20,5 +20,5 @@ error: `b` does not live long enough\n 21 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "72177754681f80ea3c516f000cd953ffa76db8a2", "filename": "src/test/ui/span/recursive-type-field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Frecursive-type-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Frecursive-type-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Frecursive-type-field.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -27,5 +27,5 @@ error[E0072]: recursive type `Bar` has infinite size\n    |\n    = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `Bar` representable\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "6c5007a570535093109be8b70c2036aec8977e87", "filename": "src/test/ui/span/regionck-unboxed-closure-lifetimes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fregionck-unboxed-closure-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fregionck-unboxed-closure-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregionck-unboxed-closure-lifetimes.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -9,5 +9,5 @@ error: `c` does not live long enough\n 20 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "d6a460d83ab0faa9f054c7b0295aac5485be6bbb", "filename": "src/test/ui/span/regions-close-over-borrowed-ref-in-obj.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-borrowed-ref-in-obj.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-borrowed-ref-in-obj.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-borrowed-ref-in-obj.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -9,5 +9,5 @@ error: borrowed value does not live long enough\n 23 | }\n    | - temporary value needs to live until here\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "099f6df27efc69fca1dbed8f6c945b35503aab43", "filename": "src/test/ui/span/regions-close-over-type-parameter-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-type-parameter-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-type-parameter-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-type-parameter-2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -9,5 +9,5 @@ error: `tmp0` does not live long enough\n    |     |\n    |     `tmp0` dropped here while still borrowed\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "09178ce57e8be951b1d86a8197c3d885041536cd", "filename": "src/test/ui/span/regions-escape-loop-via-variable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -8,5 +8,5 @@ error: `x` does not live long enough\n 23 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "006060f342a38e5e934f7d2a0bfec398ffa5f31e", "filename": "src/test/ui/span/regions-escape-loop-via-vec.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -37,5 +37,5 @@ error[E0506]: cannot assign to `x` because it is borrowed\n 24 |         x += 1; //~ ERROR cannot assign\n    |         ^^^^^^ assignment to borrowed `x` occurs here\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "d4dfef36e4afbb6af94fe6a3c549676f01eb1821", "filename": "src/test/ui/span/regions-infer-borrow-scope-within-loop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ error: `*x` does not live long enough\n 30 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "4a815a58b354da092bd13e4bc06b8483be40fb52", "filename": "src/test/ui/span/send-is-not-static-ensures-scoping.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -24,5 +24,5 @@ error: `y` does not live long enough\n 35 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "815f88022675d21ebfcf20f3e6da685a1160c6e3", "filename": "src/test/ui/span/send-is-not-static-std-sync-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -32,5 +32,5 @@ error: `x` does not live long enough\n 44 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "81f53c7f374eb691a80e7218eb31abe75ba9e069", "filename": "src/test/ui/span/send-is-not-static-std-sync.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -52,5 +52,5 @@ error[E0505]: cannot move out of `y` because it is borrowed\n 49 |     drop(y); //~ ERROR cannot move out\n    |          ^ move out of `y` occurs here\n \n-error: aborting due to 6 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "ff6d30d670de1ffb4275770da329950b76dc8697", "filename": "src/test/ui/span/slice-borrow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fslice-borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fslice-borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fslice-borrow.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -9,5 +9,5 @@ error: borrowed value does not live long enough\n 19 | }\n    | - temporary value needs to live until here\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "b6353c0f6a205084c2b88ec2d12dfa1a0e2924fb", "filename": "src/test/ui/span/suggestion-non-ascii.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error: cannot index a value of type `({integer},)`\n 14 |     println!(\"\u2603{}\", tup[0]);\n    |                     ^^^^^^ help: to access tuple elements, use `tup.0`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "afe069e7aa684cad3bc73dfdb92528c209d0210e", "filename": "src/test/ui/span/type-binding.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Ftype-binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Ftype-binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Ftype-binding.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0220]: associated type `Trget` not found for `std::ops::Deref`\n 16 | fn homura<T: Deref<Trget = i32>>(_: T) {}\n    |                    ^^^^^^^^^^^ associated type `Trget` not found\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "6556e5b4c001e7f92e86d2ec7b76bbdb1166f2f6", "filename": "src/test/ui/span/typo-suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Ftypo-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Ftypo-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Ftypo-suggestion.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ error[E0425]: cannot find value `fob` in this scope\n 18 |     println!(\"Hello {}\", fob);\n    |                          ^^^ did you mean `foo`?\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "fad46d5a7d05282242cf3179b58bb8586c1f10fa", "filename": "src/test/ui/span/vec-must-not-hide-type-from-dropck.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -19,5 +19,5 @@ error: `c1` does not live long enough\n     |\n     = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "c890d4740e6c2aad70316c2b8eca764534d197c4", "filename": "src/test/ui/span/vec_refs_data_with_early_death.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fvec_refs_data_with_early_death.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fvec_refs_data_with_early_death.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fvec_refs_data_with_early_death.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -20,5 +20,5 @@ error: `y` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "ff1bf47d44d058d198d1c64584c1fc95c138ebb0", "filename": "src/test/ui/span/wf-method-late-bound-regions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fwf-method-late-bound-regions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fspan%2Fwf-method-late-bound-regions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fwf-method-late-bound-regions.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -9,5 +9,5 @@ error: `pointer` does not live long enough\n 33 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "89008828ac5efaf54178e88ed0bca1c847fac0f8", "filename": "src/test/ui/static-lifetime.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fstatic-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fstatic-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic-lifetime.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error[E0477]: the type `std::borrow::Cow<'a, A>` does not fulfill the required l\n    |\n    = note: type must satisfy the static lifetime\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "0f2097dfb312c0bed8777ba96c79f33cc08d49c2", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-18343.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error: no method named `closure` found for type `Obj<[closure@$DIR/issue-18343.r\n    |\n    = help: use `(o.closure)(...)` if you meant to call the function stored in the `closure` field\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "0191060e837bacef156ace72c52569c12aabc655", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-2392.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -86,5 +86,5 @@ error: no method named `f3` found for type `FuncContainer` in the current scope\n     |\n     = help: use `((*self.container).f3)(...)` if you meant to call the function stored in the `f3` field\n \n-error: aborting due to 11 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "704b7a37e9553cf18b8acc35f46f48f96a0f8744", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-32128.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error: no method named `example` found for type `Example` in the current scope\n    |\n    = help: use `(demo.example)(...)` if you meant to call the function stored in the `example` field\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "d827f89cf8d821b6b88684426847726521d76c8b", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-33784.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -22,5 +22,5 @@ error: no method named `c_fn_ptr` found for type `&D` in the current scope\n    |\n    = help: use `(s.c_fn_ptr)(...)` if you meant to call the function stored in the `c_fn_ptr` field\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "e3c88c1e7bbbd62e07e2397e6ed1a850e123e89b", "filename": "src/test/ui/suggestions/confuse-field-and-method/private-field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fprivate-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fprivate-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fprivate-field.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error: no method named `dog_age` found for type `animal::Dog` in the current sco\n 26 |     let dog_age = dog.dog_age();\n    |                       ^^^^^^^ private field, not a method\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "47a1b53cc60e0d95a98f78a4e4d2cafdf02636dd", "filename": "src/test/ui/suggestions/tuple-float-index.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -7,5 +7,5 @@ error: unexpected token: `1.1`\n    |     |           unexpected token\n    |     help: try parenthesizing the first index `((1, (2, 3)).1).1`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "15e4d4c72bc50d926ddae589d8c319e6601ea35f", "filename": "src/test/ui/token/bounds-obj-parens.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftoken%2Fbounds-obj-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftoken%2Fbounds-obj-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fbounds-obj-parens.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error: expected one of `!` or `::`, found `<eof>`\n 15 | FAIL\n    | ^^^^ expected one of `!` or `::` here\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "faa30dca94581effc840dcc6ba1f3f9f90b4407e", "filename": "src/test/ui/token/issue-10636-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -24,5 +24,5 @@ error: expected expression, found `)`\n \n error: main function not found\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "96c2d764e7101f2e76760b84fdd69395ba0b762a", "filename": "src/test/ui/token/issue-41155.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -14,5 +14,5 @@ error[E0412]: cannot find type `S` in this scope\n \n error: main function not found\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "14a7186aab19c2ef249e21d37e062f0270251206", "filename": "src/test/ui/token/macro-incomplete-parse.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftoken%2Fmacro-incomplete-parse.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftoken%2Fmacro-incomplete-parse.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fmacro-incomplete-parse.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -28,5 +28,5 @@ note: caused by the macro expansion here; the usage of `ignored_pat!` is likely\n 37 |         ignored_pat!() => (), //~ NOTE caused by the macro expansion here\n    |         ^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error(s)\n "}, {"sha": "5fe0b3594f67cc1bd86a856de6972ec7928a51e8", "filename": "src/test/ui/token/trailing-plus-in-bounds.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftoken%2Ftrailing-plus-in-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftoken%2Ftrailing-plus-in-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Ftrailing-plus-in-bounds.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error: expected one of `!` or `::`, found `<eof>`\n 19 | FAIL\n    | ^^^^ expected one of `!` or `::` here\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "007480dc44ff22e7f508008de9ed4d676090620d", "filename": "src/test/ui/type-check/cannot_infer_local_or_array.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_array.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -6,5 +6,5 @@ error[E0282]: type annotations needed\n    |         |\n    |         consider giving `x` a type\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "4650df5411b5bc6abba5ec0a5e396d548db00f00", "filename": "src/test/ui/type-check/cannot_infer_local_or_vec.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -8,5 +8,5 @@ error[E0282]: type annotations needed\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "08b5ae4bbb6fa2e7377b3bdf1f289d89077684f0", "filename": "src/test/ui/type-check/cannot_infer_local_or_vec_in_tuples.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec_in_tuples.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec_in_tuples.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec_in_tuples.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -8,5 +8,5 @@ error[E0282]: type annotations needed\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "b3c736c3b685d3722e066c8bab8b7e5d296b0e93", "filename": "src/test/ui/type-check/issue-22897.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftype-check%2Fissue-22897.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftype-check%2Fissue-22897.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fissue-22897.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0282]: type annotations needed\n 14 |     [];\n    |     ^^ cannot infer type for `[_; 0]`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "bf03e52369feb8b4a50423ab0be4230d1c039e59", "filename": "src/test/ui/type-check/issue-40294.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftype-check%2Fissue-40294.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftype-check%2Fissue-40294.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fissue-40294.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -10,5 +10,5 @@ error[E0282]: type annotations needed\n 21 | | }\n    | |_^ cannot infer type for `&'a T`\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}, {"sha": "200864dfbf77aa0467d3f6e75b25c066a51ca7bc", "filename": "src/test/ui/type-check/unknown_type_for_closure.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftype-check%2Funknown_type_for_closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1/src%2Ftest%2Fui%2Ftype-check%2Funknown_type_for_closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Funknown_type_for_closure.stderr?ref=d64dddbeafb0a41158b2338c7f5e8e355a4aa0e1", "patch": "@@ -4,5 +4,5 @@ error[E0282]: type annotations needed\n 12 |     let x = |_| {    };\n    |              ^ consider giving this closure parameter a type\n \n-error: aborting due to previous error\n+error: aborting due to previous error(s)\n "}]}