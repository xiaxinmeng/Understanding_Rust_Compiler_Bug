{"sha": "44d62425b9e08c1eebd329766b5e4dd7f8bc3216", "node_id": "C_kwDOAAsO6NoAKDQ0ZDYyNDI1YjllMDhjMWVlYmQzMjk3NjZiNWU0ZGQ3ZjhiYzMyMTY", "commit": {"author": {"name": "Markus Reiter", "email": "me@reitermark.us", "date": "2022-08-16T17:32:00Z"}, "committer": {"name": "Markus Reiter", "email": "me@reitermark.us", "date": "2022-08-16T17:32:00Z"}, "message": "Simplify `IpDisplayBuffer` API.", "tree": {"sha": "3643757f1dbba24c52f37229580b0f547742f574", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3643757f1dbba24c52f37229580b0f547742f574"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44d62425b9e08c1eebd329766b5e4dd7f8bc3216", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJFBAABCAAvFiEEbU1eLXPTwjnhHZwHJFKTtRcCZVsFAmL71JARHG1lQHJlaXRl\ncm1hcmsudXMACgkQJFKTtRcCZVu54A//UWDGa14VpK91WzX2ZWE/gT2stXcIHoXR\nuldDlqVEsGhBqGwBDO8rSzhLpZRgBmaYuRng2I8AtYPw01lNNrvTdVQb9jDjE1AY\n8j5JSX03WF9n1jDJHoOa4S4B3T/yNFz+FMiDejmtwla9kNZ4gQ7qKuM44jBk+rXm\nrIC13um+fbpygJZTckb1U1RCnshJFRZrWRDea7dU29UK1GgxFzBMLitHMPBomg6I\nFMiMfNmwzEyrSCrk7xgmqsbHITQiVoKUSvN13f26yIB4qxllh9EB7o+e0c3UMG4B\ndiOIeEUbMsmrh5/yFtiVT8Cc/vZf5xCgHNLO2wxW//LtshmF1KhyRu+Dk5rDpcr5\n5/3aY6eb0T2yPWoPmUC5CJyp2WebcSucYUNfYRXlBH2sZQuahA/KMV7r8HJZLAWo\nkLTWhBD/715DC02WOUA+B9CB0uVoejHdMO3/mJq6chLnNoynHDsutWqOClMtOthX\nqFPJYyJ8H38gzS/xj+R/Bn8lcAEH69dF7XVsWehyKbHGJOHf4TpJQC15T+dKQrlg\n2oM+juPoNHANpZYQT11jgSugljkP2d/BDfNA7+gYvXH0Pj1qNVAcHXZ80mflCG9U\nlhIaignnsIent8S7jOh7ja55dM2Wpv6qq4vXtBPmSxIMFYvXdXpct6Jq7y41TGHs\nLZXPFMsi9iA=\n=kV2f\n-----END PGP SIGNATURE-----", "payload": "tree 3643757f1dbba24c52f37229580b0f547742f574\nparent 31540f5e15d5785a61d96869b373f7ed4d4a3654\nauthor Markus Reiter <me@reitermark.us> 1660671120 +0200\ncommitter Markus Reiter <me@reitermark.us> 1660671120 +0200\n\nSimplify `IpDisplayBuffer` API.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44d62425b9e08c1eebd329766b5e4dd7f8bc3216", "html_url": "https://github.com/rust-lang/rust/commit/44d62425b9e08c1eebd329766b5e4dd7f8bc3216", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44d62425b9e08c1eebd329766b5e4dd7f8bc3216/comments", "author": {"login": "reitermarkus", "id": 1309829, "node_id": "MDQ6VXNlcjEzMDk4Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1309829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reitermarkus", "html_url": "https://github.com/reitermarkus", "followers_url": "https://api.github.com/users/reitermarkus/followers", "following_url": "https://api.github.com/users/reitermarkus/following{/other_user}", "gists_url": "https://api.github.com/users/reitermarkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/reitermarkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reitermarkus/subscriptions", "organizations_url": "https://api.github.com/users/reitermarkus/orgs", "repos_url": "https://api.github.com/users/reitermarkus/repos", "events_url": "https://api.github.com/users/reitermarkus/events{/privacy}", "received_events_url": "https://api.github.com/users/reitermarkus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "reitermarkus", "id": 1309829, "node_id": "MDQ6VXNlcjEzMDk4Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1309829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reitermarkus", "html_url": "https://github.com/reitermarkus", "followers_url": "https://api.github.com/users/reitermarkus/followers", "following_url": "https://api.github.com/users/reitermarkus/following{/other_user}", "gists_url": "https://api.github.com/users/reitermarkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/reitermarkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reitermarkus/subscriptions", "organizations_url": "https://api.github.com/users/reitermarkus/orgs", "repos_url": "https://api.github.com/users/reitermarkus/repos", "events_url": "https://api.github.com/users/reitermarkus/events{/privacy}", "received_events_url": "https://api.github.com/users/reitermarkus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31540f5e15d5785a61d96869b373f7ed4d4a3654", "url": "https://api.github.com/repos/rust-lang/rust/commits/31540f5e15d5785a61d96869b373f7ed4d4a3654", "html_url": "https://github.com/rust-lang/rust/commit/31540f5e15d5785a61d96869b373f7ed4d4a3654"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "189754a161e71860dba0614ad0e150fa040a8599", "filename": "library/std/src/net/ip.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/44d62425b9e08c1eebd329766b5e4dd7f8bc3216/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44d62425b9e08c1eebd329766b5e4dd7f8bc3216/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fip.rs?ref=44d62425b9e08c1eebd329766b5e4dd7f8bc3216", "patch": "@@ -999,7 +999,9 @@ impl fmt::Display for Ipv4Addr {\n         if fmt.precision().is_none() && fmt.width().is_none() {\n             write!(fmt, \"{}.{}.{}.{}\", octets[0], octets[1], octets[2], octets[3])\n         } else {\n-            let mut buf = IpDisplayBuffer::new(b\"255.255.255.255\");\n+            const LONGEST_IPV4_ADDR: &str = \"255.255.255.255\";\n+\n+            let mut buf = IpDisplayBuffer::<{ LONGEST_IPV4_ADDR.len() }>::new();\n             // Buffer is long enough for the longest possible IPv4 address, so this should never fail.\n             write!(buf, \"{}.{}.{}.{}\", octets[0], octets[1], octets[2], octets[3]).unwrap();\n \n@@ -1778,7 +1780,9 @@ impl fmt::Display for Ipv6Addr {\n                 }\n             }\n         } else {\n-            let mut buf = IpDisplayBuffer::new(b\"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+            const LONGEST_IPV6_ADDR: &str = \"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\";\n+\n+            let mut buf = IpDisplayBuffer::<{ LONGEST_IPV6_ADDR.len() }>::new();\n             // Buffer is long enough for the longest possible IPv6 address, so this should never fail.\n             write!(buf, \"{}\", self).unwrap();\n "}, {"sha": "bd852d5da8ec5eca87defa2b346e4e6b90ff9651", "filename": "library/std/src/net/ip/display_buffer.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/44d62425b9e08c1eebd329766b5e4dd7f8bc3216/library%2Fstd%2Fsrc%2Fnet%2Fip%2Fdisplay_buffer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44d62425b9e08c1eebd329766b5e4dd7f8bc3216/library%2Fstd%2Fsrc%2Fnet%2Fip%2Fdisplay_buffer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fip%2Fdisplay_buffer.rs?ref=44d62425b9e08c1eebd329766b5e4dd7f8bc3216", "patch": "@@ -9,12 +9,12 @@ pub struct IpDisplayBuffer<const SIZE: usize> {\n }\n \n impl<const SIZE: usize> IpDisplayBuffer<SIZE> {\n-    #[inline(always)]\n-    pub const fn new(_ip: &[u8; SIZE]) -> Self {\n-        Self { buf: MaybeUninit::uninit_array::<SIZE>(), len: 0 }\n+    #[inline]\n+    pub const fn new() -> Self {\n+        Self { buf: MaybeUninit::uninit_array(), len: 0 }\n     }\n \n-    #[inline(always)]\n+    #[inline]\n     pub fn as_str(&self) -> &str {\n         // SAFETY: `buf` is only written to by the `fmt::Write::write_str` implementation\n         // which writes a valid UTF-8 string to `buf` and correctly sets `len`."}]}