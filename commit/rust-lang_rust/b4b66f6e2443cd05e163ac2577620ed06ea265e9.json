{"sha": "b4b66f6e2443cd05e163ac2577620ed06ea265e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0YjY2ZjZlMjQ0M2NkMDVlMTYzYWMyNTc3NjIwZWQwNmVhMjY1ZTk=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-06T22:11:02Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-06T22:11:02Z"}, "message": "Fix trimming of lint docs\n\nIt was removing all the indentation before.\n\nCo-authored-by: Eric Huss <eric@huss.org>", "tree": {"sha": "9ef63d48c3a516bfad87d08bf41814867e9f522b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ef63d48c3a516bfad87d08bf41814867e9f522b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4b66f6e2443cd05e163ac2577620ed06ea265e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4b66f6e2443cd05e163ac2577620ed06ea265e9", "html_url": "https://github.com/rust-lang/rust/commit/b4b66f6e2443cd05e163ac2577620ed06ea265e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4b66f6e2443cd05e163ac2577620ed06ea265e9/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bb68c31f8cef24174a7d3499de6b4ebea069900", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bb68c31f8cef24174a7d3499de6b4ebea069900", "html_url": "https://github.com/rust-lang/rust/commit/5bb68c31f8cef24174a7d3499de6b4ebea069900"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ea54a351e03b5339f52e8e130d7cb415a9da7831", "filename": "src/tools/lint-docs/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b4b66f6e2443cd05e163ac2577620ed06ea265e9/src%2Ftools%2Flint-docs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4b66f6e2443cd05e163ac2577620ed06ea265e9/src%2Ftools%2Flint-docs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flint-docs%2Fsrc%2Flib.rs?ref=b4b66f6e2443cd05e163ac2577620ed06ea265e9", "patch": "@@ -143,8 +143,8 @@ impl<'a> LintExtractor<'a> {\n                     Some((lineno, line)) => {\n                         let line = line.trim();\n                         if let Some(text) = line.strip_prefix(\"/// \") {\n-                            doc_lines.push(text.trim().to_string());\n-                        } else if line.starts_with(\"///\") {\n+                            doc_lines.push(text.to_string());\n+                        } else if line == \"///\" {\n                             doc_lines.push(\"\".to_string());\n                         } else if line.starts_with(\"// \") {\n                             // Ignore comments."}]}