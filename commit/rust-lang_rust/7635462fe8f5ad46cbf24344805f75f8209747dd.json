{"sha": "7635462fe8f5ad46cbf24344805f75f8209747dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2MzU0NjJmZThmNWFkNDZjYmYyNDM0NDgwNWY3NWY4MjA5NzQ3ZGQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-23T19:15:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-23T19:15:54Z"}, "message": "Rollup merge of #79841 - fintelia:patch-6, r=kennytm\n\nMore clear documentation for NonNull<T>\n\nRephrase and hopefully clarify the discussion of covariance in `NonNull<T>` documentation.\n\nI'm very much not an expert so someone should definitely double check the correctness of what I'm saying. At the same time, the new language makes more sense to me, so hopefully it also is more logical to others whose knowledge of covariance basically begins and ends with the [Rustonomicon chapter](https://doc.rust-lang.org/nomicon/subtyping.html).\n\nRelated to #48929.", "tree": {"sha": "10d73404496f9c26f559b8dc13295f530ee0ce2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10d73404496f9c26f559b8dc13295f530ee0ce2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7635462fe8f5ad46cbf24344805f75f8209747dd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgDHXqCRBK7hj4Ov3rIwAAdHIIAGRSlz002XDaPXK9gHwXh5vA\ntbCk9sUMNhesixMkZesXnma0U/WsGvOEQ+ShTxkAfEAZNrwFxWWSzOkNsuon5BGF\nHEy+41VlzWD6Fu1gghdPSIaFJCmVNlbe1354Gv7AG5gikMRS/nB5Jge6qE1DoxXy\n3gtdNA4/qSh/xO56kupSV2MAX3FUl0as7WWTlXR77MwJBRt/i928dkweRhuDJoa1\nxGeHkrPVze+a1i8ijFA4oJfo680QYm6yfYzf1eTgIJZw16kVKlvAvZOxEQuRwnMF\nmHooyn6AJAhziU8ZJvOnVpQag4TD+jH48amycDRkSTdg2+Tqm5lWFL9ns3ioOyE=\n=O6Ww\n-----END PGP SIGNATURE-----\n", "payload": "tree 10d73404496f9c26f559b8dc13295f530ee0ce2e\nparent 4d0dd02ee07bddad9136f95c9f7846ebf3eb3fc5\nparent 0392085f5ce9ed610a95cc7b956545b0fd26252a\nauthor Jonas Schievink <jonasschievink@gmail.com> 1611429354 +0100\ncommitter GitHub <noreply@github.com> 1611429354 +0100\n\nRollup merge of #79841 - fintelia:patch-6, r=kennytm\n\nMore clear documentation for NonNull<T>\n\nRephrase and hopefully clarify the discussion of covariance in `NonNull<T>` documentation.\n\nI'm very much not an expert so someone should definitely double check the correctness of what I'm saying. At the same time, the new language makes more sense to me, so hopefully it also is more logical to others whose knowledge of covariance basically begins and ends with the [Rustonomicon chapter](https://doc.rust-lang.org/nomicon/subtyping.html).\n\nRelated to #48929.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7635462fe8f5ad46cbf24344805f75f8209747dd", "html_url": "https://github.com/rust-lang/rust/commit/7635462fe8f5ad46cbf24344805f75f8209747dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7635462fe8f5ad46cbf24344805f75f8209747dd/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d0dd02ee07bddad9136f95c9f7846ebf3eb3fc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d0dd02ee07bddad9136f95c9f7846ebf3eb3fc5", "html_url": "https://github.com/rust-lang/rust/commit/4d0dd02ee07bddad9136f95c9f7846ebf3eb3fc5"}, {"sha": "0392085f5ce9ed610a95cc7b956545b0fd26252a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0392085f5ce9ed610a95cc7b956545b0fd26252a", "html_url": "https://github.com/rust-lang/rust/commit/0392085f5ce9ed610a95cc7b956545b0fd26252a"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "e45fefc7ed7657f1c3e0f949d97ed58a46f626ce", "filename": "library/core/src/ptr/non_null.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7635462fe8f5ad46cbf24344805f75f8209747dd/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7635462fe8f5ad46cbf24344805f75f8209747dd/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs?ref=7635462fe8f5ad46cbf24344805f75f8209747dd", "patch": "@@ -19,12 +19,19 @@ use crate::slice::{self, SliceIndex};\n /// as a discriminant -- `Option<NonNull<T>>` has the same size as `*mut T`.\n /// However the pointer may still dangle if it isn't dereferenced.\n ///\n-/// Unlike `*mut T`, `NonNull<T>` is covariant over `T`. If this is incorrect\n-/// for your use case, you should include some [`PhantomData`] in your type to\n-/// provide invariance, such as `PhantomData<Cell<T>>` or `PhantomData<&'a mut T>`.\n-/// Usually this won't be necessary; covariance is correct for most safe abstractions,\n-/// such as `Box`, `Rc`, `Arc`, `Vec`, and `LinkedList`. This is the case because they\n-/// provide a public API that follows the normal shared XOR mutable rules of Rust.\n+/// Unlike `*mut T`, `NonNull<T>` was chosen to be covariant over `T`. This makes it\n+/// possible to use `NonNull<T>` when building covariant types, but introduces the\n+/// risk of unsoundness if used in a type that shouldn't actually be covariant.\n+/// (The opposite choice was made for `*mut T` even though technically the unsoundness\n+/// could only be caused by calling unsafe functions.)\n+///\n+/// Covariance is correct for most safe abstractions, such as `Box`, `Rc`, `Arc`, `Vec`,\n+/// and `LinkedList`. This is the case because they provide a public API that follows the\n+/// normal shared XOR mutable rules of Rust.\n+///\n+/// If your type cannot safely be covariant, you must ensure it contains some\n+/// additional field to provide invariance. Often this field will be a [`PhantomData`]\n+/// type like `PhantomData<Cell<T>>` or `PhantomData<&'a mut T>`.\n ///\n /// Notice that `NonNull<T>` has a `From` instance for `&T`. However, this does\n /// not change the fact that mutating through a (pointer derived from a) shared"}]}