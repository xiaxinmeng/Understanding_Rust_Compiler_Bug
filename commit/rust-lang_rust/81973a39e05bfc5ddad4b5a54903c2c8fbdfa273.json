{"sha": "81973a39e05bfc5ddad4b5a54903c2c8fbdfa273", "node_id": "C_kwDOAAsO6NoAKDgxOTczYTM5ZTA1YmZjNWRkYWQ0YjVhNTQ5MDNjMmM4ZmJkZmEyNzM", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-06T01:03:52Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-30T20:12:21Z"}, "message": "Don't show `for<'lt>` in force trimmed paths", "tree": {"sha": "dbd0983c2dc59a962daf3a5a09a67628ec39cfa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbd0983c2dc59a962daf3a5a09a67628ec39cfa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273", "html_url": "https://github.com/rust-lang/rust/commit/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fa95b847be64342562bccd55abb7e55c8daa3f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fa95b847be64342562bccd55abb7e55c8daa3f2", "html_url": "https://github.com/rust-lang/rust/commit/3fa95b847be64342562bccd55abb7e55c8daa3f2"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "d9d6e65a97a66a7f08331b2a1248b7bf8343f320", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=81973a39e05bfc5ddad4b5a54903c2c8fbdfa273", "patch": "@@ -2346,6 +2346,7 @@ impl<'tcx> FmtPrinter<'_, 'tcx> {\n         } else {\n             let tcx = self.tcx;\n \n+            let trim_path = FORCE_TRIMMED_PATH.with(|flag| flag.get());\n             // Closure used in `RegionFolder` to create names for anonymous late-bound\n             // regions. We use two `DebruijnIndex`es (one for the currently folded\n             // late-bound region and the other for the binder level) to determine\n@@ -2400,8 +2401,10 @@ impl<'tcx> FmtPrinter<'_, 'tcx> {\n                     }\n                 };\n \n-                start_or_continue(&mut self, \"for<\", \", \");\n-                do_continue(&mut self, name);\n+                if !trim_path {\n+                    start_or_continue(&mut self, \"for<\", \", \");\n+                    do_continue(&mut self, name);\n+                }\n                 tcx.mk_region(ty::ReLateBound(ty::INNERMOST, ty::BoundRegion { var: br.var, kind }))\n             };\n             let mut folder = RegionFolder {\n@@ -2412,7 +2415,9 @@ impl<'tcx> FmtPrinter<'_, 'tcx> {\n             };\n             let new_value = value.clone().skip_binder().fold_with(&mut folder);\n             let region_map = folder.region_map;\n-            start_or_continue(&mut self, \"\", \"> \");\n+            if !trim_path {\n+                start_or_continue(&mut self, \"\", \"> \");\n+            }\n             (new_value, region_map)\n         };\n "}, {"sha": "dd00ff103e7ad61b624fbdaeefb2b8dda370838d", "filename": "tests/ui/function-pointer/unsized-ret.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Ffunction-pointer%2Funsized-ret.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Ffunction-pointer%2Funsized-ret.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffunction-pointer%2Funsized-ret.stderr?ref=81973a39e05bfc5ddad4b5a54903c2c8fbdfa273", "patch": "@@ -23,7 +23,7 @@ LL |     foo::<for<'a> fn(&'a ()) -> (dyn std::fmt::Display + 'a), _>(None, (&()\n    |     required by a bound introduced by this call\n    |\n    = help: within `for<'a> fn(&'a ()) -> (dyn std::fmt::Display + 'a)`, the trait `for<'a> Sized` is not implemented for `(dyn std::fmt::Display + 'a)`\n-   = note: required because it appears within the type `for<'a> fn(&'a ()) -> (dyn Display + 'a)`\n+   = note: required because it appears within the type `fn(&'a ()) -> (dyn Display + 'a)`\n note: required by a bound in `foo`\n   --> $DIR/unsized-ret.rs:5:11\n    |"}, {"sha": "173bc47b27253b2c290d4559c005c9970204ca72", "filename": "tests/ui/higher-rank-trait-bounds/hang-on-deeply-nested-dyn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fhigher-rank-trait-bounds%2Fhang-on-deeply-nested-dyn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fhigher-rank-trait-bounds%2Fhang-on-deeply-nested-dyn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fhigher-rank-trait-bounds%2Fhang-on-deeply-nested-dyn.stderr?ref=81973a39e05bfc5ddad4b5a54903c2c8fbdfa273", "patch": "@@ -11,9 +11,9 @@ LL | |     ),\n LL | | ) {\n    | |_- expected `&dyn for<'a> Fn(&'a (dyn for<'a> Fn(&'a (dyn for<'a> Fn(&'a (dyn for<'a> Fn(&'a (dyn for<'a> Fn(&'a (dyn for<'a> Fn(&'a (dyn for<'a> Fn(&'a (dyn for<'a> Fn(&'a (dyn for<'a> Fn(&'a (dyn for<'a> Fn(&'a (dyn for<'a> Fn(&'a (dyn Fn(u32) + 'a)) + 'a)) + 'a)) + 'a)) + 'a)) + 'a)) + 'a)) + 'a)) + 'a)) + 'a)) + 'a))` because of return type\n LL |       f\n-   |       ^ expected `&dyn for<'a> Fn(&'a ...)`, found `&dyn Fn(u32)`\n+   |       ^ expected `&dyn Fn(&'a (dyn Fn(&'a ...) + 'a))`, found `&dyn Fn(u32)`\n    |\n-   = note: expected reference `&dyn for<'a> Fn(&'a (dyn for<'a> Fn(&'a (dyn for<'a> Fn(&'a (dyn for<'a> Fn(&'a ...) + 'a)) + 'a)) + 'a))`\n+   = note: expected reference `&dyn Fn(&'a (dyn Fn(&'a (dyn Fn(&'a (dyn Fn(&'a (dyn Fn(&'a (dyn Fn(...) + 'a)) + 'a)) + 'a)) + 'a)) + 'a))`\n            the full type name has been written to '$TEST_BUILD_DIR/higher-rank-trait-bounds/hang-on-deeply-nested-dyn/hang-on-deeply-nested-dyn.long-type-hash.txt'\n               found reference `&dyn Fn(u32)`\n "}, {"sha": "6710551057373e5a8d474fd819aef6c34eafb793", "filename": "tests/ui/higher-rank-trait-bounds/issue-30786.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fhigher-rank-trait-bounds%2Fissue-30786.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fhigher-rank-trait-bounds%2Fissue-30786.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fhigher-rank-trait-bounds%2Fissue-30786.stderr?ref=81973a39e05bfc5ddad4b5a54903c2c8fbdfa273", "patch": "@@ -19,7 +19,7 @@ note: the following trait bounds were not satisfied:\n LL | impl<T> StreamExt for T where for<'a> &'a mut T: Stream {}\n    |         ---------     -                          ^^^^^^ unsatisfied trait bound introduced here\n \n-error[E0599]: the method `countx` exists for struct `Filter<Map<Repeat, for<'a> fn(&'a u64) -> &'a u64 {identity::<u64>}>, [closure@issue-30786.rs:129:30]>`, but its trait bounds were not satisfied\n+error[E0599]: the method `countx` exists for struct `Filter<Map<Repeat, fn(&'a u64) -> &'a u64 {identity::<u64>}>, [closure@issue-30786.rs:129:30]>`, but its trait bounds were not satisfied\n   --> $DIR/issue-30786.rs:130:24\n    |\n LL | pub struct Filter<S, F> {"}, {"sha": "0cec4751fb86a18b5668529fd1bcd637ab3bd086", "filename": "tests/ui/issues/issue-102964.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fissues%2Fissue-102964.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fissues%2Fissue-102964.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-102964.stderr?ref=81973a39e05bfc5ddad4b5a54903c2c8fbdfa273", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-102964.rs:5:41\n    |\n LL | fn bar_function<T>(function: Foo<T>) -> RcFoo<T> {\n-   |    ------------                         ^^^^^^^^ expected `Rc<&dyn for<'a> Fn(&'a T)>`, found `()`\n+   |    ------------                         ^^^^^^^^ expected `Rc<&dyn Fn(&'a T)>`, found `()`\n    |    |\n    |    implicitly returns `()` as its body has no tail or `return` expression\n    |"}, {"sha": "583afaead2d320cc0ce3b07b4f63b3a21d323a0f", "filename": "tests/ui/issues/issue-24322.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fissues%2Fissue-24322.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fissues%2Fissue-24322.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-24322.stderr?ref=81973a39e05bfc5ddad4b5a54903c2c8fbdfa273", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-24322.rs:8:29\n    |\n LL |     let x: &fn(&B) -> u32 = &B::func;\n-   |            --------------   ^^^^^^^^ expected `&for<'a> fn(&'a B) -> u32`, found `&for<'a> fn(&'a B) -> u32 {B::func}`\n+   |            --------------   ^^^^^^^^ expected `&fn(&'a B) -> u32`, found `&fn(&'a B) -> u32 {B::func}`\n    |            |\n    |            expected due to this\n    |"}, {"sha": "8dcf7911baf91f55e1495de5372dcdb982d6e4bb", "filename": "tests/ui/issues/issue-57362-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fissues%2Fissue-57362-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fissues%2Fissue-57362-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-57362-2.stderr?ref=81973a39e05bfc5ddad4b5a54903c2c8fbdfa273", "patch": "@@ -1,8 +1,8 @@\n-error[E0599]: the function or associated item `make_g` exists for fn pointer `for<'a> fn(&'a ())`, but its trait bounds were not satisfied\n+error[E0599]: the function or associated item `make_g` exists for fn pointer `fn(&'a ())`, but its trait bounds were not satisfied\n   --> $DIR/issue-57362-2.rs:22:25\n    |\n LL |     let x = <fn (&())>::make_g();\n-   |                         ^^^^^^ function or associated item cannot be called on `for<'a> fn(&'a ())` due to unsatisfied trait bounds\n+   |                         ^^^^^^ function or associated item cannot be called on `fn(&'a ())` due to unsatisfied trait bounds\n    |\n    = note: the following trait bounds were not satisfied:\n            `for<'a> fn(&'a ()): X`"}, {"sha": "ceef6e34d024f7c29fdaa629ef91bd8f7a358501", "filename": "tests/ui/nll/issue-57642-higher-ranked-subtype.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fnll%2Fissue-57642-higher-ranked-subtype.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fnll%2Fissue-57642-higher-ranked-subtype.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnll%2Fissue-57642-higher-ranked-subtype.stderr?ref=81973a39e05bfc5ddad4b5a54903c2c8fbdfa273", "patch": "@@ -1,8 +1,8 @@\n-error[E0599]: the function or associated item `make_g` exists for fn pointer `for<'a> fn(&'a ())`, but its trait bounds were not satisfied\n+error[E0599]: the function or associated item `make_g` exists for fn pointer `fn(&'a ())`, but its trait bounds were not satisfied\n   --> $DIR/issue-57642-higher-ranked-subtype.rs:31:25\n    |\n LL |     let x = <fn (&())>::make_g();\n-   |                         ^^^^^^ function or associated item cannot be called on `for<'a> fn(&'a ())` due to unsatisfied trait bounds\n+   |                         ^^^^^^ function or associated item cannot be called on `fn(&'a ())` due to unsatisfied trait bounds\n    |\n    = note: the following trait bounds were not satisfied:\n            `for<'a> fn(&'a ()): X`\n@@ -13,11 +13,11 @@ note: `X` defines an item `make_g`, perhaps you need to implement it\n LL | trait X {\n    | ^^^^^^^\n \n-error[E0599]: no function or associated item named `make_f` found for fn pointer `for<'a> fn(&'a ())` in the current scope\n+error[E0599]: no function or associated item named `make_f` found for fn pointer `fn(&'a ())` in the current scope\n   --> $DIR/issue-57642-higher-ranked-subtype.rs:35:25\n    |\n LL |     let x = <fn (&())>::make_f();\n-   |                         ^^^^^^ function or associated item not found in `for<'a> fn(&'a ())`\n+   |                         ^^^^^^ function or associated item not found in `fn(&'a ())`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n note: `Y` defines an item `make_f`, perhaps you need to implement it"}, {"sha": "af64b6867bb0c8e376a00985c23a189b6125ac9b", "filename": "tests/ui/regions/issue-102374.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fregions%2Fissue-102374.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fregions%2Fissue-102374.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fregions%2Fissue-102374.stderr?ref=81973a39e05bfc5ddad4b5a54903c2c8fbdfa273", "patch": "@@ -7,7 +7,7 @@ LL |     f\n    |     ^ expected `i32`, found fn pointer\n    |\n    = note:    expected type `i32`\n-           found fn pointer `for<'z1, 'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l, 'm, 'n, 'o, 'p, 'q, 'r, 's, 't, 'u, 'v, 'w, 'x, 'y, 'z, 'z0> fn(Cell<...>)`\n+           found fn pointer `fn(Cell<...>)`\n            the full type name has been written to '$TEST_BUILD_DIR/regions/issue-102374/issue-102374.long-type-hash.txt'\n \n error: aborting due to previous error"}, {"sha": "3492f4ea0f15563abe8c0acf33ef52e139effc0a", "filename": "tests/ui/suggestions/issue-101984.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fsuggestions%2Fissue-101984.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81973a39e05bfc5ddad4b5a54903c2c8fbdfa273/tests%2Fui%2Fsuggestions%2Fissue-101984.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-101984.stderr?ref=81973a39e05bfc5ddad4b5a54903c2c8fbdfa273", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL |         let (cmp, router) = self.router.at()?;\n    |             ^^^^^^^^^^^^^   ----------------- this expression has type `Match<&(for<'a> fn(&'a ()), Box<Wrapper>)>`\n    |             |\n-   |             expected `Match<&(for<'a> fn(&'a ()), ...)>`, found `(_, _)`\n+   |             expected `Match<&(fn(&'a ()), Box<Wrapper>)>`, found `(_, _)`\n    |\n    = note: expected struct `Match<&(for<'a> fn(&'a ()), Box<Wrapper>)>`\n                found tuple `(_, _)`"}]}