{"sha": "b3cbe9e3c1115239997e806498fa5bc7eea7bc98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzY2JlOWUzYzExMTUyMzk5OTdlODA2NDk4ZmE1YmM3ZWVhN2JjOTg=", "commit": {"author": {"name": "Chris Peterson", "email": "cpeterson@mozilla.com", "date": "2013-01-21T06:52:42Z"}, "committer": {"name": "Chris Peterson", "email": "cpeterson@mozilla.com", "date": "2013-01-21T06:56:45Z"}, "message": "Enable lint warnings for doc tests", "tree": {"sha": "099d8867e832b7e6ee45858389a226858ae104a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/099d8867e832b7e6ee45858389a226858ae104a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3cbe9e3c1115239997e806498fa5bc7eea7bc98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3cbe9e3c1115239997e806498fa5bc7eea7bc98", "html_url": "https://github.com/rust-lang/rust/commit/b3cbe9e3c1115239997e806498fa5bc7eea7bc98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3cbe9e3c1115239997e806498fa5bc7eea7bc98/comments", "author": {"login": "cpeterso", "id": 629193, "node_id": "MDQ6VXNlcjYyOTE5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/629193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpeterso", "html_url": "https://github.com/cpeterso", "followers_url": "https://api.github.com/users/cpeterso/followers", "following_url": "https://api.github.com/users/cpeterso/following{/other_user}", "gists_url": "https://api.github.com/users/cpeterso/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpeterso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpeterso/subscriptions", "organizations_url": "https://api.github.com/users/cpeterso/orgs", "repos_url": "https://api.github.com/users/cpeterso/repos", "events_url": "https://api.github.com/users/cpeterso/events{/privacy}", "received_events_url": "https://api.github.com/users/cpeterso/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cpeterso", "id": 629193, "node_id": "MDQ6VXNlcjYyOTE5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/629193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpeterso", "html_url": "https://github.com/cpeterso", "followers_url": "https://api.github.com/users/cpeterso/followers", "following_url": "https://api.github.com/users/cpeterso/following{/other_user}", "gists_url": "https://api.github.com/users/cpeterso/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpeterso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpeterso/subscriptions", "organizations_url": "https://api.github.com/users/cpeterso/orgs", "repos_url": "https://api.github.com/users/cpeterso/repos", "events_url": "https://api.github.com/users/cpeterso/events{/privacy}", "received_events_url": "https://api.github.com/users/cpeterso/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50c8cbb25aeb9d8132ac06914e9978d3cddb7f42", "url": "https://api.github.com/repos/rust-lang/rust/commits/50c8cbb25aeb9d8132ac06914e9978d3cddb7f42", "html_url": "https://github.com/rust-lang/rust/commit/50c8cbb25aeb9d8132ac06914e9978d3cddb7f42"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "5754d234afb6df36fc75790e0c6102f58a9105ee", "filename": "src/etc/extract-tests.py", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b3cbe9e3c1115239997e806498fa5bc7eea7bc98/src%2Fetc%2Fextract-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/b3cbe9e3c1115239997e806498fa5bc7eea7bc98/src%2Fetc%2Fextract-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fextract-tests.py?ref=b3cbe9e3c1115239997e806498fa5bc7eea7bc98", "patch": "@@ -2,11 +2,11 @@\n \n # Script for extracting compilable fragments from markdown\n # documentation. See prep.js for a description of the format\n-# recognized by this tool. Expects a directory fragements/ to exist\n+# recognized by this tool. Expects a directory fragments/ to exist\n # under the current directory, and writes the fragments in there as\n # individual .rs files.\n \n-import sys, re;\n+import sys, re\n \n if len(sys.argv) < 3:\n     print(\"Please provide an input filename\")\n@@ -26,7 +26,7 @@\n while cur < len(lines):\n     line = lines[cur]\n     cur += 1\n-    chap = re.match(\"# (.*)\", line);\n+    chap = re.match(\"# (.*)\", line)\n     if chap:\n         chapter = re.sub(r\"\\W\", \"_\", chap.group(1)).lower()\n         chapter_n = 1\n@@ -51,14 +51,30 @@\n             else:\n                 # Lines beginning with '# ' are turned into valid code\n                 line = re.sub(\"^# \", \"\", line)\n-                # Allow elipses in code snippets\n+                # Allow ellipses in code snippets\n                 line = re.sub(\"\\.\\.\\.\", \"\", line)\n                 block += line\n         if not ignore:\n             if not re.search(r\"\\bfn main\\b\", block):\n                 block = \"fn main() {\\n\" + block + \"\\n}\\n\"\n             if not re.search(r\"\\bextern mod std\\b\", block):\n-                block = \"extern mod std;\\n\" + block;\n+                block = \"extern mod std;\\n\" + block\n+            block = \"\"\"#[ forbid(ctypes) ];\n+#[ forbid(deprecated_mode) ];\n+#[ forbid(deprecated_pattern) ];\n+#[ forbid(implicit_copies) ];\n+#[ forbid(non_implicitly_copyable_typarams) ];\n+#[ forbid(path_statement) ];\n+#[ forbid(type_limits) ];\n+#[ forbid(unrecognized_lint) ];\n+#[ forbid(unused_imports) ];\n+#[ forbid(vecs_implicitly_copyable) ];\n+#[ forbid(while_true) ];\n+\n+#[ warn(deprecated_self) ];\n+#[ warn(non_camel_case_types) ];\n+#[ warn(structural_records) ];\\n\n+\"\"\" + block\n             if xfail:\n                 block = \"// xfail-test\\n\" + block\n             filename = (dest + \"/\" + str(chapter)"}]}