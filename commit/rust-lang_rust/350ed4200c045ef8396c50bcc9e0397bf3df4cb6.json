{"sha": "350ed4200c045ef8396c50bcc9e0397bf3df4cb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MGVkNDIwMGMwNDVlZjgzOTZjNTBiY2M5ZTAzOTdiZjNkZjRjYjY=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-09-17T18:49:21Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-09-23T12:18:34Z"}, "message": "Added note about dangling references.\n\nThis error can only occur within a function when a borrow of data owned\nwithin the function is returned; and when there are arguments that could\nhave been returned instead. Therefore, it is always applicable to add a\nspecific note that links to the relevant rust documentation about\ndangling references.", "tree": {"sha": "6bc43bc3ccccd588969041fdf8d605b5a5212ac1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bc43bc3ccccd588969041fdf8d605b5a5212ac1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/350ed4200c045ef8396c50bcc9e0397bf3df4cb6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlunhJoACgkQAXYLT59T\n8VQOSQ//deaSbxi1PDEbrbzSw0WBrjpLftLyNbypkn7Xcsxa9vjHKhLKghcAa4oQ\n+pERbQ5LsGaBRC0F7P7N3vDyhfVdQH33Ovl6K3+quEeDgUHnKXBrdRUy73CalfHy\nCWgBB7ogzb2oFS0FWcwnTfhTtdCgTb0vm6Jcr7tdCN6lIBVCDZctPiQDI+vEGGOl\nVD7OgxNk2O8LEd8AXSWhF9m8qNORIT3pnuf9OdzVabeuLygq5HhlDcFcbZDwSUIp\nOMQCNlsWhsqwJluYlCAluB8y8zHDePk73fJCTB0QF+IGwWo07hYHpgGXXpZvwAjE\nvoDGXJkN6XH3WOVzGnJmY8F2V0A6j4fi47ibu/4anSb41gVvzz2SX4sd7iWSVaMW\nEpfgsTZm060Po+ZrXT0gT84g3qoc+vGB9KiXYuMclk1AeJY7nyDM6KFRDDgmpT1k\nc1MrIrkHEbtc/SNgKLFcg0PVWIrAowFyGqivK9VGZrrwd9opuvNJ1zSNPyWE7370\nX86+0OTvpFOaaStMJpKONOhIeT0IhzwTR0cPXxYcGWbNptMNSOCSmmiHtjEGgU0B\nyF12g/cI6zzrupDLN5mpLL2L1UHQnaIy/mBspjjQu7+AtkWu9unKx/sIzGdyPyvd\nxjTY809+f1hhexb7F2m1Oc9paASOVibCGhUuiho0wqIxjXoEQjs=\n=qvbb\n-----END PGP SIGNATURE-----", "payload": "tree 6bc43bc3ccccd588969041fdf8d605b5a5212ac1\nparent 3becbbc1299f6938ff13f09ee3b3f37f7600326f\nauthor David Wood <david@davidtw.co> 1537210161 +0200\ncommitter David Wood <david@davidtw.co> 1537705114 +0200\n\nAdded note about dangling references.\n\nThis error can only occur within a function when a borrow of data owned\nwithin the function is returned; and when there are arguments that could\nhave been returned instead. Therefore, it is always applicable to add a\nspecific note that links to the relevant rust documentation about\ndangling references.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/350ed4200c045ef8396c50bcc9e0397bf3df4cb6", "html_url": "https://github.com/rust-lang/rust/commit/350ed4200c045ef8396c50bcc9e0397bf3df4cb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3becbbc1299f6938ff13f09ee3b3f37f7600326f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3becbbc1299f6938ff13f09ee3b3f37f7600326f", "html_url": "https://github.com/rust-lang/rust/commit/3becbbc1299f6938ff13f09ee3b3f37f7600326f"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "3c8a8e26335e16c566e432dce97d913efb590feb", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=350ed4200c045ef8396c50bcc9e0397bf3df4cb6", "patch": "@@ -530,6 +530,15 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                         self.infcx.tcx.hir.name(fn_node_id),\n                     )\n                 );\n+\n+                err.note(\n+                    \"functions cannot return a borrow to data owned within the function's scope, \\\n+                     functions can only return borrows to data passed as arguments\",\n+                );\n+                err.note(\n+                    \"to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-\\\n+                     references-and-borrowing.html#dangling-references>\",\n+                );\n             } else {\n                 err.span_label(\n                     drop_span,"}, {"sha": "e7f2efcb01a54028de8e788df79887bb05c69e7c", "filename": "src/test/ui/issues/issue-30438-c.nll.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/src%2Ftest%2Fui%2Fissues%2Fissue-30438-c.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/src%2Ftest%2Fui%2Fissues%2Fissue-30438-c.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30438-c.nll.stderr?ref=350ed4200c045ef8396c50bcc9e0397bf3df4cb6", "patch": "@@ -11,6 +11,9 @@ LL |     &x\n LL |     //~^ ERROR: `x` does not live long enough\n LL | }\n    | - ...but `x` is only valid for the duration of the `silly` function, so it is dropped here while still borrowed\n+   |\n+   = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>\n \n error: aborting due to previous error\n "}, {"sha": "cfa46881ae0c8b936ab0ceb4cd0b06bf60832486", "filename": "src/test/ui/nll/borrowed-universal-error-2.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/src%2Ftest%2Fui%2Fnll%2Fborrowed-universal-error-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/src%2Ftest%2Fui%2Fnll%2Fborrowed-universal-error-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fborrowed-universal-error-2.stderr?ref=350ed4200c045ef8396c50bcc9e0397bf3df4cb6", "patch": "@@ -11,6 +11,9 @@ LL |     &v\n LL |     //~^ ERROR `v` does not live long enough [E0597]\n LL | }\n    | - ...but `v` is only valid for the duration of the `foo` function, so it is dropped here while still borrowed\n+   |\n+   = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>\n \n error: aborting due to previous error\n "}, {"sha": "2400cb72a385d94bc0446ceb442098f124649272", "filename": "src/test/ui/nll/issue-52534-1.stderr", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/src%2Ftest%2Fui%2Fnll%2Fissue-52534-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/src%2Ftest%2Fui%2Fnll%2Fissue-52534-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52534-1.stderr?ref=350ed4200c045ef8396c50bcc9e0397bf3df4cb6", "patch": "@@ -10,6 +10,9 @@ LL |         &x\n    |         ^^ `x` would have to be valid for `'0`\n LL |     }\n    |     - ...but `x` is only valid for the duration of the `bar` function, so it is dropped here while still borrowed\n+   |\n+   = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>\n \n error[E0597]: `x` does not live long enough\n   --> $DIR/issue-52534-1.rs:25:5\n@@ -23,6 +26,9 @@ LL |     &x\n    |     ^^ `x` would have to be valid for `'0`\n LL | }\n    | - ...but `x` is only valid for the duration of the `foo` function, so it is dropped here while still borrowed\n+   |\n+   = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>\n \n error[E0597]: `x` does not live long enough\n   --> $DIR/issue-52534-1.rs:30:6\n@@ -36,6 +42,9 @@ LL |     &&x\n    |      ^^ `x` would have to be valid for `'0`\n LL | }\n    | - ...but `x` is only valid for the duration of the `baz` function, so it is dropped here while still borrowed\n+   |\n+   = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>\n \n error[E0597]: borrowed value does not live long enough\n   --> $DIR/issue-52534-1.rs:30:6"}, {"sha": "fc7766885f5efa1f9099ef1c93ed9515ddf57dce", "filename": "src/test/ui/nll/issue-52534.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/src%2Ftest%2Fui%2Fnll%2Fissue-52534.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/src%2Ftest%2Fui%2Fnll%2Fissue-52534.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52534.stderr?ref=350ed4200c045ef8396c50bcc9e0397bf3df4cb6", "patch": "@@ -7,6 +7,9 @@ LL |     foo(|a| &x)\n    |          has type `&'0 u32`\n LL | }\n    | - ...but `x` is only valid for the duration of the `bar` function, so it is dropped here while still borrowed\n+   |\n+   = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>\n \n error[E0597]: `y` does not live long enough\n   --> $DIR/issue-52534.rs:27:26\n@@ -17,6 +20,9 @@ LL |     baz(|first, second| &y)\n    |          has type `&'0 u32`\n LL | }\n    | - ...but `y` is only valid for the duration of the `foobar` function, so it is dropped here while still borrowed\n+   |\n+   = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>\n \n error: aborting due to 2 previous errors\n "}, {"sha": "62c4a6eae94ed28d29dd94b992f39e12d234e28e", "filename": "src/test/ui/regions/regions-nested-fns-2.nll.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns-2.nll.stderr?ref=350ed4200c045ef8396c50bcc9e0397bf3df4cb6", "patch": "@@ -9,6 +9,9 @@ LL |             if false { &y } else { z }\n LL |         });\n LL | }\n    | - ...but `y` is only valid for the duration of the `nested` function, so it is dropped here while still borrowed\n+   |\n+   = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>\n \n error: aborting due to previous error\n "}, {"sha": "b53ea459d6c7a8183e00f25c92cc304cf757178f", "filename": "src/test/ui/regions/regions-nested-fns.nll.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/350ed4200c045ef8396c50bcc9e0397bf3df4cb6/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns.nll.stderr?ref=350ed4200c045ef8396c50bcc9e0397bf3df4cb6", "patch": "@@ -32,6 +32,9 @@ LL |         ay = &y;\n ...\n LL | }\n    | - ...but `y` is only valid for the duration of the `nested` function, so it is dropped here while still borrowed\n+   |\n+   = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>\n \n error: unsatisfied lifetime constraints\n   --> $DIR/regions-nested-fns.rs:23:68"}]}