{"sha": "ebf70a9a206e3ecff7d442a7edf297731e9fe042", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViZjcwYTlhMjA2ZTNlY2ZmN2Q0NDJhN2VkZjI5NzczMWU5ZmUwNDI=", "commit": {"author": {"name": "Shawn Walker-Salas", "email": "shawn.walker@oracle.com", "date": "2017-02-16T01:48:20Z"}, "committer": {"name": "Shawn Walker-Salas", "email": "shawn.walker@oracle.com", "date": "2017-02-16T01:52:24Z"}, "message": "libstd needs update for pending libc change\n\nFixes #39868", "tree": {"sha": "dc68a05c58792531e25a66e91f0221d39008a42e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc68a05c58792531e25a66e91f0221d39008a42e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebf70a9a206e3ecff7d442a7edf297731e9fe042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebf70a9a206e3ecff7d442a7edf297731e9fe042", "html_url": "https://github.com/rust-lang/rust/commit/ebf70a9a206e3ecff7d442a7edf297731e9fe042", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebf70a9a206e3ecff7d442a7edf297731e9fe042/comments", "author": {"login": "binarycrusader", "id": 541114, "node_id": "MDQ6VXNlcjU0MTExNA==", "avatar_url": "https://avatars.githubusercontent.com/u/541114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binarycrusader", "html_url": "https://github.com/binarycrusader", "followers_url": "https://api.github.com/users/binarycrusader/followers", "following_url": "https://api.github.com/users/binarycrusader/following{/other_user}", "gists_url": "https://api.github.com/users/binarycrusader/gists{/gist_id}", "starred_url": "https://api.github.com/users/binarycrusader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binarycrusader/subscriptions", "organizations_url": "https://api.github.com/users/binarycrusader/orgs", "repos_url": "https://api.github.com/users/binarycrusader/repos", "events_url": "https://api.github.com/users/binarycrusader/events{/privacy}", "received_events_url": "https://api.github.com/users/binarycrusader/received_events", "type": "User", "site_admin": false}, "committer": {"login": "binarycrusader", "id": 541114, "node_id": "MDQ6VXNlcjU0MTExNA==", "avatar_url": "https://avatars.githubusercontent.com/u/541114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binarycrusader", "html_url": "https://github.com/binarycrusader", "followers_url": "https://api.github.com/users/binarycrusader/followers", "following_url": "https://api.github.com/users/binarycrusader/following{/other_user}", "gists_url": "https://api.github.com/users/binarycrusader/gists{/gist_id}", "starred_url": "https://api.github.com/users/binarycrusader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binarycrusader/subscriptions", "organizations_url": "https://api.github.com/users/binarycrusader/orgs", "repos_url": "https://api.github.com/users/binarycrusader/repos", "events_url": "https://api.github.com/users/binarycrusader/events{/privacy}", "received_events_url": "https://api.github.com/users/binarycrusader/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62eb6056d332be09206dc664f2e949ae64341e64", "url": "https://api.github.com/repos/rust-lang/rust/commits/62eb6056d332be09206dc664f2e949ae64341e64", "html_url": "https://github.com/rust-lang/rust/commit/62eb6056d332be09206dc664f2e949ae64341e64"}], "stats": {"total": 11, "additions": 0, "deletions": 11}, "files": [{"sha": "1dbfa640d52519c915ee5350605914e794189b1b", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ebf70a9a206e3ecff7d442a7edf297731e9fe042/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebf70a9a206e3ecff7d442a7edf297731e9fe042/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=ebf70a9a206e3ecff7d442a7edf297731e9fe042", "patch": "@@ -483,7 +483,6 @@ pub fn home_dir() -> Option<PathBuf> {\n                   target_os = \"nacl\",\n                   target_os = \"emscripten\")))]\n     unsafe fn fallback() -> Option<OsString> {\n-        #[cfg(not(target_os = \"solaris\"))]\n         unsafe fn getpwduid_r(me: libc::uid_t, passwd: &mut libc::passwd,\n                               buf: &mut Vec<c_char>) -> Option<()> {\n             let mut result = ptr::null_mut();\n@@ -495,16 +494,6 @@ pub fn home_dir() -> Option<PathBuf> {\n             }\n         }\n \n-        #[cfg(target_os = \"solaris\")]\n-        unsafe fn getpwduid_r(me: libc::uid_t, passwd: &mut libc::passwd,\n-                              buf: &mut Vec<c_char>) -> Option<()> {\n-            // getpwuid_r semantics is different on Illumos/Solaris:\n-            // http://illumos.org/man/3c/getpwuid_r\n-            let result = libc::getpwuid_r(me, passwd, buf.as_mut_ptr(),\n-                                          buf.capacity());\n-            if result.is_null() { None } else { Some(()) }\n-        }\n-\n         let amt = match libc::sysconf(libc::_SC_GETPW_R_SIZE_MAX) {\n             n if n < 0 => 512 as usize,\n             n => n as usize,"}]}