{"sha": "f8428cf8d8193c1a6268a046afea9bea85d4d9fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NDI4Y2Y4ZDgxOTNjMWE2MjY4YTA0NmFmZWE5YmVhODVkNGQ5ZmU=", "commit": {"author": {"name": "Trevor Spiteri", "email": "tspiteri@ieee.org", "date": "2020-01-09T13:51:58Z"}, "committer": {"name": "Trevor Spiteri", "email": "tspiteri@ieee.org", "date": "2020-01-09T13:51:58Z"}, "message": "doc: add Null-unchecked version section to mut pointer as_mut method\n\nThe as_ref method already has a Null-unchecked version section, its\nexample is a modification of the example in the main as_ref section.\nSimilarly the example in this commit is a modification of the example\nin main as_mut section.", "tree": {"sha": "0cd44e049b1ee9b98f2551dd667310a480b880d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cd44e049b1ee9b98f2551dd667310a480b880d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8428cf8d8193c1a6268a046afea9bea85d4d9fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8428cf8d8193c1a6268a046afea9bea85d4d9fe", "html_url": "https://github.com/rust-lang/rust/commit/f8428cf8d8193c1a6268a046afea9bea85d4d9fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8428cf8d8193c1a6268a046afea9bea85d4d9fe/comments", "author": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adc65725004c8aac16392fe4052c3e347181157d", "url": "https://api.github.com/repos/rust-lang/rust/commits/adc65725004c8aac16392fe4052c3e347181157d", "html_url": "https://github.com/rust-lang/rust/commit/adc65725004c8aac16392fe4052c3e347181157d"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "4bc0a3e9faa607dd93efe45742f92a040a3a5ecb", "filename": "src/libcore/ptr/mut_ptr.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f8428cf8d8193c1a6268a046afea9bea85d4d9fe/src%2Flibcore%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8428cf8d8193c1a6268a046afea9bea85d4d9fe/src%2Flibcore%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr%2Fmut_ptr.rs?ref=f8428cf8d8193c1a6268a046afea9bea85d4d9fe", "patch": "@@ -250,6 +250,20 @@ impl<T: ?Sized> *mut T {\n     /// *first_value = 4;\n     /// println!(\"{:?}\", s); // It'll print: \"[4, 2, 3]\".\n     /// ```\n+    ///\n+    /// # Null-unchecked version\n+    ///\n+    /// If you are sure the pointer can never be null and are looking for some kind of\n+    /// `as_mut_unchecked` that returns the `&mut T` instead of `Option<&mut T>`, know that\n+    /// you can dereference the pointer directly.\n+    ///\n+    /// ```\n+    /// let mut s = [1, 2, 3];\n+    /// let ptr: *mut u32 = s.as_mut_ptr();\n+    /// let first_value = unsafe { &mut *ptr };\n+    /// *first_value = 4;\n+    /// println!(\"{:?}\", s); // It'll print: \"[4, 2, 3]\".\n+    /// ```\n     #[stable(feature = \"ptr_as_ref\", since = \"1.9.0\")]\n     #[inline]\n     pub unsafe fn as_mut<'a>(self) -> Option<&'a mut T> {"}]}