{"sha": "0f74758fea243941f2555a056136a37c4e41c3dc", "node_id": "C_kwDOAAsO6NoAKDBmNzQ3NThmZWEyNDM5NDFmMjU1NWEwNTYxMzZhMzdjNGU0MWMzZGM", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-26T14:58:33Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-26T14:58:33Z"}, "message": "internal: move outlined parser tests", "tree": {"sha": "225531c952e0db9931e8945011cb52dd5ba3421a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/225531c952e0db9931e8945011cb52dd5ba3421a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f74758fea243941f2555a056136a37c4e41c3dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f74758fea243941f2555a056136a37c4e41c3dc", "html_url": "https://github.com/rust-lang/rust/commit/0f74758fea243941f2555a056136a37c4e41c3dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f74758fea243941f2555a056136a37c4e41c3dc/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4cb0ff9bea204e7cd1744dea28ec447298a9df7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4cb0ff9bea204e7cd1744dea28ec447298a9df7", "html_url": "https://github.com/rust-lang/rust/commit/f4cb0ff9bea204e7cd1744dea28ec447298a9df7"}], "stats": {"total": 13713, "additions": 13703, "deletions": 10}, "files": [{"sha": "f6f8742725f4db95c8339d6b3b12e93b733e0dae", "filename": "crates/parser/src/tests.rs", "status": "modified", "additions": 57, "deletions": 2, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Ftests.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -9,15 +9,15 @@ use expect_test::expect_file;\n use crate::LexedStr;\n \n #[test]\n-fn valid_lexes_input() {\n+fn lex_valid() {\n     for case in TestCase::list(\"lexer/ok\") {\n         let actual = lex(&case.text);\n         expect_file![case.txt].assert_eq(&actual)\n     }\n }\n \n #[test]\n-fn invalid_lexes_input() {\n+fn lex_invalid() {\n     for case in TestCase::list(\"lexer/err\") {\n         let actual = lex(&case.text);\n         expect_file![case.txt].assert_eq(&actual)\n@@ -39,6 +39,61 @@ fn lex(text: &str) -> String {\n     res\n }\n \n+#[test]\n+fn parse_valid() {\n+    for case in TestCase::list(\"parser/ok\") {\n+        let (actual, errors) = parse(&case.text);\n+        assert!(!errors, \"errors in an OK file {}:\\n{}\", case.rs.display(), actual);\n+        expect_file![case.txt].assert_eq(&actual);\n+    }\n+}\n+\n+#[test]\n+fn parse_invalid() {\n+    for case in TestCase::list(\"parser/err\") {\n+        let (actual, errors) = parse(&case.text);\n+        assert!(errors, \"no errors in an ERR file {}:\\n{}\", case.rs.display(), actual);\n+        expect_file![case.txt].assert_eq(&actual)\n+    }\n+}\n+\n+fn parse(text: &str) -> (String, bool) {\n+    let lexed = LexedStr::new(text);\n+    let input = lexed.to_input();\n+    let output = crate::parse_source_file(&input);\n+\n+    let mut buf = String::new();\n+    let mut errors = Vec::new();\n+    let mut indent = String::new();\n+    lexed.intersperse_trivia(&output, false, &mut |step| match step {\n+        crate::StrStep::Token { kind, text } => {\n+            write!(buf, \"{}\", indent).unwrap();\n+            write!(buf, \"{:?} {:?}\\n\", kind, text).unwrap();\n+        }\n+        crate::StrStep::Enter { kind } => {\n+            write!(buf, \"{}\", indent).unwrap();\n+            write!(buf, \"{:?}\\n\", kind).unwrap();\n+            indent.push_str(\"  \");\n+        }\n+        crate::StrStep::Exit => {\n+            indent.pop();\n+            indent.pop();\n+        }\n+        crate::StrStep::Error { msg, pos } => errors.push(format!(\"error {}: {}\\n\", pos, msg)),\n+    });\n+\n+    for (token, msg) in lexed.errors() {\n+        let pos = lexed.text_start(token);\n+        errors.push(format!(\"error {}: {}\\n\", pos, msg));\n+    }\n+\n+    let has_errors = !errors.is_empty();\n+    for e in errors {\n+        buf.push_str(&e);\n+    }\n+    (buf, has_errors)\n+}\n+\n #[derive(PartialEq, Eq, PartialOrd, Ord)]\n struct TestCase {\n     rs: PathBuf,"}, {"sha": "bbbf496c82de40fe356d88ccb045355f1173f6e2", "filename": "crates/parser/test_data/parser/err/0000_struct_field_missing_comma.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0000_struct_field_missing_comma.rast"}, {"sha": "fe5030d893f92d2ebc8ae84786c32c9c9f0a8ddd", "filename": "crates/parser/test_data/parser/err/0000_struct_field_missing_comma.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0000_struct_field_missing_comma.rs"}, {"sha": "b30328c8270c33874d793cd176e396afff2d28d9", "filename": "crates/parser/test_data/parser/err/0000_struct_field_missing_comma.txt", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,34 @@\n+SOURCE_FILE\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S\"\n+    WHITESPACE \" \"\n+    RECORD_FIELD_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      RECORD_FIELD\n+        NAME\n+          IDENT \"a\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"u32\"\n+      WHITESPACE \"\\n    \"\n+      RECORD_FIELD\n+        NAME\n+          IDENT \"b\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"u32\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+error 21: expected COMMA"}, {"sha": "6dc73bfdbae629b87f2079460814489f8fcc7cd1", "filename": "crates/parser/test_data/parser/err/0001_item_recovery_in_file.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0001_item_recovery_in_file.rast"}, {"sha": "98f23de1f225931091dde18b7099d8fd1b2321ef", "filename": "crates/parser/test_data/parser/err/0001_item_recovery_in_file.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0001_item_recovery_in_file.rs"}, {"sha": "959b87ebbc5937f796da602b1ad3c5523c401388", "filename": "crates/parser/test_data/parser/err/0001_item_recovery_in_file.txt", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,18 @@\n+SOURCE_FILE\n+  ERROR\n+    IF_KW \"if\"\n+  WHITESPACE \" \"\n+  ERROR\n+    MATCH_KW \"match\"\n+  WHITESPACE \"\\n\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S\"\n+    WHITESPACE \" \"\n+    RECORD_FIELD_LIST\n+      L_CURLY \"{\"\n+      R_CURLY \"}\"\n+error 0: expected an item\n+error 3: expected an item"}, {"sha": "9ad5b12b8b8fe5f542f8cb07bf2262ea63d11823", "filename": "crates/parser/test_data/parser/err/0002_duplicate_shebang.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0002_duplicate_shebang.rast"}, {"sha": "48a3a3980baed91a768f649178ab0b78a7d6738b", "filename": "crates/parser/test_data/parser/err/0002_duplicate_shebang.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0002_duplicate_shebang.rs"}, {"sha": "ec6c3151005c6b52282587e6b05cfd63443434e8", "filename": "crates/parser/test_data/parser/err/0002_duplicate_shebang.txt", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,45 @@\n+SOURCE_FILE\n+  SHEBANG \"#!/use/bin/env rusti\"\n+  WHITESPACE \"\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+  ERROR\n+    SLASH \"/\"\n+  USE\n+    USE_KW \"use\"\n+    ERROR\n+      SLASH \"/\"\n+  MACRO_CALL\n+    PATH\n+      PATH_SEGMENT\n+        NAME_REF\n+          IDENT \"bin\"\n+  ERROR\n+    SLASH \"/\"\n+  MACRO_CALL\n+    PATH\n+      PATH_SEGMENT\n+        NAME_REF\n+          IDENT \"env\"\n+  WHITESPACE \" \"\n+  MACRO_CALL\n+    PATH\n+      PATH_SEGMENT\n+        NAME_REF\n+          IDENT \"rusti\"\n+  WHITESPACE \"\\n\"\n+error 23: expected `[`\n+error 23: expected an item\n+error 27: expected one of `*`, `::`, `{`, `self`, `super` or an identifier\n+error 28: expected SEMICOLON\n+error 31: expected BANG\n+error 31: expected `{`, `[`, `(`\n+error 31: expected SEMICOLON\n+error 31: expected an item\n+error 35: expected BANG\n+error 35: expected `{`, `[`, `(`\n+error 35: expected SEMICOLON\n+error 41: expected BANG\n+error 41: expected `{`, `[`, `(`\n+error 41: expected SEMICOLON"}, {"sha": "7763fad840b69062e8f7af2d4409086a4879e90b", "filename": "crates/parser/test_data/parser/err/0003_C++_semicolon.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0003_C++_semicolon.rast"}, {"sha": "009312270fed076f92a459447f72c1c0436d1378", "filename": "crates/parser/test_data/parser/err/0003_C++_semicolon.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0003_C++_semicolon.rs"}, {"sha": "00131bea51d682d4670f041c2e3439405797f08d", "filename": "crates/parser/test_data/parser/err/0003_C++_semicolon.txt", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,39 @@\n+SOURCE_FILE\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S\"\n+    WHITESPACE \" \"\n+    RECORD_FIELD_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      RECORD_FIELD\n+        NAME\n+          IDENT \"a\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"i32\"\n+      COMMA \",\"\n+      WHITESPACE \"\\n    \"\n+      RECORD_FIELD\n+        NAME\n+          IDENT \"b\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"String\"\n+      COMMA \",\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  ERROR\n+    SEMICOLON \";\"\n+error 39: expected item, found `;`\n+consider removing this semicolon"}, {"sha": "9a0f4665efc9981009ae559a266789794427a600", "filename": "crates/parser/test_data/parser/err/0004_use_path_bad_segment.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0004_use_path_bad_segment.rast"}, {"sha": "060e65d06d2e06b57cde0f9669ee94206955cec1", "filename": "crates/parser/test_data/parser/err/0004_use_path_bad_segment.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0004_use_path_bad_segment.rs"}, {"sha": "44e192a5fcbcf738b8da922a14a95d33f4cb6521", "filename": "crates/parser/test_data/parser/err/0004_use_path_bad_segment.txt", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,15 @@\n+SOURCE_FILE\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"foo\"\n+        COLON2 \"::\"\n+        ERROR\n+          INT_NUMBER \"92\"\n+    SEMICOLON \";\"\n+error 9: expected identifier"}, {"sha": "44dcc58a92651707eff3979d12e5b7ac465f665d", "filename": "crates/parser/test_data/parser/err/0005_attribute_recover.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0005_attribute_recover.rast"}, {"sha": "de7f816283904fb5ea39320de72396933825c9b7", "filename": "crates/parser/test_data/parser/err/0005_attribute_recover.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0005_attribute_recover.rs"}, {"sha": "6ff072e207cda65147f8ffe164ce7c8c408c44c1", "filename": "crates/parser/test_data/parser/err/0005_attribute_recover.txt", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,62 @@\n+SOURCE_FILE\n+  FN\n+    ATTR\n+      POUND \"#\"\n+      L_BRACK \"[\"\n+      META\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"foo\"\n+        TOKEN_TREE\n+          L_PAREN \"(\"\n+          IDENT \"foo\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          INT_NUMBER \"92\"\n+          R_PAREN \")\"\n+      R_BRACK \"]\"\n+    WHITESPACE \"\\n\"\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\\n\"\n+  ATTR\n+    POUND \"#\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"foo\"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        WHITESPACE \"\\n\"\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        IDENT \"foo\"\n+        TOKEN_TREE\n+          L_PAREN \"(\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        TOKEN_TREE\n+          L_CURLY \"{\"\n+          WHITESPACE \"\\n\"\n+          R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 53: expected R_PAREN\n+error 53: expected `]`\n+error 53: expected an item"}, {"sha": "5f85c3943ab9c95cdf531001ec28745eaa480a8a", "filename": "crates/parser/test_data/parser/err/0006_named_field_recovery.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0006_named_field_recovery.rast"}, {"sha": "8069c111b4beec1e6f525053d00b956dc6f55d53", "filename": "crates/parser/test_data/parser/err/0006_named_field_recovery.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0006_named_field_recovery.rs"}, {"sha": "7a4aa93b24658106f7a97a05a313f3b3cf3a89d6", "filename": "crates/parser/test_data/parser/err/0006_named_field_recovery.txt", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,74 @@\n+SOURCE_FILE\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S\"\n+    WHITESPACE \" \"\n+    RECORD_FIELD_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      RECORD_FIELD\n+        NAME\n+          IDENT \"f\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"u32\"\n+      COMMA \",\"\n+      WHITESPACE \"\\n    \"\n+      VISIBILITY\n+        PUB_KW \"pub\"\n+      WHITESPACE \" \"\n+      ERROR\n+        INT_NUMBER \"92\"\n+      WHITESPACE \"\\n    \"\n+      ERROR\n+        PLUS \"+\"\n+      WHITESPACE \" \"\n+      ERROR\n+        MINUS \"-\"\n+      WHITESPACE \" \"\n+      ERROR\n+        STAR \"*\"\n+      WHITESPACE \"\\n    \"\n+      RECORD_FIELD\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"x\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"u32\"\n+      COMMA \",\"\n+      WHITESPACE \"\\n    \"\n+      RECORD_FIELD\n+        NAME\n+          IDENT \"z\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"f64\"\n+      COMMA \",\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 31: expected field declaration\n+error 33: expected COMMA\n+error 38: expected field declaration\n+error 39: expected COMMA\n+error 40: expected field declaration\n+error 41: expected COMMA\n+error 42: expected field declaration\n+error 43: expected COMMA"}, {"sha": "c57ea77364e2c7ebe911385f0fcc09a9f375b660", "filename": "crates/parser/test_data/parser/err/0007_stray_curly_in_file.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0007_stray_curly_in_file.rast"}, {"sha": "dc869fb785efac425dbbbc0f0ced06a7ea0835cc", "filename": "crates/parser/test_data/parser/err/0007_stray_curly_in_file.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0007_stray_curly_in_file.rs"}, {"sha": "5d87ff866b25784f7b7df2941e576f77f6ea3168", "filename": "crates/parser/test_data/parser/err/0007_stray_curly_in_file.txt", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,33 @@\n+SOURCE_FILE\n+  ERROR\n+    R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\\n\"\n+  ERROR\n+    R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  ERROR\n+    R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 0: unmatched `}`\n+error 14: unmatched `}`\n+error 29: unmatched `}`"}, {"sha": "99ec2faed0001ddc1042c3b3fa5bfcd68ab11a57", "filename": "crates/parser/test_data/parser/err/0008_item_block_recovery.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0008_item_block_recovery.rast"}, {"sha": "9fcac19b5ce0661e650363c48a5d6efdaa38025c", "filename": "crates/parser/test_data/parser/err/0008_item_block_recovery.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0008_item_block_recovery.rs"}, {"sha": "6dd70e7cd9b6e7dec1f14ee900c134dc00c73ec1", "filename": "crates/parser/test_data/parser/err/0008_item_block_recovery.txt", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,81 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  MACRO_CALL\n+    PATH\n+      PATH_SEGMENT\n+        NAME_REF\n+          IDENT \"bar\"\n+    TOKEN_TREE\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+  WHITESPACE \" \"\n+  ERROR\n+    L_CURLY \"{\"\n+    WHITESPACE \"\\n    \"\n+    IF_EXPR\n+      IF_KW \"if\"\n+      WHITESPACE \" \"\n+      CONDITION\n+        LITERAL\n+          TRUE_KW \"true\"\n+      WHITESPACE \" \"\n+      BLOCK_EXPR\n+        STMT_LIST\n+          L_CURLY \"{\"\n+          WHITESPACE \"\\n        \"\n+          LITERAL\n+            INT_NUMBER \"1\"\n+          WHITESPACE \"\\n    \"\n+          R_CURLY \"}\"\n+      WHITESPACE \" \"\n+      ELSE_KW \"else\"\n+      WHITESPACE \" \"\n+      BLOCK_EXPR\n+        STMT_LIST\n+          L_CURLY \"{\"\n+          WHITESPACE \"\\n        \"\n+          BIN_EXPR\n+            LITERAL\n+              INT_NUMBER \"2\"\n+            WHITESPACE \" \"\n+            PLUS \"+\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"3\"\n+          WHITESPACE \"\\n    \"\n+          R_CURLY \"}\"\n+    WHITESPACE \"\\n\"\n+    R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"baz\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 17: expected BANG\n+error 19: expected SEMICOLON\n+error 20: expected an item"}, {"sha": "2d4c689c7c6b49b06dd788b97393ade69c76bd53", "filename": "crates/parser/test_data/parser/err/0009_broken_struct_type_parameter.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0009_broken_struct_type_parameter.rast"}, {"sha": "0dd30d0bd68dc8e73b7ec3bb53c11e14d4c9f0ac", "filename": "crates/parser/test_data/parser/err/0009_broken_struct_type_parameter.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0009_broken_struct_type_parameter.rs"}, {"sha": "a0154321718b6f4675d7c95b2bf5b5e89d5e8024", "filename": "crates/parser/test_data/parser/err/0009_broken_struct_type_parameter.txt", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,56 @@\n+SOURCE_FILE\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      ERROR\n+        INT_NUMBER \"90\"\n+  WHITESPACE \" \"\n+  ERROR\n+    PLUS \"+\"\n+  WHITESPACE \" \"\n+  ERROR\n+    INT_NUMBER \"2\"\n+  ERROR\n+    R_ANGLE \">\"\n+  WHITESPACE \" \"\n+  ERROR\n+    L_CURLY \"{\"\n+    WHITESPACE \"\\n    \"\n+    EXPR_STMT\n+      PATH_EXPR\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"f\"\n+    ERROR\n+      COLON \":\"\n+    WHITESPACE \" \"\n+    PATH_EXPR\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"u32\"\n+    WHITESPACE \"\\n\"\n+    R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"T\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+error 9: expected type parameter\n+error 11: expected COMMA\n+error 11: expected R_ANGLE\n+error 11: expected `;`, `{`, or `(`\n+error 12: expected an item\n+error 14: expected an item\n+error 15: expected an item\n+error 17: expected an item\n+error 24: expected SEMICOLON\n+error 24: expected expression"}, {"sha": "586acc73296d9d71ce34db572d865d567dc286bf", "filename": "crates/parser/test_data/parser/err/0010_unsafe_lambda_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0010_unsafe_lambda_block.rast"}, {"sha": "9857752824ab5fa8ff18fdd059304a4e656b0c42", "filename": "crates/parser/test_data/parser/err/0010_unsafe_lambda_block.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0010_unsafe_lambda_block.rs"}, {"sha": "9427ee5c0e527a37d47fa50446a3685b28ad0e24", "filename": "crates/parser/test_data/parser/err/0010_unsafe_lambda_block.txt", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,45 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CLOSURE_EXPR\n+            PARAM_LIST\n+              PIPE \"|\"\n+              PIPE \"|\"\n+            WHITESPACE \" \"\n+            RET_TYPE\n+              THIN_ARROW \"->\"\n+              WHITESPACE \" \"\n+              TUPLE_TYPE\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+        WHITESPACE \" \"\n+        EXPR_STMT\n+          BLOCK_EXPR\n+            UNSAFE_KW \"unsafe\"\n+            WHITESPACE \" \"\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \" \"\n+              TUPLE_EXPR\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+              WHITESPACE \" \"\n+              R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 24: expected a block\n+error 24: expected SEMICOLON"}, {"sha": "b02d390af9b6adcdbead6beb231437be87e9298d", "filename": "crates/parser/test_data/parser/err/0011_extern_struct.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0011_extern_struct.rast"}, {"sha": "c1bd0a2d1be077352504295952288647b63c14f0", "filename": "crates/parser/test_data/parser/err/0011_extern_struct.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0011_extern_struct.rs"}, {"sha": "bd5ec4b7c291e50f310ccb88f7a60ec59f9584a8", "filename": "crates/parser/test_data/parser/err/0011_extern_struct.txt", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,13 @@\n+SOURCE_FILE\n+  ERROR\n+    ABI\n+      EXTERN_KW \"extern\"\n+  WHITESPACE \" \"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"Foo\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+error 6: expected existential, fn, trait or impl"}, {"sha": "f31c27633982ca337d5d4ca2f0677ea48517a4ea", "filename": "crates/parser/test_data/parser/err/0012_broken_lambda.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0012_broken_lambda.rast"}, {"sha": "f48ab6e712478964bd048e3142b497abe76e304c", "filename": "crates/parser/test_data/parser/err/0013_invalid_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0013_invalid_type.rast"}, {"sha": "20dde3bc30fdacae54af0a9517a3f9850d443f66", "filename": "crates/parser/test_data/parser/err/0013_invalid_type.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0013_invalid_type.rs"}, {"sha": "eec84a0c67d9e5561acef490f31b940d3e959198", "filename": "crates/parser/test_data/parser/err/0013_invalid_type.txt", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,89 @@\n+SOURCE_FILE\n+  STRUCT\n+    VISIBILITY\n+      PUB_KW \"pub\"\n+    WHITESPACE \" \"\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"Cache\"\n+    TUPLE_FIELD_LIST\n+      L_PAREN \"(\"\n+      WHITESPACE \"\\n    \"\n+      TUPLE_FIELD\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"RefCell\"\n+              GENERIC_ARG_LIST\n+                L_ANGLE \"<\"\n+                TYPE_ARG\n+                  PATH_TYPE\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"HashMap\"\n+                        GENERIC_ARG_LIST\n+                          L_ANGLE \"<\"\n+                          WHITESPACE \"\\n        \"\n+                          TYPE_ARG\n+                            PATH_TYPE\n+                              PATH\n+                                PATH_SEGMENT\n+                                  NAME_REF\n+                                    IDENT \"TypeId\"\n+                          COMMA \",\"\n+                          WHITESPACE \"\\n        \"\n+                          TYPE_ARG\n+                            PATH_TYPE\n+                              PATH\n+                                PATH_SEGMENT\n+                                  NAME_REF\n+                                    IDENT \"Box\"\n+                                  GENERIC_ARG_LIST\n+                                    L_ANGLE \"<\"\n+                                    TYPE_ARG\n+                                      ERROR\n+                                        AT \"@\"\n+      WHITESPACE \" \"\n+      TUPLE_FIELD\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"Any\"\n+      ERROR\n+  ERROR\n+    R_ANGLE \">\"\n+  ERROR\n+    COMMA \",\"\n+  WHITESPACE \"\\n    \"\n+  ERROR\n+    R_ANGLE \">\"\n+  ERROR\n+    R_ANGLE \">\"\n+  WHITESPACE \"\\n\"\n+  ERROR\n+    R_PAREN \")\"\n+  ERROR\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\\n\"\n+error 67: expected type\n+error 68: expected COMMA\n+error 68: expected R_ANGLE\n+error 68: expected COMMA\n+error 68: expected R_ANGLE\n+error 68: expected COMMA\n+error 68: expected R_ANGLE\n+error 68: expected COMMA\n+error 72: expected COMMA\n+error 72: expected a type\n+error 72: expected R_PAREN\n+error 72: expected SEMICOLON\n+error 72: expected an item\n+error 73: expected an item\n+error 79: expected an item\n+error 80: expected an item\n+error 82: expected an item\n+error 83: expected an item"}, {"sha": "9178cf3b7f1c19b02c1236cc43f49bc943145d22", "filename": "crates/parser/test_data/parser/err/0014_where_no_bounds.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0014_where_no_bounds.rast"}, {"sha": "75c1d2f98610aa68f3163e76c09f9d85c34c1825", "filename": "crates/parser/test_data/parser/err/0014_where_no_bounds.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0014_where_no_bounds.rs"}, {"sha": "fd2f9ada33db0024cdb863367e2841c69f446124", "filename": "crates/parser/test_data/parser/err/0014_where_no_bounds.txt", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,32 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+      R_ANGLE \">\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    WHERE_CLAUSE\n+      WHERE_KW \"where\"\n+      WHITESPACE \" \"\n+      WHERE_PRED\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"T\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 19: expected colon"}, {"sha": "a3c25b450a9870d7b157119c1023206bde4a8203", "filename": "crates/parser/test_data/parser/err/0015_curly_in_params.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0015_curly_in_params.rast"}, {"sha": "156e70251a1095aa264a45fad9040afc7b152e3e", "filename": "crates/parser/test_data/parser/err/0015_curly_in_params.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0015_curly_in_params.rs"}, {"sha": "8e169320d95402495510bfd61773633914ab2311", "filename": "crates/parser/test_data/parser/err/0015_curly_in_params.txt", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,24 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+  ERROR\n+    R_CURLY \"}\"\n+  ERROR\n+    R_PAREN \")\"\n+  WHITESPACE \" \"\n+  ERROR\n+    L_CURLY \"{\"\n+    WHITESPACE \"\\n\"\n+    R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 7: expected value parameter\n+error 7: expected R_PAREN\n+error 7: expected a block\n+error 7: unmatched `}`\n+error 8: expected an item\n+error 10: expected an item"}, {"sha": "30e76de83409fa34c42e54ce660fa466a7674726", "filename": "crates/parser/test_data/parser/err/0016_missing_semi.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0016_missing_semi.rast"}, {"sha": "9ae8576861908f85650385a43889dee5231bb631", "filename": "crates/parser/test_data/parser/err/0016_missing_semi.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0016_missing_semi.rs"}, {"sha": "c48c35bf822a93cf4264014f23aac4cc47575c44", "filename": "crates/parser/test_data/parser/err/0016_missing_semi.txt", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,44 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"foo\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              WHITESPACE \"\\n        \"\n+              LITERAL\n+                INT_NUMBER \"1\"\n+              COMMA \",\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"2\"\n+              WHITESPACE \"\\n    \"\n+              R_PAREN \")\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          RETURN_EXPR\n+            RETURN_KW \"return\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"92\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 38: expected SEMICOLON"}, {"sha": "9d2c7c694829730d755b37d4833a9fd831574a4b", "filename": "crates/parser/test_data/parser/err/0017_incomplete_binexpr.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0017_incomplete_binexpr.rast"}, {"sha": "17bd497777719ea2fb51397d894ac6ec3d015739", "filename": "crates/parser/test_data/parser/err/0017_incomplete_binexpr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0017_incomplete_binexpr.rs"}, {"sha": "80735646290b2590d3cb80e4216a4278d492e2ab", "filename": "crates/parser/test_data/parser/err/0017_incomplete_binexpr.txt", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,47 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      PARAM\n+        IDENT_PAT\n+          NAME\n+            IDENT \"foo\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"i32\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"bar\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          LITERAL\n+            INT_NUMBER \"92\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        BIN_EXPR\n+          LITERAL\n+            INT_NUMBER \"1\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 44: expected expression"}, {"sha": "55ac5bc62ad62ab160e414af6f3a453c1eb784a8", "filename": "crates/parser/test_data/parser/err/0018_incomplete_fn.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0018_incomplete_fn.rast"}, {"sha": "fe604006c9ec011bc7543d1a7acf55aa6583ace8", "filename": "crates/parser/test_data/parser/err/0018_incomplete_fn.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0018_incomplete_fn.rs"}, {"sha": "799720b5574b8cc23f6669cbd54eaee9e0760f74", "filename": "crates/parser/test_data/parser/err/0018_incomplete_fn.txt", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,133 @@\n+SOURCE_FILE\n+  IMPL\n+    IMPL_KW \"impl\"\n+    WHITESPACE \" \"\n+    PATH_TYPE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"FnScopes\"\n+    WHITESPACE \" \"\n+    ASSOC_ITEM_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"new_scope\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            REF_PAT\n+              AMP \"&\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"ScopeId\"\n+        WHITESPACE \" \"\n+        BLOCK_EXPR\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            WHITESPACE \"\\n        \"\n+            LET_STMT\n+              LET_KW \"let\"\n+              WHITESPACE \" \"\n+              IDENT_PAT\n+                NAME\n+                  IDENT \"res\"\n+              WHITESPACE \" \"\n+              EQ \"=\"\n+              WHITESPACE \" \"\n+              METHOD_CALL_EXPR\n+                FIELD_EXPR\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          SELF_KW \"self\"\n+                  DOT \".\"\n+                  NAME_REF\n+                    IDENT \"scopes\"\n+                DOT \".\"\n+                NAME_REF\n+                  IDENT \"len\"\n+                ARG_LIST\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+              SEMICOLON \";\"\n+            WHITESPACE \"\\n        \"\n+            METHOD_CALL_EXPR\n+              FIELD_EXPR\n+                PATH_EXPR\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        SELF_KW \"self\"\n+                DOT \".\"\n+                NAME_REF\n+                  IDENT \"scopes\"\n+              DOT \".\"\n+              NAME_REF\n+                IDENT \"push\"\n+              ARG_LIST\n+                L_PAREN \"(\"\n+                RECORD_EXPR\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"ScopeData\"\n+                  WHITESPACE \" \"\n+                  RECORD_EXPR_FIELD_LIST\n+                    L_CURLY \"{\"\n+                    WHITESPACE \" \"\n+                    RECORD_EXPR_FIELD\n+                      NAME_REF\n+                        IDENT \"parent\"\n+                      COLON \":\"\n+                      WHITESPACE \" \"\n+                      PATH_EXPR\n+                        PATH\n+                          PATH_SEGMENT\n+                            NAME_REF\n+                              IDENT \"None\"\n+                    COMMA \",\"\n+                    WHITESPACE \" \"\n+                    RECORD_EXPR_FIELD\n+                      NAME_REF\n+                        IDENT \"entries\"\n+                      COLON \":\"\n+                      WHITESPACE \" \"\n+                      MACRO_CALL\n+                        PATH\n+                          PATH_SEGMENT\n+                            NAME_REF\n+                              IDENT \"vec\"\n+                        BANG \"!\"\n+                        TOKEN_TREE\n+                          L_BRACK \"[\"\n+                          R_BRACK \"]\"\n+                    WHITESPACE \" \"\n+                    R_CURLY \"}\"\n+                R_PAREN \")\"\n+            WHITESPACE \"\\n    \"\n+            R_CURLY \"}\"\n+      WHITESPACE \"\\n\\n    \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"set_parent\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 34: expected pattern\n+error 34: missing type for function parameter\n+error 180: expected function arguments\n+error 180: expected a block"}, {"sha": "919ce545b764f96aec478a1e8165817a0a5cab2d", "filename": "crates/parser/test_data/parser/err/0019_let_recover.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0019_let_recover.rast"}, {"sha": "48bf3d68bd38f37929dc011274792a94483202d0", "filename": "crates/parser/test_data/parser/err/0019_let_recover.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0019_let_recover.rs"}, {"sha": "25722b1355821ffdf85fb89bd1e38fc4c5984a2d", "filename": "crates/parser/test_data/parser/err/0019_let_recover.txt", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,107 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"foo\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"bar\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          LITERAL\n+            INT_NUMBER \"1\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"baz\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          LITERAL\n+            INT_NUMBER \"92\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          IF_EXPR\n+            IF_KW \"if\"\n+            WHITESPACE \" \"\n+            CONDITION\n+              LITERAL\n+                TRUE_KW \"true\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                R_CURLY \"}\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          WHILE_EXPR\n+            WHILE_KW \"while\"\n+            WHITESPACE \" \"\n+            CONDITION\n+              LITERAL\n+                TRUE_KW \"true\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                R_CURLY \"}\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+        WHITESPACE \"\\n    \"\n+        LOOP_EXPR\n+          LOOP_KW \"loop\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 24: expected expression\n+error 24: expected SEMICOLON\n+error 49: expected pattern\n+error 49: expected SEMICOLON\n+error 75: expected pattern\n+error 75: expected SEMICOLON\n+error 98: expected pattern\n+error 98: expected SEMICOLON\n+error 124: expected pattern\n+error 124: expected SEMICOLON"}, {"sha": "9ed2b14745c0b3c597094b626f6397739e76ed44", "filename": "crates/parser/test_data/parser/err/0020_fn_recover.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0020_fn_recover.rast"}, {"sha": "3393b668b419f617eb32eba62993e7dc0c55e36a", "filename": "crates/parser/test_data/parser/err/0020_fn_recover.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0020_fn_recover.rs"}, {"sha": "56d124cb95b27216931033724f5be9ebf6a6f76c", "filename": "crates/parser/test_data/parser/err/0020_fn_recover.txt", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,21 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 2: expected a name\n+error 2: expected function arguments\n+error 2: expected a block"}, {"sha": "e2b6a3fd7e47188b369017c7f46ebfe1fbc21c30", "filename": "crates/parser/test_data/parser/err/0021_incomplete_param.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0021_incomplete_param.rast"}, {"sha": "7a6c264f6d713389f6c6ba15000ed43acbf2de07", "filename": "crates/parser/test_data/parser/err/0021_incomplete_param.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0021_incomplete_param.rs"}, {"sha": "762840aa2a942736d27ad4037ec1d9609608bcd4", "filename": "crates/parser/test_data/parser/err/0021_incomplete_param.txt", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,34 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      PARAM\n+        IDENT_PAT\n+          NAME\n+            IDENT \"x\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"i32\"\n+      COMMA \",\"\n+      WHITESPACE \" \"\n+      PARAM\n+        IDENT_PAT\n+          NAME\n+            IDENT \"y\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 16: missing type for function parameter"}, {"sha": "d4341371a718d1289fbefb12f4c3c84a751bb148", "filename": "crates/parser/test_data/parser/err/0022_bad_exprs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0022_bad_exprs.rast"}, {"sha": "cd2d493a10cdcb0b027a25b90baa4c7802c26435", "filename": "crates/parser/test_data/parser/err/0022_bad_exprs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0022_bad_exprs.rs"}, {"sha": "900394bd960184937c8f3c5c738f31acb020e31d", "filename": "crates/parser/test_data/parser/err/0022_bad_exprs.txt", "status": "added", "additions": 171, "deletions": 0, "changes": 171, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,171 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"a\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \" \"\n+        EXPR_STMT\n+          ARRAY_EXPR\n+            L_BRACK \"[\"\n+            LITERAL\n+              INT_NUMBER \"1\"\n+            COMMA \",\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"2\"\n+            COMMA \",\"\n+            WHITESPACE \" \"\n+            ERROR\n+              AT \"@\"\n+        ERROR\n+          COMMA \",\"\n+        WHITESPACE \" \"\n+        STRUCT\n+          STRUCT_KW \"struct\"\n+          ERROR\n+            COMMA \",\"\n+        WHITESPACE \" \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          ERROR\n+            R_BRACK \"]\"\n+        WHITESPACE \" \"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"b\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \" \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"foo\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              LITERAL\n+                INT_NUMBER \"1\"\n+              COMMA \",\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"2\"\n+              COMMA \",\"\n+              WHITESPACE \" \"\n+              ERROR\n+                AT \"@\"\n+        ERROR\n+          COMMA \",\"\n+        WHITESPACE \" \"\n+        IMPL\n+          IMPL_KW \"impl\"\n+        ERROR\n+          COMMA \",\"\n+        WHITESPACE \" \"\n+        LET_STMT\n+          LET_KW \"let\"\n+        ERROR\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"c\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \" \"\n+        EXPR_STMT\n+          METHOD_CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"foo\"\n+            DOT \".\"\n+            NAME_REF\n+              IDENT \"bar\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              LITERAL\n+                INT_NUMBER \"1\"\n+              COMMA \",\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"2\"\n+              COMMA \",\"\n+              WHITESPACE \" \"\n+              ERROR\n+                AT \"@\"\n+        ERROR\n+          COMMA \",\"\n+        WHITESPACE \" \"\n+        ERROR\n+          R_BRACK \"]\"\n+        ERROR\n+          COMMA \",\"\n+        WHITESPACE \" \"\n+        TRAIT\n+          TRAIT_KW \"trait\"\n+          ERROR\n+            COMMA \",\"\n+        WHITESPACE \" \"\n+        LET_STMT\n+          LET_KW \"let\"\n+        ERROR\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 16: expected expression\n+error 17: expected R_BRACK\n+error 17: expected SEMICOLON\n+error 17: expected expression\n+error 25: expected a name\n+error 26: expected `;`, `{`, or `(`\n+error 30: expected pattern\n+error 31: expected SEMICOLON\n+error 53: expected expression\n+error 54: expected SEMICOLON\n+error 54: expected expression\n+error 60: expected type\n+error 60: expected `{`\n+error 60: expected expression\n+error 65: expected pattern\n+error 65: expected SEMICOLON\n+error 65: expected expression\n+error 92: expected expression\n+error 93: expected SEMICOLON\n+error 93: expected expression\n+error 95: expected expression\n+error 96: expected expression\n+error 103: expected a name\n+error 104: expected `{`\n+error 108: expected pattern\n+error 108: expected SEMICOLON\n+error 108: expected expression"}, {"sha": "671566e3837fcde404f997e84bdfbdd458899c62", "filename": "crates/parser/test_data/parser/err/0023_mismatched_paren.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0023_mismatched_paren.rast"}, {"sha": "0206d563ea78efb7ff3d61256ffbd607fb11358c", "filename": "crates/parser/test_data/parser/err/0023_mismatched_paren.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0023_mismatched_paren.rs"}, {"sha": "1176400634c35c7911ce26e4cc9b8e3e4e612b97", "filename": "crates/parser/test_data/parser/err/0023_mismatched_paren.txt", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,44 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        MACRO_CALL\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"foo\"\n+          BANG \"!\"\n+          WHITESPACE \" \"\n+          TOKEN_TREE\n+            L_PAREN \"(\"\n+            WHITESPACE \"\\n        \"\n+            IDENT \"bar\"\n+            COMMA \",\"\n+            WHITESPACE \" \"\n+            STRING \"\\\"baz\\\"\"\n+            COMMA \",\"\n+            WHITESPACE \" \"\n+            INT_NUMBER \"1\"\n+            COMMA \",\"\n+            WHITESPACE \" \"\n+            FLOAT_NUMBER \"2.0\"\n+        WHITESPACE \"\\n    \"\n+        R_CURLY \"}\"\n+  WHITESPACE \" \"\n+  COMMENT \"//~ ERROR incorrect close delimiter\"\n+  WHITESPACE \"\\n\"\n+  ERROR\n+    R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 49: unmatched `}`\n+error 92: unmatched `}`"}, {"sha": "39a317137f30c4d27b8ca4d93bcb49b4bd31d29a", "filename": "crates/parser/test_data/parser/err/0024_many_type_parens.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0024_many_type_parens.rast"}, {"sha": "6c2e95c02966dfe8caf180d1e2c5cda2e8a61d7a", "filename": "crates/parser/test_data/parser/err/0024_many_type_parens.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0024_many_type_parens.rs"}, {"sha": "446e1a823380c0d37649ff2434e1d61d813b16e2", "filename": "crates/parser/test_data/parser/err/0024_many_type_parens.txt", "status": "added", "additions": 321, "deletions": 0, "changes": 321, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,321 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"f\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            L_PAREN \"(\"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Copy\"\n+            R_PAREN \")\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND\n+            L_PAREN \"(\"\n+            QUESTION \"?\"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Sized\"\n+            R_PAREN \")\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND\n+            L_PAREN \"(\"\n+            FOR_TYPE\n+              FOR_KW \"for\"\n+              GENERIC_PARAM_LIST\n+                L_ANGLE \"<\"\n+                LIFETIME_PARAM\n+                  LIFETIME\n+                    LIFETIME_IDENT \"'a\"\n+                R_ANGLE \">\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"Trait\"\n+                    GENERIC_ARG_LIST\n+                      L_ANGLE \"<\"\n+                      LIFETIME_ARG\n+                        LIFETIME\n+                          LIFETIME_IDENT \"'a\"\n+                      R_ANGLE \">\"\n+            R_PAREN \")\"\n+      R_ANGLE \">\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          WILDCARD_PAT\n+            UNDERSCORE \"_\"\n+          COLON \":\"\n+          WHITESPACE \" \"\n+          DYN_TRAIT_TYPE\n+            TYPE_BOUND_LIST\n+              TYPE_BOUND\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Box\"\n+                      GENERIC_ARG_LIST\n+                        L_ANGLE \"<\"\n+                        TYPE_ARG\n+                          PAREN_TYPE\n+                            L_PAREN \"(\"\n+                            PATH_TYPE\n+                              PATH\n+                                PATH_SEGMENT\n+                                  NAME_REF\n+                                    IDENT \"Copy\"\n+                            R_PAREN \")\"\n+              WHITESPACE \" \"\n+              PLUS \"+\"\n+              WHITESPACE \" \"\n+              TYPE_BOUND\n+                L_PAREN \"(\"\n+                QUESTION \"?\"\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Sized\"\n+                R_PAREN \")\"\n+              WHITESPACE \" \"\n+              PLUS \"+\"\n+              WHITESPACE \" \"\n+              TYPE_BOUND\n+                L_PAREN \"(\"\n+                FOR_TYPE\n+                  FOR_KW \"for\"\n+                  GENERIC_PARAM_LIST\n+                    L_ANGLE \"<\"\n+                    LIFETIME_PARAM\n+                      LIFETIME\n+                        LIFETIME_IDENT \"'a\"\n+                    R_ANGLE \">\"\n+                  WHITESPACE \" \"\n+                  PATH_TYPE\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"Trait\"\n+                        GENERIC_ARG_LIST\n+                          L_ANGLE \"<\"\n+                          LIFETIME_ARG\n+                            LIFETIME\n+                              LIFETIME_IDENT \"'a\"\n+                          R_ANGLE \">\"\n+                R_PAREN \")\"\n+        ERROR\n+          R_ANGLE \">\"\n+        SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          WILDCARD_PAT\n+            UNDERSCORE \"_\"\n+          COLON \":\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"Box\"\n+                GENERIC_ARG_LIST\n+                  L_ANGLE \"<\"\n+                  TYPE_ARG\n+                    PAREN_TYPE\n+                      L_PAREN \"(\"\n+                      ERROR\n+                        QUESTION \"?\"\n+        EXPR_STMT\n+          PATH_EXPR\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"Sized\"\n+        ERROR\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        ERROR\n+          PLUS \"+\"\n+        WHITESPACE \" \"\n+        EXPR_STMT\n+          TUPLE_EXPR\n+            L_PAREN \"(\"\n+            FOR_EXPR\n+              FOR_KW \"for\"\n+              PATH_PAT\n+                PATH\n+                  PATH_SEGMENT\n+                    L_ANGLE \"<\"\n+                    ERROR\n+                      LIFETIME_IDENT \"'a\"\n+                    R_ANGLE \">\"\n+              WHITESPACE \" \"\n+              BIN_EXPR\n+                BIN_EXPR\n+                  BIN_EXPR\n+                    BIN_EXPR\n+                      PATH_EXPR\n+                        PATH\n+                          PATH_SEGMENT\n+                            NAME_REF\n+                              IDENT \"Trait\"\n+                      L_ANGLE \"<\"\n+                      ERROR\n+                        LIFETIME_IDENT \"'a\"\n+                    R_ANGLE \">\"\n+                    ERROR\n+                      R_PAREN \")\"\n+                  WHITESPACE \" \"\n+                  PLUS \"+\"\n+                  WHITESPACE \" \"\n+                  PAREN_EXPR\n+                    L_PAREN \"(\"\n+                    PATH_EXPR\n+                      PATH\n+                        PATH_SEGMENT\n+                          NAME_REF\n+                            IDENT \"Copy\"\n+                    R_PAREN \")\"\n+                R_ANGLE \">\"\n+                ERROR\n+                  SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          WILDCARD_PAT\n+            UNDERSCORE \"_\"\n+          COLON \":\"\n+          WHITESPACE \" \"\n+          DYN_TRAIT_TYPE\n+            TYPE_BOUND_LIST\n+              TYPE_BOUND\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Box\"\n+                      GENERIC_ARG_LIST\n+                        L_ANGLE \"<\"\n+                        TYPE_ARG\n+                          PAREN_TYPE\n+                            L_PAREN \"(\"\n+                            FOR_TYPE\n+                              FOR_KW \"for\"\n+                              GENERIC_PARAM_LIST\n+                                L_ANGLE \"<\"\n+                                LIFETIME_PARAM\n+                                  LIFETIME\n+                                    LIFETIME_IDENT \"'a\"\n+                                R_ANGLE \">\"\n+                              WHITESPACE \" \"\n+                              PATH_TYPE\n+                                PATH\n+                                  PATH_SEGMENT\n+                                    NAME_REF\n+                                      IDENT \"Trait\"\n+                                    GENERIC_ARG_LIST\n+                                      L_ANGLE \"<\"\n+                                      LIFETIME_ARG\n+                                        LIFETIME\n+                                          LIFETIME_IDENT \"'a\"\n+                                      R_ANGLE \">\"\n+                            R_PAREN \")\"\n+              WHITESPACE \" \"\n+              PLUS \"+\"\n+              WHITESPACE \" \"\n+              TYPE_BOUND\n+                L_PAREN \"(\"\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Copy\"\n+                R_PAREN \")\"\n+              WHITESPACE \" \"\n+              PLUS \"+\"\n+              WHITESPACE \" \"\n+              TYPE_BOUND\n+                L_PAREN \"(\"\n+                QUESTION \"?\"\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Sized\"\n+                R_PAREN \")\"\n+        ERROR\n+          R_ANGLE \">\"\n+        SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 88: expected COMMA\n+error 88: expected R_ANGLE\n+error 121: expected SEMICOLON\n+error 121: expected expression\n+error 140: expected type\n+error 141: expected R_PAREN\n+error 141: expected COMMA\n+error 141: expected R_ANGLE\n+error 141: expected SEMICOLON\n+error 146: expected SEMICOLON\n+error 146: expected expression\n+error 148: expected expression\n+error 155: expected type\n+error 158: expected IN_KW\n+error 165: expected expression\n+error 168: expected expression\n+error 179: expected expression\n+error 180: expected a block\n+error 180: expected COMMA\n+error 180: expected expression\n+error 180: expected R_PAREN\n+error 180: expected SEMICOLON\n+error 215: expected COMMA\n+error 215: expected R_ANGLE\n+error 235: expected SEMICOLON\n+error 235: expected expression"}, {"sha": "b48b4aed8ddf994c3c5a1e4f90f2d5dcc98ec534", "filename": "crates/parser/test_data/parser/err/0025_nope.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0025_nope.rast"}, {"sha": "28726ed5138dcfe4ca83831bc8c26fd998ba419b", "filename": "crates/parser/test_data/parser/err/0025_nope.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0025_nope.rs"}, {"sha": "aca57faf96e535e94b14d4e28564c1703e33fc40", "filename": "crates/parser/test_data/parser/err/0025_nope.txt", "status": "added", "additions": 204, "deletions": 0, "changes": 204, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0025_nope.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0025_nope.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0025_nope.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,204 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        ENUM\n+          ENUM_KW \"enum\"\n+          WHITESPACE \" \"\n+          NAME\n+            IDENT \"Test\"\n+          WHITESPACE \" \"\n+          VARIANT_LIST\n+            L_CURLY \"{\"\n+            WHITESPACE \"\\n        \"\n+            VARIANT\n+              NAME\n+                IDENT \"Var1\"\n+            COMMA \",\"\n+            WHITESPACE \"\\n        \"\n+            VARIANT\n+              NAME\n+                IDENT \"Var2\"\n+              TUPLE_FIELD_LIST\n+                L_PAREN \"(\"\n+                TUPLE_FIELD\n+                  PATH_TYPE\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"String\"\n+                R_PAREN \")\"\n+            COMMA \",\"\n+            WHITESPACE \"\\n        \"\n+            VARIANT\n+              NAME\n+                IDENT \"Var3\"\n+              WHITESPACE \" \"\n+              RECORD_FIELD_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \"\\n            \"\n+                RECORD_FIELD\n+                  NAME\n+                    IDENT \"abc\"\n+                  COLON \":\"\n+                WHITESPACE \" \"\n+                ERROR\n+                  L_CURLY \"{\"\n+                  R_CURLY \"}\"\n+                ERROR\n+                  COMMA \",\"\n+                WHITESPACE \" \"\n+                COMMENT \"//~ ERROR: expected type, found `{`\"\n+                WHITESPACE \"\\n        \"\n+                R_CURLY \"}\"\n+            COMMA \",\"\n+            WHITESPACE \"\\n    \"\n+            R_CURLY \"}\"\n+        WHITESPACE \"\\n\\n    \"\n+        COMMENT \"// recover...\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"a\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          LITERAL\n+            INT_NUMBER \"1\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        ENUM\n+          ENUM_KW \"enum\"\n+          WHITESPACE \" \"\n+          NAME\n+            IDENT \"Test2\"\n+          WHITESPACE \" \"\n+          VARIANT_LIST\n+            L_CURLY \"{\"\n+            WHITESPACE \"\\n        \"\n+            VARIANT\n+              NAME\n+                IDENT \"Fine\"\n+            COMMA \",\"\n+            WHITESPACE \"\\n    \"\n+            R_CURLY \"}\"\n+        WHITESPACE \"\\n\\n    \"\n+        ENUM\n+          ENUM_KW \"enum\"\n+          WHITESPACE \" \"\n+          NAME\n+            IDENT \"Test3\"\n+          WHITESPACE \" \"\n+          VARIANT_LIST\n+            L_CURLY \"{\"\n+            WHITESPACE \"\\n        \"\n+            VARIANT\n+              NAME\n+                IDENT \"StillFine\"\n+              WHITESPACE \" \"\n+              RECORD_FIELD_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \"\\n            \"\n+                RECORD_FIELD\n+                  NAME\n+                    IDENT \"def\"\n+                  COLON \":\"\n+                  WHITESPACE \" \"\n+                  PATH_TYPE\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"i32\"\n+                COMMA \",\"\n+                WHITESPACE \"\\n        \"\n+                R_CURLY \"}\"\n+            COMMA \",\"\n+            WHITESPACE \"\\n    \"\n+            R_CURLY \"}\"\n+        WHITESPACE \"\\n\\n    \"\n+        EXPR_STMT\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              ENUM\n+                COMMENT \"// fail again\"\n+                WHITESPACE \"\\n        \"\n+                ENUM_KW \"enum\"\n+                WHITESPACE \" \"\n+                NAME\n+                  IDENT \"Test4\"\n+                WHITESPACE \" \"\n+                VARIANT_LIST\n+                  L_CURLY \"{\"\n+                  WHITESPACE \"\\n            \"\n+                  VARIANT\n+                    NAME\n+                      IDENT \"Nope\"\n+                    TUPLE_FIELD_LIST\n+                      L_PAREN \"(\"\n+                      TUPLE_FIELD\n+                        PATH_TYPE\n+                          PATH\n+                            PATH_SEGMENT\n+                              NAME_REF\n+                                IDENT \"i32\"\n+                      WHITESPACE \" \"\n+                      ERROR\n+                  ERROR\n+                    L_CURLY \"{\"\n+                    R_CURLY \"}\"\n+                  ERROR\n+                    R_PAREN \")\"\n+                  WHITESPACE \" \"\n+                  COMMENT \"//~ ERROR: found `{`\"\n+                  WHITESPACE \"\\n                         \"\n+                  COMMENT \"//~^ ERROR: found `{`\"\n+                  WHITESPACE \"\\n        \"\n+                  R_CURLY \"}\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n    \"\n+        COMMENT \"// still recover later\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"bad_syntax\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          ERROR\n+            UNDERSCORE \"_\"\n+          SEMICOLON \";\"\n+        WHITESPACE \" \"\n+        COMMENT \"//~ ERROR: expected expression, found reserved identifier `_`\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 95: expected type\n+error 95: expected COMMA\n+error 96: expected field\n+error 98: expected field declaration\n+error 371: expected COMMA\n+error 372: expected a type\n+error 372: expected R_PAREN\n+error 372: expected COMMA\n+error 372: expected enum variant\n+error 374: expected enum variant\n+error 508: expected expression"}, {"sha": "1b08c834eb8224fe0b01c96930358b97dbbc50ec", "filename": "crates/parser/test_data/parser/err/0026_imp_recovery.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0026_imp_recovery.rast"}, {"sha": "829ca1c4be9f7289015cf9ca64f68bc7256b3072", "filename": "crates/parser/test_data/parser/err/0026_imp_recovery.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0026_imp_recovery.rs"}, {"sha": "1068418e0d84b3573ebc136c47a54157d80f2db7", "filename": "crates/parser/test_data/parser/err/0026_imp_recovery.txt", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,49 @@\n+SOURCE_FILE\n+  IMPL\n+    IMPL_KW \"impl\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Clone\"\n+      R_ANGLE \">\"\n+  WHITESPACE \"\\n\"\n+  IMPL\n+    IMPL_KW \"impl\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+      R_ANGLE \">\"\n+    WHITESPACE \" \"\n+    PATH_TYPE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"OnceCell\"\n+          GENERIC_ARG_LIST\n+            L_ANGLE \"<\"\n+            TYPE_ARG\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"T\"\n+            R_ANGLE \">\"\n+    WHITESPACE \" \"\n+    ASSOC_ITEM_LIST\n+      L_CURLY \"{\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 14: expected trait or type\n+error 14: expected `{`"}, {"sha": "ec585a4235679fa482313ff9a8d54fdbe7a95122", "filename": "crates/parser/test_data/parser/err/0027_incomplere_where_for.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0027_incomplere_where_for.rast"}, {"sha": "2792c20843a832c051b0206c2a30b15cf5de264d", "filename": "crates/parser/test_data/parser/err/0027_incomplere_where_for.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0027_incomplere_where_for.rs"}, {"sha": "674c8d536cac56d6ee6dbad142ce667bb57ee6aa", "filename": "crates/parser/test_data/parser/err/0027_incomplere_where_for.txt", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,29 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \"\\n    \"\n+    WHERE_CLAUSE\n+      WHERE_KW \"where\"\n+      WHITESPACE \" \"\n+      WHERE_PRED\n+        FOR_KW \"for\"\n+        GENERIC_PARAM_LIST\n+          L_ANGLE \"<\"\n+          LIFETIME_PARAM\n+            LIFETIME\n+              LIFETIME_IDENT \"'a\"\n+          R_ANGLE \">\"\n+    WHITESPACE \"\\n\"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 26: expected type\n+error 26: expected colon"}, {"sha": "183cf32030b09fa33c4931ec8d3f9aa5188f56e1", "filename": "crates/parser/test_data/parser/err/0029_field_completion.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0029_field_completion.rast"}, {"sha": "a7cdc17bb112a9ddb3d5c4b69a51c48178673a6e", "filename": "crates/parser/test_data/parser/err/0029_field_completion.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0029_field_completion.rs"}, {"sha": "fb037112fa3f27b4fd398bba1ad1d33c27e5a2dc", "filename": "crates/parser/test_data/parser/err/0029_field_completion.txt", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,36 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      PARAM\n+        IDENT_PAT\n+          NAME\n+            IDENT \"a\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"A\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        FIELD_EXPR\n+          PATH_EXPR\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"a\"\n+          DOT \".\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 21: expected field name or number"}, {"sha": "2438b104bf4f0168f2a45854bd4a7f229e5b3261", "filename": "crates/parser/test_data/parser/err/0032_match_arms_inner_attrs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0032_match_arms_inner_attrs.rast"}, {"sha": "06aa4777043400e5b55cfeed44189d8f449e619f", "filename": "crates/parser/test_data/parser/err/0032_match_arms_inner_attrs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0032_match_arms_inner_attrs.rs"}, {"sha": "327bf94a49e6312240a552830b986dc3f1f4c440", "filename": "crates/parser/test_data/parser/err/0032_match_arms_inner_attrs.txt", "status": "added", "additions": 205, "deletions": 0, "changes": 205, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,205 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          MATCH_EXPR\n+            MATCH_KW \"match\"\n+            WHITESPACE \" \"\n+            TUPLE_EXPR\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+            WHITESPACE \" \"\n+            MATCH_ARM_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                WILDCARD_PAT\n+                  UNDERSCORE \"_\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                ATTR\n+                  POUND \"#\"\n+                ERROR\n+                  BANG \"!\"\n+                ARRAY_EXPR\n+                  L_BRACK \"[\"\n+                  CALL_EXPR\n+                    PATH_EXPR\n+                      PATH\n+                        PATH_SEGMENT\n+                          NAME_REF\n+                            IDENT \"doc\"\n+                    ARG_LIST\n+                      L_PAREN \"(\"\n+                      LITERAL\n+                        STRING \"\\\"Not allowed here\\\"\"\n+                      R_PAREN \")\"\n+                  R_BRACK \"]\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                WILDCARD_PAT\n+                  UNDERSCORE \"_\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\\n    \"\n+        EXPR_STMT\n+          MATCH_EXPR\n+            MATCH_KW \"match\"\n+            WHITESPACE \" \"\n+            TUPLE_EXPR\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+            WHITESPACE \" \"\n+            MATCH_ARM_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                WILDCARD_PAT\n+                  UNDERSCORE \"_\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                WILDCARD_PAT\n+                  UNDERSCORE \"_\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                ATTR\n+                  POUND \"#\"\n+                ERROR\n+                  BANG \"!\"\n+                ARRAY_EXPR\n+                  L_BRACK \"[\"\n+                  CALL_EXPR\n+                    PATH_EXPR\n+                      PATH\n+                        PATH_SEGMENT\n+                          NAME_REF\n+                            IDENT \"doc\"\n+                    ARG_LIST\n+                      L_PAREN \"(\"\n+                      LITERAL\n+                        STRING \"\\\"Nor here\\\"\"\n+                      R_PAREN \")\"\n+                  R_BRACK \"]\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\\n    \"\n+        MATCH_EXPR\n+          MATCH_KW \"match\"\n+          WHITESPACE \" \"\n+          TUPLE_EXPR\n+            L_PAREN \"(\"\n+            R_PAREN \")\"\n+          WHITESPACE \" \"\n+          MATCH_ARM_LIST\n+            L_CURLY \"{\"\n+            WHITESPACE \"\\n        \"\n+            MATCH_ARM\n+              ATTR\n+                POUND \"#\"\n+                L_BRACK \"[\"\n+                META\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"cfg\"\n+                  TOKEN_TREE\n+                    L_PAREN \"(\"\n+                    IDENT \"test\"\n+                    R_PAREN \")\"\n+                R_BRACK \"]\"\n+              WHITESPACE \"\\n        \"\n+              ATTR\n+                POUND \"#\"\n+              ERROR\n+                BANG \"!\"\n+              ARRAY_EXPR\n+                L_BRACK \"[\"\n+                CALL_EXPR\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"doc\"\n+                  ARG_LIST\n+                    L_PAREN \"(\"\n+                    LITERAL\n+                      STRING \"\\\"Nor here\\\"\"\n+                    R_PAREN \")\"\n+                R_BRACK \"]\"\n+            WHITESPACE \"\\n        \"\n+            MATCH_ARM\n+              WILDCARD_PAT\n+                UNDERSCORE \"_\"\n+              WHITESPACE \" \"\n+              FAT_ARROW \"=>\"\n+              WHITESPACE \" \"\n+              TUPLE_EXPR\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+              COMMA \",\"\n+            WHITESPACE \"\\n        \"\n+            MATCH_ARM\n+              WILDCARD_PAT\n+                UNDERSCORE \"_\"\n+              WHITESPACE \" \"\n+              FAT_ARROW \"=>\"\n+              WHITESPACE \" \"\n+              TUPLE_EXPR\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+              COMMA \",\"\n+            WHITESPACE \"\\n    \"\n+            R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 52: expected `[`\n+error 52: expected pattern\n+error 53: expected FAT_ARROW\n+error 78: expected `,`\n+error 161: expected `[`\n+error 161: expected pattern\n+error 162: expected FAT_ARROW\n+error 232: expected `[`\n+error 232: expected pattern\n+error 233: expected FAT_ARROW\n+error 250: expected `,`"}, {"sha": "66fc2ccbd20b15a16133061e2e342731380f9e0e", "filename": "crates/parser/test_data/parser/err/0033_match_arms_outer_attrs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0033_match_arms_outer_attrs.rast"}, {"sha": "4635222da28215581921919a9a08aec80d2b0c57", "filename": "crates/parser/test_data/parser/err/0033_match_arms_outer_attrs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0033_match_arms_outer_attrs.rs"}, {"sha": "b5bc3d84df096d0e2666683e1a5db8eb0acbc5af", "filename": "crates/parser/test_data/parser/err/0033_match_arms_outer_attrs.txt", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,68 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        MATCH_EXPR\n+          MATCH_KW \"match\"\n+          WHITESPACE \" \"\n+          TUPLE_EXPR\n+            L_PAREN \"(\"\n+            R_PAREN \")\"\n+          WHITESPACE \" \"\n+          MATCH_ARM_LIST\n+            L_CURLY \"{\"\n+            WHITESPACE \"\\n        \"\n+            MATCH_ARM\n+              WILDCARD_PAT\n+                UNDERSCORE \"_\"\n+              WHITESPACE \" \"\n+              FAT_ARROW \"=>\"\n+              WHITESPACE \" \"\n+              TUPLE_EXPR\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+              COMMA \",\"\n+            WHITESPACE \"\\n        \"\n+            MATCH_ARM\n+              WILDCARD_PAT\n+                UNDERSCORE \"_\"\n+              WHITESPACE \" \"\n+              FAT_ARROW \"=>\"\n+              WHITESPACE \" \"\n+              TUPLE_EXPR\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+              COMMA \",\"\n+            WHITESPACE \"\\n        \"\n+            MATCH_ARM\n+              ATTR\n+                POUND \"#\"\n+                L_BRACK \"[\"\n+                META\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"cfg\"\n+                  TOKEN_TREE\n+                    L_PAREN \"(\"\n+                    IDENT \"test\"\n+                    R_PAREN \")\"\n+                R_BRACK \"]\"\n+            WHITESPACE \"\\n    \"\n+            R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 80: expected pattern\n+error 80: expected FAT_ARROW\n+error 80: expected expression"}, {"sha": "583e62c77a398121459f678f2e8b316fe9aa24c3", "filename": "crates/parser/test_data/parser/err/0034_bad_box_pattern.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0034_bad_box_pattern.rast"}, {"sha": "d3fa2e468cc760c452b47529d30eb0923cd8edea", "filename": "crates/parser/test_data/parser/err/0034_bad_box_pattern.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0034_bad_box_pattern.rs"}, {"sha": "7a2ae9103fd9c61208e7be29c2df8ef575dff2eb", "filename": "crates/parser/test_data/parser/err/0034_bad_box_pattern.txt", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,96 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            REF_KW \"ref\"\n+            WHITESPACE \" \"\n+            ERROR\n+              BOX_KW \"box\"\n+        WHITESPACE \" \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"i\"\n+            WHITESPACE \" \"\n+            EQ \"=\"\n+            WHITESPACE \" \"\n+            TUPLE_EXPR\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            MUT_KW \"mut\"\n+            WHITESPACE \" \"\n+            ERROR\n+              BOX_KW \"box\"\n+        WHITESPACE \" \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"i\"\n+            WHITESPACE \" \"\n+            EQ \"=\"\n+            WHITESPACE \" \"\n+            TUPLE_EXPR\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            REF_KW \"ref\"\n+            WHITESPACE \" \"\n+            MUT_KW \"mut\"\n+            WHITESPACE \" \"\n+            ERROR\n+              BOX_KW \"box\"\n+        WHITESPACE \" \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"i\"\n+            WHITESPACE \" \"\n+            EQ \"=\"\n+            WHITESPACE \" \"\n+            TUPLE_EXPR\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+error 24: expected a name\n+error 27: expected SEMICOLON\n+error 48: expected a name\n+error 51: expected SEMICOLON\n+error 76: expected a name\n+error 79: expected SEMICOLON"}, {"sha": "14eaf9e9b02062fe684d0b823d191855f59f349a", "filename": "crates/parser/test_data/parser/err/0035_use_recover.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0035_use_recover.rast"}, {"sha": "4a266812628362e542a5977b6f425f22c56b8058", "filename": "crates/parser/test_data/parser/err/0035_use_recover.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0035_use_recover.rs"}, {"sha": "f9287d42e20ecbdeac23321cee64905c925838af", "filename": "crates/parser/test_data/parser/err/0035_use_recover.txt", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,55 @@\n+SOURCE_FILE\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"foo\"\n+        COLON2 \"::\"\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"bar\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  USE\n+    USE_KW \"use\"\n+  WHITESPACE \"\\n\"\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              CRATE_KW \"crate\"\n+        COLON2 \"::\"\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"baz\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  USE\n+    USE_KW \"use\"\n+  WHITESPACE \"\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"f\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 17: expected one of `*`, `::`, `{`, `self`, `super` or an identifier\n+error 17: expected SEMICOLON\n+error 37: expected one of `*`, `::`, `{`, `self`, `super` or an identifier\n+error 37: expected SEMICOLON"}, {"sha": "ef6172f8a1ad0991e92a23fa784581a17d4238e2", "filename": "crates/parser/test_data/parser/err/0036_partial_use.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0036_partial_use.rast"}, {"sha": "d521a5bb2deefcc5371847407728e63f69a7c432", "filename": "crates/parser/test_data/parser/err/0036_partial_use.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0036_partial_use.rs"}, {"sha": "13e76e68307e6f1eefef3d7c579c7d128186da56", "filename": "crates/parser/test_data/parser/err/0036_partial_use.txt", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,51 @@\n+SOURCE_FILE\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"std\"\n+      COLON2 \"::\"\n+      USE_TREE_LIST\n+        L_CURLY \"{\"\n+        USE_TREE\n+          PATH\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"error\"\n+            COLON2 \"::\"\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"Error\"\n+        ERROR\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        ERROR\n+          USE_KW \"use\"\n+        WHITESPACE \" \"\n+        USE_TREE\n+          PATH\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"std\"\n+            COLON2 \"::\"\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"io\"\n+        ERROR\n+          SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+error 22: expected COMMA\n+error 22: expected one of `*`, `::`, `{`, `self`, `super` or an identifier\n+error 23: expected COMMA\n+error 24: expected one of `*`, `::`, `{`, `self`, `super` or an identifier\n+error 27: expected COMMA\n+error 35: expected COMMA\n+error 35: expected one of `*`, `::`, `{`, `self`, `super` or an identifier\n+error 36: expected COMMA\n+error 36: expected R_CURLY\n+error 36: expected SEMICOLON"}, {"sha": "b9b9f2e4b1b03decef5619e48bf6bf30109eaeb5", "filename": "crates/parser/test_data/parser/err/0039_lambda_recovery.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0039_lambda_recovery.rast"}, {"sha": "a2f74bd879aeed9abea8525930a0a08e4520397c", "filename": "crates/parser/test_data/parser/err/0039_lambda_recovery.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0039_lambda_recovery.rs"}, {"sha": "8ca160601534dbac4c76505274d802dea0428fe9", "filename": "crates/parser/test_data/parser/err/0039_lambda_recovery.txt", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,83 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    RET_TYPE\n+      THIN_ARROW \"->\"\n+      WHITESPACE \" \"\n+      PATH_TYPE\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"i32\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          METHOD_CALL_EXPR\n+            METHOD_CALL_EXPR\n+              METHOD_CALL_EXPR\n+                ARRAY_EXPR\n+                  L_BRACK \"[\"\n+                  LITERAL\n+                    INT_NUMBER \"1\"\n+                  COMMA \",\"\n+                  WHITESPACE \" \"\n+                  LITERAL\n+                    INT_NUMBER \"2\"\n+                  COMMA \",\"\n+                  WHITESPACE \" \"\n+                  LITERAL\n+                    INT_NUMBER \"3\"\n+                  R_BRACK \"]\"\n+                DOT \".\"\n+                NAME_REF\n+                  IDENT \"iter\"\n+                ARG_LIST\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+              WHITESPACE \"\\n        \"\n+              DOT \".\"\n+              NAME_REF\n+                IDENT \"map\"\n+              ARG_LIST\n+                L_PAREN \"(\"\n+                CLOSURE_EXPR\n+                  PARAM_LIST\n+                    PIPE \"|\"\n+                    PARAM\n+                      IDENT_PAT\n+                        NAME\n+                          IDENT \"it\"\n+                    PIPE \"|\"\n+                R_PAREN \")\"\n+            WHITESPACE \"\\n        \"\n+            DOT \".\"\n+            NAME_REF\n+              IDENT \"max\"\n+            GENERIC_ARG_LIST\n+              COLON2 \"::\"\n+              L_ANGLE \"<\"\n+              TYPE_ARG\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"i32\"\n+              R_ANGLE \">\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 56: expected expression"}, {"sha": "25910cb40525364ef16987675989b12517bd9ad0", "filename": "crates/parser/test_data/parser/err/0042_weird_blocks.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0042_weird_blocks.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0042_weird_blocks.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0042_weird_blocks.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0042_weird_blocks.rast"}, {"sha": "8fa324c1a14f7d3040014041387ca6f296863503", "filename": "crates/parser/test_data/parser/err/0042_weird_blocks.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0042_weird_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0042_weird_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0042_weird_blocks.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0042_weird_blocks.rs"}, {"sha": "9cea337ce9c49b2c25475c9dd943934a4261bedb", "filename": "crates/parser/test_data/parser/err/0042_weird_blocks.txt", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0042_weird_blocks.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0042_weird_blocks.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0042_weird_blocks.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,75 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \" \"\n+              ERROR\n+                UNSAFE_KW \"unsafe\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"92\"\n+              WHITESPACE \" \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \" \"\n+              ERROR\n+                ASYNC_KW \"async\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"92\"\n+              WHITESPACE \" \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \" \"\n+              EXPR_STMT\n+                BLOCK_EXPR\n+                  TRY_KW \"try\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"92\"\n+              WHITESPACE \" \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n    \"\n+        BLOCK_EXPR\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            WHITESPACE \" \"\n+            ERROR\n+              LABEL\n+                LIFETIME\n+                  LIFETIME_IDENT \"'label\"\n+                COLON \":\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"92\"\n+            WHITESPACE \" \"\n+            R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 24: expected existential, fn, trait or impl\n+error 41: expected existential, fn, trait or impl\n+error 56: expected a block\n+error 75: expected a loop"}, {"sha": "d4e4bf102edac0665d03b39ef9502348fb3b3447", "filename": "crates/parser/test_data/parser/err/0043_unexpected_for_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0043_unexpected_for_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0043_unexpected_for_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0043_unexpected_for_type.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0043_unexpected_for_type.rast"}, {"sha": "0e9f8ccb4f84bc978f2ee9715f6c18dc5dd66df7", "filename": "crates/parser/test_data/parser/err/0043_unexpected_for_type.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0043_unexpected_for_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0043_unexpected_for_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0043_unexpected_for_type.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0043_unexpected_for_type.rs"}, {"sha": "cb4fb1642d954dd49dbfd12b790557c5ccdfcab2", "filename": "crates/parser/test_data/parser/err/0043_unexpected_for_type.txt", "status": "added", "additions": 256, "deletions": 0, "changes": 256, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0043_unexpected_for_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0043_unexpected_for_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0043_unexpected_for_type.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,256 @@\n+SOURCE_FILE\n+  TYPE_ALIAS\n+    TYPE_KW \"type\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"ForRef\"\n+    WHITESPACE \" \"\n+    EQ \"=\"\n+    WHITESPACE \" \"\n+    FOR_TYPE\n+      FOR_KW \"for\"\n+      GENERIC_PARAM_LIST\n+        L_ANGLE \"<\"\n+        LIFETIME_PARAM\n+          LIFETIME\n+            LIFETIME_IDENT \"'a\"\n+        R_ANGLE \">\"\n+      WHITESPACE \" \"\n+      REF_TYPE\n+        AMP \"&\"\n+        LIFETIME\n+          LIFETIME_IDENT \"'a\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"u32\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  TYPE_ALIAS\n+    TYPE_KW \"type\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"ForTup\"\n+    WHITESPACE \" \"\n+    EQ \"=\"\n+    WHITESPACE \" \"\n+    FOR_TYPE\n+      FOR_KW \"for\"\n+      GENERIC_PARAM_LIST\n+        L_ANGLE \"<\"\n+        LIFETIME_PARAM\n+          LIFETIME\n+            LIFETIME_IDENT \"'a\"\n+        R_ANGLE \">\"\n+      WHITESPACE \" \"\n+      TUPLE_TYPE\n+        L_PAREN \"(\"\n+        REF_TYPE\n+          AMP \"&\"\n+          LIFETIME\n+            LIFETIME_IDENT \"'a\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"u32\"\n+        COMMA \",\"\n+        R_PAREN \")\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  TYPE_ALIAS\n+    TYPE_KW \"type\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"ForSlice\"\n+    WHITESPACE \" \"\n+    EQ \"=\"\n+    WHITESPACE \" \"\n+    FOR_TYPE\n+      FOR_KW \"for\"\n+      GENERIC_PARAM_LIST\n+        L_ANGLE \"<\"\n+        LIFETIME_PARAM\n+          LIFETIME\n+            LIFETIME_IDENT \"'a\"\n+        R_ANGLE \">\"\n+      WHITESPACE \" \"\n+      SLICE_TYPE\n+        L_BRACK \"[\"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"u32\"\n+        R_BRACK \"]\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  TYPE_ALIAS\n+    TYPE_KW \"type\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"ForForFn\"\n+    WHITESPACE \" \"\n+    EQ \"=\"\n+    WHITESPACE \" \"\n+    FOR_TYPE\n+      FOR_KW \"for\"\n+      GENERIC_PARAM_LIST\n+        L_ANGLE \"<\"\n+        LIFETIME_PARAM\n+          LIFETIME\n+            LIFETIME_IDENT \"'a\"\n+        R_ANGLE \">\"\n+      WHITESPACE \" \"\n+      FOR_TYPE\n+        FOR_KW \"for\"\n+        GENERIC_PARAM_LIST\n+          L_ANGLE \"<\"\n+          LIFETIME_PARAM\n+            LIFETIME\n+              LIFETIME_IDENT \"'b\"\n+          R_ANGLE \">\"\n+        WHITESPACE \" \"\n+        FN_PTR_TYPE\n+          FN_KW \"fn\"\n+          PARAM_LIST\n+            L_PAREN \"(\"\n+            PARAM\n+              REF_TYPE\n+                AMP \"&\"\n+                LIFETIME\n+                  LIFETIME_IDENT \"'a\"\n+                WHITESPACE \" \"\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"i32\"\n+            COMMA \",\"\n+            WHITESPACE \" \"\n+            PARAM\n+              REF_TYPE\n+                AMP \"&\"\n+                LIFETIME\n+                  LIFETIME_IDENT \"'b\"\n+                WHITESPACE \" \"\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"i32\"\n+            R_PAREN \")\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"for_for_for\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+      R_ANGLE \">\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \"\\n\"\n+    WHERE_CLAUSE\n+      WHERE_KW \"where\"\n+      WHITESPACE \"\\n    \"\n+      WHERE_PRED\n+        FOR_KW \"for\"\n+        GENERIC_PARAM_LIST\n+          L_ANGLE \"<\"\n+          LIFETIME_PARAM\n+            LIFETIME\n+              LIFETIME_IDENT \"'a\"\n+          R_ANGLE \">\"\n+        WHITESPACE \" \"\n+        FOR_TYPE\n+          FOR_KW \"for\"\n+          GENERIC_PARAM_LIST\n+            L_ANGLE \"<\"\n+            LIFETIME_PARAM\n+              LIFETIME\n+                LIFETIME_IDENT \"'b\"\n+            R_ANGLE \">\"\n+          WHITESPACE \" \"\n+          FOR_TYPE\n+            FOR_KW \"for\"\n+            GENERIC_PARAM_LIST\n+              L_ANGLE \"<\"\n+              LIFETIME_PARAM\n+                LIFETIME\n+                  LIFETIME_IDENT \"'c\"\n+              R_ANGLE \">\"\n+            WHITESPACE \" \"\n+            FN_PTR_TYPE\n+              FN_KW \"fn\"\n+              PARAM_LIST\n+                L_PAREN \"(\"\n+                PARAM\n+                  REF_TYPE\n+                    AMP \"&\"\n+                    LIFETIME\n+                      LIFETIME_IDENT \"'a\"\n+                    WHITESPACE \" \"\n+                    PATH_TYPE\n+                      PATH\n+                        PATH_SEGMENT\n+                          NAME_REF\n+                            IDENT \"T\"\n+                COMMA \",\"\n+                WHITESPACE \" \"\n+                PARAM\n+                  REF_TYPE\n+                    AMP \"&\"\n+                    LIFETIME\n+                      LIFETIME_IDENT \"'b\"\n+                    WHITESPACE \" \"\n+                    PATH_TYPE\n+                      PATH\n+                        PATH_SEGMENT\n+                          NAME_REF\n+                            IDENT \"T\"\n+                COMMA \",\"\n+                WHITESPACE \" \"\n+                PARAM\n+                  REF_TYPE\n+                    AMP \"&\"\n+                    LIFETIME\n+                      LIFETIME_IDENT \"'c\"\n+                    WHITESPACE \" \"\n+                    PATH_TYPE\n+                      PATH\n+                        PATH_SEGMENT\n+                          NAME_REF\n+                            IDENT \"T\"\n+                R_PAREN \")\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Copy\"\n+      COMMA \",\"\n+    WHITESPACE \"\\n\"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 21: expected a function pointer or path\n+error 52: expected a function pointer or path\n+error 88: expected a function pointer or path\n+error 119: expected a function pointer or path\n+error 195: expected a function pointer or path"}, {"sha": "b4ff1a14a7c3c0a7f87845fd7b3761e2b9b1d8af", "filename": "crates/parser/test_data/parser/err/0044_item_modifiers.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0044_item_modifiers.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0044_item_modifiers.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0044_item_modifiers.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0044_item_modifiers.rast"}, {"sha": "731e58013bd87ce4eb651d49acb1c7900d9fde79", "filename": "crates/parser/test_data/parser/err/0044_item_modifiers.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0044_item_modifiers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0044_item_modifiers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0044_item_modifiers.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0044_item_modifiers.rs"}, {"sha": "96e471a69a78129d3f59a6c4e9981892b7a740f2", "filename": "crates/parser/test_data/parser/err/0044_item_modifiers.txt", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0044_item_modifiers.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0044_item_modifiers.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0044_item_modifiers.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,48 @@\n+SOURCE_FILE\n+  ERROR\n+    UNSAFE_KW \"unsafe\"\n+  WHITESPACE \" \"\n+  FN\n+    ASYNC_KW \"async\"\n+    WHITESPACE \" \"\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+  CONST\n+    UNSAFE_KW \"unsafe\"\n+    WHITESPACE \" \"\n+    CONST_KW \"const\"\n+    WHITESPACE \" \"\n+    ERROR\n+      FN_KW \"fn\"\n+  WHITESPACE \" \"\n+  MACRO_CALL\n+    PATH\n+      PATH_SEGMENT\n+        NAME_REF\n+          IDENT \"bar\"\n+    TOKEN_TREE\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+  WHITESPACE \" \"\n+  ERROR\n+    L_CURLY \"{\"\n+    R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 6: expected existential, fn, trait or impl\n+error 38: expected a name\n+error 40: missing type for `const` or `static`\n+error 40: expected SEMICOLON\n+error 44: expected BANG\n+error 46: expected SEMICOLON\n+error 47: expected an item"}, {"sha": "85e10ca36dbc3309a905666bdf32ffa2e477865a", "filename": "crates/parser/test_data/parser/err/0047_repated_extern_modifier.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0047_repated_extern_modifier.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0047_repated_extern_modifier.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0047_repated_extern_modifier.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0047_repated_extern_modifier.rast"}, {"sha": "db32b98dfb05d14ec0edb79a6903d0b645b9946e", "filename": "crates/parser/test_data/parser/err/0047_repated_extern_modifier.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0047_repated_extern_modifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0047_repated_extern_modifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0047_repated_extern_modifier.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -1 +1 @@\n-extern \"C\" extern \"C\"\r\n+extern \"C\" extern \"C\"", "previous_filename": "crates/syntax/test_data/parser/err/0047_repated_extern_modifier.rs"}, {"sha": "884ac50f8bb538af8ee320ffce4d5b9dc52e1466", "filename": "crates/parser/test_data/parser/err/0047_repated_extern_modifier.txt", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0047_repated_extern_modifier.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0047_repated_extern_modifier.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0047_repated_extern_modifier.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,15 @@\n+SOURCE_FILE\n+  ERROR\n+    ABI\n+      EXTERN_KW \"extern\"\n+      WHITESPACE \" \"\n+      STRING \"\\\"C\\\"\"\n+  WHITESPACE \" \"\n+  ERROR\n+    ABI\n+      EXTERN_KW \"extern\"\n+      WHITESPACE \" \"\n+      STRING \"\\\"C\\\"\"\n+  WHITESPACE \"\\r\\n\"\n+error 10: expected existential, fn, trait or impl\n+error 21: expected existential, fn, trait or impl"}, {"sha": "ca52166fbc439b767d4f527598b2bb704ca178fd", "filename": "crates/parser/test_data/parser/err/0048_double_fish.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0048_double_fish.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0048_double_fish.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0048_double_fish.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0048_double_fish.rast"}, {"sha": "31c12bfff9f9f3a78f89eb7aea774daa044de9f5", "filename": "crates/parser/test_data/parser/err/0048_double_fish.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0048_double_fish.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0048_double_fish.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0048_double_fish.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/err/0048_double_fish.rs"}, {"sha": "3a05bfee1ee9bdb5e42f191ae23107839885098f", "filename": "crates/parser/test_data/parser/err/0048_double_fish.txt", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0048_double_fish.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0048_double_fish.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0048_double_fish.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,123 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"f\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          PATH_EXPR\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"S\"\n+                GENERIC_ARG_LIST\n+                  COLON2 \"::\"\n+                  L_ANGLE \"<\"\n+                  TYPE_ARG\n+                    PATH_TYPE\n+                      PATH\n+                        PATH\n+                          PATH_SEGMENT\n+                            NAME_REF\n+                              IDENT \"Item\"\n+                            GENERIC_ARG_LIST\n+                              COLON2 \"::\"\n+                              L_ANGLE \"<\"\n+                              TYPE_ARG\n+                                PATH_TYPE\n+                                  PATH\n+                                    PATH_SEGMENT\n+                                      NAME_REF\n+                                        IDENT \"lol\"\n+                              R_ANGLE \">\"\n+                        COLON2 \"::\"\n+                        ERROR\n+                          L_ANGLE \"<\"\n+        BIN_EXPR\n+          PATH_EXPR\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"nope\"\n+          SHR \">>\"\n+          ERROR\n+            SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"g\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          WILDCARD_PAT\n+            UNDERSCORE \"_\"\n+          COLON \":\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Item\"\n+                  GENERIC_ARG_LIST\n+                    COLON2 \"::\"\n+                    L_ANGLE \"<\"\n+                    TYPE_ARG\n+                      PATH_TYPE\n+                        PATH\n+                          PATH_SEGMENT\n+                            NAME_REF\n+                              IDENT \"lol\"\n+                    R_ANGLE \">\"\n+              COLON2 \"::\"\n+              ERROR\n+                L_ANGLE \"<\"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"nope\"\n+            R_ANGLE \">\"\n+            WHITESPACE \" \"\n+            ERROR\n+              EQ \"=\"\n+        WHITESPACE \" \"\n+        EXPR_STMT\n+          TUPLE_EXPR\n+            L_PAREN \"(\"\n+            R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 30: expected identifier\n+error 31: expected COMMA\n+error 31: expected R_ANGLE\n+error 31: expected SEMICOLON\n+error 37: expected expression\n+error 75: expected identifier\n+error 76: expected SEMICOLON\n+error 82: expected expression\n+error 83: expected SEMICOLON"}, {"sha": "6b234b0b2418e9767eb76efedf39c42d25058f1f", "filename": "crates/parser/test_data/parser/ok/0000_empty.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0000_empty.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0000_empty.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0000_empty.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0000_empty.rast"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "crates/parser/test_data/parser/ok/0000_empty.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0000_empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0000_empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0000_empty.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0000_empty.rs"}, {"sha": "40b9ef804c219ee6702f257955c4bafd16513b1a", "filename": "crates/parser/test_data/parser/ok/0000_empty.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0000_empty.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0000_empty.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0000_empty.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1 @@\n+SOURCE_FILE"}, {"sha": "a171fe7a86d78f20083b7f1fc1eb8de766651604", "filename": "crates/parser/test_data/parser/ok/0001_struct_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0001_struct_item.rast"}, {"sha": "512aeb3e7a0f82d3da2826f5986e59a162dfbd79", "filename": "crates/parser/test_data/parser/ok/0001_struct_item.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0001_struct_item.rs"}, {"sha": "0e9639f23db61c6fe222312c95a9ff76ad2c2f99", "filename": "crates/parser/test_data/parser/ok/0001_struct_item.txt", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,39 @@\n+SOURCE_FILE\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Copy\"\n+      R_ANGLE \">\"\n+    WHITESPACE \" \"\n+    RECORD_FIELD_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      RECORD_FIELD\n+        NAME\n+          IDENT \"f\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"T\"\n+      COMMA \",\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "362892b91f1dedc296d4b746f30aa9242240bcfb", "filename": "crates/parser/test_data/parser/ok/0002_struct_item_field.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0002_struct_item_field.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0002_struct_item_field.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0002_struct_item_field.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0002_struct_item_field.rast"}, {"sha": "cc3866d2511ed9a75a1ecb8d50ffdbe191047840", "filename": "crates/parser/test_data/parser/ok/0002_struct_item_field.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0002_struct_item_field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0002_struct_item_field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0002_struct_item_field.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0002_struct_item_field.rs"}, {"sha": "dd52e5850e551c4d04755c9cbf46002e84c0d25a", "filename": "crates/parser/test_data/parser/ok/0002_struct_item_field.txt", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0002_struct_item_field.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0002_struct_item_field.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0002_struct_item_field.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,22 @@\n+SOURCE_FILE\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S\"\n+    WHITESPACE \" \"\n+    RECORD_FIELD_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      RECORD_FIELD\n+        NAME\n+          IDENT \"foo\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"u32\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\""}, {"sha": "67e21df13a12380b2a2ed42b7514936deb660230", "filename": "crates/parser/test_data/parser/ok/0004_file_shebang.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0004_file_shebang.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0004_file_shebang.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0004_file_shebang.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0004_file_shebang.rast"}, {"sha": "53dc9e6173375f427c707fcb64754fe878bf8ea5", "filename": "crates/parser/test_data/parser/ok/0004_file_shebang.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0004_file_shebang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0004_file_shebang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0004_file_shebang.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0004_file_shebang.rs"}, {"sha": "698957189fe22e34e2bbe1e06b7212bf9a698f9b", "filename": "crates/parser/test_data/parser/ok/0004_file_shebang.txt", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0004_file_shebang.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0004_file_shebang.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0004_file_shebang.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,2 @@\n+SOURCE_FILE\n+  SHEBANG \"#!/use/bin/env rusti\""}, {"sha": "845f9a6f35754e8069ea2b493ae11caa64218971", "filename": "crates/parser/test_data/parser/ok/0005_fn_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0005_fn_item.rast"}, {"sha": "03210551cb1741bb5c4fc59e62e9ff47682ef65c", "filename": "crates/parser/test_data/parser/ok/0005_fn_item.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0005_fn_item.rs"}, {"sha": "756d20e4d6d8d19db991ffe7f92a5b89e131bc03", "filename": "crates/parser/test_data/parser/ok/0005_fn_item.txt", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,16 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "be2d1dc123e14e77ef61fad1ec95e2c3946b4dd5", "filename": "crates/parser/test_data/parser/ok/0006_inner_attributes.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0006_inner_attributes.rast"}, {"sha": "e81f8b1e84fbcc0a9c21b33256e9f1d9965f1af8", "filename": "crates/parser/test_data/parser/ok/0006_inner_attributes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0006_inner_attributes.rs"}, {"sha": "cb63ba80e77d1090b0ae33903351bdbdeebe17a5", "filename": "crates/parser/test_data/parser/ok/0006_inner_attributes.txt", "status": "added", "additions": 194, "deletions": 0, "changes": 194, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,194 @@\n+SOURCE_FILE\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"attr\"\n+    R_BRACK \"]\"\n+  WHITESPACE \"\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"attr\"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        TRUE_KW \"true\"\n+        R_PAREN \")\"\n+    R_BRACK \"]\"\n+  WHITESPACE \"\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"attr\"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        IDENT \"ident\"\n+        R_PAREN \")\"\n+    R_BRACK \"]\"\n+  WHITESPACE \"\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"attr\"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        IDENT \"ident\"\n+        COMMA \",\"\n+        WHITESPACE \" \"\n+        INT_NUMBER \"100\"\n+        COMMA \",\"\n+        WHITESPACE \" \"\n+        TRUE_KW \"true\"\n+        COMMA \",\"\n+        WHITESPACE \" \"\n+        STRING \"\\\"true\\\"\"\n+        COMMA \",\"\n+        WHITESPACE \" \"\n+        IDENT \"ident\"\n+        WHITESPACE \" \"\n+        EQ \"=\"\n+        WHITESPACE \" \"\n+        INT_NUMBER \"100\"\n+        COMMA \",\"\n+        WHITESPACE \" \"\n+        IDENT \"ident\"\n+        WHITESPACE \" \"\n+        EQ \"=\"\n+        WHITESPACE \" \"\n+        STRING \"\\\"hello\\\"\"\n+        COMMA \",\"\n+        WHITESPACE \" \"\n+        IDENT \"ident\"\n+        TOKEN_TREE\n+          L_PAREN \"(\"\n+          INT_NUMBER \"100\"\n+          R_PAREN \")\"\n+        R_PAREN \")\"\n+    R_BRACK \"]\"\n+  WHITESPACE \"\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"attr\"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        INT_NUMBER \"100\"\n+        R_PAREN \")\"\n+    R_BRACK \"]\"\n+  WHITESPACE \"\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"attr\"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        IDENT \"enabled\"\n+        WHITESPACE \" \"\n+        EQ \"=\"\n+        WHITESPACE \" \"\n+        TRUE_KW \"true\"\n+        R_PAREN \")\"\n+    R_BRACK \"]\"\n+  WHITESPACE \"\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"enabled\"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        TRUE_KW \"true\"\n+        R_PAREN \")\"\n+    R_BRACK \"]\"\n+  WHITESPACE \"\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"attr\"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        STRING \"\\\"hello\\\"\"\n+        R_PAREN \")\"\n+    R_BRACK \"]\"\n+  WHITESPACE \"\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"repr\"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        IDENT \"C\"\n+        COMMA \",\"\n+        WHITESPACE \" \"\n+        IDENT \"align\"\n+        WHITESPACE \" \"\n+        EQ \"=\"\n+        WHITESPACE \" \"\n+        INT_NUMBER \"4\"\n+        R_PAREN \")\"\n+    R_BRACK \"]\"\n+  WHITESPACE \"\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"repr\"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        IDENT \"C\"\n+        COMMA \",\"\n+        WHITESPACE \" \"\n+        IDENT \"align\"\n+        TOKEN_TREE\n+          L_PAREN \"(\"\n+          INT_NUMBER \"4\"\n+          R_PAREN \")\"\n+        R_PAREN \")\"\n+    R_BRACK \"]\""}, {"sha": "4babdba9279760a9cd1fb2a85a612610d3b43783", "filename": "crates/parser/test_data/parser/ok/0007_extern_crate.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0007_extern_crate.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0007_extern_crate.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0007_extern_crate.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0007_extern_crate.rast"}, {"sha": "ab81a608cb511936bf239ac1e35eb82e24929ad6", "filename": "crates/parser/test_data/parser/ok/0007_extern_crate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0007_extern_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0007_extern_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0007_extern_crate.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0007_extern_crate.rs"}, {"sha": "8b9259fd6b96ef8e42e3d56920acbbe9812b3be0", "filename": "crates/parser/test_data/parser/ok/0007_extern_crate.txt", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0007_extern_crate.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0007_extern_crate.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0007_extern_crate.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,40 @@\n+SOURCE_FILE\n+  EXTERN_CRATE\n+    EXTERN_KW \"extern\"\n+    WHITESPACE \" \"\n+    CRATE_KW \"crate\"\n+    WHITESPACE \" \"\n+    NAME_REF\n+      IDENT \"foo\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  EXTERN_CRATE\n+    EXTERN_KW \"extern\"\n+    WHITESPACE \" \"\n+    CRATE_KW \"crate\"\n+    WHITESPACE \" \"\n+    NAME_REF\n+      IDENT \"foo\"\n+    WHITESPACE \" \"\n+    RENAME\n+      AS_KW \"as\"\n+      WHITESPACE \" \"\n+      NAME\n+        IDENT \"bar\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  EXTERN_CRATE\n+    EXTERN_KW \"extern\"\n+    WHITESPACE \" \"\n+    CRATE_KW \"crate\"\n+    WHITESPACE \" \"\n+    NAME_REF\n+      SELF_KW \"self\"\n+    WHITESPACE \" \"\n+    RENAME\n+      AS_KW \"as\"\n+      WHITESPACE \" \"\n+      NAME\n+        IDENT \"baz\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\""}, {"sha": "e864641834fba109dd66b5f33e005524c894bf66", "filename": "crates/parser/test_data/parser/ok/0008_mod_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0008_mod_item.rast"}, {"sha": "4ff0d9795c781701edf44d062abaa68e37761015", "filename": "crates/parser/test_data/parser/ok/0008_mod_item.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0008_mod_item.rs"}, {"sha": "adee67181b1a3f972e39533ac9544d490ee85c2d", "filename": "crates/parser/test_data/parser/ok/0008_mod_item.txt", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,77 @@\n+SOURCE_FILE\n+  MODULE\n+    MOD_KW \"mod\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"c\"\n+    WHITESPACE \" \"\n+    ITEM_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"foo\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        BLOCK_EXPR\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            WHITESPACE \"\\n    \"\n+            R_CURLY \"}\"\n+      WHITESPACE \"\\n    \"\n+      STRUCT\n+        STRUCT_KW \"struct\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"S\"\n+        WHITESPACE \" \"\n+        RECORD_FIELD_LIST\n+          L_CURLY \"{\"\n+          R_CURLY \"}\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  MODULE\n+    MOD_KW \"mod\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"d\"\n+    WHITESPACE \" \"\n+    ITEM_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      ATTR\n+        POUND \"#\"\n+        BANG \"!\"\n+        L_BRACK \"[\"\n+        META\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"attr\"\n+        R_BRACK \"]\"\n+      WHITESPACE \"\\n    \"\n+      MODULE\n+        MOD_KW \"mod\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"e\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n    \"\n+      MODULE\n+        MOD_KW \"mod\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"f\"\n+        WHITESPACE \" \"\n+        ITEM_LIST\n+          L_CURLY \"{\"\n+          WHITESPACE \"\\n    \"\n+          R_CURLY \"}\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "6be1cf9fc83f0bd03b695bdc525c12d867b30e18", "filename": "crates/parser/test_data/parser/ok/0009_use_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0009_use_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0009_use_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0009_use_item.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0009_use_item.rast"}, {"sha": "05a6aff83fc08578b53abedd78ab1ee4f6b98b53", "filename": "crates/parser/test_data/parser/ok/0009_use_item.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0009_use_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0009_use_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0009_use_item.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0009_use_item.rs"}, {"sha": "04a44ef7e4b0f627c8105f839ece3b8bd98f7584", "filename": "crates/parser/test_data/parser/ok/0009_use_item.txt", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0009_use_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0009_use_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0009_use_item.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,21 @@\n+SOURCE_FILE\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"foo\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH_SEGMENT\n+          COLON2 \"::\"\n+          NAME_REF\n+            IDENT \"bar\"\n+    SEMICOLON \";\""}, {"sha": "4d49e7933747d0f54a5ed46a964b46818b07fe96", "filename": "crates/parser/test_data/parser/ok/0010_use_path_segments.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0010_use_path_segments.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0010_use_path_segments.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0010_use_path_segments.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0010_use_path_segments.rast"}, {"sha": "1e71b7a6c5de37dec1f58d3e6b1f96bafcd537e6", "filename": "crates/parser/test_data/parser/ok/0010_use_path_segments.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0010_use_path_segments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0010_use_path_segments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0010_use_path_segments.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0010_use_path_segments.rs"}, {"sha": "ddadec817b8da097bcd77be66df57eeba86bd4fe", "filename": "crates/parser/test_data/parser/ok/0010_use_path_segments.txt", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0010_use_path_segments.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0010_use_path_segments.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0010_use_path_segments.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,42 @@\n+SOURCE_FILE\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH\n+          PATH\n+            PATH_SEGMENT\n+              COLON2 \"::\"\n+              NAME_REF\n+                IDENT \"foo\"\n+          COLON2 \"::\"\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"bar\"\n+        COLON2 \"::\"\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"baz\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"foo\"\n+          COLON2 \"::\"\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"bar\"\n+        COLON2 \"::\"\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"baz\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\""}, {"sha": "bb35b40f4e7845f14d65f454478e13cd444fe701", "filename": "crates/parser/test_data/parser/ok/0011_outer_attribute.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0011_outer_attribute.rast"}, {"sha": "6f04cb1717f6bdfe9a51a973b92cbd7eaaedf170", "filename": "crates/parser/test_data/parser/ok/0011_outer_attribute.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0011_outer_attribute.rs"}, {"sha": "dbb9bc54da8d73584152c90353d67252d766ec71", "filename": "crates/parser/test_data/parser/ok/0011_outer_attribute.txt", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,61 @@\n+SOURCE_FILE\n+  FN\n+    ATTR\n+      POUND \"#\"\n+      L_BRACK \"[\"\n+      META\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"cfg\"\n+        TOKEN_TREE\n+          L_PAREN \"(\"\n+          IDENT \"test\"\n+          R_PAREN \")\"\n+      R_BRACK \"]\"\n+    WHITESPACE \"\\n\"\n+    ATTR\n+      POUND \"#\"\n+      L_BRACK \"[\"\n+      META\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"Ignore\"\n+      R_BRACK \"]\"\n+    WHITESPACE \"\\n\"\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  MODULE\n+    ATTR\n+      POUND \"#\"\n+      L_BRACK \"[\"\n+      META\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"path\"\n+        WHITESPACE \" \"\n+        EQ \"=\"\n+        WHITESPACE \" \"\n+        LITERAL\n+          STRING \"\\\"a.rs\\\"\"\n+      R_BRACK \"]\"\n+    WHITESPACE \"\\n\"\n+    MOD_KW \"mod\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"b\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\""}, {"sha": "e046b0bb1c857c085c680085426d901af338e4ce", "filename": "crates/parser/test_data/parser/ok/0012_visibility.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0012_visibility.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0012_visibility.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0012_visibility.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0012_visibility.rast"}, {"sha": "129d486fae2aaf845e9dd5110e158ae01d07ab5f", "filename": "crates/parser/test_data/parser/ok/0012_visibility.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0012_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0012_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0012_visibility.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0012_visibility.rs"}, {"sha": "a95bc23016bb8dc0281d80b6d7c97de07b1f9898", "filename": "crates/parser/test_data/parser/ok/0012_visibility.txt", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0012_visibility.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0012_visibility.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0012_visibility.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,133 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"a\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+  FN\n+    VISIBILITY\n+      PUB_KW \"pub\"\n+    WHITESPACE \" \"\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"b\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+  MACRO_DEF\n+    VISIBILITY\n+      PUB_KW \"pub\"\n+    WHITESPACE \" \"\n+    MACRO_KW \"macro\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"m\"\n+    TOKEN_TREE\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        DOLLAR \"$\"\n+        COLON \":\"\n+        IDENT \"ident\"\n+        R_PAREN \")\"\n+      WHITESPACE \" \"\n+      TOKEN_TREE\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+  FN\n+    VISIBILITY\n+      PUB_KW \"pub\"\n+      L_PAREN \"(\"\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            CRATE_KW \"crate\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"c\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+  FN\n+    VISIBILITY\n+      PUB_KW \"pub\"\n+      L_PAREN \"(\"\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            SUPER_KW \"super\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"d\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+  FN\n+    VISIBILITY\n+      PUB_KW \"pub\"\n+      L_PAREN \"(\"\n+      IN_KW \"in\"\n+      WHITESPACE \" \"\n+      PATH\n+        PATH\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"foo\"\n+          COLON2 \"::\"\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"bar\"\n+        COLON2 \"::\"\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"baz\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"e\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "dba74e222ebfd0a11184e1797c3d80c6cd8cd6f7", "filename": "crates/parser/test_data/parser/ok/0013_use_path_self_super.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0013_use_path_self_super.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0013_use_path_self_super.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0013_use_path_self_super.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0013_use_path_self_super.rast"}, {"sha": "9d9eb99175b368177bb680ebaa6dcb78992e0e51", "filename": "crates/parser/test_data/parser/ok/0013_use_path_self_super.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0013_use_path_self_super.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0013_use_path_self_super.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0013_use_path_self_super.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0013_use_path_self_super.rs"}, {"sha": "8a0149caca15d5dedbff06c0c50d717ee85e5620", "filename": "crates/parser/test_data/parser/ok/0013_use_path_self_super.txt", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0013_use_path_self_super.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0013_use_path_self_super.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0013_use_path_self_super.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,36 @@\n+SOURCE_FILE\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              SELF_KW \"self\"\n+        COLON2 \"::\"\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"foo\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                SUPER_KW \"super\"\n+          COLON2 \"::\"\n+          PATH_SEGMENT\n+            NAME_REF\n+              SUPER_KW \"super\"\n+        COLON2 \"::\"\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"bar\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\""}, {"sha": "4389d2d4bce35234f03b401eb7733ff177138606", "filename": "crates/parser/test_data/parser/ok/0014_use_tree.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0014_use_tree.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0014_use_tree.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0014_use_tree.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0014_use_tree.rast"}, {"sha": "5e4aa3a33210b72b46022e3029bc59489647c339", "filename": "crates/parser/test_data/parser/ok/0014_use_tree.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0014_use_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0014_use_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0014_use_tree.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0014_use_tree.rs"}, {"sha": "b37edc365b43edff9deff3fff0f75fa345aa8969", "filename": "crates/parser/test_data/parser/ok/0014_use_tree.txt", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0014_use_tree.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0014_use_tree.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0014_use_tree.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,95 @@\n+SOURCE_FILE\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      STAR \"*\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      COLON2 \"::\"\n+      STAR \"*\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      COLON2 \"::\"\n+      USE_TREE_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      USE_TREE_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"foo\"\n+      COLON2 \"::\"\n+      STAR \"*\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"foo\"\n+      COLON2 \"::\"\n+      USE_TREE_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH_SEGMENT\n+          COLON2 \"::\"\n+          NAME_REF\n+            IDENT \"foo\"\n+      COLON2 \"::\"\n+      USE_TREE_LIST\n+        L_CURLY \"{\"\n+        USE_TREE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"a\"\n+        COMMA \",\"\n+        WHITESPACE \" \"\n+        USE_TREE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"b\"\n+        COMMA \",\"\n+        WHITESPACE \" \"\n+        USE_TREE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"c\"\n+        R_CURLY \"}\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\""}, {"sha": "d7e93f7eb753ec7f5ad125a1dde5edbace104e17", "filename": "crates/parser/test_data/parser/ok/0015_use_tree.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0015_use_tree.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0015_use_tree.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0015_use_tree.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0015_use_tree.rast"}, {"sha": "46a0783a2bdffc9d4e0bef5c6cf6eaa97c8f5da5", "filename": "crates/parser/test_data/parser/ok/0015_use_tree.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0015_use_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0015_use_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0015_use_tree.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0015_use_tree.rs"}, {"sha": "ddf8aad6fcd6f8f6331d9a3ed9a76d4e85ec5ff6", "filename": "crates/parser/test_data/parser/ok/0015_use_tree.txt", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0015_use_tree.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0015_use_tree.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0015_use_tree.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,65 @@\n+SOURCE_FILE\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"foo\"\n+      WHITESPACE \" \"\n+      RENAME\n+        AS_KW \"as\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"bar\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"foo\"\n+      COLON2 \"::\"\n+      USE_TREE_LIST\n+        L_CURLY \"{\"\n+        USE_TREE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"a\"\n+          WHITESPACE \" \"\n+          RENAME\n+            AS_KW \"as\"\n+            WHITESPACE \" \"\n+            NAME\n+              IDENT \"b\"\n+        COMMA \",\"\n+        WHITESPACE \" \"\n+        USE_TREE\n+          STAR \"*\"\n+        COMMA \",\"\n+        WHITESPACE \" \"\n+        USE_TREE\n+          COLON2 \"::\"\n+          STAR \"*\"\n+        COMMA \",\"\n+        WHITESPACE \" \"\n+        USE_TREE\n+          PATH\n+            PATH_SEGMENT\n+              COLON2 \"::\"\n+              NAME_REF\n+                IDENT \"foo\"\n+          WHITESPACE \" \"\n+          RENAME\n+            AS_KW \"as\"\n+            WHITESPACE \" \"\n+            NAME\n+              IDENT \"x\"\n+        R_CURLY \"}\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\""}, {"sha": "b15f41dd7e974d6045df38701cfd69e4602a4304", "filename": "crates/parser/test_data/parser/ok/0016_struct_flavors.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0016_struct_flavors.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0016_struct_flavors.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0016_struct_flavors.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0016_struct_flavors.rast"}, {"sha": "69638350c46fcbe0644a4e1a98e07cb9b10ced96", "filename": "crates/parser/test_data/parser/ok/0016_struct_flavors.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0016_struct_flavors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0016_struct_flavors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0016_struct_flavors.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0016_struct_flavors.rs"}, {"sha": "eb2724e2f3667cc3bf35970c189762412ae6265e", "filename": "crates/parser/test_data/parser/ok/0016_struct_flavors.txt", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0016_struct_flavors.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0016_struct_flavors.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0016_struct_flavors.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,93 @@\n+SOURCE_FILE\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"A\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"B\"\n+    WHITESPACE \" \"\n+    RECORD_FIELD_LIST\n+      L_CURLY \"{\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"C\"\n+    TUPLE_FIELD_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"D\"\n+    WHITESPACE \" \"\n+    RECORD_FIELD_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      RECORD_FIELD\n+        NAME\n+          IDENT \"a\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"u32\"\n+      COMMA \",\"\n+      WHITESPACE \"\\n    \"\n+      RECORD_FIELD\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"b\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"u32\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"E\"\n+    TUPLE_FIELD_LIST\n+      L_PAREN \"(\"\n+      TUPLE_FIELD\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"x\"\n+      COMMA \",\"\n+      WHITESPACE \" \"\n+      TUPLE_FIELD\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"y\"\n+      COMMA \",\"\n+      R_PAREN \")\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\""}, {"sha": "938a3f17b68101030da58365d6ef437e24eb970e", "filename": "crates/parser/test_data/parser/ok/0017_attr_trailing_comma.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0017_attr_trailing_comma.rast"}, {"sha": "fe0a7bb97e372c96cadd5a8604b0b3137104f1a3", "filename": "crates/parser/test_data/parser/ok/0017_attr_trailing_comma.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0017_attr_trailing_comma.rs"}, {"sha": "7c914e2542eb79aa08f2865b07db464b6e38a234", "filename": "crates/parser/test_data/parser/ok/0017_attr_trailing_comma.txt", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,30 @@\n+SOURCE_FILE\n+  FN\n+    ATTR\n+      POUND \"#\"\n+      L_BRACK \"[\"\n+      META\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"foo\"\n+        TOKEN_TREE\n+          L_PAREN \"(\"\n+          IDENT \"a\"\n+          COMMA \",\"\n+          R_PAREN \")\"\n+      R_BRACK \"]\"\n+    WHITESPACE \"\\n\"\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "f845d5cffa8aaa6fbae33a386a3e67df9fe1a2ad", "filename": "crates/parser/test_data/parser/ok/0018_struct_type_params.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0018_struct_type_params.rast"}, {"sha": "88c544923b54d69fe5497321e1e689780b9fc450", "filename": "crates/parser/test_data/parser/ok/0018_struct_type_params.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0018_struct_type_params.rs"}, {"sha": "11ebc7efb9f387f4093677f0f60870bea26b254c", "filename": "crates/parser/test_data/parser/ok/0018_struct_type_params.txt", "status": "added", "additions": 274, "deletions": 0, "changes": 274, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,274 @@\n+SOURCE_FILE\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S1\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S2\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+      R_ANGLE \">\"\n+    TUPLE_FIELD_LIST\n+      L_PAREN \"(\"\n+      TUPLE_FIELD\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"u32\"\n+      R_PAREN \")\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S3\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+      R_ANGLE \">\"\n+    WHITESPACE \" \"\n+    RECORD_FIELD_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \" \"\n+      RECORD_FIELD\n+        NAME\n+          IDENT \"u\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"u32\"\n+      WHITESPACE \" \"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S4\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S5\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      LIFETIME_PARAM\n+        LIFETIME\n+          LIFETIME_IDENT \"'a\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S6\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      LIFETIME_PARAM\n+        LIFETIME\n+          LIFETIME_IDENT \"'a\"\n+        COLON \":\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S7\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      LIFETIME_PARAM\n+        LIFETIME\n+          LIFETIME_IDENT \"'a\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        LIFETIME\n+          LIFETIME_IDENT \"'b\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S8\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      LIFETIME_PARAM\n+        LIFETIME\n+          LIFETIME_IDENT \"'a\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        LIFETIME\n+          LIFETIME_IDENT \"'b\"\n+        WHITESPACE \" \"\n+        PLUS \"+\"\n+      WHITESPACE \" \"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S9\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      LIFETIME_PARAM\n+        LIFETIME\n+          LIFETIME_IDENT \"'a\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        LIFETIME\n+          LIFETIME_IDENT \"'b\"\n+        WHITESPACE \" \"\n+        PLUS \"+\"\n+        WHITESPACE \" \"\n+        LIFETIME\n+          LIFETIME_IDENT \"'c\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S10\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      LIFETIME_PARAM\n+        LIFETIME\n+          LIFETIME_IDENT \"'a\"\n+      COMMA \",\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S11\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      LIFETIME_PARAM\n+        LIFETIME\n+          LIFETIME_IDENT \"'a\"\n+      COMMA \",\"\n+      WHITESPACE \" \"\n+      LIFETIME_PARAM\n+        LIFETIME\n+          LIFETIME_IDENT \"'b\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S12\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      LIFETIME_PARAM\n+        LIFETIME\n+          LIFETIME_IDENT \"'a\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        LIFETIME\n+          LIFETIME_IDENT \"'b\"\n+        PLUS \"+\"\n+      COMMA \",\"\n+      WHITESPACE \" \"\n+      LIFETIME_PARAM\n+        LIFETIME\n+          LIFETIME_IDENT \"'b\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        LIFETIME\n+          LIFETIME_IDENT \"'c\"\n+      COMMA \",\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S13\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S14\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+      COMMA \",\"\n+      WHITESPACE \" \"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"U\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S15\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      LIFETIME_PARAM\n+        LIFETIME\n+          LIFETIME_IDENT \"'a\"\n+      COMMA \",\"\n+      WHITESPACE \" \"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+      COMMA \",\"\n+      WHITESPACE \" \"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"U\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\""}, {"sha": "c3df008146d74c3f15ea4e751ffc59505e1fcd6e", "filename": "crates/parser/test_data/parser/ok/0019_enums.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0019_enums.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0019_enums.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0019_enums.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0019_enums.rast"}, {"sha": "7a1afa0e62f183bd5ca5ad256984653c310b01de", "filename": "crates/parser/test_data/parser/ok/0019_enums.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0019_enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0019_enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0019_enums.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0019_enums.rs"}, {"sha": "dd47e3aa47ad61d7f3f7d9ee3dcea28114040d77", "filename": "crates/parser/test_data/parser/ok/0019_enums.txt", "status": "added", "additions": 155, "deletions": 0, "changes": 155, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0019_enums.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0019_enums.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0019_enums.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,155 @@\n+SOURCE_FILE\n+  ENUM\n+    ENUM_KW \"enum\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"E1\"\n+    WHITESPACE \" \"\n+    VARIANT_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  ENUM\n+    ENUM_KW \"enum\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"E2\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+      R_ANGLE \">\"\n+    WHITESPACE \" \"\n+    VARIANT_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  ENUM\n+    ENUM_KW \"enum\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"E3\"\n+    WHITESPACE \" \"\n+    VARIANT_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      VARIANT\n+        NAME\n+          IDENT \"X\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  ENUM\n+    ENUM_KW \"enum\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"E4\"\n+    WHITESPACE \" \"\n+    VARIANT_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      VARIANT\n+        NAME\n+          IDENT \"X\"\n+      COMMA \",\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  ENUM\n+    ENUM_KW \"enum\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"E5\"\n+    WHITESPACE \" \"\n+    VARIANT_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      VARIANT\n+        NAME\n+          IDENT \"A\"\n+      COMMA \",\"\n+      WHITESPACE \"\\n    \"\n+      VARIANT\n+        NAME\n+          IDENT \"B\"\n+        WHITESPACE \" \"\n+        EQ \"=\"\n+        WHITESPACE \" \"\n+        LITERAL\n+          INT_NUMBER \"92\"\n+      COMMA \",\"\n+      WHITESPACE \"\\n    \"\n+      VARIANT\n+        NAME\n+          IDENT \"C\"\n+        WHITESPACE \" \"\n+        RECORD_FIELD_LIST\n+          L_CURLY \"{\"\n+          WHITESPACE \"\\n        \"\n+          RECORD_FIELD\n+            NAME\n+              IDENT \"a\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"u32\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n        \"\n+          RECORD_FIELD\n+            VISIBILITY\n+              PUB_KW \"pub\"\n+            WHITESPACE \" \"\n+            NAME\n+              IDENT \"b\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"f64\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n    \"\n+          R_CURLY \"}\"\n+      COMMA \",\"\n+      WHITESPACE \"\\n    \"\n+      VARIANT\n+        NAME\n+          IDENT \"F\"\n+        WHITESPACE \" \"\n+        RECORD_FIELD_LIST\n+          L_CURLY \"{\"\n+          R_CURLY \"}\"\n+      COMMA \",\"\n+      WHITESPACE \"\\n    \"\n+      VARIANT\n+        NAME\n+          IDENT \"D\"\n+        TUPLE_FIELD_LIST\n+          L_PAREN \"(\"\n+          TUPLE_FIELD\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"u32\"\n+          COMMA \",\"\n+          R_PAREN \")\"\n+      COMMA \",\"\n+      WHITESPACE \"\\n    \"\n+      VARIANT\n+        NAME\n+          IDENT \"E\"\n+        TUPLE_FIELD_LIST\n+          L_PAREN \"(\"\n+          R_PAREN \")\"\n+      COMMA \",\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "9d4b001aed97bed05ad211cd1111d10018162e61", "filename": "crates/parser/test_data/parser/ok/0020_type_param_bounds.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0020_type_param_bounds.rast"}, {"sha": "7128989789a7d78ddd250bd87ad4a57de06533ff", "filename": "crates/parser/test_data/parser/ok/0020_type_param_bounds.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0020_type_param_bounds.rs"}, {"sha": "043a966ff978454ebd1d187a1fac560619523ea1", "filename": "crates/parser/test_data/parser/ok/0020_type_param_bounds.txt", "status": "added", "additions": 283, "deletions": 0, "changes": 283, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,283 @@\n+SOURCE_FILE\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"A\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"B\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+        COLON \":\"\n+        TYPE_BOUND_LIST\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"C\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            LIFETIME\n+              LIFETIME_IDENT \"'a\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"D\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            LIFETIME\n+              LIFETIME_IDENT \"'a\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+      WHITESPACE \" \"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"E\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            LIFETIME\n+              LIFETIME_IDENT \"'a\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND\n+            LIFETIME\n+              LIFETIME_IDENT \"'d\"\n+      WHITESPACE \" \"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"F\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            LIFETIME\n+              LIFETIME_IDENT \"'a\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND\n+            LIFETIME\n+              LIFETIME_IDENT \"'d\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Clone\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"G\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Clone\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Copy\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"H\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"Foo\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      SELF_KW \"self\"\n+                COLON2 \"::\"\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Bar\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND\n+            LIFETIME\n+              LIFETIME_IDENT \"'a\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"I\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+        COLON \":\"\n+        TYPE_BOUND_LIST\n+      COMMA \",\"\n+      WHITESPACE \" \"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"U\"\n+        COLON \":\"\n+        TYPE_BOUND_LIST\n+      COMMA \",\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"K\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      LIFETIME_PARAM\n+        LIFETIME\n+          LIFETIME_IDENT \"'a\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        LIFETIME\n+          LIFETIME_IDENT \"'d\"\n+      COMMA \",\"\n+      WHITESPACE \" \"\n+      LIFETIME_PARAM\n+        LIFETIME\n+          LIFETIME_IDENT \"'d\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        LIFETIME\n+          LIFETIME_IDENT \"'a\"\n+        WHITESPACE \" \"\n+        PLUS \"+\"\n+        WHITESPACE \" \"\n+        LIFETIME\n+          LIFETIME_IDENT \"'b\"\n+      COMMA \",\"\n+      WHITESPACE \" \"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"T\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            LIFETIME\n+              LIFETIME_IDENT \"'a\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND\n+            LIFETIME\n+              LIFETIME_IDENT \"'d\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Clone\"\n+      R_ANGLE \">\"\n+    SEMICOLON \";\""}, {"sha": "26abae3b29d979f4900b386d758f017b975364eb", "filename": "crates/parser/test_data/parser/ok/0022_empty_extern_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0022_empty_extern_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0022_empty_extern_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0022_empty_extern_block.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0022_empty_extern_block.rast"}, {"sha": "f5fe0e6ef30973aafc569e213ca0c3ee8f104d84", "filename": "crates/parser/test_data/parser/ok/0022_empty_extern_block.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0022_empty_extern_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0022_empty_extern_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0022_empty_extern_block.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0022_empty_extern_block.rs"}, {"sha": "ef2fb66dd5241ff64a1b83e34d1a2877d39a5445", "filename": "crates/parser/test_data/parser/ok/0022_empty_extern_block.txt", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0022_empty_extern_block.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0022_empty_extern_block.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0022_empty_extern_block.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,21 @@\n+SOURCE_FILE\n+  EXTERN_BLOCK\n+    ABI\n+      EXTERN_KW \"extern\"\n+    WHITESPACE \" \"\n+    EXTERN_ITEM_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  EXTERN_BLOCK\n+    ABI\n+      EXTERN_KW \"extern\"\n+      WHITESPACE \" \"\n+      STRING \"\\\"C\\\"\"\n+    WHITESPACE \" \"\n+    EXTERN_ITEM_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "9374cf5e965d1f915856c72f7cf70a06c74b1a77", "filename": "crates/parser/test_data/parser/ok/0023_static_items.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0023_static_items.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0023_static_items.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0023_static_items.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0023_static_items.rast"}, {"sha": "5fb92ce33f0d4e63f5cf54e43a5e7ae1363776f4", "filename": "crates/parser/test_data/parser/ok/0023_static_items.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0023_static_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0023_static_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0023_static_items.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0023_static_items.rs"}, {"sha": "b164e828e3016b447497a8197e3da218ab8d7ca7", "filename": "crates/parser/test_data/parser/ok/0023_static_items.txt", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0023_static_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0023_static_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0023_static_items.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,41 @@\n+SOURCE_FILE\n+  STATIC\n+    STATIC_KW \"static\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"FOO\"\n+    COLON \":\"\n+    WHITESPACE \" \"\n+    PATH_TYPE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"u32\"\n+    WHITESPACE \" \"\n+    EQ \"=\"\n+    WHITESPACE \" \"\n+    LITERAL\n+      INT_NUMBER \"1\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  STATIC\n+    STATIC_KW \"static\"\n+    WHITESPACE \" \"\n+    MUT_KW \"mut\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"BAR\"\n+    COLON \":\"\n+    WHITESPACE \" \"\n+    PATH_TYPE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"i32\"\n+    WHITESPACE \" \"\n+    EQ \"=\"\n+    WHITESPACE \" \"\n+    LITERAL\n+      INT_NUMBER \"92\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\""}, {"sha": "6b234b0b2418e9767eb76efedf39c42d25058f1f", "filename": "crates/parser/test_data/parser/ok/0024_const_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0024_const_item.rast"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "crates/parser/test_data/parser/ok/0024_const_item.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0024_const_item.rs"}, {"sha": "40b9ef804c219ee6702f257955c4bafd16513b1a", "filename": "crates/parser/test_data/parser/ok/0024_const_item.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0024_const_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0024_const_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0024_const_item.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1 @@\n+SOURCE_FILE"}, {"sha": "21ed8ebfa48629ba57abed94c3407acdebbf4c87", "filename": "crates/parser/test_data/parser/ok/0025_extern_fn_in_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0025_extern_fn_in_block.rast"}, {"sha": "289809809a6b662506fec6c72f23da192f8f7790", "filename": "crates/parser/test_data/parser/ok/0025_extern_fn_in_block.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0025_extern_fn_in_block.rs"}, {"sha": "9c5f5ac64e98b81f98d85f1c7b3fb83564c1227c", "filename": "crates/parser/test_data/parser/ok/0025_extern_fn_in_block.txt", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,33 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        FN\n+          ABI\n+            EXTERN_KW \"extern\"\n+          WHITESPACE \" \"\n+          FN_KW \"fn\"\n+          WHITESPACE \" \"\n+          NAME\n+            IDENT \"f\"\n+          PARAM_LIST\n+            L_PAREN \"(\"\n+            R_PAREN \")\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "ad4cd31cb659ccd570a0d0b36380e4077a7892bc", "filename": "crates/parser/test_data/parser/ok/0026_const_fn_in_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0026_const_fn_in_block.rast"}, {"sha": "7641a3d28e666411d7d7d97982119f2873661ea2", "filename": "crates/parser/test_data/parser/ok/0026_const_fn_in_block.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0026_const_fn_in_block.rs"}, {"sha": "ca9a3df86f6eda4ff0f96edbd9fb17a7e99934eb", "filename": "crates/parser/test_data/parser/ok/0026_const_fn_in_block.txt", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,32 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        FN\n+          CONST_KW \"const\"\n+          WHITESPACE \" \"\n+          FN_KW \"fn\"\n+          WHITESPACE \" \"\n+          NAME\n+            IDENT \"f\"\n+          PARAM_LIST\n+            L_PAREN \"(\"\n+            R_PAREN \")\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "eb1fa2819c09c41fbaceaf2c2c856f2714eed981", "filename": "crates/parser/test_data/parser/ok/0027_unsafe_fn_in_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0027_unsafe_fn_in_block.rast"}, {"sha": "f3c5ff93863e9e1c1c502a8147b7ea8d31f2e88b", "filename": "crates/parser/test_data/parser/ok/0027_unsafe_fn_in_block.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0027_unsafe_fn_in_block.rs"}, {"sha": "88ebd10952015d60852f9c543fb524900411c0c0", "filename": "crates/parser/test_data/parser/ok/0027_unsafe_fn_in_block.txt", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,43 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        FN\n+          UNSAFE_KW \"unsafe\"\n+          WHITESPACE \" \"\n+          FN_KW \"fn\"\n+          WHITESPACE \" \"\n+          NAME\n+            IDENT \"f\"\n+          PARAM_LIST\n+            L_PAREN \"(\"\n+            R_PAREN \")\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n    \"\n+        BLOCK_EXPR\n+          UNSAFE_KW \"unsafe\"\n+          WHITESPACE \" \"\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"92\"\n+            WHITESPACE \" \"\n+            R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "96c75052fa80615145e739b004b42cc12bdeb494", "filename": "crates/parser/test_data/parser/ok/0028_operator_binding_power.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0028_operator_binding_power.rast"}, {"sha": "cc9598470d84c05db8416592088e75174609b955", "filename": "crates/parser/test_data/parser/ok/0028_operator_binding_power.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0028_operator_binding_power.rs"}, {"sha": "ae08c0756aa3a7df2adc9ef9b7fb814f1a7e6558", "filename": "crates/parser/test_data/parser/ok/0028_operator_binding_power.txt", "status": "added", "additions": 186, "deletions": 0, "changes": 186, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,186 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"binding_power\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"x\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          BIN_EXPR\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"1\"\n+              WHITESPACE \" \"\n+              PLUS \"+\"\n+              WHITESPACE \" \"\n+              BIN_EXPR\n+                BIN_EXPR\n+                  LITERAL\n+                    INT_NUMBER \"2\"\n+                  WHITESPACE \" \"\n+                  STAR \"*\"\n+                  WHITESPACE \" \"\n+                  LITERAL\n+                    INT_NUMBER \"3\"\n+                WHITESPACE \" \"\n+                PERCENT \"%\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  INT_NUMBER \"4\"\n+            WHITESPACE \" \"\n+            MINUS \"-\"\n+            WHITESPACE \" \"\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"5\"\n+              WHITESPACE \" \"\n+              SLASH \"/\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"6\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            LITERAL\n+              INT_NUMBER \"1\"\n+            WHITESPACE \" \"\n+            PLUS \"+\"\n+            WHITESPACE \" \"\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"2\"\n+              WHITESPACE \" \"\n+              STAR \"*\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"3\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            LITERAL\n+              INT_NUMBER \"1\"\n+            WHITESPACE \" \"\n+            SHL \"<<\"\n+            WHITESPACE \" \"\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"2\"\n+              WHITESPACE \" \"\n+              PLUS \"+\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"3\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            LITERAL\n+              INT_NUMBER \"1\"\n+            WHITESPACE \" \"\n+            AMP \"&\"\n+            WHITESPACE \" \"\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"2\"\n+              WHITESPACE \" \"\n+              SHR \">>\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"3\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            LITERAL\n+              INT_NUMBER \"1\"\n+            WHITESPACE \" \"\n+            CARET \"^\"\n+            WHITESPACE \" \"\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"2\"\n+              WHITESPACE \" \"\n+              AMP \"&\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"3\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            LITERAL\n+              INT_NUMBER \"1\"\n+            WHITESPACE \" \"\n+            PIPE \"|\"\n+            WHITESPACE \" \"\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"2\"\n+              WHITESPACE \" \"\n+              CARET \"^\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"3\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            LITERAL\n+              INT_NUMBER \"1\"\n+            WHITESPACE \" \"\n+            EQ2 \"==\"\n+            WHITESPACE \" \"\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"2\"\n+              WHITESPACE \" \"\n+              PIPE \"|\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"3\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            LITERAL\n+              INT_NUMBER \"1\"\n+            WHITESPACE \" \"\n+            AMP2 \"&&\"\n+            WHITESPACE \" \"\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"2\"\n+              WHITESPACE \" \"\n+              EQ2 \"==\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"3\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        COMMENT \"//1 || 2 && 2;\"\n+        WHITESPACE \"\\n    \"\n+        COMMENT \"//1 .. 2 || 3;\"\n+        WHITESPACE \"\\n    \"\n+        COMMENT \"//1 = 2 .. 3;\"\n+        WHITESPACE \"\\n    \"\n+        COMMENT \"//---&*1 - --2 * 9;\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "486bab8df1017318d73025c98f24c202c67ecd3d", "filename": "crates/parser/test_data/parser/ok/0029_range_forms.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0029_range_forms.rast"}, {"sha": "f9ff444d400c35a00c63bf237ac7f565a23a9dd5", "filename": "crates/parser/test_data/parser/ok/0029_range_forms.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0029_range_forms.rs"}, {"sha": "5acc54e713ea42f7981c076d7292d7d3bbd12995", "filename": "crates/parser/test_data/parser/ok/0029_range_forms.txt", "status": "added", "additions": 152, "deletions": 0, "changes": 152, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,152 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          RANGE_EXPR\n+            DOT2 \"..\"\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"1\"\n+              WHITESPACE \" \"\n+              PLUS \"+\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"1\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            RANGE_EXPR\n+              DOT2 \"..\"\n+              PATH_EXPR\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"z\"\n+            WHITESPACE \" \"\n+            EQ \"=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"2\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"x\"\n+            WHITESPACE \" \"\n+            EQ \"=\"\n+            WHITESPACE \" \"\n+            RANGE_EXPR\n+              LITERAL\n+                FALSE_KW \"false\"\n+              DOT2 \"..\"\n+              BIN_EXPR\n+                LITERAL\n+                  INT_NUMBER \"1\"\n+                WHITESPACE \" \"\n+                EQ2 \"==\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  INT_NUMBER \"1\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"x\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          RANGE_EXPR\n+            LITERAL\n+              INT_NUMBER \"1\"\n+            DOT2 \"..\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \\n    \"\n+        EXPR_STMT\n+          RANGE_EXPR\n+            DOT2EQ \"..=\"\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"1\"\n+              WHITESPACE \" \"\n+              PLUS \"+\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"1\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            RANGE_EXPR\n+              DOT2EQ \"..=\"\n+              PATH_EXPR\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"z\"\n+            WHITESPACE \" \"\n+            EQ \"=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"2\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"x\"\n+            WHITESPACE \" \"\n+            EQ \"=\"\n+            WHITESPACE \" \"\n+            RANGE_EXPR\n+              LITERAL\n+                FALSE_KW \"false\"\n+              DOT2EQ \"..=\"\n+              BIN_EXPR\n+                LITERAL\n+                  INT_NUMBER \"1\"\n+                WHITESPACE \" \"\n+                EQ2 \"==\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  INT_NUMBER \"1\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"x\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          RANGE_EXPR\n+            LITERAL\n+              INT_NUMBER \"1\"\n+            DOT2 \"..\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "9f59c0ecb691a51d77c2ecdc82d32b8f7ecffb8d", "filename": "crates/parser/test_data/parser/ok/0030_string_suffixes.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0030_string_suffixes.rast"}, {"sha": "261aad1fb6b402f13d3a192bebcef9d28e963ea8", "filename": "crates/parser/test_data/parser/ok/0030_string_suffixes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0030_string_suffixes.rs"}, {"sha": "44211c7c42006a96630b9d3382208b61a9c798da", "filename": "crates/parser/test_data/parser/ok/0030_string_suffixes.txt", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,64 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          WILDCARD_PAT\n+            UNDERSCORE \"_\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          LITERAL\n+            CHAR \"'c'u32\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          WILDCARD_PAT\n+            UNDERSCORE \"_\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          LITERAL\n+            STRING \"\\\"string\\\"invalid\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          WILDCARD_PAT\n+            UNDERSCORE \"_\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          LITERAL\n+            BYTE \"b'b'_suff\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          WILDCARD_PAT\n+            UNDERSCORE \"_\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          LITERAL\n+            BYTE_STRING \"b\\\"bs\\\"invalid\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "d07c6683a3de912bea006881421c548a3896a921", "filename": "crates/parser/test_data/parser/ok/0030_traits.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_traits.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_traits.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_traits.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0030_traits.rast"}, {"sha": "ac30843eff649ff3644413d8998a2973578d5690", "filename": "crates/parser/test_data/parser/ok/0030_traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_traits.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0030_traits.rs"}, {"sha": "44423581e6abdcf16d97e4d5435c5998378110ee", "filename": "crates/parser/test_data/parser/ok/0030_traits.txt", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_traits.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_traits.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0030_traits.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,61 @@\n+SOURCE_FILE\n+  TRAIT\n+    TRAIT_KW \"trait\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"Runnable\"\n+    WHITESPACE \" \"\n+    ASSOC_ITEM_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"handler\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          R_PAREN \")\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  TRAIT\n+    TRAIT_KW \"trait\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"TraitWithExpr\"\n+    WHITESPACE \" \"\n+    ASSOC_ITEM_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"fn_with_expr\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"x\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            ARRAY_TYPE\n+              L_BRACK \"[\"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"i32\"\n+              SEMICOLON \";\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"1\"\n+              R_BRACK \"]\"\n+          R_PAREN \")\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "8150d445f373d6a8cbdfab06be31cd3ff0b1a8e6", "filename": "crates/parser/test_data/parser/ok/0031_extern.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0031_extern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0031_extern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0031_extern.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0031_extern.rast"}, {"sha": "b33ac273ca6e83e81539d3e8a8a0646470490af8", "filename": "crates/parser/test_data/parser/ok/0031_extern.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0031_extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0031_extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0031_extern.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0031_extern.rs"}, {"sha": "70b52780862880fb80d40539599788ecc509102d", "filename": "crates/parser/test_data/parser/ok/0031_extern.txt", "status": "added", "additions": 973, "deletions": 0, "changes": 973, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0031_extern.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0031_extern.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0031_extern.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,973 @@\n+SOURCE_FILE\n+  EXTERN_BLOCK\n+    ABI\n+      EXTERN_KW \"extern\"\n+    WHITESPACE \" \"\n+    EXTERN_ITEM_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"socket\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"domain\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"ty\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"protocol\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                COLON2 \"::\"\n+                NAME_REF\n+                  IDENT \"c_int\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"bind\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"fd\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"addr\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              CONST_KW \"const\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"sockaddr\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"len\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"socklen_t\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                COLON2 \"::\"\n+                NAME_REF\n+                  IDENT \"c_int\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"connect\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"socket\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"address\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              CONST_KW \"const\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"sockaddr\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                   \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"len\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"socklen_t\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                COLON2 \"::\"\n+                NAME_REF\n+                  IDENT \"c_int\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"listen\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"socket\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"backlog\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                COLON2 \"::\"\n+                NAME_REF\n+                  IDENT \"c_int\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"getsockname\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"socket\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"address\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              MUT_KW \"mut\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"sockaddr\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                       \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"address_len\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              MUT_KW \"mut\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"socklen_t\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                COLON2 \"::\"\n+                NAME_REF\n+                  IDENT \"c_int\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"getsockopt\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"sockfd\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                      \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"level\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                      \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"optname\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                      \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"optval\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              MUT_KW \"mut\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    COLON2 \"::\"\n+                    NAME_REF\n+                      IDENT \"c_void\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                      \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"optlen\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              MUT_KW \"mut\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    COLON2 \"::\"\n+                    NAME_REF\n+                      IDENT \"socklen_t\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                COLON2 \"::\"\n+                NAME_REF\n+                  IDENT \"c_int\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"setsockopt\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"socket\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"level\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"name\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                      \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"value\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              CONST_KW \"const\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    COLON2 \"::\"\n+                    NAME_REF\n+                      IDENT \"c_void\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                      \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"option_len\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"socklen_t\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                COLON2 \"::\"\n+                NAME_REF\n+                  IDENT \"c_int\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"getpeername\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"socket\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"address\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              MUT_KW \"mut\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"sockaddr\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                       \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"address_len\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              MUT_KW \"mut\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"socklen_t\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                COLON2 \"::\"\n+                NAME_REF\n+                  IDENT \"c_int\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"sendto\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"socket\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"buf\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              CONST_KW \"const\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    COLON2 \"::\"\n+                    NAME_REF\n+                      IDENT \"c_void\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"len\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"size_t\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                  \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"flags\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"addr\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              CONST_KW \"const\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"sockaddr\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                  \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"addrlen\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"socklen_t\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                COLON2 \"::\"\n+                NAME_REF\n+                  IDENT \"ssize_t\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"send\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"socket\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"buf\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              CONST_KW \"const\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    COLON2 \"::\"\n+                    NAME_REF\n+                      IDENT \"c_void\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"len\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"size_t\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"flags\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                COLON2 \"::\"\n+                NAME_REF\n+                  IDENT \"ssize_t\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"recvfrom\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"socket\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"buf\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              MUT_KW \"mut\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    COLON2 \"::\"\n+                    NAME_REF\n+                      IDENT \"c_void\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"len\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"size_t\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                    \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"flags\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"addr\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              MUT_KW \"mut\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    COLON2 \"::\"\n+                    NAME_REF\n+                      IDENT \"sockaddr\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                    \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"addrlen\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              MUT_KW \"mut\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    COLON2 \"::\"\n+                    NAME_REF\n+                      IDENT \"socklen_t\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                COLON2 \"::\"\n+                NAME_REF\n+                  IDENT \"ssize_t\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        VISIBILITY\n+          PUB_KW \"pub\"\n+        WHITESPACE \" \"\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"recv\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"socket\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"buf\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              MUT_KW \"mut\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    COLON2 \"::\"\n+                    NAME_REF\n+                      IDENT \"c_void\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"len\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"size_t\"\n+          COMMA \",\"\n+          WHITESPACE \"\\n                \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"flags\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  COLON2 \"::\"\n+                  NAME_REF\n+                    IDENT \"c_int\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                COLON2 \"::\"\n+                NAME_REF\n+                  IDENT \"ssize_t\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "ee66eab530045bc6713e511e80f1510aac37c277", "filename": "crates/parser/test_data/parser/ok/0032_where_for.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0032_where_for.rast"}, {"sha": "588170fbef53a8998a0ed1dab8daa72090594b0f", "filename": "crates/parser/test_data/parser/ok/0032_where_for.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0032_where_for.rs"}, {"sha": "86f6af97c735a6f49a1acc53e3ca014c2397ccc4", "filename": "crates/parser/test_data/parser/ok/0032_where_for.txt", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0032_where_for.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0032_where_for.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0032_where_for.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,93 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"test_serialization\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"SER\"\n+      R_ANGLE \">\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \"\\n\"\n+    WHERE_CLAUSE\n+      WHERE_KW \"where\"\n+      WHITESPACE \"\\n    \"\n+      WHERE_PRED\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"SER\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Serialize\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND\n+            FOR_TYPE\n+              FOR_KW \"for\"\n+              GENERIC_PARAM_LIST\n+                L_ANGLE \"<\"\n+                LIFETIME_PARAM\n+                  LIFETIME\n+                    LIFETIME_IDENT \"'de\"\n+                R_ANGLE \">\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"Deserialize\"\n+                    GENERIC_ARG_LIST\n+                      L_ANGLE \"<\"\n+                      LIFETIME_ARG\n+                        LIFETIME\n+                          LIFETIME_IDENT \"'de\"\n+                      R_ANGLE \">\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"PartialEq\"\n+          WHITESPACE \" \"\n+          PLUS \"+\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"std\"\n+                  COLON2 \"::\"\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"fmt\"\n+                COLON2 \"::\"\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Debug\"\n+      COMMA \",\"\n+    WHITESPACE \"\\n\"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "fbda85797e193827f04f81c547bbeccab14309f4", "filename": "crates/parser/test_data/parser/ok/0033_label_break.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0033_label_break.rast"}, {"sha": "728d78137c99ecba6cd3773883d717879dc8e848", "filename": "crates/parser/test_data/parser/ok/0033_label_break.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0033_label_break.rs"}, {"sha": "9807bf0d9a6dd5dfbacb1d220f19c491e06b4c23", "filename": "crates/parser/test_data/parser/ok/0033_label_break.txt", "status": "added", "additions": 227, "deletions": 0, "changes": 227, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0033_label_break.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0033_label_break.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0033_label_break.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,227 @@\n+SOURCE_FILE\n+  FN\n+    COMMENT \"// format with label break value.\"\n+    WHITESPACE \"\\n\"\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BLOCK_EXPR\n+            LABEL\n+              LIFETIME\n+                LIFETIME_IDENT \"'empty_block\"\n+              COLON \":\"\n+            WHITESPACE \" \"\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\\n    \"\n+        EXPR_STMT\n+          BLOCK_EXPR\n+            LABEL\n+              LIFETIME\n+                LIFETIME_IDENT \"'block\"\n+              COLON \":\"\n+            WHITESPACE \" \"\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              EXPR_STMT\n+                CALL_EXPR\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"do_thing\"\n+                  ARG_LIST\n+                    L_PAREN \"(\"\n+                    R_PAREN \")\"\n+                SEMICOLON \";\"\n+              WHITESPACE \"\\n        \"\n+              EXPR_STMT\n+                IF_EXPR\n+                  IF_KW \"if\"\n+                  WHITESPACE \" \"\n+                  CONDITION\n+                    CALL_EXPR\n+                      PATH_EXPR\n+                        PATH\n+                          PATH_SEGMENT\n+                            NAME_REF\n+                              IDENT \"condition_not_met\"\n+                      ARG_LIST\n+                        L_PAREN \"(\"\n+                        R_PAREN \")\"\n+                  WHITESPACE \" \"\n+                  BLOCK_EXPR\n+                    STMT_LIST\n+                      L_CURLY \"{\"\n+                      WHITESPACE \"\\n            \"\n+                      EXPR_STMT\n+                        BREAK_EXPR\n+                          BREAK_KW \"break\"\n+                          WHITESPACE \" \"\n+                          LIFETIME\n+                            LIFETIME_IDENT \"'block\"\n+                        SEMICOLON \";\"\n+                      WHITESPACE \"\\n        \"\n+                      R_CURLY \"}\"\n+              WHITESPACE \"\\n        \"\n+              EXPR_STMT\n+                CALL_EXPR\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"do_next_thing\"\n+                  ARG_LIST\n+                    L_PAREN \"(\"\n+                    R_PAREN \")\"\n+                SEMICOLON \";\"\n+              WHITESPACE \"\\n        \"\n+              EXPR_STMT\n+                IF_EXPR\n+                  IF_KW \"if\"\n+                  WHITESPACE \" \"\n+                  CONDITION\n+                    CALL_EXPR\n+                      PATH_EXPR\n+                        PATH\n+                          PATH_SEGMENT\n+                            NAME_REF\n+                              IDENT \"condition_not_met\"\n+                      ARG_LIST\n+                        L_PAREN \"(\"\n+                        R_PAREN \")\"\n+                  WHITESPACE \" \"\n+                  BLOCK_EXPR\n+                    STMT_LIST\n+                      L_CURLY \"{\"\n+                      WHITESPACE \"\\n            \"\n+                      EXPR_STMT\n+                        BREAK_EXPR\n+                          BREAK_KW \"break\"\n+                          WHITESPACE \" \"\n+                          LIFETIME\n+                            LIFETIME_IDENT \"'block\"\n+                        SEMICOLON \";\"\n+                      WHITESPACE \"\\n        \"\n+                      R_CURLY \"}\"\n+              WHITESPACE \"\\n        \"\n+              EXPR_STMT\n+                CALL_EXPR\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"do_last_thing\"\n+                  ARG_LIST\n+                    L_PAREN \"(\"\n+                    R_PAREN \")\"\n+                SEMICOLON \";\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"result\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            LABEL\n+              LIFETIME\n+                LIFETIME_IDENT \"'block\"\n+              COLON \":\"\n+            WHITESPACE \" \"\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              EXPR_STMT\n+                IF_EXPR\n+                  IF_KW \"if\"\n+                  WHITESPACE \" \"\n+                  CONDITION\n+                    CALL_EXPR\n+                      PATH_EXPR\n+                        PATH\n+                          PATH_SEGMENT\n+                            NAME_REF\n+                              IDENT \"foo\"\n+                      ARG_LIST\n+                        L_PAREN \"(\"\n+                        R_PAREN \")\"\n+                  WHITESPACE \" \"\n+                  BLOCK_EXPR\n+                    STMT_LIST\n+                      L_CURLY \"{\"\n+                      WHITESPACE \"\\n            \"\n+                      COMMENT \"// comment\"\n+                      WHITESPACE \"\\n            \"\n+                      EXPR_STMT\n+                        BREAK_EXPR\n+                          BREAK_KW \"break\"\n+                          WHITESPACE \" \"\n+                          LIFETIME\n+                            LIFETIME_IDENT \"'block\"\n+                          WHITESPACE \" \"\n+                          LITERAL\n+                            INT_NUMBER \"1\"\n+                        SEMICOLON \";\"\n+                      WHITESPACE \"\\n        \"\n+                      R_CURLY \"}\"\n+              WHITESPACE \"\\n        \"\n+              EXPR_STMT\n+                IF_EXPR\n+                  IF_KW \"if\"\n+                  WHITESPACE \" \"\n+                  CONDITION\n+                    CALL_EXPR\n+                      PATH_EXPR\n+                        PATH\n+                          PATH_SEGMENT\n+                            NAME_REF\n+                              IDENT \"bar\"\n+                      ARG_LIST\n+                        L_PAREN \"(\"\n+                        R_PAREN \")\"\n+                  WHITESPACE \" \"\n+                  BLOCK_EXPR\n+                    STMT_LIST\n+                      L_CURLY \"{\"\n+                      WHITESPACE \"\\n            \"\n+                      COMMENT \"/* comment */\"\n+                      WHITESPACE \"\\n            \"\n+                      EXPR_STMT\n+                        BREAK_EXPR\n+                          BREAK_KW \"break\"\n+                          WHITESPACE \" \"\n+                          LIFETIME\n+                            LIFETIME_IDENT \"'block\"\n+                          WHITESPACE \" \"\n+                          LITERAL\n+                            INT_NUMBER \"2\"\n+                        SEMICOLON \";\"\n+                      WHITESPACE \"\\n        \"\n+                      R_CURLY \"}\"\n+              WHITESPACE \"\\n        \"\n+              LITERAL\n+                INT_NUMBER \"3\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "9a6010d36220eae57734509a4d1704c59f53e949", "filename": "crates/parser/test_data/parser/ok/0034_crate_path_in_call.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0034_crate_path_in_call.rast"}, {"sha": "f1ed30220ae6812953268c8d30d2cef17d80974c", "filename": "crates/parser/test_data/parser/ok/0034_crate_path_in_call.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0034_crate_path_in_call.rs"}, {"sha": "2b3b86ebf2d05698e1416966ebf47382d0f94bae", "filename": "crates/parser/test_data/parser/ok/0034_crate_path_in_call.txt", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,43 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"make_query\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              PATH_EXPR\n+                PATH\n+                  PATH\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          CRATE_KW \"crate\"\n+                    COLON2 \"::\"\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"module_map\"\n+                  COLON2 \"::\"\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"module_tree\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "672a12d08781fe7a0ad47bf9b7b39809807a54f2", "filename": "crates/parser/test_data/parser/ok/0035_weird_exprs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0035_weird_exprs.rast"}, {"sha": "8c13231631c31e06767972a01cdb22ed92f2c3ee", "filename": "crates/parser/test_data/parser/ok/0035_weird_exprs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0035_weird_exprs.rs"}, {"sha": "5f62748c479c785a4656ff7e156ec62d7a86f2bc", "filename": "crates/parser/test_data/parser/ok/0035_weird_exprs.txt", "status": "added", "additions": 2337, "deletions": 0, "changes": 2337, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,2337 @@\n+SOURCE_FILE\n+  COMMENT \"//! Adapted from a `rustc` test, which can be found at \"\n+  WHITESPACE \"\\n\"\n+  COMMENT \"//! https://github.com/rust-lang/rust/blob/6d34ec18c7d7e574553f6347ecf08e1e1c45c13d/src/test/run-pass/weird-exprs.rs.\"\n+  WHITESPACE \"\\n\"\n+  COMMENT \"//! \"\n+  WHITESPACE \"\\n\"\n+  COMMENT \"//! Reported to rust-analyzer in https://github.com/rust-analyzer/rust-analyzer/issues/290\"\n+  WHITESPACE \"\\n\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"allow\"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        IDENT \"non_camel_case_types\"\n+        R_PAREN \")\"\n+    R_BRACK \"]\"\n+  WHITESPACE \"\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"allow\"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        IDENT \"dead_code\"\n+        R_PAREN \")\"\n+    R_BRACK \"]\"\n+  WHITESPACE \"\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"allow\"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        IDENT \"unreachable_code\"\n+        R_PAREN \")\"\n+    R_BRACK \"]\"\n+  WHITESPACE \"\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"allow\"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        IDENT \"unused_parens\"\n+        R_PAREN \")\"\n+    R_BRACK \"]\"\n+  WHITESPACE \"\\n\\n\"\n+  ATTR\n+    POUND \"#\"\n+    BANG \"!\"\n+    L_BRACK \"[\"\n+    META\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"recursion_limit\"\n+      WHITESPACE \" \"\n+      EQ \"=\"\n+      WHITESPACE \" \"\n+      LITERAL\n+        STRING \"\\\"128\\\"\"\n+    R_BRACK \"]\"\n+  WHITESPACE \"\\n\\n\"\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"std\"\n+          COLON2 \"::\"\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"cell\"\n+        COLON2 \"::\"\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"Cell\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  USE\n+    USE_KW \"use\"\n+    WHITESPACE \" \"\n+    USE_TREE\n+      PATH\n+        PATH\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"std\"\n+          COLON2 \"::\"\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"mem\"\n+        COLON2 \"::\"\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"swap\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\\n\"\n+  COMMENT \"// Just a grab bag of stuff that you wouldn't want to actually write.\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"strange\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    RET_TYPE\n+      THIN_ARROW \"->\"\n+      WHITESPACE \" \"\n+      PATH_TYPE\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"bool\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \" \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"_x\"\n+          COLON \":\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"bool\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          RETURN_EXPR\n+            RETURN_KW \"return\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              TRUE_KW \"true\"\n+          SEMICOLON \";\"\n+        WHITESPACE \" \"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"funny\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        FN\n+          FN_KW \"fn\"\n+          WHITESPACE \" \"\n+          NAME\n+            IDENT \"f\"\n+          PARAM_LIST\n+            L_PAREN \"(\"\n+            PARAM\n+              IDENT_PAT\n+                NAME\n+                  IDENT \"_x\"\n+              COLON \":\"\n+              WHITESPACE \" \"\n+              TUPLE_TYPE\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+            R_PAREN \")\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \" \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"f\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              RETURN_EXPR\n+                RETURN_KW \"return\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"what\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        FN\n+          FN_KW \"fn\"\n+          WHITESPACE \" \"\n+          NAME\n+            IDENT \"the\"\n+          PARAM_LIST\n+            L_PAREN \"(\"\n+            PARAM\n+              IDENT_PAT\n+                NAME\n+                  IDENT \"x\"\n+              COLON \":\"\n+              WHITESPACE \" \"\n+              REF_TYPE\n+                AMP \"&\"\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Cell\"\n+                      GENERIC_ARG_LIST\n+                        L_ANGLE \"<\"\n+                        TYPE_ARG\n+                          PATH_TYPE\n+                            PATH\n+                              PATH_SEGMENT\n+                                NAME_REF\n+                                  IDENT \"bool\"\n+                        R_ANGLE \">\"\n+            R_PAREN \")\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              EXPR_STMT\n+                RETURN_EXPR\n+                  RETURN_KW \"return\"\n+                  WHITESPACE \" \"\n+                  WHILE_EXPR\n+                    WHILE_KW \"while\"\n+                    WHITESPACE \" \"\n+                    CONDITION\n+                      PREFIX_EXPR\n+                        BANG \"!\"\n+                        METHOD_CALL_EXPR\n+                          PATH_EXPR\n+                            PATH\n+                              PATH_SEGMENT\n+                                NAME_REF\n+                                  IDENT \"x\"\n+                          DOT \".\"\n+                          NAME_REF\n+                            IDENT \"get\"\n+                          ARG_LIST\n+                            L_PAREN \"(\"\n+                            R_PAREN \")\"\n+                    WHITESPACE \" \"\n+                    BLOCK_EXPR\n+                      STMT_LIST\n+                        L_CURLY \"{\"\n+                        WHITESPACE \" \"\n+                        EXPR_STMT\n+                          METHOD_CALL_EXPR\n+                            PATH_EXPR\n+                              PATH\n+                                PATH_SEGMENT\n+                                  NAME_REF\n+                                    IDENT \"x\"\n+                            DOT \".\"\n+                            NAME_REF\n+                              IDENT \"set\"\n+                            ARG_LIST\n+                              L_PAREN \"(\"\n+                              LITERAL\n+                                TRUE_KW \"true\"\n+                              R_PAREN \")\"\n+                          SEMICOLON \";\"\n+                        WHITESPACE \" \"\n+                        R_CURLY \"}\"\n+                SEMICOLON \";\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"i\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          REF_EXPR\n+            AMP \"&\"\n+            CALL_EXPR\n+              PATH_EXPR\n+                PATH\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Cell\"\n+                  COLON2 \"::\"\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"new\"\n+              ARG_LIST\n+                L_PAREN \"(\"\n+                LITERAL\n+                  FALSE_KW \"false\"\n+                R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"dont\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              CLOSURE_EXPR\n+                PARAM_LIST\n+                  PIPE \"|\"\n+                  PIPE \"|\"\n+                CALL_EXPR\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"the\"\n+                  ARG_LIST\n+                    L_PAREN \"(\"\n+                    PATH_EXPR\n+                      PATH\n+                        PATH_SEGMENT\n+                          NAME_REF\n+                            IDENT \"i\"\n+                    R_PAREN \")\"\n+              R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"dont\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          MACRO_CALL\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"assert\"\n+            BANG \"!\"\n+            TOKEN_TREE\n+              L_PAREN \"(\"\n+              TOKEN_TREE\n+                L_PAREN \"(\"\n+                IDENT \"i\"\n+                DOT \".\"\n+                IDENT \"get\"\n+                TOKEN_TREE\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                R_PAREN \")\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"zombiejesus\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LOOP_EXPR\n+          LOOP_KW \"loop\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              EXPR_STMT\n+                WHILE_EXPR\n+                  WHILE_KW \"while\"\n+                  WHITESPACE \" \"\n+                  CONDITION\n+                    PAREN_EXPR\n+                      L_PAREN \"(\"\n+                      RETURN_EXPR\n+                        RETURN_KW \"return\"\n+                      R_PAREN \")\"\n+                  WHITESPACE \" \"\n+                  BLOCK_EXPR\n+                    STMT_LIST\n+                      L_CURLY \"{\"\n+                      WHITESPACE \"\\n            \"\n+                      IF_EXPR\n+                        IF_KW \"if\"\n+                        WHITESPACE \" \"\n+                        CONDITION\n+                          PAREN_EXPR\n+                            L_PAREN \"(\"\n+                            RETURN_EXPR\n+                              RETURN_KW \"return\"\n+                            R_PAREN \")\"\n+                        WHITESPACE \" \"\n+                        BLOCK_EXPR\n+                          STMT_LIST\n+                            L_CURLY \"{\"\n+                            WHITESPACE \"\\n                \"\n+                            EXPR_STMT\n+                              MATCH_EXPR\n+                                MATCH_KW \"match\"\n+                                WHITESPACE \" \"\n+                                PAREN_EXPR\n+                                  L_PAREN \"(\"\n+                                  RETURN_EXPR\n+                                    RETURN_KW \"return\"\n+                                  R_PAREN \")\"\n+                                WHITESPACE \" \"\n+                                MATCH_ARM_LIST\n+                                  L_CURLY \"{\"\n+                                  WHITESPACE \"\\n                    \"\n+                                  MATCH_ARM\n+                                    LITERAL_PAT\n+                                      LITERAL\n+                                        INT_NUMBER \"1\"\n+                                    WHITESPACE \" \"\n+                                    FAT_ARROW \"=>\"\n+                                    WHITESPACE \" \"\n+                                    BLOCK_EXPR\n+                                      STMT_LIST\n+                                        L_CURLY \"{\"\n+                                        WHITESPACE \"\\n                        \"\n+                                        IF_EXPR\n+                                          IF_KW \"if\"\n+                                          WHITESPACE \" \"\n+                                          CONDITION\n+                                            PAREN_EXPR\n+                                              L_PAREN \"(\"\n+                                              RETURN_EXPR\n+                                                RETURN_KW \"return\"\n+                                              R_PAREN \")\"\n+                                          WHITESPACE \" \"\n+                                          BLOCK_EXPR\n+                                            STMT_LIST\n+                                              L_CURLY \"{\"\n+                                              WHITESPACE \"\\n                            \"\n+                                              RETURN_EXPR\n+                                                RETURN_KW \"return\"\n+                                              WHITESPACE \"\\n                        \"\n+                                              R_CURLY \"}\"\n+                                          WHITESPACE \" \"\n+                                          ELSE_KW \"else\"\n+                                          WHITESPACE \" \"\n+                                          BLOCK_EXPR\n+                                            STMT_LIST\n+                                              L_CURLY \"{\"\n+                                              WHITESPACE \"\\n                            \"\n+                                              RETURN_EXPR\n+                                                RETURN_KW \"return\"\n+                                              WHITESPACE \"\\n                        \"\n+                                              R_CURLY \"}\"\n+                                        WHITESPACE \"\\n                    \"\n+                                        R_CURLY \"}\"\n+                                  WHITESPACE \"\\n                    \"\n+                                  MATCH_ARM\n+                                    WILDCARD_PAT\n+                                      UNDERSCORE \"_\"\n+                                    WHITESPACE \" \"\n+                                    FAT_ARROW \"=>\"\n+                                    WHITESPACE \" \"\n+                                    BLOCK_EXPR\n+                                      STMT_LIST\n+                                        L_CURLY \"{\"\n+                                        WHITESPACE \" \"\n+                                        RETURN_EXPR\n+                                          RETURN_KW \"return\"\n+                                        WHITESPACE \" \"\n+                                        R_CURLY \"}\"\n+                                  WHITESPACE \"\\n                \"\n+                                  R_CURLY \"}\"\n+                              SEMICOLON \";\"\n+                            WHITESPACE \"\\n            \"\n+                            R_CURLY \"}\"\n+                        WHITESPACE \" \"\n+                        ELSE_KW \"else\"\n+                        WHITESPACE \" \"\n+                        IF_EXPR\n+                          IF_KW \"if\"\n+                          WHITESPACE \" \"\n+                          CONDITION\n+                            PAREN_EXPR\n+                              L_PAREN \"(\"\n+                              RETURN_EXPR\n+                                RETURN_KW \"return\"\n+                              R_PAREN \")\"\n+                          WHITESPACE \" \"\n+                          BLOCK_EXPR\n+                            STMT_LIST\n+                              L_CURLY \"{\"\n+                              WHITESPACE \"\\n                \"\n+                              EXPR_STMT\n+                                RETURN_EXPR\n+                                  RETURN_KW \"return\"\n+                                SEMICOLON \";\"\n+                              WHITESPACE \"\\n            \"\n+                              R_CURLY \"}\"\n+                      WHITESPACE \"\\n        \"\n+                      R_CURLY \"}\"\n+              WHITESPACE \"\\n        \"\n+              IF_EXPR\n+                IF_KW \"if\"\n+                WHITESPACE \" \"\n+                CONDITION\n+                  PAREN_EXPR\n+                    L_PAREN \"(\"\n+                    RETURN_EXPR\n+                      RETURN_KW \"return\"\n+                    R_PAREN \")\"\n+                WHITESPACE \" \"\n+                BLOCK_EXPR\n+                  STMT_LIST\n+                    L_CURLY \"{\"\n+                    WHITESPACE \" \"\n+                    EXPR_STMT\n+                      BREAK_EXPR\n+                        BREAK_KW \"break\"\n+                      SEMICOLON \";\"\n+                    WHITESPACE \" \"\n+                    R_CURLY \"}\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"notsure\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            MUT_KW \"mut\"\n+            WHITESPACE \" \"\n+            NAME\n+              IDENT \"_x\"\n+          COLON \":\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"isize\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            MUT_KW \"mut\"\n+            WHITESPACE \" \"\n+            NAME\n+              IDENT \"_y\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          BIN_EXPR\n+            PAREN_EXPR\n+              L_PAREN \"(\"\n+              BIN_EXPR\n+                PATH_EXPR\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"_x\"\n+                WHITESPACE \" \"\n+                EQ \"=\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  INT_NUMBER \"0\"\n+              R_PAREN \")\"\n+            WHITESPACE \" \"\n+            EQ2 \"==\"\n+            WHITESPACE \" \"\n+            PAREN_EXPR\n+              L_PAREN \"(\"\n+              BIN_EXPR\n+                PATH_EXPR\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"_x\"\n+                WHITESPACE \" \"\n+                EQ \"=\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  INT_NUMBER \"0\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            MUT_KW \"mut\"\n+            WHITESPACE \" \"\n+            NAME\n+              IDENT \"_z\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          BIN_EXPR\n+            PAREN_EXPR\n+              L_PAREN \"(\"\n+              BIN_EXPR\n+                PATH_EXPR\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"_x\"\n+                WHITESPACE \" \"\n+                EQ \"=\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  INT_NUMBER \"0\"\n+              R_PAREN \")\"\n+            WHITESPACE \" \"\n+            L_ANGLE \"<\"\n+            WHITESPACE \" \"\n+            PAREN_EXPR\n+              L_PAREN \"(\"\n+              BIN_EXPR\n+                PATH_EXPR\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"_x\"\n+                WHITESPACE \" \"\n+                EQ \"=\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  INT_NUMBER \"0\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"_a\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          BIN_EXPR\n+            PAREN_EXPR\n+              L_PAREN \"(\"\n+              BIN_EXPR\n+                PATH_EXPR\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"_x\"\n+                WHITESPACE \" \"\n+                PLUSEQ \"+=\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  INT_NUMBER \"0\"\n+              R_PAREN \")\"\n+            WHITESPACE \" \"\n+            EQ2 \"==\"\n+            WHITESPACE \" \"\n+            PAREN_EXPR\n+              L_PAREN \"(\"\n+              BIN_EXPR\n+                PATH_EXPR\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"_x\"\n+                WHITESPACE \" \"\n+                EQ \"=\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  INT_NUMBER \"0\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"_b\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          BIN_EXPR\n+            CALL_EXPR\n+              PATH_EXPR\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"swap\"\n+              ARG_LIST\n+                L_PAREN \"(\"\n+                REF_EXPR\n+                  AMP \"&\"\n+                  MUT_KW \"mut\"\n+                  WHITESPACE \" \"\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"_y\"\n+                COMMA \",\"\n+                WHITESPACE \" \"\n+                REF_EXPR\n+                  AMP \"&\"\n+                  MUT_KW \"mut\"\n+                  WHITESPACE \" \"\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"_z\"\n+                R_PAREN \")\"\n+            WHITESPACE \" \"\n+            EQ2 \"==\"\n+            WHITESPACE \" \"\n+            CALL_EXPR\n+              PATH_EXPR\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"swap\"\n+              ARG_LIST\n+                L_PAREN \"(\"\n+                REF_EXPR\n+                  AMP \"&\"\n+                  MUT_KW \"mut\"\n+                  WHITESPACE \" \"\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"_y\"\n+                COMMA \",\"\n+                WHITESPACE \" \"\n+                REF_EXPR\n+                  AMP \"&\"\n+                  MUT_KW \"mut\"\n+                  WHITESPACE \" \"\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"_z\"\n+                R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"canttouchthis\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    RET_TYPE\n+      THIN_ARROW \"->\"\n+      WHITESPACE \" \"\n+      PATH_TYPE\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"usize\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        FN\n+          FN_KW \"fn\"\n+          WHITESPACE \" \"\n+          NAME\n+            IDENT \"p\"\n+          PARAM_LIST\n+            L_PAREN \"(\"\n+            R_PAREN \")\"\n+          WHITESPACE \" \"\n+          RET_TYPE\n+            THIN_ARROW \"->\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"bool\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                TRUE_KW \"true\"\n+              WHITESPACE \" \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"_a\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          PAREN_EXPR\n+            L_PAREN \"(\"\n+            BIN_EXPR\n+              MACRO_CALL\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"assert\"\n+                BANG \"!\"\n+                TOKEN_TREE\n+                  L_PAREN \"(\"\n+                  TOKEN_TREE\n+                    L_PAREN \"(\"\n+                    TRUE_KW \"true\"\n+                    R_PAREN \")\"\n+                  R_PAREN \")\"\n+              WHITESPACE \" \"\n+              EQ2 \"==\"\n+              WHITESPACE \" \"\n+              PAREN_EXPR\n+                L_PAREN \"(\"\n+                MACRO_CALL\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"assert\"\n+                  BANG \"!\"\n+                  TOKEN_TREE\n+                    L_PAREN \"(\"\n+                    IDENT \"p\"\n+                    TOKEN_TREE\n+                      L_PAREN \"(\"\n+                      R_PAREN \")\"\n+                    R_PAREN \")\"\n+                R_PAREN \")\"\n+            R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"_c\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          PAREN_EXPR\n+            L_PAREN \"(\"\n+            BIN_EXPR\n+              MACRO_CALL\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"assert\"\n+                BANG \"!\"\n+                TOKEN_TREE\n+                  L_PAREN \"(\"\n+                  TOKEN_TREE\n+                    L_PAREN \"(\"\n+                    IDENT \"p\"\n+                    TOKEN_TREE\n+                      L_PAREN \"(\"\n+                      R_PAREN \")\"\n+                    R_PAREN \")\"\n+                  R_PAREN \")\"\n+              WHITESPACE \" \"\n+              EQ2 \"==\"\n+              WHITESPACE \" \"\n+              TUPLE_EXPR\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+            R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"_b\"\n+          COLON \":\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"bool\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          PAREN_EXPR\n+            L_PAREN \"(\"\n+            BIN_EXPR\n+              MACRO_CALL\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"println\"\n+                BANG \"!\"\n+                TOKEN_TREE\n+                  L_PAREN \"(\"\n+                  STRING \"\\\"{}\\\"\"\n+                  COMMA \",\"\n+                  WHITESPACE \" \"\n+                  INT_NUMBER \"0\"\n+                  R_PAREN \")\"\n+              WHITESPACE \" \"\n+              EQ2 \"==\"\n+              WHITESPACE \" \"\n+              PAREN_EXPR\n+                L_PAREN \"(\"\n+                RETURN_EXPR\n+                  RETURN_KW \"return\"\n+                  WHITESPACE \" \"\n+                  LITERAL\n+                    INT_NUMBER \"0\"\n+                R_PAREN \")\"\n+            R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"angrydome\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          LOOP_EXPR\n+            LOOP_KW \"loop\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \" \"\n+                IF_EXPR\n+                  IF_KW \"if\"\n+                  WHITESPACE \" \"\n+                  CONDITION\n+                    BREAK_EXPR\n+                      BREAK_KW \"break\"\n+                  WHITESPACE \" \"\n+                  BLOCK_EXPR\n+                    STMT_LIST\n+                      L_CURLY \"{\"\n+                      WHITESPACE \" \"\n+                      R_CURLY \"}\"\n+                WHITESPACE \" \"\n+                R_CURLY \"}\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            MUT_KW \"mut\"\n+            WHITESPACE \" \"\n+            NAME\n+              IDENT \"i\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          LITERAL\n+            INT_NUMBER \"0\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LOOP_EXPR\n+          LOOP_KW \"loop\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \" \"\n+              EXPR_STMT\n+                BIN_EXPR\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"i\"\n+                  WHITESPACE \" \"\n+                  PLUSEQ \"+=\"\n+                  WHITESPACE \" \"\n+                  LITERAL\n+                    INT_NUMBER \"1\"\n+                SEMICOLON \";\"\n+              WHITESPACE \" \"\n+              EXPR_STMT\n+                IF_EXPR\n+                  IF_KW \"if\"\n+                  WHITESPACE \" \"\n+                  CONDITION\n+                    BIN_EXPR\n+                      PATH_EXPR\n+                        PATH\n+                          PATH_SEGMENT\n+                            NAME_REF\n+                              IDENT \"i\"\n+                      WHITESPACE \" \"\n+                      EQ2 \"==\"\n+                      WHITESPACE \" \"\n+                      LITERAL\n+                        INT_NUMBER \"1\"\n+                  WHITESPACE \" \"\n+                  BLOCK_EXPR\n+                    STMT_LIST\n+                      L_CURLY \"{\"\n+                      WHITESPACE \" \"\n+                      MATCH_EXPR\n+                        MATCH_KW \"match\"\n+                        WHITESPACE \" \"\n+                        PAREN_EXPR\n+                          L_PAREN \"(\"\n+                          CONTINUE_EXPR\n+                            CONTINUE_KW \"continue\"\n+                          R_PAREN \")\"\n+                        WHITESPACE \" \"\n+                        MATCH_ARM_LIST\n+                          L_CURLY \"{\"\n+                          WHITESPACE \" \"\n+                          MATCH_ARM\n+                            LITERAL_PAT\n+                              LITERAL\n+                                INT_NUMBER \"1\"\n+                            WHITESPACE \" \"\n+                            FAT_ARROW \"=>\"\n+                            WHITESPACE \" \"\n+                            BLOCK_EXPR\n+                              STMT_LIST\n+                                L_CURLY \"{\"\n+                                WHITESPACE \" \"\n+                                R_CURLY \"}\"\n+                            COMMA \",\"\n+                          WHITESPACE \" \"\n+                          MATCH_ARM\n+                            WILDCARD_PAT\n+                              UNDERSCORE \"_\"\n+                            WHITESPACE \" \"\n+                            FAT_ARROW \"=>\"\n+                            WHITESPACE \" \"\n+                            MACRO_CALL\n+                              PATH\n+                                PATH_SEGMENT\n+                                  NAME_REF\n+                                    IDENT \"panic\"\n+                              BANG \"!\"\n+                              TOKEN_TREE\n+                                L_PAREN \"(\"\n+                                STRING \"\\\"wat\\\"\"\n+                                R_PAREN \")\"\n+                          WHITESPACE \" \"\n+                          R_CURLY \"}\"\n+                      WHITESPACE \" \"\n+                      R_CURLY \"}\"\n+              WHITESPACE \"\\n      \"\n+              EXPR_STMT\n+                BREAK_EXPR\n+                  BREAK_KW \"break\"\n+                SEMICOLON \";\"\n+              WHITESPACE \" \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"evil_lincoln\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \" \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"_evil\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          MACRO_CALL\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"println\"\n+            BANG \"!\"\n+            TOKEN_TREE\n+              L_PAREN \"(\"\n+              STRING \"\\\"lincoln\\\"\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \" \"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"dots\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          MACRO_CALL\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"assert_eq\"\n+            BANG \"!\"\n+            TOKEN_TREE\n+              L_PAREN \"(\"\n+              IDENT \"String\"\n+              COLON \":\"\n+              COLON \":\"\n+              IDENT \"from\"\n+              TOKEN_TREE\n+                L_PAREN \"(\"\n+                STRING \"\\\"..................................................\\\"\"\n+                R_PAREN \")\"\n+              COMMA \",\"\n+              WHITESPACE \"\\n               \"\n+              IDENT \"format\"\n+              BANG \"!\"\n+              TOKEN_TREE\n+                L_PAREN \"(\"\n+                STRING \"\\\"{:?}\\\"\"\n+                COMMA \",\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \"\\n                               \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                WHITESPACE \" \"\n+                DOT \".\"\n+                DOT \".\"\n+                R_PAREN \")\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"u8\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      PARAM\n+        IDENT_PAT\n+          NAME\n+            IDENT \"u8\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"u8\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        IF_EXPR\n+          IF_KW \"if\"\n+          WHITESPACE \" \"\n+          CONDITION\n+            BIN_EXPR\n+              PATH_EXPR\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"u8\"\n+              WHITESPACE \" \"\n+              NEQ \"!=\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"0u8\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              EXPR_STMT\n+                MACRO_CALL\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"assert_eq\"\n+                  BANG \"!\"\n+                  TOKEN_TREE\n+                    L_PAREN \"(\"\n+                    INT_NUMBER \"8u8\"\n+                    COMMA \",\"\n+                    WHITESPACE \" \"\n+                    TOKEN_TREE\n+                      L_CURLY \"{\"\n+                      WHITESPACE \"\\n            \"\n+                      IDENT \"macro_rules\"\n+                      BANG \"!\"\n+                      WHITESPACE \" \"\n+                      IDENT \"u8\"\n+                      WHITESPACE \" \"\n+                      TOKEN_TREE\n+                        L_CURLY \"{\"\n+                        WHITESPACE \"\\n                \"\n+                        TOKEN_TREE\n+                          L_PAREN \"(\"\n+                          IDENT \"u8\"\n+                          R_PAREN \")\"\n+                        WHITESPACE \" \"\n+                        EQ \"=\"\n+                        R_ANGLE \">\"\n+                        WHITESPACE \" \"\n+                        TOKEN_TREE\n+                          L_CURLY \"{\"\n+                          WHITESPACE \"\\n                    \"\n+                          MOD_KW \"mod\"\n+                          WHITESPACE \" \"\n+                          IDENT \"u8\"\n+                          WHITESPACE \" \"\n+                          TOKEN_TREE\n+                            L_CURLY \"{\"\n+                            WHITESPACE \"\\n                        \"\n+                            PUB_KW \"pub\"\n+                            WHITESPACE \" \"\n+                            FN_KW \"fn\"\n+                            WHITESPACE \" \"\n+                            IDENT \"u8\"\n+                            L_ANGLE \"<\"\n+                            LIFETIME_IDENT \"'u8\"\n+                            COLON \":\"\n+                            WHITESPACE \" \"\n+                            LIFETIME_IDENT \"'u8\"\n+                            WHITESPACE \" \"\n+                            PLUS \"+\"\n+                            WHITESPACE \" \"\n+                            LIFETIME_IDENT \"'u8\"\n+                            R_ANGLE \">\"\n+                            TOKEN_TREE\n+                              L_PAREN \"(\"\n+                              IDENT \"u8\"\n+                              COLON \":\"\n+                              WHITESPACE \" \"\n+                              AMP \"&\"\n+                              LIFETIME_IDENT \"'u8\"\n+                              WHITESPACE \" \"\n+                              IDENT \"u8\"\n+                              R_PAREN \")\"\n+                            WHITESPACE \" \"\n+                            MINUS \"-\"\n+                            R_ANGLE \">\"\n+                            WHITESPACE \" \"\n+                            AMP \"&\"\n+                            LIFETIME_IDENT \"'u8\"\n+                            WHITESPACE \" \"\n+                            IDENT \"u8\"\n+                            WHITESPACE \" \"\n+                            TOKEN_TREE\n+                              L_CURLY \"{\"\n+                              WHITESPACE \"\\n                            \"\n+                              STRING \"\\\"u8\\\"\"\n+                              SEMICOLON \";\"\n+                              WHITESPACE \"\\n                            \"\n+                              IDENT \"u8\"\n+                              WHITESPACE \"\\n                        \"\n+                              R_CURLY \"}\"\n+                            WHITESPACE \"\\n                    \"\n+                            R_CURLY \"}\"\n+                          WHITESPACE \"\\n                \"\n+                          R_CURLY \"}\"\n+                        SEMICOLON \";\"\n+                        WHITESPACE \"\\n            \"\n+                        R_CURLY \"}\"\n+                      WHITESPACE \"\\n\\n            \"\n+                      IDENT \"u8\"\n+                      BANG \"!\"\n+                      TOKEN_TREE\n+                        L_PAREN \"(\"\n+                        IDENT \"u8\"\n+                        R_PAREN \")\"\n+                      SEMICOLON \";\"\n+                      WHITESPACE \"\\n            \"\n+                      LET_KW \"let\"\n+                      WHITESPACE \" \"\n+                      AMP \"&\"\n+                      IDENT \"u8\"\n+                      COLON \":\"\n+                      WHITESPACE \" \"\n+                      AMP \"&\"\n+                      IDENT \"u8\"\n+                      WHITESPACE \" \"\n+                      EQ \"=\"\n+                      WHITESPACE \" \"\n+                      IDENT \"u8\"\n+                      COLON \":\"\n+                      COLON \":\"\n+                      IDENT \"u8\"\n+                      TOKEN_TREE\n+                        L_PAREN \"(\"\n+                        AMP \"&\"\n+                        INT_NUMBER \"8u8\"\n+                        R_PAREN \")\"\n+                      SEMICOLON \";\"\n+                      WHITESPACE \"\\n            \"\n+                      CRATE_KW \"crate\"\n+                      COLON \":\"\n+                      COLON \":\"\n+                      IDENT \"u8\"\n+                      TOKEN_TREE\n+                        L_PAREN \"(\"\n+                        INT_NUMBER \"0u8\"\n+                        R_PAREN \")\"\n+                      SEMICOLON \";\"\n+                      WHITESPACE \"\\n            \"\n+                      IDENT \"u8\"\n+                      WHITESPACE \"\\n        \"\n+                      R_CURLY \"}\"\n+                    R_PAREN \")\"\n+                SEMICOLON \";\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"fishy\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          MACRO_CALL\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"assert_eq\"\n+            BANG \"!\"\n+            TOKEN_TREE\n+              L_PAREN \"(\"\n+              IDENT \"String\"\n+              COLON \":\"\n+              COLON \":\"\n+              IDENT \"from\"\n+              TOKEN_TREE\n+                L_PAREN \"(\"\n+                STRING \"\\\"><>\\\"\"\n+                R_PAREN \")\"\n+              COMMA \",\"\n+              WHITESPACE \"\\n               \"\n+              IDENT \"String\"\n+              COLON \":\"\n+              COLON \":\"\n+              L_ANGLE \"<\"\n+              R_ANGLE \">\"\n+              COLON \":\"\n+              COLON \":\"\n+              IDENT \"from\"\n+              COLON \":\"\n+              COLON \":\"\n+              L_ANGLE \"<\"\n+              R_ANGLE \">\"\n+              TOKEN_TREE\n+                L_PAREN \"(\"\n+                STRING \"\\\"><>\\\"\"\n+                R_PAREN \")\"\n+              DOT \".\"\n+              IDENT \"chars\"\n+              COLON \":\"\n+              COLON \":\"\n+              L_ANGLE \"<\"\n+              R_ANGLE \">\"\n+              TOKEN_TREE\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+              DOT \".\"\n+              IDENT \"rev\"\n+              COLON \":\"\n+              COLON \":\"\n+              L_ANGLE \"<\"\n+              R_ANGLE \">\"\n+              TOKEN_TREE\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+              DOT \".\"\n+              IDENT \"collect\"\n+              COLON \":\"\n+              COLON \":\"\n+              L_ANGLE \"<\"\n+              IDENT \"String\"\n+              R_ANGLE \">\"\n+              TOKEN_TREE\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"union\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        UNION\n+          UNION_KW \"union\"\n+          WHITESPACE \" \"\n+          NAME\n+            IDENT \"union\"\n+          GENERIC_PARAM_LIST\n+            L_ANGLE \"<\"\n+            LIFETIME_PARAM\n+              LIFETIME\n+                LIFETIME_IDENT \"'union\"\n+            R_ANGLE \">\"\n+          WHITESPACE \" \"\n+          RECORD_FIELD_LIST\n+            L_CURLY \"{\"\n+            WHITESPACE \" \"\n+            RECORD_FIELD\n+              NAME\n+                IDENT \"union\"\n+              COLON \":\"\n+              WHITESPACE \" \"\n+              REF_TYPE\n+                AMP \"&\"\n+                LIFETIME\n+                  LIFETIME_IDENT \"'union\"\n+                WHITESPACE \" \"\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"union\"\n+                      GENERIC_ARG_LIST\n+                        L_ANGLE \"<\"\n+                        LIFETIME_ARG\n+                          LIFETIME\n+                            LIFETIME_IDENT \"'union\"\n+                        R_ANGLE \">\"\n+            COMMA \",\"\n+            WHITESPACE \" \"\n+            R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"special_characters\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"val\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          PREFIX_EXPR\n+            BANG \"!\"\n+            PAREN_EXPR\n+              L_PAREN \"(\"\n+              BIN_EXPR\n+                CALL_EXPR\n+                  PAREN_EXPR\n+                    L_PAREN \"(\"\n+                    CLOSURE_EXPR\n+                      PARAM_LIST\n+                        PIPE \"|\"\n+                        PARAM\n+                          TUPLE_PAT\n+                            L_PAREN \"(\"\n+                            REST_PAT\n+                              DOT2 \"..\"\n+                            R_PAREN \")\"\n+                          COLON \":\"\n+                          TUPLE_TYPE\n+                            L_PAREN \"(\"\n+                            INFER_TYPE\n+                              UNDERSCORE \"_\"\n+                            COMMA \",\"\n+                            INFER_TYPE\n+                              UNDERSCORE \"_\"\n+                            R_PAREN \")\"\n+                        COMMA \",\"\n+                        PARAM\n+                          IDENT_PAT\n+                            NAME\n+                              IDENT \"__\"\n+                            AT \"@\"\n+                            WILDCARD_PAT\n+                              UNDERSCORE \"_\"\n+                        PIPE \"|\"\n+                      PATH_EXPR\n+                        PATH\n+                          PATH_SEGMENT\n+                            NAME_REF\n+                              IDENT \"__\"\n+                    R_PAREN \")\"\n+                  ARG_LIST\n+                    L_PAREN \"(\"\n+                    TUPLE_EXPR\n+                      L_PAREN \"(\"\n+                      REF_EXPR\n+                        AMP \"&\"\n+                        PREFIX_EXPR\n+                          STAR \"*\"\n+                          LITERAL\n+                            STRING \"\\\"\\\\\\\\\\\"\"\n+                      COMMA \",\"\n+                      LITERAL\n+                        CHAR \"'\ud83e\udd14'\"\n+                      R_PAREN \")\"\n+                    COMMENT \"/**/\"\n+                    COMMA \",\"\n+                    BLOCK_EXPR\n+                      STMT_LIST\n+                        L_CURLY \"{\"\n+                        R_CURLY \"}\"\n+                    R_PAREN \")\"\n+                EQ2 \"==\"\n+                BLOCK_EXPR\n+                  STMT_LIST\n+                    L_CURLY \"{\"\n+                    EXPR_STMT\n+                      REF_EXPR\n+                        AMP \"&\"\n+                        INDEX_EXPR\n+                          ARRAY_EXPR\n+                            L_BRACK \"[\"\n+                            RANGE_EXPR\n+                              DOT2EQ \"..=\"\n+                              RANGE_EXPR\n+                                DOT2 \"..\"\n+                            R_BRACK \"]\"\n+                          L_BRACK \"[\"\n+                          RANGE_EXPR\n+                            DOT2 \"..\"\n+                          R_BRACK \"]\"\n+                      SEMICOLON \";\"\n+                    R_CURLY \"}\"\n+              R_PAREN \")\"\n+          COMMENT \"//\"\n+          WHITESPACE \"\\n    \"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          MACRO_CALL\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"assert\"\n+            BANG \"!\"\n+            TOKEN_TREE\n+              L_PAREN \"(\"\n+              BANG \"!\"\n+              IDENT \"val\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"punch_card\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    RET_TYPE\n+      THIN_ARROW \"->\"\n+      WHITESPACE \" \"\n+      IMPL_TRAIT_TYPE\n+        IMPL_KW \"impl\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"std\"\n+                  COLON2 \"::\"\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"fmt\"\n+                COLON2 \"::\"\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Debug\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        RANGE_EXPR\n+          DOT2EQ \"..=\"\n+          RANGE_EXPR\n+            DOT2EQ \"..=\"\n+            RANGE_EXPR\n+              DOT2 \"..\"\n+              WHITESPACE \" \"\n+              RANGE_EXPR\n+                DOT2 \"..\"\n+                WHITESPACE \"    \"\n+                RANGE_EXPR\n+                  DOT2 \"..\"\n+                  WHITESPACE \" \"\n+                  RANGE_EXPR\n+                    DOT2 \"..\"\n+                    WHITESPACE \" \"\n+                    RANGE_EXPR\n+                      DOT2 \"..\"\n+                      WHITESPACE \" \"\n+                      RANGE_EXPR\n+                        DOT2 \"..\"\n+                        WHITESPACE \"    \"\n+                        RANGE_EXPR\n+                          DOT2 \"..\"\n+                          WHITESPACE \" \"\n+                          RANGE_EXPR\n+                            DOT2 \"..\"\n+                            WHITESPACE \" \"\n+                            RANGE_EXPR\n+                              DOT2 \"..\"\n+                              WHITESPACE \" \"\n+                              RANGE_EXPR\n+                                DOT2 \"..\"\n+                                WHITESPACE \"    \"\n+                                RANGE_EXPR\n+                                  DOT2 \"..\"\n+                                  WHITESPACE \" \"\n+                                  RANGE_EXPR\n+                                    DOT2EQ \"..=\"\n+                                    RANGE_EXPR\n+                                      DOT2 \"..\"\n+                                      WHITESPACE \" \"\n+                                      RANGE_EXPR\n+                                        DOT2 \"..\"\n+                                        WHITESPACE \"\\n    \"\n+                                        RANGE_EXPR\n+                                          DOT2EQ \"..=\"\n+                                          RANGE_EXPR\n+                                            DOT2 \"..\"\n+                                            WHITESPACE \" \"\n+                                            RANGE_EXPR\n+                                              DOT2EQ \"..=\"\n+                                              RANGE_EXPR\n+                                                DOT2 \"..\"\n+                                                WHITESPACE \"    \"\n+                                                RANGE_EXPR\n+                                                  DOT2 \"..\"\n+                                                  WHITESPACE \" \"\n+                                                  RANGE_EXPR\n+                                                    DOT2 \"..\"\n+                                                    WHITESPACE \" \"\n+                                                    RANGE_EXPR\n+                                                      DOT2 \"..\"\n+                                                      WHITESPACE \" \"\n+                                                      RANGE_EXPR\n+                                                        DOT2 \"..\"\n+                                                        WHITESPACE \"    \"\n+                                                        RANGE_EXPR\n+                                                          DOT2 \"..\"\n+                                                          WHITESPACE \" \"\n+                                                          RANGE_EXPR\n+                                                            DOT2 \"..\"\n+                                                            WHITESPACE \" \"\n+                                                            RANGE_EXPR\n+                                                              DOT2 \"..\"\n+                                                              WHITESPACE \" \"\n+                                                              RANGE_EXPR\n+                                                                DOT2 \"..\"\n+                                                                WHITESPACE \"    \"\n+                                                                RANGE_EXPR\n+                                                                  DOT2EQ \"..=\"\n+                                                                  RANGE_EXPR\n+                                                                    DOT2EQ \"..=\"\n+                                                                    RANGE_EXPR\n+                                                                      DOT2EQ \"..=\"\n+                                                                      RANGE_EXPR\n+                                                                        DOT2 \"..\"\n+                                                                        WHITESPACE \"\\n    \"\n+                                                                        RANGE_EXPR\n+                                                                          DOT2EQ \"..=\"\n+                                                                          RANGE_EXPR\n+                                                                            DOT2 \"..\"\n+                                                                            WHITESPACE \" \"\n+                                                                            RANGE_EXPR\n+                                                                              DOT2EQ \"..=\"\n+                                                                              RANGE_EXPR\n+                                                                                DOT2 \"..\"\n+                                                                                WHITESPACE \"    \"\n+                                                                                RANGE_EXPR\n+                                                                                  DOT2EQ \"..=\"\n+                                                                                  RANGE_EXPR\n+                                                                                    DOT2 \"..\"\n+                                                                                    WHITESPACE \" \"\n+                                                                                    RANGE_EXPR\n+                                                                                      DOT2EQ \"..=\"\n+                                                                                      RANGE_EXPR\n+                                                                                        DOT2 \"..\"\n+                                                                                        WHITESPACE \"    \"\n+                                                                                        RANGE_EXPR\n+                                                                                          DOT2 \"..\"\n+                                                                                          WHITESPACE \" \"\n+                                                                                          RANGE_EXPR\n+                                                                                            DOT2EQ \"..=\"\n+                                                                                            RANGE_EXPR\n+                                                                                              DOT2EQ \"..=\"\n+                                                                                              RANGE_EXPR\n+                                                                                                DOT2 \"..\"\n+                                                                                                WHITESPACE \"    \"\n+                                                                                                RANGE_EXPR\n+                                                                                                  DOT2 \"..\"\n+                                                                                                  WHITESPACE \" \"\n+                                                                                                  RANGE_EXPR\n+                                                                                                    DOT2EQ \"..=\"\n+                                                                                                    RANGE_EXPR\n+                                                                                                      DOT2 \"..\"\n+                                                                                                      WHITESPACE \" \"\n+                                                                                                      RANGE_EXPR\n+                                                                                                        DOT2 \"..\"\n+                                                                                                        WHITESPACE \"\\n    \"\n+                                                                                                        RANGE_EXPR\n+                                                                                                          DOT2EQ \"..=\"\n+                                                                                                          RANGE_EXPR\n+                                                                                                            DOT2EQ \"..=\"\n+                                                                                                            RANGE_EXPR\n+                                                                                                              DOT2 \"..\"\n+                                                                                                              WHITESPACE \" \"\n+                                                                                                              RANGE_EXPR\n+                                                                                                                DOT2 \"..\"\n+                                                                                                                WHITESPACE \"    \"\n+                                                                                                                RANGE_EXPR\n+                                                                                                                  DOT2EQ \"..=\"\n+                                                                                                                  RANGE_EXPR\n+                                                                                                                    DOT2 \"..\"\n+                                                                                                                    WHITESPACE \" \"\n+                                                                                                                    RANGE_EXPR\n+                                                                                                                      DOT2EQ \"..=\"\n+                                                                                                                      RANGE_EXPR\n+                                                                                                                        DOT2 \"..\"\n+                                                                                                                        WHITESPACE \"    \"\n+                                                                                                                        RANGE_EXPR\n+                                                                                                                          DOT2EQ \"..=\"\n+                                                                                                                          RANGE_EXPR\n+                                                                                                                            DOT2 \"..\"\n+                                                                                                                            WHITESPACE \" \"\n+                                                                                                                            RANGE_EXPR\n+                                                                                                                              DOT2 \"..\"\n+                                                                                                                              WHITESPACE \" \"\n+                                                                                                                              RANGE_EXPR\n+                                                                                                                                DOT2 \"..\"\n+                                                                                                                                WHITESPACE \"    \"\n+                                                                                                                                RANGE_EXPR\n+                                                                                                                                  DOT2 \"..\"\n+                                                                                                                                  WHITESPACE \" \"\n+                                                                                                                                  RANGE_EXPR\n+                                                                                                                                    DOT2EQ \"..=\"\n+                                                                                                                                    RANGE_EXPR\n+                                                                                                                                      DOT2 \"..\"\n+                                                                                                                                      WHITESPACE \" \"\n+                                                                                                                                      RANGE_EXPR\n+                                                                                                                                        DOT2 \"..\"\n+                                                                                                                                        WHITESPACE \"\\n    \"\n+                                                                                                                                        RANGE_EXPR\n+                                                                                                                                          DOT2EQ \"..=\"\n+                                                                                                                                          RANGE_EXPR\n+                                                                                                                                            DOT2 \"..\"\n+                                                                                                                                            WHITESPACE \" \"\n+                                                                                                                                            RANGE_EXPR\n+                                                                                                                                              DOT2EQ \"..=\"\n+                                                                                                                                              RANGE_EXPR\n+                                                                                                                                                DOT2 \"..\"\n+                                                                                                                                                WHITESPACE \"    \"\n+                                                                                                                                                RANGE_EXPR\n+                                                                                                                                                  DOT2EQ \"..=\"\n+                                                                                                                                                  RANGE_EXPR\n+                                                                                                                                                    DOT2 \"..\"\n+                                                                                                                                                    WHITESPACE \" \"\n+                                                                                                                                                    RANGE_EXPR\n+                                                                                                                                                      DOT2EQ \"..=\"\n+                                                                                                                                                      RANGE_EXPR\n+                                                                                                                                                        DOT2 \"..\"\n+                                                                                                                                                        WHITESPACE \"    \"\n+                                                                                                                                                        RANGE_EXPR\n+                                                                                                                                                          DOT2 \"..\"\n+                                                                                                                                                          WHITESPACE \" \"\n+                                                                                                                                                          RANGE_EXPR\n+                                                                                                                                                            DOT2EQ \"..=\"\n+                                                                                                                                                            RANGE_EXPR\n+                                                                                                                                                              DOT2 \"..\"\n+                                                                                                                                                              WHITESPACE \" \"\n+                                                                                                                                                              RANGE_EXPR\n+                                                                                                                                                                DOT2 \"..\"\n+                                                                                                                                                                WHITESPACE \"    \"\n+                                                                                                                                                                RANGE_EXPR\n+                                                                                                                                                                  DOT2 \"..\"\n+                                                                                                                                                                  WHITESPACE \" \"\n+                                                                                                                                                                  RANGE_EXPR\n+                                                                                                                                                                    DOT2EQ \"..=\"\n+                                                                                                                                                                    RANGE_EXPR\n+                                                                                                                                                                      DOT2 \"..\"\n+                                                                                                                                                                      WHITESPACE \" \"\n+                                                                                                                                                                      RANGE_EXPR\n+                                                                                                                                                                        DOT2 \"..\"\n+                                                                                                                                                                        WHITESPACE \"\\n    \"\n+                                                                                                                                                                        RANGE_EXPR\n+                                                                                                                                                                          DOT2EQ \"..=\"\n+                                                                                                                                                                          RANGE_EXPR\n+                                                                                                                                                                            DOT2 \"..\"\n+                                                                                                                                                                            WHITESPACE \" \"\n+                                                                                                                                                                            RANGE_EXPR\n+                                                                                                                                                                              DOT2EQ \"..=\"\n+                                                                                                                                                                              RANGE_EXPR\n+                                                                                                                                                                                DOT2 \"..\"\n+                                                                                                                                                                                WHITESPACE \"    \"\n+                                                                                                                                                                                RANGE_EXPR\n+                                                                                                                                                                                  DOT2EQ \"..=\"\n+                                                                                                                                                                                  RANGE_EXPR\n+                                                                                                                                                                                    DOT2 \"..\"\n+                                                                                                                                                                                    WHITESPACE \" \"\n+                                                                                                                                                                                    RANGE_EXPR\n+                                                                                                                                                                                      DOT2EQ \"..=\"\n+                                                                                                                                                                                      RANGE_EXPR\n+                                                                                                                                                                                        DOT2 \"..\"\n+                                                                                                                                                                                        WHITESPACE \"    \"\n+                                                                                                                                                                                        RANGE_EXPR\n+                                                                                                                                                                                          DOT2 \"..\"\n+                                                                                                                                                                                          WHITESPACE \" \"\n+                                                                                                                                                                                          RANGE_EXPR\n+                                                                                                                                                                                            DOT2 \"..\"\n+                                                                                                                                                                                            WHITESPACE \" \"\n+                                                                                                                                                                                            RANGE_EXPR\n+                                                                                                                                                                                              DOT2EQ \"..=\"\n+                                                                                                                                                                                              RANGE_EXPR\n+                                                                                                                                                                                                DOT2 \"..\"\n+                                                                                                                                                                                                WHITESPACE \"    \"\n+                                                                                                                                                                                                RANGE_EXPR\n+                                                                                                                                                                                                  DOT2 \"..\"\n+                                                                                                                                                                                                  WHITESPACE \" \"\n+                                                                                                                                                                                                  RANGE_EXPR\n+                                                                                                                                                                                                    DOT2EQ \"..=\"\n+                                                                                                                                                                                                    RANGE_EXPR\n+                                                                                                                                                                                                      DOT2 \"..\"\n+                                                                                                                                                                                                      WHITESPACE \" \"\n+                                                                                                                                                                                                      RANGE_EXPR\n+                                                                                                                                                                                                        DOT2 \"..\"\n+                                                                                                                                                                                                        WHITESPACE \"\\n    \"\n+                                                                                                                                                                                                        RANGE_EXPR\n+                                                                                                                                                                                                          DOT2EQ \"..=\"\n+                                                                                                                                                                                                          RANGE_EXPR\n+                                                                                                                                                                                                            DOT2 \"..\"\n+                                                                                                                                                                                                            WHITESPACE \" \"\n+                                                                                                                                                                                                            RANGE_EXPR\n+                                                                                                                                                                                                              DOT2EQ \"..=\"\n+                                                                                                                                                                                                              RANGE_EXPR\n+                                                                                                                                                                                                                DOT2 \"..\"\n+                                                                                                                                                                                                                WHITESPACE \"    \"\n+                                                                                                                                                                                                                RANGE_EXPR\n+                                                                                                                                                                                                                  DOT2 \"..\"\n+                                                                                                                                                                                                                  WHITESPACE \" \"\n+                                                                                                                                                                                                                  RANGE_EXPR\n+                                                                                                                                                                                                                    DOT2EQ \"..=\"\n+                                                                                                                                                                                                                    RANGE_EXPR\n+                                                                                                                                                                                                                      DOT2EQ \"..=\"\n+                                                                                                                                                                                                                      RANGE_EXPR\n+                                                                                                                                                                                                                        DOT2 \"..\"\n+                                                                                                                                                                                                                        WHITESPACE \"    \"\n+                                                                                                                                                                                                                        RANGE_EXPR\n+                                                                                                                                                                                                                          DOT2EQ \"..=\"\n+                                                                                                                                                                                                                          RANGE_EXPR\n+                                                                                                                                                                                                                            DOT2EQ \"..=\"\n+                                                                                                                                                                                                                            RANGE_EXPR\n+                                                                                                                                                                                                                              DOT2 \"..\"\n+                                                                                                                                                                                                                              WHITESPACE \" \"\n+                                                                                                                                                                                                                              RANGE_EXPR\n+                                                                                                                                                                                                                                DOT2 \"..\"\n+                                                                                                                                                                                                                                WHITESPACE \"    \"\n+                                                                                                                                                                                                                                RANGE_EXPR\n+                                                                                                                                                                                                                                  DOT2 \"..\"\n+                                                                                                                                                                                                                                  WHITESPACE \" \"\n+                                                                                                                                                                                                                                  RANGE_EXPR\n+                                                                                                                                                                                                                                    DOT2EQ \"..=\"\n+                                                                                                                                                                                                                                    RANGE_EXPR\n+                                                                                                                                                                                                                                      DOT2 \"..\"\n+                                                                                                                                                                                                                                      WHITESPACE \" \"\n+                                                                                                                                                                                                                                      RANGE_EXPR\n+                                                                                                                                                                                                                                        DOT2 \"..\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"ktulhu\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        SEMICOLON \";\"\n+        SEMICOLON \";\"\n+        SEMICOLON \";\"\n+        EXPR_STMT\n+          TUPLE_EXPR\n+            L_PAREN \"(\"\n+            R_PAREN \")\"\n+          SEMICOLON \";\"\n+        SEMICOLON \";\"\n+        SEMICOLON \";\"\n+        SEMICOLON \";\"\n+        SEMICOLON \";\"\n+        SEMICOLON \";\"\n+        SEMICOLON \";\"\n+        SEMICOLON \";\"\n+        SEMICOLON \";\"\n+        TUPLE_EXPR\n+          L_PAREN \"(\"\n+          R_PAREN \")\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    VISIBILITY\n+      PUB_KW \"pub\"\n+    WHITESPACE \" \"\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"strange\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"funny\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"what\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"zombiejesus\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"notsure\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"canttouchthis\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"angrydome\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"evil_lincoln\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"dots\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"u8\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              LITERAL\n+                INT_NUMBER \"8u8\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"fishy\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"union\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"special_characters\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"punch_card\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"ktulhu\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "2aa7fffd1c5ab0c1f9120d86bed08c04a3a2c44a", "filename": "crates/parser/test_data/parser/ok/0036_fully_qualified.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0036_fully_qualified.rast"}, {"sha": "6da27933ece5682e07cc92e6747982f3f4a08c3a", "filename": "crates/parser/test_data/parser/ok/0036_fully_qualified.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0036_fully_qualified.rs"}, {"sha": "6137b38aba32c9b2b49078e392886224ef777946", "filename": "crates/parser/test_data/parser/ok/0036_fully_qualified.txt", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,93 @@\n+SOURCE_FILE\n+  COMMENT \"// https://github.com/rust-analyzer/rust-analyzer/issues/311\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    VISIBILITY\n+      PUB_KW \"pub\"\n+    WHITESPACE \" \"\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"S\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Iterator\"\n+      R_ANGLE \">\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    RET_TYPE\n+      THIN_ARROW \"->\"\n+      WHITESPACE \" \"\n+      PATH_TYPE\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"String\"\n+    WHITESPACE \"\\n\"\n+    WHERE_CLAUSE\n+      WHERE_KW \"where\"\n+      WHITESPACE \"\\n    \"\n+      WHERE_PRED\n+        PATH_TYPE\n+          PATH\n+            PATH\n+              PATH_SEGMENT\n+                L_ANGLE \"<\"\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"S\"\n+                WHITESPACE \" \"\n+                AS_KW \"as\"\n+                WHITESPACE \" \"\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Iterator\"\n+                R_ANGLE \">\"\n+            COLON2 \"::\"\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"Item\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Eq\"\n+      COMMA \",\"\n+    WHITESPACE \"\\n\"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        METHOD_CALL_EXPR\n+          LITERAL\n+            STRING \"\\\"\\\"\"\n+          DOT \".\"\n+          NAME_REF\n+            IDENT \"to_owned\"\n+          ARG_LIST\n+            L_PAREN \"(\"\n+            R_PAREN \")\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "35577272e5621ceeb0a8200a0f4cc46df4ed3147", "filename": "crates/parser/test_data/parser/ok/0037_mod.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0037_mod.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0037_mod.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0037_mod.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0037_mod.rast"}, {"sha": "7e5a1b8358c46aecc8a6158ec6f9f319eaf9bb7d", "filename": "crates/parser/test_data/parser/ok/0037_mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0037_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0037_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0037_mod.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0037_mod.rs"}, {"sha": "fb6565f3a483851322021a3d9876ce720bd94229", "filename": "crates/parser/test_data/parser/ok/0037_mod.txt", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0037_mod.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0037_mod.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0037_mod.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,16 @@\n+SOURCE_FILE\n+  COMMENT \"// https://github.com/rust-analyzer/rust-analyzer/issues/357\"\n+  WHITESPACE \"\\n\\n\"\n+  COMMENT \"//! docs\"\n+  WHITESPACE \"\\n\"\n+  MODULE\n+    COMMENT \"// non-docs\"\n+    WHITESPACE \"\\n\"\n+    MOD_KW \"mod\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    WHITESPACE \" \"\n+    ITEM_LIST\n+      L_CURLY \"{\"\n+      R_CURLY \"}\""}, {"sha": "09aa2e60d970edffba3445cb8f8a5196fd4de679", "filename": "crates/parser/test_data/parser/ok/0038_where_pred_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0038_where_pred_type.rast"}, {"sha": "8bfc341a50a1ee387006c3209e4424cb29039c86", "filename": "crates/parser/test_data/parser/ok/0038_where_pred_type.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0038_where_pred_type.rs"}, {"sha": "e897630420268585178ee0260e7ea2dc6499180c", "filename": "crates/parser/test_data/parser/ok/0038_where_pred_type.txt", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,43 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"test\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    WHERE_CLAUSE\n+      WHERE_KW \"where\"\n+      WHITESPACE \" \"\n+      WHERE_PRED\n+        TUPLE_TYPE\n+          L_PAREN \"(\"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"u64\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"u64\"\n+          R_PAREN \")\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Foo\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\""}, {"sha": "186dea82d4dca207aa04d3f5ac4d676e4f440d74", "filename": "crates/parser/test_data/parser/ok/0039_raw_fn_item.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0039_raw_fn_item.rast"}, {"sha": "8380d1e79bcf7bda1365723dfd3c4ff9edd8376e", "filename": "crates/parser/test_data/parser/ok/0039_raw_fn_item.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0039_raw_fn_item.rs"}, {"sha": "2eeed781c1a966dafcc8bbfc3c7123996faedd91", "filename": "crates/parser/test_data/parser/ok/0039_raw_fn_item.txt", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,16 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"r#foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "8cfc14f491cb5333702e2c805342b3d12f87f13f", "filename": "crates/parser/test_data/parser/ok/0040_raw_struct_item_field.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0040_raw_struct_item_field.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0040_raw_struct_item_field.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0040_raw_struct_item_field.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0040_raw_struct_item_field.rast"}, {"sha": "098a60a72bfbb078bd829cc02d6a544ccfdd6b40", "filename": "crates/parser/test_data/parser/ok/0040_raw_struct_item_field.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0040_raw_struct_item_field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0040_raw_struct_item_field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0040_raw_struct_item_field.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0040_raw_struct_item_field.rs"}, {"sha": "ceb918420f56735713d858d09249d4ceb1c25216", "filename": "crates/parser/test_data/parser/ok/0040_raw_struct_item_field.txt", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0040_raw_struct_item_field.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0040_raw_struct_item_field.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0040_raw_struct_item_field.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,22 @@\n+SOURCE_FILE\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"S\"\n+    WHITESPACE \" \"\n+    RECORD_FIELD_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      RECORD_FIELD\n+        NAME\n+          IDENT \"r#foo\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"u32\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\""}, {"sha": "a8971b466e6c861ebfe5a23b6f2b4553b67e7ce5", "filename": "crates/parser/test_data/parser/ok/0041_raw_keywords.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0041_raw_keywords.rast"}, {"sha": "d59a6d3476bb98e80291484c89e40d507387180e", "filename": "crates/parser/test_data/parser/ok/0041_raw_keywords.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0041_raw_keywords.rs"}, {"sha": "dacf0ce742600d880e9c739a0b9a47d5981da6c5", "filename": "crates/parser/test_data/parser/ok/0041_raw_keywords.txt", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,50 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \" \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"r#struct\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          LITERAL\n+            INT_NUMBER \"92\"\n+          SEMICOLON \";\"\n+        WHITESPACE \" \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"r#trait\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"r#struct\"\n+            WHITESPACE \" \"\n+            STAR \"*\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"2\"\n+          SEMICOLON \";\"\n+        WHITESPACE \" \"\n+        R_CURLY \"}\""}, {"sha": "aa7a4dc745696e65f94778b849806ff0a12be97b", "filename": "crates/parser/test_data/parser/ok/0042_ufcs_call_list.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0042_ufcs_call_list.rast"}, {"sha": "6c02e65ed7dbf59f5cd92b9ccce1ea89c462728f", "filename": "crates/parser/test_data/parser/ok/0042_ufcs_call_list.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0042_ufcs_call_list.rs"}, {"sha": "ff2121a58a6c1b6e9ac480b2d79095298d4631cf", "filename": "crates/parser/test_data/parser/ok/0042_ufcs_call_list.txt", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,126 @@\n+SOURCE_FILE\n+  COMMENT \"// https://github.com/rust-analyzer/rust-analyzer/issues/596\"\n+  WHITESPACE \"\\n\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"Foo\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\\n\"\n+  IMPL\n+    IMPL_KW \"impl\"\n+    WHITESPACE \" \"\n+    PATH_TYPE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"Foo\"\n+    WHITESPACE \" \"\n+    ASSOC_ITEM_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"bar\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"bool\"\n+        WHITESPACE \" \"\n+        BLOCK_EXPR\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            WHITESPACE \"\\n        \"\n+            MACRO_CALL\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"unimplemented\"\n+              BANG \"!\"\n+              TOKEN_TREE\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+            WHITESPACE \"\\n    \"\n+            R_CURLY \"}\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"baz\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      PARAM\n+        WILDCARD_PAT\n+          UNDERSCORE \"_\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"bool\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        CALL_EXPR\n+          PATH_EXPR\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"baz\"\n+          ARG_LIST\n+            L_PAREN \"(\"\n+            CALL_EXPR\n+              PATH_EXPR\n+                PATH\n+                  PATH\n+                    PATH_SEGMENT\n+                      L_ANGLE \"<\"\n+                      PATH_TYPE\n+                        PATH\n+                          PATH_SEGMENT\n+                            NAME_REF\n+                              IDENT \"Foo\"\n+                      R_ANGLE \">\"\n+                  COLON2 \"::\"\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"bar\"\n+              ARG_LIST\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+            R_PAREN \")\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "12d776c7bf93d50f0f74900b2be7746ada071dda", "filename": "crates/parser/test_data/parser/ok/0043_complex_assignment.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0043_complex_assignment.rast"}, {"sha": "7e4a28bf74c758e218a199c105fb0037ff038f7c", "filename": "crates/parser/test_data/parser/ok/0043_complex_assignment.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0043_complex_assignment.rs"}, {"sha": "f9e5a51ae22dea57d91d5cfdd506d3ad221a91d6", "filename": "crates/parser/test_data/parser/ok/0043_complex_assignment.txt", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,110 @@\n+SOURCE_FILE\n+  COMMENT \"// https://github.com/rust-analyzer/rust-analyzer/issues/674\"\n+  WHITESPACE \"\\n\\n\"\n+  STRUCT\n+    STRUCT_KW \"struct\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"Repr\"\n+    WHITESPACE \" \"\n+    RECORD_FIELD_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \" \"\n+      RECORD_FIELD\n+        NAME\n+          IDENT \"raw\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        ARRAY_TYPE\n+          L_BRACK \"[\"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"u8\"\n+          SEMICOLON \";\"\n+          WHITESPACE \" \"\n+          LITERAL\n+            INT_NUMBER \"1\"\n+          R_BRACK \"]\"\n+      WHITESPACE \" \"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"abc\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            INDEX_EXPR\n+              FIELD_EXPR\n+                RECORD_EXPR\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Repr\"\n+                  WHITESPACE \" \"\n+                  RECORD_EXPR_FIELD_LIST\n+                    L_CURLY \"{\"\n+                    WHITESPACE \" \"\n+                    RECORD_EXPR_FIELD\n+                      NAME_REF\n+                        IDENT \"raw\"\n+                      COLON \":\"\n+                      WHITESPACE \" \"\n+                      ARRAY_EXPR\n+                        L_BRACK \"[\"\n+                        LITERAL\n+                          INT_NUMBER \"0\"\n+                        R_BRACK \"]\"\n+                    WHITESPACE \" \"\n+                    R_CURLY \"}\"\n+                DOT \".\"\n+                NAME_REF\n+                  IDENT \"raw\"\n+              L_BRACK \"[\"\n+              LITERAL\n+                INT_NUMBER \"0\"\n+              R_BRACK \"]\"\n+            WHITESPACE \" \"\n+            EQ \"=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"0\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            RECORD_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Repr\"\n+              RECORD_EXPR_FIELD_LIST\n+                L_CURLY \"{\"\n+                RECORD_EXPR_FIELD\n+                  NAME_REF\n+                    IDENT \"raw\"\n+                  COLON \":\"\n+                  ARRAY_EXPR\n+                    L_BRACK \"[\"\n+                    LITERAL\n+                      INT_NUMBER \"0\"\n+                    R_BRACK \"]\"\n+                R_CURLY \"}\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "80c1d6b87af85e87ff8505139ef6c2157a8b61bc", "filename": "crates/parser/test_data/parser/ok/0044_let_attrs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0044_let_attrs.rast"}, {"sha": "325a97aebdcb517839b91ca6af381f96275d5fbe", "filename": "crates/parser/test_data/parser/ok/0044_let_attrs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0044_let_attrs.rs"}, {"sha": "6c637bac428c27908823cebab5d8020bad79fbbf", "filename": "crates/parser/test_data/parser/ok/0044_let_attrs.txt", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,77 @@\n+SOURCE_FILE\n+  FN\n+    COMMENT \"// https://github.com/rust-analyzer/rust-analyzer/issues/677\"\n+    WHITESPACE \"\\n\"\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          ATTR\n+            POUND \"#\"\n+            L_BRACK \"[\"\n+            META\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"cfg\"\n+              TOKEN_TREE\n+                L_PAREN \"(\"\n+                IDENT \"feature\"\n+                WHITESPACE \" \"\n+                EQ \"=\"\n+                WHITESPACE \" \"\n+                STRING \"\\\"backtrace\\\"\"\n+                R_PAREN \")\"\n+            R_BRACK \"]\"\n+          WHITESPACE \"\\n    \"\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"exit_code\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"panic\"\n+                COLON2 \"::\"\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"catch_unwind\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              CLOSURE_EXPR\n+                MOVE_KW \"move\"\n+                WHITESPACE \" \"\n+                PARAM_LIST\n+                  PIPE \"|\"\n+                  PIPE \"|\"\n+                WHITESPACE \" \"\n+                CALL_EXPR\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"main\"\n+                  ARG_LIST\n+                    L_PAREN \"(\"\n+                    R_PAREN \")\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "a45f88def1e1573371307b8a0ed390cba6b2b8f0", "filename": "crates/parser/test_data/parser/ok/0045_block_attrs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0045_block_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0045_block_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0045_block_attrs.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0045_block_attrs.rast"}, {"sha": "ed4593759aceda05ded008619d5f370434303f9a", "filename": "crates/parser/test_data/parser/ok/0045_block_attrs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0045_block_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0045_block_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0045_block_attrs.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0045_block_attrs.rs"}, {"sha": "6b6f3bfe3e94130a85b7b76cc86f6d8b8c8c435a", "filename": "crates/parser/test_data/parser/ok/0045_block_attrs.txt", "status": "added", "additions": 230, "deletions": 0, "changes": 230, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0045_block_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0045_block_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0045_block_attrs.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,230 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"inner\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        ATTR\n+          POUND \"#\"\n+          BANG \"!\"\n+          L_BRACK \"[\"\n+          META\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"doc\"\n+            TOKEN_TREE\n+              L_PAREN \"(\"\n+              STRING \"\\\"Inner attributes allowed here\\\"\"\n+              R_PAREN \")\"\n+          R_BRACK \"]\"\n+        WHITESPACE \"\\n    \"\n+        COMMENT \"//! As are ModuleDoc style comments\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              ATTR\n+                POUND \"#\"\n+                BANG \"!\"\n+                L_BRACK \"[\"\n+                META\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"doc\"\n+                  TOKEN_TREE\n+                    L_PAREN \"(\"\n+                    STRING \"\\\"Inner attributes are allowed in blocks used as statements\\\"\"\n+                    R_PAREN \")\"\n+                R_BRACK \"]\"\n+              WHITESPACE \"\\n        \"\n+              ATTR\n+                POUND \"#\"\n+                BANG \"!\"\n+                L_BRACK \"[\"\n+                META\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"doc\"\n+                  TOKEN_TREE\n+                    L_PAREN \"(\"\n+                    STRING \"\\\"Being validated is not affected by duplcates\\\"\"\n+                    R_PAREN \")\"\n+                R_BRACK \"]\"\n+              WHITESPACE \"\\n        \"\n+              COMMENT \"//! As are ModuleDoc style comments\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        BLOCK_EXPR\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            WHITESPACE \"\\n        \"\n+            ATTR\n+              POUND \"#\"\n+              BANG \"!\"\n+              L_BRACK \"[\"\n+              META\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"doc\"\n+                TOKEN_TREE\n+                  L_PAREN \"(\"\n+                  STRING \"\\\"Inner attributes are allowed in blocks when they are the last statement of another block\\\"\"\n+                  R_PAREN \")\"\n+              R_BRACK \"]\"\n+            WHITESPACE \"\\n        \"\n+            COMMENT \"//! As are ModuleDoc style comments\"\n+            WHITESPACE \"\\n    \"\n+            R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"outer\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          WILDCARD_PAT\n+            UNDERSCORE \"_\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            ATTR\n+              POUND \"#\"\n+              L_BRACK \"[\"\n+              META\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"doc\"\n+                TOKEN_TREE\n+                  L_PAREN \"(\"\n+                  STRING \"\\\"Outer attributes are always allowed\\\"\"\n+                  R_PAREN \")\"\n+              R_BRACK \"]\"\n+            WHITESPACE \" \"\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  IMPL\n+    COMMENT \"// https://github.com/rust-analyzer/rust-analyzer/issues/689\"\n+    WHITESPACE \"\\n\"\n+    IMPL_KW \"impl\"\n+    WHITESPACE \" \"\n+    PATH_TYPE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"Whatever\"\n+    WHITESPACE \" \"\n+    ASSOC_ITEM_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"salsa_event\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          SELF_PARAM\n+            AMP \"&\"\n+            NAME\n+              SELF_KW \"self\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"event_fn\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            IMPL_TRAIT_TYPE\n+              IMPL_KW \"impl\"\n+              WHITESPACE \" \"\n+              TYPE_BOUND_LIST\n+                TYPE_BOUND\n+                  PATH_TYPE\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"Fn\"\n+                        PARAM_LIST\n+                          L_PAREN \"(\"\n+                          R_PAREN \")\"\n+                        WHITESPACE \" \"\n+                        RET_TYPE\n+                          THIN_ARROW \"->\"\n+                          WHITESPACE \" \"\n+                          PATH_TYPE\n+                            PATH\n+                              PATH_SEGMENT\n+                                NAME_REF\n+                                  IDENT \"Event\"\n+                                GENERIC_ARG_LIST\n+                                  L_ANGLE \"<\"\n+                                  TYPE_ARG\n+                                    PATH_TYPE\n+                                      PATH\n+                                        PATH_SEGMENT\n+                                          NAME_REF\n+                                            IDENT \"Self\"\n+                                  R_ANGLE \">\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        BLOCK_EXPR\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            WHITESPACE \"\\n        \"\n+            ATTR\n+              POUND \"#\"\n+              BANG \"!\"\n+              L_BRACK \"[\"\n+              META\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"allow\"\n+                TOKEN_TREE\n+                  L_PAREN \"(\"\n+                  IDENT \"unused_variables\"\n+                  R_PAREN \")\"\n+              R_BRACK \"]\"\n+            WHITESPACE \" \"\n+            COMMENT \"// this is  `inner_attr` of the block\"\n+            WHITESPACE \"\\n    \"\n+            R_CURLY \"}\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "854ff9d5633ff3a67e6f6d19d03ab1da8bc70cf1", "filename": "crates/parser/test_data/parser/ok/0046_extern_inner_attributes.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0046_extern_inner_attributes.rast"}, {"sha": "fe67e2df43c87827122ec95d442d8a93bc7b5f63", "filename": "crates/parser/test_data/parser/ok/0046_extern_inner_attributes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0046_extern_inner_attributes.rs"}, {"sha": "4eb51cfdf09e264a2cd7b0eccd4e5d17f5e919a4", "filename": "crates/parser/test_data/parser/ok/0046_extern_inner_attributes.txt", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,29 @@\n+SOURCE_FILE\n+  EXTERN_BLOCK\n+    ABI\n+      EXTERN_KW \"extern\"\n+      WHITESPACE \" \"\n+      STRING \"\\\"C\\\"\"\n+    WHITESPACE \" \"\n+    EXTERN_ITEM_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      COMMENT \"//! This is a doc comment\"\n+      WHITESPACE \"\\n    \"\n+      ATTR\n+        POUND \"#\"\n+        BANG \"!\"\n+        L_BRACK \"[\"\n+        META\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"doc\"\n+          TOKEN_TREE\n+            L_PAREN \"(\"\n+            STRING \"\\\"This is also a doc comment\\\"\"\n+            R_PAREN \")\"\n+        R_BRACK \"]\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "9b6101edb17a24d990fac857e8583ce1d5a2cb4e", "filename": "crates/parser/test_data/parser/ok/0047_minus_in_inner_pattern.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0047_minus_in_inner_pattern.rast"}, {"sha": "bbd6b0f6e7c642ebe059a547e969edc542c8d797", "filename": "crates/parser/test_data/parser/ok/0047_minus_in_inner_pattern.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0047_minus_in_inner_pattern.rs"}, {"sha": "ac23e7d1d96a3bc87770975b8705bfda2169e522", "filename": "crates/parser/test_data/parser/ok/0047_minus_in_inner_pattern.txt", "status": "added", "additions": 323, "deletions": 0, "changes": 323, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,323 @@\n+SOURCE_FILE\n+  COMMENT \"// https://github.com/rust-analyzer/rust-analyzer/issues/972\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          MATCH_EXPR\n+            MATCH_KW \"match\"\n+            WHITESPACE \" \"\n+            CALL_EXPR\n+              PATH_EXPR\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"Some\"\n+              ARG_LIST\n+                L_PAREN \"(\"\n+                PREFIX_EXPR\n+                  MINUS \"-\"\n+                  LITERAL\n+                    INT_NUMBER \"1\"\n+                R_PAREN \")\"\n+            WHITESPACE \" \"\n+            MATCH_ARM_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                TUPLE_STRUCT_PAT\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Some\"\n+                  L_PAREN \"(\"\n+                  LITERAL_PAT\n+                    MINUS \"-\"\n+                    LITERAL\n+                      INT_NUMBER \"1\"\n+                  R_PAREN \")\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                WILDCARD_PAT\n+                  UNDERSCORE \"_\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\\n    \"\n+        EXPR_STMT\n+          MATCH_EXPR\n+            MATCH_KW \"match\"\n+            WHITESPACE \" \"\n+            CALL_EXPR\n+              PATH_EXPR\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"Some\"\n+              ARG_LIST\n+                L_PAREN \"(\"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  PREFIX_EXPR\n+                    MINUS \"-\"\n+                    LITERAL\n+                      INT_NUMBER \"1\"\n+                  COMMA \",\"\n+                  WHITESPACE \" \"\n+                  PREFIX_EXPR\n+                    MINUS \"-\"\n+                    LITERAL\n+                      INT_NUMBER \"1\"\n+                  R_PAREN \")\"\n+                R_PAREN \")\"\n+            WHITESPACE \" \"\n+            MATCH_ARM_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                TUPLE_STRUCT_PAT\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Some\"\n+                  L_PAREN \"(\"\n+                  TUPLE_PAT\n+                    L_PAREN \"(\"\n+                    LITERAL_PAT\n+                      MINUS \"-\"\n+                      LITERAL\n+                        INT_NUMBER \"1\"\n+                    COMMA \",\"\n+                    WHITESPACE \" \"\n+                    LITERAL_PAT\n+                      MINUS \"-\"\n+                      LITERAL\n+                        INT_NUMBER \"1\"\n+                    R_PAREN \")\"\n+                  R_PAREN \")\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                WILDCARD_PAT\n+                  UNDERSCORE \"_\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\\n    \"\n+        EXPR_STMT\n+          MATCH_EXPR\n+            MATCH_KW \"match\"\n+            WHITESPACE \" \"\n+            CALL_EXPR\n+              PATH_EXPR\n+                PATH\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"A\"\n+                  COLON2 \"::\"\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"B\"\n+              ARG_LIST\n+                L_PAREN \"(\"\n+                PREFIX_EXPR\n+                  MINUS \"-\"\n+                  LITERAL\n+                    INT_NUMBER \"1\"\n+                COMMA \",\"\n+                WHITESPACE \" \"\n+                PREFIX_EXPR\n+                  MINUS \"-\"\n+                  LITERAL\n+                    INT_NUMBER \"1\"\n+                R_PAREN \")\"\n+            WHITESPACE \" \"\n+            MATCH_ARM_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                TUPLE_STRUCT_PAT\n+                  PATH\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"A\"\n+                    COLON2 \"::\"\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"B\"\n+                  L_PAREN \"(\"\n+                  LITERAL_PAT\n+                    MINUS \"-\"\n+                    LITERAL\n+                      INT_NUMBER \"1\"\n+                  COMMA \",\"\n+                  WHITESPACE \" \"\n+                  LITERAL_PAT\n+                    MINUS \"-\"\n+                    LITERAL\n+                      INT_NUMBER \"1\"\n+                  R_PAREN \")\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                WILDCARD_PAT\n+                  UNDERSCORE \"_\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\\n    \"\n+        IF_EXPR\n+          IF_KW \"if\"\n+          WHITESPACE \" \"\n+          CONDITION\n+            LET_KW \"let\"\n+            WHITESPACE \" \"\n+            TUPLE_STRUCT_PAT\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Some\"\n+              L_PAREN \"(\"\n+              LITERAL_PAT\n+                MINUS \"-\"\n+                LITERAL\n+                  INT_NUMBER \"1\"\n+              R_PAREN \")\"\n+            WHITESPACE \" \"\n+            EQ \"=\"\n+            WHITESPACE \" \"\n+            CALL_EXPR\n+              PATH_EXPR\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"Some\"\n+              ARG_LIST\n+                L_PAREN \"(\"\n+                PREFIX_EXPR\n+                  MINUS \"-\"\n+                  LITERAL\n+                    INT_NUMBER \"1\"\n+                R_PAREN \")\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  ENUM\n+    ENUM_KW \"enum\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"A\"\n+    WHITESPACE \" \"\n+    VARIANT_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      VARIANT\n+        NAME\n+          IDENT \"B\"\n+        TUPLE_FIELD_LIST\n+          L_PAREN \"(\"\n+          TUPLE_FIELD\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"i8\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          TUPLE_FIELD\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"i8\"\n+          R_PAREN \")\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      PARAM\n+        RANGE_PAT\n+          LITERAL_PAT\n+            MINUS \"-\"\n+            LITERAL\n+              INT_NUMBER \"128\"\n+          DOT2EQ \"..=\"\n+          LITERAL_PAT\n+            LITERAL\n+              INT_NUMBER \"127\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"i8\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "b19a0b5f8bbd2b669456072f21d77cc1f4ecfa48", "filename": "crates/parser/test_data/parser/ok/0048_compound_assignment.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0048_compound_assignment.rast"}, {"sha": "871720a49a6f47e9216c776bc65d377b174ad8da", "filename": "crates/parser/test_data/parser/ok/0048_compound_assignment.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0048_compound_assignment.rs"}, {"sha": "eca5e7aa810967e73169f133a487c28c9fe6824e", "filename": "crates/parser/test_data/parser/ok/0048_compound_assignment.txt", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,201 @@\n+SOURCE_FILE\n+  COMMENT \"// https://github.com/rust-analyzer/rust-analyzer/pull/983\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"compound_assignment\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            MUT_KW \"mut\"\n+            WHITESPACE \" \"\n+            NAME\n+              IDENT \"a\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          LITERAL\n+            INT_NUMBER \"0\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"a\"\n+            WHITESPACE \" \"\n+            PLUSEQ \"+=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"1\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"a\"\n+            WHITESPACE \" \"\n+            MINUSEQ \"-=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"2\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"a\"\n+            WHITESPACE \" \"\n+            STAREQ \"*=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"3\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"a\"\n+            WHITESPACE \" \"\n+            PERCENTEQ \"%=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"4\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"a\"\n+            WHITESPACE \" \"\n+            SLASHEQ \"/=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"5\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"a\"\n+            WHITESPACE \" \"\n+            PIPEEQ \"|=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"6\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"a\"\n+            WHITESPACE \" \"\n+            AMPEQ \"&=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"7\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"a\"\n+            WHITESPACE \" \"\n+            CARETEQ \"^=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"8\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"a\"\n+            WHITESPACE \" \"\n+            LTEQ \"<=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"9\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"a\"\n+            WHITESPACE \" \"\n+            GTEQ \">=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"10\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"a\"\n+            WHITESPACE \" \"\n+            SHREQ \">>=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"11\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"a\"\n+            WHITESPACE \" \"\n+            SHLEQ \"<<=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"12\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "a254214595ac62c9f249b83e6cbd9c00ecbdb6d4", "filename": "crates/parser/test_data/parser/ok/0049_async_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0049_async_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0049_async_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0049_async_block.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0049_async_block.rast"}, {"sha": "4781b322549824bb3b4b443c4b6d72d2dd0a83bf", "filename": "crates/parser/test_data/parser/ok/0049_async_block.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0049_async_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0049_async_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0049_async_block.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0049_async_block.rs"}, {"sha": "f376821e285a327cc13a4b4dd5467041cf9e9fad", "filename": "crates/parser/test_data/parser/ok/0049_async_block.txt", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0049_async_block.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0049_async_block.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0049_async_block.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,36 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BLOCK_EXPR\n+            ASYNC_KW \"async\"\n+            WHITESPACE \" \"\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BLOCK_EXPR\n+            ASYNC_KW \"async\"\n+            WHITESPACE \" \"\n+            MOVE_KW \"move\"\n+            WHITESPACE \" \"\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\""}, {"sha": "f54c0c16642ddab1984ddf478b16924ded9c3d4a", "filename": "crates/parser/test_data/parser/ok/0050_async_block_as_argument.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0050_async_block_as_argument.rast"}, {"sha": "ec4612cff27829238e6be9cb34d8193bf64239ab", "filename": "crates/parser/test_data/parser/ok/0050_async_block_as_argument.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0050_async_block_as_argument.rs"}, {"sha": "53ddf35ccb4db2a0e1797358693a8517ad4e1364", "filename": "crates/parser/test_data/parser/ok/0050_async_block_as_argument.txt", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,92 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      PARAM\n+        IDENT_PAT\n+          NAME\n+            IDENT \"x\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        IMPL_TRAIT_TYPE\n+          IMPL_KW \"impl\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND_LIST\n+            TYPE_BOUND\n+              PATH_TYPE\n+                PATH\n+                  PATH\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"std\"\n+                    COLON2 \"::\"\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"future\"\n+                  COLON2 \"::\"\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"Future\"\n+                    GENERIC_ARG_LIST\n+                      L_ANGLE \"<\"\n+                      ASSOC_TYPE_ARG\n+                        NAME_REF\n+                          IDENT \"Output\"\n+                        WHITESPACE \" \"\n+                        EQ \"=\"\n+                        WHITESPACE \" \"\n+                        PATH_TYPE\n+                          PATH\n+                            PATH_SEGMENT\n+                              NAME_REF\n+                                IDENT \"i32\"\n+                      R_ANGLE \">\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        CALL_EXPR\n+          PATH_EXPR\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"foo\"\n+          ARG_LIST\n+            L_PAREN \"(\"\n+            BLOCK_EXPR\n+              ASYNC_KW \"async\"\n+              WHITESPACE \" \"\n+              MOVE_KW \"move\"\n+              WHITESPACE \" \"\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  INT_NUMBER \"12\"\n+                WHITESPACE \" \"\n+                R_CURLY \"}\"\n+            R_PAREN \")\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "e4e76645ce0dbc345334c3c4d53ddba87fa41ea9", "filename": "crates/parser/test_data/parser/ok/0051_parameter_attrs.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0051_parameter_attrs.rast"}, {"sha": "de350d8587ac09574cb9f64471cfa503599ce50e", "filename": "crates/parser/test_data/parser/ok/0051_parameter_attrs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0051_parameter_attrs.rs"}, {"sha": "e1ebf5a38cbf827c76a5f942fda4ca0c4c44799e", "filename": "crates/parser/test_data/parser/ok/0051_parameter_attrs.txt", "status": "added", "additions": 548, "deletions": 0, "changes": 548, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,548 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"g1\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      PARAM\n+        ATTR\n+          POUND \"#\"\n+          L_BRACK \"[\"\n+          META\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"attr1\"\n+          R_BRACK \"]\"\n+        WHITESPACE \" \"\n+        ATTR\n+          POUND \"#\"\n+          L_BRACK \"[\"\n+          META\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"attr2\"\n+          R_BRACK \"]\"\n+        WHITESPACE \" \"\n+        IDENT_PAT\n+          NAME\n+            IDENT \"pat\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"Type\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"g2\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      PARAM\n+        ATTR\n+          POUND \"#\"\n+          L_BRACK \"[\"\n+          META\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"attr1\"\n+          R_BRACK \"]\"\n+        WHITESPACE \" \"\n+        IDENT_PAT\n+          NAME\n+            IDENT \"x\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"u8\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  EXTERN_BLOCK\n+    ABI\n+      EXTERN_KW \"extern\"\n+      WHITESPACE \" \"\n+      STRING \"\\\"C\\\"\"\n+    WHITESPACE \" \"\n+    EXTERN_ITEM_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \" \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"printf\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            IDENT_PAT\n+              NAME\n+                IDENT \"format\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PTR_TYPE\n+              STAR \"*\"\n+              CONST_KW \"const\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"i8\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            ATTR\n+              POUND \"#\"\n+              L_BRACK \"[\"\n+              META\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"attr\"\n+              R_BRACK \"]\"\n+            WHITESPACE \" \"\n+            DOT3 \"...\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        RET_TYPE\n+          THIN_ARROW \"->\"\n+          WHITESPACE \" \"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"i32\"\n+        SEMICOLON \";\"\n+      WHITESPACE \" \"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"F\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"FnMut\"\n+                  PARAM_LIST\n+                    L_PAREN \"(\"\n+                    PARAM\n+                      ATTR\n+                        POUND \"#\"\n+                        L_BRACK \"[\"\n+                        META\n+                          PATH\n+                            PATH_SEGMENT\n+                              NAME_REF\n+                                IDENT \"attr\"\n+                        R_BRACK \"]\"\n+                      WHITESPACE \" \"\n+                      REF_TYPE\n+                        AMP \"&\"\n+                        MUT_KW \"mut\"\n+                        WHITESPACE \" \"\n+                        PATH_TYPE\n+                          PATH\n+                            PATH_SEGMENT\n+                              NAME_REF\n+                                IDENT \"Foo\"\n+                              GENERIC_ARG_LIST\n+                                L_ANGLE \"<\"\n+                                LIFETIME_ARG\n+                                  LIFETIME\n+                                    LIFETIME_IDENT \"'a\"\n+                                R_ANGLE \">\"\n+                    R_PAREN \")\"\n+      R_ANGLE \">\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  TRAIT\n+    TRAIT_KW \"trait\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"Foo\"\n+    WHITESPACE \" \"\n+    ASSOC_ITEM_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"bar\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          PARAM\n+            ATTR\n+              POUND \"#\"\n+              L_BRACK \"[\"\n+              META\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"attr\"\n+              R_BRACK \"]\"\n+            WHITESPACE \" \"\n+            WILDCARD_PAT\n+              UNDERSCORE \"_\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"u64\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            ATTR\n+              POUND \"#\"\n+              WHITESPACE \" \"\n+              L_BRACK \"[\"\n+              META\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"attr\"\n+              R_BRACK \"]\"\n+            WHITESPACE \" \"\n+            IDENT_PAT\n+              MUT_KW \"mut\"\n+              WHITESPACE \" \"\n+              NAME\n+                IDENT \"x\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"i32\"\n+          R_PAREN \")\"\n+        SEMICOLON \";\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  IMPL\n+    IMPL_KW \"impl\"\n+    WHITESPACE \" \"\n+    PATH_TYPE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"S\"\n+    WHITESPACE \" \"\n+    ASSOC_ITEM_LIST\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n     \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"f\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          SELF_PARAM\n+            ATTR\n+              POUND \"#\"\n+              L_BRACK \"[\"\n+              META\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"must_use\"\n+              R_BRACK \"]\"\n+            WHITESPACE \" \"\n+            NAME\n+              SELF_KW \"self\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        BLOCK_EXPR\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            R_CURLY \"}\"\n+      WHITESPACE \"\\n     \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"g1\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          SELF_PARAM\n+            ATTR\n+              POUND \"#\"\n+              L_BRACK \"[\"\n+              META\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"attr\"\n+              R_BRACK \"]\"\n+            WHITESPACE \" \"\n+            NAME\n+              SELF_KW \"self\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        BLOCK_EXPR\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            R_CURLY \"}\"\n+      WHITESPACE \"\\n     \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"g2\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          SELF_PARAM\n+            ATTR\n+              POUND \"#\"\n+              L_BRACK \"[\"\n+              META\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"attr\"\n+              R_BRACK \"]\"\n+            WHITESPACE \" \"\n+            AMP \"&\"\n+            NAME\n+              SELF_KW \"self\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        BLOCK_EXPR\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            R_CURLY \"}\"\n+      WHITESPACE \"\\n     \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"g3\"\n+        GENERIC_PARAM_LIST\n+          L_ANGLE \"<\"\n+          LIFETIME_PARAM\n+            LIFETIME\n+              LIFETIME_IDENT \"'a\"\n+          R_ANGLE \">\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          SELF_PARAM\n+            ATTR\n+              POUND \"#\"\n+              L_BRACK \"[\"\n+              META\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"attr\"\n+              R_BRACK \"]\"\n+            WHITESPACE \" \"\n+            AMP \"&\"\n+            MUT_KW \"mut\"\n+            WHITESPACE \" \"\n+            NAME\n+              SELF_KW \"self\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        BLOCK_EXPR\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            R_CURLY \"}\"\n+      WHITESPACE \"\\n     \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"g4\"\n+        GENERIC_PARAM_LIST\n+          L_ANGLE \"<\"\n+          LIFETIME_PARAM\n+            LIFETIME\n+              LIFETIME_IDENT \"'a\"\n+          R_ANGLE \">\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          SELF_PARAM\n+            ATTR\n+              POUND \"#\"\n+              L_BRACK \"[\"\n+              META\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"attr\"\n+              R_BRACK \"]\"\n+            WHITESPACE \" \"\n+            AMP \"&\"\n+            LIFETIME\n+              LIFETIME_IDENT \"'a\"\n+            WHITESPACE \" \"\n+            NAME\n+              SELF_KW \"self\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        BLOCK_EXPR\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            R_CURLY \"}\"\n+      WHITESPACE \"\\n     \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"g5\"\n+        GENERIC_PARAM_LIST\n+          L_ANGLE \"<\"\n+          LIFETIME_PARAM\n+            LIFETIME\n+              LIFETIME_IDENT \"'a\"\n+          R_ANGLE \">\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          SELF_PARAM\n+            ATTR\n+              POUND \"#\"\n+              L_BRACK \"[\"\n+              META\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"attr\"\n+              R_BRACK \"]\"\n+            WHITESPACE \" \"\n+            AMP \"&\"\n+            LIFETIME\n+              LIFETIME_IDENT \"'a\"\n+            WHITESPACE \" \"\n+            MUT_KW \"mut\"\n+            WHITESPACE \" \"\n+            NAME\n+              SELF_KW \"self\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        BLOCK_EXPR\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            R_CURLY \"}\"\n+      WHITESPACE \"\\n     \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"c\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          SELF_PARAM\n+            ATTR\n+              POUND \"#\"\n+              L_BRACK \"[\"\n+              META\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"attr\"\n+              R_BRACK \"]\"\n+            WHITESPACE \" \"\n+            NAME\n+              SELF_KW \"self\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Self\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        BLOCK_EXPR\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            R_CURLY \"}\"\n+      WHITESPACE \"\\n     \"\n+      FN\n+        FN_KW \"fn\"\n+        WHITESPACE \" \"\n+        NAME\n+          IDENT \"d\"\n+        PARAM_LIST\n+          L_PAREN \"(\"\n+          SELF_PARAM\n+            ATTR\n+              POUND \"#\"\n+              L_BRACK \"[\"\n+              META\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"attr\"\n+              R_BRACK \"]\"\n+            WHITESPACE \" \"\n+            NAME\n+              SELF_KW \"self\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Rc\"\n+                  GENERIC_ARG_LIST\n+                    L_ANGLE \"<\"\n+                    TYPE_ARG\n+                      PATH_TYPE\n+                        PATH\n+                          PATH_SEGMENT\n+                            NAME_REF\n+                              IDENT \"Self\"\n+                    R_ANGLE \">\"\n+          R_PAREN \")\"\n+        WHITESPACE \" \"\n+        BLOCK_EXPR\n+          STMT_LIST\n+            L_CURLY \"{\"\n+            R_CURLY \"}\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\""}, {"sha": "949ddc3797e8ad28fb3e3ae8804aa878c0bb65b9", "filename": "crates/parser/test_data/parser/ok/0052_for_range_block.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0052_for_range_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0052_for_range_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0052_for_range_block.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0052_for_range_block.rast"}, {"sha": "b51b1963008ce390ae9da2e985bb02b5194307ad", "filename": "crates/parser/test_data/parser/ok/0052_for_range_block.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0052_for_range_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0052_for_range_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0052_for_range_block.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0052_for_range_block.rs"}, {"sha": "0c9dd432fb460ece49470c6f1e36d0448383732b", "filename": "crates/parser/test_data/parser/ok/0052_for_range_block.txt", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0052_for_range_block.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0052_for_range_block.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0052_for_range_block.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,81 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n   \"\n+        FOR_EXPR\n+          FOR_KW \"for\"\n+          WHITESPACE \" \"\n+          IDENT_PAT\n+            NAME\n+              IDENT \"_x\"\n+          WHITESPACE \" \"\n+          IN_KW \"in\"\n+          WHITESPACE \" \"\n+          RANGE_EXPR\n+            LITERAL\n+              INT_NUMBER \"0\"\n+            WHITESPACE \" \"\n+            DOT2 \"..\"\n+            WHITESPACE \" \"\n+            METHOD_CALL_EXPR\n+              PAREN_EXPR\n+                L_PAREN \"(\"\n+                RANGE_EXPR\n+                  LITERAL\n+                    INT_NUMBER \"0\"\n+                  WHITESPACE \" \"\n+                  DOT2 \"..\"\n+                  WHITESPACE \" \"\n+                  BLOCK_EXPR\n+                    STMT_LIST\n+                      L_CURLY \"{\"\n+                      BIN_EXPR\n+                        LITERAL\n+                          INT_NUMBER \"1\"\n+                        WHITESPACE \" \"\n+                        PLUS \"+\"\n+                        WHITESPACE \" \"\n+                        LITERAL\n+                          INT_NUMBER \"2\"\n+                      R_CURLY \"}\"\n+                R_PAREN \")\"\n+              DOT \".\"\n+              NAME_REF\n+                IDENT \"sum\"\n+              GENERIC_ARG_LIST\n+                COLON2 \"::\"\n+                L_ANGLE \"<\"\n+                TYPE_ARG\n+                  PATH_TYPE\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"u32\"\n+                R_ANGLE \">\"\n+              ARG_LIST\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n       \"\n+              EXPR_STMT\n+                BREAK_EXPR\n+                  BREAK_KW \"break\"\n+                SEMICOLON \";\"\n+              WHITESPACE \"\\n   \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "97416f16acc3b02a9562dff1e48c4f00d25dd608", "filename": "crates/parser/test_data/parser/ok/0053_outer_attribute_on_macro_rules.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0053_outer_attribute_on_macro_rules.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0053_outer_attribute_on_macro_rules.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0053_outer_attribute_on_macro_rules.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0053_outer_attribute_on_macro_rules.rast"}, {"sha": "b59c23c56a926737bd2d6c3f0432bfbfce001d80", "filename": "crates/parser/test_data/parser/ok/0053_outer_attribute_on_macro_rules.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0053_outer_attribute_on_macro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0053_outer_attribute_on_macro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0053_outer_attribute_on_macro_rules.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0053_outer_attribute_on_macro_rules.rs"}, {"sha": "b94d43beb3c285a48a9774bfa717b1fafb6ce1e5", "filename": "crates/parser/test_data/parser/ok/0053_outer_attribute_on_macro_rules.txt", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0053_outer_attribute_on_macro_rules.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0053_outer_attribute_on_macro_rules.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0053_outer_attribute_on_macro_rules.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,37 @@\n+SOURCE_FILE\n+  MACRO_RULES\n+    COMMENT \"/// Some docs\"\n+    WHITESPACE \"\\n\"\n+    ATTR\n+      POUND \"#\"\n+      L_BRACK \"[\"\n+      META\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"macro_export\"\n+      R_BRACK \"]\"\n+    WHITESPACE \"\\n\"\n+    MACRO_RULES_KW \"macro_rules\"\n+    BANG \"!\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    WHITESPACE \" \"\n+    TOKEN_TREE\n+      L_CURLY \"{\"\n+      WHITESPACE \"\\n    \"\n+      TOKEN_TREE\n+        L_PAREN \"(\"\n+        R_PAREN \")\"\n+      WHITESPACE \" \"\n+      EQ \"=\"\n+      R_ANGLE \">\"\n+      WHITESPACE \" \"\n+      TOKEN_TREE\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+      SEMICOLON \";\"\n+      WHITESPACE \"\\n\"\n+      R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "e85cb15961ea22246cf2fd705921e1143e9df7bc", "filename": "crates/parser/test_data/parser/ok/0054_qual_path_in_type_arg.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0054_qual_path_in_type_arg.rast"}, {"sha": "0d3f5722a5a3bfb0d4cb96f9bf6cb41418d0c853", "filename": "crates/parser/test_data/parser/ok/0054_qual_path_in_type_arg.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0054_qual_path_in_type_arg.rs"}, {"sha": "4e1e31f376760c32350edda30f8aa59f1b544aaa", "filename": "crates/parser/test_data/parser/ok/0054_qual_path_in_type_arg.txt", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,126 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"a\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    RET_TYPE\n+      THIN_ARROW \"->\"\n+      WHITESPACE \" \"\n+      PATH_TYPE\n+        PATH\n+          PATH_SEGMENT\n+            NAME_REF\n+              IDENT \"Foo\"\n+            GENERIC_ARG_LIST\n+              L_ANGLE \"<\"\n+              TYPE_ARG\n+                PATH_TYPE\n+                  PATH\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"bar\"\n+                    COLON2 \"::\"\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Baz\"\n+              R_ANGLE \">\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"b\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      PARAM\n+        WILDCARD_PAT\n+          UNDERSCORE \"_\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        IMPL_TRAIT_TYPE\n+          IMPL_KW \"impl\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND_LIST\n+            TYPE_BOUND\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"FnMut\"\n+                    PARAM_LIST\n+                      L_PAREN \"(\"\n+                      PARAM\n+                        PATH_TYPE\n+                          PATH\n+                            PATH\n+                              PATH_SEGMENT\n+                                NAME_REF\n+                                  IDENT \"x\"\n+                            COLON2 \"::\"\n+                            PATH_SEGMENT\n+                              NAME_REF\n+                                IDENT \"Y\"\n+                      R_PAREN \")\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"c\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      PARAM\n+        WILDCARD_PAT\n+          UNDERSCORE \"_\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        IMPL_TRAIT_TYPE\n+          IMPL_KW \"impl\"\n+          WHITESPACE \" \"\n+          TYPE_BOUND_LIST\n+            TYPE_BOUND\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"FnMut\"\n+                    PARAM_LIST\n+                      L_PAREN \"(\"\n+                      PARAM\n+                        REF_TYPE\n+                          AMP \"&\"\n+                          PATH_TYPE\n+                            PATH\n+                              PATH\n+                                PATH_SEGMENT\n+                                  NAME_REF\n+                                    IDENT \"x\"\n+                              COLON2 \"::\"\n+                              PATH_SEGMENT\n+                                NAME_REF\n+                                  IDENT \"Y\"\n+                      R_PAREN \")\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "b43c38b9e04ff7c4514d89ec01d62b5a60b304f7", "filename": "crates/parser/test_data/parser/ok/0055_dot_dot_dot.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0055_dot_dot_dot.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0055_dot_dot_dot.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0055_dot_dot_dot.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0055_dot_dot_dot.rast"}, {"sha": "cd204f65ed9d0f0caff54b5728b0ad97918bdbd3", "filename": "crates/parser/test_data/parser/ok/0055_dot_dot_dot.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0055_dot_dot_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0055_dot_dot_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0055_dot_dot_dot.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0055_dot_dot_dot.rs"}, {"sha": "684f499df5c56e304054e677a055a33bc6a6c11d", "filename": "crates/parser/test_data/parser/ok/0055_dot_dot_dot.txt", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0055_dot_dot_dot.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0055_dot_dot_dot.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0055_dot_dot_dot.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,50 @@\n+SOURCE_FILE\n+  TYPE_ALIAS\n+    TYPE_KW \"type\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"X\"\n+    WHITESPACE \" \"\n+    EQ \"=\"\n+    WHITESPACE \" \"\n+    TUPLE_TYPE\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          TUPLE_PAT\n+            L_PAREN \"(\"\n+            R_PAREN \")\"\n+          COLON \":\"\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                COLON2 \"::\"\n+                NAME_REF\n+                  IDENT \"X\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          TUPLE_EXPR\n+            L_PAREN \"(\"\n+            R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "7393f1df83a08d071c64382ee1524960ad153ddb", "filename": "crates/parser/test_data/parser/ok/0056_neq_in_type.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0056_neq_in_type.rast"}, {"sha": "6210683cea36c94bc8458d58c2772369affd6b40", "filename": "crates/parser/test_data/parser/ok/0056_neq_in_type.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0056_neq_in_type.rs"}, {"sha": "2d78eaffc5244c4a3429f34342a2b99e87eaec92", "filename": "crates/parser/test_data/parser/ok/0056_neq_in_type.txt", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,66 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        IF_EXPR\n+          IF_KW \"if\"\n+          WHITESPACE \" \"\n+          CONDITION\n+            BIN_EXPR\n+              CAST_EXPR\n+                METHOD_CALL_EXPR\n+                  LITERAL\n+                    FLOAT_NUMBER \"1.0f32\"\n+                  DOT \".\"\n+                  NAME_REF\n+                    IDENT \"floor\"\n+                  ARG_LIST\n+                    L_PAREN \"(\"\n+                    R_PAREN \")\"\n+                WHITESPACE \" \"\n+                AS_KW \"as\"\n+                WHITESPACE \" \"\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"i64\"\n+              WHITESPACE \" \"\n+              NEQ \"!=\"\n+              WHITESPACE \" \"\n+              CAST_EXPR\n+                METHOD_CALL_EXPR\n+                  LITERAL\n+                    FLOAT_NUMBER \"1.0f32\"\n+                  DOT \".\"\n+                  NAME_REF\n+                    IDENT \"floor\"\n+                  ARG_LIST\n+                    L_PAREN \"(\"\n+                    R_PAREN \")\"\n+                WHITESPACE \" \"\n+                AS_KW \"as\"\n+                WHITESPACE \" \"\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"i64\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "f8efd8ea4ca2b7075f9a2cd00b0dc989b3a163be", "filename": "crates/parser/test_data/parser/ok/0057_loop_in_call.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0057_loop_in_call.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0057_loop_in_call.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0057_loop_in_call.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0057_loop_in_call.rast"}, {"sha": "31c12522ffca8533f93279a1871cd86646358fb6", "filename": "crates/parser/test_data/parser/ok/0057_loop_in_call.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0057_loop_in_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0057_loop_in_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0057_loop_in_call.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0057_loop_in_call.rs"}, {"sha": "67837e4750cbadfd8846c7b6dc2b0999417e6770", "filename": "crates/parser/test_data/parser/ok/0057_loop_in_call.txt", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0057_loop_in_call.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0057_loop_in_call.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0057_loop_in_call.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,59 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      PARAM\n+        IDENT_PAT\n+          NAME\n+            IDENT \"x\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        PATH_TYPE\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"i32\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"foo\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              LOOP_EXPR\n+                LOOP_KW \"loop\"\n+                WHITESPACE \" \"\n+                BLOCK_EXPR\n+                  STMT_LIST\n+                    L_CURLY \"{\"\n+                    R_CURLY \"}\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\""}, {"sha": "476a19307abd78d362cbc4dda3aa1f2f10f00cfc", "filename": "crates/parser/test_data/parser/ok/0058_unary_expr_precedence.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0058_unary_expr_precedence.rast"}, {"sha": "100fccc641cbd6fd64904be37217fc7ad4b4fa23", "filename": "crates/parser/test_data/parser/ok/0058_unary_expr_precedence.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0058_unary_expr_precedence.rs"}, {"sha": "683d5070aee7629ec359c6c8043699cfe9a4e792", "filename": "crates/parser/test_data/parser/ok/0058_unary_expr_precedence.txt", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,97 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          BIN_EXPR\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"1\"\n+              WHITESPACE \" \"\n+              PLUS \"+\"\n+              WHITESPACE \" \"\n+              PREFIX_EXPR\n+                STAR \"*\"\n+                REF_EXPR\n+                  AMP \"&\"\n+                  LITERAL\n+                    INT_NUMBER \"2\"\n+            WHITESPACE \" \"\n+            PLUS \"+\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"3\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CAST_EXPR\n+            PREFIX_EXPR\n+              STAR \"*\"\n+              REF_EXPR\n+                AMP \"&\"\n+                LITERAL\n+                  INT_NUMBER \"1\"\n+            WHITESPACE \" \"\n+            AS_KW \"as\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"u64\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          PREFIX_EXPR\n+            STAR \"*\"\n+            CALL_EXPR\n+              PATH_EXPR\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"x\"\n+              ARG_LIST\n+                L_PAREN \"(\"\n+                LITERAL\n+                  INT_NUMBER \"1\"\n+                R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          REF_EXPR\n+            AMP \"&\"\n+            INDEX_EXPR\n+              PATH_EXPR\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"x\"\n+              L_BRACK \"[\"\n+              LITERAL\n+                INT_NUMBER \"1\"\n+              R_BRACK \"]\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          RANGE_EXPR\n+            PREFIX_EXPR\n+              MINUS \"-\"\n+              LITERAL\n+                INT_NUMBER \"1\"\n+            DOT2 \"..\"\n+            LITERAL\n+              INT_NUMBER \"2\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "0cb1ccf044a7f28979db8bd56c942ae098636865", "filename": "crates/parser/test_data/parser/ok/0059_loops_in_parens.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0059_loops_in_parens.rast"}, {"sha": "6e8b718aaf9a09dd576886be6ac035234dce2095", "filename": "crates/parser/test_data/parser/ok/0059_loops_in_parens.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0059_loops_in_parens.rs"}, {"sha": "1eeb6c957f77ea179f087cf3ac53d8f9377c46b9", "filename": "crates/parser/test_data/parser/ok/0059_loops_in_parens.txt", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,101 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Some\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              FOR_EXPR\n+                FOR_KW \"for\"\n+                WHITESPACE \" \"\n+                WILDCARD_PAT\n+                  UNDERSCORE \"_\"\n+                WHITESPACE \" \"\n+                IN_KW \"in\"\n+                WHITESPACE \" \"\n+                METHOD_CALL_EXPR\n+                  ARRAY_EXPR\n+                    L_BRACK \"[\"\n+                    LITERAL\n+                      INT_NUMBER \"1\"\n+                    R_BRACK \"]\"\n+                  DOT \".\"\n+                  NAME_REF\n+                    IDENT \"into_iter\"\n+                  ARG_LIST\n+                    L_PAREN \"(\"\n+                    R_PAREN \")\"\n+                WHITESPACE \" \"\n+                BLOCK_EXPR\n+                  STMT_LIST\n+                    L_CURLY \"{\"\n+                    R_CURLY \"}\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Some\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              LOOP_EXPR\n+                LOOP_KW \"loop\"\n+                WHITESPACE \" \"\n+                BLOCK_EXPR\n+                  STMT_LIST\n+                    L_CURLY \"{\"\n+                    WHITESPACE \" \"\n+                    EXPR_STMT\n+                      BREAK_EXPR\n+                        BREAK_KW \"break\"\n+                      SEMICOLON \";\"\n+                    WHITESPACE \" \"\n+                    R_CURLY \"}\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CALL_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Some\"\n+            ARG_LIST\n+              L_PAREN \"(\"\n+              WHILE_EXPR\n+                WHILE_KW \"while\"\n+                WHITESPACE \" \"\n+                CONDITION\n+                  LITERAL\n+                    TRUE_KW \"true\"\n+                WHITESPACE \" \"\n+                BLOCK_EXPR\n+                  STMT_LIST\n+                    L_CURLY \"{\"\n+                    R_CURLY \"}\"\n+              R_PAREN \")\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "f692108505931af47e6731724ff965db88242052", "filename": "crates/parser/test_data/parser/ok/0060_as_range.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0060_as_range.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0060_as_range.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0060_as_range.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0060_as_range.rast"}, {"sha": "f063ffadb3db6a934fcebb7ad69bc2365928d57b", "filename": "crates/parser/test_data/parser/ok/0060_as_range.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0060_as_range.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0060_as_range.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0060_as_range.rs?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0060_as_range.rs"}, {"sha": "81fc02b6f4ad109f6b1312efeee11cebdd680eff", "filename": "crates/parser/test_data/parser/ok/0060_as_range.txt", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0060_as_range.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0060_as_range.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0060_as_range.txt?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "patch": "@@ -0,0 +1,56 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          RANGE_EXPR\n+            CAST_EXPR\n+              LITERAL\n+                INT_NUMBER \"0\"\n+              WHITESPACE \" \"\n+              AS_KW \"as\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"usize\"\n+            WHITESPACE \" \"\n+            DOT2 \"..\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          RANGE_EXPR\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"1\"\n+              WHITESPACE \" \"\n+              PLUS \"+\"\n+              WHITESPACE \" \"\n+              CAST_EXPR\n+                LITERAL\n+                  INT_NUMBER \"2\"\n+                WHITESPACE \" \"\n+                AS_KW \"as\"\n+                WHITESPACE \" \"\n+                PATH_TYPE\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"usize\"\n+            WHITESPACE \" \"\n+            DOT2 \"..\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "bcc8732c97370171b41d995a219172824ae90c8e", "filename": "crates/parser/test_data/parser/ok/0061_match_full_range.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0061_match_full_range.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0f74758fea243941f2555a056136a37c4e41c3dc/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0061_match_full_range.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0061_match_full_range.rast?ref=0f74758fea243941f2555a056136a37c4e41c3dc", "previous_filename": "crates/syntax/test_data/parser/ok/0061_match_full_range.rast"}]}