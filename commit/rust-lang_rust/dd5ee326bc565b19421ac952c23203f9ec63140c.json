{"sha": "dd5ee326bc565b19421ac952c23203f9ec63140c", "node_id": "C_kwDOAAsO6NoAKGRkNWVlMzI2YmM1NjViMTk0MjFhYzk1MmMyMzIwM2Y5ZWM2MzE0MGM", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-04T04:23:59Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-04T04:25:23Z"}, "message": "Justify why rustc_log exists", "tree": {"sha": "cd0712987db1fe397b08ba2e1beed7564bd9eb2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd0712987db1fe397b08ba2e1beed7564bd9eb2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd5ee326bc565b19421ac952c23203f9ec63140c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmHTzDMACgkQ+boUO5X/\nbYKOsg/9FoK0QQmLfZJD47LOTOJjIvhwNOG6dxA2DMYC7j2OEgtdmFyRBmxNMB3P\nbE17ZivRPiS8xRUJNAHiw2phvYmvYVU52F24xP/N2mM7v3voAmVkOVpCFVk4A9bG\nLlbxQ+XTN4riNy4WayRGL5d+Gie3yc7bSNXC78vSupapk3H7D9pn9Us70UHg9Daj\nWkp5KgdAgpmRnd8GqjthnhftCBFke8y4KYH1W83Fg/S+SxgKRXmCIq+jfKFTd25L\nJyIS314z58PfyZ0TKSnKnHlYE4MmXPodkDqcI4oGORp8D8tba3emn9z4cGwrjMIL\nyPGlurlObv5xSE9P0i4brbGHxg6wXSoRaPynR/Lht37zo2ZnB2y7vAiwMAyLdSZG\noDvDzJT0iTO8Y4cwL1Mcy/+gkUvecVUZJtEKjwUE25PFfpMnUV7/x6VaqadC8SHD\nXXX3FR6IRFWwX9je8aogPdMmrqnVKE3WtAUEUNJPRy5jve7DMviSD6Xmet7FOzup\nBzoFw+EW2CcJsIlN1qQYEnU8dIrIISuJEKhddH69+ox/nqIKyYd870ssD/ineKJV\nMVSgrX+SH4FGZq8nVhgdM2oOnLr4yDOXS64IOFR4wpVtuE7tQY5Z3cValht6cAMj\nrDWfY0wrfBwlB4iP31SM3DkU930FxE3FOovGrAxfgXSCJQWCQI0=\n=Ada0\n-----END PGP SIGNATURE-----", "payload": "tree cd0712987db1fe397b08ba2e1beed7564bd9eb2a\nparent 6152d15e7c06910a3fe1e7621f624ceaa9d010a8\nauthor David Tolnay <dtolnay@gmail.com> 1641270239 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1641270323 -0800\n\nJustify why rustc_log exists\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd5ee326bc565b19421ac952c23203f9ec63140c", "html_url": "https://github.com/rust-lang/rust/commit/dd5ee326bc565b19421ac952c23203f9ec63140c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd5ee326bc565b19421ac952c23203f9ec63140c/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6152d15e7c06910a3fe1e7621f624ceaa9d010a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6152d15e7c06910a3fe1e7621f624ceaa9d010a8", "html_url": "https://github.com/rust-lang/rust/commit/6152d15e7c06910a3fe1e7621f624ceaa9d010a8"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "44c76a7379bdaa3804feeabf2a5992f0e3b9b976", "filename": "compiler/rustc_log/src/lib.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/dd5ee326bc565b19421ac952c23203f9ec63140c/compiler%2Frustc_log%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd5ee326bc565b19421ac952c23203f9ec63140c/compiler%2Frustc_log%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_log%2Fsrc%2Flib.rs?ref=dd5ee326bc565b19421ac952c23203f9ec63140c", "patch": "@@ -1,5 +1,42 @@\n //! This crate allows tools to enable rust logging without having to magically\n //! match rustc's tracing crate version.\n+//!\n+//! For example if someone is working on rustc_ast and wants to write some\n+//! minimal code against it to run in a debugger, with access to the `debug!`\n+//! logs emitted by rustc_ast, that can be done by writing:\n+//!\n+//! ```toml\n+//! [dependencies]\n+//! rustc_ast = { path = \"../rust/compiler/rustc_ast\" }\n+//! rustc_log = { path = \"../rust/compiler/rustc_log\" }\n+//! rustc_span = { path = \"../rust/compiler/rustc_span\" }\n+//! ```\n+//!\n+//! ```ignore\n+//! fn main() {\n+//!     rustc_log::init_rustc_env_logger().unwrap();\n+//!\n+//!     let edition = rustc_span::edition::Edition::Edition2021;\n+//!     rustc_span::create_session_globals_then(edition, || {\n+//!         /* ... */\n+//!     });\n+//! }\n+//! ```\n+//!\n+//! Now `RUSTC_LOG=debug cargo run` will run your minimal main.rs and show\n+//! rustc's debug logging. In a workflow like this, one might also add\n+//! `std::env::set_var(\"RUSTC_LOG\", \"debug\")` to the top of main so that `cargo\n+//! run` by itself is sufficient to get logs.\n+//!\n+//! The reason rustc_log is a tiny separate crate, as opposed to exposing the\n+//! same things in rustc_driver only, is to enable the above workflow. If you\n+//! had to depend on rustc_driver in order to turn on rustc's debug logs, that's\n+//! an enormously bigger dependency tree; every change you make to rustc_ast (or\n+//! whichever piece of the compiler you are interested in) would involve\n+//! rebuilding all the rest of rustc up to rustc_driver in order to run your\n+//! main.rs. Whereas by depending only on rustc_log and the few crates you are\n+//! debugging, you can make changes inside those crates and quickly run main.rs\n+//! to read the debug logs.\n \n use std::env::{self, VarError};\n use std::fmt::{self, Display};"}]}