{"sha": "94134695b5c08af393da1c321913e10dd4b7c6e0", "node_id": "C_kwDOAAsO6NoAKDk0MTM0Njk1YjVjMDhhZjM5M2RhMWMzMjE5MTNlMTBkZDRiN2M2ZTA", "commit": {"author": {"name": "Marko Mijalkovic", "email": "marko.mijalkovic97@gmail.com", "date": "2022-01-16T21:55:07Z"}, "committer": {"name": "Marko Mijalkovic", "email": "marko.mijalkovic97@gmail.com", "date": "2022-06-07T14:24:09Z"}, "message": "Relax mipsel-sony-psp's linker script\n\nPreviously, the linker script forcefully kept all `.lib.stub` sections,\nunnecessarily bloating the binary. Now, the script is LTO and\n`--gc-sections` friendly.\n\n`--nmagic` was also added to the linker, because page alignment is not\nrequired on the PSP. This further reduces binary size.\n\nAccompanying changes for the PSP crate are found in:\nhttps://github.com/overdrivenpotato/rust-psp/pull/118", "tree": {"sha": "c719e25efb36c9c397b08a0b911ce37451660faa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c719e25efb36c9c397b08a0b911ce37451660faa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94134695b5c08af393da1c321913e10dd4b7c6e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94134695b5c08af393da1c321913e10dd4b7c6e0", "html_url": "https://github.com/rust-lang/rust/commit/94134695b5c08af393da1c321913e10dd4b7c6e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94134695b5c08af393da1c321913e10dd4b7c6e0/comments", "author": {"login": "overdrivenpotato", "id": 5241210, "node_id": "MDQ6VXNlcjUyNDEyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5241210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/overdrivenpotato", "html_url": "https://github.com/overdrivenpotato", "followers_url": "https://api.github.com/users/overdrivenpotato/followers", "following_url": "https://api.github.com/users/overdrivenpotato/following{/other_user}", "gists_url": "https://api.github.com/users/overdrivenpotato/gists{/gist_id}", "starred_url": "https://api.github.com/users/overdrivenpotato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/overdrivenpotato/subscriptions", "organizations_url": "https://api.github.com/users/overdrivenpotato/orgs", "repos_url": "https://api.github.com/users/overdrivenpotato/repos", "events_url": "https://api.github.com/users/overdrivenpotato/events{/privacy}", "received_events_url": "https://api.github.com/users/overdrivenpotato/received_events", "type": "User", "site_admin": false}, "committer": {"login": "overdrivenpotato", "id": 5241210, "node_id": "MDQ6VXNlcjUyNDEyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5241210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/overdrivenpotato", "html_url": "https://github.com/overdrivenpotato", "followers_url": "https://api.github.com/users/overdrivenpotato/followers", "following_url": "https://api.github.com/users/overdrivenpotato/following{/other_user}", "gists_url": "https://api.github.com/users/overdrivenpotato/gists{/gist_id}", "starred_url": "https://api.github.com/users/overdrivenpotato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/overdrivenpotato/subscriptions", "organizations_url": "https://api.github.com/users/overdrivenpotato/orgs", "repos_url": "https://api.github.com/users/overdrivenpotato/repos", "events_url": "https://api.github.com/users/overdrivenpotato/events{/privacy}", "received_events_url": "https://api.github.com/users/overdrivenpotato/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb55bd449e65e611da928560d948982d73e50027", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb55bd449e65e611da928560d948982d73e50027", "html_url": "https://github.com/rust-lang/rust/commit/bb55bd449e65e611da928560d948982d73e50027"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "c7ee52c2454bec0690836cbe57084a832486e526", "filename": "compiler/rustc_target/src/spec/mipsel_sony_psp.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/94134695b5c08af393da1c321913e10dd4b7c6e0/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsel_sony_psp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94134695b5c08af393da1c321913e10dd4b7c6e0/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsel_sony_psp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsel_sony_psp.rs?ref=94134695b5c08af393da1c321913e10dd4b7c6e0", "patch": "@@ -6,7 +6,10 @@ const LINKER_SCRIPT: &str = include_str!(\"./mipsel_sony_psp_linker_script.ld\");\n \n pub fn target() -> Target {\n     let mut pre_link_args = LinkArgs::new();\n-    pre_link_args.insert(LinkerFlavor::Lld(LldFlavor::Ld), vec![\"--emit-relocs\".into()]);\n+    pre_link_args.insert(\n+        LinkerFlavor::Lld(LldFlavor::Ld),\n+        vec![\"--emit-relocs\".into(), \"--nmagic\".into()],\n+    );\n \n     Target {\n         llvm_target: \"mipsel-sony-psp\".into(),"}, {"sha": "9eb35ad9f5d2e93e34080fbc018c99a9040eb5e9", "filename": "compiler/rustc_target/src/spec/mipsel_sony_psp_linker_script.ld", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/94134695b5c08af393da1c321913e10dd4b7c6e0/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsel_sony_psp_linker_script.ld", "raw_url": "https://github.com/rust-lang/rust/raw/94134695b5c08af393da1c321913e10dd4b7c6e0/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsel_sony_psp_linker_script.ld", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsel_sony_psp_linker_script.ld?ref=94134695b5c08af393da1c321913e10dd4b7c6e0", "patch": "@@ -7,14 +7,18 @@ SECTIONS\n   /* Sort stubs for convenient ordering */\n   .sceStub.text : { *(.sceStub.text) *(SORT(.sceStub.text.*)) }\n \n+  /* PSP import library stub sections. Bundles together `.lib.stub.entry.*`\n+   * sections for better `--gc-sections` support. */\n+  .lib.stub.top : { *(.lib.stub.top) }\n+  .lib.stub :     { *(.lib.stub) *(.lib.stub.entry.*) }\n+  .lib.stub.btm : { *(.lib.stub.btm) }\n+\n   /* Keep these sections around, even though they may appear unused to the linker */\n   .lib.ent.top :  { KEEP(*(.lib.ent.top)) }\n   .lib.ent :      { KEEP(*(.lib.ent)) }\n   .lib.ent.btm :  { KEEP(*(.lib.ent.btm)) }\n-  .lib.stub.top : { KEEP(*(.lib.stub.top)) }\n-  .lib.stub :     { KEEP(*(.lib.stub)) }\n-  .lib.stub.btm : { KEEP(*(.lib.stub.btm)) }\n-  .eh_frame_hdr : { KEEP(*(.eh_frame_hdr)) }\n+\n+  .eh_frame_hdr : { *(.eh_frame_hdr) }\n \n   /* Add symbols for LLVM's libunwind */\n   __eh_frame_hdr_start = SIZEOF(.eh_frame_hdr) > 0 ? ADDR(.eh_frame_hdr) : 0;\n@@ -27,8 +31,15 @@ SECTIONS\n   }\n \n   /* These are explicitly listed to avoid being merged into .rodata */\n-  .rodata.sceResident : { *(.rodata.sceResident) }\n+  .rodata.sceResident : { *(.rodata.sceResident) *(.rodata.sceResident.*) }\n   .rodata.sceModuleInfo : { *(.rodata.sceModuleInfo) }\n   /* Sort NIDs for convenient ordering */\n   .rodata.sceNid : { *(.rodata.sceNid) *(SORT(.rodata.sceNid.*)) }\n+\n+  .rodata : { *(.rodata .rodata.*) }\n+  .data : { *(.data .data.*) }\n+  .gcc_except_table : { *(.gcc_except_table .gcc_except_table.*) }\n+  .bss : { *(.bss .bss.*) }\n+\n+  /DISCARD/ : { *(.rel.sceStub.text .MIPS.abiflags .reginfo) }\n }"}]}