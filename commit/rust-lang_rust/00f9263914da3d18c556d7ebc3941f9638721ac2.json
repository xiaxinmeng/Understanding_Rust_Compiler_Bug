{"sha": "00f9263914da3d18c556d7ebc3941f9638721ac2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZjkyNjM5MTRkYTNkMThjNTU2ZDdlYmMzOTQxZjk2Mzg3MjFhYzI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-10T20:52:26Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-16T06:22:06Z"}, "message": "std: Add an adaptor for Writer => FormatWriter\n\nThis new method, write_fmt(), is the one way to write a formatted list of\narguments into a Writer stream. This has a special adaptor to preserve errors\nwhich occur on the writer.\n\nAll macros will be updated to use this method explicitly.", "tree": {"sha": "80977a9f7f258f26d5b612646670c374fd7457d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80977a9f7f258f26d5b612646670c374fd7457d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00f9263914da3d18c556d7ebc3941f9638721ac2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00f9263914da3d18c556d7ebc3941f9638721ac2", "html_url": "https://github.com/rust-lang/rust/commit/00f9263914da3d18c556d7ebc3941f9638721ac2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00f9263914da3d18c556d7ebc3941f9638721ac2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c06a0328a3c6824ff7578a6da46e133e9399854", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c06a0328a3c6824ff7578a6da46e133e9399854", "html_url": "https://github.com/rust-lang/rust/commit/3c06a0328a3c6824ff7578a6da46e133e9399854"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "497213df30f39b69fdd9eb740a116822cacb63ae", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/00f9263914da3d18c556d7ebc3941f9638721ac2/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00f9263914da3d18c556d7ebc3941f9638721ac2/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=00f9263914da3d18c556d7ebc3941f9638721ac2", "patch": "@@ -964,6 +964,42 @@ pub trait Writer {\n     /// decide whether their stream needs to be buffered or not.\n     fn flush(&mut self) -> IoResult<()> { Ok(()) }\n \n+    /// Writes a formatted string into this writer, returning any error\n+    /// encountered.\n+    ///\n+    /// This method is primarily used to interface with the `format_args!`\n+    /// macro, but it is rare that this should explicitly be called. The\n+    /// `write!` macro should be favored to invoke this method instead.\n+    ///\n+    /// # Errors\n+    ///\n+    /// This function will return any I/O error reported while formatting.\n+    fn write_fmt(&mut self, fmt: &fmt::Arguments) -> IoResult<()> {\n+        // Create a shim which translates a Writer to a FormatWriter and saves\n+        // off I/O errors. instead of discarding them\n+        struct Adaptor<'a, T> {\n+            inner: &'a mut T,\n+            error: IoResult<()>,\n+        }\n+        impl<'a, T: Writer> fmt::FormatWriter for Adaptor<'a, T> {\n+            fn write(&mut self, bytes: &[u8]) -> fmt::Result {\n+                match self.inner.write(bytes) {\n+                    Ok(()) => Ok(()),\n+                    Err(e) => {\n+                        self.error = Err(e);\n+                        Err(fmt::WriteError)\n+                    }\n+                }\n+            }\n+        }\n+\n+        let mut output = Adaptor { inner: self, error: Ok(()) };\n+        match fmt::write(&mut output, fmt) {\n+            Ok(()) => Ok(()),\n+            Err(..) => output.error\n+        }\n+    }\n+\n     /// Write a rust string into this sink.\n     ///\n     /// The bytes written will be the UTF-8 encoded version of the input string."}]}