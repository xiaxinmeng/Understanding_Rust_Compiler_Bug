{"sha": "5807fbbfde3ad04820f6fa0269711c81538057ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4MDdmYmJmZGUzYWQwNDgyMGY2ZmEwMjY5NzExYzgxNTM4MDU3ZWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-11T17:26:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-11T17:26:47Z"}, "message": "Auto merge of #32134 - jseyfried:forbid_type_alias_as_module, r=nikomatsakis\n\nForbid glob-importing from a type alias\n\nThis PR forbids glob-importing from a type alias or trait (fixes #30560):\n```rust\ntype Alias = ();\nuse Alias::*; // This is currently allowed but shouldn't be\n```\n\nThis is a [breaking-change]. Since the disallowed glob imports don't actually import anything, any breakage can be fixed by removing the offending glob import.\n\nr? @alexcrichton", "tree": {"sha": "cc108741a3523592608f23c2a0ea0783925469c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc108741a3523592608f23c2a0ea0783925469c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5807fbbfde3ad04820f6fa0269711c81538057ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5807fbbfde3ad04820f6fa0269711c81538057ec", "html_url": "https://github.com/rust-lang/rust/commit/5807fbbfde3ad04820f6fa0269711c81538057ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5807fbbfde3ad04820f6fa0269711c81538057ec/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aeb85a953322df7773095186e9762f3fe73375e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/aeb85a953322df7773095186e9762f3fe73375e2", "html_url": "https://github.com/rust-lang/rust/commit/aeb85a953322df7773095186e9762f3fe73375e2"}, {"sha": "1a6092e05cecdaef984b2b0174089e6ae8c24181", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a6092e05cecdaef984b2b0174089e6ae8c24181", "html_url": "https://github.com/rust-lang/rust/commit/1a6092e05cecdaef984b2b0174089e6ae8c24181"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "dba7d178b4c91d2665d7eaa0e236a0c19fcb0f39", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5807fbbfde3ad04820f6fa0269711c81538057ec/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5807fbbfde3ad04820f6fa0269711c81538057ec/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=5807fbbfde3ad04820f6fa0269711c81538057ec", "patch": "@@ -330,10 +330,8 @@ impl<'a, 'b:'a, 'tcx:'b> GraphBuilder<'a, 'b, 'tcx> {\n \n             // These items live in the type namespace.\n             ItemTy(..) => {\n-                let parent_link = ModuleParentLink(parent, name);\n                 let def = Def::TyAlias(self.ast_map.local_def_id(item.id));\n-                let module = self.new_module(parent_link, Some(def), false, is_public);\n-                self.define(parent, name, TypeNS, (module, sp));\n+                self.define(parent, name, TypeNS, (def, sp, modifiers));\n                 parent\n             }\n \n@@ -495,7 +493,7 @@ impl<'a, 'b:'a, 'tcx:'b> GraphBuilder<'a, 'b, 'tcx> {\n         }\n \n         match def {\n-            Def::Mod(_) | Def::ForeignMod(_) | Def::Enum(..) | Def::TyAlias(..) => {\n+            Def::Mod(_) | Def::ForeignMod(_) | Def::Enum(..) => {\n                 debug!(\"(building reduced graph for external crate) building module {} {}\",\n                        final_ident,\n                        is_public);\n@@ -548,7 +546,7 @@ impl<'a, 'b:'a, 'tcx:'b> GraphBuilder<'a, 'b, 'tcx> {\n                 let module = self.new_module(parent_link, Some(def), true, is_public);\n                 self.try_define(new_parent, name, TypeNS, (module, DUMMY_SP));\n             }\n-            Def::AssociatedTy(..) => {\n+            Def::TyAlias(..) | Def::AssociatedTy(..) => {\n                 debug!(\"(building reduced graph for external crate) building type {}\",\n                        final_ident);\n                 self.try_define(new_parent, name, TypeNS, (def, DUMMY_SP, modifiers));"}, {"sha": "ea16211c40d061e628bbb44658d210e8886fdd11", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5807fbbfde3ad04820f6fa0269711c81538057ec/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5807fbbfde3ad04820f6fa0269711c81538057ec/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=5807fbbfde3ad04820f6fa0269711c81538057ec", "patch": "@@ -607,6 +607,10 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n                            target_module: Module<'b>,\n                            directive: &'b ImportDirective)\n                            -> ResolveResult<()> {\n+        if let Some(Def::Trait(_)) = target_module.def {\n+            self.resolver.session.span_err(directive.span, \"items in traits are not importable.\");\n+        }\n+\n         if module_.def_id() == target_module.def_id() {\n             // This means we are trying to glob import a module into itself, and it is a no-go\n             let msg = \"Cannot glob-import a module into itself.\".into();"}, {"sha": "71c7e6009655b7e514eb7d0241e9b7ed182fdb90", "filename": "src/test/compile-fail/issue-30560.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5807fbbfde3ad04820f6fa0269711c81538057ec/src%2Ftest%2Fcompile-fail%2Fissue-30560.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5807fbbfde3ad04820f6fa0269711c81538057ec/src%2Ftest%2Fcompile-fail%2Fissue-30560.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-30560.rs?ref=5807fbbfde3ad04820f6fa0269711c81538057ec", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+type Alias = ();\n+use Alias::*; //~ ERROR Not a module\n+use std::io::Result::*; //~ ERROR Not a module\n+\n+trait T {}\n+use T::*; //~ ERROR items in traits are not importable\n+\n+fn main() {}"}]}