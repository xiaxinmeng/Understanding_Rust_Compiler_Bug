{"sha": "01f10dead316aaff615fcff5955d1db0c7f22936", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZjEwZGVhZDMxNmFhZmY2MTVmY2ZmNTk1NWQxZGIwYzdmMjI5MzY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-14T23:43:44Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-15T04:53:40Z"}, "message": "Rollup merge of #23351 - nagisa:rustdoc-lines-2, r=alexcrichton\n\n Previously it would fail on a trivial case like\n\n    /// Summary line\n    /// <trailing space>\n    /// Regular content\n\nCompliant markdown preprocessor would render that as two separate paragraphs, but our summary line\nextractor interprets both lines as the same paragraph and includes both into the short summary resulting in\n![screenshot from 2015-03-13 22 47 08](https://cloud.githubusercontent.com/assets/679122/6648596/7ef792b2-c9e4-11e4-9c19-704c288ec4de.png)", "tree": {"sha": "97c37a8547d990a9c8e5c8e43e41ee4179288d26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97c37a8547d990a9c8e5c8e43e41ee4179288d26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01f10dead316aaff615fcff5955d1db0c7f22936", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01f10dead316aaff615fcff5955d1db0c7f22936", "html_url": "https://github.com/rust-lang/rust/commit/01f10dead316aaff615fcff5955d1db0c7f22936", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01f10dead316aaff615fcff5955d1db0c7f22936/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c85a9d20f6d764f80e55132f821dcd996921327", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c85a9d20f6d764f80e55132f821dcd996921327", "html_url": "https://github.com/rust-lang/rust/commit/8c85a9d20f6d764f80e55132f821dcd996921327"}, {"sha": "b09e5daa89b6dbfe93b9db7a66b670ca6d1b5f4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b09e5daa89b6dbfe93b9db7a66b670ca6d1b5f4a", "html_url": "https://github.com/rust-lang/rust/commit/b09e5daa89b6dbfe93b9db7a66b670ca6d1b5f4a"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "f97470dbaed758d885165bed8c20e67c334d0c98", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/01f10dead316aaff615fcff5955d1db0c7f22936/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01f10dead316aaff615fcff5955d1db0c7f22936/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=01f10dead316aaff615fcff5955d1db0c7f22936", "patch": "@@ -453,7 +453,7 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> io::Result<String> {\n                         ty: shortty(item),\n                         name: item.name.clone().unwrap(),\n                         path: fqp[..fqp.len() - 1].connect(\"::\"),\n-                        desc: shorter(item.doc_value()).to_string(),\n+                        desc: shorter(item.doc_value()),\n                         parent: Some(did),\n                         search_type: None,\n                     });\n@@ -935,7 +935,7 @@ impl DocFolder for Cache {\n                         ty: shortty(&item),\n                         name: s.to_string(),\n                         path: path.connect(\"::\").to_string(),\n-                        desc: shorter(item.doc_value()).to_string(),\n+                        desc: shorter(item.doc_value()),\n                         parent: parent,\n                         search_type: get_index_search_type(&item, parent_basename),\n                     });\n@@ -1527,13 +1527,14 @@ fn full_path(cx: &Context, item: &clean::Item) -> String {\n     return s\n }\n \n-fn shorter<'a>(s: Option<&'a str>) -> &'a str {\n+fn shorter<'a>(s: Option<&'a str>) -> String {\n     match s {\n-        Some(s) => match s.find(\"\\n\\n\") {\n-            Some(pos) => &s[..pos],\n-            None => s,\n-        },\n-        None => \"\"\n+        Some(s) => s.lines().take_while(|line|{\n+            (*line).chars().any(|chr|{\n+                !chr.is_whitespace()\n+            })\n+        }).collect::<Vec<_>>().connect(\"\\n\"),\n+        None => \"\".to_string()\n     }\n }\n \n@@ -1663,7 +1664,7 @@ fn item_module(w: &mut fmt::Formatter, cx: &Context,\n                     </tr>\n                 \",\n                 *myitem.name.as_ref().unwrap(),\n-                Markdown(shorter(myitem.doc_value())),\n+                Markdown(&shorter(myitem.doc_value())[..]),\n                 class = shortty(myitem),\n                 href = item_path(myitem),\n                 title = full_path(cx, myitem),"}]}