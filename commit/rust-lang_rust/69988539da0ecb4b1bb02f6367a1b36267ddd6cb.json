{"sha": "69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5OTg4NTM5ZGEwZWNiNGIxYmIwMmY2MzY3YTFiMzYyNjdkZGQ2Y2I=", "commit": {"author": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-11-02T23:58:00Z"}, "committer": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-11-03T20:05:38Z"}, "message": "Add tests for E-needstest issues", "tree": {"sha": "0cde54a407c0cb3265957040478969cf367d05f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cde54a407c0cb3265957040478969cf367d05f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "html_url": "https://github.com/rust-lang/rust/commit/69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/comments", "author": null, "committer": null, "parents": [{"sha": "3327ecca422046699315122345c6c050ab73804b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3327ecca422046699315122345c6c050ab73804b", "html_url": "https://github.com/rust-lang/rust/commit/3327ecca422046699315122345c6c050ab73804b"}], "stats": {"total": 308, "additions": 303, "deletions": 5}, "files": [{"sha": "44f6cd7719d1db73c917c4c31d4ad8d58cee05b8", "filename": "src/test/compile-fail/issue-11382.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Fcompile-fail%2Fissue-11382.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Fcompile-fail%2Fissue-11382.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-11382.rs?ref=69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+panic!(\n+    1.2\n+//~^ ERROR cannot determine the type of this number; add a suffix to specify the type explicitly\n+);\n+}"}, {"sha": "7ce23e1f6ac7971db75d516a2a4d243f92f88487", "filename": "src/test/compile-fail/issue-11771.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Fcompile-fail%2Fissue-11771.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Fcompile-fail%2Fissue-11771.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-11771.rs?ref=69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let x = ();\n+    1 +\n+    x //~ ERROR mismatched types: expected `_`, found `()` (expected integral variable, found ())\n+    ;\n+\n+    let x: () = ();\n+    1 +\n+    x //~ ERROR mismatched types: expected `_`, found `()` (expected integral variable, found ())\n+    ;\n+}"}, {"sha": "5203c91237be845ec3fca3443df84c8702c3e7e2", "filename": "src/test/compile-fail/issue-13058.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Fcompile-fail%2Fissue-13058.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Fcompile-fail%2Fissue-13058.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-13058.rs?ref=69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "patch": "@@ -0,0 +1,39 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::iter::{Range,range};\n+\n+trait Itble<'r, T, I: Iterator<T>> { fn iter(&'r self) -> I; }\n+\n+impl<'r> Itble<'r, uint, Range<uint>> for (uint, uint) {\n+    fn iter(&'r self) -> Range<uint> {\n+        let &(min, max) = self;\n+        range(min, max)\n+    }\n+}\n+\n+fn check<'r, I: Iterator<uint>, T: Itble<'r, uint, I>>(cont: &T) -> bool\n+//~^ HELP as shown: fn check<'r, I: Iterator<uint>, T: Itble<'r, uint, I>>(cont: &'r T) -> bool\n+{\n+    let cont_iter = cont.iter();\n+//~^ ERROR cannot infer an appropriate lifetime for autoref due to conflicting requirements\n+    let result = cont_iter.fold(Some(0u16), |state, val| {\n+        state.map_or(None, |mask| {\n+            let bit = 1 << val;\n+            if mask & bit == 0 {Some(mask|bit)} else {None}\n+        })\n+    });\n+    result.is_some()\n+}\n+\n+fn main() {\n+    check((3u, 5u));\n+//~^ ERROR mismatched types: expected `&_`, found `(uint, uint)` (expected &-ptr, found tuple)\n+}"}, {"sha": "3ba8dd4fefef0109ac6682c5823343a6a8ae9036", "filename": "src/test/compile-fail/issue-2718-a.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Fcompile-fail%2Fissue-2718-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Fcompile-fail%2Fissue-2718-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2718-a.rs?ref=69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "patch": "@@ -8,18 +8,15 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-test\n-\n pub struct send_packet<T> {\n-  p: T\n+    p: T\n }\n \n-\n mod pingpong {\n     use send_packet;\n     pub type ping = send_packet<pong>;\n     pub struct pong(send_packet<ping>);\n-    //~^ ERROR illegal recursive enum type; wrap the inner value in a box to make it representable\n+    //~^ ERROR illegal recursive struct type; wrap the inner value in a box to make it representable\n }\n \n fn main() {}"}, {"sha": "ce04f188e341fbe85308da222e9bc4c3df9365ab", "filename": "src/test/run-pass/issue-10396.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-10396.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-10396.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10396.rs?ref=69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[deriving(Show)]\n+enum Foo<'s> {\n+    V(&'s str)\n+}\n+\n+fn f(arr: &[&Foo]) {\n+    for &f in arr.iter() {\n+        println!(\"{}\", f);\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "78f125398edcba56abd35835abeb38107e8e1e70", "filename": "src/test/run-pass/issue-10501.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-10501.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-10501.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10501.rs?ref=69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub type Foo = fn(&int) -> ();\n+#[deriving(Clone)]\n+enum Baz { Bar(Foo) }\n+fn main() {}"}, {"sha": "e41613b4ae3057d4e7f8ad81ecf4b4ce96ca7853", "filename": "src/test/run-pass/issue-12741.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-12741.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-12741.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-12741.rs?ref=69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[deriving(Clone)]\n+pub struct Foo {\n+    f: fn(char, |char| -> char) -> char\n+}\n+\n+impl Foo {\n+    fn bar(&self) -> char {\n+        ((*self).f)('a', |c: char| c)\n+    }\n+}\n+\n+fn bla(c: char, cb: |char| -> char) -> char {\n+    cb(c)\n+}\n+\n+pub fn make_foo() -> Foo {\n+    Foo {\n+        f: bla\n+    }\n+}\n+\n+fn main() {\n+    let a = make_foo();\n+    assert_eq!(a.bar(), 'a');\n+}"}, {"sha": "0b7eb41d2aac1b3e4b18ffbf74ea0c09f4aced1e", "filename": "src/test/run-pass/issue-15063.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-15063.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-15063.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15063.rs?ref=69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Two { A, B}\n+impl Drop for Two {\n+    fn drop(&mut self) {\n+        println!(\"Dropping!\");\n+    }\n+}\n+fn main() {\n+    let k = A;\n+}"}, {"sha": "ea5bd550d53da5fa9027f6a4be67f1abd487f169", "filename": "src/test/run-pass/issue-15734.rs", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-15734.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-15734.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15734.rs?ref=69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "patch": "@@ -0,0 +1,56 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Mat<T> { data: Vec<T>, cols: uint, }\n+\n+impl<T> Mat<T> {\n+    fn new(data: Vec<T>, cols: uint) -> Mat<T> {\n+        Mat { data: data, cols: cols }\n+    }\n+    fn row<'a>(&'a self, row: uint) -> Row<&'a Mat<T>> {\n+        Row { mat: self, row: row, }\n+    }\n+}\n+\n+impl<T> Index<(uint, uint), T> for Mat<T> {\n+    fn index<'a>(&'a self, &(row, col): &(uint, uint)) -> &'a T {\n+        &self.data[row * self.cols + col]\n+    }\n+}\n+\n+impl<'a, T> Index<(uint, uint), T> for &'a Mat<T> {\n+    fn index<'b>(&'b self, index: &(uint, uint)) -> &'b T {\n+        (*self).index(index)\n+    }\n+}\n+\n+struct Row<M> { mat: M, row: uint, }\n+\n+impl<T, M: Index<(uint, uint), T>> Index<uint, T> for Row<M> {\n+    fn index<'a>(&'a self, col: &uint) -> &'a T {\n+        &self.mat[(self.row, *col)]\n+    }\n+}\n+\n+fn main() {\n+    let m = Mat::new(vec!(1u, 2, 3, 4, 5, 6), 3);\n+    let r = m.row(1);\n+\n+    assert!(r.index(&2) == &6);\n+    assert!(r[2] == 6);\n+    assert!(r[2u] == 6u);\n+    assert!(6 == r[2]);\n+\n+    let e = r[2];\n+    assert!(e == 6);\n+\n+    let e: uint = r[2];\n+    assert!(e == 6);\n+}"}, {"sha": "f996f9309c135b0537d1c8b9e8c8aa8c5ab00793", "filename": "src/test/run-pass/issue-16774.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-16774.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-16774.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16774.rs?ref=69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "patch": "@@ -0,0 +1,50 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(overloaded_calls, unboxed_closures)]\n+\n+struct X(Box<int>);\n+\n+static mut DESTRUCTOR_RAN: bool = false;\n+\n+impl Drop for X {\n+    fn drop(&mut self) {\n+        unsafe {\n+            assert!(!DESTRUCTOR_RAN);\n+            DESTRUCTOR_RAN = true;\n+        }\n+    }\n+}\n+\n+impl Deref<int> for X {\n+    fn deref(&self) -> &int {\n+        let &X(box ref x) = self;\n+        x\n+    }\n+}\n+\n+impl DerefMut<int> for X {\n+    fn deref_mut(&mut self) -> &mut int {\n+        let &X(box ref mut x) = self;\n+        x\n+    }\n+}\n+\n+fn main() {\n+    {\n+        let mut test = X(box 5i);\n+        {\n+            let mut change = |&mut:| { *test = 10 };\n+            change();\n+        }\n+        assert_eq!(*test, 10);\n+    }\n+    assert!(unsafe { DESTRUCTOR_RAN });\n+}"}, {"sha": "3d6b23c8805fc4e96814096db3dbc64595cf0e90", "filename": "src/test/run-pass/issue-18110.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-18110.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-18110.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18110.rs?ref=69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    ({return},);\n+}"}, {"sha": "8aa95927312301e173692511acf7643277cd7fb2", "filename": "src/test/run-pass/issue-7268.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-7268.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69988539da0ecb4b1bb02f6367a1b36267ddd6cb/src%2Ftest%2Frun-pass%2Fissue-7268.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7268.rs?ref=69988539da0ecb4b1bb02f6367a1b36267ddd6cb", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn foo<T: 'static>(_: T) {}\n+\n+fn bar<T>(x: &'static T) {\n+    foo(x);\n+}\n+fn main() {}"}]}