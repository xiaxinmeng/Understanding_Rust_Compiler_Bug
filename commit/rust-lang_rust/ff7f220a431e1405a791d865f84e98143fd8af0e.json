{"sha": "ff7f220a431e1405a791d865f84e98143fd8af0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmN2YyMjBhNDMxZTE0MDVhNzkxZDg2NWY4NGU5ODE0M2ZkOGFmMGU=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-07-17T12:49:19Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-07-22T18:38:40Z"}, "message": "Don\u2019t create NonZero(0) in test/ui/print_type_sizes/nullable.rs", "tree": {"sha": "5861665eac13626c2dbd048cbeed7cbbc680160f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5861665eac13626c2dbd048cbeed7cbbc680160f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff7f220a431e1405a791d865f84e98143fd8af0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff7f220a431e1405a791d865f84e98143fd8af0e", "html_url": "https://github.com/rust-lang/rust/commit/ff7f220a431e1405a791d865f84e98143fd8af0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff7f220a431e1405a791d865f84e98143fd8af0e/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f732911cf568f8f7b98dbcfd85241e299d2c8418", "url": "https://api.github.com/repos/rust-lang/rust/commits/f732911cf568f8f7b98dbcfd85241e299d2c8418", "html_url": "https://github.com/rust-lang/rust/commit/f732911cf568f8f7b98dbcfd85241e299d2c8418"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "a8f07d8d95569d7e0a674f276076de53c35a8a82", "filename": "src/test/ui/print_type_sizes/nullable.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ff7f220a431e1405a791d865f84e98143fd8af0e/src%2Ftest%2Fui%2Fprint_type_sizes%2Fnullable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff7f220a431e1405a791d865f84e98143fd8af0e/src%2Ftest%2Fui%2Fprint_type_sizes%2Fnullable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fnullable.rs?ref=ff7f220a431e1405a791d865f84e98143fd8af0e", "patch": "@@ -42,7 +42,7 @@ impl Default for EmbeddedDiscr {\n }\n \n #[derive(Default)]\n-pub struct IndirectNonZero<T: Zeroable> {\n+pub struct IndirectNonZero<T: Zeroable + One> {\n     pre: u8,\n     nested: NestedNonZero<T>,\n     post: u16,\n@@ -54,14 +54,22 @@ pub struct NestedNonZero<T: Zeroable> {\n     post: u16,\n }\n \n-impl<T: Zeroable+Default> Default for NestedNonZero<T> {\n+impl<T: Zeroable+One> Default for NestedNonZero<T> {\n     fn default() -> Self {\n         unsafe {\n-            NestedNonZero { pre: 0, val: NonZero::new_unchecked(Default::default()), post: 0 }\n+            NestedNonZero { pre: 0, val: NonZero::new_unchecked(T::one()), post: 0 }\n         }\n     }\n }\n \n+pub trait One {\n+    fn one() -> Self;\n+}\n+\n+impl One for u32 {\n+    fn one() -> Self { 1 }\n+}\n+\n pub fn main() {\n     let _x: MyOption<NonZero<u32>> = Default::default();\n     let _y: EmbeddedDiscr = Default::default();"}]}