{"sha": "e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MjkzNTVlY2ExMGIxZDhkNGU1NWRkZDQxNTQ5ZDViZjBhNjg1YWE=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-15T17:55:03Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-15T17:55:03Z"}, "message": "Merge #129\n\n129: 2018 r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "872ab3701dcd27207fab5531269a66d205c74539", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/872ab3701dcd27207fab5531269a66d205c74539"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "html_url": "https://github.com/rust-lang/rust/commit/e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "a230b438e025c5878b8d17e11d3928cbad95bb28", "url": "https://api.github.com/repos/rust-lang/rust/commits/a230b438e025c5878b8d17e11d3928cbad95bb28", "html_url": "https://github.com/rust-lang/rust/commit/a230b438e025c5878b8d17e11d3928cbad95bb28"}, {"sha": "9a98d8e99acf8acd40b2153847a37551d2a8d0f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a98d8e99acf8acd40b2153847a37551d2a8d0f4", "html_url": "https://github.com/rust-lang/rust/commit/9a98d8e99acf8acd40b2153847a37551d2a8d0f4"}], "stats": {"total": 252, "additions": 154, "deletions": 98}, "files": [{"sha": "33dc7803ed9ad839300f44031ebcaec5dead9fe8", "filename": ".travis.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,7 +1,7 @@\n matrix:\n   include:\n     - language: rust\n-      rust: stable\n+      rust: beta\n       script:\n         - cargo gen-kinds --verify\n         - cargo gen-tests --verify"}, {"sha": "c3056bcfd0e6d07355d453f3d62ad3ce3909f168", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -16,7 +16,8 @@ functionality is provided via a language server.\n \n ## Quick Start\n \n-Rust analyzer builds on stable Rust >= 1.29.0.\n+Rust analyzer builds on Rust >= 1.30.0 (currently in beta) and uses\n+the 2018 edition.\n \n ```\n # run tests"}, {"sha": "a32a1e7b8a580287dd54a083a9e12e30cd8ef14e", "filename": "appveyor.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -2,7 +2,7 @@ os: Visual Studio 2015\n \n install:\n   - curl https://win.rustup.rs/ --output rustup-init.exe\n-  - rustup-init -yv --default-toolchain stable --default-host x86_64-pc-windows-msvc\n+  - rustup-init -yv --default-toolchain beta --default-host x86_64-pc-windows-msvc\n   - set PATH=%PATH%;%USERPROFILE%\\.cargo\\bin\n   - rustc -vV\n   - cargo -vV"}, {"sha": "28d95c58139f560f376fe36945ef559731753add", "filename": "crates/ra_analysis/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2FCargo.toml?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,4 +1,5 @@\n [package]\n+edition = \"2018\"\n name = \"ra_analysis\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]"}, {"sha": "7669b6184550c61efd33315987dd8964765cb47d", "filename": "crates/ra_analysis/src/db/imp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Fdb%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Fdb%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb%2Fimp.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -7,7 +7,7 @@ use std::{\n };\n use rustc_hash::FxHashMap;\n use salsa;\n-use {FileId, imp::FileResolverImp};\n+use crate::{FileId, imp::FileResolverImp};\n use super::{State, Query, QueryCtx};\n \n pub(super) type Data = Arc<Any + Send + Sync + 'static>;\n@@ -51,7 +51,7 @@ pub(crate) trait EvalQuery {\n     type Output;\n     fn query_type(&self) -> salsa::QueryTypeId;\n     fn f(&self) -> salsa::QueryFn<State, Data>;\n-    fn get(&self, &QueryCtx, Self::Params) -> Arc<Self::Output>;\n+    fn get(&self, ctx: &QueryCtx, params: Self::Params) -> Arc<Self::Output>;\n }\n \n impl<T, R> EvalQuery for Query<T, R>"}, {"sha": "4eb7d922d9bc46c35b779d3aa5236ec2095c8077", "filename": "crates/ra_analysis/src/db/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Fdb%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Fdb%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb%2Fmod.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -5,7 +5,7 @@ use std::{\n };\n use im;\n use salsa;\n-use {FileId, imp::FileResolverImp};\n+use crate::{FileId, imp::FileResolverImp};\n \n #[derive(Debug, Default, Clone)]\n pub(crate) struct State {\n@@ -75,8 +75,8 @@ pub(crate) fn file_set(ctx: QueryCtx) -> Arc<(Vec<FileId>, FileResolverImp)> {\n impl QueryRegistry {\n     fn new() -> QueryRegistry {\n         let mut reg = QueryRegistry { imp: imp::QueryRegistry::new() };\n-        ::queries::register_queries(&mut reg);\n-        ::module_map::register_queries(&mut reg);\n+        crate::queries::register_queries(&mut reg);\n+        crate::module_map::register_queries(&mut reg);\n         reg\n     }\n     pub(crate) fn add<Q: imp::EvalQuery>(&mut self, q: Q, name: &'static str) {"}, {"sha": "f26dac8753ebac482a97c0ecea33b22d551047e4", "filename": "crates/ra_analysis/src/descriptors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Fdescriptors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Fdescriptors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -7,7 +7,7 @@ use ra_syntax::{\n     ast::{self, NameOwner, AstNode},\n     text_utils::is_subrange\n };\n-use {\n+use crate::{\n     FileId,\n     imp::FileResolverImp,\n };\n@@ -271,4 +271,4 @@ impl FnDescriptor {\n         }\n         res\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "26f5e175b77e78479c85d41292fa24fc8f551f82", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -17,7 +17,7 @@ use ra_syntax::{\n     ast::{self, NameOwner, ArgListOwner, Expr},\n };\n \n-use {\n+use crate::{\n     FileId, FileResolver, Query, Diagnostic, SourceChange, SourceFileEdit, Position, FileSystemEdit,\n     JobToken, CrateGraph, CrateId,\n     roots::{SourceRoot, ReadonlySourceRoot, WritableSourceRoot},\n@@ -458,4 +458,4 @@ impl<'a> FnCallNode<'a> {\n             FnCallNode::MethodCallExpr(expr) => expr.arg_list()\n         }\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "86c66236ce9ddd3a8ce36fcd73a7efd83f80a16d", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -29,16 +29,18 @@ use std::{\n \n use relative_path::{RelativePath, RelativePathBuf};\n use ra_syntax::{File, TextRange, TextUnit, AtomEdit};\n-use imp::{AnalysisImpl, AnalysisHostImpl, FileResolverImp};\n use rustc_hash::FxHashMap;\n+use crate::imp::{AnalysisImpl, AnalysisHostImpl, FileResolverImp};\n \n pub use ra_editor::{\n     StructureNode, LineIndex, FileSymbol,\n     Runnable, RunnableKind, HighlightedRange, CompletionItem,\n     Fold, FoldKind\n };\n-pub use job::{JobToken, JobHandle};\n-pub use descriptors::FnDescriptor;\n+pub use crate::{\n+    job::{JobToken, JobHandle},\n+    descriptors::FnDescriptor,\n+};\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct FileId(pub u32);"}, {"sha": "c77c5cec61a0bd1f6386b9c80b27291a34e7793c", "filename": "crates/ra_analysis/src/module_map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Fmodule_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Fmodule_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fmodule_map.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,5 +1,5 @@\n use std::sync::Arc;\n-use {\n+use crate::{\n     FileId,\n     db::{\n         Query, QueryRegistry, QueryCtx,\n@@ -38,7 +38,7 @@ mod tests {\n     use std::collections::HashMap;\n     use im;\n     use relative_path::{RelativePath, RelativePathBuf};\n-    use {\n+    use crate::{\n         db::{Db},\n         imp::FileResolverImp,\n         FileId, FileResolver,"}, {"sha": "613bf1e61031f40fd28eba72fd39396808150d5e", "filename": "crates/ra_analysis/src/queries.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fqueries.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,13 +1,13 @@\n use std::sync::Arc;\n use ra_syntax::File;\n use ra_editor::LineIndex;\n-use {\n+use crate::{\n     FileId,\n     db::{Query, QueryCtx, QueryRegistry},\n     symbol_index::SymbolIndex,\n };\n \n-pub(crate) use db::{file_text, file_set};\n+pub(crate) use crate::db::{file_text, file_set};\n \n pub(crate) fn file_syntax(ctx: QueryCtx, file_id: FileId) -> File {\n     (&*ctx.get(FILE_SYNTAX, file_id)).clone()"}, {"sha": "208acc4c22f4d06bc23c633ecc9574d4fd6dc019", "filename": "crates/ra_analysis/src/roots.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Froots.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Froots.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Froots.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -9,7 +9,7 @@ use rustc_hash::FxHashMap;\n use ra_editor::LineIndex;\n use ra_syntax::File;\n \n-use {\n+use crate::{\n     FileId,\n     imp::FileResolverImp,\n     symbol_index::SymbolIndex,\n@@ -62,23 +62,23 @@ impl WritableSourceRoot {\n \n impl SourceRoot for WritableSourceRoot {\n     fn module_tree(&self) -> Arc<ModuleTreeDescriptor> {\n-        self.db.make_query(::module_map::module_tree)\n+        self.db.make_query(crate::module_map::module_tree)\n     }\n \n     fn contains(&self, file_id: FileId) -> bool {\n         self.db.state().file_map.contains_key(&file_id)\n     }\n     fn lines(&self, file_id: FileId) -> Arc<LineIndex> {\n-        self.db.make_query(|ctx| ::queries::file_lines(ctx, file_id))\n+        self.db.make_query(|ctx| crate::queries::file_lines(ctx, file_id))\n     }\n     fn syntax(&self, file_id: FileId) -> File {\n-        self.db.make_query(|ctx| ::queries::file_syntax(ctx, file_id))\n+        self.db.make_query(|ctx| crate::queries::file_syntax(ctx, file_id))\n     }\n     fn symbols<'a>(&'a self, acc: &mut Vec<Arc<SymbolIndex>>) {\n         self.db.make_query(|ctx| {\n-            let file_set = ::queries::file_set(ctx);\n+            let file_set = crate::queries::file_set(ctx);\n             let syms = file_set.0.iter()\n-                .map(|file_id| ::queries::file_symbols(ctx, *file_id));\n+                .map(|file_id| crate::queries::file_symbols(ctx, *file_id));\n             acc.extend(syms);\n         });\n     }"}, {"sha": "e5d83d365ce582b89221b4800ffc6bc3d2ae4524", "filename": "crates/ra_analysis/src/symbol_index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -9,7 +9,7 @@ use ra_syntax::{\n };\n use fst::{self, Streamer};\n use rayon::prelude::*;\n-use {Query, FileId, JobToken};\n+use crate::{Query, FileId, JobToken};\n \n #[derive(Debug)]\n pub(crate) struct SymbolIndex {"}, {"sha": "0b8d6f3dd817562507bf6ba8dc8850b1d462b703", "filename": "crates/ra_cli/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_cli%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_cli%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2FCargo.toml?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,4 +1,5 @@\n [package]\n+edition = \"2018\"\n name = \"ra_cli\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]"}, {"sha": "7791da15625e5f72e3c8a04a87d882d53ed5d6f6", "filename": "crates/ra_editor/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2FCargo.toml?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,4 +1,5 @@\n [package]\n+edition = \"2018\"\n name = \"ra_editor\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]"}, {"sha": "7b0a48c81a39fb8f22bd2b5cdf666df98fa7104d", "filename": "crates/ra_editor/src/code_actions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Fcode_actions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Fcode_actions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fcode_actions.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -11,7 +11,7 @@ use ra_syntax::{\n     },\n };\n \n-use {EditBuilder, Edit, find_node_at_offset};\n+use crate::{EditBuilder, Edit, find_node_at_offset};\n \n #[derive(Debug)]\n pub struct LocalEdit {\n@@ -136,7 +136,7 @@ fn non_trivia_sibling(node: SyntaxNodeRef, direction: Direction) -> Option<Synta\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use test_utils::{check_action, check_action_range};\n+    use crate::test_utils::{check_action, check_action_range};\n \n     #[test]\n     fn test_swap_comma() {"}, {"sha": "b6095dca9c5950838d174ab9436152498f578c01", "filename": "crates/ra_editor/src/completion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fcompletion.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -9,7 +9,7 @@ use ra_syntax::{\n     text_utils::is_subrange,\n };\n \n-use {\n+use crate::{\n     AtomEdit, find_node_at_offset,\n     scope::{FnScopes, ModuleScope},\n };"}, {"sha": "46e6873197bc80ebfaffa7f39c8ccaff6b19c280", "filename": "crates/ra_editor/src/edit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fedit.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,4 +1,4 @@\n-use {TextRange, TextUnit};\n+use crate::{TextRange, TextUnit};\n use ra_syntax::{\n     AtomEdit,\n     text_utils::contains_offset_nonstrict,"}, {"sha": "bd61fd1914f5e7029611ca7f262f818cbc8b5758", "filename": "crates/ra_editor/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Flib.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -164,7 +164,7 @@ pub fn resolve_local_name(file: &File, offset: TextUnit, name_ref: ast::NameRef)\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use test_utils::{assert_eq_dbg, extract_offset, add_cursor};\n+    use crate::test_utils::{assert_eq_dbg, extract_offset, add_cursor};\n \n     #[test]\n     fn test_highlighting() {"}, {"sha": "6ccfdbd83ab0fde824e0aa62aad50fe8ba9bc789", "filename": "crates/ra_editor/src/line_index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Fline_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Fline_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fline_index.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,5 +1,5 @@\n use superslice::Ext;\n-use ::TextUnit;\n+use crate::TextUnit;\n \n #[derive(Clone, Debug, Hash)]\n pub struct LineIndex {"}, {"sha": "99d698b607fcc6f2c28b8985d254eef1df292979", "filename": "crates/ra_editor/src/scope/fn_scope.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Fscope%2Ffn_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Fscope%2Ffn_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fscope%2Ffn_scope.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -174,7 +174,7 @@ fn compute_expr_scopes(expr: ast::Expr, scopes: &mut FnScopes, scope: ScopeId) {\n             }\n         }\n         ast::Expr::LambdaExpr(e) => {\n-            let mut scope = scopes.new_scope(scope);\n+            let scope = scopes.new_scope(scope);\n             scopes.add_params_bindings(scope, e.param_list());\n             if let Some(body) = e.body() {\n                 scopes.set_scope(body.syntax(), scope);\n@@ -256,7 +256,7 @@ pub fn resolve_local_name<'a>(name_ref: ast::NameRef, scopes: &'a FnScopes) -> O\n mod tests {\n     use super::*;\n     use ra_syntax::File;\n-    use {find_node_at_offset, test_utils::extract_offset};\n+    use crate::{find_node_at_offset, test_utils::extract_offset};\n \n     fn do_check(code: &str, expected: &[&str]) {\n         let (off, code) = extract_offset(code);"}, {"sha": "6211ed5477c5036d9fcf63a7568b308f3e1f6f84", "filename": "crates/ra_editor/src/symbols.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Fsymbols.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Fsymbols.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fsymbols.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -6,7 +6,7 @@ use ra_syntax::{\n         walk::{walk, WalkEvent},\n     },\n };\n-use TextRange;\n+use crate::TextRange;\n \n #[derive(Debug, Clone)]\n pub struct StructureNode {"}, {"sha": "49eb530d50b20be6513cc52b4dbb507aea26df27", "filename": "crates/ra_editor/src/test_utils.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Ftest_utils.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,6 +1,6 @@\n use ra_syntax::{File, TextUnit, TextRange};\n-pub use _test_utils::*;\n-use LocalEdit;\n+pub use crate::_test_utils::*;\n+use crate::LocalEdit;\n \n pub fn check_action<F: Fn(&File, TextUnit) -> Option<LocalEdit>> (\n     before: &str,"}, {"sha": "542b9e10bd9de32b0f979c20605deba976ce91a6", "filename": "crates/ra_editor/src/typing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Ftyping.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -10,7 +10,7 @@ use ra_syntax::{\n     SyntaxKind::*,\n };\n \n-use {LocalEdit, EditBuilder, find_node_at_offset};\n+use crate::{LocalEdit, EditBuilder, find_node_at_offset};\n \n pub fn join_lines(file: &File, range: TextRange) -> LocalEdit {\n     let range = if range.is_empty() {\n@@ -244,7 +244,7 @@ fn compute_ws(left: SyntaxNodeRef, right: SyntaxNodeRef) -> &'static str {\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use test_utils::{check_action, extract_range, extract_offset, add_cursor};\n+    use crate::test_utils::{check_action, extract_range, extract_offset, add_cursor};\n \n     fn check_join_lines(before: &str, after: &str) {\n         check_action(before, after, |file, offset| {"}, {"sha": "2b32571171a13aba026bb76b7a3f12d3ebec980e", "filename": "crates/ra_lsp_server/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2FCargo.toml?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,4 +1,5 @@\n [package]\n+edition = \"2018\"\n name = \"ra_lsp_server\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]"}, {"sha": "a75b160c53956171e619344eb46413ca0a1b28b1", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -7,7 +7,7 @@ use ra_editor::{LineIndex, LineCol, Edit, AtomEdit};\n use ra_syntax::{SyntaxKind, TextUnit, TextRange};\n use ra_analysis::{FileId, SourceChange, SourceFileEdit, FileSystemEdit};\n \n-use {\n+use crate::{\n     Result,\n     server_world::ServerWorld,\n     req,\n@@ -299,7 +299,7 @@ pub fn to_location(\n         Ok(loc)\n }\n \n-pub trait MapConvWith<'a>: Sized {\n+pub trait MapConvWith<'a>: Sized + 'a {\n     type Ctx;\n     type Output;\n \n@@ -309,7 +309,7 @@ pub trait MapConvWith<'a>: Sized {\n }\n \n impl<'a, I> MapConvWith<'a> for I\n-    where I: Iterator,\n+    where I: Iterator + 'a,\n           I::Item: ConvWith\n {\n     type Ctx = <I::Item as ConvWith>::Ctx;"}, {"sha": "7224b147609574de4e4751cf53acd34513d15cbb", "filename": "crates/ra_lsp_server/src/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Flib.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -34,5 +34,7 @@ mod project_model;\n pub mod thread_watcher;\n \n pub type Result<T> = ::std::result::Result<T, ::failure::Error>;\n-pub use caps::server_capabilities;\n-pub use main_loop::main_loop;\n+pub use crate::{\n+    main_loop::main_loop,\n+    caps::server_capabilities,\n+};"}, {"sha": "1fe78f3d0fd67f2c8852a117c1647d2159cc7a68", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -13,7 +13,7 @@ use ra_syntax::{\n     text_utils::contains_offset_nonstrict\n };\n \n-use ::{\n+use crate::{\n     req::{self, Decoration}, Result,\n     conv::{Conv, ConvWith, TryConvWith, MapConvWith, to_location},\n     server_world::ServerWorld,"}, {"sha": "773501efe7249901fb2582e20f235ff900ac5bfd", "filename": "crates/ra_lsp_server/src/main_loop/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -16,7 +16,7 @@ use gen_lsp_server::{\n };\n use rustc_hash::FxHashMap;\n \n-use {\n+use crate::{\n     req,\n     Result,\n     vfs::{self, FileEvent},"}, {"sha": "c144d95960c644aaff7c4256e7960cc02277af6a", "filename": "crates/ra_lsp_server/src/project_model.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -5,7 +5,7 @@ use rustc_hash::{FxHashMap, FxHashSet};\n use cargo_metadata::{metadata_run, CargoOpt};\n use ra_syntax::SmolStr;\n \n-use {\n+use crate::{\n     Result,\n     thread_watcher::{Worker, ThreadWatcher},\n };"}, {"sha": "c931afa021a5f359a2f4514360cef8911d9df27f", "filename": "crates/ra_lsp_server/src/server_world.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -8,7 +8,7 @@ use rustc_hash::FxHashMap;\n use languageserver_types::Url;\n use ra_analysis::{FileId, AnalysisHost, Analysis, CrateGraph, CrateId, LibraryData, FileResolver};\n \n-use {\n+use crate::{\n     Result,\n     path_map::{PathMap, Root},\n     vfs::{FileEvent, FileEventKind},"}, {"sha": "3257effcba33f3cfb2c2fbf13656376b58d59204", "filename": "crates/ra_lsp_server/src/thread_watcher.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Fthread_watcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Fthread_watcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fthread_watcher.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,7 +1,7 @@\n use std::thread;\n use crossbeam_channel::{bounded, unbounded, Sender, Receiver};\n use drop_bomb::DropBomb;\n-use Result;\n+use crate::Result;\n \n pub struct Worker<I, O> {\n     pub inp: Sender<I>,"}, {"sha": "d8f9b1aac9aded2be3ed86c4037b2ef070ad7d9b", "filename": "crates/ra_lsp_server/src/vfs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Fvfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Fsrc%2Fvfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fvfs.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -5,7 +5,7 @@ use std::{\n \n use walkdir::WalkDir;\n \n-use {\n+use crate::{\n     thread_watcher::{Worker, ThreadWatcher},\n };\n "}, {"sha": "7265b5999e96fef9d5c5ccfd338b3bde428abc3d", "filename": "crates/ra_lsp_server/tests/heavy_tests/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -12,7 +12,7 @@ mod support;\n \n use ra_lsp_server::req::{Runnables, RunnablesParams};\n \n-use support::project;\n+use crate::support::project;\n \n \n const LOG: &'static str = \"\";"}, {"sha": "d1339f62fccbb4bc86c1c900d26411e4238d918e", "filename": "crates/ra_lsp_server/tests/heavy_tests/support.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fsupport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fsupport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fsupport.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -25,7 +25,7 @@ use ra_lsp_server::{main_loop, req, thread_watcher::{ThreadWatcher, Worker}};\n \n pub fn project(fixture: &str) -> Server {\n     static INIT: Once = Once::new();\n-    INIT.call_once(|| Logger::with_env_or_str(::LOG).start().unwrap());\n+    INIT.call_once(|| Logger::with_env_or_str(crate::LOG).start().unwrap());\n \n     let tmp_dir = TempDir::new(\"test-project\")\n         .unwrap();"}, {"sha": "34bb1c591bf461081eb5561bd4e5d360e0e91908", "filename": "crates/ra_syntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2FCargo.toml?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,4 +1,5 @@\n [package]\n+edition = \"2018\"\n name = \"ra_syntax\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]"}, {"sha": "e686a5704423fe8f3f403c837a81860595c05e37", "filename": "crates/ra_syntax/src/algo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Falgo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Falgo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo%2Fmod.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,7 +1,7 @@\n pub mod walk;\n pub mod visit;\n \n-use {\n+use crate::{\n     SyntaxNodeRef, TextUnit, TextRange,\n     text_utils::{contains_offset_nonstrict, is_subrange},\n };"}, {"sha": "1ae988a877738aef6c2b382b0b16a808c3bf8503", "filename": "crates/ra_syntax/src/algo/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Falgo%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Falgo%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo%2Fvisit.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,5 +1,5 @@\n use std::marker::PhantomData;\n-use {SyntaxNodeRef, AstNode};\n+use crate::{SyntaxNodeRef, AstNode};\n \n \n pub fn visitor<'a, T>() -> impl Visitor<'a, Output=T> {"}, {"sha": "d344156262347668c2cf735c8513c0c3332bc831", "filename": "crates/ra_syntax/src/algo/walk.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Falgo%2Fwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Falgo%2Fwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo%2Fwalk.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,4 +1,4 @@\n-use {\n+use crate::{\n     SyntaxNodeRef,\n     algo::generate,\n };"}, {"sha": "160d186b8d8abbb6f82b7540fc10812312b6053c", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,7 +1,7 @@\n // This file is automatically generated based on the file `./generated.rs.tera` when `cargo gen-kinds` is run\n // Do not edit manually\n \n-use {\n+use crate::{\n     ast,\n     SyntaxNodeRef, AstNode,\n     SyntaxKind::*,"}, {"sha": "5cb7a35ed917266e4d98d0716f1fcb597bd75095", "filename": "crates/ra_syntax/src/ast/generated.rs.tera", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs.tera", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs.tera", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs.tera?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -3,7 +3,7 @@ the below applies to the result of this template\n #}// This file is automatically generated based on the file `./generated.rs.tera` when `cargo gen-kinds` is run\n // Do not edit manually\n \n-use {\n+use crate::{\n     ast,\n     SyntaxNodeRef, AstNode,\n     SyntaxKind::*,"}, {"sha": "88193a1edec2b50e7b8936982125bbbdb02ca4d5", "filename": "crates/ra_syntax/src/ast/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fast%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fast%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fmod.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -4,7 +4,7 @@ use std::marker::PhantomData;\n \n use itertools::Itertools;\n \n-use {\n+use crate::{\n     SmolStr, SyntaxNodeRef, SyntaxKind::*,\n     yellow::{RefRoot, SyntaxNodeChildren},\n };"}, {"sha": "e21de68c5bd0ce2ec2782849ee27f7aa497655cf", "filename": "crates/ra_syntax/src/grammar/expressions/atom.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -30,7 +30,7 @@ pub(super) const ATOM_EXPR_FIRST: TokenSet =\n     token_set_union![\n         LITERAL_FIRST,\n         token_set![L_CURLY, L_PAREN, L_BRACK, PIPE, MOVE_KW, IF_KW, WHILE_KW, MATCH_KW, UNSAFE_KW,\n-                   RETURN_KW, IDENT, SELF_KW, SUPER_KW, COLONCOLON, BREAK_KW, CONTINUE_KW, LIFETIME ],\n+                   RETURN_KW, IDENT, SELF_KW, SUPER_KW, CRATE_KW, COLONCOLON, BREAK_KW, CONTINUE_KW, LIFETIME ],\n     ];\n \n const EXPR_RECOVERY_SET: TokenSet ="}, {"sha": "1199ba2300e8c348c40ccc76e5e15a25c5381f7e", "filename": "crates/ra_syntax/src/grammar/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fmod.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -31,7 +31,7 @@ mod type_args;\n mod type_params;\n mod types;\n \n-use {\n+use crate::{\n     token_set::TokenSet,\n     parser_api::{Marker, CompletedMarker, Parser},\n     SyntaxKind::{self, *},"}, {"sha": "afe6886a1face77bbb53fb7e086c91cb5feb7c76", "filename": "crates/ra_syntax/src/lexer/comments.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Flexer%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Flexer%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flexer%2Fcomments.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,6 +1,6 @@\n-use lexer::ptr::Ptr;\n+use crate::lexer::ptr::Ptr;\n \n-use SyntaxKind::{self, *};\n+use crate::SyntaxKind::{self, *};\n \n pub(crate) fn scan_shebang(ptr: &mut Ptr) -> bool {\n     if ptr.at_str(\"!/\") {"}, {"sha": "9dc0b63d6b89c89dbff748d37adac7921a530586", "filename": "crates/ra_syntax/src/lexer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flexer%2Fmod.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -4,7 +4,7 @@ mod numbers;\n mod ptr;\n mod strings;\n \n-use {\n+use crate::{\n     SyntaxKind::{self, *},\n     TextUnit,\n };"}, {"sha": "46daf5e526821f7a393701112bc144d5c568dc26", "filename": "crates/ra_syntax/src/lexer/numbers.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Flexer%2Fnumbers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Flexer%2Fnumbers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flexer%2Fnumbers.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,7 +1,7 @@\n-use lexer::classes::*;\n-use lexer::ptr::Ptr;\n+use crate::lexer::classes::*;\n+use crate::lexer::ptr::Ptr;\n \n-use SyntaxKind::{self, *};\n+use crate::SyntaxKind::{self, *};\n \n pub(crate) fn scan_number(c: char, ptr: &mut Ptr) -> SyntaxKind {\n     if c == '0' {"}, {"sha": "c4708cb1c95292a2227a48de574d1746fcc84abe", "filename": "crates/ra_syntax/src/lexer/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Flexer%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Flexer%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flexer%2Fptr.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,4 +1,4 @@\n-use TextUnit;\n+use crate::TextUnit;\n \n use std::str::Chars;\n "}, {"sha": "bceacdcac20cd75a9ddcd9836d3ff81ac349ca67", "filename": "crates/ra_syntax/src/lexer/strings.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Flexer%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Flexer%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flexer%2Fstrings.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,6 +1,6 @@\n-use SyntaxKind::{self, *};\n+use crate::SyntaxKind::{self, *};\n \n-use lexer::ptr::Ptr;\n+use crate::lexer::ptr::Ptr;\n \n pub(crate) fn is_string_literal_start(c: char, c1: Option<char>, c2: Option<char>) -> bool {\n     match (c, c1, c2) {"}, {"sha": "5bb54aba19802b682826368a2b698b56599fbacb", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -46,7 +46,7 @@ mod yellow;\n pub mod utils;\n pub mod text_utils;\n \n-pub use {\n+pub use crate::{\n     rowan::{SmolStr, TextRange, TextUnit},\n     ast::AstNode,\n     lexer::{tokenize, Token},\n@@ -55,7 +55,7 @@ pub use {\n     reparsing::AtomEdit,\n };\n \n-use {\n+use crate::{\n     yellow::{GreenNode},\n };\n "}, {"sha": "cc23bb75e3a4849d6ade675fbe6d3174a6c91ce3", "filename": "crates/ra_syntax/src/parser_api.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fparser_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fparser_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparser_api.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,4 +1,4 @@\n-use {\n+use crate::{\n     token_set::TokenSet,\n     parser_impl::ParserImpl,\n     SyntaxKind::{self, ERROR},"}, {"sha": "928d2cc7a16842028c69462c8becaea66f228e41", "filename": "crates/ra_syntax/src/parser_impl/event.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Fevent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Fevent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Fevent.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -8,7 +8,7 @@\n //! `start node`, `finish node`, and `FileBuilder` converts\n //! this stream to a real tree.\n use std::mem;\n-use {\n+use crate::{\n     TextUnit, TextRange, SmolStr,\n     lexer::Token,\n     parser_impl::Sink,"}, {"sha": "ac6d900d83789d2f212dcb84a86636a336cb2eda", "filename": "crates/ra_syntax/src/parser_impl/input.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Finput.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,4 +1,4 @@\n-use {lexer::Token, SyntaxKind, SyntaxKind::EOF, TextRange, TextUnit};\n+use crate::{lexer::Token, SyntaxKind, SyntaxKind::EOF, TextRange, TextUnit};\n \n use std::ops::{Add, AddAssign};\n "}, {"sha": "c2a6448e7ae8e304b0ab18132794ea64a9784351", "filename": "crates/ra_syntax/src/parser_impl/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Fmod.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -3,7 +3,7 @@ mod input;\n \n use std::cell::Cell;\n \n-use {\n+use crate::{\n     TextUnit, SmolStr,\n     lexer::Token,\n     parser_api::Parser,\n@@ -13,7 +13,7 @@ use {\n     },\n };\n \n-use SyntaxKind::{self, EOF, TOMBSTONE};\n+use crate::SyntaxKind::{self, EOF, TOMBSTONE};\n \n pub(crate) trait Sink {\n     type Tree;"}, {"sha": "16272fe88871bad6491d7511a92f52dcb8fc7f30", "filename": "crates/ra_syntax/src/reparsing.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Freparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Freparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Freparsing.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,14 +1,14 @@\n-use algo;\n-use grammar;\n-use lexer::{tokenize, Token};\n-use yellow::{self, GreenNode, SyntaxNodeRef, SyntaxError};\n-use parser_impl;\n-use parser_api::Parser;\n-use {\n+use crate::algo;\n+use crate::grammar;\n+use crate::lexer::{tokenize, Token};\n+use crate::yellow::{self, GreenNode, SyntaxNodeRef, SyntaxError};\n+use crate::parser_impl;\n+use crate::parser_api::Parser;\n+use crate::{\n     TextUnit, TextRange,\n     SyntaxKind::*,\n };\n-use text_utils::replace_range;\n+use crate::text_utils::replace_range;\n \n #[derive(Debug, Clone)]\n pub struct AtomEdit {"}, {"sha": "3041e56339a221ad97d33d503953f180c1f9419b", "filename": "crates/ra_syntax/src/syntax_kinds/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fmod.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,7 +1,7 @@\n mod generated;\n \n use std::fmt;\n-use SyntaxKind::*;\n+use crate::SyntaxKind::*;\n \n pub use self::generated::SyntaxKind;\n "}, {"sha": "adf26ef30a50efa3d74ada0926e83d681649e997", "filename": "crates/ra_syntax/src/text_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Ftext_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Ftext_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Ftext_utils.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,4 +1,4 @@\n-use {TextRange, TextUnit};\n+use crate::{TextRange, TextUnit};\n \n pub fn contains_offset_nonstrict(range: TextRange, offset: TextUnit) -> bool {\n     range.start() <= offset && offset <= range.end()"}, {"sha": "d407dfa485c0508c2384c3449741554f05154566", "filename": "crates/ra_syntax/src/token_set.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Ftoken_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Ftoken_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Ftoken_set.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,4 +1,4 @@\n-use SyntaxKind;\n+use crate::SyntaxKind;\n \n #[derive(Clone, Copy)]\n pub(crate) struct TokenSet(pub(crate) u128);\n@@ -29,7 +29,7 @@ macro_rules! token_set_union {\n \n #[test]\n fn token_set_works_for_tokens() {\n-    use SyntaxKind::*;\n+    use crate::SyntaxKind::*;\n     let ts = token_set! { EOF, SHEBANG };\n     assert!(ts.contains(EOF));\n     assert!(ts.contains(SHEBANG));"}, {"sha": "df1f4b372427ecbf095ba53b40089d561f82b139", "filename": "crates/ra_syntax/src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Futils.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,5 +1,5 @@\n use std::fmt::Write;\n-use {\n+use crate::{\n     algo::walk::{walk, WalkEvent},\n     SyntaxKind, File, SyntaxNodeRef\n };"}, {"sha": "67a1a382b5aa332de7542451e6c768e6f5272ee0", "filename": "crates/ra_syntax/src/yellow/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fbuilder.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,5 +1,5 @@\n use rowan::GreenNodeBuilder;\n-use {\n+use crate::{\n     TextUnit, SmolStr,\n     parser_impl::Sink,\n     yellow::{GreenNode, SyntaxError, RaTypes},"}, {"sha": "ab9bca0f020378bca32fd716bf86ec3de224a701", "filename": "crates/ra_syntax/src/yellow/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fmod.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -6,7 +6,7 @@ use std::{\n     hash::{Hash, Hasher},\n };\n use rowan::Types;\n-use {SyntaxKind, TextUnit, TextRange, SmolStr};\n+use crate::{SyntaxKind, TextUnit, TextRange, SmolStr};\n use self::syntax_text::SyntaxText;\n \n pub use rowan::{TreeRoot};\n@@ -70,16 +70,16 @@ impl<'a> SyntaxNodeRef<'a> {\n         self.0.leaf_text()\n     }\n     pub fn ancestors(self) -> impl Iterator<Item=SyntaxNodeRef<'a>> {\n-        ::algo::generate(Some(self), |&node| node.parent())\n+        crate::algo::generate(Some(self), |&node| node.parent())\n     }\n     pub fn descendants(self) -> impl Iterator<Item=SyntaxNodeRef<'a>> {\n-        ::algo::walk::walk(self).filter_map(|event| match event {\n-            ::algo::walk::WalkEvent::Enter(node) => Some(node),\n-            ::algo::walk::WalkEvent::Exit(_) => None,\n+        crate::algo::walk::walk(self).filter_map(|event| match event {\n+            crate::algo::walk::WalkEvent::Enter(node) => Some(node),\n+            crate::algo::walk::WalkEvent::Exit(_) => None,\n         })\n     }\n     pub fn siblings(self, direction: Direction) -> impl Iterator<Item=SyntaxNodeRef<'a>> {\n-        ::algo::generate(Some(self), move |&node| match direction {\n+        crate::algo::generate(Some(self), move |&node| match direction {\n             Direction::Next => node.next_sibling(),\n             Direction::Prev => node.prev_sibling(),\n         })\n@@ -156,7 +156,7 @@ impl<R: TreeRoot<RaTypes>> Iterator for SyntaxNodeChildren<R> {\n \n \n fn has_short_text(kind: SyntaxKind) -> bool {\n-    use SyntaxKind::*;\n+    use crate::SyntaxKind::*;\n     match kind {\n         IDENT | LIFETIME | INT_NUMBER | FLOAT_NUMBER => true,\n         _ => false,"}, {"sha": "ae33b993de0f3b6c9ae00492024ea1783130dd57", "filename": "crates/ra_syntax/src/yellow/syntax_text.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fsyntax_text.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fsyntax_text.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fsyntax_text.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -2,7 +2,7 @@ use std::{\n     fmt, ops,\n };\n \n-use {\n+use crate::{\n     SyntaxNodeRef, TextRange, TextUnit,\n     text_utils::{intersect, contains_offset_nonstrict},\n };"}, {"sha": "f1ed30220ae6812953268c8d30d2cef17d80974c", "filename": "crates/ra_syntax/tests/data/parser/ok/0035_crate_path_in_call.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0035_crate_path_in_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0035_crate_path_in_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0035_crate_path_in_call.rs?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    make_query(crate::module_map::module_tree);\n+}"}, {"sha": "36431518016fe8fc2fbd993a16faaf05bdaee20f", "filename": "crates/ra_syntax/tests/data/parser/ok/0035_crate_path_in_call.txt", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0035_crate_path_in_call.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0035_crate_path_in_call.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0035_crate_path_in_call.txt?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -0,0 +1,41 @@\n+ROOT@[0; 62)\n+  FN_DEF@[0; 61)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 7)\n+      IDENT@[3; 7) \"main\"\n+    PARAM_LIST@[7; 9)\n+      L_PAREN@[7; 8)\n+      R_PAREN@[8; 9)\n+    WHITESPACE@[9; 10)\n+    BLOCK@[10; 61)\n+      L_CURLY@[10; 11)\n+      WHITESPACE@[11; 16)\n+      EXPR_STMT@[16; 59)\n+        CALL_EXPR@[16; 58)\n+          PATH_EXPR@[16; 26)\n+            PATH@[16; 26)\n+              PATH_SEGMENT@[16; 26)\n+                NAME_REF@[16; 26)\n+                  IDENT@[16; 26) \"make_query\"\n+          ARG_LIST@[26; 58)\n+            L_PAREN@[26; 27)\n+            PATH_EXPR@[27; 57)\n+              PATH@[27; 57)\n+                PATH@[27; 44)\n+                  PATH@[27; 32)\n+                    PATH_SEGMENT@[27; 32)\n+                      CRATE_KW@[27; 32)\n+                  COLONCOLON@[32; 34)\n+                  PATH_SEGMENT@[34; 44)\n+                    NAME_REF@[34; 44)\n+                      IDENT@[34; 44) \"module_map\"\n+                COLONCOLON@[44; 46)\n+                PATH_SEGMENT@[46; 57)\n+                  NAME_REF@[46; 57)\n+                    IDENT@[46; 57) \"module_tree\"\n+            R_PAREN@[57; 58)\n+        SEMI@[58; 59)\n+      WHITESPACE@[59; 60)\n+      R_CURLY@[60; 61)\n+  WHITESPACE@[61; 62)"}, {"sha": "fe0998ab8a4395d59b8c772f1a305798821f8677", "filename": "crates/test_utils/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Ftest_utils%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Ftest_utils%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2FCargo.toml?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,4 +1,5 @@\n [package]\n+edition = \"2018\"\n name = \"test_utils\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]"}, {"sha": "e2fecc60d29d2640850f49a60d213d8b3e80b018", "filename": "crates/tools/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Ftools%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e929355eca10b1d8d4e55ddd41549d5bf0a685aa/crates%2Ftools%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2FCargo.toml?ref=e929355eca10b1d8d4e55ddd41549d5bf0a685aa", "patch": "@@ -1,4 +1,5 @@\n [package]\n+edition = \"2018\"\n name = \"tools\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]"}]}