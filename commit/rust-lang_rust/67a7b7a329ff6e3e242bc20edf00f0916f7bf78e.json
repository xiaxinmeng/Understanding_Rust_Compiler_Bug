{"sha": "67a7b7a329ff6e3e242bc20edf00f0916f7bf78e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3YTdiN2EzMjlmZjZlM2UyNDJiYzIwZWRmMDBmMDkxNmY3YmY3OGU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-05T10:55:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-05T10:55:11Z"}, "message": "Rollup merge of #71894 - mibac138:semicolon-not-always-helpful, r=estebank\n\nSuggest removing semicolon in last expression only if it's type is known\n\nFixes #67971\n\nIs there a syntax for explicitly checking if a note doesn't exist in test output? Something like `//~ !NOTE ...`\n\nI believe r? @estebank deals with diagnostics.", "tree": {"sha": "c2a7571dc6c9862424cb4844284618d8f80829b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2a7571dc6c9862424cb4844284618d8f80829b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67a7b7a329ff6e3e242bc20edf00f0916f7bf78e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJesUYPCRBK7hj4Ov3rIwAAdHIIAGcS0Xq/AXNc2/ibAnUwKXaQ\nmYN3cP1/Uh4GI1ciFsMkzdZvaxBMuBtbCGvI7rhARwLmWGoY3iD/kNnB/EGyOL+a\n2e2B4aklt0u61Mj4Jum1ZjHBnZjC7CyYIDYGZCuO/wco3x6fxi8fqrHfgRXQm26o\nxm7KLZmHbh7kqa7rSugZVQpOSww08wEWdSNLCfHbh0WuiTm9ZC66FAsRBdKEq8D4\nxRXvRvBrpWI6VmG3oPnAUfc4qJL6ISMU/RK4cgciVdecGdhUJXwa+s8CkhLZ6mSe\nuQN5ApGF/3jdCTQErQXvOdxPPU3B8r/pyawwip9z6AlMzSqq00C0L5dUlo8Pu7w=\n=5oCt\n-----END PGP SIGNATURE-----\n", "payload": "tree c2a7571dc6c9862424cb4844284618d8f80829b8\nparent a49d2b7a74a36db82be76a2ad04f647fc399811b\nparent ca72352e604408142c96a16e1ab9fed4916453de\nauthor Dylan DPC <dylan.dpc@gmail.com> 1588676111 +0200\ncommitter GitHub <noreply@github.com> 1588676111 +0200\n\nRollup merge of #71894 - mibac138:semicolon-not-always-helpful, r=estebank\n\nSuggest removing semicolon in last expression only if it's type is known\n\nFixes #67971\n\nIs there a syntax for explicitly checking if a note doesn't exist in test output? Something like `//~ !NOTE ...`\n\nI believe r? @estebank deals with diagnostics.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67a7b7a329ff6e3e242bc20edf00f0916f7bf78e", "html_url": "https://github.com/rust-lang/rust/commit/67a7b7a329ff6e3e242bc20edf00f0916f7bf78e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67a7b7a329ff6e3e242bc20edf00f0916f7bf78e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a49d2b7a74a36db82be76a2ad04f647fc399811b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a49d2b7a74a36db82be76a2ad04f647fc399811b", "html_url": "https://github.com/rust-lang/rust/commit/a49d2b7a74a36db82be76a2ad04f647fc399811b"}, {"sha": "ca72352e604408142c96a16e1ab9fed4916453de", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca72352e604408142c96a16e1ab9fed4916453de", "html_url": "https://github.com/rust-lang/rust/commit/ca72352e604408142c96a16e1ab9fed4916453de"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "bff1ca2433a83b96881633d9d72940d3d91c4b51", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/67a7b7a329ff6e3e242bc20edf00f0916f7bf78e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a7b7a329ff6e3e242bc20edf00f0916f7bf78e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=67a7b7a329ff6e3e242bc20edf00f0916f7bf78e", "patch": "@@ -5387,7 +5387,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             _ => return None,\n         };\n         let last_expr_ty = self.node_ty(last_expr.hir_id);\n-        if self.can_sub(self.param_env, last_expr_ty, expected_ty).is_err() {\n+        if matches!(last_expr_ty.kind, ty::Error)\n+            || self.can_sub(self.param_env, last_expr_ty, expected_ty).is_err()\n+        {\n             return None;\n         }\n         let original_span = original_sp(last_stmt.span, blk.span);"}, {"sha": "a443db40732ac4acdff2001e07e09ea3ae629353", "filename": "src/test/ui/issues/issue-43162.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/67a7b7a329ff6e3e242bc20edf00f0916f7bf78e/src%2Ftest%2Fui%2Fissues%2Fissue-43162.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67a7b7a329ff6e3e242bc20edf00f0916f7bf78e/src%2Ftest%2Fui%2Fissues%2Fissue-43162.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43162.stderr?ref=67a7b7a329ff6e3e242bc20edf00f0916f7bf78e", "patch": "@@ -17,9 +17,6 @@ LL | fn foo() -> bool {\n    |    ---      ^^^^ expected `bool`, found `()`\n    |    |\n    |    implicitly returns `()` as its body has no tail or `return` expression\n-LL |\n-LL |     break true;\n-   |               - help: consider removing this semicolon\n \n error: aborting due to 3 previous errors\n "}, {"sha": "8bf725cb5ee38129377237df1aafdaf074432f19", "filename": "src/test/ui/typeck/issue-67971.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/67a7b7a329ff6e3e242bc20edf00f0916f7bf78e/src%2Ftest%2Fui%2Ftypeck%2Fissue-67971.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a7b7a329ff6e3e242bc20edf00f0916f7bf78e/src%2Ftest%2Fui%2Ftypeck%2Fissue-67971.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-67971.rs?ref=67a7b7a329ff6e3e242bc20edf00f0916f7bf78e", "patch": "@@ -0,0 +1,9 @@\n+struct S {}\n+\n+fn foo(ctx: &mut S) -> String { //~ ERROR mismatched types\n+    // Don't suggest to remove semicolon as it won't fix anything\n+    ctx.sleep = 0;\n+    //~^ ERROR no field `sleep` on type `&mut S`\n+}\n+\n+fn main() {}"}, {"sha": "36ad3fcb342a88c0b3c2db172d9476d2fcbeedb8", "filename": "src/test/ui/typeck/issue-67971.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/67a7b7a329ff6e3e242bc20edf00f0916f7bf78e/src%2Ftest%2Fui%2Ftypeck%2Fissue-67971.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67a7b7a329ff6e3e242bc20edf00f0916f7bf78e/src%2Ftest%2Fui%2Ftypeck%2Fissue-67971.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-67971.stderr?ref=67a7b7a329ff6e3e242bc20edf00f0916f7bf78e", "patch": "@@ -0,0 +1,18 @@\n+error[E0609]: no field `sleep` on type `&mut S`\n+  --> $DIR/issue-67971.rs:5:9\n+   |\n+LL |     ctx.sleep = 0;\n+   |         ^^^^^ unknown field\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-67971.rs:3:24\n+   |\n+LL | fn foo(ctx: &mut S) -> String {\n+   |    ---                 ^^^^^^ expected struct `std::string::String`, found `()`\n+   |    |\n+   |    implicitly returns `()` as its body has no tail or `return` expression\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0308, E0609.\n+For more information about an error, try `rustc --explain E0308`."}]}