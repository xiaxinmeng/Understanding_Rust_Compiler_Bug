{"sha": "8192288ee067054faf255335bfc249ed5cafa6d3", "node_id": "C_kwDOAAsO6NoAKDgxOTIyODhlZTA2NzA1NGZhZjI1NTMzNWJmYzI0OWVkNWNhZmE2ZDM", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-06-29T22:24:15Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-06-29T22:24:15Z"}, "message": "Replace weird handling of edge case with panic", "tree": {"sha": "c7292e3e051875336875aec01efe5b713e3b5586", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7292e3e051875336875aec01efe5b713e3b5586"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8192288ee067054faf255335bfc249ed5cafa6d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8192288ee067054faf255335bfc249ed5cafa6d3", "html_url": "https://github.com/rust-lang/rust/commit/8192288ee067054faf255335bfc249ed5cafa6d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8192288ee067054faf255335bfc249ed5cafa6d3/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d67f5bfc3b02da5d3cb37b6f9bc482eff9fb2f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d67f5bfc3b02da5d3cb37b6f9bc482eff9fb2f3", "html_url": "https://github.com/rust-lang/rust/commit/4d67f5bfc3b02da5d3cb37b6f9bc482eff9fb2f3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c64df71f41ddc78a7b4bd703718a6863e06bf4d2", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8192288ee067054faf255335bfc249ed5cafa6d3/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8192288ee067054faf255335bfc249ed5cafa6d3/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=8192288ee067054faf255335bfc249ed5cafa6d3", "patch": "@@ -1704,8 +1704,8 @@ fn clean_ty<'tcx>(this: Ty<'tcx>, cx: &mut DocContext<'tcx>, def_id: Option<DefI\n             ImplTrait(bounds)\n         }\n \n-        ty::Closure(..) | ty::Generator(..) => Tuple(vec![]), // FIXME(pcwalton)\n-\n+        ty::Closure(..) => panic!(\"Closure\"),\n+        ty::Generator(..) => panic!(\"Generator\"),\n         ty::Bound(..) => panic!(\"Bound\"),\n         ty::Placeholder(..) => panic!(\"Placeholder\"),\n         ty::GeneratorWitness(..) => panic!(\"GeneratorWitness\"),"}]}