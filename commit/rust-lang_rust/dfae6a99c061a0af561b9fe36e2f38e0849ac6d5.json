{"sha": "dfae6a99c061a0af561b9fe36e2f38e0849ac6d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmYWU2YTk5YzA2MWEwYWY1NjFiOWZlMzZlMmYzOGUwODQ5YWM2ZDU=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-01-26T03:32:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-26T03:32:28Z"}, "message": "Merge pull request #2383 from davidalber/range-spaces-in-match\n\nExtending `spaces_around_ranges` to ranges in match arm patterns", "tree": {"sha": "59f7d5e6e8417e31df72be8d28f5c907f41622f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59f7d5e6e8417e31df72be8d28f5c907f41622f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaaqFMCRBK7hj4Ov3rIwAAdHIIAH2VglJ882/3EV7/5Sc0MJ1Q\nOj0bQSPAsAlxm1rC7HjqrKn0DpHN1CdtZhaDMvyyhHz7KrVSrBZf7Eu9bmbdKk5X\nY5Vdf3JPqgns637uyawDFIl0bB9kCaaZ1y6+v0vGMMJdVe5WY6MFjkoL68Rby4US\nKOG+KZHlmw1HmivK1exseyzh5Syvp/5PhCvWE/kHfxjzyGzMz31U84zieJfNnKq+\n1NUHEPHKevnr1PYh+ATU+KDvfoaPoDb8pnXTx2SGAPE9LIRqQHq/lgB42e7PT5V3\nDHJLXNcnTtkh3J14AG0xBJ6QHdA2p5TfNjGy3xBPzWQiWhxxU8yWxuyxYmJH4n0=\n=LjZR\n-----END PGP SIGNATURE-----\n", "payload": "tree 59f7d5e6e8417e31df72be8d28f5c907f41622f2\nparent 8e6ee4a7625d1c6ccc2021e17c8589718a1f3474\nparent 69f27673df41d2657386f9d498ab6e274db9733f\nauthor Seiichi Uchida <seuchida@gmail.com> 1516937548 +0900\ncommitter GitHub <noreply@github.com> 1516937548 +0900\n\nMerge pull request #2383 from davidalber/range-spaces-in-match\n\nExtending `spaces_around_ranges` to ranges in match arm patterns"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5", "html_url": "https://github.com/rust-lang/rust/commit/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e6ee4a7625d1c6ccc2021e17c8589718a1f3474", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e6ee4a7625d1c6ccc2021e17c8589718a1f3474", "html_url": "https://github.com/rust-lang/rust/commit/8e6ee4a7625d1c6ccc2021e17c8589718a1f3474"}, {"sha": "69f27673df41d2657386f9d498ab6e274db9733f", "url": "https://api.github.com/repos/rust-lang/rust/commits/69f27673df41d2657386f9d498ab6e274db9733f", "html_url": "https://github.com/rust-lang/rust/commit/69f27673df41d2657386f9d498ab6e274db9733f"}], "stats": {"total": 115, "additions": 110, "deletions": 5}, "files": [{"sha": "659784bfd78c11fc417143924c2556f9476f3450", "filename": "Configurations.md", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=dfae6a99c061a0af561b9fe36e2f38e0849ac6d5", "patch": "@@ -1468,7 +1468,7 @@ struct Foo {\n \n ## `spaces_around_ranges`\n \n-Put spaces around the .. and ... range operators\n+Put spaces around the .., ..=, and ... range operators\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n@@ -1477,13 +1477,49 @@ Put spaces around the .. and ... range operators\n #### `false` (default):\n \n ```rust\n-let lorem = 0..10;\n+fn main() {\n+    let lorem = 0..10;\n+    let ipsum = 0..=10;\n+\n+    match lorem {\n+        1..5 => foo(),\n+        _ => bar,\n+    }\n+\n+    match lorem {\n+        1..=5 => foo(),\n+        _ => bar,\n+    }\n+\n+    match lorem {\n+        1...5 => foo(),\n+        _ => bar,\n+    }\n+}\n ```\n \n #### `true`:\n \n ```rust\n-let lorem = 0 .. 10;\n+fn main() {\n+    let lorem = 0 .. 10;\n+    let ipsum = 0 ..= 10;\n+\n+    match lorem {\n+        1 .. 5 => foo(),\n+        _ => bar,\n+    }\n+\n+    match lorem {\n+        1 ..= 5 => foo(),\n+        _ => bar,\n+    }\n+\n+    match lorem {\n+        1 ... 5 => foo(),\n+        _ => bar,\n+    }\n+}\n ```\n \n ## `spaces_within_parens_and_brackets`"}, {"sha": "4719160061b4df01693a59104c4a515929cf7b2e", "filename": "src/patterns.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=dfae6a99c061a0af561b9fe36e2f38e0849ac6d5", "patch": "@@ -65,10 +65,15 @@ impl Rewrite for Pat {\n                     RangeEnd::Included(RangeSyntax::DotDotEq) => \"..=\",\n                     RangeEnd::Excluded => \"..\",\n                 };\n+                let infix = if context.config.spaces_around_ranges() {\n+                    format!(\" {} \", infix)\n+                } else {\n+                    infix.to_owned()\n+                };\n                 rewrite_pair(\n                     &**lhs,\n                     &**rhs,\n-                    PairParts::new(\"\", infix, \"\"),\n+                    PairParts::new(\"\", &infix, \"\"),\n                     context,\n                     shape,\n                     SeparatorPlace::Front,"}, {"sha": "11ca76b1345c09c54dc7dfbfa25b2fbbadbd11a7", "filename": "tests/source/configs/spaces_around_ranges/false.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5/tests%2Fsource%2Fconfigs%2Fspaces_around_ranges%2Ffalse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5/tests%2Fsource%2Fconfigs%2Fspaces_around_ranges%2Ffalse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fspaces_around_ranges%2Ffalse.rs?ref=dfae6a99c061a0af561b9fe36e2f38e0849ac6d5", "patch": "@@ -2,5 +2,21 @@\n // Spaces around ranges\n \n fn main() {\n-    let lorem = 0..10;\n+    let lorem = 0 .. 10;\n+    let ipsum = 0 ..= 10;\n+\n+    match lorem {\n+        1 .. 5 => foo(),\n+        _ => bar,\n+    }\n+\n+    match lorem {\n+        1 ..= 5 => foo(),\n+        _ => bar,\n+    }\n+\n+    match lorem {\n+        1 ... 5 => foo(),\n+        _ => bar,\n+    }\n }"}, {"sha": "501708921306f0e3adc9f0c36963fb61fc2ebc7c", "filename": "tests/source/configs/spaces_around_ranges/true.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5/tests%2Fsource%2Fconfigs%2Fspaces_around_ranges%2Ftrue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5/tests%2Fsource%2Fconfigs%2Fspaces_around_ranges%2Ftrue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fspaces_around_ranges%2Ftrue.rs?ref=dfae6a99c061a0af561b9fe36e2f38e0849ac6d5", "patch": "@@ -3,4 +3,20 @@\n \n fn main() {\n     let lorem = 0..10;\n+    let ipsum = 0..=10;\n+\n+    match lorem {\n+        1..5 => foo(),\n+        _ => bar,\n+    }\n+\n+    match lorem {\n+        1..=5 => foo(),\n+        _ => bar,\n+    }\n+\n+    match lorem {\n+        1...5 => foo(),\n+        _ => bar,\n+    }\n }"}, {"sha": "6319da985728963d59172de9377125317af5fee1", "filename": "tests/target/configs/spaces_around_ranges/false.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5/tests%2Ftarget%2Fconfigs%2Fspaces_around_ranges%2Ffalse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5/tests%2Ftarget%2Fconfigs%2Fspaces_around_ranges%2Ffalse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fspaces_around_ranges%2Ffalse.rs?ref=dfae6a99c061a0af561b9fe36e2f38e0849ac6d5", "patch": "@@ -3,4 +3,20 @@\n \n fn main() {\n     let lorem = 0..10;\n+    let ipsum = 0..=10;\n+\n+    match lorem {\n+        1..5 => foo(),\n+        _ => bar,\n+    }\n+\n+    match lorem {\n+        1..=5 => foo(),\n+        _ => bar,\n+    }\n+\n+    match lorem {\n+        1...5 => foo(),\n+        _ => bar,\n+    }\n }"}, {"sha": "7bfcc23c8ea526034b791d991f71e93d4e41e95e", "filename": "tests/target/configs/spaces_around_ranges/true.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5/tests%2Ftarget%2Fconfigs%2Fspaces_around_ranges%2Ftrue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5/tests%2Ftarget%2Fconfigs%2Fspaces_around_ranges%2Ftrue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fspaces_around_ranges%2Ftrue.rs?ref=dfae6a99c061a0af561b9fe36e2f38e0849ac6d5", "patch": "@@ -3,4 +3,20 @@\n \n fn main() {\n     let lorem = 0 .. 10;\n+    let ipsum = 0 ..= 10;\n+\n+    match lorem {\n+        1 .. 5 => foo(),\n+        _ => bar,\n+    }\n+\n+    match lorem {\n+        1 ..= 5 => foo(),\n+        _ => bar,\n+    }\n+\n+    match lorem {\n+        1 ... 5 => foo(),\n+        _ => bar,\n+    }\n }"}]}