{"sha": "e3527fdba7178120a6398e76aa4b3908b10ef85e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzNTI3ZmRiYTcxNzgxMjBhNjM5OGU3NmFhNGIzOTA4YjEwZWY4NWU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-03-02T08:31:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-02T08:31:04Z"}, "message": "Merge pull request #647 from spastorino/place_base\n\nPlace::Local(x) is now Place::Base(PlaceBase::Local(x))", "tree": {"sha": "99636a05725d23e40cd01ed6be087b361baaeb5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99636a05725d23e40cd01ed6be087b361baaeb5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3527fdba7178120a6398e76aa4b3908b10ef85e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcej9ICRBK7hj4Ov3rIwAAdHIIAJbVBEJWX+Sw/B3ynE1E92ld\nx5Uo7bYEZwBD++9c+8iGbRAm3xWIFzPBa0rH1dzOoOJ3PGnfopm8ds/FL334CS36\naItzhO639lUwRrA4Wyoip/XDhaSUYmXnS7r0IBeEgNKyBWCfFDqIBVrVERXrGhDM\nvmwFSuFKfE/tDKUOjx3p5FZQarNJTE8UDcHFMSkzxXqTDKkXy0gX/lEObXo+WMK0\nMdy/sL1uyOiyRCRmcgmGLhv22lFRkU4am3JnIndzG8CV2e/hkSbxkzGCRkDuV3D8\noNRShRDtrdpsDdLU3Jhr/SVUrvfFOdr2+btBCr5hI7O6OL1nsAuHMYzMsKx5TPU=\n=+EP7\n-----END PGP SIGNATURE-----\n", "payload": "tree 99636a05725d23e40cd01ed6be087b361baaeb5a\nparent 909045d848dd1614ae2440a93966c683f8aa83e1\nparent 355135bb895c16e9011d6b83ad13663de47d2c64\nauthor Ralf Jung <post@ralfj.de> 1551515464 +0100\ncommitter GitHub <noreply@github.com> 1551515464 +0100\n\nMerge pull request #647 from spastorino/place_base\n\nPlace::Local(x) is now Place::Base(PlaceBase::Local(x))"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3527fdba7178120a6398e76aa4b3908b10ef85e", "html_url": "https://github.com/rust-lang/rust/commit/e3527fdba7178120a6398e76aa4b3908b10ef85e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3527fdba7178120a6398e76aa4b3908b10ef85e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "909045d848dd1614ae2440a93966c683f8aa83e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/909045d848dd1614ae2440a93966c683f8aa83e1", "html_url": "https://github.com/rust-lang/rust/commit/909045d848dd1614ae2440a93966c683f8aa83e1"}, {"sha": "355135bb895c16e9011d6b83ad13663de47d2c64", "url": "https://api.github.com/repos/rust-lang/rust/commits/355135bb895c16e9011d6b83ad13663de47d2c64", "html_url": "https://github.com/rust-lang/rust/commit/355135bb895c16e9011d6b83ad13663de47d2c64"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "bf8995fe8a3edaa2473c23b1607cd4946fe0c8af", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3527fdba7178120a6398e76aa4b3908b10ef85e/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/e3527fdba7178120a6398e76aa4b3908b10ef85e/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=e3527fdba7178120a6398e76aa4b3908b10ef85e", "patch": "@@ -1 +1 @@\n-nightly-2019-02-24\n+nightly-2019-03-02"}, {"sha": "b496a9b7d41d7327daf1947da77458f8a6c1387a", "filename": "src/fn_call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3527fdba7178120a6398e76aa4b3908b10ef85e/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3527fdba7178120a6398e76aa4b3908b10ef85e/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=e3527fdba7178120a6398e76aa4b3908b10ef85e", "patch": "@@ -275,7 +275,7 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a + 'mir>: crate::MiriEvalContextExt<'\n                             .to_owned(),\n                     ),\n                 )?;\n-                let arg_dest = this.eval_place(&mir::Place::Local(arg_local))?;\n+                let arg_dest = this.eval_place(&mir::Place::Base(mir::PlaceBase::Local(arg_local)))?;\n                 this.write_scalar(data, arg_dest)?;\n \n                 assert!(args.next().is_none(), \"__rust_maybe_catch_panic argument has more arguments than expected\");"}, {"sha": "cf6a885c605c29acd80a018a8a7838ff5d1254a1", "filename": "src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e3527fdba7178120a6398e76aa4b3908b10ef85e/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3527fdba7178120a6398e76aa4b3908b10ef85e/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=e3527fdba7178120a6398e76aa4b3908b10ef85e", "patch": "@@ -121,11 +121,11 @@ pub fn create_ecx<'a, 'mir: 'a, 'tcx: 'mir>(\n \n     // First argument: pointer to `main()`.\n     let main_ptr = ecx.memory_mut().create_fn_alloc(main_instance).with_default_tag();\n-    let dest = ecx.eval_place(&mir::Place::Local(args.next().unwrap()))?;\n+    let dest = ecx.eval_place(&mir::Place::Base(mir::PlaceBase::Local(args.next().unwrap())))?;\n     ecx.write_scalar(Scalar::Ptr(main_ptr), dest)?;\n \n     // Second argument (argc): `1`.\n-    let dest = ecx.eval_place(&mir::Place::Local(args.next().unwrap()))?;\n+    let dest = ecx.eval_place(&mir::Place::Base(mir::PlaceBase::Local(args.next().unwrap())))?;\n     let argc = Scalar::from_uint(config.args.len() as u128, dest.layout.size);\n     ecx.write_scalar(argc, dest)?;\n     // Store argc for macOS's `_NSGetArgc`.\n@@ -137,7 +137,7 @@ pub fn create_ecx<'a, 'mir: 'a, 'tcx: 'mir>(\n \n     // FIXME: extract main source file path.\n     // Third argument (`argv`): created from `config.args`.\n-    let dest = ecx.eval_place(&mir::Place::Local(args.next().unwrap()))?;\n+    let dest = ecx.eval_place(&mir::Place::Base(mir::PlaceBase::Local(args.next().unwrap())))?;\n     // For Windows, construct a command string with all the aguments.\n     let mut cmd = String::new();\n     for arg in config.args.iter() {\n@@ -437,12 +437,12 @@ impl<'a, 'mir, 'tcx> Machine<'a, 'mir, 'tcx> for Evaluator<'tcx> {\n \n         // First argument: `size`.\n         // (`0` is allowed here -- this is expected to be handled by the lang item).\n-        let arg = ecx.eval_place(&mir::Place::Local(args.next().unwrap()))?;\n+        let arg = ecx.eval_place(&mir::Place::Base(mir::PlaceBase::Local(args.next().unwrap())))?;\n         let size = layout.size.bytes();\n         ecx.write_scalar(Scalar::from_uint(size, arg.layout.size), arg)?;\n \n         // Second argument: `align`.\n-        let arg = ecx.eval_place(&mir::Place::Local(args.next().unwrap()))?;\n+        let arg = ecx.eval_place(&mir::Place::Base(mir::PlaceBase::Local(args.next().unwrap())))?;\n         let align = layout.align.abi.bytes();\n         ecx.write_scalar(Scalar::from_uint(align, arg.layout.size), arg)?;\n "}, {"sha": "796c2e5f9827ab861b62c67bdb64776ee05bc5b5", "filename": "src/tls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3527fdba7178120a6398e76aa4b3908b10ef85e/src%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3527fdba7178120a6398e76aa4b3908b10ef85e/src%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftls.rs?ref=e3527fdba7178120a6398e76aa4b3908b10ef85e", "patch": "@@ -151,7 +151,7 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a+'mir>: crate::MiriEvalContextExt<'a,\n             let arg_local = this.frame().mir.args_iter().next().ok_or_else(\n                 || EvalErrorKind::AbiViolation(\"TLS dtor does not take enough arguments.\".to_owned()),\n             )?;\n-            let dest = this.eval_place(&mir::Place::Local(arg_local))?;\n+            let dest = this.eval_place(&mir::Place::Base(mir::PlaceBase::Local(arg_local)))?;\n             this.write_scalar(ptr, dest)?;\n \n             // step until out of stackframes"}]}