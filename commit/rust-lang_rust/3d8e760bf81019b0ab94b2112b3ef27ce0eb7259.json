{"sha": "3d8e760bf81019b0ab94b2112b3ef27ce0eb7259", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkOGU3NjBiZjgxMDE5YjBhYjk0YjIxMTJiM2VmMjdjZTBlYjcyNTk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-08-22T15:45:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-22T15:45:36Z"}, "message": "Rollup merge of #53541 - GuillaumeGomez:fix-impl-trait-ret-type, r=oli-obk\n\nFix missing impl trait display as ret type\n\nI need to convert a `TraitPredicate` into a `TraitBound` to get the returned impl trait. So far, didn't find how or even if it was the good way to do it.\n\ncc @eddyb @oli-obk (since you're the one behind the change apparently \ud83d\ude09)", "tree": {"sha": "3d9363a376f93586a9665b417c64893ad335c308", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d9363a376f93586a9665b417c64893ad335c308"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d8e760bf81019b0ab94b2112b3ef27ce0eb7259", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbfYUgCRBK7hj4Ov3rIwAAdHIIAGXhEpBIigbyz5o220oZPKKF\nwp85HfbBc36J4loKRjI+lKnFdZk+ZRju1FMElTHtuG5yzvHjHClUKQpTFN/Isl7L\nrvjxzQZw3/k1xpKN0vaWwSRiGIwCJCPvauv4xC6lUnQxIff/bK9JJCtu9718pGQx\nkTptQvrsP66+cPnjmL5B5iehjsyYlipDvXYkKTgyptCNVGAP3JgT6foVFTk2BArF\nezOME0lWzNbp1XM0PSLPkCl5vg2wyanO1ue+2Q7Ad3rC6U5du4tpTTAdfEe/0jM0\n71nmMXKTowy9Qx31dqi4B7KkfOvkZj+G5+8q4/jU5YEqxMJAouN81hmyHYyOiA8=\n=kEhQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 3d9363a376f93586a9665b417c64893ad335c308\nparent 4fa4bb56339868a125c2f5a80a1cea982d92d545\nparent e67bba8ebe14c815c4f756aa267249e5c35d5ec5\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1534952736 +0200\ncommitter GitHub <noreply@github.com> 1534952736 +0200\n\nRollup merge of #53541 - GuillaumeGomez:fix-impl-trait-ret-type, r=oli-obk\n\nFix missing impl trait display as ret type\n\nI need to convert a `TraitPredicate` into a `TraitBound` to get the returned impl trait. So far, didn't find how or even if it was the good way to do it.\n\ncc @eddyb @oli-obk (since you're the one behind the change apparently \ud83d\ude09)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d8e760bf81019b0ab94b2112b3ef27ce0eb7259", "html_url": "https://github.com/rust-lang/rust/commit/3d8e760bf81019b0ab94b2112b3ef27ce0eb7259", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d8e760bf81019b0ab94b2112b3ef27ce0eb7259/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fa4bb56339868a125c2f5a80a1cea982d92d545", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fa4bb56339868a125c2f5a80a1cea982d92d545", "html_url": "https://github.com/rust-lang/rust/commit/4fa4bb56339868a125c2f5a80a1cea982d92d545"}, {"sha": "e67bba8ebe14c815c4f756aa267249e5c35d5ec5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e67bba8ebe14c815c4f756aa267249e5c35d5ec5", "html_url": "https://github.com/rust-lang/rust/commit/e67bba8ebe14c815c4f756aa267249e5c35d5ec5"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "a7fe15deb522bbde19acc9d172140bb7b47a0638", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3d8e760bf81019b0ab94b2112b3ef27ce0eb7259/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d8e760bf81019b0ab94b2112b3ef27ce0eb7259/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=3d8e760bf81019b0ab94b2112b3ef27ce0eb7259", "patch": "@@ -2378,6 +2378,7 @@ impl From<ast::FloatTy> for PrimitiveType {\n impl Clean<Type> for hir::Ty {\n     fn clean(&self, cx: &DocContext) -> Type {\n         use rustc::hir::*;\n+\n         match self.node {\n             TyKind::Never => Never,\n             TyKind::Ptr(ref m) => RawPointer(m.mutbl.clean(cx), box m.ty.clean(cx)),\n@@ -2415,6 +2416,14 @@ impl Clean<Type> for hir::Ty {\n                     if let Some(bounds) = cx.impl_trait_bounds.borrow_mut().remove(&did) {\n                         return ImplTrait(bounds);\n                     }\n+                } else if let Def::Existential(did) = path.def {\n+                    // This block is for returned impl trait only.\n+                    if let Some(node_id) = cx.tcx.hir.as_local_node_id(did) {\n+                        let item = cx.tcx.hir.expect_item(node_id);\n+                        if let hir::ItemKind::Existential(ref ty) = item.node {\n+                            return ImplTrait(ty.bounds.clean(cx));\n+                        }\n+                    }\n                 }\n \n                 let mut alias = None;"}, {"sha": "62da6f13942d8f1e225f1b7d10b74300209f78d0", "filename": "src/test/rustdoc/impl-everywhere.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/3d8e760bf81019b0ab94b2112b3ef27ce0eb7259/src%2Ftest%2Frustdoc%2Fimpl-everywhere.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d8e760bf81019b0ab94b2112b3ef27ce0eb7259/src%2Ftest%2Frustdoc%2Fimpl-everywhere.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fimpl-everywhere.rs?ref=3d8e760bf81019b0ab94b2112b3ef27ce0eb7259", "patch": "@@ -0,0 +1,40 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+pub trait Foo {}\n+pub trait Foo2 {}\n+\n+pub struct Bar;\n+\n+impl Foo for Bar {}\n+impl Foo2 for Bar {}\n+\n+// @!has foo/fn.foo.html '//section[@id=\"main\"]//pre' \"x: &\\'x impl Foo\"\n+// @!has foo/fn.foo.html '//section[@id=\"main\"]//pre' \"-> &\\'x impl Foo {\"\n+pub fn foo<'x>(x: &'x impl Foo) -> &'x impl Foo {\n+    x\n+}\n+\n+// @!has foo/fn.foo2.html '//section[@id=\"main\"]//pre' \"x: &\\'x impl Foo\"\n+// @!has foo/fn.foo2.html '//section[@id=\"main\"]//pre' '-> impl Foo2 {'\n+pub fn foo2<'x>(_x: &'x impl Foo) -> impl Foo2 {\n+    Bar\n+}\n+\n+// @!has foo/fn.foo_foo.html '//section[@id=\"main\"]//pre' '-> impl Foo + Foo2 {'\n+pub fn foo_foo() -> impl Foo + Foo2 {\n+    Bar\n+}\n+\n+// @!has foo/fn.foo2.html '//section[@id=\"main\"]//pre' \"x: &'x (impl Foo + Foo2)\"\n+pub fn foo_foo_foo<'x>(_x: &'x (impl Foo + Foo2)) {\n+}"}]}