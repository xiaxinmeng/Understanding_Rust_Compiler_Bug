{"sha": "f84d081a7e705da1f3e920801319424b53cfd8b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NGQwODFhN2U3MDVkYTFmM2U5MjA4MDEzMTk0MjRiNTNjZmQ4YjA=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-06T09:47:35Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-07T07:38:26Z"}, "message": "Avoid instaiblity errors in code generated by `syntax_ext::deriving::call_intrinsic()`.", "tree": {"sha": "62548caa7c06d56f75d1b79f88806c4032b13d63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62548caa7c06d56f75d1b79f88806c4032b13d63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f84d081a7e705da1f3e920801319424b53cfd8b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f84d081a7e705da1f3e920801319424b53cfd8b0", "html_url": "https://github.com/rust-lang/rust/commit/f84d081a7e705da1f3e920801319424b53cfd8b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f84d081a7e705da1f3e920801319424b53cfd8b0/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86995dc8c56b3c2923dff8a4bb79fed7c60a4396", "url": "https://api.github.com/repos/rust-lang/rust/commits/86995dc8c56b3c2923dff8a4bb79fed7c60a4396", "html_url": "https://github.com/rust-lang/rust/commit/86995dc8c56b3c2923dff8a4bb79fed7c60a4396"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "fcbce3638908249fd5ecb6135ffb65afe4ba983b", "filename": "src/libsyntax_ext/deriving/mod.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f84d081a7e705da1f3e920801319424b53cfd8b0/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f84d081a7e705da1f3e920801319424b53cfd8b0/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs?ref=f84d081a7e705da1f3e920801319424b53cfd8b0", "patch": "@@ -338,10 +338,19 @@ fn hygienic_type_parameter(item: &Annotatable, base: &str) -> String {\n \n /// Constructs an expression that calls an intrinsic\n fn call_intrinsic(cx: &ExtCtxt,\n-                  span: Span,\n+                  mut span: Span,\n                   intrinsic: &str,\n                   args: Vec<P<ast::Expr>>)\n                   -> P<ast::Expr> {\n+    span.expn_id = cx.codemap().record_expansion(codemap::ExpnInfo {\n+        call_site: span,\n+        callee: codemap::NameAndSpan {\n+            format: codemap::MacroAttribute(intern(\"derive\")),\n+            span: Some(span),\n+            allow_internal_unstable: true,\n+        },\n+    });\n+\n     let path = cx.std_path(&[\"intrinsics\", intrinsic]);\n     let call = cx.expr_call_global(span, path, args);\n "}]}