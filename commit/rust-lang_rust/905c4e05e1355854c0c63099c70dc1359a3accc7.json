{"sha": "905c4e05e1355854c0c63099c70dc1359a3accc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNWM0ZTA1ZTEzNTU4NTRjMGM2MzA5OWM3MGRjMTM1OWEzYWNjYzc=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-14T14:38:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-14T14:38:56Z"}, "message": "Rollup merge of #73866 - Goirad:fix-entry-improper-ctypes, r=davidtwco\n\nObviate #[allow(improper_ctypes_definitions)]\n\nModifies the return type for `fn entry` so that allowing\nimproper_ctypes_definitions is no longer necessary. This change is\nderived from a similar pattern in `libstd/sys/sgx/abi/usercalls/raw.rs`\nwith `UsercallReturn`.\n\ncc @jethrogb", "tree": {"sha": "b5c5b3fbaac3811b6c4a154f64c9374240b82765", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5c5b3fbaac3811b6c4a154f64c9374240b82765"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/905c4e05e1355854c0c63099c70dc1359a3accc7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDcOACRBK7hj4Ov3rIwAAdHIIAIaEqwopCJH7wNO56EVs+bdX\n9LPpURNFhfKr8ur1Ari2UVnEraCrU0QcjqBXK/j/pPjM/lEq+JbB0BMkqQvH2IY3\nfpLOziHAM1WTPKOnPLit413kAU5PN9imcqk9rzQme2HMFjDOpICwR2GyRFj8WsG1\nxQB8V2u3QTv1geiCe+I6gEVTYOOv0G0bUkB6PTvA55NCqztV3gSKg55xcVdDlgCu\nHAWnvW8+Wg7gQKbil0qYH2Gie4uVntIDm7Wc04CZ85M/dGZKuPmVdbEV+BR6EjV6\nDJ8Mv5WWF3u8iran65PwNcNZAXwUKQfPZfOL6mw69paTsRif+p9g2pq6VLixcZQ=\n=rkgj\n-----END PGP SIGNATURE-----\n", "payload": "tree b5c5b3fbaac3811b6c4a154f64c9374240b82765\nparent 5e61827dd37041ef689ec51860c690114e92a7c9\nparent 9448ed4c1f8b586c9c90a78c12afc4c826041d5a\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594737536 -0700\ncommitter GitHub <noreply@github.com> 1594737536 -0700\n\nRollup merge of #73866 - Goirad:fix-entry-improper-ctypes, r=davidtwco\n\nObviate #[allow(improper_ctypes_definitions)]\n\nModifies the return type for `fn entry` so that allowing\nimproper_ctypes_definitions is no longer necessary. This change is\nderived from a similar pattern in `libstd/sys/sgx/abi/usercalls/raw.rs`\nwith `UsercallReturn`.\n\ncc @jethrogb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/905c4e05e1355854c0c63099c70dc1359a3accc7", "html_url": "https://github.com/rust-lang/rust/commit/905c4e05e1355854c0c63099c70dc1359a3accc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/905c4e05e1355854c0c63099c70dc1359a3accc7/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e61827dd37041ef689ec51860c690114e92a7c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e61827dd37041ef689ec51860c690114e92a7c9", "html_url": "https://github.com/rust-lang/rust/commit/5e61827dd37041ef689ec51860c690114e92a7c9"}, {"sha": "9448ed4c1f8b586c9c90a78c12afc4c826041d5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9448ed4c1f8b586c9c90a78c12afc4c826041d5a", "html_url": "https://github.com/rust-lang/rust/commit/9448ed4c1f8b586c9c90a78c12afc4c826041d5a"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "b0693b63a48fd19c3b863edd53daa79a7de9d438", "filename": "src/libstd/sys/sgx/abi/mod.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/905c4e05e1355854c0c63099c70dc1359a3accc7/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/905c4e05e1355854c0c63099c70dc1359a3accc7/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fmod.rs?ref=905c4e05e1355854c0c63099c70dc1359a3accc7", "patch": "@@ -17,6 +17,9 @@ pub mod usercalls;\n #[cfg(not(test))]\n global_asm!(include_str!(\"entry.S\"));\n \n+#[repr(C)]\n+struct EntryReturn(u64, u64);\n+\n #[cfg(not(test))]\n #[no_mangle]\n unsafe extern \"C\" fn tcs_init(secondary: bool) {\n@@ -56,16 +59,15 @@ unsafe extern \"C\" fn tcs_init(secondary: bool) {\n // able to specify this\n #[cfg(not(test))]\n #[no_mangle]\n-#[allow(improper_ctypes_definitions)]\n-extern \"C\" fn entry(p1: u64, p2: u64, p3: u64, secondary: bool, p4: u64, p5: u64) -> (u64, u64) {\n+extern \"C\" fn entry(p1: u64, p2: u64, p3: u64, secondary: bool, p4: u64, p5: u64) -> EntryReturn {\n     // FIXME: how to support TLS in library mode?\n     let tls = Box::new(tls::Tls::new());\n     let _tls_guard = unsafe { tls.activate() };\n \n     if secondary {\n         super::thread::Thread::entry();\n \n-        (0, 0)\n+        EntryReturn(0, 0)\n     } else {\n         extern \"C\" {\n             fn main(argc: isize, argv: *const *const u8) -> isize;"}]}