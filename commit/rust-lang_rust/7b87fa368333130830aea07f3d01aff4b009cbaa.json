{"sha": "7b87fa368333130830aea07f3d01aff4b009cbaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiODdmYTM2ODMzMzEzMDgzMGFlYTA3ZjNkMDFhZmY0YjAwOWNiYWE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-01T18:01:59Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-01T18:01:59Z"}, "message": "Replace a lock/unlock with scoped_lock in rust_scheduler::create_task", "tree": {"sha": "7e8657f42c6ca6a448e255b2c5421caa5614acc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e8657f42c6ca6a448e255b2c5421caa5614acc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b87fa368333130830aea07f3d01aff4b009cbaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b87fa368333130830aea07f3d01aff4b009cbaa", "html_url": "https://github.com/rust-lang/rust/commit/7b87fa368333130830aea07f3d01aff4b009cbaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b87fa368333130830aea07f3d01aff4b009cbaa/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4837a57df50e6dcc22b4ba39ad86f291439878af", "url": "https://api.github.com/repos/rust-lang/rust/commits/4837a57df50e6dcc22b4ba39ad86f291439878af", "html_url": "https://github.com/rust-lang/rust/commit/4837a57df50e6dcc22b4ba39ad86f291439878af"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "2c4b886b6e265aaf198eec987925448eeb0bf6e4", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7b87fa368333130830aea07f3d01aff4b009cbaa/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7b87fa368333130830aea07f3d01aff4b009cbaa/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=7b87fa368333130830aea07f3d01aff4b009cbaa", "patch": "@@ -272,9 +272,11 @@ rust_scheduler::create_task(rust_task *spawner, const char *name) {\n         task->pin(spawner->pinned_on);\n         task->on_wakeup(spawner->_on_wakeup);\n     }\n-    lock.lock();\n-    newborn_tasks.append(task);\n-    lock.unlock();\n+\n+    {\n+        scoped_lock with(lock);\n+        newborn_tasks.append(task);\n+    }\n \n     sync::increment(kernel->live_tasks);\n "}]}