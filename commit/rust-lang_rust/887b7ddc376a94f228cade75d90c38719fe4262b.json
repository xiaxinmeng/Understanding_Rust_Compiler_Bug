{"sha": "887b7ddc376a94f228cade75d90c38719fe4262b", "node_id": "C_kwDOAAsO6NoAKDg4N2I3ZGRjMzc2YTk0ZjIyOGNhZGU3NWQ5MGMzODcxOWZlNDI2MmI", "commit": {"author": {"name": "hamidreza kalbasi", "email": "hamidrezakalbasi@protonmail.com", "date": "2021-09-21T15:25:57Z"}, "committer": {"name": "hamidreza kalbasi", "email": "hamidrezakalbasi@protonmail.com", "date": "2021-09-21T15:25:57Z"}, "message": "fix derive hover in macro", "tree": {"sha": "d7114fc31402c5c87f6732b8132de7e8313c9db8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7114fc31402c5c87f6732b8132de7e8313c9db8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/887b7ddc376a94f228cade75d90c38719fe4262b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/887b7ddc376a94f228cade75d90c38719fe4262b", "html_url": "https://github.com/rust-lang/rust/commit/887b7ddc376a94f228cade75d90c38719fe4262b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/887b7ddc376a94f228cade75d90c38719fe4262b/comments", "author": {"login": "HKalbasi", "id": 45197576, "node_id": "MDQ6VXNlcjQ1MTk3NTc2", "avatar_url": "https://avatars.githubusercontent.com/u/45197576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HKalbasi", "html_url": "https://github.com/HKalbasi", "followers_url": "https://api.github.com/users/HKalbasi/followers", "following_url": "https://api.github.com/users/HKalbasi/following{/other_user}", "gists_url": "https://api.github.com/users/HKalbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/HKalbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HKalbasi/subscriptions", "organizations_url": "https://api.github.com/users/HKalbasi/orgs", "repos_url": "https://api.github.com/users/HKalbasi/repos", "events_url": "https://api.github.com/users/HKalbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/HKalbasi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HKalbasi", "id": 45197576, "node_id": "MDQ6VXNlcjQ1MTk3NTc2", "avatar_url": "https://avatars.githubusercontent.com/u/45197576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HKalbasi", "html_url": "https://github.com/HKalbasi", "followers_url": "https://api.github.com/users/HKalbasi/followers", "following_url": "https://api.github.com/users/HKalbasi/following{/other_user}", "gists_url": "https://api.github.com/users/HKalbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/HKalbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HKalbasi/subscriptions", "organizations_url": "https://api.github.com/users/HKalbasi/orgs", "repos_url": "https://api.github.com/users/HKalbasi/repos", "events_url": "https://api.github.com/users/HKalbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/HKalbasi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0777698f29e0ee7d73de17bf8f35385410f1963f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0777698f29e0ee7d73de17bf8f35385410f1963f", "html_url": "https://github.com/rust-lang/rust/commit/0777698f29e0ee7d73de17bf8f35385410f1963f"}], "stats": {"total": 69, "additions": 55, "deletions": 14}, "files": [{"sha": "0d916acaded46576482f97bcc521f5125ce3ab78", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 55, "deletions": 14, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/887b7ddc376a94f228cade75d90c38719fe4262b/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/887b7ddc376a94f228cade75d90c38719fe4262b/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=887b7ddc376a94f228cade75d90c38719fe4262b", "patch": "@@ -118,26 +118,36 @@ pub(crate) fn hover(\n \n     let mut fallback = None;\n     // attributes, require special machinery as they are mere ident tokens\n-    if token.kind() != COMMENT {\n-        if let Some(attr) = token.ancestors().find_map(ast::Attr::cast) {\n-            // lints\n-            if let Some(res) = try_hover_for_lint(&attr, &token) {\n-                return Some(res);\n-            // derives\n-            } else {\n-                let def = try_resolve_derive_input_at(&sema, &attr, &token).map(Definition::Macro);\n-                if let Some(def) = def {\n-                    if let Some(hover) =\n-                        hover_for_definition(&sema, file_id, def, &token.parent().unwrap(), config)\n-                    {\n-                        return Some(RangeInfo::new(token.text_range(), hover));\n+\n+    let descend_macros = sema.descend_into_macros_many(token.clone());\n+\n+    for token in &descend_macros {\n+        if token.kind() != COMMENT {\n+            if let Some(attr) = token.ancestors().find_map(ast::Attr::cast) {\n+                // lints\n+                if let Some(res) = try_hover_for_lint(&attr, &token) {\n+                    return Some(res);\n+                // derives\n+                } else {\n+                    let def =\n+                        try_resolve_derive_input_at(&sema, &attr, &token).map(Definition::Macro);\n+                    if let Some(def) = def {\n+                        if let Some(hover) = hover_for_definition(\n+                            &sema,\n+                            file_id,\n+                            def,\n+                            &token.parent().unwrap(),\n+                            config,\n+                        ) {\n+                            return Some(RangeInfo::new(token.text_range(), hover));\n+                        }\n                     }\n                 }\n             }\n         }\n     }\n \n-    sema.descend_into_macros_many(token.clone())\n+    descend_macros\n         .iter()\n         .filter_map(|token| match token.parent() {\n             Some(node) => {\n@@ -4560,6 +4570,37 @@ use crate as foo$0;\n         );\n     }\n \n+    // FIXME: wrong range in macros. `es! ` should be `Copy`\n+    #[test]\n+    fn hover_attribute_in_macro() {\n+        check(\n+            r#\"\n+macro_rules! identity {\n+    ($struct:item) => {\n+        $struct\n+    };\n+}\n+#[rustc_builtin_macro]\n+pub macro Copy {}\n+identity!{\n+    #[derive(Copy$0)]\n+    struct Foo;\n+}\n+\"#,\n+            expect![[r#\"\n+                *es! *\n+\n+                ```rust\n+                test\n+                ```\n+\n+                ```rust\n+                pub macro Copy\n+                ```\n+            \"#]],\n+        );\n+    }\n+\n     #[test]\n     fn hover_derive_input() {\n         check("}]}