{"sha": "681ea93d52dd74a5626b9b9d714dd264b0d7ebc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MWVhOTNkNTJkZDc0YTU2MjZiOWI5ZDcxNGRkMjY0YjBkN2ViYzc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-11-11T04:05:17Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-11-11T04:43:08Z"}, "message": "Enable uv pipe tests on windows\n\nTurns out the pipe names must have special names on windows. Once we have\nspecial names, all the tests pass just fine.\n\nCloses #10386", "tree": {"sha": "db52702dae3f2f8bc97895ae79b16140084dc5fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db52702dae3f2f8bc97895ae79b16140084dc5fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/681ea93d52dd74a5626b9b9d714dd264b0d7ebc7", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/681ea93d52dd74a5626b9b9d714dd264b0d7ebc7", "html_url": "https://github.com/rust-lang/rust/commit/681ea93d52dd74a5626b9b9d714dd264b0d7ebc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/681ea93d52dd74a5626b9b9d714dd264b0d7ebc7/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5e602ac563422e13a18be9f79100f96359d582a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5e602ac563422e13a18be9f79100f96359d582a", "html_url": "https://github.com/rust-lang/rust/commit/b5e602ac563422e13a18be9f79100f96359d582a"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "1b0f352dc4df1dc1b0710574564a5652defe6c95", "filename": "src/librustuv/pipe.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/681ea93d52dd74a5626b9b9d714dd264b0d7ebc7/src%2Flibrustuv%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/681ea93d52dd74a5626b9b9d714dd264b0d7ebc7/src%2Flibrustuv%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Fpipe.rs?ref=681ea93d52dd74a5626b9b9d714dd264b0d7ebc7", "patch": "@@ -251,7 +251,6 @@ mod tests {\n     use super::super::local_loop;\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME(#10386): how windows pipes work\n     fn connect_err() {\n         match PipeWatcher::connect(local_loop(), &\"path/to/nowhere\".to_c_str()) {\n             Ok(*) => fail!(),\n@@ -260,7 +259,6 @@ mod tests {\n     }\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME(#10386): how windows pipes work\n     fn bind_err() {\n         match PipeListener::bind(local_loop(), &\"path/to/nowhere\".to_c_str()) {\n             Ok(*) => fail!(),\n@@ -269,7 +267,6 @@ mod tests {\n     }\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME(#10386): how windows pipes work\n     fn bind() {\n         let p = next_test_unix().to_c_str();\n         match PipeListener::bind(local_loop(), &p) {\n@@ -279,15 +276,13 @@ mod tests {\n     }\n \n     #[test] #[should_fail]\n-    #[ignore(cfg(windows))] // FIXME(#10386): how windows pipes work\n     fn bind_fail() {\n         let p = next_test_unix().to_c_str();\n         let _w = PipeListener::bind(local_loop(), &p).unwrap();\n         fail!();\n     }\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME(#10386): how windows pipes work\n     fn connect() {\n         let path = next_test_unix();\n         let path2 = path.clone();\n@@ -313,7 +308,6 @@ mod tests {\n     }\n \n     #[test] #[should_fail]\n-    #[ignore(cfg(windows))] // FIXME(#10386): how windows pipes work\n     fn connect_fail() {\n         let path = next_test_unix();\n         let path2 = path.clone();"}, {"sha": "aa680cddf2a04b35a870ed6501c2e564c6b20f6e", "filename": "src/libstd/rt/test.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/681ea93d52dd74a5626b9b9d714dd264b0d7ebc7/src%2Flibstd%2Frt%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/681ea93d52dd74a5626b9b9d714dd264b0d7ebc7/src%2Flibstd%2Frt%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Ftest.rs?ref=681ea93d52dd74a5626b9b9d714dd264b0d7ebc7", "patch": "@@ -375,7 +375,11 @@ pub fn next_test_port() -> u16 {\n /// Get a temporary path which could be the location of a unix socket\n #[fixed_stack_segment] #[inline(never)]\n pub fn next_test_unix() -> Path {\n-    os::tmpdir().join(rand::task_rng().gen_ascii_str(20))\n+    if cfg!(unix) {\n+        os::tmpdir().join(rand::task_rng().gen_ascii_str(20))\n+    } else {\n+        Path::new(r\"\\\\.\\pipe\\\" + rand::task_rng().gen_ascii_str(20))\n+    }\n }\n \n /// Get a unique IPv4 localhost:port pair starting at 9600"}]}