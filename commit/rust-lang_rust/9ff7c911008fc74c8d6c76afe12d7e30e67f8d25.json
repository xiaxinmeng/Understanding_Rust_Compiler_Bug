{"sha": "9ff7c911008fc74c8d6c76afe12d7e30e67f8d25", "node_id": "C_kwDOAAsO6NoAKDlmZjdjOTExMDA4ZmM3NGM4ZDZjNzZhZmUxMmQ3ZTMwZTY3ZjhkMjU", "commit": {"author": {"name": "Ariel Uy", "email": "ariel.b.uy@gmail.com", "date": "2022-07-10T21:37:38Z"}, "committer": {"name": "Ariel Uy", "email": "ariel.b.uy@gmail.com", "date": "2022-07-18T01:44:49Z"}, "message": "Add new lint `obfuscated_if_else`\n\nNew lint suggests using `if .. else ..` instead of\n`.then_some(..).unwrap_or(..)`.", "tree": {"sha": "d28e500b7d3078923a8752900d0ae61f73c5fdd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d28e500b7d3078923a8752900d0ae61f73c5fdd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25", "html_url": "https://github.com/rust-lang/rust/commit/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/comments", "author": {"login": "arieluy", "id": 36049232, "node_id": "MDQ6VXNlcjM2MDQ5MjMy", "avatar_url": "https://avatars.githubusercontent.com/u/36049232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arieluy", "html_url": "https://github.com/arieluy", "followers_url": "https://api.github.com/users/arieluy/followers", "following_url": "https://api.github.com/users/arieluy/following{/other_user}", "gists_url": "https://api.github.com/users/arieluy/gists{/gist_id}", "starred_url": "https://api.github.com/users/arieluy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arieluy/subscriptions", "organizations_url": "https://api.github.com/users/arieluy/orgs", "repos_url": "https://api.github.com/users/arieluy/repos", "events_url": "https://api.github.com/users/arieluy/events{/privacy}", "received_events_url": "https://api.github.com/users/arieluy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arieluy", "id": 36049232, "node_id": "MDQ6VXNlcjM2MDQ5MjMy", "avatar_url": "https://avatars.githubusercontent.com/u/36049232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arieluy", "html_url": "https://github.com/arieluy", "followers_url": "https://api.github.com/users/arieluy/followers", "following_url": "https://api.github.com/users/arieluy/following{/other_user}", "gists_url": "https://api.github.com/users/arieluy/gists{/gist_id}", "starred_url": "https://api.github.com/users/arieluy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arieluy/subscriptions", "organizations_url": "https://api.github.com/users/arieluy/orgs", "repos_url": "https://api.github.com/users/arieluy/repos", "events_url": "https://api.github.com/users/arieluy/events{/privacy}", "received_events_url": "https://api.github.com/users/arieluy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ea4592a8b4197bc77ac531594a295253d620364", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ea4592a8b4197bc77ac531594a295253d620364", "html_url": "https://github.com/rust-lang/rust/commit/7ea4592a8b4197bc77ac531594a295253d620364"}], "stats": {"total": 104, "additions": 104, "deletions": 0}, "files": [{"sha": "00fce79ec063d1c2f65dcaa8b064de4ccdb78e8e", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=9ff7c911008fc74c8d6c76afe12d7e30e67f8d25", "patch": "@@ -3792,6 +3792,7 @@ Released 2018-09-13\n [`nonsensical_open_options`]: https://rust-lang.github.io/rust-clippy/master/index.html#nonsensical_open_options\n [`nonstandard_macro_braces`]: https://rust-lang.github.io/rust-clippy/master/index.html#nonstandard_macro_braces\n [`not_unsafe_ptr_arg_deref`]: https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n+[`obfuscated_if_else`]: https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n [`octal_escapes`]: https://rust-lang.github.io/rust-clippy/master/index.html#octal_escapes\n [`ok_expect`]: https://rust-lang.github.io/rust-clippy/master/index.html#ok_expect\n [`only_used_in_recursion`]: https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion"}, {"sha": "69387d560c9147bf3a8bb9be8e9087a35368787e", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=9ff7c911008fc74c8d6c76afe12d7e30e67f8d25", "patch": "@@ -188,6 +188,7 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(methods::NEEDLESS_SPLITN),\n     LintId::of(methods::NEW_RET_NO_SELF),\n     LintId::of(methods::NO_EFFECT_REPLACE),\n+    LintId::of(methods::OBFUSCATED_IF_ELSE),\n     LintId::of(methods::OK_EXPECT),\n     LintId::of(methods::OPTION_AS_REF_DEREF),\n     LintId::of(methods::OPTION_FILTER_MAP),"}, {"sha": "24b921faf0337a05b77ca7d17ced8a7f4c4182a3", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=9ff7c911008fc74c8d6c76afe12d7e30e67f8d25", "patch": "@@ -330,6 +330,7 @@ store.register_lints(&[\n     methods::NEEDLESS_SPLITN,\n     methods::NEW_RET_NO_SELF,\n     methods::NO_EFFECT_REPLACE,\n+    methods::OBFUSCATED_IF_ELSE,\n     methods::OK_EXPECT,\n     methods::OPTION_AS_REF_DEREF,\n     methods::OPTION_FILTER_MAP,"}, {"sha": "e95bab1d0454d3d496e5fa65018b1dd0793141d6", "filename": "clippy_lints/src/lib.register_style.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/clippy_lints%2Fsrc%2Flib.register_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/clippy_lints%2Fsrc%2Flib.register_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_style.rs?ref=9ff7c911008fc74c8d6c76afe12d7e30e67f8d25", "patch": "@@ -70,6 +70,7 @@ store.register_group(true, \"clippy::style\", Some(\"clippy_style\"), vec![\n     LintId::of(methods::MANUAL_SATURATING_ARITHMETIC),\n     LintId::of(methods::MAP_COLLECT_RESULT_UNIT),\n     LintId::of(methods::NEW_RET_NO_SELF),\n+    LintId::of(methods::OBFUSCATED_IF_ELSE),\n     LintId::of(methods::OK_EXPECT),\n     LintId::of(methods::OPTION_MAP_OR_NONE),\n     LintId::of(methods::RESULT_MAP_OR_INTO_OPTION),"}, {"sha": "c252272e2540f22a90fdb5fcc3bdee99a12d5744", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=9ff7c911008fc74c8d6c76afe12d7e30e67f8d25", "patch": "@@ -46,6 +46,7 @@ mod map_unwrap_or;\n mod needless_option_as_deref;\n mod needless_option_take;\n mod no_effect_replace;\n+mod obfuscated_if_else;\n mod ok_expect;\n mod option_as_ref_deref;\n mod option_map_or_none;\n@@ -2259,6 +2260,35 @@ declare_clippy_lint! {\n     \"replace with no effect\"\n }\n \n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for usages of `.then_some(..).unwrap_or(..)`\n+    ///\n+    /// ### Why is this bad?\n+    /// This can be written more clearly with `if .. else ..`\n+    ///\n+    /// ### Limitations\n+    /// This lint currently only looks for usages of\n+    /// `.then_some(..).unwrap_or(..)`, but will be expanded\n+    /// to account for similar patterns.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// let x = true;\n+    /// x.then_some(\"a\").unwrap_or(\"b\");\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// let x = true;\n+    /// if x { \"a\" } else { \"b\" };\n+    /// ```\n+    #[clippy::version = \"1.64.0\"]\n+    pub OBFUSCATED_IF_ELSE,\n+    style,\n+    \"use of `.then_some(..).unwrap_or(..)` can be written \\\n+    more clearly with `if .. else ..`\"\n+}\n+\n pub struct Methods {\n     avoid_breaking_exported_api: bool,\n     msrv: Option<RustcVersion>,\n@@ -2360,6 +2390,7 @@ impl_lint_pass!(Methods => [\n     IS_DIGIT_ASCII_RADIX,\n     NEEDLESS_OPTION_TAKE,\n     NO_EFFECT_REPLACE,\n+    OBFUSCATED_IF_ELSE,\n ]);\n \n /// Extracts a method call name, args, and `Span` of the method name.\n@@ -2768,6 +2799,9 @@ impl Methods {\n                     Some((\"map\", [m_recv, m_arg], span)) => {\n                         option_map_unwrap_or::check(cx, expr, m_recv, m_arg, recv, u_arg, span);\n                     },\n+                    Some((\"then_some\", [t_recv, t_arg], _)) => {\n+                        obfuscated_if_else::check(cx, expr, t_recv, t_arg, u_arg);\n+                    },\n                     _ => {},\n                 },\n                 (\"unwrap_or_else\", [u_arg]) => match method_call(recv) {"}, {"sha": "4d7427b26621398af65280b7147796ab1d4d1ac7", "filename": "clippy_lints/src/methods/obfuscated_if_else.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/clippy_lints%2Fsrc%2Fmethods%2Fobfuscated_if_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/clippy_lints%2Fsrc%2Fmethods%2Fobfuscated_if_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fobfuscated_if_else.rs?ref=9ff7c911008fc74c8d6c76afe12d7e30e67f8d25", "patch": "@@ -0,0 +1,42 @@\n+// run-rustfix\n+\n+use super::OBFUSCATED_IF_ELSE;\n+use clippy_utils::{diagnostics::span_lint_and_sugg, source::snippet_with_applicability};\n+use rustc_errors::Applicability;\n+use rustc_hir as hir;\n+use rustc_lint::LateContext;\n+\n+pub(super) fn check<'tcx>(\n+    cx: &LateContext<'tcx>,\n+    expr: &'tcx hir::Expr<'_>,\n+    then_recv: &'tcx hir::Expr<'_>,\n+    then_arg: &'tcx hir::Expr<'_>,\n+    unwrap_arg: &'tcx hir::Expr<'_>,\n+) {\n+    // something.then_some(blah).unwrap_or(blah)\n+    // ^^^^^^^^^-then_recv ^^^^-then_arg   ^^^^- unwrap_arg\n+    // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^- expr\n+\n+    let recv_ty = cx.typeck_results().expr_ty(then_recv);\n+\n+    if recv_ty.is_bool() {\n+        let mut applicability = Applicability::MachineApplicable;\n+        let sugg = format!(\n+            \"if {} {{ {} }} else {{ {} }}\",\n+            snippet_with_applicability(cx, then_recv.span, \"..\", &mut applicability),\n+            snippet_with_applicability(cx, then_arg.span, \"..\", &mut applicability),\n+            snippet_with_applicability(cx, unwrap_arg.span, \"..\", &mut applicability)\n+        );\n+\n+        span_lint_and_sugg(\n+            cx,\n+            OBFUSCATED_IF_ELSE,\n+            expr.span,\n+            \"use of `.then_some(..).unwrap_or(..)` can be written \\\n+            more clearly with `if .. else ..`\",\n+            \"try\",\n+            sugg,\n+            applicability,\n+        );\n+    }\n+}"}, {"sha": "62d932c2c6b79364a2139adcf5ce03b74214e6d5", "filename": "tests/ui/obfuscated_if_else.fixed", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/tests%2Fui%2Fobfuscated_if_else.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/tests%2Fui%2Fobfuscated_if_else.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fobfuscated_if_else.fixed?ref=9ff7c911008fc74c8d6c76afe12d7e30e67f8d25", "patch": "@@ -0,0 +1,7 @@\n+// run-rustfix\n+\n+#![warn(clippy::obfuscated_if_else)]\n+\n+fn main() {\n+    if true { \"a\" } else { \"b\" };\n+}"}, {"sha": "273be9092a745175b57f41ec2482f5792d9bc8e7", "filename": "tests/ui/obfuscated_if_else.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/tests%2Fui%2Fobfuscated_if_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/tests%2Fui%2Fobfuscated_if_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fobfuscated_if_else.rs?ref=9ff7c911008fc74c8d6c76afe12d7e30e67f8d25", "patch": "@@ -0,0 +1,7 @@\n+// run-rustfix\n+\n+#![warn(clippy::obfuscated_if_else)]\n+\n+fn main() {\n+    true.then_some(\"a\").unwrap_or(\"b\");\n+}"}, {"sha": "e4180c288693f9e22e2cd442e2ee74dcf0aa3c4b", "filename": "tests/ui/obfuscated_if_else.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/tests%2Fui%2Fobfuscated_if_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9ff7c911008fc74c8d6c76afe12d7e30e67f8d25/tests%2Fui%2Fobfuscated_if_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fobfuscated_if_else.stderr?ref=9ff7c911008fc74c8d6c76afe12d7e30e67f8d25", "patch": "@@ -0,0 +1,10 @@\n+error: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n+  --> $DIR/obfuscated_if_else.rs:6:5\n+   |\n+LL |     true.then_some(\"a\").unwrap_or(\"b\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `if true { \"a\" } else { \"b\" }`\n+   |\n+   = note: `-D clippy::obfuscated-if-else` implied by `-D warnings`\n+\n+error: aborting due to previous error\n+"}]}