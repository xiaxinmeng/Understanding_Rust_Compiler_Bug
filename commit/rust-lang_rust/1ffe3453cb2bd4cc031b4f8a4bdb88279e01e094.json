{"sha": "1ffe3453cb2bd4cc031b4f8a4bdb88279e01e094", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmZmUzNDUzY2IyYmQ0Y2MwMzFiNGY4YTRiZGI4ODI3OWUwMWUwOTQ=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-20T23:57:29Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-30T00:05:40Z"}, "message": "make Rc mem::forget safe", "tree": {"sha": "7c02d13378848a5ec420f31908deaba72b647b4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c02d13378848a5ec420f31908deaba72b647b4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ffe3453cb2bd4cc031b4f8a4bdb88279e01e094", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ffe3453cb2bd4cc031b4f8a4bdb88279e01e094", "html_url": "https://github.com/rust-lang/rust/commit/1ffe3453cb2bd4cc031b4f8a4bdb88279e01e094", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ffe3453cb2bd4cc031b4f8a4bdb88279e01e094/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed49bad0ccb0e9ee7e5ebea69d72a98bed08f77f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed49bad0ccb0e9ee7e5ebea69d72a98bed08f77f", "html_url": "https://github.com/rust-lang/rust/commit/ed49bad0ccb0e9ee7e5ebea69d72a98bed08f77f"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "3eaffa1e028a9aa91dbd970a036c91c1f0dfb230", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1ffe3453cb2bd4cc031b4f8a4bdb88279e01e094/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ffe3453cb2bd4cc031b4f8a4bdb88279e01e094/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=1ffe3453cb2bd4cc031b4f8a4bdb88279e01e094", "patch": "@@ -160,7 +160,7 @@ use core::cell::Cell;\n use core::cmp::Ordering;\n use core::fmt;\n use core::hash::{Hasher, Hash};\n-use core::intrinsics::{assume, drop_in_place};\n+use core::intrinsics::{assume, drop_in_place, abort};\n use core::marker::{self, Unsize};\n use core::mem::{self, align_of, size_of, align_of_val, size_of_val, forget};\n use core::nonzero::NonZero;\n@@ -846,6 +846,15 @@ impl<T: ?Sized+fmt::Debug> fmt::Debug for Weak<T> {\n     }\n }\n \n+// NOTE: We checked_add here to deal with mem::forget safety. In particular\n+// if you mem::forget Rcs (or Weaks), the ref-count can overflow, and then\n+// you can free the allocation while outstanding Rcs (or Weaks) exist.\n+// We abort because this is such a degenerate scenario that we don't care about\n+// what happens -- no real program should ever experience this.\n+//\n+// This should have negligible overhead since you don't actually need to\n+// clone these much in Rust thanks to ownership and move-semantics.\n+\n #[doc(hidden)]\n trait RcBoxPtr<T: ?Sized> {\n     fn inner(&self) -> &RcBox<T>;\n@@ -854,7 +863,9 @@ trait RcBoxPtr<T: ?Sized> {\n     fn strong(&self) -> usize { self.inner().strong.get() }\n \n     #[inline]\n-    fn inc_strong(&self) { self.inner().strong.set(self.strong() + 1); }\n+    fn inc_strong(&self) {\n+        self.inner().strong.set(self.strong().checked_add(1).unwrap_or_else(|| unsafe { abort() }));\n+    }\n \n     #[inline]\n     fn dec_strong(&self) { self.inner().strong.set(self.strong() - 1); }\n@@ -863,7 +874,9 @@ trait RcBoxPtr<T: ?Sized> {\n     fn weak(&self) -> usize { self.inner().weak.get() }\n \n     #[inline]\n-    fn inc_weak(&self) { self.inner().weak.set(self.weak() + 1); }\n+    fn inc_weak(&self) {\n+        self.inner().weak.set(self.weak().checked_add(1).unwrap_or_else(|| unsafe { abort() }));\n+    }\n \n     #[inline]\n     fn dec_weak(&self) { self.inner().weak.set(self.weak() - 1); }"}]}