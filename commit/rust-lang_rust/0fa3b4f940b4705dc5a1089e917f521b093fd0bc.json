{"sha": "0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmYTNiNGY5NDBiNDcwNWRjNWExMDg5ZTkxN2Y1MjFiMDkzZmQwYmM=", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-08-18T23:13:52Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-08-21T23:15:09Z"}, "message": "Make E0023 spans even more precise", "tree": {"sha": "85e46a19ff3552a9462815303d8da69e34cac4f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85e46a19ff3552a9462815303d8da69e34cac4f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "html_url": "https://github.com/rust-lang/rust/commit/0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0b482a27c1a347eac366bde82340e527c6cecf8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0b482a27c1a347eac366bde82340e527c6cecf8", "html_url": "https://github.com/rust-lang/rust/commit/d0b482a27c1a347eac366bde82340e527c6cecf8"}], "stats": {"total": 282, "additions": 132, "deletions": 150}, "files": [{"sha": "7a6ace070dee5849bdf3a3c745c4554074236c02", "filename": "compiler/rustc_ty_utils/src/ty.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs?ref=0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "patch": "@@ -223,7 +223,18 @@ fn associated_items(tcx: TyCtxt<'_>, def_id: DefId) -> ty::AssocItems<'_> {\n }\n \n fn def_ident_span(tcx: TyCtxt<'_>, def_id: DefId) -> Option<Span> {\n-    tcx.hir().get_if_local(def_id).and_then(|node| node.ident()).map(|ident| ident.span)\n+    tcx.hir()\n+        .get_if_local(def_id)\n+        .and_then(|node| match node {\n+            // A `Ctor` doesn't have an identifier itself, but its parent\n+            // struct/variant does. Compare with `hir::Map::opt_span`.\n+            hir::Node::Ctor(ctor) => ctor\n+                .ctor_hir_id()\n+                .and_then(|ctor_id| tcx.hir().find(tcx.hir().get_parent_node(ctor_id)))\n+                .and_then(|parent| parent.ident()),\n+            _ => node.ident(),\n+        })\n+        .map(|ident| ident.span)\n }\n \n /// If the given `DefId` describes an item belonging to a trait,"}, {"sha": "341385731e7d2bce550704260fbceaf4e90773be", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 31, "deletions": 8, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "patch": "@@ -15,7 +15,7 @@ use rustc_span::hygiene::DesugaringKind;\n use rustc_span::lev_distance::find_best_match_for_name;\n use rustc_span::source_map::{Span, Spanned};\n use rustc_span::symbol::Ident;\n-use rustc_span::{BytePos, DUMMY_SP};\n+use rustc_span::{BytePos, MultiSpan, DUMMY_SP};\n use rustc_trait_selection::autoderef::Autoderef;\n use rustc_trait_selection::traits::{ObligationCause, Pattern};\n use ty::VariantDef;\n@@ -990,11 +990,25 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     ) {\n         let subpats_ending = pluralize!(subpats.len());\n         let fields_ending = pluralize!(fields.len());\n-        let fields_span = pat_span.trim_start(qpath.span()).unwrap_or(pat_span);\n+\n+        let subpat_spans = if subpats.is_empty() {\n+            vec![pat_span.trim_start(qpath.span()).unwrap_or(pat_span)]\n+        } else {\n+            subpats.iter().map(|p| p.span).collect()\n+        };\n+        let last_subpat_span = *subpat_spans.last().unwrap();\n         let res_span = self.tcx.def_span(res.def_id());\n+        let def_ident_span = self.tcx.def_ident_span(res.def_id()).unwrap_or(res_span);\n+        let field_def_spans = if fields.is_empty() {\n+            vec![res_span.trim_start(def_ident_span).unwrap_or(res_span)]\n+        } else {\n+            fields.iter().map(|f| f.ident.span).collect()\n+        };\n+        let last_field_def_span = *field_def_spans.last().unwrap();\n+\n         let mut err = struct_span_err!(\n             self.tcx.sess,\n-            fields_span,\n+            MultiSpan::from_spans(subpat_spans.clone()),\n             E0023,\n             \"this pattern has {} field{}, but the corresponding {} has {} field{}\",\n             subpats.len(),\n@@ -1004,11 +1018,20 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             fields_ending,\n         );\n         err.span_label(\n-            fields_span,\n-            format!(\"expected {} field{}, found {}\", fields.len(), fields_ending, subpats.len(),),\n-        )\n-        .span_label(qpath.span(), format!(\"this {}\", res.descr()))\n-        .span_label(res_span, format!(\"{} defined here\", res.descr()));\n+            last_subpat_span,\n+            &format!(\"expected {} field{}, found {}\", fields.len(), fields_ending, subpats.len()),\n+        );\n+        err.span_label(qpath.span(), \"\");\n+        if self.tcx.sess.source_map().is_multiline(def_ident_span.between(field_def_spans[0])) {\n+            err.span_label(def_ident_span, format!(\"{} defined here\", res.descr()));\n+        }\n+        for span in &field_def_spans[..field_def_spans.len() - 1] {\n+            err.span_label(*span, \"\");\n+        }\n+        err.span_label(\n+            last_field_def_span,\n+            &format!(\"{} has {} field{}\", res.descr(), fields.len(), fields_ending),\n+        );\n \n         // Identify the case `Some(x, y)` where the expected type is e.g. `Option<(T, U)>`.\n         // More generally, the expected type wants a tuple variant with one field of an"}, {"sha": "9a47ddf0479917d424fdb195fddd39942b7093a1", "filename": "src/test/ui/destructuring-assignment/tuple_struct_destructure_fail.stderr", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr?ref=0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "patch": "@@ -15,26 +15,22 @@ LL |     Enum::SingleVariant(a, .., b, ..) = Enum::SingleVariant(0, 1);\n    |                            previously used here\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple struct has 2 fields\n-  --> $DIR/tuple_struct_destructure_fail.rs:30:16\n+  --> $DIR/tuple_struct_destructure_fail.rs:30:17\n    |\n LL | struct TupleStruct<S, T>(S, T);\n-   | ------------------------------- tuple struct defined here\n+   |                          -  - tuple struct has 2 fields\n ...\n LL |     TupleStruct(a, a, b) = TupleStruct(1, 2);\n-   |     -----------^^^^^^^^^ expected 2 fields, found 3\n-   |     |\n-   |     this tuple struct\n+   |     ----------- ^  ^  ^ expected 2 fields, found 3\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 2 fields\n-  --> $DIR/tuple_struct_destructure_fail.rs:32:16\n+  --> $DIR/tuple_struct_destructure_fail.rs:32:17\n    |\n LL | struct TupleStruct<S, T>(S, T);\n-   | ------------------------------- tuple struct defined here\n+   |                          -  - tuple struct has 2 fields\n ...\n LL |     TupleStruct(_) = TupleStruct(1, 2);\n-   |     -----------^^^ expected 2 fields, found 1\n-   |     |\n-   |     this tuple struct\n+   |     ----------- ^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -46,26 +42,22 @@ LL |     TupleStruct(..) = TupleStruct(1, 2);\n    |                 ~~\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple variant has 2 fields\n-  --> $DIR/tuple_struct_destructure_fail.rs:34:24\n+  --> $DIR/tuple_struct_destructure_fail.rs:34:25\n    |\n LL |     SingleVariant(S, T)\n-   |     ------------------- tuple variant defined here\n+   |                   -  - tuple variant has 2 fields\n ...\n LL |     Enum::SingleVariant(a, a, b) = Enum::SingleVariant(1, 2);\n-   |     -------------------^^^^^^^^^ expected 2 fields, found 3\n-   |     |\n-   |     this tuple variant\n+   |     ------------------- ^  ^  ^ expected 2 fields, found 3\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/tuple_struct_destructure_fail.rs:36:24\n+  --> $DIR/tuple_struct_destructure_fail.rs:36:25\n    |\n LL |     SingleVariant(S, T)\n-   |     ------------------- tuple variant defined here\n+   |                   -  - tuple variant has 2 fields\n ...\n LL |     Enum::SingleVariant(_) = Enum::SingleVariant(1, 2);\n-   |     -------------------^^^ expected 2 fields, found 1\n-   |     |\n-   |     this tuple variant\n+   |     ------------------- ^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "85e1b2cb4ceef4aa10b6c5ab6d4e06c8fbef3345", "filename": "src/test/ui/error-codes/E0023.stderr", "status": "modified", "additions": 13, "deletions": 23, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr?ref=0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "patch": "@@ -1,51 +1,43 @@\n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/E0023.rs:11:21\n+  --> $DIR/E0023.rs:11:22\n    |\n LL |     Apple(String, String),\n-   |     --------------------- tuple variant defined here\n+   |           ------  ------ tuple variant has 2 fields\n ...\n LL |         Fruit::Apple(a) => {},\n-   |         ------------^^^ expected 2 fields, found 1\n-   |         |\n-   |         this tuple variant\n+   |         ------------ ^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |\n LL |         Fruit::Apple(a, _) => {},\n    |                       +++\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple variant has 2 fields\n-  --> $DIR/E0023.rs:12:21\n+  --> $DIR/E0023.rs:12:22\n    |\n LL |     Apple(String, String),\n-   |     --------------------- tuple variant defined here\n+   |           ------  ------ tuple variant has 2 fields\n ...\n LL |         Fruit::Apple(a, b, c) => {},\n-   |         ------------^^^^^^^^^ expected 2 fields, found 3\n-   |         |\n-   |         this tuple variant\n+   |         ------------ ^  ^  ^ expected 2 fields, found 3\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field\n-  --> $DIR/E0023.rs:13:20\n+  --> $DIR/E0023.rs:13:21\n    |\n LL |     Pear(u32),\n-   |     --------- tuple variant defined here\n+   |          --- tuple variant has 1 field\n ...\n LL |         Fruit::Pear(1, 2) => {},\n-   |         -----------^^^^^^ expected 1 field, found 2\n-   |         |\n-   |         this tuple variant\n+   |         ----------- ^  ^ expected 1 field, found 2\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field\n-  --> $DIR/E0023.rs:14:22\n+  --> $DIR/E0023.rs:14:23\n    |\n LL |     Orange((String, String)),\n-   |     ------------------------ tuple variant defined here\n+   |            ---------------- tuple variant has 1 field\n ...\n LL |         Fruit::Orange(a, b) => {},\n-   |         -------------^^^^^^ expected 1 field, found 2\n-   |         |\n-   |         this tuple variant\n+   |         ------------- ^  ^ expected 1 field, found 2\n    |\n help: missing parentheses\n    |\n@@ -56,12 +48,10 @@ error[E0023]: this pattern has 0 fields, but the corresponding tuple variant has\n   --> $DIR/E0023.rs:15:22\n    |\n LL |     Banana(()),\n-   |     ---------- tuple variant defined here\n+   |            -- tuple variant has 1 field\n ...\n LL |         Fruit::Banana() => {},\n    |         -------------^^ expected 1 field, found 0\n-   |         |\n-   |         this tuple variant\n    |\n help: missing parentheses\n    |"}, {"sha": "3f8ff4f0bacd54927bfcd746434eddb297a62bcb", "filename": "src/test/ui/issues/issue-72574-2.stderr", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr?ref=0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "patch": "@@ -19,15 +19,13 @@ LL |         Binder(_a, _x @ ..) => {}\n    = note: only allowed in tuple, tuple struct, and slice patterns\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple struct has 3 fields\n-  --> $DIR/issue-72574-2.rs:6:15\n+  --> $DIR/issue-72574-2.rs:6:16\n    |\n LL | struct Binder(i32, i32, i32);\n-   | ----------------------------- tuple struct defined here\n+   |               ---  ---  --- tuple struct has 3 fields\n ...\n LL |         Binder(_a, _x @ ..) => {}\n-   |         ------^^^^^^^^^^^^^ expected 3 fields, found 2\n-   |         |\n-   |         this tuple struct\n+   |         ------ ^^  ^^^^^^^ expected 3 fields, found 2\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "01d7cf0d054c916735d2a9ecba1fd3905045981e", "filename": "src/test/ui/match/match-pattern-field-mismatch.stderr", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr?ref=0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "patch": "@@ -1,13 +1,11 @@\n error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 3 fields\n-  --> $DIR/match-pattern-field-mismatch.rs:10:21\n+  --> $DIR/match-pattern-field-mismatch.rs:10:22\n    |\n LL |         Rgb(usize, usize, usize),\n-   |         ------------------------ tuple variant defined here\n+   |             -----  -----  ----- tuple variant has 3 fields\n ...\n LL |           Color::Rgb(_, _) => { }\n-   |           ----------^^^^^^ expected 3 fields, found 2\n-   |           |\n-   |           this tuple variant\n+   |           ---------- ^  ^ expected 3 fields, found 2\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "c87b70625b40e92853ca76c313db01dc1702567d", "filename": "src/test/ui/pattern/issue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fpattern%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fpattern%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr?ref=0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "patch": "@@ -13,12 +13,10 @@ error[E0023]: this pattern has 0 fields, but the corresponding tuple struct has\n   --> $DIR/issue-67037-pat-tup-scrut-ty-diff-less-fields.rs:19:10\n    |\n LL | struct P<T>(T); // 1 type parameter wanted\n-   | --------------- tuple struct defined here\n+   |             - tuple struct has 1 field\n ...\n LL |     let P() = U {};\n    |         -^^ expected 1 field, found 0\n-   |         |\n-   |         this tuple struct\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "d7cbcf2cfa10926f47d173ecb674967a59ffc254", "filename": "src/test/ui/pattern/issue-74539.stderr", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr?ref=0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "patch": "@@ -19,15 +19,13 @@ LL |         E::A(x @ ..) => {\n    = note: only allowed in tuple, tuple struct, and slice patterns\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/issue-74539.rs:8:13\n+  --> $DIR/issue-74539.rs:8:14\n    |\n LL |     A(u8, u8),\n-   |     --------- tuple variant defined here\n+   |       --  -- tuple variant has 2 fields\n ...\n LL |         E::A(x @ ..) => {\n-   |         ----^^^^^^^^ expected 2 fields, found 1\n-   |         |\n-   |         this tuple variant\n+   |         ---- ^^^^^^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "1df9c1c11b8a53548ae01741d4eae9a22cea8370", "filename": "src/test/ui/pattern/pat-tuple-overfield.stderr", "status": "modified", "additions": 34, "deletions": 44, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr?ref=0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "patch": "@@ -171,87 +171,77 @@ LL |         (1, 2, .., 3, 4) => {}\n               found tuple `(_, _, _, _)`\n \n error[E0023]: this pattern has 4 fields, but the corresponding tuple struct has 3 fields\n-  --> $DIR/pat-tuple-overfield.rs:26:10\n+  --> $DIR/pat-tuple-overfield.rs:26:11\n    |\n LL | struct S(u8, u8, u8);\n-   | --------------------- tuple struct defined here\n+   |          --  --  -- tuple struct has 3 fields\n ...\n LL |         S(1, 2, 3, 4) => {}\n-   |         -^^^^^^^^^^^^ expected 3 fields, found 4\n-   |         |\n-   |         this tuple struct\n+   |         - ^  ^  ^  ^ expected 3 fields, found 4\n \n error[E0023]: this pattern has 4 fields, but the corresponding tuple struct has 3 fields\n-  --> $DIR/pat-tuple-overfield.rs:28:10\n+  --> $DIR/pat-tuple-overfield.rs:28:11\n    |\n LL | struct S(u8, u8, u8);\n-   | --------------------- tuple struct defined here\n+   |          --  --  -- tuple struct has 3 fields\n ...\n LL |         S(1, 2, .., 3, 4) => {}\n-   |         -^^^^^^^^^^^^^^^^ expected 3 fields, found 4\n-   |         |\n-   |         this tuple struct\n+   |         - ^  ^      ^  ^ expected 3 fields, found 4\n \n error[E0023]: this pattern has 6 fields, but the corresponding tuple struct has 5 fields\n-  --> $DIR/pat-tuple-overfield.rs:33:10\n-   |\n-LL | / struct M(\n-LL | |     u8,\n-LL | |     u8,\n-LL | |     u8,\n-LL | |     u8,\n-LL | |     u8,\n-LL | | );\n-   | |__- tuple struct defined here\n+  --> $DIR/pat-tuple-overfield.rs:33:11\n+   |\n+LL | struct M(\n+   |        - tuple struct defined here\n+LL |     u8,\n+   |     --\n+LL |     u8,\n+   |     --\n+LL |     u8,\n+   |     --\n+LL |     u8,\n+   |     --\n+LL |     u8,\n+   |     -- tuple struct has 5 fields\n ...\n-LL |           M(1, 2, 3, 4, 5, 6) => {}\n-   |           -^^^^^^^^^^^^^^^^^^ expected 5 fields, found 6\n-   |           |\n-   |           this tuple struct\n+LL |         M(1, 2, 3, 4, 5, 6) => {}\n+   |         - ^  ^  ^  ^  ^  ^ expected 5 fields, found 6\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 0 fields\n-  --> $DIR/pat-tuple-overfield.rs:45:11\n+  --> $DIR/pat-tuple-overfield.rs:45:12\n    |\n LL | struct Z1();\n-   | ------------ tuple struct defined here\n+   |          --- tuple struct has 0 fields\n ...\n LL |         Z1(_) => {}\n-   |         --^^^ expected 0 fields, found 1\n-   |         |\n-   |         this tuple struct\n+   |         -- ^ expected 0 fields, found 1\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple struct has 0 fields\n-  --> $DIR/pat-tuple-overfield.rs:46:11\n+  --> $DIR/pat-tuple-overfield.rs:46:12\n    |\n LL | struct Z1();\n-   | ------------ tuple struct defined here\n+   |          --- tuple struct has 0 fields\n ...\n LL |         Z1(_, _) => {}\n-   |         --^^^^^^ expected 0 fields, found 2\n-   |         |\n-   |         this tuple struct\n+   |         -- ^  ^ expected 0 fields, found 2\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 0 fields\n-  --> $DIR/pat-tuple-overfield.rs:57:15\n+  --> $DIR/pat-tuple-overfield.rs:57:16\n    |\n LL |     Z1(),\n-   |     ---- tuple variant defined here\n+   |       -- tuple variant has 0 fields\n ...\n LL |         E1::Z1(_) => {}\n-   |         ------^^^ expected 0 fields, found 1\n-   |         |\n-   |         this tuple variant\n+   |         ------ ^ expected 0 fields, found 1\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 0 fields\n-  --> $DIR/pat-tuple-overfield.rs:58:15\n+  --> $DIR/pat-tuple-overfield.rs:58:16\n    |\n LL |     Z1(),\n-   |     ---- tuple variant defined here\n+   |       -- tuple variant has 0 fields\n ...\n LL |         E1::Z1(_, _) => {}\n-   |         ------^^^^^^ expected 0 fields, found 2\n-   |         |\n-   |         this tuple variant\n+   |         ------ ^  ^ expected 0 fields, found 2\n \n error: aborting due to 17 previous errors\n "}, {"sha": "4c21ad0be3eb4273990eff25af46193076aa5eb3", "filename": "src/test/ui/pattern/pat-tuple-underfield.stderr", "status": "modified", "additions": 17, "deletions": 31, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr?ref=0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "patch": "@@ -8,31 +8,27 @@ LL |         E::S => {}\n    |         ^^^^ help: use the tuple variant pattern syntax instead: `E::S(_, _)`\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:9:10\n+  --> $DIR/pat-tuple-underfield.rs:9:11\n    |\n LL | struct S(i32, f32);\n-   | ------------------- tuple struct defined here\n+   |          ---  --- tuple struct has 2 fields\n ...\n LL |         S(x) => {}\n-   |         -^^^ expected 2 fields, found 1\n-   |         |\n-   |         this tuple struct\n+   |         - ^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |\n LL |         S(x, _) => {}\n    |            +++\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:14:10\n+  --> $DIR/pat-tuple-underfield.rs:14:11\n    |\n LL | struct S(i32, f32);\n-   | ------------------- tuple struct defined here\n+   |          ---  --- tuple struct has 2 fields\n ...\n LL |         S(_) => {}\n-   |         -^^^ expected 2 fields, found 1\n-   |         |\n-   |         this tuple struct\n+   |         - ^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -47,12 +43,10 @@ error[E0023]: this pattern has 0 fields, but the corresponding tuple struct has\n   --> $DIR/pat-tuple-underfield.rs:20:10\n    |\n LL | struct S(i32, f32);\n-   | ------------------- tuple struct defined here\n+   |          ---  --- tuple struct has 2 fields\n ...\n LL |         S() => {}\n    |         -^^ expected 2 fields, found 0\n-   |         |\n-   |         this tuple struct\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -64,31 +58,27 @@ LL |         S(..) => {}\n    |           ++\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:27:13\n+  --> $DIR/pat-tuple-underfield.rs:27:14\n    |\n LL |     S(i32, f32),\n-   |     ----------- tuple variant defined here\n+   |       ---  --- tuple variant has 2 fields\n ...\n LL |         E::S(x) => {}\n-   |         ----^^^ expected 2 fields, found 1\n-   |         |\n-   |         this tuple variant\n+   |         ---- ^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |\n LL |         E::S(x, _) => {}\n    |               +++\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:32:13\n+  --> $DIR/pat-tuple-underfield.rs:32:14\n    |\n LL |     S(i32, f32),\n-   |     ----------- tuple variant defined here\n+   |       ---  --- tuple variant has 2 fields\n ...\n LL |         E::S(_) => {}\n-   |         ----^^^ expected 2 fields, found 1\n-   |         |\n-   |         this tuple variant\n+   |         ---- ^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -103,12 +93,10 @@ error[E0023]: this pattern has 0 fields, but the corresponding tuple variant has\n   --> $DIR/pat-tuple-underfield.rs:38:13\n    |\n LL |     S(i32, f32),\n-   |     ----------- tuple variant defined here\n+   |       ---  --- tuple variant has 2 fields\n ...\n LL |         E::S() => {}\n    |         ----^^ expected 2 fields, found 0\n-   |         |\n-   |         this tuple variant\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -120,15 +108,13 @@ LL |         E::S(..) => {}\n    |              ++\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple struct has 4 fields\n-  --> $DIR/pat-tuple-underfield.rs:50:15\n+  --> $DIR/pat-tuple-underfield.rs:50:19\n    |\n LL | struct Point4(i32, i32, i32, i32);\n-   | ---------------------------------- tuple struct defined here\n+   |               ---  ---  ---  --- tuple struct has 4 fields\n ...\n LL |         Point4(   a   ,     _    ) => {}\n-   |         ------^^^^^^^^^^^^^^^^^^^^ expected 4 fields, found 2\n-   |         |\n-   |         this tuple struct\n+   |         ------    ^         ^ expected 4 fields, found 2\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "efc6723e9ef8ed27a46f87377cd5a23ade0338f6", "filename": "src/test/ui/pattern/pattern-error-continue.stderr", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fa3b4f940b4705dc5a1089e917f521b093fd0bc/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr?ref=0fa3b4f940b4705dc5a1089e917f521b093fd0bc", "patch": "@@ -26,15 +26,13 @@ LL |         A::B(_) => (),\n    |            ~\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pattern-error-continue.rs:17:13\n+  --> $DIR/pattern-error-continue.rs:17:14\n    |\n LL |     B(isize, isize),\n-   |     --------------- tuple variant defined here\n+   |       -----  ----- tuple variant has 2 fields\n ...\n LL |         A::B(_, _, _) => (),\n-   |         ----^^^^^^^^^ expected 2 fields, found 3\n-   |         |\n-   |         this tuple variant\n+   |         ---- ^  ^  ^ expected 2 fields, found 3\n \n error[E0308]: mismatched types\n   --> $DIR/pattern-error-continue.rs:22:9"}]}