{"sha": "c141f47c2449a2f70e6d199104eb318b083def2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxNDFmNDdjMjQ0OWEyZjcwZTZkMTk5MTA0ZWIzMThiMDgzZGVmMmE=", "commit": {"author": {"name": "Eli Friedman", "email": "eli.friedman@gmail.com", "date": "2015-10-24T01:37:21Z"}, "committer": {"name": "Eli Friedman", "email": "eli.friedman@gmail.com", "date": "2015-10-28T03:09:10Z"}, "message": "Delete unnecessary ParserAttr trait.", "tree": {"sha": "d99b724dd466b80e5134f10ef4c1d527d62747c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d99b724dd466b80e5134f10ef4c1d527d62747c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c141f47c2449a2f70e6d199104eb318b083def2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c141f47c2449a2f70e6d199104eb318b083def2a", "html_url": "https://github.com/rust-lang/rust/commit/c141f47c2449a2f70e6d199104eb318b083def2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c141f47c2449a2f70e6d199104eb318b083def2a/comments", "author": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dd87dcfeaec795f67ddfeca58e13d9eed909684", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dd87dcfeaec795f67ddfeca58e13d9eed909684", "html_url": "https://github.com/rust-lang/rust/commit/1dd87dcfeaec795f67ddfeca58e13d9eed909684"}], "stats": {"total": 29, "additions": 4, "deletions": 25}, "files": [{"sha": "5074189a04859ee60ecdb377ffbe61cc255d9c00", "filename": "src/libsyntax/ext/cfg.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c141f47c2449a2f70e6d199104eb318b083def2a/src%2Flibsyntax%2Fext%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c141f47c2449a2f70e6d199104eb318b083def2a/src%2Flibsyntax%2Fext%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fcfg.rs?ref=c141f47c2449a2f70e6d199104eb318b083def2a", "patch": "@@ -19,7 +19,6 @@ use ext::base;\n use ext::build::AstBuilder;\n use attr;\n use attr::*;\n-use parse::attr::ParserAttr;\n use parse::token;\n \n pub fn expand_cfg<'cx>(cx: &mut ExtCtxt,"}, {"sha": "40a8f1cc6b56b7fca10eae620c8ea355d0fe15b1", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c141f47c2449a2f70e6d199104eb318b083def2a/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c141f47c2449a2f70e6d199104eb318b083def2a/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=c141f47c2449a2f70e6d199104eb318b083def2a", "patch": "@@ -85,7 +85,6 @@ use codemap::{BytePos, mk_sp, Span};\n use codemap;\n use parse::lexer::*; //resolve bug?\n use parse::ParseSess;\n-use parse::attr::ParserAttr;\n use parse::parser::{LifetimeAndTypesWithoutColons, Parser};\n use parse::token::{Eof, DocComment, MatchNt, SubstNt};\n use parse::token::{Token, Nonterminal};"}, {"sha": "570c232ff4e95835c2dd0726ac5368050893e9f0", "filename": "src/libsyntax/parse/attr.rs", "status": "modified", "additions": 4, "deletions": 21, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c141f47c2449a2f70e6d199104eb318b083def2a/src%2Flibsyntax%2Fparse%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c141f47c2449a2f70e6d199104eb318b083def2a/src%2Flibsyntax%2Fparse%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fattr.rs?ref=c141f47c2449a2f70e6d199104eb318b083def2a", "patch": "@@ -16,19 +16,9 @@ use parse::token;\n use parse::parser::{Parser, TokenType};\n use ptr::P;\n \n-/// A parser that can parse attributes.\n-pub trait ParserAttr {\n-    fn parse_outer_attributes(&mut self) -> Vec<ast::Attribute>;\n-    fn parse_inner_attributes(&mut self) -> Vec<ast::Attribute>;\n-    fn parse_attribute(&mut self, permit_inner: bool) -> ast::Attribute;\n-    fn parse_meta_item(&mut self) -> P<ast::MetaItem>;\n-    fn parse_meta_seq(&mut self) -> Vec<P<ast::MetaItem>>;\n-    fn parse_optional_meta(&mut self) -> Vec<P<ast::MetaItem>>;\n-}\n-\n-impl<'a> ParserAttr for Parser<'a> {\n+impl<'a> Parser<'a> {\n     /// Parse attributes that appear before an item\n-    fn parse_outer_attributes(&mut self) -> Vec<ast::Attribute> {\n+    pub fn parse_outer_attributes(&mut self) -> Vec<ast::Attribute> {\n         let mut attrs: Vec<ast::Attribute> = Vec::new();\n         loop {\n             debug!(\"parse_outer_attributes: self.token={:?}\",\n@@ -120,7 +110,7 @@ impl<'a> ParserAttr for Parser<'a> {\n     /// terminated by a semicolon.\n \n     /// matches inner_attrs*\n-    fn parse_inner_attributes(&mut self) -> Vec<ast::Attribute> {\n+    pub fn parse_inner_attributes(&mut self) -> Vec<ast::Attribute> {\n         let mut attrs: Vec<ast::Attribute> = vec![];\n         loop {\n             match self.token {\n@@ -155,7 +145,7 @@ impl<'a> ParserAttr for Parser<'a> {\n     /// matches meta_item = IDENT\n     /// | IDENT = lit\n     /// | IDENT meta_seq\n-    fn parse_meta_item(&mut self) -> P<ast::MetaItem> {\n+    pub fn parse_meta_item(&mut self) -> P<ast::MetaItem> {\n         let nt_meta = match self.token {\n             token::Interpolated(token::NtMeta(ref e)) => {\n                 Some(e.clone())\n@@ -210,11 +200,4 @@ impl<'a> ParserAttr for Parser<'a> {\n                        seq_sep_trailing_allowed(token::Comma),\n                        |p| Ok(p.parse_meta_item()))).node\n     }\n-\n-    fn parse_optional_meta(&mut self) -> Vec<P<ast::MetaItem>> {\n-        match self.token {\n-            token::OpenDelim(token::Paren) => self.parse_meta_seq(),\n-            _ => Vec::new()\n-        }\n-    }\n }"}, {"sha": "017a910b08a96a98c036ac412f6dbadd2aa44f12", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c141f47c2449a2f70e6d199104eb318b083def2a/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c141f47c2449a2f70e6d199104eb318b083def2a/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=c141f47c2449a2f70e6d199104eb318b083def2a", "patch": "@@ -13,7 +13,6 @@\n use ast;\n use codemap::{self, Span, CodeMap, FileMap};\n use diagnostic::{SpanHandler, Handler, Auto, FatalError};\n-use parse::attr::ParserAttr;\n use parse::parser::Parser;\n use parse::token::InternedString;\n use ptr::P;"}, {"sha": "0b2369c00ac2def15082f3c241f3b664c1fe92b1", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c141f47c2449a2f70e6d199104eb318b083def2a/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c141f47c2449a2f70e6d199104eb318b083def2a/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=c141f47c2449a2f70e6d199104eb318b083def2a", "patch": "@@ -64,7 +64,6 @@ use codemap::{self, Span, BytePos, Spanned, spanned, mk_sp, CodeMap};\n use diagnostic;\n use ext::tt::macro_parser;\n use parse;\n-use parse::attr::ParserAttr;\n use parse::classify;\n use parse::common::{SeqSep, seq_sep_none, seq_sep_trailing_allowed};\n use parse::lexer::{Reader, TokenAndSpan};"}]}