{"sha": "959a6c1ca8dad937fe9653e4a7acd3108199b92e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OWE2YzFjYThkYWQ5MzdmZTk2NTNlNGE3YWNkMzEwODE5OWI5MmU=", "commit": {"author": {"name": "Ashley Mannix", "email": "ashleymannix@live.com.au", "date": "2019-10-09T14:24:45Z"}, "committer": {"name": "Ashley Mannix", "email": "ashleymannix@live.com.au", "date": "2019-10-10T00:01:47Z"}, "message": "move debug_map assertions after check for err", "tree": {"sha": "422506f116b08ba3e7d896a19acd07c40bdc5981", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/422506f116b08ba3e7d896a19acd07c40bdc5981"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/959a6c1ca8dad937fe9653e4a7acd3108199b92e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/959a6c1ca8dad937fe9653e4a7acd3108199b92e", "html_url": "https://github.com/rust-lang/rust/commit/959a6c1ca8dad937fe9653e4a7acd3108199b92e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/959a6c1ca8dad937fe9653e4a7acd3108199b92e/comments", "author": {"login": "KodrAus", "id": 6721458, "node_id": "MDQ6VXNlcjY3MjE0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6721458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KodrAus", "html_url": "https://github.com/KodrAus", "followers_url": "https://api.github.com/users/KodrAus/followers", "following_url": "https://api.github.com/users/KodrAus/following{/other_user}", "gists_url": "https://api.github.com/users/KodrAus/gists{/gist_id}", "starred_url": "https://api.github.com/users/KodrAus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KodrAus/subscriptions", "organizations_url": "https://api.github.com/users/KodrAus/orgs", "repos_url": "https://api.github.com/users/KodrAus/repos", "events_url": "https://api.github.com/users/KodrAus/events{/privacy}", "received_events_url": "https://api.github.com/users/KodrAus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "KodrAus", "id": 6721458, "node_id": "MDQ6VXNlcjY3MjE0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6721458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KodrAus", "html_url": "https://github.com/KodrAus", "followers_url": "https://api.github.com/users/KodrAus/followers", "following_url": "https://api.github.com/users/KodrAus/following{/other_user}", "gists_url": "https://api.github.com/users/KodrAus/gists{/gist_id}", "starred_url": "https://api.github.com/users/KodrAus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KodrAus/subscriptions", "organizations_url": "https://api.github.com/users/KodrAus/orgs", "repos_url": "https://api.github.com/users/KodrAus/repos", "events_url": "https://api.github.com/users/KodrAus/events{/privacy}", "received_events_url": "https://api.github.com/users/KodrAus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "275cf4bcacad3fbe5539ecd5840462793ae46eec", "url": "https://api.github.com/repos/rust-lang/rust/commits/275cf4bcacad3fbe5539ecd5840462793ae46eec", "html_url": "https://github.com/rust-lang/rust/commit/275cf4bcacad3fbe5539ecd5840462793ae46eec"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "e6e3454b36f810bb96cf2c525059182aa3eb69c9", "filename": "src/libcore/fmt/builders.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/959a6c1ca8dad937fe9653e4a7acd3108199b92e/src%2Flibcore%2Ffmt%2Fbuilders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/959a6c1ca8dad937fe9653e4a7acd3108199b92e/src%2Flibcore%2Ffmt%2Fbuilders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fbuilders.rs?ref=959a6c1ca8dad937fe9653e4a7acd3108199b92e", "patch": "@@ -775,10 +775,10 @@ impl<'a, 'b: 'a> DebugMap<'a, 'b> {\n                reason = \"recently added\",\n                issue = \"62482\")]\n     pub fn key(&mut self, key: &dyn fmt::Debug) -> &mut DebugMap<'a, 'b> {\n-        assert!(!self.has_key, \"attempted to begin a new map entry \\\n-                                without completing the previous one\");\n-\n         self.result = self.result.and_then(|_| {\n+            assert!(!self.has_key, \"attempted to begin a new map entry \\\n+                                    without completing the previous one\");\n+\n             if self.is_pretty() {\n                 if !self.has_fields {\n                     self.fmt.write_str(\"\\n\")?;\n@@ -839,9 +839,9 @@ impl<'a, 'b: 'a> DebugMap<'a, 'b> {\n                reason = \"recently added\",\n                issue = \"62482\")]\n     pub fn value(&mut self, value: &dyn fmt::Debug) -> &mut DebugMap<'a, 'b> {\n-        assert!(self.has_key, \"attempted to format a map value before its key\");\n-\n         self.result = self.result.and_then(|_| {\n+            assert!(self.has_key, \"attempted to format a map value before its key\");\n+\n             if self.is_pretty() {\n                 let mut slot = None;\n                 let mut writer = PadAdapter::wrap(&mut self.fmt, &mut slot, &mut self.state);\n@@ -924,9 +924,11 @@ impl<'a, 'b: 'a> DebugMap<'a, 'b> {\n     /// ```\n     #[stable(feature = \"debug_builders\", since = \"1.2.0\")]\n     pub fn finish(&mut self) -> fmt::Result {\n-        assert!(!self.has_key, \"attempted to finish a map with a partial entry\");\n+        self.result.and_then(|_| {\n+            assert!(!self.has_key, \"attempted to finish a map with a partial entry\");\n \n-        self.result.and_then(|_| self.fmt.write_str(\"}\"))\n+            self.fmt.write_str(\"}\")\n+        })\n     }\n \n     fn is_pretty(&self) -> bool {"}, {"sha": "255724432816d99ea2d96ebe5dd036ad9bc6c1b3", "filename": "src/libcore/tests/fmt/builders.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/959a6c1ca8dad937fe9653e4a7acd3108199b92e/src%2Flibcore%2Ftests%2Ffmt%2Fbuilders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/959a6c1ca8dad937fe9653e4a7acd3108199b92e/src%2Flibcore%2Ftests%2Ffmt%2Fbuilders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Ffmt%2Fbuilders.rs?ref=959a6c1ca8dad937fe9653e4a7acd3108199b92e", "patch": "@@ -319,6 +319,46 @@ mod debug_map {\n                    format!(\"{:#?}\", Bar));\n     }\n \n+    #[test]\n+    fn test_entry_err() {\n+        // Ensure errors in a map entry don't trigger panics (#65231)\n+        use std::fmt::Write;\n+\n+        struct ErrorFmt;\n+\n+        impl fmt::Debug for ErrorFmt {\n+            fn fmt(&self, _: &mut fmt::Formatter<'_>) -> fmt::Result {\n+                Err(fmt::Error)\n+            }\n+        }\n+\n+        struct KeyValue<K, V>(usize, K, V);\n+\n+        impl<K, V> fmt::Debug for KeyValue<K, V>\n+        where\n+            K: fmt::Debug,\n+            V: fmt::Debug,\n+        {\n+            fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n+                let mut map = fmt.debug_map();\n+\n+                for _ in 0..self.0 {\n+                    map.entry(&self.1, &self.2);\n+                }\n+\n+                map.finish()\n+            }\n+        }\n+\n+        let mut buf = String::new();\n+\n+        assert!(write!(&mut buf, \"{:?}\", KeyValue(1, ErrorFmt, \"bar\")).is_err());\n+        assert!(write!(&mut buf, \"{:?}\", KeyValue(1, \"foo\", ErrorFmt)).is_err());\n+\n+        assert!(write!(&mut buf, \"{:?}\", KeyValue(2, ErrorFmt, \"bar\")).is_err());\n+        assert!(write!(&mut buf, \"{:?}\", KeyValue(2, \"foo\", ErrorFmt)).is_err());\n+    }\n+\n     #[test]\n     #[should_panic]\n     fn test_invalid_key_when_entry_is_incomplete() {"}]}