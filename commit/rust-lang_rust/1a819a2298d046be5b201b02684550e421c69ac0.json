{"sha": "1a819a2298d046be5b201b02684550e421c69ac0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhODE5YTIyOThkMDQ2YmU1YjIwMWIwMjY4NDU1MGU0MjFjNjlhYzA=", "commit": {"author": {"name": "sinkuu", "email": "sinkuupump@gmail.com", "date": "2016-09-20T13:01:58Z"}, "committer": {"name": "sinkuu", "email": "sinkuupump@gmail.com", "date": "2016-11-06T11:51:21Z"}, "message": "Make E0243/0244 message consistent with E0107", "tree": {"sha": "9aacaf73770ed0ee2d9816301c39df7fa4c1df88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9aacaf73770ed0ee2d9816301c39df7fa4c1df88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a819a2298d046be5b201b02684550e421c69ac0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a819a2298d046be5b201b02684550e421c69ac0", "html_url": "https://github.com/rust-lang/rust/commit/1a819a2298d046be5b201b02684550e421c69ac0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a819a2298d046be5b201b02684550e421c69ac0/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fc8304fd92720c688f3d6ac30b3a728d15f7a33", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fc8304fd92720c688f3d6ac30b3a728d15f7a33", "html_url": "https://github.com/rust-lang/rust/commit/3fc8304fd92720c688f3d6ac30b3a728d15f7a33"}], "stats": {"total": 77, "additions": 41, "deletions": 36}, "files": [{"sha": "560d83fdd5860b8e055854639d3fe1071b2000bd", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1a819a2298d046be5b201b02684550e421c69ac0/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a819a2298d046be5b201b02684550e421c69ac0/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=1a819a2298d046be5b201b02684550e421c69ac0", "patch": "@@ -2245,27 +2245,32 @@ fn check_type_argument_count(tcx: TyCtxt, span: Span, supplied: usize,\n             \"expected\"\n         };\n         let arguments_plural = if required == 1 { \"\" } else { \"s\" };\n-        struct_span_err!(tcx.sess, span, E0243, \"wrong number of type arguments\")\n-            .span_label(\n-                span,\n-                &format!(\"{} {} type argument{}, found {}\",\n-                         expected, required, arguments_plural, supplied)\n-            )\n+\n+        struct_span_err!(tcx.sess, span, E0243,\n+                \"wrong number of type arguments: {} {}, found {}\",\n+                expected, required, supplied)\n+            .span_label(span,\n+                &format!(\"{} {} type argument{}\",\n+                    expected,\n+                    required,\n+                    arguments_plural))\n             .emit();\n     } else if supplied > accepted {\n-        let expected = if required == 0 {\n-            \"expected no\".to_string()\n-        } else if required < accepted {\n+        let expected = if required < accepted {\n             format!(\"expected at most {}\", accepted)\n         } else {\n             format!(\"expected {}\", accepted)\n         };\n         let arguments_plural = if accepted == 1 { \"\" } else { \"s\" };\n \n-        struct_span_err!(tcx.sess, span, E0244, \"wrong number of type arguments\")\n+        struct_span_err!(tcx.sess, span, E0244,\n+                \"wrong number of type arguments: {}, found {}\",\n+                expected, supplied)\n             .span_label(\n                 span,\n-                &format!(\"{} type argument{}, found {}\", expected, arguments_plural, supplied)\n+                &format!(\"{} type argument{}\",\n+                    if accepted == 0 { \"expected no\" } else { &expected },\n+                    arguments_plural)\n             )\n             .emit();\n     }"}, {"sha": "d20435a37ff5bf08913bc6c72e87ddc8fc1d3024", "filename": "src/test/compile-fail/E0243.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2FE0243.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2FE0243.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0243.rs?ref=1a819a2298d046be5b201b02684550e421c69ac0", "patch": "@@ -10,8 +10,8 @@\n \n struct Foo<T> { x: T }\n struct Bar { x: Foo }\n-                //~^ ERROR E0243\n-                //~| NOTE expected 1 type argument, found 0\n+                //~^ ERROR wrong number of type arguments: expected 1, found 0 [E0243]\n+                //~| NOTE expected 1 type argument\n \n fn main() {\n }"}, {"sha": "02d4b337894b27b2f7422a8b6834d6b1771e1ae4", "filename": "src/test/compile-fail/E0244.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2FE0244.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2FE0244.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0244.rs?ref=1a819a2298d046be5b201b02684550e421c69ac0", "patch": "@@ -10,8 +10,8 @@\n \n struct Foo { x: bool }\n struct Bar<S, T> { x: Foo<S, T> }\n-                      //~^ ERROR E0244\n-                      //~| NOTE expected no type arguments, found 2\n+                      //~^ ERROR wrong number of type arguments: expected 0, found 2 [E0244]\n+                      //~| NOTE expected no type arguments\n \n \n fn main() {"}, {"sha": "9b19e09eeae7607c2d35e7cb785965f3aa90e616", "filename": "src/test/compile-fail/generic-type-less-params-with-defaults.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Fgeneric-type-less-params-with-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Fgeneric-type-less-params-with-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgeneric-type-less-params-with-defaults.rs?ref=1a819a2298d046be5b201b02684550e421c69ac0", "patch": "@@ -17,6 +17,6 @@ struct Vec<T, A = Heap>(\n \n fn main() {\n     let _: Vec;\n-    //~^ ERROR E0243\n-    //~| NOTE expected at least 1 type argument, found 0\n+    //~^ ERROR wrong number of type arguments: expected at least 1, found 0 [E0243]\n+    //~| NOTE expected at least 1 type argument\n }"}, {"sha": "b5764ef89ab54c8ce04e4a4888d43acb99dd47ca", "filename": "src/test/compile-fail/generic-type-more-params-with-defaults.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Fgeneric-type-more-params-with-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Fgeneric-type-more-params-with-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgeneric-type-more-params-with-defaults.rs?ref=1a819a2298d046be5b201b02684550e421c69ac0", "patch": "@@ -17,6 +17,6 @@ struct Vec<T, A = Heap>(\n \n fn main() {\n     let _: Vec<isize, Heap, bool>;\n-    //~^ ERROR E0244\n-    //~| NOTE expected at most 2 type arguments, found 3\n+    //~^ ERROR wrong number of type arguments: expected at most 2, found 3 [E0244]\n+    //~| NOTE expected at most 2 type arguments\n }"}, {"sha": "85dd88e614fd70a3283950798284665fd5135ce7", "filename": "src/test/compile-fail/issue-14092.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Fissue-14092.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Fissue-14092.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-14092.rs?ref=1a819a2298d046be5b201b02684550e421c69ac0", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n fn fn1(0: Box) {}\n-        //~^ ERROR E0243\n-        //~| NOTE expected 1 type argument, found 0\n+        //~^ ERROR wrong number of type arguments: expected 1, found 0 [E0243]\n+        //~| NOTE expected 1 type argument\n \n fn main() {}"}, {"sha": "5d9b49f486c69d20e733649522c48693cdc56be3", "filename": "src/test/compile-fail/issue-23024.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Fissue-23024.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Fissue-23024.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23024.rs?ref=1a819a2298d046be5b201b02684550e421c69ac0", "patch": "@@ -18,6 +18,6 @@ fn main()\n     vfnfer.push(box h);\n     println!(\"{:?}\",(vfnfer[0] as Fn)(3));\n     //~^ ERROR the precise format of `Fn`-family traits'\n-    //~| ERROR E0243\n+    //~| ERROR wrong number of type arguments: expected 1, found 0 [E0243]\n     //~| ERROR the value of the associated type `Output` (from the trait `std::ops::FnOnce`)\n }"}, {"sha": "0d98e044ab04edbde1ba5c8cdbed30d792bb7a6d", "filename": "src/test/compile-fail/typeck-builtin-bound-type-parameters.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Ftypeck-builtin-bound-type-parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Ftypeck-builtin-bound-type-parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-builtin-bound-type-parameters.rs?ref=1a819a2298d046be5b201b02684550e421c69ac0", "patch": "@@ -9,25 +9,25 @@\n // except according to those terms.\n \n fn foo1<T:Copy<U>, U>(x: T) {}\n-//~^ ERROR E0244\n-//~| NOTE expected no type arguments, found 1\n+//~^ ERROR wrong number of type arguments: expected 0, found 1 [E0244]\n+//~| NOTE expected no type arguments\n \n trait Trait: Copy<Send> {}\n-//~^ ERROR E0244\n-//~| NOTE expected no type arguments, found 1\n+//~^ ERROR wrong number of type arguments: expected 0, found 1 [E0244]\n+//~| NOTE expected no type arguments\n \n struct MyStruct1<T: Copy<T>>;\n-//~^ ERROR E0244\n-//~| NOTE expected no type arguments, found 1\n+//~^ ERROR wrong number of type arguments: expected 0, found 1 [E0244]\n+//~| NOTE expected no type arguments\n \n struct MyStruct2<'a, T: Copy<'a>>;\n //~^ ERROR: wrong number of lifetime parameters: expected 0, found 1\n //~| NOTE unexpected lifetime parameter\n \n \n fn foo2<'a, T:Copy<'a, U>, U>(x: T) {}\n-//~^ ERROR E0244\n-//~| NOTE expected no type arguments, found 1\n+//~^ ERROR wrong number of type arguments: expected 0, found 1 [E0244]\n+//~| NOTE expected no type arguments\n //~| ERROR: wrong number of lifetime parameters: expected 0, found 1\n //~| NOTE unexpected lifetime parameter\n "}, {"sha": "ad57752b6f755837e9b8f66b4ec40ac43e190845", "filename": "src/test/compile-fail/typeck_type_placeholder_lifetime_1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Ftypeck_type_placeholder_lifetime_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Ftypeck_type_placeholder_lifetime_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck_type_placeholder_lifetime_1.rs?ref=1a819a2298d046be5b201b02684550e421c69ac0", "patch": "@@ -17,6 +17,6 @@ struct Foo<'a, T:'a> {\n \n pub fn main() {\n     let c: Foo<_, _> = Foo { r: &5 };\n-    //~^ ERROR E0244\n-    //~| NOTE expected 1 type argument, found 2\n+    //~^ ERROR wrong number of type arguments: expected 1, found 2 [E0244]\n+    //~| NOTE expected 1 type argument\n }"}, {"sha": "f1ecad0056e976a98fee065ce8ee136f78555c52", "filename": "src/test/compile-fail/typeck_type_placeholder_lifetime_2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Ftypeck_type_placeholder_lifetime_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Ftypeck_type_placeholder_lifetime_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck_type_placeholder_lifetime_2.rs?ref=1a819a2298d046be5b201b02684550e421c69ac0", "patch": "@@ -17,6 +17,6 @@ struct Foo<'a, T:'a> {\n \n pub fn main() {\n     let c: Foo<_, usize> = Foo { r: &5 };\n-    //~^ ERROR E0244\n-    //~| NOTE expected 1 type argument, found 2\n+    //~^ ERROR wrong number of type arguments: expected 1, found 2 [E0244]\n+    //~| NOTE expected 1 type argument\n }"}, {"sha": "95d78c0750173d675814271b93b6ab17157576c4", "filename": "src/test/compile-fail/unboxed-closure-sugar-wrong-trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a819a2298d046be5b201b02684550e421c69ac0/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-trait.rs?ref=1a819a2298d046be5b201b02684550e421c69ac0", "patch": "@@ -13,8 +13,8 @@\n trait Trait {}\n \n fn f<F:Trait(isize) -> isize>(x: F) {}\n-//~^ ERROR E0244\n-//~| NOTE expected no type arguments, found 1\n+//~^ ERROR wrong number of type arguments: expected 0, found 1 [E0244]\n+//~| NOTE expected no type arguments\n //~| ERROR E0220\n //~| NOTE associated type `Output` not found\n "}]}