{"sha": "14f19c73e9b548a654e95443095e1d267bc64efe", "node_id": "C_kwDOAAsO6NoAKDE0ZjE5YzczZTliNTQ4YTY1NGU5NTQ0MzA5NWUxZDI2N2JjNjRlZmU", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-02-01T10:38:39Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-02-01T10:38:39Z"}, "message": "fix: Don't render fieldless discriminant inlay hints for datacarrying enums", "tree": {"sha": "c2d195169288b2386ed200dbed2dc25d5edb98c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2d195169288b2386ed200dbed2dc25d5edb98c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14f19c73e9b548a654e95443095e1d267bc64efe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14f19c73e9b548a654e95443095e1d267bc64efe", "html_url": "https://github.com/rust-lang/rust/commit/14f19c73e9b548a654e95443095e1d267bc64efe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14f19c73e9b548a654e95443095e1d267bc64efe/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9814d798411a4b1b258c710f86626bd1997e406f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9814d798411a4b1b258c710f86626bd1997e406f", "html_url": "https://github.com/rust-lang/rust/commit/9814d798411a4b1b258c710f86626bd1997e406f"}], "stats": {"total": 73, "additions": 47, "deletions": 26}, "files": [{"sha": "a9581db9ad493257f598176e2de3a4b7e11e6a8c", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14f19c73e9b548a654e95443095e1d267bc64efe/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f19c73e9b548a654e95443095e1d267bc64efe/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=14f19c73e9b548a654e95443095e1d267bc64efe", "patch": "@@ -422,11 +422,9 @@ fn hints(\n                 // static type elisions\n                 ast::Item::Static(it) => implicit_static::hints(hints, config, Either::Left(it)),\n                 ast::Item::Const(it) => implicit_static::hints(hints, config, Either::Right(it)),\n+                ast::Item::Enum(it) => discriminant::enum_hints(hints, famous_defs, config, file_id, it),\n                 _ => None,\n             },\n-            ast::Variant(v) => {\n-                discriminant::hints(hints, famous_defs, config, file_id, &v)\n-            },\n             // FIXME: fn-ptr type, dyn fn type, and trait object type elisions\n             ast::Type(_) => None,\n             _ => None,"}, {"sha": "c5c947150b3772e79534d112953f42707729bbd8", "filename": "crates/ide/src/inlay_hints/discriminant.rs", "status": "modified", "additions": 46, "deletions": 23, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/14f19c73e9b548a654e95443095e1d267bc64efe/crates%2Fide%2Fsrc%2Finlay_hints%2Fdiscriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f19c73e9b548a654e95443095e1d267bc64efe/crates%2Fide%2Fsrc%2Finlay_hints%2Fdiscriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fdiscriminant.rs?ref=14f19c73e9b548a654e95443095e1d267bc64efe", "patch": "@@ -4,29 +4,40 @@\n //!    Bar/* = 0*/,\n //! }\n //! ```\n-use ide_db::{base_db::FileId, famous_defs::FamousDefs};\n+use hir::Semantics;\n+use ide_db::{base_db::FileId, famous_defs::FamousDefs, RootDatabase};\n use syntax::ast::{self, AstNode, HasName};\n \n use crate::{\n     DiscriminantHints, InlayHint, InlayHintLabel, InlayHintsConfig, InlayKind, InlayTooltip,\n };\n \n-pub(super) fn hints(\n+pub(super) fn enum_hints(\n     acc: &mut Vec<InlayHint>,\n     FamousDefs(sema, _): &FamousDefs<'_, '_>,\n     config: &InlayHintsConfig,\n     _: FileId,\n-    variant: &ast::Variant,\n+    enum_: ast::Enum,\n ) -> Option<()> {\n-    let field_list = match config.discriminant_hints {\n-        DiscriminantHints::Always => variant.field_list(),\n-        DiscriminantHints::Fieldless => match variant.field_list() {\n-            Some(_) => return None,\n-            None => None,\n-        },\n-        DiscriminantHints::Never => return None,\n+    let disabled = match config.discriminant_hints {\n+        DiscriminantHints::Always => false,\n+        DiscriminantHints::Fieldless => sema.to_def(&enum_)?.is_data_carrying(sema.db),\n+        DiscriminantHints::Never => true,\n     };\n+    if disabled {\n+        return None;\n+    }\n+    for variant in enum_.variant_list()?.variants() {\n+        variant_hints(acc, sema, &variant);\n+    }\n+    None\n+}\n \n+fn variant_hints(\n+    acc: &mut Vec<InlayHint>,\n+    sema: &Semantics<'_, RootDatabase>,\n+    variant: &ast::Variant,\n+) -> Option<()> {\n     if variant.eq_token().is_some() {\n         return None;\n     }\n@@ -39,7 +50,7 @@ pub(super) fn hints(\n     let d = v.eval(sema.db);\n \n     acc.push(InlayHint {\n-        range: match field_list {\n+        range: match variant.field_list() {\n             Some(field_list) => name.syntax().text_range().cover(field_list.syntax().text_range()),\n             None => name.syntax().text_range(),\n         },\n@@ -91,15 +102,30 @@ mod tests {\n         check_discriminants(\n             r#\"\n enum Enum {\n-    Variant,\n-  //^^^^^^^0\n-    Variant1,\n-  //^^^^^^^^1\n-    Variant2,\n-  //^^^^^^^^2\n-    Variant5 = 5,\n-    Variant6,\n-  //^^^^^^^^6\n+  Variant,\n+//^^^^^^^0\n+  Variant1,\n+//^^^^^^^^1\n+  Variant2,\n+//^^^^^^^^2\n+  Variant5 = 5,\n+  Variant6,\n+//^^^^^^^^6\n+}\n+\"#,\n+        );\n+        check_discriminants_fieldless(\n+            r#\"\n+enum Enum {\n+  Variant,\n+//^^^^^^^0\n+  Variant1,\n+//^^^^^^^^1\n+  Variant2,\n+//^^^^^^^^2\n+  Variant5 = 5,\n+  Variant6,\n+//^^^^^^^^6\n }\n \"#,\n         );\n@@ -133,13 +159,10 @@ enum Enum {\n enum Enum {\n     Variant(),\n     Variant1,\n-  //^^^^^^^^1\n     Variant2 {},\n     Variant3,\n-  //^^^^^^^^3\n     Variant5 = 5,\n     Variant6,\n-  //^^^^^^^^6\n }\n \"#,\n         );"}]}