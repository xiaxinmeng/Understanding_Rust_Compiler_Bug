{"sha": "251d435e2bc003a5042b943f9518e02204b8f66c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1MWQ0MzVlMmJjMDAzYTUwNDJiOTQzZjk1MThlMDIyMDRiOGY2NmM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-12-21T01:47:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-21T01:47:37Z"}, "message": "Rollup merge of #80166 - pierwill:pierwill-rustcmiddle-place, r=petrochenkov\n\nEdit rustc_middle docs\n\nRe-word doc comment for rustc_middle::hir::place::Projection.\n\nAlso adds:\n\n- Missing end stop punctuation, and\n- Documentation links to `rustc_middle::mir::Place`.", "tree": {"sha": "8b9b9dc53182ac5fcd5235fd776d2053baac5144", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b9b9dc53182ac5fcd5235fd776d2053baac5144"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/251d435e2bc003a5042b943f9518e02204b8f66c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf3/66CRBK7hj4Ov3rIwAAdHIIABLrvvBhW72Ov0V6s74/jLfv\nciSNSLJGVTxS3Dk30tpKSE9lRFzqyBC7mAuX4jSLN98e7FsjnMBdOEZqcXkY2nlJ\nJt838uH91Q4Nk7okdk/vkWihgw4f0U9w9I+4aXKGRxWPOEq3pj087/x+RgrR7gD2\nehnFFXbW/83QEBY2U4Al9Xt0D6eTdbFT+25OVrxbbjaERZleHMN7R9fwpoZaEpoz\nDZZpzYc0nLBX0DT80XPDGcEk0rwBtR7AnRP+k97vH7MdLoiKUNGXrw5tq9qHJ/um\nqpzTE3K+QMMhOAPxSEkn0tNfORliXt972LADh9iHQS62gRl6mHpvfrANg1ywVJo=\n=hRT/\n-----END PGP SIGNATURE-----\n", "payload": "tree 8b9b9dc53182ac5fcd5235fd776d2053baac5144\nparent 635ea920f159e02d69033bf87b25a82f67d4c124\nparent f318f0211238abc4053fb6ce5ebfd0e229d3bf27\nauthor Dylan DPC <dylan.dpc@gmail.com> 1608515257 +0100\ncommitter GitHub <noreply@github.com> 1608515257 +0100\n\nRollup merge of #80166 - pierwill:pierwill-rustcmiddle-place, r=petrochenkov\n\nEdit rustc_middle docs\n\nRe-word doc comment for rustc_middle::hir::place::Projection.\n\nAlso adds:\n\n- Missing end stop punctuation, and\n- Documentation links to `rustc_middle::mir::Place`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/251d435e2bc003a5042b943f9518e02204b8f66c", "html_url": "https://github.com/rust-lang/rust/commit/251d435e2bc003a5042b943f9518e02204b8f66c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/251d435e2bc003a5042b943f9518e02204b8f66c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "635ea920f159e02d69033bf87b25a82f67d4c124", "url": "https://api.github.com/repos/rust-lang/rust/commits/635ea920f159e02d69033bf87b25a82f67d4c124", "html_url": "https://github.com/rust-lang/rust/commit/635ea920f159e02d69033bf87b25a82f67d4c124"}, {"sha": "f318f0211238abc4053fb6ce5ebfd0e229d3bf27", "url": "https://api.github.com/repos/rust-lang/rust/commits/f318f0211238abc4053fb6ce5ebfd0e229d3bf27", "html_url": "https://github.com/rust-lang/rust/commit/f318f0211238abc4053fb6ce5ebfd0e229d3bf27"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "1e2e9df88c584e40ceca08ee97db682d60d5d315", "filename": "compiler/rustc_middle/src/hir/place.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/251d435e2bc003a5042b943f9518e02204b8f66c/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/251d435e2bc003a5042b943f9518e02204b8f66c/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fplace.rs?ref=251d435e2bc003a5042b943f9518e02204b8f66c", "patch": "@@ -17,13 +17,13 @@ use rustc_target::abi::VariantIdx;\n     HashStable\n )]\n pub enum PlaceBase {\n-    /// A temporary variable\n+    /// A temporary variable.\n     Rvalue,\n-    /// A named `static` item\n+    /// A named `static` item.\n     StaticItem,\n-    /// A named local variable\n+    /// A named local variable.\n     Local(HirId),\n-    /// An upvar referenced by closure env\n+    /// An upvar referenced by closure env.\n     Upvar(ty::UpvarId),\n }\n \n@@ -40,7 +40,7 @@ pub enum PlaceBase {\n     HashStable\n )]\n pub enum ProjectionKind {\n-    /// A dereference of a pointer, reference or `Box<T>` of the given type\n+    /// A dereference of a pointer, reference or `Box<T>` of the given type.\n     Deref,\n \n     /// `B.F` where `B` is the base expression and `F` is\n@@ -71,16 +71,16 @@ pub enum ProjectionKind {\n     HashStable\n )]\n pub struct Projection<'tcx> {\n-    /// Type after the projection is being applied.\n+    /// Type after the projection is applied.\n     pub ty: Ty<'tcx>,\n \n-    /// Defines the type of access\n+    /// Defines the kind of access made by the projection.\n     pub kind: ProjectionKind,\n }\n \n /// A `Place` represents how a value is located in memory.\n ///\n-/// This is an HIR version of `mir::Place`\n+/// This is an HIR version of [`rustc_middle::mir::Place`].\n #[derive(Clone, Debug, PartialEq, Eq, Hash, TyEncodable, TyDecodable, TypeFoldable, HashStable)]\n pub struct Place<'tcx> {\n     /// The type of the `PlaceBase`\n@@ -93,13 +93,13 @@ pub struct Place<'tcx> {\n \n /// A `PlaceWithHirId` represents how a value is located in memory.\n ///\n-/// This is an HIR version of `mir::Place`\n+/// This is an HIR version of [`rustc_middle::mir::Place`].\n #[derive(Clone, Debug, PartialEq, Eq, Hash, TyEncodable, TyDecodable, TypeFoldable, HashStable)]\n pub struct PlaceWithHirId<'tcx> {\n     /// `HirId` of the expression or pattern producing this value.\n     pub hir_id: HirId,\n \n-    /// Information about the `Place`\n+    /// Information about the `Place`.\n     pub place: Place<'tcx>,\n }\n "}]}