{"sha": "835dce569d8fbad7566942b6ccf8c62ac3900791", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNWRjZTU2OWQ4ZmJhZDc1NjY5NDJiNmNjZjhjNjJhYzM5MDA3OTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-08T01:52:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-08T01:52:32Z"}, "message": "Auto merge of #86744 - ijackson:sink-default, r=dtolnay\n\nimpl Default, Copy, Clone for std::io::Sink and Empty\n\nThe omission of `Sink: Default` is causing me a slight inconvenience in a test harness.  There seems little reason for this and `Empty` not to be `Clone` and `Copy` too.\n\nI have made all three of these insta-stable, because:\n\nAIUI `Copy` can only be derived, and I was not able to find any examples of how to unstably derive it.  I think it is probably not possible.\n\nI hunted through the git history for precedent and found\n\n> 79b8ad84c84481a43704213cd0948d2ba0ea63b4\n> Implement `Copy` for `IoSlice`\n> https://github.com/rust-lang/rust/pull/69403\n\nwhich was also insta-stable.", "tree": {"sha": "e29f12591f270353ab070b31eb4abf7d9b73084c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e29f12591f270353ab070b31eb4abf7d9b73084c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/835dce569d8fbad7566942b6ccf8c62ac3900791", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/835dce569d8fbad7566942b6ccf8c62ac3900791", "html_url": "https://github.com/rust-lang/rust/commit/835dce569d8fbad7566942b6ccf8c62ac3900791", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/835dce569d8fbad7566942b6ccf8c62ac3900791/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "798446fe0612dd83a151e99c201b87dd649d4eb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/798446fe0612dd83a151e99c201b87dd649d4eb3", "html_url": "https://github.com/rust-lang/rust/commit/798446fe0612dd83a151e99c201b87dd649d4eb3"}, {"sha": "a7e88e0dad45d12ec9b9a176614f38c329a23946", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7e88e0dad45d12ec9b9a176614f38c329a23946", "html_url": "https://github.com/rust-lang/rust/commit/a7e88e0dad45d12ec9b9a176614f38c329a23946"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "a8812f197d82d3c269dc001d2eb98a5f450a74a1", "filename": "library/std/src/io/util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/835dce569d8fbad7566942b6ccf8c62ac3900791/library%2Fstd%2Fsrc%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/835dce569d8fbad7566942b6ccf8c62ac3900791/library%2Fstd%2Fsrc%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Futil.rs?ref=835dce569d8fbad7566942b6ccf8c62ac3900791", "patch": "@@ -14,6 +14,7 @@ use crate::io::{\n /// the documentation of [`empty()`] for more details.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[non_exhaustive]\n+#[derive(Copy, Clone, Default)]\n pub struct Empty;\n \n /// Constructs a new handle to an empty reader.\n@@ -172,6 +173,7 @@ impl fmt::Debug for Repeat {\n /// see the documentation of [`sink()`] for more details.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[non_exhaustive]\n+#[derive(Copy, Clone, Default)]\n pub struct Sink;\n \n /// Creates an instance of a writer which will successfully consume all data."}]}