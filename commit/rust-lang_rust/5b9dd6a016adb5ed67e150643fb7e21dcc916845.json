{"sha": "5b9dd6a016adb5ed67e150643fb7e21dcc916845", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViOWRkNmEwMTZhZGI1ZWQ2N2UxNTA2NDNmYjdlMjFkY2M5MTY4NDU=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2015-12-10T20:14:41Z"}, "committer": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2015-12-11T14:18:18Z"}, "message": "Document bounds checking in the book", "tree": {"sha": "fe07426ae294a81f55eadde4934ae0d6b0a0719d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe07426ae294a81f55eadde4934ae0d6b0a0719d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b9dd6a016adb5ed67e150643fb7e21dcc916845", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b9dd6a016adb5ed67e150643fb7e21dcc916845", "html_url": "https://github.com/rust-lang/rust/commit/5b9dd6a016adb5ed67e150643fb7e21dcc916845", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b9dd6a016adb5ed67e150643fb7e21dcc916845/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e48b593ca613c5deea5503e0dd1d94dce70ab54", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e48b593ca613c5deea5503e0dd1d94dce70ab54", "html_url": "https://github.com/rust-lang/rust/commit/2e48b593ca613c5deea5503e0dd1d94dce70ab54"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "b09735c3feee6b9d12c7816fe06c8adafa6933d0", "filename": "src/doc/book/vectors.md", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5b9dd6a016adb5ed67e150643fb7e21dcc916845/src%2Fdoc%2Fbook%2Fvectors.md", "raw_url": "https://github.com/rust-lang/rust/raw/5b9dd6a016adb5ed67e150643fb7e21dcc916845/src%2Fdoc%2Fbook%2Fvectors.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fvectors.md?ref=5b9dd6a016adb5ed67e150643fb7e21dcc916845", "patch": "@@ -61,6 +61,33 @@ error: aborting due to previous error\n There\u2019s a lot of punctuation in that message, but the core of it makes sense:\n you cannot index with an `i32`.\n \n+## Out-of-bounds Access\n+\n+If you try to access an index that doesn\u2019t exist:\n+\n+```ignore\n+let v = vec![1, 2, 3];\n+println!(\"Item 7 is {}\", v[7]);\n+```\n+\n+then the current thread will [panic] with a message like this:\n+\n+```text\n+thread '<main>' panicked at 'index out of bounds: the len is 3 but the index is 7'\n+```\n+\n+If you want to handle out-of-bounds errors without panicking, you can use\n+methods like [`get`][get] or [`get_mut`][get_mut] that return `None` when\n+given an invalid index:\n+\n+```rust\n+let v = vec![1, 2, 3];\n+match v.get(7) {\n+    Some(x) => println!(\"Item 7 is {}\", x),\n+    None => println!(\"Sorry, this vector is too short.\")\n+}\n+```\n+\n ## Iterating\n \n Once you have a vector, you can iterate through its elements with `for`. There\n@@ -87,3 +114,6 @@ API documentation][vec].\n \n [vec]: ../std/vec/index.html\n [generic]: generics.html\n+[panic]: concurrency.html#panics\n+[get]: http://doc.rust-lang.org/std/vec/struct.Vec.html#method.get\n+[get_mut]: http://doc.rust-lang.org/std/vec/struct.Vec.html#method.get_mut"}]}