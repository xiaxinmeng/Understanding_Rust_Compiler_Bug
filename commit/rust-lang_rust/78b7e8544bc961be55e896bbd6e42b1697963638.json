{"sha": "78b7e8544bc961be55e896bbd6e42b1697963638", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4YjdlODU0NGJjOTYxYmU1NWU4OTZiYmQ2ZTQyYjE2OTc5NjM2Mzg=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-11-01T19:12:08Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-11-11T06:59:53Z"}, "message": "Fix false positive in derive_hash_xor_eq\n\nThis fixes a false positive in derive_hash_xor_eq where the lint was\ntriggering on user-defined traits called `Hash`.", "tree": {"sha": "d35d682a4c54cad96b3d8bd0e904decf24d43513", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d35d682a4c54cad96b3d8bd0e904decf24d43513"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78b7e8544bc961be55e896bbd6e42b1697963638", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAl3JBuoQHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5tapD/9IL/fNF+mCs/GpguMf2JZpanfsh0BKFrxZ\nBxPBxiNZQw+ofWJS75WTp4Vx9DjdkiXaX9dyJgGOPgsqR1f9chYV8/oaeOjCxJzx\neS3haBTDEo/caIOFiThyZZ6xexijKaTPuOmWURB6eorfZjIyrSEzTotCpnrta9wm\nQWgIDHHOht1R03MAoTNs2Go4BQxkrSCHBbSE6nCxhbzcOsmlSh6nhFuaONKey+cg\nNV6iKCu+Xbw7nHNe61Y8ebSNJYWJ3UYJZCK0igGb0Vi/E/rYBMHbk8bSKQrRR8wm\nd1mqOvR5V8tyriO5n4Yf0XmiP/BqKZP2yPw3rMvaXFtCqaWrdEmHOE92Uqnjsbdu\noHRd2ppT5P82DVy9scE64gJWbt+FByorPcezULyftChggwgKV4xrywVE2Cm3zwMt\ny0+9Zh/hDXVJhsBOZo+WhD/3PNSdIGhte7J2MrGGNIWQ/bMlB40GZey7y68Jazeg\nbiuJII61Mxi5QwgQ4d1r8LuvjYXZBa5bRn5ug+4WtCaxd8JLgdx1+LVv8CgZWUHU\nC0lXl42P2sW3ZcVQOWWuPrQQ0yhShHs2KPYmS13c8qA6EGPMk7QeNAPMOtO05E5B\n650jirnlrd1RHvJ1Hv62EUJ3cRASjgXqg0qvubyuTtNMpxgvKnOsnrBI49hbIsA+\nxsd8/hwvrw==\n=khc8\n-----END PGP SIGNATURE-----", "payload": "tree d35d682a4c54cad96b3d8bd0e904decf24d43513\nparent 338f5e6801315fae7353facf5a338c78df7b0bce\nauthor Philipp Hansch <dev@phansch.net> 1572635528 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1573455593 +0100\n\nFix false positive in derive_hash_xor_eq\n\nThis fixes a false positive in derive_hash_xor_eq where the lint was\ntriggering on user-defined traits called `Hash`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78b7e8544bc961be55e896bbd6e42b1697963638", "html_url": "https://github.com/rust-lang/rust/commit/78b7e8544bc961be55e896bbd6e42b1697963638", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78b7e8544bc961be55e896bbd6e42b1697963638/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "338f5e6801315fae7353facf5a338c78df7b0bce", "url": "https://api.github.com/repos/rust-lang/rust/commits/338f5e6801315fae7353facf5a338c78df7b0bce", "html_url": "https://github.com/rust-lang/rust/commit/338f5e6801315fae7353facf5a338c78df7b0bce"}], "stats": {"total": 58, "additions": 45, "deletions": 13}, "files": [{"sha": "f60ed90cd7c1e3eaaf76cb8d0128a1b1574b956a", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78b7e8544bc961be55e896bbd6e42b1697963638/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78b7e8544bc961be55e896bbd6e42b1697963638/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=78b7e8544bc961be55e896bbd6e42b1697963638", "patch": "@@ -90,6 +90,7 @@ fn check_hash_peq<'a, 'tcx>(\n     if_chain! {\n         if match_path(&trait_ref.path, &paths::HASH);\n         if let Some(peq_trait_def_id) = cx.tcx.lang_items().eq_trait();\n+        if !&trait_ref.trait_def_id().is_local();\n         then {\n             // Look for the PartialEq implementations for `ty`\n             cx.tcx.for_each_relevant_impl(peq_trait_def_id, ty, |impl_id| {"}, {"sha": "10abe22d53e5c1338c8f136eacc301e8c77e4128", "filename": "tests/ui/derive_hash_xor_eq.rs", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/78b7e8544bc961be55e896bbd6e42b1697963638/tests%2Fui%2Fderive_hash_xor_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78b7e8544bc961be55e896bbd6e42b1697963638/tests%2Fui%2Fderive_hash_xor_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive_hash_xor_eq.rs?ref=78b7e8544bc961be55e896bbd6e42b1697963638", "patch": "@@ -1,5 +1,3 @@\n-use std::hash::{Hash, Hasher};\n-\n #[derive(PartialEq, Hash)]\n struct Foo;\n \n@@ -30,8 +28,27 @@ impl PartialEq<Baz> for Baz {\n #[derive(PartialEq)]\n struct Bah;\n \n-impl Hash for Bah {\n-    fn hash<H: Hasher>(&self, _: &mut H) {}\n+impl std::hash::Hash for Bah {\n+    fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n+}\n+\n+#[derive(PartialEq)]\n+struct Foo2;\n+\n+trait Hash {}\n+\n+// We don't want to lint on user-defined traits called `Hash`\n+impl Hash for Foo2 {}\n+\n+mod use_hash {\n+    use std::hash::{Hash, Hasher};\n+\n+    #[derive(PartialEq)]\n+    struct Foo3;\n+\n+    impl Hash for Foo3 {\n+        fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n+    }\n }\n \n fn main() {}"}, {"sha": "10c38bb42e39baaebb5cfe21e7e0500e08d3d75d", "filename": "tests/ui/derive_hash_xor_eq.stderr", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/78b7e8544bc961be55e896bbd6e42b1697963638/tests%2Fui%2Fderive_hash_xor_eq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/78b7e8544bc961be55e896bbd6e42b1697963638/tests%2Fui%2Fderive_hash_xor_eq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive_hash_xor_eq.stderr?ref=78b7e8544bc961be55e896bbd6e42b1697963638", "patch": "@@ -1,12 +1,12 @@\n error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n-  --> $DIR/derive_hash_xor_eq.rs:12:10\n+  --> $DIR/derive_hash_xor_eq.rs:10:10\n    |\n LL | #[derive(Hash)]\n    |          ^^^^\n    |\n    = note: `#[deny(clippy::derive_hash_xor_eq)]` on by default\n note: `PartialEq` implemented here\n-  --> $DIR/derive_hash_xor_eq.rs:15:1\n+  --> $DIR/derive_hash_xor_eq.rs:13:1\n    |\n LL | / impl PartialEq for Bar {\n LL | |     fn eq(&self, _: &Bar) -> bool {\n@@ -16,13 +16,13 @@ LL | | }\n    | |_^\n \n error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n-  --> $DIR/derive_hash_xor_eq.rs:21:10\n+  --> $DIR/derive_hash_xor_eq.rs:19:10\n    |\n LL | #[derive(Hash)]\n    |          ^^^^\n    |\n note: `PartialEq` implemented here\n-  --> $DIR/derive_hash_xor_eq.rs:24:1\n+  --> $DIR/derive_hash_xor_eq.rs:22:1\n    |\n LL | / impl PartialEq<Baz> for Baz {\n LL | |     fn eq(&self, _: &Baz) -> bool {\n@@ -32,18 +32,32 @@ LL | | }\n    | |_^\n \n error: you are implementing `Hash` explicitly but have derived `PartialEq`\n-  --> $DIR/derive_hash_xor_eq.rs:33:1\n+  --> $DIR/derive_hash_xor_eq.rs:31:1\n    |\n-LL | / impl Hash for Bah {\n-LL | |     fn hash<H: Hasher>(&self, _: &mut H) {}\n+LL | / impl std::hash::Hash for Bah {\n+LL | |     fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n LL | | }\n    | |_^\n    |\n note: `PartialEq` implemented here\n-  --> $DIR/derive_hash_xor_eq.rs:30:10\n+  --> $DIR/derive_hash_xor_eq.rs:28:10\n    |\n LL | #[derive(PartialEq)]\n    |          ^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: you are implementing `Hash` explicitly but have derived `PartialEq`\n+  --> $DIR/derive_hash_xor_eq.rs:49:5\n+   |\n+LL | /     impl Hash for Foo3 {\n+LL | |         fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n+LL | |     }\n+   | |_____^\n+   |\n+note: `PartialEq` implemented here\n+  --> $DIR/derive_hash_xor_eq.rs:46:14\n+   |\n+LL |     #[derive(PartialEq)]\n+   |              ^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n "}]}