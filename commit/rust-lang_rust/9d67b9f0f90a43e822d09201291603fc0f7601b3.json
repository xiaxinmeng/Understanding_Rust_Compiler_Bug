{"sha": "9d67b9f0f90a43e822d09201291603fc0f7601b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNjdiOWYwZjkwYTQzZTgyMmQwOTIwMTI5MTYwM2ZjMGY3NjAxYjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-01T16:21:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-01T16:21:10Z"}, "message": "Auto merge of #26675 - azerupi:doc-js-keyevent, r=alexcrichton\n\nLike explained in #26016, typing `?` had no effect with non-english keyboard layouts in the docs. \r\n\r\nThis patch seems to resolve this issue, **tested with AZERTY keyboard in Google Chrome and Firefox**. I haven't tested it with more exotic keyboard layouts or with other browsers though.\r\n\r\nThis code is based on the information found on: http://javascript.info/tutorial/keyboard-events\r\n\r\n**More specifically:**\r\n\r\n> The only event which reliably provides the character is keypress.\r\n\r\n**And**\r\n\r\n>```\r\n// event.type must be keypress\r\nfunction getChar(event) {\r\n  if (event.which == null) {\r\n    return String.fromCharCode(event.keyCode) // IE\r\n  } else if (event.which!=0 && event.charCode!=0) {\r\n    return String.fromCharCode(event.which)   // the rest\r\n  } else {\r\n    return null // special key\r\n  }\r\n}\r\n```\r\n\r\n`?` and `S` work, `escape` however does not (on an Azerty keyboard). \r\n\r\nIt would be good if some people could test it with other browsers and keyboard layouts: http://www.mathieudavid.org/test/rustdoc/std/index.html\r\n\r\n**Edit:**\r\n- swedish layout works on Firefox and Chromium\r\n- french (azerty) mac layout works on Safari", "tree": {"sha": "eea50ea481ceb11b276bcd42402aa7481eaab3fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eea50ea481ceb11b276bcd42402aa7481eaab3fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d67b9f0f90a43e822d09201291603fc0f7601b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d67b9f0f90a43e822d09201291603fc0f7601b3", "html_url": "https://github.com/rust-lang/rust/commit/9d67b9f0f90a43e822d09201291603fc0f7601b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d67b9f0f90a43e822d09201291603fc0f7601b3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4fe2a00276fa14a526409ccaee740ba01a17f3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4fe2a00276fa14a526409ccaee740ba01a17f3e", "html_url": "https://github.com/rust-lang/rust/commit/d4fe2a00276fa14a526409ccaee740ba01a17f3e"}, {"sha": "49b73e46d68f96e8afc8346c5d3a0ccb38f7c634", "url": "https://api.github.com/repos/rust-lang/rust/commits/49b73e46d68f96e8afc8346c5d3a0ccb38f7c634", "html_url": "https://github.com/rust-lang/rust/commit/49b73e46d68f96e8afc8346c5d3a0ccb38f7c634"}], "stats": {"total": 39, "additions": 33, "deletions": 6}, "files": [{"sha": "4a033452774666d272202816643a7da7a4f972d4", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 33, "deletions": 6, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/9d67b9f0f90a43e822d09201291603fc0f7601b3/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/9d67b9f0f90a43e822d09201291603fc0f7601b3/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=9d67b9f0f90a43e822d09201291603fc0f7601b3", "patch": "@@ -76,17 +76,46 @@\n     highlightSourceLines(null);\n     $(window).on('hashchange', highlightSourceLines);\n \n-    $(document).on('keyup', function handleKeyboardShortcut(e) {\n+    // Helper function for Keyboard events,\n+    // Get's the char from the keypress event\n+    //\n+    // This method is used because e.wich === x is not\n+    // compatible with non-english keyboard layouts\n+    //\n+    // Note: event.type must be keypress !\n+    function getChar(event) {\n+      if (event.which == null) {\n+        return String.fromCharCode(event.keyCode) // IE\n+      } else if (event.which!=0 && event.charCode!=0) {\n+        return String.fromCharCode(event.which)   // the rest\n+      } else {\n+        return null // special key\n+      }\n+    }\n+\n+    $(document).on('keypress', function handleKeyboardShortcut(e) {\n         if (document.activeElement.tagName === 'INPUT') {\n             return;\n         }\n \n-        if (e.which === 191) { // question mark\n+        if (getChar(e) === '?') {\n             if (e.shiftKey && $('#help').hasClass('hidden')) {\n                 e.preventDefault();\n                 $('#help').removeClass('hidden');\n             }\n-        } else if (e.which === 27) { // esc\n+        } else if (getChar(e) === 's' || getChar(e) === 'S') {\n+            e.preventDefault();\n+            $('.search-input').focus();\n+        }\n+    }).on('keydown', function(e) {\n+        // The escape key event has to be captured with the keydown event.\n+        // Because keypressed has no keycode for the escape key\n+        // (and other special keys in general)...\n+        if (document.activeElement.tagName === 'INPUT') {\n+            return;\n+        }\n+\n+        if (e.keyCode === 27) { // escape key\n             if (!$('#help').hasClass('hidden')) {\n                 e.preventDefault();\n                 $('#help').addClass('hidden');\n@@ -95,16 +124,14 @@\n                 $('#search').addClass('hidden');\n                 $('#main').removeClass('hidden');\n             }\n-        } else if (e.which === 83) { // S\n-            e.preventDefault();\n-            $('.search-input').focus();\n         }\n     }).on('click', function(e) {\n         if (!$(e.target).closest('#help').length) {\n             $('#help').addClass('hidden');\n         }\n     });\n \n+\n     $('.version-selector').on('change', function() {\n         var i, match,\n             url = document.location.href,"}]}