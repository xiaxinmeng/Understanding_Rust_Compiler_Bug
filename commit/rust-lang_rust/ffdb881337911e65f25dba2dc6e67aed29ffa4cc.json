{"sha": "ffdb881337911e65f25dba2dc6e67aed29ffa4cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmZGI4ODEzMzc5MTFlNjVmMjVkYmEyZGM2ZTY3YWVkMjlmZmE0Y2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-07T17:17:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-07T17:17:38Z"}, "message": "auto merge of #14717 : zwarich/rust/borrowck-tests, r=cmr\n\nAfter sitting down to build on the work merged in #14318, I realized that some of the test names were not clear, others probably weren't testing the right thing, and they were also not as exhaustive as they could have been.", "tree": {"sha": "85207b4a0f0104200e195a794ef3c0f7f0307596", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85207b4a0f0104200e195a794ef3c0f7f0307596"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffdb881337911e65f25dba2dc6e67aed29ffa4cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffdb881337911e65f25dba2dc6e67aed29ffa4cc", "html_url": "https://github.com/rust-lang/rust/commit/ffdb881337911e65f25dba2dc6e67aed29ffa4cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffdb881337911e65f25dba2dc6e67aed29ffa4cc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e9e484d7089590ce63bfe21723d7ee0c50be8f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e9e484d7089590ce63bfe21723d7ee0c50be8f4", "html_url": "https://github.com/rust-lang/rust/commit/8e9e484d7089590ce63bfe21723d7ee0c50be8f4"}, {"sha": "4666792ac600f4e4e1c09a37b88f40f6125b57b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4666792ac600f4e4e1c09a37b88f40f6125b57b8", "html_url": "https://github.com/rust-lang/rust/commit/4666792ac600f4e4e1c09a37b88f40f6125b57b8"}], "stats": {"total": 217, "additions": 133, "deletions": 84}, "files": [{"sha": "2fa9067af549a6805e9187cc957b693ea5b37065", "filename": "src/test/compile-fail/borrowck-field-sensitivity.rs", "status": "modified", "additions": 38, "deletions": 20, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/ffdb881337911e65f25dba2dc6e67aed29ffa4cc/src%2Ftest%2Fcompile-fail%2Fborrowck-field-sensitivity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffdb881337911e65f25dba2dc6e67aed29ffa4cc/src%2Ftest%2Fcompile-fail%2Fborrowck-field-sensitivity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-field-sensitivity.rs?ref=ffdb881337911e65f25dba2dc6e67aed29ffa4cc", "patch": "@@ -10,15 +10,13 @@\n \n struct A { a: int, b: Box<int> }\n \n-fn borrow<T>(_: &T) { }\n-\n-fn use_after_move() {\n+fn deref_after_move() {\n     let x = A { a: 1, b: box 2 };\n     drop(x.b);\n     drop(*x.b); //~ ERROR use of partially moved value: `*x.b`\n }\n \n-fn use_after_fu_move() {\n+fn deref_after_fu_move() {\n     let x = A { a: 1, b: box 2 };\n     let y = A { a: 3, .. x };\n     drop(*x.b); //~ ERROR use of partially moved value: `*x.b`\n@@ -27,35 +25,37 @@ fn use_after_fu_move() {\n fn borrow_after_move() {\n     let x = A { a: 1, b: box 2 };\n     drop(x.b);\n-    borrow(&x.b); //~ ERROR use of moved value: `x.b`\n+    let p = &x.b; //~ ERROR use of moved value: `x.b`\n+    drop(**p);\n }\n \n fn borrow_after_fu_move() {\n     let x = A { a: 1, b: box 2 };\n     let _y = A { a: 3, .. x };\n-    borrow(&x.b); //~ ERROR use of moved value: `x.b`\n+    let p = &x.b; //~ ERROR use of moved value: `x.b`\n+    drop(**p);\n }\n \n fn move_after_borrow() {\n     let x = A { a: 1, b: box 2 };\n-    let y = &x.b;\n+    let p = &x.b;\n     drop(x.b); //~ ERROR cannot move out of `x.b` because it is borrowed\n-    borrow(&*y);\n+    drop(**p);\n }\n \n fn fu_move_after_borrow() {\n     let x = A { a: 1, b: box 2 };\n-    let y = &x.b;\n-    let _z = A { a: 3, .. x }; //~ ERROR cannot move out of `x.b` because it is borrowed\n-    borrow(&*y);\n+    let p = &x.b;\n+    let _y = A { a: 3, .. x }; //~ ERROR cannot move out of `x.b` because it is borrowed\n+    drop(**p);\n }\n \n fn mut_borrow_after_mut_borrow() {\n     let mut x = A { a: 1, b: box 2 };\n-    let y = &mut x.a;\n-    let z = &mut x.a; //~ ERROR cannot borrow `x.a` as mutable more than once at a time\n-    drop(*y);\n-    drop(*z);\n+    let p = &mut x.a;\n+    let q = &mut x.a; //~ ERROR cannot borrow `x.a` as mutable more than once at a time\n+    drop(*p);\n+    drop(*q);\n }\n \n fn move_after_move() {\n@@ -84,7 +84,21 @@ fn fu_move_after_fu_move() {\n \n // The following functions aren't yet accepted, but they should be.\n \n-fn use_after_field_assign_after_uninit() {\n+fn move_after_borrow_correct() {\n+    let x = A { a: 1, b: box 2 };\n+    let p = &x.a;\n+    drop(x.b); //~ ERROR cannot move out of `x.b` because it is borrowed\n+    drop(*p);\n+}\n+\n+fn fu_move_after_borrow_correct() {\n+    let x = A { a: 1, b: box 2 };\n+    let p = &x.a;\n+    let _y = A { a: 3, .. x }; //~ ERROR cannot move out of `x.b` because it is borrowed\n+    drop(*p);\n+}\n+\n+fn copy_after_field_assign_after_uninit() {\n     let mut x: A;\n     x.a = 1;\n     drop(x.a); //~ ERROR use of possibly uninitialized variable: `x.a`\n@@ -93,7 +107,8 @@ fn use_after_field_assign_after_uninit() {\n fn borrow_after_field_assign_after_uninit() {\n     let mut x: A;\n     x.a = 1;\n-    borrow(&x.a); //~ ERROR use of possibly uninitialized variable: `x.a`\n+    let p = &x.a; //~ ERROR use of possibly uninitialized variable: `x.a`\n+    drop(*p);\n }\n \n fn move_after_field_assign_after_uninit() {\n@@ -103,8 +118,8 @@ fn move_after_field_assign_after_uninit() {\n }\n \n fn main() {\n-    use_after_move();\n-    use_after_fu_move();\n+    deref_after_move();\n+    deref_after_fu_move();\n \n     borrow_after_move();\n     borrow_after_fu_move();\n@@ -117,7 +132,10 @@ fn main() {\n     fu_move_after_move();\n     fu_move_after_fu_move();\n \n-    use_after_field_assign_after_uninit();\n+    move_after_borrow_correct();\n+    fu_move_after_borrow_correct();\n+\n+    copy_after_field_assign_after_uninit();\n     borrow_after_field_assign_after_uninit();\n     move_after_field_assign_after_uninit();\n }"}, {"sha": "a297300daf1b2ee8699db503ec4288448f9d4848", "filename": "src/test/run-pass/borrowck-field-sensitivity.rs", "status": "modified", "additions": 95, "deletions": 64, "changes": 159, "blob_url": "https://github.com/rust-lang/rust/blob/ffdb881337911e65f25dba2dc6e67aed29ffa4cc/src%2Ftest%2Frun-pass%2Fborrowck-field-sensitivity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffdb881337911e65f25dba2dc6e67aed29ffa4cc/src%2Ftest%2Frun-pass%2Fborrowck-field-sensitivity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-field-sensitivity.rs?ref=ffdb881337911e65f25dba2dc6e67aed29ffa4cc", "patch": "@@ -11,92 +11,74 @@\n struct A { a: int, b: Box<int> }\n struct B { a: Box<int>, b: Box<int> }\n \n-fn borrow<T>(_: &T) { }\n-\n-fn move_after_use() {\n+fn move_after_copy() {\n     let x = A { a: 1, b: box 2 };\n     drop(x.a);\n     drop(x.b);\n }\n \n-fn move_after_fu_use() {\n+fn move_after_fu_copy() {\n     let x = A { a: 1, b: box 2 };\n     let _y = A { b: box 3, .. x };\n     drop(x.b);\n }\n \n-fn fu_move_after_use() {\n+fn fu_move_after_copy() {\n     let x = A { a: 1, b: box 2 };\n     drop(x.a);\n-    let y = A { a: 3, .. x };\n-    drop(y.b);\n+    let _y = A { a: 3, .. x };\n }\n \n-fn fu_move_after_fu_use() {\n+fn fu_move_after_fu_copy() {\n     let x = A { a: 1, b: box 2 };\n     let _y = A { b: box 3, .. x };\n-    let z = A { a: 4, .. x };\n-    drop(z.b);\n+    let _z = A { a: 4, .. x };\n }\n \n-fn use_after_move() {\n+fn copy_after_move() {\n     let x = A { a: 1, b: box 2 };\n     drop(x.b);\n     drop(x.a);\n }\n \n-fn use_after_fu_move() {\n+fn copy_after_fu_move() {\n     let x = A { a: 1, b: box 2 };\n     let y = A { a: 3, .. x };\n     drop(x.a);\n-    drop(y.b);\n }\n \n-fn fu_use_after_move() {\n+fn fu_copy_after_move() {\n     let x = A { a: 1, b: box 2 };\n     drop(x.b);\n     let _y = A { b: box 3, .. x };\n }\n \n-fn fu_use_after_fu_move() {\n+fn fu_copy_after_fu_move() {\n     let x = A { a: 1, b: box 2 };\n-    let y = A { a: 3, .. x };\n+    let _y = A { a: 3, .. x };\n     let _z = A { b: box 3, .. x };\n-    drop(y.b);\n }\n \n fn borrow_after_move() {\n     let x = A { a: 1, b: box 2 };\n     drop(x.b);\n-    borrow(&x.a);\n+    let p = &x.a;\n+    drop(*p);\n }\n \n fn borrow_after_fu_move() {\n     let x = A { a: 1, b: box 2 };\n-    let y = A { a: 3, .. x };\n-    borrow(&x.a);\n-    drop(y.b);\n-}\n-\n-fn move_after_borrow() {\n-    let x = A { a: 1, b: box 2 };\n-    borrow(&x.a);\n-    drop(x.b);\n-}\n-\n-fn fu_move_after_borrow() {\n-    let x = A { a: 1, b: box 2 };\n-    borrow(&x.a);\n-    let y = A { a: 3, .. x };\n-    drop(y.b);\n+    let _y = A { a: 3, .. x };\n+    let p = &x.a;\n+    drop(*p);\n }\n \n fn mut_borrow_after_mut_borrow() {\n     let mut x = A { a: 1, b: box 2 };\n-    let y = &mut x.a;\n-    let z = &mut x.b;\n-    drop(*y);\n-    drop(**z);\n+    let p = &mut x.a;\n+    let q = &mut x.b;\n+    drop(*p);\n+    drop(**q);\n }\n \n fn move_after_move() {\n@@ -109,7 +91,6 @@ fn move_after_fu_move() {\n     let x = B { a: box 1, b: box 2 };\n     let y = B { a: box 3, .. x };\n     drop(x.a);\n-    drop(y.b);\n }\n \n fn fu_move_after_move() {\n@@ -121,46 +102,82 @@ fn fu_move_after_move() {\n \n fn fu_move_after_fu_move() {\n     let x = B { a: box 1, b: box 2 };\n-    let y = B { b: box 3, .. x };\n-    let z = B { a: box 4, .. x };\n-    drop(y.a);\n-    drop(z.b);\n+    let _y = B { b: box 3, .. x };\n+    let _z = B { a: box 4, .. x };\n }\n \n-fn use_after_assign_after_move() {\n+fn copy_after_assign_after_move() {\n     let mut x = A { a: 1, b: box 2 };\n     drop(x.b);\n     x = A { a: 3, b: box 4 };\n     drop(*x.b);\n }\n \n-fn use_after_field_assign_after_move() {\n+fn copy_after_assign_after_fu_move() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let _y = A { a: 3, .. x };\n+    x = A { a: 3, b: box 4 };\n+    drop(*x.b);\n+}\n+\n+fn copy_after_field_assign_after_move() {\n     let mut x = A { a: 1, b: box 2 };\n     drop(x.b);\n     x.b = box 3;\n     drop(*x.b);\n }\n \n+fn copy_after_field_assign_after_fu_move() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let _y = A { a: 3, .. x };\n+    x.b = box 3;\n+    drop(*x.b);\n+}\n+\n fn borrow_after_assign_after_move() {\n     let mut x = A { a: 1, b: box 2 };\n     drop(x.b);\n     x = A { a: 3, b: box 4 };\n-    borrow(&x.b);\n+    let p = &x.b;\n+    drop(**p);\n+}\n+\n+fn borrow_after_assign_after_fu_move() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let _y = A { a: 3, .. x };\n+    x = A { a: 3, b: box 4 };\n+    let p = &x.b;\n+    drop(**p);\n }\n \n fn borrow_after_field_assign_after_move() {\n     let mut x = A { a: 1, b: box 2 };\n     drop(x.b);\n     x.b = box 3;\n-    borrow(&x.b);\n+    let p = &x.b;\n+    drop(**p);\n+}\n+\n+fn borrow_after_field_assign_after_fu_move() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let _y = A { a: 3, .. x };\n+    x.b = box 3;\n+    let p = &x.b;\n+    drop(**p);\n }\n \n fn move_after_assign_after_move() {\n     let mut x = A { a: 1, b: box 2 };\n-    let y = x.b;\n+    let _y = x.b;\n+    x = A { a: 3, b: box 4 };\n+    drop(x.b);\n+}\n+\n+fn move_after_assign_after_fu_move() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let _y = A { a: 3, .. x };\n     x = A { a: 3, b: box 4 };\n     drop(x.b);\n-    drop(y);\n }\n \n fn move_after_field_assign_after_move() {\n@@ -170,7 +187,14 @@ fn move_after_field_assign_after_move() {\n     drop(x.b);\n }\n \n-fn use_after_assign_after_uninit() {\n+fn move_after_field_assign_after_fu_move() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let _y = A { a: 3, .. x };\n+    x.b = box 3;\n+    drop(x.b);\n+}\n+\n+fn copy_after_assign_after_uninit() {\n     let mut x: A;\n     x = A { a: 1, b: box 2 };\n     drop(x.a);\n@@ -179,7 +203,8 @@ fn use_after_assign_after_uninit() {\n fn borrow_after_assign_after_uninit() {\n     let mut x: A;\n     x = A { a: 1, b: box 2 };\n-    borrow(&x.a);\n+    let p = &x.a;\n+    drop(*p);\n }\n \n fn move_after_assign_after_uninit() {\n@@ -189,34 +214,40 @@ fn move_after_assign_after_uninit() {\n }\n \n fn main() {\n-    move_after_use();\n-    move_after_fu_use();\n-    fu_move_after_use();\n-    fu_move_after_fu_use();\n-    use_after_move();\n-    use_after_fu_move();\n-    fu_use_after_move();\n-    fu_use_after_fu_move();\n+    move_after_copy();\n+    move_after_fu_copy();\n+    fu_move_after_copy();\n+    fu_move_after_fu_copy();\n+    copy_after_move();\n+    copy_after_fu_move();\n+    fu_copy_after_move();\n+    fu_copy_after_fu_move();\n \n     borrow_after_move();\n     borrow_after_fu_move();\n-    move_after_borrow();\n-    fu_move_after_borrow();\n     mut_borrow_after_mut_borrow();\n \n     move_after_move();\n     move_after_fu_move();\n     fu_move_after_move();\n     fu_move_after_fu_move();\n \n-    use_after_assign_after_move();\n-    use_after_field_assign_after_move();\n+    copy_after_assign_after_move();\n+    copy_after_assign_after_fu_move();\n+    copy_after_field_assign_after_move();\n+    copy_after_field_assign_after_fu_move();\n+\n     borrow_after_assign_after_move();\n+    borrow_after_assign_after_fu_move();\n     borrow_after_field_assign_after_move();\n+    borrow_after_field_assign_after_fu_move();\n+\n     move_after_assign_after_move();\n+    move_after_assign_after_fu_move();\n     move_after_field_assign_after_move();\n+    move_after_field_assign_after_fu_move();\n \n-    use_after_assign_after_uninit();\n+    copy_after_assign_after_uninit();\n     borrow_after_assign_after_uninit();\n     move_after_assign_after_uninit();\n }"}]}