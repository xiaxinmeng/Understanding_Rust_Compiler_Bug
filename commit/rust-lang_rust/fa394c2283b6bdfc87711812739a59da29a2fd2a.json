{"sha": "fa394c2283b6bdfc87711812739a59da29a2fd2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMzk0YzIyODNiNmJkZmM4NzcxMTgxMjczOWE1OWRhMjlhMmZkMmE=", "commit": {"author": {"name": "Gabriel Smith", "email": "ga29smith@gmail.com", "date": "2019-03-01T06:16:04Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-01T22:10:57Z"}, "message": "impl fold_const for Shifter\n\nSigned-off-by: Gabriel Smith <ga29smith@gmail.com>", "tree": {"sha": "05274dc32f1ba3fa3497624705f4c3ec8212ef38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05274dc32f1ba3fa3497624705f4c3ec8212ef38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa394c2283b6bdfc87711812739a59da29a2fd2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa394c2283b6bdfc87711812739a59da29a2fd2a", "html_url": "https://github.com/rust-lang/rust/commit/fa394c2283b6bdfc87711812739a59da29a2fd2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa394c2283b6bdfc87711812739a59da29a2fd2a/comments", "author": {"login": "yodaldevoid", "id": 1204409, "node_id": "MDQ6VXNlcjEyMDQ0MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1204409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yodaldevoid", "html_url": "https://github.com/yodaldevoid", "followers_url": "https://api.github.com/users/yodaldevoid/followers", "following_url": "https://api.github.com/users/yodaldevoid/following{/other_user}", "gists_url": "https://api.github.com/users/yodaldevoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/yodaldevoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yodaldevoid/subscriptions", "organizations_url": "https://api.github.com/users/yodaldevoid/orgs", "repos_url": "https://api.github.com/users/yodaldevoid/repos", "events_url": "https://api.github.com/users/yodaldevoid/events{/privacy}", "received_events_url": "https://api.github.com/users/yodaldevoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57d3a5a32de7a10ed7af886dc6ddd3754c9a394c", "url": "https://api.github.com/repos/rust-lang/rust/commits/57d3a5a32de7a10ed7af886dc6ddd3754c9a394c", "html_url": "https://github.com/rust-lang/rust/commit/57d3a5a32de7a10ed7af886dc6ddd3754c9a394c"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "462bba94dd3f48be7be5221699ea57bbcce09324", "filename": "src/librustc/ty/fold.rs", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fa394c2283b6bdfc87711812739a59da29a2fd2a/src%2Flibrustc%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa394c2283b6bdfc87711812739a59da29a2fd2a/src%2Flibrustc%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ffold.rs?ref=fa394c2283b6bdfc87711812739a59da29a2fd2a", "patch": "@@ -222,9 +222,9 @@ impl<'a, 'gcx, 'tcx, F, G, H> TypeFolder<'gcx, 'tcx> for BottomUpFolder<'a, 'gcx\n         (self.lt_op)(r)\n     }\n \n-    fn fold_const(&mut self, c: &'tcx ty::LazyConst<'tcx>) -> &'tcx ty::LazyConst<'tcx> {\n-        let c = c.super_fold_with(self);\n-        (self.ct_op)(c)\n+    fn fold_const(&mut self, ct: &'tcx ty::LazyConst<'tcx>) -> &'tcx ty::LazyConst<'tcx> {\n+        let ct = ct.super_fold_with(self);\n+        (self.ct_op)(ct)\n     }\n }\n \n@@ -747,7 +747,25 @@ impl TypeFolder<'gcx, 'tcx> for Shifter<'a, 'gcx, 'tcx> {\n     }\n \n     fn fold_const(&mut self, ct: &'tcx ty::LazyConst<'tcx>) -> &'tcx ty::LazyConst<'tcx> {\n-        ct // FIXME(const_generics)\n+        if let ty::LazyConst::Evaluated(ty::Const {\n+            val: ConstValue::Infer(ty::InferConst::Canonical(debruijn, bound_const)),\n+            ty,\n+        }) = *ct {\n+            if self.amount == 0 || debruijn < self.current_index {\n+                ct\n+            } else {\n+                let debruijn = match self.direction {\n+                    Direction::In => debruijn.shifted_in(self.amount),\n+                    Direction::Out => {\n+                        assert!(debruijn.as_u32() >= self.amount);\n+                        debruijn.shifted_out(self.amount)\n+                    }\n+                };\n+                self.tcx.mk_const_infer(ty::InferConst::Canonical(debruijn, bound_const), ty)\n+            }\n+        } else {\n+            ct.super_fold_with(self)\n+        }\n     }\n }\n \n@@ -842,11 +860,11 @@ impl<'tcx> TypeVisitor<'tcx> for HasEscapingVarsVisitor {\n         r.bound_at_or_above_binder(self.outer_index)\n     }\n \n-    fn visit_const(&mut self, c: &'tcx ty::LazyConst<'tcx>) -> bool {\n+    fn visit_const(&mut self, ct: &'tcx ty::LazyConst<'tcx>) -> bool {\n         if let ty::LazyConst::Evaluated(ty::Const {\n             val: ConstValue::Infer(ty::InferConst::Canonical(debruijn, _)),\n             ..\n-        }) = *c {\n+        }) = *ct {\n             debruijn >= self.outer_index\n         } else {\n             false"}]}