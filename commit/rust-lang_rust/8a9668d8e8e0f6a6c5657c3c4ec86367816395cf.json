{"sha": "8a9668d8e8e0f6a6c5657c3c4ec86367816395cf", "node_id": "C_kwDOAAsO6NoAKDhhOTY2OGQ4ZThlMGY2YTZjNTY1N2MzYzRlYzg2MzY3ODE2Mzk1Y2Y", "commit": {"author": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-04-19T13:56:45Z"}, "committer": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-04-19T14:50:21Z"}, "message": "Update readme to suggest `./configure` instead of printf\n\nThis also makes some other minor cleanups:\n- Suggest `python x.py` on windows instead of `./x.py`, which usually\n  doesn't work\n- Move the \"Configure and Make\" section to a subsection of \"Building on\n  Unix\"\n- Mention `config.toml` earlier\n- Suggest `x.py setup user` on Windows, since `configure` won't work", "tree": {"sha": "a5d3dbcded4e552e3e7299171881ce2bfd6055da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5d3dbcded4e552e3e7299171881ce2bfd6055da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a9668d8e8e0f6a6c5657c3c4ec86367816395cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a9668d8e8e0f6a6c5657c3c4ec86367816395cf", "html_url": "https://github.com/rust-lang/rust/commit/8a9668d8e8e0f6a6c5657c3c4ec86367816395cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a9668d8e8e0f6a6c5657c3c4ec86367816395cf/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7607a9113760ee28680d94efca4b8f45e0a1988", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7607a9113760ee28680d94efca4b8f45e0a1988", "html_url": "https://github.com/rust-lang/rust/commit/b7607a9113760ee28680d94efca4b8f45e0a1988"}], "stats": {"total": 51, "additions": 25, "deletions": 26}, "files": [{"sha": "41b135972af11458ebc394377610af743f8731ae", "filename": "README.md", "status": "modified", "additions": 25, "deletions": 26, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/8a9668d8e8e0f6a6c5657c3c4ec86367816395cf/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/8a9668d8e8e0f6a6c5657c3c4ec86367816395cf/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=8a9668d8e8e0f6a6c5657c3c4ec86367816395cf", "patch": "@@ -22,6 +22,8 @@ Read [\"Installation\"] from [The Book].\n \n The Rust build system uses a Python script called `x.py` to build the compiler,\n which manages the bootstrapping process. It lives at the root of the project.\n+It also uses a file named `config.toml` to determine various configuration settings for the build.\n+You can see a full list of options in `config.example.toml`.\n \n The `x.py` command can be run directly on most Unix systems in the following\n format:\n@@ -85,6 +87,8 @@ See [the rustc-dev-guide for more info][sysllvm].\n \n ### Building on a Unix-like system\n \n+#### Build steps\n+\n 1. Clone the [source] with `git`:\n \n    ```sh\n@@ -96,18 +100,13 @@ See [the rustc-dev-guide for more info][sysllvm].\n \n 2. Configure the build settings:\n \n-   The Rust build system uses a file named `config.toml` in the root of the\n-   source tree to determine various configuration settings for the build.\n-   Set up the defaults intended for distros to get started. You can see a full\n-   list of options in `config.example.toml`.\n-\n    ```sh\n-   printf 'profile = \"user\" \\nchangelog-seen = 2 \\n' > config.toml\n+   ./configure\n    ```\n \n    If you plan to use `x.py install` to create an installation, it is\n    recommended that you set the `prefix` value in the `[install]` section to a\n-   directory.\n+   directory: `./configure --set install.prefix=<path>`\n \n 3. Build and install:\n \n@@ -117,12 +116,25 @@ See [the rustc-dev-guide for more info][sysllvm].\n \n    When complete, `./x.py install` will place several programs into\n    `$PREFIX/bin`: `rustc`, the Rust compiler, and `rustdoc`, the\n-   API-documentation tool. If you've set `profile = \"user\"` or\n-   `build.extended = true`, it will also include [Cargo], Rust's package\n-   manager.\n+   API-documentation tool. By default, it will also include [Cargo], Rust's package manager.\n+   You can disable this behavior by passing `--set build.extended=false` to `./configure`.\n \n [Cargo]: https://github.com/rust-lang/cargo\n \n+#### Configure and Make\n+\n+This project provides a configure script and makefile (the latter of which just invokes `x.py`).\n+`./configure` is the recommended way to programatically generate a `config.toml`. `make` is not\n+recommended (we suggest using `x.py` directly), but it is supported and we try not to break it\n+unnecessarily.\n+\n+```sh\n+./configure\n+make && sudo make install\n+```\n+\n+`configure` generates a `config.toml` which can also be used with normal `x.py` invocations.\n+\n ### Building on Windows\n \n On Windows, we suggest using [winget] to install dependencies by running the\n@@ -186,7 +198,7 @@ toolchain.\n 4. Navigate to Rust's source code (or clone it), then build it:\n \n    ```sh\n-   ./x.py build && ./x.py install\n+   python x.py setup user && python x.py build && python x.py install\n    ```\n \n #### MSVC\n@@ -204,6 +216,7 @@ With these dependencies installed, you can build the compiler in a `cmd.exe`\n shell with:\n \n ```sh\n+python x.py setup user\n python x.py build\n ```\n \n@@ -232,21 +245,7 @@ Windows build triples are:\n \n The build triple can be specified by either specifying `--build=<triple>` when\n invoking `x.py` commands, or by creating a `config.toml` file (as described in\n-[Installing from Source](#installing-from-source)), and modifying the `build`\n-option under the `[build]` section.\n-\n-### Configure and Make\n-\n-While it's not the recommended build system, this project also provides a\n-configure script and makefile (the latter of which just invokes `x.py`).\n-\n-```sh\n-./configure\n-make && sudo make install\n-```\n-\n-`configure` generates a `config.toml` which can also be used with normal `x.py`\n-invocations.\n+[Building on a Unix-like system](#building-on-a-unix-like-system)), and passing `--set build.build=<triple>` to `./configure`.\n \n ## Building Documentation\n "}]}