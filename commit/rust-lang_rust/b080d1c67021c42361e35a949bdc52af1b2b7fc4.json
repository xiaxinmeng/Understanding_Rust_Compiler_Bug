{"sha": "b080d1c67021c42361e35a949bdc52af1b2b7fc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwODBkMWM2NzAyMWM0MjM2MWUzNWE5NDliZGM1MmFmMWIyYjdmYzQ=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-02-04T21:19:01Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-02-04T21:51:11Z"}, "message": "Cleanup rustdoc pass descriptions a bit\n\nAlso changed a couple of comments from \"intra-doc-links\" to\n\"intra-doc links\" (my understanding is that \"intra-doc links\" is the\nstandard way to refer to them).", "tree": {"sha": "46153c85f89097a50e2c25d283370ec0edb209bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46153c85f89097a50e2c25d283370ec0edb209bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b080d1c67021c42361e35a949bdc52af1b2b7fc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b080d1c67021c42361e35a949bdc52af1b2b7fc4", "html_url": "https://github.com/rust-lang/rust/commit/b080d1c67021c42361e35a949bdc52af1b2b7fc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b080d1c67021c42361e35a949bdc52af1b2b7fc4/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e708cbd91c9cae4426d69270248362b423324556", "url": "https://api.github.com/repos/rust-lang/rust/commits/e708cbd91c9cae4426d69270248362b423324556", "html_url": "https://github.com/rust-lang/rust/commit/e708cbd91c9cae4426d69270248362b423324556"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "a20e9dec33b36f188fb0c83dec69bc11595468c8", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b080d1c67021c42361e35a949bdc52af1b2b7fc4/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b080d1c67021c42361e35a949bdc52af1b2b7fc4/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=b080d1c67021c42361e35a949bdc52af1b2b7fc4", "patch": "@@ -435,7 +435,7 @@ crate fn create_resolver<'a>(\n \n     // Before we actually clone it, let's force all the extern'd crates to\n     // actually be loaded, just in case they're only referred to inside\n-    // intra-doc-links\n+    // intra-doc links\n     resolver.borrow_mut().access(|resolver| {\n         sess.time(\"load_extern_crates\", || {\n             for extern_name in &extern_names {"}, {"sha": "532a0cf932904d6d7bfde67ba860fd166ba205da", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b080d1c67021c42361e35a949bdc52af1b2b7fc4/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b080d1c67021c42361e35a949bdc52af1b2b7fc4/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=b080d1c67021c42361e35a949bdc52af1b2b7fc4", "patch": "@@ -44,7 +44,7 @@ use super::span_of_attrs;\n crate const COLLECT_INTRA_DOC_LINKS: Pass = Pass {\n     name: \"collect-intra-doc-links\",\n     run: collect_intra_doc_links,\n-    description: \"reads a crate's documentation to resolve intra-doc-links\",\n+    description: \"resolves intra-doc links\",\n };\n \n crate fn collect_intra_doc_links(krate: Crate, cx: &DocContext<'_>) -> Crate {\n@@ -981,7 +981,7 @@ impl LinkCollector<'_, '_> {\n         let link_text =\n             disambiguator.map(|d| d.display_for(path_str)).unwrap_or_else(|| path_str.to_owned());\n \n-        // In order to correctly resolve intra-doc-links we need to\n+        // In order to correctly resolve intra-doc links we need to\n         // pick a base AST node to work from.  If the documentation for\n         // this module came from an inner comment (//!) then we anchor\n         // our name resolution *inside* the module.  If, on the other"}, {"sha": "11f572560d60695d45bfab700256019fafe7d81f", "filename": "src/librustdoc/passes/doc_test_lints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b080d1c67021c42361e35a949bdc52af1b2b7fc4/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b080d1c67021c42361e35a949bdc52af1b2b7fc4/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs?ref=b080d1c67021c42361e35a949bdc52af1b2b7fc4", "patch": "@@ -1,7 +1,7 @@\n //! This pass is overloaded and runs two different lints.\n //!\n-//! - MISSING_DOC_CODE_EXAMPLES: this lint is **UNSTABLE** and looks for public items missing doc-tests\n-//! - PRIVATE_DOC_TESTS: this lint is **STABLE** and looks for private items with doc-tests.\n+//! - MISSING_DOC_CODE_EXAMPLES: this lint is **UNSTABLE** and looks for public items missing doctests\n+//! - PRIVATE_DOC_TESTS: this lint is **STABLE** and looks for private items with doctests.\n \n use super::{span_of_attrs, Pass};\n use crate::clean;"}, {"sha": "efb5df08cafdb33a8d14a3cd1d8c32506ad5af0c", "filename": "src/librustdoc/passes/non_autolinks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b080d1c67021c42361e35a949bdc52af1b2b7fc4/src%2Flibrustdoc%2Fpasses%2Fnon_autolinks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b080d1c67021c42361e35a949bdc52af1b2b7fc4/src%2Flibrustdoc%2Fpasses%2Fnon_autolinks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fnon_autolinks.rs?ref=b080d1c67021c42361e35a949bdc52af1b2b7fc4", "patch": "@@ -12,7 +12,7 @@ use rustc_session::lint;\n crate const CHECK_NON_AUTOLINKS: Pass = Pass {\n     name: \"check-non-autolinks\",\n     run: check_non_autolinks,\n-    description: \"detects URLS that could be written using angle brackets\",\n+    description: \"detects URLs that could be linkified\",\n };\n \n const URL_REGEX: &str = concat!("}, {"sha": "79f8562c4726df74769fb6bdf6bf63863512f2b0", "filename": "src/librustdoc/passes/strip_hidden.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b080d1c67021c42361e35a949bdc52af1b2b7fc4/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b080d1c67021c42361e35a949bdc52af1b2b7fc4/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs?ref=b080d1c67021c42361e35a949bdc52af1b2b7fc4", "patch": "@@ -11,7 +11,7 @@ use crate::passes::{ImplStripper, Pass};\n crate const STRIP_HIDDEN: Pass = Pass {\n     name: \"strip-hidden\",\n     run: strip_hidden,\n-    description: \"strips all doc(hidden) items from the output\",\n+    description: \"strips all `#[doc(hidden)]` items from the output\",\n };\n \n /// Strip items marked `#[doc(hidden)]`"}]}