{"sha": "0e2e61782590822638835a9fee3499493503bbe2", "node_id": "C_kwDOAAsO6NoAKDBlMmU2MTc4MjU5MDgyMjYzODgzNWE5ZmVlMzQ5OTQ5MzUwM2JiZTI", "commit": {"author": {"name": "DebugSteven", "email": "debugsteven@gmail.com", "date": "2023-02-01T05:00:40Z"}, "committer": {"name": "DebugSteven", "email": "debugsteven@gmail.com", "date": "2023-03-20T16:16:44Z"}, "message": "move reject with isolation for fcntl under F_FULLFSYNC", "tree": {"sha": "d4671e2bd7478fe39eb20a0c0f783ce19485f4f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4671e2bd7478fe39eb20a0c0f783ce19485f4f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e2e61782590822638835a9fee3499493503bbe2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e2e61782590822638835a9fee3499493503bbe2", "html_url": "https://github.com/rust-lang/rust/commit/0e2e61782590822638835a9fee3499493503bbe2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e2e61782590822638835a9fee3499493503bbe2/comments", "author": {"login": "DebugSteven", "id": 10746702, "node_id": "MDQ6VXNlcjEwNzQ2NzAy", "avatar_url": "https://avatars.githubusercontent.com/u/10746702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DebugSteven", "html_url": "https://github.com/DebugSteven", "followers_url": "https://api.github.com/users/DebugSteven/followers", "following_url": "https://api.github.com/users/DebugSteven/following{/other_user}", "gists_url": "https://api.github.com/users/DebugSteven/gists{/gist_id}", "starred_url": "https://api.github.com/users/DebugSteven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DebugSteven/subscriptions", "organizations_url": "https://api.github.com/users/DebugSteven/orgs", "repos_url": "https://api.github.com/users/DebugSteven/repos", "events_url": "https://api.github.com/users/DebugSteven/events{/privacy}", "received_events_url": "https://api.github.com/users/DebugSteven/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DebugSteven", "id": 10746702, "node_id": "MDQ6VXNlcjEwNzQ2NzAy", "avatar_url": "https://avatars.githubusercontent.com/u/10746702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DebugSteven", "html_url": "https://github.com/DebugSteven", "followers_url": "https://api.github.com/users/DebugSteven/followers", "following_url": "https://api.github.com/users/DebugSteven/following{/other_user}", "gists_url": "https://api.github.com/users/DebugSteven/gists{/gist_id}", "starred_url": "https://api.github.com/users/DebugSteven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DebugSteven/subscriptions", "organizations_url": "https://api.github.com/users/DebugSteven/orgs", "repos_url": "https://api.github.com/users/DebugSteven/repos", "events_url": "https://api.github.com/users/DebugSteven/events{/privacy}", "received_events_url": "https://api.github.com/users/DebugSteven/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a3688926c402e3d7201c9951793345ded10c4ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a3688926c402e3d7201c9951793345ded10c4ad", "html_url": "https://github.com/rust-lang/rust/commit/8a3688926c402e3d7201c9951793345ded10c4ad"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "de271548217afb2f3e03f760f04bc81bdb93e47e", "filename": "src/tools/miri/src/shims/unix/fs.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0e2e61782590822638835a9fee3499493503bbe2/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e2e61782590822638835a9fee3499493503bbe2/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Ffs.rs?ref=0e2e61782590822638835a9fee3499493503bbe2", "patch": "@@ -628,13 +628,6 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n         let fd = this.read_scalar(&args[0])?.to_i32()?;\n         let cmd = this.read_scalar(&args[1])?.to_i32()?;\n \n-        // Reject if isolation is enabled.\n-        if let IsolatedOp::Reject(reject_with) = this.machine.isolated_op {\n-            this.reject_in_isolation(\"`fcntl`\", reject_with)?;\n-            this.set_last_error_from_io_error(ErrorKind::PermissionDenied)?;\n-            return Ok(-1);\n-        }\n-\n         // We only support getting the flags for a descriptor.\n         if cmd == this.eval_libc_i32(\"F_GETFD\") {\n             // Currently this is the only flag that `F_GETFD` returns. It is OK to just return the\n@@ -677,6 +670,13 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n                 None => this.handle_not_found(),\n             }\n         } else if this.tcx.sess.target.os == \"macos\" && cmd == this.eval_libc_i32(\"F_FULLFSYNC\") {\n+            // Reject if isolation is enabled.\n+            if let IsolatedOp::Reject(reject_with) = this.machine.isolated_op {\n+                this.reject_in_isolation(\"`fcntl`\", reject_with)?;\n+                this.set_last_error_from_io_error(ErrorKind::PermissionDenied)?;\n+                return Ok(-1);\n+            }\n+\n             if let Some(file_descriptor) = this.machine.file_handler.handles.get(&fd) {\n                 // FIXME: Support fullfsync for all FDs\n                 let FileHandle { file, writable } ="}, {"sha": "307906f2583b21ff0da26ebb8852967bc47100b8", "filename": "src/tools/miri/tests/pass-dep/shims/fcntl_f-fullfsync_apple.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0e2e61782590822638835a9fee3499493503bbe2/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Ffcntl_f-fullfsync_apple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e2e61782590822638835a9fee3499493503bbe2/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Ffcntl_f-fullfsync_apple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Ffcntl_f-fullfsync_apple.rs?ref=0e2e61782590822638835a9fee3499493503bbe2", "patch": "@@ -0,0 +1,12 @@\n+//@only-target-apple: F_FULLFSYNC only on apple systems\n+//@compile-flags: -Zmiri-isolation-error=warn-nobacktrace\n+\n+use std::io::Error;\n+\n+fn main() {\n+    // test `fcntl(F_FULLFSYNC)`\n+    unsafe {\n+        assert_eq!(libc::fcntl(1, libc::F_FULLFSYNC, 0), -1);\n+        assert_eq!(Error::last_os_error().raw_os_error(), Some(libc::EPERM));\n+    }\n+}"}, {"sha": "09a24e1e5d74d293be0e515bdaaa93565ef9e8fc", "filename": "src/tools/miri/tests/pass-dep/shims/fcntl_f-fullfsync_apple.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e2e61782590822638835a9fee3499493503bbe2/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Ffcntl_f-fullfsync_apple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e2e61782590822638835a9fee3499493503bbe2/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Ffcntl_f-fullfsync_apple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Ffcntl_f-fullfsync_apple.stderr?ref=0e2e61782590822638835a9fee3499493503bbe2", "patch": "@@ -0,0 +1,2 @@\n+warning: `fcntl` was made to return an error due to isolation\n+"}, {"sha": "5185db0b0e29fce3c96cc8d95fbf826ecf718156", "filename": "src/tools/miri/tests/pass-dep/shims/libc-fs-with-isolation.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0e2e61782590822638835a9fee3499493503bbe2/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Flibc-fs-with-isolation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e2e61782590822638835a9fee3499493503bbe2/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Flibc-fs-with-isolation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Flibc-fs-with-isolation.rs?ref=0e2e61782590822638835a9fee3499493503bbe2", "patch": "@@ -7,10 +7,9 @@ use std::fs;\n use std::io::{Error, ErrorKind};\n \n fn main() {\n-    // test `fcntl`\n+    // test `fcntl(F_DUPFD): should work even with isolation.`\n     unsafe {\n-        assert_eq!(libc::fcntl(1, libc::F_DUPFD, 0), -1);\n-        assert_eq!(Error::last_os_error().raw_os_error(), Some(libc::EPERM));\n+        assert!(libc::fcntl(1, libc::F_DUPFD, 0) >= 0);\n     }\n \n     // test `readlink`"}, {"sha": "b0cadfb970bf3ef29c9143dff7e7dfaa8255c9b5", "filename": "src/tools/miri/tests/pass-dep/shims/libc-fs-with-isolation.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e2e61782590822638835a9fee3499493503bbe2/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Flibc-fs-with-isolation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e2e61782590822638835a9fee3499493503bbe2/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Flibc-fs-with-isolation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Flibc-fs-with-isolation.stderr?ref=0e2e61782590822638835a9fee3499493503bbe2", "patch": "@@ -1,5 +1,3 @@\n-warning: `fcntl` was made to return an error due to isolation\n-\n warning: `readlink` was made to return an error due to isolation\n \n warning: `$STAT` was made to return an error due to isolation"}, {"sha": "00cc68eba3eacfb5e73c2070531ab3ada2fc5ebb", "filename": "src/tools/miri/tests/pass-dep/tokio/sleep.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e2e61782590822638835a9fee3499493503bbe2/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Ftokio%2Fsleep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e2e61782590822638835a9fee3499493503bbe2/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Ftokio%2Fsleep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Ftokio%2Fsleep.rs?ref=0e2e61782590822638835a9fee3499493503bbe2", "patch": "@@ -1,4 +1,4 @@\n-//@compile-flags: -Zmiri-disable-isolation -Zmiri-permissive-provenance -Zmiri-backtrace=full\n+//@compile-flags: -Zmiri-permissive-provenance -Zmiri-backtrace=full\n //@only-target-x86_64-unknown-linux: support for tokio only on linux and x86\n \n use tokio::time::{sleep, Duration, Instant};\n@@ -7,8 +7,6 @@ use tokio::time::{sleep, Duration, Instant};\n async fn main() {\n     let start = Instant::now();\n     sleep(Duration::from_secs(1)).await;\n-    // It takes 96 millisecond to sleep for 1 millisecond\n-    // It takes 1025 millisecond to sleep for 1 second\n     let time_elapsed = &start.elapsed().as_millis();\n-    assert!(time_elapsed > &1000, \"{}\", time_elapsed);\n+    assert!((1000..1100).contains(time_elapsed), \"{}\", time_elapsed);\n }"}, {"sha": "0ed2a941bc493467455ad8ff849d71804f9d896f", "filename": "src/tools/miri/tests/pass-dep/tokio/tokio_mvp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e2e61782590822638835a9fee3499493503bbe2/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Ftokio%2Ftokio_mvp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e2e61782590822638835a9fee3499493503bbe2/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Ftokio%2Ftokio_mvp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Ftokio%2Ftokio_mvp.rs?ref=0e2e61782590822638835a9fee3499493503bbe2", "patch": "@@ -1,5 +1,5 @@\n // Need to disable preemption to stay on the supported MVP codepath in mio.\n-//@compile-flags: -Zmiri-disable-isolation -Zmiri-permissive-provenance\n+//@compile-flags: -Zmiri-permissive-provenance\n //@only-target-x86_64-unknown-linux: support for tokio exists only on linux and x86\n \n #[tokio::main]"}]}