{"sha": "aee054d05d8b795d35c0b448a4b731b6507aa459", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZTA1NGQwNWQ4Yjc5NWQzNWMwYjQ0OGE0YjczMWI2NTA3YWE0NTk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-21T13:50:55Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-21T13:57:12Z"}, "message": "Remove dead toggle JS code", "tree": {"sha": "e810e649128e4c97bb8a75f320207bb72f9bf712", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e810e649128e4c97bb8a75f320207bb72f9bf712"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aee054d05d8b795d35c0b448a4b731b6507aa459", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aee054d05d8b795d35c0b448a4b731b6507aa459", "html_url": "https://github.com/rust-lang/rust/commit/aee054d05d8b795d35c0b448a4b731b6507aa459", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aee054d05d8b795d35c0b448a4b731b6507aa459/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc81ad22c453776de16acf9938976930cf8c9401", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc81ad22c453776de16acf9938976930cf8c9401", "html_url": "https://github.com/rust-lang/rust/commit/fc81ad22c453776de16acf9938976930cf8c9401"}], "stats": {"total": 158, "additions": 0, "deletions": 158}, "files": [{"sha": "1e28056bb6882b677cb8282063c4e7e670bd0bbb", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 0, "deletions": 158, "changes": 158, "blob_url": "https://github.com/rust-lang/rust/blob/aee054d05d8b795d35c0b448a4b731b6507aa459/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/aee054d05d8b795d35c0b448a4b731b6507aa459/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=aee054d05d8b795d35c0b448a4b731b6507aa459", "patch": "@@ -764,138 +764,6 @@ function hideThemeButtonState() {\n         innerToggle.children[0].innerText = labelForToggleButton(sectionIsCollapsed);\n     }\n \n-    function collapseDocs(toggle, mode) {\n-        if (!toggle || !toggle.parentNode) {\n-            return;\n-        }\n-\n-        function adjustToggle(arg) {\n-            return function(e) {\n-                if (hasClass(e, \"toggle-label\")) {\n-                    if (arg) {\n-                        e.style.display = \"inline-block\";\n-                    } else {\n-                        e.style.display = \"none\";\n-                    }\n-                }\n-                if (hasClass(e, \"inner\")) {\n-                    e.innerHTML = labelForToggleButton(arg);\n-                }\n-            };\n-        }\n-\n-        function implHider(addOrRemove, fullHide) {\n-            return function(n) {\n-                var shouldHide =\n-                    fullHide ||\n-                    hasClass(n, \"method\") ||\n-                    hasClass(n, \"associatedconstant\");\n-                if (shouldHide || hasClass(n, \"type\")) {\n-                    if (shouldHide) {\n-                        if (addOrRemove) {\n-                            addClass(n, \"hidden-by-impl-hider\");\n-                        } else {\n-                            removeClass(n, \"hidden-by-impl-hider\");\n-                        }\n-                    }\n-                    var ns = n.nextElementSibling;\n-                    while (ns && (hasClass(ns, \"docblock\") || hasClass(ns, \"item-info\"))) {\n-                        if (addOrRemove) {\n-                            addClass(ns, \"hidden-by-impl-hider\");\n-                        } else {\n-                            removeClass(ns, \"hidden-by-impl-hider\");\n-                        }\n-                        ns = ns.nextElementSibling;\n-                    }\n-                }\n-            };\n-        }\n-\n-        var relatedDoc;\n-        var action = mode;\n-        if (!hasClass(toggle.parentNode, \"impl\")) {\n-            relatedDoc = toggle.parentNode.nextElementSibling;\n-            if (hasClass(relatedDoc, \"item-info\")) {\n-                relatedDoc = relatedDoc.nextElementSibling;\n-            }\n-            if (hasClass(relatedDoc, \"docblock\")) {\n-                if (mode === \"toggle\") {\n-                    if (hasClass(relatedDoc, \"hidden-by-usual-hider\")) {\n-                        action = \"show\";\n-                    } else {\n-                        action = \"hide\";\n-                    }\n-                }\n-                if (action === \"hide\") {\n-                    addClass(relatedDoc, \"hidden-by-usual-hider\");\n-                    onEachLazy(toggle.childNodes, adjustToggle(true));\n-                    addClass(toggle.parentNode, \"collapsed\");\n-                } else if (action === \"show\") {\n-                    removeClass(relatedDoc, \"hidden-by-usual-hider\");\n-                    removeClass(toggle.parentNode, \"collapsed\");\n-                    onEachLazy(toggle.childNodes, adjustToggle(false));\n-                }\n-            }\n-        } else {\n-            // we are collapsing the impl block(s).\n-\n-            var parentElem = toggle.parentNode;\n-            relatedDoc = parentElem;\n-            var docblock = relatedDoc.nextElementSibling;\n-\n-            while (!hasClass(relatedDoc, \"impl-items\")) {\n-                relatedDoc = relatedDoc.nextElementSibling;\n-            }\n-\n-            if (!relatedDoc && !hasClass(docblock, \"docblock\")) {\n-                return;\n-            }\n-\n-            // Hide all functions, but not associated types/consts.\n-\n-            if (mode === \"toggle\") {\n-                if (hasClass(relatedDoc, \"fns-now-collapsed\") ||\n-                    hasClass(docblock, \"hidden-by-impl-hider\")) {\n-                    action = \"show\";\n-                } else {\n-                    action = \"hide\";\n-                }\n-            }\n-\n-            var dontApplyBlockRule = toggle.parentNode.parentNode.id !== \"main\";\n-            if (action === \"show\") {\n-                removeClass(relatedDoc, \"fns-now-collapsed\");\n-                // Stability/deprecation/portability information is never hidden.\n-                if (!hasClass(docblock, \"item-info\")) {\n-                    removeClass(docblock, \"hidden-by-usual-hider\");\n-                }\n-                onEachLazy(toggle.childNodes, adjustToggle(false, dontApplyBlockRule));\n-                onEachLazy(relatedDoc.childNodes, implHider(false, dontApplyBlockRule));\n-            } else if (action === \"hide\") {\n-                addClass(relatedDoc, \"fns-now-collapsed\");\n-                // Stability/deprecation/portability information should be shown even when detailed\n-                // info is hidden.\n-                if (!hasClass(docblock, \"item-info\")) {\n-                    addClass(docblock, \"hidden-by-usual-hider\");\n-                }\n-                onEachLazy(toggle.childNodes, adjustToggle(true, dontApplyBlockRule));\n-                onEachLazy(relatedDoc.childNodes, implHider(true, dontApplyBlockRule));\n-            }\n-        }\n-    }\n-\n-    function collapseNonInherent(e) {\n-        // inherent impl ids are like \"impl\" or impl-<number>'.\n-        // they will never be hidden by default.\n-        var n = e.parentElement;\n-        if (n.id.match(/^impl(?:-\\d+)?$/) === null) {\n-            // Automatically minimize all non-inherent impls\n-            if (hasClass(n, \"impl\")) {\n-                collapseDocs(e, \"hide\");\n-            }\n-        }\n-    }\n-\n     function insertAfter(newNode, referenceNode) {\n         referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n     }\n@@ -910,20 +778,6 @@ function hideThemeButtonState() {\n         var hideImplementors = getSettingValue(\"auto-collapse-implementors\") !== \"false\";\n         var hideLargeItemContents = getSettingValue(\"auto-hide-large-items\") !== \"false\";\n \n-        var impl_list = document.getElementById(\"trait-implementations-list\");\n-        if (impl_list !== null) {\n-            onEachLazy(impl_list.getElementsByClassName(\"rustdoc-toggle\"), function(e) {\n-                collapseNonInherent(e);\n-            });\n-        }\n-\n-        var blanket_list = document.getElementById(\"blanket-implementations-list\");\n-        if (blanket_list !== null) {\n-            onEachLazy(blanket_list.getElementsByClassName(\"rustdoc-toggle\"), function(e) {\n-                collapseNonInherent(e);\n-            });\n-        }\n-\n         onEachLazy(document.getElementsByTagName(\"details\"), function (e) {\n             var showLargeItem = !hideLargeItemContents && hasClass(e, \"type-contents-toggle\");\n             var showImplementor = !hideImplementors && hasClass(e, \"implementors-toggle\");\n@@ -936,18 +790,6 @@ function hideThemeButtonState() {\n \n         });\n \n-        var currentType = document.getElementsByClassName(\"type-decl\")[0];\n-        if (currentType) {\n-            currentType = currentType.getElementsByClassName(\"rust\")[0];\n-            if (currentType) {\n-                onEachLazy(currentType.classList, function(item) {\n-                    if (item !== \"main\") {\n-                        return true;\n-                    }\n-                });\n-            }\n-        }\n-\n         var pageId = getPageId();\n         if (pageId !== null) {\n             expandSection(pageId);"}]}