{"sha": "b1d0c118ff726fc8c5ff2a5a19840a9e36e8940e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZDBjMTE4ZmY3MjZmYzhjNWZmMmE1YTE5ODQwYTllMzZlODk0MGU=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-01-16T13:24:34Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-01-17T11:25:22Z"}, "message": "[self-profiler] Add example to `-Z help` to turn on query key recording\n\nAlso add the `default` option so that it's easy to add query key\nrecording to the default.", "tree": {"sha": "1d996d34a136efa2be46e49a43909c5b646b94a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d996d34a136efa2be46e49a43909c5b646b94a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1d0c118ff726fc8c5ff2a5a19840a9e36e8940e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1d0c118ff726fc8c5ff2a5a19840a9e36e8940e", "html_url": "https://github.com/rust-lang/rust/commit/b1d0c118ff726fc8c5ff2a5a19840a9e36e8940e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1d0c118ff726fc8c5ff2a5a19840a9e36e8940e/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fe05e9456b84996637c2f29b35c37960e537540", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fe05e9456b84996637c2f29b35c37960e537540", "html_url": "https://github.com/rust-lang/rust/commit/9fe05e9456b84996637c2f29b35c37960e537540"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "44cef727f034be23d7884972cbda659bd5a8bcec", "filename": "src/librustc_data_structures/profiling.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1d0c118ff726fc8c5ff2a5a19840a9e36e8940e/src%2Flibrustc_data_structures%2Fprofiling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1d0c118ff726fc8c5ff2a5a19840a9e36e8940e/src%2Flibrustc_data_structures%2Fprofiling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fprofiling.rs?ref=b1d0c118ff726fc8c5ff2a5a19840a9e36e8940e", "patch": "@@ -136,9 +136,11 @@ bitflags::bitflags! {\n     }\n }\n \n+// keep this in sync with the `-Z self-profile-events` help message in librustc_session/options.rs\n const EVENT_FILTERS_BY_NAME: &[(&str, EventFilter)] = &[\n     (\"none\", EventFilter::NONE),\n     (\"all\", EventFilter::ALL),\n+    (\"default\", EventFilter::DEFAULT),\n     (\"generic-activity\", EventFilter::GENERIC_ACTIVITIES),\n     (\"query-provider\", EventFilter::QUERY_PROVIDERS),\n     (\"query-cache-hit\", EventFilter::QUERY_CACHE_HITS),"}, {"sha": "2a0ed27b63b08f7c23f56ab2069a2265b0652fb7", "filename": "src/librustc_session/options.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b1d0c118ff726fc8c5ff2a5a19840a9e36e8940e/src%2Flibrustc_session%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1d0c118ff726fc8c5ff2a5a19840a9e36e8940e/src%2Flibrustc_session%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Foptions.rs?ref=b1d0c118ff726fc8c5ff2a5a19840a9e36e8940e", "patch": "@@ -923,8 +923,12 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     self_profile: SwitchWithOptPath = (SwitchWithOptPath::Disabled,\n         parse_switch_with_opt_path, [UNTRACKED],\n         \"run the self profiler and output the raw event data\"),\n+    // keep this in sync with the event filter names in librustc_data_structures/profiling.rs\n     self_profile_events: Option<Vec<String>> = (None, parse_opt_comma_list, [UNTRACKED],\n-        \"specifies which kinds of events get recorded by the self profiler\"),\n+        \"specifies which kinds of events get recorded by the self profiler;\n+        for example: `-Z self-profile-events=default,query-keys`\n+        all options: none, all, default, generic-activity, query-provider, query-cache-hit\n+                     query-blocked, incr-cache-load, query-keys\"),\n     emit_stack_sizes: bool = (false, parse_bool, [UNTRACKED],\n         \"emits a section containing stack size metadata\"),\n     plt: Option<bool> = (None, parse_opt_bool, [TRACKED],"}]}