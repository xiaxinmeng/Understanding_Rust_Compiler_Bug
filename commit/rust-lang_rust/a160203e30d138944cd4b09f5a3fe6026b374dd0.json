{"sha": "a160203e30d138944cd4b09f5a3fe6026b374dd0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNjAyMDNlMzBkMTM4OTQ0Y2Q0YjA5ZjVhM2ZlNjAyNmIzNzRkZDA=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-07-24T18:56:03Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-07-24T18:56:03Z"}, "message": "Rollup merge of #27229 - AlisdairO:diagnostics371, r=Manishearth\n\nAs title!\r\n\r\nPart of #24407.\r\nr? @Manishearth", "tree": {"sha": "91e407b20e991e5244727e8f6a95bd6fc659b83e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91e407b20e991e5244727e8f6a95bd6fc659b83e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a160203e30d138944cd4b09f5a3fe6026b374dd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a160203e30d138944cd4b09f5a3fe6026b374dd0", "html_url": "https://github.com/rust-lang/rust/commit/a160203e30d138944cd4b09f5a3fe6026b374dd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a160203e30d138944cd4b09f5a3fe6026b374dd0/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a75c21fc9cf970c0a4372c2e4c5f3b770050f26f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a75c21fc9cf970c0a4372c2e4c5f3b770050f26f", "html_url": "https://github.com/rust-lang/rust/commit/a75c21fc9cf970c0a4372c2e4c5f3b770050f26f"}, {"sha": "38c5af86a1412a29a367c856d83cd08dd7e92a33", "url": "https://api.github.com/repos/rust-lang/rust/commits/38c5af86a1412a29a367c856d83cd08dd7e92a33", "html_url": "https://github.com/rust-lang/rust/commit/38c5af86a1412a29a367c856d83cd08dd7e92a33"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "4f90a287cb999f43ac249b5cb14c0b92a212195a", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 50, "deletions": 1, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/a160203e30d138944cd4b09f5a3fe6026b374dd0/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a160203e30d138944cd4b09f5a3fe6026b374dd0/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=a160203e30d138944cd4b09f5a3fe6026b374dd0", "patch": "@@ -12,6 +12,56 @@\n \n register_long_diagnostics! {\n \n+E0373: r##\"\n+This error occurs when an attempt is made to use data captured by a closure,\n+when that data may no longer exist. It's most commonly seen when attempting to\n+return a closure:\n+\n+```\n+fn foo() -> Box<Fn(u32) -> u32> {\n+    let x = 0u32;\n+    Box::new(|y| x + y)\n+}\n+```\n+\n+Notice that `x` is stack-allocated by `foo()`. By default, Rust captures\n+closed-over data by reference. This means that once `foo()` returns, `x` no\n+longer exists. An attempt to access `x` within the closure would thus be unsafe.\n+\n+Another situation where this might be encountered is when spawning threads:\n+\n+```\n+fn foo() {\n+    let x = 0u32;\n+    let y = 1u32;\n+\n+    let thr = std::thread::spawn(|| {\n+        x + y\n+    });\n+}\n+```\n+\n+Since our new thread runs in parallel, the stack frame containing `x` and `y`\n+may well have disappeared by the time we try to use them. Even if we call\n+`thr.join()` within foo (which blocks until `thr` has completed, ensuring the\n+stack frame won't disappear), we will not succeed: the compiler cannot prove\n+that this behaviour is safe, and so won't let us do it.\n+\n+The solution to this problem is usually to switch to using a `move` closure.\n+This approach moves (or copies, where possible) data into the closure, rather\n+than taking references to it. For example:\n+\n+```\n+fn foo() -> Box<Fn(u32) -> u32> {\n+    let x = 0u32;\n+    Box::new(move |y| x + y)\n+}\n+```\n+\n+Now that the closure has its own copy of the data, there's no need to worry\n+about safety.\n+\"##,\n+\n E0381: r##\"\n It is not allowed to use or capture an uninitialized variable. For example:\n \n@@ -28,7 +78,6 @@ used.\n }\n \n register_diagnostics! {\n-    E0373, // closure may outlive current fn, but it borrows {}, which is owned by current fn\n     E0382, // use of partially/collaterally moved value\n     E0383, // partial reinitialization of uninitialized structure\n     E0384, // reassignment of immutable variable"}]}