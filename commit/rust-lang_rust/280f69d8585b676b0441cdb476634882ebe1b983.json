{"sha": "280f69d8585b676b0441cdb476634882ebe1b983", "node_id": "C_kwDOAAsO6NoAKDI4MGY2OWQ4NTg1YjY3NmIwNDQxY2RiNDc2NjM0ODgyZWJlMWI5ODM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-19T15:24:00Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-19T15:25:33Z"}, "message": "Fix IndexVec::drain_enumerated", "tree": {"sha": "aaa39397d00f051f569b58ab0e3f11b1e2bcf95f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aaa39397d00f051f569b58ab0e3f11b1e2bcf95f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/280f69d8585b676b0441cdb476634882ebe1b983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/280f69d8585b676b0441cdb476634882ebe1b983", "html_url": "https://github.com/rust-lang/rust/commit/280f69d8585b676b0441cdb476634882ebe1b983", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/280f69d8585b676b0441cdb476634882ebe1b983/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ba6d22bdf5348e566dedc77a7dfee3f3804f2fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ba6d22bdf5348e566dedc77a7dfee3f3804f2fb", "html_url": "https://github.com/rust-lang/rust/commit/6ba6d22bdf5348e566dedc77a7dfee3f3804f2fb"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "68cdc6d7711d4eb840bb49ea3faef8a6c0f121f5", "filename": "compiler/rustc_index/src/vec.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/280f69d8585b676b0441cdb476634882ebe1b983/compiler%2Frustc_index%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/280f69d8585b676b0441cdb476634882ebe1b983/compiler%2Frustc_index%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Fvec.rs?ref=280f69d8585b676b0441cdb476634882ebe1b983", "patch": "@@ -207,7 +207,12 @@ impl<I: Idx, T> IndexVec<I, T> {\n         &'a mut self,\n         range: R,\n     ) -> impl Iterator<Item = (I, T)> + 'a {\n-        self.raw.drain(range).enumerate().map(|(n, t)| (I::new(n), t))\n+        let begin = match range.start_bound() {\n+            std::ops::Bound::Included(i) => *i,\n+            std::ops::Bound::Excluded(i) => i.checked_add(1).unwrap(),\n+            std::ops::Bound::Unbounded => 0,\n+        };\n+        self.raw.drain(range).enumerate().map(move |(n, t)| (I::new(begin + n), t))\n     }\n \n     #[inline]"}, {"sha": "2c75d0907b739fb476551d723508dc51ea4416a5", "filename": "compiler/rustc_trait_selection/src/solve/trait_goals/structural_traits.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/280f69d8585b676b0441cdb476634882ebe1b983/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals%2Fstructural_traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/280f69d8585b676b0441cdb476634882ebe1b983/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals%2Fstructural_traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals%2Fstructural_traits.rs?ref=280f69d8585b676b0441cdb476634882ebe1b983", "patch": "@@ -30,10 +30,7 @@ pub(super) fn instantiate_constituent_tys_for_auto_trait<'tcx>(\n         | ty::Foreign(..)\n         | ty::Alias(ty::Projection, ..)\n         | ty::Bound(..)\n-        | ty::Infer(ty::TyVar(_)) => {\n-            // FIXME: Do we need to mark anything as ambiguous here? Yeah?\n-            Err(NoSolution)\n-        }\n+        | ty::Infer(ty::TyVar(_)) => Err(NoSolution),\n \n         ty::Infer(ty::FreshTy(_) | ty::FreshIntTy(_) | ty::FreshFloatTy(_)) => bug!(),\n \n@@ -101,9 +98,8 @@ pub(super) fn instantiate_constituent_tys_for_sized_trait<'tcx>(\n         | ty::Dynamic(..)\n         | ty::Foreign(..)\n         | ty::Alias(..)\n-        | ty::Param(_) => Err(NoSolution),\n-\n-        ty::Infer(ty::TyVar(_)) => bug!(\"FIXME: ambiguous\"),\n+        | ty::Param(_)\n+        | ty::Infer(ty::TyVar(_)) => Err(NoSolution),\n \n         ty::Placeholder(..)\n         | ty::Bound(..)\n@@ -151,9 +147,8 @@ pub(super) fn instantiate_constituent_tys_for_copy_clone_trait<'tcx>(\n         | ty::Ref(_, _, Mutability::Mut)\n         | ty::Adt(_, _)\n         | ty::Alias(_, _)\n-        | ty::Param(_) => Err(NoSolution),\n-\n-        ty::Infer(ty::TyVar(_)) => bug!(\"FIXME: ambiguous\"),\n+        | ty::Param(_)\n+        | ty::Infer(ty::TyVar(_)) => Err(NoSolution),\n \n         ty::Placeholder(..)\n         | ty::Bound(..)"}]}