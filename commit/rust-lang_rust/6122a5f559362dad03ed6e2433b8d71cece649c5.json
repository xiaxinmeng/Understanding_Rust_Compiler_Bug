{"sha": "6122a5f559362dad03ed6e2433b8d71cece649c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMjJhNWY1NTkzNjJkYWQwM2VkNmUyNDMzYjhkNzFjZWNlNjQ5YzU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-11T21:11:37Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-19T17:52:57Z"}, "message": "mk: Fix MSVC build for rustllvm.lib\n\nThis commit updates the rustllvm.mk file with the necessary flags and such to\nbuild rustllvm.lib with cl.exe instead of gcc. Some comments can be found in the\ncommit itself.", "tree": {"sha": "601f845f3306c0818415d3f32fb63bab84f365fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/601f845f3306c0818415d3f32fb63bab84f365fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6122a5f559362dad03ed6e2433b8d71cece649c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6122a5f559362dad03ed6e2433b8d71cece649c5", "html_url": "https://github.com/rust-lang/rust/commit/6122a5f559362dad03ed6e2433b8d71cece649c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6122a5f559362dad03ed6e2433b8d71cece649c5/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64412a49bed9d6a743ed4d9108fc2da49ed5e9a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/64412a49bed9d6a743ed4d9108fc2da49ed5e9a9", "html_url": "https://github.com/rust-lang/rust/commit/64412a49bed9d6a743ed4d9108fc2da49ed5e9a9"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "50d993701421e896a18a0be34baf5c923c161e47", "filename": "mk/rustllvm.mk", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6122a5f559362dad03ed6e2433b8d71cece649c5/mk%2Frustllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6122a5f559362dad03ed6e2433b8d71cece649c5/mk%2Frustllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frustllvm.mk?ref=6122a5f559362dad03ed6e2433b8d71cece649c5", "patch": "@@ -18,27 +18,41 @@ define DEF_RUSTLLVM_TARGETS\n # to find the llvm includes (probably because we're not actually installing\n # llvm, but using it straight out of the build directory)\n ifdef CFG_WINDOWSY_$(1)\n-LLVM_EXTRA_INCDIRS_$(1)= -iquote $(S)src/llvm/include \\\n-                         -iquote $$(CFG_LLVM_BUILD_DIR_$(1))/include\n+LLVM_EXTRA_INCDIRS_$(1)= $$(call CFG_CC_INCLUDE_$(1),$(S)src/llvm/include) \\\n+                         $$(call CFG_CC_INCLUDE_$(1),\\\n+\t\t\t   $$(CFG_LLVM_BUILD_DIR_$(1))/include)\n endif\n \n RUSTLLVM_OBJS_CS_$(1) := $$(addprefix rustllvm/, \\\n \tExecutionEngineWrapper.cpp RustWrapper.cpp PassWrapper.cpp)\n \n RUSTLLVM_INCS_$(1) = $$(LLVM_EXTRA_INCDIRS_$(1)) \\\n-                     -iquote $$(LLVM_INCDIR_$(1)) \\\n-                     -iquote $$(S)src/rustllvm/include\n+                     $$(call CFG_CC_INCLUDE_$(1),$$(LLVM_INCDIR_$(1))) \\\n+                     $$(call CFG_CC_INCLUDE_$(1),$$(S)src/rustllvm/include)\n RUSTLLVM_OBJS_OBJS_$(1) := $$(RUSTLLVM_OBJS_CS_$(1):rustllvm/%.cpp=$(1)/rustllvm/%.o)\n-ALL_OBJ_FILES += $$(RUSTLLVM_OBJS_OBJS_$(1))\n+\n+# Note that we appease `cl.exe` and its need for some sort of exception\n+# handling flag with the `EHsc` argument here as well.\n+ifeq ($$(findstring msvc,$(1)),msvc)\n+EXTRA_RUSTLLVM_CXXFLAGS_$(1) := //EHsc\n+endif\n \n $$(RT_OUTPUT_DIR_$(1))/$$(call CFG_STATIC_LIB_NAME_$(1),rustllvm): \\\n \t    $$(RUSTLLVM_OBJS_OBJS_$(1))\n \t@$$(call E, link: $$@)\n-\t$$(Q)$$(AR_$(1)) rcs $$@ $$(RUSTLLVM_OBJS_OBJS_$(1))\n+\t$$(Q)$$(call CFG_CREATE_ARCHIVE_$(1),$$@) $$^\n \n+# On MSVC we need to double-escape arguments that llvm-config printed which\n+# start with a '/'. The shell we're running in will auto-translate the argument\n+# `/foo` to `C:/msys64/foo` but we really want it to be passed through as `/foo`\n+# so the argument passed to our shell must be `//foo`.\n $(1)/rustllvm/%.o: $(S)src/rustllvm/%.cpp $$(MKFILE_DEPS) $$(LLVM_CONFIG_$(1))\n \t@$$(call E, compile: $$@)\n-\t$$(Q)$$(call CFG_COMPILE_CXX_$(1), $$@, $$(LLVM_CXXFLAGS_$(1)) $$(RUSTLLVM_INCS_$(1))) $$<\n+\t$$(Q)$$(call CFG_COMPILE_CXX_$(1), $$@,) \\\n+\t\t$$(subst  /,//,$$(LLVM_CXXFLAGS_$(1))) \\\n+\t\t$$(EXTRA_RUSTLLVM_CXXFLAGS_$(1)) \\\n+\t\t$$(RUSTLLVM_INCS_$(1)) \\\n+\t\t$$<\n endef\n \n # Instantiate template for all stages"}]}