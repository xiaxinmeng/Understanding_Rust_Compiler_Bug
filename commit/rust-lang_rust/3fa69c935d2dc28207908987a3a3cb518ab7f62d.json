{"sha": "3fa69c935d2dc28207908987a3a3cb518ab7f62d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmYTY5YzkzNWQyZGMyODIwNzkwODk4N2EzYTNjYjUxOGFiN2Y2MmQ=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-12-03T13:37:23Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-03-17T22:01:46Z"}, "message": "Make Span and Symbol implement Send and Sync", "tree": {"sha": "7a2132900024e2fb9f7939ca57421672152f95b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a2132900024e2fb9f7939ca57421672152f95b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fa69c935d2dc28207908987a3a3cb518ab7f62d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fa69c935d2dc28207908987a3a3cb518ab7f62d", "html_url": "https://github.com/rust-lang/rust/commit/3fa69c935d2dc28207908987a3a3cb518ab7f62d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fa69c935d2dc28207908987a3a3cb518ab7f62d/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f53d4af223a5301daa6123c7b1e4cba108700db4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f53d4af223a5301daa6123c7b1e4cba108700db4", "html_url": "https://github.com/rust-lang/rust/commit/f53d4af223a5301daa6123c7b1e4cba108700db4"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "51da9a755ec4f4f816349f195e183dcc3fd316cd", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3fa69c935d2dc28207908987a3a3cb518ab7f62d/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fa69c935d2dc28207908987a3a3cb518ab7f62d/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=3fa69c935d2dc28207908987a3a3cb518ab7f62d", "patch": "@@ -184,8 +184,12 @@ impl SpanData {\n     }\n }\n \n-// The interner in thread-local, so `Span` shouldn't move between threads.\n+// The interner is pointed to by a thread local value which is only set on the main thread\n+// with parallelization is disabled. So we don't allow Span to transfer between threads\n+// to avoid panics and other errors, even though it would be memory safe to do so.\n+#[cfg(not(parallel_queries))]\n impl !Send for Span {}\n+#[cfg(not(parallel_queries))]\n impl !Sync for Span {}\n \n impl PartialOrd for Span {"}, {"sha": "34716e6eeec898599f3dcc120d948bb02e3ace27", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3fa69c935d2dc28207908987a3a3cb518ab7f62d/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fa69c935d2dc28207908987a3a3cb518ab7f62d/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=3fa69c935d2dc28207908987a3a3cb518ab7f62d", "patch": "@@ -83,8 +83,12 @@ impl Decodable for Ident {\n #[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct Symbol(u32);\n \n-// The interner in thread-local, so `Symbol` shouldn't move between threads.\n+// The interner is pointed to by a thread local value which is only set on the main thread\n+// with parallelization is disabled. So we don't allow Symbol to transfer between threads\n+// to avoid panics and other errors, even though it would be memory safe to do so.\n+#[cfg(not(parallel_queries))]\n impl !Send for Symbol { }\n+#[cfg(not(parallel_queries))]\n impl !Sync for Symbol { }\n \n impl Symbol {"}]}