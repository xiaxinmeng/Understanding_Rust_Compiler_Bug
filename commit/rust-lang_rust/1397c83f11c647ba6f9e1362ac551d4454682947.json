{"sha": "1397c83f11c647ba6f9e1362ac551d4454682947", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzOTdjODNmMTFjNjQ3YmE2ZjllMTM2MmFjNTUxZDQ0NTQ2ODI5NDc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-02T22:49:36Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-02T22:49:36Z"}, "message": "std: warn(non_camel_case_types) everywhere. still some exceptions", "tree": {"sha": "a591261c7c9971861c229d9185559d717df7ee99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a591261c7c9971861c229d9185559d717df7ee99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1397c83f11c647ba6f9e1362ac551d4454682947", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1397c83f11c647ba6f9e1362ac551d4454682947", "html_url": "https://github.com/rust-lang/rust/commit/1397c83f11c647ba6f9e1362ac551d4454682947", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1397c83f11c647ba6f9e1362ac551d4454682947/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "087c5032a86ad2f2433c6e5f9dcc597ec01de004", "url": "https://api.github.com/repos/rust-lang/rust/commits/087c5032a86ad2f2433c6e5f9dcc597ec01de004", "html_url": "https://github.com/rust-lang/rust/commit/087c5032a86ad2f2433c6e5f9dcc597ec01de004"}], "stats": {"total": 56, "additions": 10, "deletions": 46}, "files": [{"sha": "4e20195e1f90c03f37d6fe06b5220ffaadeb7bea", "filename": "src/libstd/arena.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Farena.rs?ref=1397c83f11c647ba6f9e1362ac551d4454682947", "patch": "@@ -1,5 +1,4 @@\n // Dynamic arenas.\n-#[warn(non_camel_case_types)];\n \n // Arenas are used to quickly allocate objects that share a\n // lifetime. The arena uses ~[u8] vectors as a backing store to"}, {"sha": "c8df4ba60782983d26cbb369d339463329221564", "filename": "src/libstd/base64.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fbase64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fbase64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbase64.rs?ref=1397c83f11c647ba6f9e1362ac551d4454682947", "patch": "@@ -1,6 +1,5 @@\n #[forbid(deprecated_mode)];\n #[forbid(deprecated_pattern)];\n-#[deny(non_camel_case_types)];\n import io::Reader;\n \n trait ToBase64 {"}, {"sha": "5d21461eb49e3895c56b5bc8ea32d7147b78d28d", "filename": "src/libstd/bitv.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbitv.rs?ref=1397c83f11c647ba6f9e1362ac551d4454682947", "patch": "@@ -1,4 +1,3 @@\n-#[deny(non_camel_case_types)];\n import vec::{to_mut, from_elem};\n \n export Bitv;"}, {"sha": "a7291ec27da2144f0f5a6a8b70410ac2b4b03366", "filename": "src/libstd/c_vec.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fc_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fc_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_vec.rs?ref=1397c83f11c647ba6f9e1362ac551d4454682947", "patch": "@@ -1,4 +1,3 @@\n-#[deny(non_camel_case_types)];\n /*!\n  * Library to interface with chunks of memory allocated in C.\n  *"}, {"sha": "9b094f9215c67f34abfaefa9afa189a416060afa", "filename": "src/libstd/cmp.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcmp.rs?ref=1397c83f11c647ba6f9e1362ac551d4454682947", "patch": "@@ -1,4 +1,3 @@\n-#[deny(non_camel_case_types)];\n #[forbid(deprecated_mode)];\n #[forbid(deprecated_pattern)];\n /// Additional general-purpose comparison functionality."}, {"sha": "87ade69a5f3147e790c1cef743997fa2eb7537ea", "filename": "src/libstd/comm.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcomm.rs?ref=1397c83f11c647ba6f9e1362ac551d4454682947", "patch": "@@ -8,9 +8,6 @@ Higher level communication abstractions.\n #[forbid(deprecated_mode)];\n #[forbid(deprecated_pattern)];\n \n-// Make sure we follow the new conventions\n-#[forbid(non_camel_case_types)];\n-\n import pipes::{Channel, Recv, Chan, Port, Selectable};\n \n export DuplexStream;"}, {"sha": "d75fc75839fc3ea8a0fa11b69ce14d6c1d3bd74f", "filename": "src/libstd/dbg.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fdbg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fdbg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fdbg.rs?ref=1397c83f11c647ba6f9e1362ac551d4454682947", "patch": "@@ -1,4 +1,3 @@\n-#[deny(non_camel_case_types)];\n #[forbid(deprecated_mode)];\n #[forbid(deprecated_pattern)];\n //! Unsafe debugging functions for inspecting values."}, {"sha": "9f63d18c562d618f2329d3a5708fea0f81cdcca1", "filename": "src/libstd/deque.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fdeque.rs?ref=1397c83f11c647ba6f9e1362ac551d4454682947", "patch": "@@ -1,5 +1,3 @@\n-#[deny(non_camel_case_types)];\n-\n //! A deque. Untested as of yet. Likely buggy\n \n import option::{Some, None};"}, {"sha": "8f9987be348ae8a6ed5d7d450c10a3abd7b445d6", "filename": "src/libstd/ebml.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Febml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Febml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Febml.rs?ref=1397c83f11c647ba6f9e1362ac551d4454682947", "patch": "@@ -1,5 +1,3 @@\n-#[deny(non_camel_case_types)];\n-\n // Simple Extensible Binary Markup Language (ebml) reader and writer on a\n // cursor model. See the specification here:\n //     http://www.matroska.org/technical/specs/rfc/index.html"}, {"sha": "8ece067b9041fde8555bae4d1e77750ec9240086", "filename": "src/libstd/fun_treemap.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Ffun_treemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Ffun_treemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffun_treemap.rs?ref=1397c83f11c647ba6f9e1362ac551d4454682947", "patch": "@@ -1,4 +1,3 @@\n-#[deny(non_camel_case_types)];\n #[forbid(deprecated_mode)];\n #[forbid(deprecated_pattern)];\n "}, {"sha": "1db21e0ef37a5962dacf9d1bac99f3c6f54a22a2", "filename": "src/libstd/getopts.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fgetopts.rs?ref=1397c83f11c647ba6f9e1362ac551d4454682947", "patch": "@@ -1,5 +1,3 @@\n-#[deny(non_camel_case_types)];\n-\n /*!\n  * Simple getopt alternative.\n  *"}, {"sha": "a3f3ae9b70e4bb51c6c754063612c44ec44c3706", "filename": "src/libstd/json.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=1397c83f11c647ba6f9e1362ac551d4454682947", "patch": "@@ -1,5 +1,3 @@\n-#[deny(non_camel_case_types)];\n-\n // Rust JSON serialization library\n // Copyright (c) 2011 Google Inc.\n "}, {"sha": "76e0dc183b4f0e96335e46bb1507b42b124e33c8", "filename": "src/libstd/std.rc", "status": "modified", "additions": 9, "deletions": 27, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstd.rc?ref=1397c83f11c647ba6f9e1362ac551d4454682947", "patch": "@@ -11,6 +11,8 @@\n #[no_core];\n \n #[allow(vecs_implicitly_copyable)];\n+// XXX: deny after snapshot\n+#[warn(non_camel_case_types)];\n \n use core(vers = \"0.4\");\n import core::*;\n@@ -30,41 +32,28 @@ export cell;\n \n // General io and system-services modules\n \n-#[warn(non_camel_case_types)]\n mod net;\n-#[warn(non_camel_case_types)]\n mod net_ip;\n-#[warn(non_camel_case_types)]\n mod net_tcp;\n-#[warn(non_camel_case_types)]\n mod net_url;\n \n // libuv modules\n-#[warn(non_camel_case_types)]\n mod uv;\n mod uv_ll;\n-#[warn(non_camel_case_types)]\n mod uv_iotask;\n-#[warn(non_camel_case_types)]\n mod uv_global_loop;\n \n \n // Utility modules\n \n-#[warn(non_camel_case_types)]\n mod c_vec;\n-#[warn(non_camel_case_types)]\n mod timer;\n-#[warn(non_camel_case_types)]\n mod cell;\n \n // Concurrency\n \n-#[warn(non_camel_case_types)]\n mod sync;\n-#[warn(non_camel_case_types)]\n mod arc;\n-#[warn(non_camel_case_types)]\n mod comm;\n \n // Collections\n@@ -73,41 +62,32 @@ mod bitv;\n mod deque;\n mod fun_treemap;\n mod list;\n+#[allow(non_camel_case_types)] // XXX\n mod map;\n+#[allow(non_camel_case_types)] // XXX\n mod rope;\n+#[allow(non_camel_case_types)] // XXX\n mod smallintmap;\n+#[allow(non_camel_case_types)] // XXX\n mod sort;\n+#[allow(non_camel_case_types)] // XXX\n mod treemap;\n \n // And ... other stuff\n \n-#[warn(non_camel_case_types)]\n mod ebml;\n-#[warn(non_camel_case_types)]\n mod dbg;\n-#[warn(non_camel_case_types)]\n mod getopts;\n-#[warn(non_camel_case_types)]\n mod json;\n-#[warn(non_camel_case_types)]\n mod sha1;\n-#[warn(non_camel_case_types)]\n mod md4;\n-#[warn(non_camel_case_types)]\n mod tempfile;\n-#[warn(non_camel_case_types)]\n mod term;\n-#[warn(non_camel_case_types)]\n mod time;\n-#[warn(non_camel_case_types)]\n mod prettyprint;\n-#[warn(non_camel_case_types)]\n mod arena;\n-#[warn(non_camel_case_types)]\n mod par;\n-#[warn(non_camel_case_types)]\n mod cmp;\n-#[warn(non_camel_case_types)]\n mod base64;\n \n #[cfg(unicode)]\n@@ -116,7 +96,9 @@ mod unicode;\n \n // Compiler support modules\n \n+#[allow(non_camel_case_types)] // XXX\n mod test;\n+#[allow(non_camel_case_types)] // XXX\n mod serialization;\n \n // Local Variables:"}, {"sha": "b9331ad254a9d078b6c7d832da4c28ffa3905304", "filename": "src/libstd/uv_ll.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fuv_ll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397c83f11c647ba6f9e1362ac551d4454682947/src%2Flibstd%2Fuv_ll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv_ll.rs?ref=1397c83f11c647ba6f9e1362ac551d4454682947", "patch": "@@ -20,7 +20,7 @@\n  * with per-platform, generated source files from rust-bindgen.\n  */\n \n-#[allow(non_camel_case_types)] // C types\n+#[allow(non_camel_case_types)]; // C types\n \n import libc::size_t;\n import comm = core::comm;"}]}