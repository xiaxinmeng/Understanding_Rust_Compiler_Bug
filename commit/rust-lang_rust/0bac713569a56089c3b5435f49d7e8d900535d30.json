{"sha": "0bac713569a56089c3b5435f49d7e8d900535d30", "node_id": "C_kwDOAAsO6NoAKDBiYWM3MTM1NjlhNTYwODljM2I1NDM1ZjQ5ZDdlOGQ5MDA1MzVkMzA", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2021-12-30T17:01:30Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2021-12-30T17:45:20Z"}, "message": "Add negative `impl` for `Ord`, `PartialOrd` on `LocalDefId`\n\nAdd comment about why `LocalDefId` should not be `Ord`\n\nAlso fix some formatting in the doc comment.", "tree": {"sha": "e40aa10f904414ed928c978765def603f7051092", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e40aa10f904414ed928c978765def603f7051092"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bac713569a56089c3b5435f49d7e8d900535d30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bac713569a56089c3b5435f49d7e8d900535d30", "html_url": "https://github.com/rust-lang/rust/commit/0bac713569a56089c3b5435f49d7e8d900535d30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bac713569a56089c3b5435f49d7e8d900535d30/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8d4ee7c7adcea52dfc62328309f5ef7df000266", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8d4ee7c7adcea52dfc62328309f5ef7df000266", "html_url": "https://github.com/rust-lang/rust/commit/f8d4ee7c7adcea52dfc62328309f5ef7df000266"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "f6b0785a07c0e4c3004938d698f077fbb0d3f574", "filename": "compiler/rustc_span/src/def_id.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0bac713569a56089c3b5435f49d7e8d900535d30/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bac713569a56089c3b5435f49d7e8d900535d30/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs?ref=0bac713569a56089c3b5435f49d7e8d900535d30", "patch": "@@ -316,17 +316,23 @@ impl fmt::Debug for DefId {\n \n rustc_data_structures::define_id_collections!(DefIdMap, DefIdSet, DefId);\n \n-/// A LocalDefId is equivalent to a DefId with `krate == LOCAL_CRATE`. Since\n+/// A `LocalDefId` is equivalent to a `DefId` with `krate == LOCAL_CRATE`. Since\n /// we encode this information in the type, we can ensure at compile time that\n-/// no DefIds from upstream crates get thrown into the mix. There are quite a\n-/// few cases where we know that only DefIds from the local crate are expected\n-/// and a DefId from a different crate would signify a bug somewhere. This\n-/// is when LocalDefId comes in handy.\n+/// no `DefId`s from upstream crates get thrown into the mix. There are quite a\n+/// few cases where we know that only `DefId`s from the local crate are expected;\n+/// a `DefId` from a different crate would signify a bug somewhere. This\n+/// is when `LocalDefId` comes in handy.\n #[derive(Clone, Copy, PartialEq, Eq, Hash)]\n pub struct LocalDefId {\n     pub local_def_index: DefIndex,\n }\n \n+// To ensure correctness of incremental compilation,\n+// `LocalDefId` must not implement `Ord` or `PartialOrd`.\n+// See https://github.com/rust-lang/rust/issues/90317.\n+impl !Ord for LocalDefId {}\n+impl !PartialOrd for LocalDefId {}\n+\n pub const CRATE_DEF_ID: LocalDefId = LocalDefId { local_def_index: CRATE_DEF_INDEX };\n \n impl Idx for LocalDefId {"}]}