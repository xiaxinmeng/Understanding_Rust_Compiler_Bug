{"sha": "daee133ba1276ced2d2fe53bd1b1cbfa4e2aac79", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZWUxMzNiYTEyNzZjZWQyZDJmZTUzYmQxYjFjYmZhNGUyYWFjNzk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-17T20:56:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-17T20:56:37Z"}, "message": "Merge #8073\n\n8073: Improve diagnostic when including nonexistent file r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "6b42a73a8ba0a274200c1e8d5d0567fcc4116146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b42a73a8ba0a274200c1e8d5d0567fcc4116146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daee133ba1276ced2d2fe53bd1b1cbfa4e2aac79", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgUm0FCRBK7hj4Ov3rIwAAdHIIAIkG9ohDtR8G7Gv9wfy88F1I\nd5sOdu9XN/bw8TN8jii/MDVHGWt+MUR/+8U3abN/JKO9XrVxVhNZF9yOG1/2T8xX\nfNz61o92n9lxiTmNB38rd7+GXDn27A8pXymCH4cPVCKgeqwy0irgvGBY6rCTRBFx\nZMAhUqGpfCM7k8eoGcfpN8J+DsCOrrRrnqRd0LaUkOVLBAHw/1jHgP0A2Q66K0er\n9ZX6BHwAbgoEU1YG4Ei5FPCT4Q9COL2FgVWHCwPfM1UR6tGBH+K9VIp1Mhdixe3W\nrY6fl6juJ0GtWFLzXItPZ5AD7LMff5tIZ8o3sS9eIwo7soVKrXYY/v9Or9dtBI0=\n=Gku2\n-----END PGP SIGNATURE-----\n", "payload": "tree 6b42a73a8ba0a274200c1e8d5d0567fcc4116146\nparent 9d691530d556bdc40262585383a1b18d3a1de07e\nparent 5f80364ede59d2507205246b383c25cb4dfb67ff\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1616014597 +0000\ncommitter GitHub <noreply@github.com> 1616014597 +0000\n\nMerge #8073\n\n8073: Improve diagnostic when including nonexistent file r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daee133ba1276ced2d2fe53bd1b1cbfa4e2aac79", "html_url": "https://github.com/rust-lang/rust/commit/daee133ba1276ced2d2fe53bd1b1cbfa4e2aac79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daee133ba1276ced2d2fe53bd1b1cbfa4e2aac79/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d691530d556bdc40262585383a1b18d3a1de07e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d691530d556bdc40262585383a1b18d3a1de07e", "html_url": "https://github.com/rust-lang/rust/commit/9d691530d556bdc40262585383a1b18d3a1de07e"}, {"sha": "5f80364ede59d2507205246b383c25cb4dfb67ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f80364ede59d2507205246b383c25cb4dfb67ff", "html_url": "https://github.com/rust-lang/rust/commit/5f80364ede59d2507205246b383c25cb4dfb67ff"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "faa1332970ae0d69d86b057da4a0df1b2e5e8ea1", "filename": "crates/hir_def/src/body/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/daee133ba1276ced2d2fe53bd1b1cbfa4e2aac79/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daee133ba1276ced2d2fe53bd1b1cbfa4e2aac79/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests.rs?ref=daee133ba1276ced2d2fe53bd1b1cbfa4e2aac79", "patch": "@@ -137,7 +137,7 @@ fn f() {\n     include!(invalid);\n   //^^^^^^^^^^^^^^^^^ could not convert tokens\n     include!(\"does not exist\");\n-  //^^^^^^^^^^^^^^^^^^^^^^^^^^ could not convert tokens\n+  //^^^^^^^^^^^^^^^^^^^^^^^^^^ failed to load file `does not exist`\n \n     env!(invalid);\n   //^^^^^^^^^^^^^ could not convert tokens"}, {"sha": "a89061c2e800736099a84d9189c27d1610f2c48c", "filename": "crates/hir_def/src/nameres/tests/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/daee133ba1276ced2d2fe53bd1b1cbfa4e2aac79/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daee133ba1276ced2d2fe53bd1b1cbfa4e2aac79/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fdiagnostics.rs?ref=daee133ba1276ced2d2fe53bd1b1cbfa4e2aac79", "patch": "@@ -196,7 +196,7 @@ fn builtin_macro_fails_expansion() {\n           macro_rules! include { () => {} }\n \n           include!(\"doesntexist\");\n-        //^^^^^^^^^^^^^^^^^^^^^^^^ could not convert tokens\n+        //^^^^^^^^^^^^^^^^^^^^^^^^ failed to load file `doesntexist`\n         \"#,\n     );\n }"}, {"sha": "fce09a9e716712cfc46d60e91f6d7a5949baba4a", "filename": "crates/hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/daee133ba1276ced2d2fe53bd1b1cbfa4e2aac79/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daee133ba1276ced2d2fe53bd1b1cbfa4e2aac79/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=daee133ba1276ced2d2fe53bd1b1cbfa4e2aac79", "patch": "@@ -333,17 +333,19 @@ fn concat_expand(\n fn relative_file(\n     db: &dyn AstDatabase,\n     call_id: MacroCallId,\n-    path: &str,\n+    path_str: &str,\n     allow_recursion: bool,\n-) -> Option<FileId> {\n+) -> Result<FileId, mbe::ExpandError> {\n     let call_site = call_id.as_file().original_file(db);\n-    let path = AnchoredPath { anchor: call_site, path };\n-    let res = db.resolve_path(path)?;\n+    let path = AnchoredPath { anchor: call_site, path: path_str };\n+    let res = db\n+        .resolve_path(path)\n+        .ok_or_else(|| mbe::ExpandError::Other(format!(\"failed to load file `{}`\", path_str)))?;\n     // Prevent include itself\n     if res == call_site && !allow_recursion {\n-        None\n+        Err(mbe::ExpandError::Other(format!(\"recursive inclusion of `{}`\", path_str)))\n     } else {\n-        Some(res)\n+        Ok(res)\n     }\n }\n \n@@ -364,8 +366,7 @@ fn include_expand(\n ) -> ExpandResult<Option<(tt::Subtree, FragmentKind)>> {\n     let res = (|| {\n         let path = parse_string(tt)?;\n-        let file_id = relative_file(db, arg_id.into(), &path, false)\n-            .ok_or_else(|| mbe::ExpandError::ConversionError)?;\n+        let file_id = relative_file(db, arg_id.into(), &path, false)?;\n \n         Ok(parse_to_token_tree(&db.file_text(file_id))\n             .ok_or_else(|| mbe::ExpandError::ConversionError)?\n@@ -417,8 +418,8 @@ fn include_str_expand(\n     // Ideally, we'd be able to offer a precise expansion if the user asks for macro\n     // expansion.\n     let file_id = match relative_file(db, arg_id.into(), &path, true) {\n-        Some(file_id) => file_id,\n-        None => {\n+        Ok(file_id) => file_id,\n+        Err(_) => {\n             return ExpandResult::ok(Some((quote!(\"\"), FragmentKind::Expr)));\n         }\n     };"}]}