{"sha": "1dbc0442cddb0317938a481b7afb7e4113658d78", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYmMwNDQyY2RkYjAzMTc5MzhhNDgxYjdhZmI3ZTQxMTM2NThkNzg=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-17T17:36:08Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-17T17:36:08Z"}, "message": "Automatically add a -L to the directory the binary is in.", "tree": {"sha": "2a30b4eebb95634efe9ca69a502f3e15cd3cefa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a30b4eebb95634efe9ca69a502f3e15cd3cefa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1dbc0442cddb0317938a481b7afb7e4113658d78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1dbc0442cddb0317938a481b7afb7e4113658d78", "html_url": "https://github.com/rust-lang/rust/commit/1dbc0442cddb0317938a481b7afb7e4113658d78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1dbc0442cddb0317938a481b7afb7e4113658d78/comments", "author": null, "committer": null, "parents": [{"sha": "982f51aa95442b314f8d9c4901707e3a26821526", "url": "https://api.github.com/repos/rust-lang/rust/commits/982f51aa95442b314f8d9c4901707e3a26821526", "html_url": "https://github.com/rust-lang/rust/commit/982f51aa95442b314f8d9c4901707e3a26821526"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "3c56c5694dbf20d23503ea8373f52b3e93f8cb41", "filename": "Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1dbc0442cddb0317938a481b7afb7e4113658d78/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/1dbc0442cddb0317938a481b7afb7e4113658d78/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=1dbc0442cddb0317938a481b7afb7e4113658d78", "patch": "@@ -109,13 +109,13 @@ STAGE0 := $(Q)$(call CFG_RUN_TARG,stage0,\\\n                 stage0/rustc$(X) $(CFG_RUSTC_FLAGS) -L stage0)\n STAGE1 := $(Q)$(call CFG_RUN_TARG,stage0, \\\n                 $(CFG_VALGRIND_COMPILE) stage1/rustc$(X) \\\n-                $(CFG_RUSTC_FLAGS) -L stage1)\n+                $(CFG_RUSTC_FLAGS))\n STAGE2 := $(Q)$(call CFG_RUN_TARG,stage1, \\\n                 $(CFG_VALGRIND_COMPILE) stage2/rustc$(X) \\\n-                $(CFG_RUSTC_FLAGS) -L stage2)\n+                $(CFG_RUSTC_FLAGS))\n STAGE3 := $(Q)$(call CFG_RUN_TARG,stage2, \\\n                 $(CFG_VALGRIND_COMPILE) stage3/rustc$(X) \\\n-                $(CFG_RUSTC_FLAGS) -L stage3)\n+                $(CFG_RUSTC_FLAGS))\n \n # \"Source\" files we generate in builddir along the way.\n GENERATED :="}, {"sha": "0a340e4758ee469c0c486b9e5cdd4886ff6d8967", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1dbc0442cddb0317938a481b7afb7e4113658d78/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dbc0442cddb0317938a481b7afb7e4113658d78/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=1dbc0442cddb0317938a481b7afb7e4113658d78", "patch": "@@ -202,10 +202,11 @@ fn build_target_config() -> @session::config {\n     ret target_cfg;\n }\n \n-fn build_session_options(str binary, getopts::match match) ->\n+fn build_session_options(str binary, getopts::match match, str binary_dir) ->\n    @session::options {\n     auto shared = opt_present(match, \"shared\");\n-    auto library_search_paths = getopts::opt_strs(match, \"L\");\n+    auto library_search_paths = [binary_dir];\n+    library_search_paths += getopts::opt_strs(match, \"L\");\n     auto output_type =\n         if (opt_present(match, \"parse-only\")) {\n             link::output_type_none\n@@ -297,6 +298,7 @@ fn main(vec[str] args) {\n          optflag(\"time-llvm-passes\"), optflag(\"no-typestate\"),\n          optflag(\"noverify\")];\n     auto binary = vec::shift[str](args);\n+    auto binary_dir = fs::dirname(binary);\n     auto match =\n         alt (getopts::getopts(args, opts)) {\n             case (getopts::success(?m)) { m }\n@@ -313,7 +315,7 @@ fn main(vec[str] args) {\n         version(binary);\n         ret;\n     }\n-    auto sopts = build_session_options(binary, match);\n+    auto sopts = build_session_options(binary, match, binary_dir);\n     auto sess = build_session(sopts);\n     auto n_inputs = vec::len[str](match.free);\n     auto output_file = getopts::opt_maybe_str(match, \"o\");\n@@ -391,7 +393,6 @@ fn main(vec[str] args) {\n     //\n     // TODO: Factor this out of main.\n     if (sopts.output_type == link::output_type_exe) {\n-        auto binary_dir = fs::dirname(binary);\n         let str glu = binary_dir + \"/glue.o\";\n         let str main = \"rt/main.o\";\n         let str stage = \"-L\" + binary_dir;"}]}