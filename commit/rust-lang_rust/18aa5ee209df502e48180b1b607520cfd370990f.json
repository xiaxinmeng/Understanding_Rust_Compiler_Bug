{"sha": "18aa5ee209df502e48180b1b607520cfd370990f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4YWE1ZWUyMDlkZjUwMmU0ODE4MGIxYjYwNzUyMGNmZDM3MDk5MGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-01T23:44:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-01T23:44:25Z"}, "message": "Auto merge of #79614 - GuillaumeGomez:rollup-15usd7e, r=GuillaumeGomez\n\nRollup of 3 pull requests\n\nSuccessful merges:\n\n - #79508 (Warn if `dsymutil` returns an error code)\n - #79509 (Improve attribute message error spans)\n - #79600 (std::io: Use sendfile for UnixStream)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "6415ea6bd4cb323fc8828cc1d4003038f9314e9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6415ea6bd4cb323fc8828cc1d4003038f9314e9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18aa5ee209df502e48180b1b607520cfd370990f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18aa5ee209df502e48180b1b607520cfd370990f", "html_url": "https://github.com/rust-lang/rust/commit/18aa5ee209df502e48180b1b607520cfd370990f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18aa5ee209df502e48180b1b607520cfd370990f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6645da366eed0c61258a04265bea513e94df7ea6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6645da366eed0c61258a04265bea513e94df7ea6", "html_url": "https://github.com/rust-lang/rust/commit/6645da366eed0c61258a04265bea513e94df7ea6"}, {"sha": "9e26fc60b1a91e28e799fd3ed33f8b93db13be2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e26fc60b1a91e28e799fd3ed33f8b93db13be2a", "html_url": "https://github.com/rust-lang/rust/commit/9e26fc60b1a91e28e799fd3ed33f8b93db13be2a"}], "stats": {"total": 199, "additions": 150, "deletions": 49}, "files": [{"sha": "19c7c479f0429b16c02d3a6390b640a46986e7ca", "filename": "compiler/rustc_ast/src/attr/mod.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/18aa5ee209df502e48180b1b607520cfd370990f/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18aa5ee209df502e48180b1b607520cfd370990f/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs?ref=18aa5ee209df502e48180b1b607520cfd370990f", "patch": "@@ -115,6 +115,10 @@ impl NestedMetaItem {\n     pub fn is_meta_item_list(&self) -> bool {\n         self.meta_item_list().is_some()\n     }\n+\n+    pub fn name_value_literal_span(&self) -> Option<Span> {\n+        self.meta_item()?.name_value_literal_span()\n+    }\n }\n \n impl Attribute {\n@@ -175,6 +179,22 @@ impl Attribute {\n     pub fn is_value_str(&self) -> bool {\n         self.value_str().is_some()\n     }\n+\n+    /// This is used in case you want the value span instead of the whole attribute. Example:\n+    ///\n+    /// ```text\n+    /// #[doc(alias = \"foo\")]\n+    /// ```\n+    ///\n+    /// In here, it'll return a span for `\"foo\"`.\n+    pub fn name_value_literal_span(&self) -> Option<Span> {\n+        match self.kind {\n+            AttrKind::Normal(ref item, _) => {\n+                item.meta(self.span).and_then(|meta| meta.name_value_literal_span())\n+            }\n+            AttrKind::DocComment(..) => None,\n+        }\n+    }\n }\n \n impl MetaItem {\n@@ -227,6 +247,17 @@ impl MetaItem {\n     pub fn is_value_str(&self) -> bool {\n         self.value_str().is_some()\n     }\n+\n+    /// This is used in case you want the value span instead of the whole attribute. Example:\n+    ///\n+    /// ```text\n+    /// #[doc(alias = \"foo\")]\n+    /// ```\n+    ///\n+    /// In here, it'll return a span for `\"foo\"`.\n+    pub fn name_value_literal_span(&self) -> Option<Span> {\n+        Some(self.name_value_literal()?.span)\n+    }\n }\n \n impl AttrItem {"}, {"sha": "bb7562bc80c7cd08319456cfaaf7ba8d27d49eb9", "filename": "compiler/rustc_attr/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18aa5ee209df502e48180b1b607520cfd370990f/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18aa5ee209df502e48180b1b607520cfd370990f/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs?ref=18aa5ee209df502e48180b1b607520cfd370990f", "patch": "@@ -294,7 +294,7 @@ where\n                                                     or \\\"none\\\"\",\n                                                 )\n                                                 .span_label(\n-                                                    mi.name_value_literal().unwrap().span,\n+                                                    mi.name_value_literal_span().unwrap(),\n                                                     msg,\n                                                 )\n                                                 .emit();"}, {"sha": "70cf876a08a510fcc1adadb472e5a0dd356837fc", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/18aa5ee209df502e48180b1b607520cfd370990f/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18aa5ee209df502e48180b1b607520cfd370990f/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=18aa5ee209df502e48180b1b607520cfd370990f", "patch": "@@ -643,15 +643,16 @@ fn link_natively<'a, B: ArchiveBuilder<'a>>(\n         }\n     }\n \n+    fn escape_string(s: &[u8]) -> String {\n+        str::from_utf8(s).map(|s| s.to_owned()).unwrap_or_else(|_| {\n+            let mut x = \"Non-UTF-8 output: \".to_string();\n+            x.extend(s.iter().flat_map(|&b| ascii::escape_default(b)).map(char::from));\n+            x\n+        })\n+    }\n+\n     match prog {\n         Ok(prog) => {\n-            fn escape_string(s: &[u8]) -> String {\n-                str::from_utf8(s).map(|s| s.to_owned()).unwrap_or_else(|_| {\n-                    let mut x = \"Non-UTF-8 output: \".to_string();\n-                    x.extend(s.iter().flat_map(|&b| ascii::escape_default(b)).map(char::from));\n-                    x\n-                })\n-            }\n             if !prog.status.success() {\n                 let mut output = prog.stderr.clone();\n                 output.extend_from_slice(&prog.stdout);\n@@ -760,8 +761,21 @@ fn link_natively<'a, B: ArchiveBuilder<'a>>(\n         && sess.opts.debuginfo != DebugInfo::None\n         && !preserve_objects_for_their_debuginfo(sess)\n     {\n-        if let Err(e) = Command::new(\"dsymutil\").arg(out_filename).output() {\n-            sess.fatal(&format!(\"failed to run dsymutil: {}\", e))\n+        let prog = Command::new(\"dsymutil\").arg(out_filename).output();\n+        match prog {\n+            Ok(prog) => {\n+                if !prog.status.success() {\n+                    let mut output = prog.stderr.clone();\n+                    output.extend_from_slice(&prog.stdout);\n+                    sess.struct_warn(&format!(\n+                        \"processing debug info with `dsymutil` failed: {}\",\n+                        prog.status\n+                    ))\n+                    .note(&escape_string(&output))\n+                    .emit();\n+                }\n+            }\n+            Err(e) => sess.fatal(&format!(\"unable to run `dsymutil`: {}\", e)),\n         }\n     }\n }"}, {"sha": "37ff6b9b368e7878b2ae79b7da82651b50cf65dc", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/18aa5ee209df502e48180b1b607520cfd370990f/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18aa5ee209df502e48180b1b607520cfd370990f/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=18aa5ee209df502e48180b1b607520cfd370990f", "patch": "@@ -1603,23 +1603,22 @@ impl<'a, 'b> MutVisitor for InvocationCollector<'a, 'b> {\n                             items.push(ast::NestedMetaItem::MetaItem(item));\n                         }\n                         Err(e) => {\n-                            let lit =\n-                                it.meta_item().and_then(|item| item.name_value_literal()).unwrap();\n+                            let lit_span = it.name_value_literal_span().unwrap();\n \n                             if e.kind() == ErrorKind::InvalidData {\n                                 self.cx\n                                     .struct_span_err(\n-                                        lit.span,\n+                                        lit_span,\n                                         &format!(\"{} wasn't a utf-8 file\", filename.display()),\n                                     )\n-                                    .span_label(lit.span, \"contains invalid utf-8\")\n+                                    .span_label(lit_span, \"contains invalid utf-8\")\n                                     .emit();\n                             } else {\n                                 let mut err = self.cx.struct_span_err(\n-                                    lit.span,\n+                                    lit_span,\n                                     &format!(\"couldn't read {}: {}\", filename.display(), e),\n                                 );\n-                                err.span_label(lit.span, \"couldn't read file\");\n+                                err.span_label(lit_span, \"couldn't read file\");\n \n                                 err.emit();\n                             }"}, {"sha": "61f850c2fc166fa86da21a1b1462158ea5372bbf", "filename": "compiler/rustc_middle/src/middle/limits.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/18aa5ee209df502e48180b1b607520cfd370990f/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flimits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18aa5ee209df502e48180b1b607520cfd370990f/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flimits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flimits.rs?ref=18aa5ee209df502e48180b1b607520cfd370990f", "patch": "@@ -43,8 +43,7 @@ fn update_limit(\n \n                     let value_span = attr\n                         .meta()\n-                        .and_then(|meta| meta.name_value_literal().cloned())\n-                        .map(|lit| lit.span)\n+                        .and_then(|meta| meta.name_value_literal_span())\n                         .unwrap_or(attr.span);\n \n                     let error_str = match e.kind() {"}, {"sha": "c9e02d56f4b28a1f14dc8785da5f4862b1038d08", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18aa5ee209df502e48180b1b607520cfd370990f/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18aa5ee209df502e48180b1b607520cfd370990f/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=18aa5ee209df502e48180b1b607520cfd370990f", "patch": "@@ -319,7 +319,7 @@ impl CheckAttrVisitor<'tcx> {\n                             self.tcx\n                                 .sess\n                                 .struct_span_err(\n-                                    meta.span(),\n+                                    meta.name_value_literal_span().unwrap_or_else(|| meta.span()),\n                                     &format!(\n                                         \"{:?} character isn't allowed in `#[doc(alias = \\\"...\\\")]`\",\n                                         c,\n@@ -332,7 +332,7 @@ impl CheckAttrVisitor<'tcx> {\n                             self.tcx\n                                 .sess\n                                 .struct_span_err(\n-                                    meta.span(),\n+                                    meta.name_value_literal_span().unwrap_or_else(|| meta.span()),\n                                     \"`#[doc(alias = \\\"...\\\")]` cannot start or end with ' '\",\n                                 )\n                                 .emit();"}, {"sha": "b648e14360c0083094d4f17af68653a927979ddd", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18aa5ee209df502e48180b1b607520cfd370990f/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18aa5ee209df502e48180b1b607520cfd370990f/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=18aa5ee209df502e48180b1b607520cfd370990f", "patch": "@@ -214,7 +214,7 @@ pub enum SymbolManglingVersion {\n \n impl_stable_hash_via_hash!(SymbolManglingVersion);\n \n-#[derive(Clone, Copy, PartialEq, Hash)]\n+#[derive(Clone, Copy, Debug, PartialEq, Hash)]\n pub enum DebugInfo {\n     None,\n     Limited,"}, {"sha": "f08c828ecfff03419110275a0f0c3927608f0482", "filename": "library/std/src/sys/unix/kernel_copy.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/18aa5ee209df502e48180b1b607520cfd370990f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18aa5ee209df502e48180b1b607520cfd370990f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy.rs?ref=18aa5ee209df502e48180b1b607520cfd370990f", "patch": "@@ -56,6 +56,7 @@ use crate::mem::ManuallyDrop;\n use crate::net::TcpStream;\n use crate::os::unix::fs::FileTypeExt;\n use crate::os::unix::io::{AsRawFd, FromRawFd, RawFd};\n+use crate::os::unix::net::UnixStream;\n use crate::process::{ChildStderr, ChildStdin, ChildStdout};\n use crate::ptr;\n use crate::sync::atomic::{AtomicBool, Ordering};\n@@ -320,6 +321,34 @@ impl CopyWrite for &TcpStream {\n     }\n }\n \n+impl CopyRead for UnixStream {\n+    fn properties(&self) -> CopyParams {\n+        // avoid the stat syscall since we can be fairly sure it's a socket\n+        CopyParams(FdMeta::Socket, Some(self.as_raw_fd()))\n+    }\n+}\n+\n+impl CopyRead for &UnixStream {\n+    fn properties(&self) -> CopyParams {\n+        // avoid the stat syscall since we can be fairly sure it's a socket\n+        CopyParams(FdMeta::Socket, Some(self.as_raw_fd()))\n+    }\n+}\n+\n+impl CopyWrite for UnixStream {\n+    fn properties(&self) -> CopyParams {\n+        // avoid the stat syscall since we can be fairly sure it's a socket\n+        CopyParams(FdMeta::Socket, Some(self.as_raw_fd()))\n+    }\n+}\n+\n+impl CopyWrite for &UnixStream {\n+    fn properties(&self) -> CopyParams {\n+        // avoid the stat syscall since we can be fairly sure it's a socket\n+        CopyParams(FdMeta::Socket, Some(self.as_raw_fd()))\n+    }\n+}\n+\n impl CopyWrite for ChildStdin {\n     fn properties(&self) -> CopyParams {\n         CopyParams(FdMeta::Pipe, Some(self.as_raw_fd()))"}, {"sha": "554ebd94022341dfd08d7f1bc56cc3d8dba17bcb", "filename": "library/std/src/sys/unix/kernel_copy/tests.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/18aa5ee209df502e48180b1b607520cfd370990f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18aa5ee209df502e48180b1b607520cfd370990f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy%2Ftests.rs?ref=18aa5ee209df502e48180b1b607520cfd370990f", "patch": "@@ -118,6 +118,35 @@ fn bench_file_to_socket_copy(b: &mut test::Bencher) {\n     });\n }\n \n+#[bench]\n+fn bench_file_to_uds_copy(b: &mut test::Bencher) {\n+    const BYTES: usize = 128 * 1024;\n+    let src_path = temp_dir().join(\"uds-copy-bench-src\");\n+    let mut src = OpenOptions::new()\n+        .create(true)\n+        .truncate(true)\n+        .read(true)\n+        .write(true)\n+        .open(src_path)\n+        .unwrap();\n+    src.write(&vec![0u8; BYTES]).unwrap();\n+\n+    let (mut sink, mut sink_drainer) = crate::os::unix::net::UnixStream::pair().unwrap();\n+\n+    crate::thread::spawn(move || {\n+        let mut sink_buf = vec![0u8; 1024 * 1024];\n+        loop {\n+            sink_drainer.read(&mut sink_buf[..]).unwrap();\n+        }\n+    });\n+\n+    b.bytes = BYTES as u64;\n+    b.iter(|| {\n+        src.seek(SeekFrom::Start(0)).unwrap();\n+        assert_eq!(BYTES as u64, io::copy(&mut src, &mut sink).unwrap());\n+    });\n+}\n+\n #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n #[bench]\n fn bench_socket_pipe_socket_copy(b: &mut test::Bencher) {"}, {"sha": "3ba0ba6107531e1248794cccf652cd22891d4a18", "filename": "src/test/rustdoc-ui/check-doc-alias-attr.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/18aa5ee209df502e48180b1b607520cfd370990f/src%2Ftest%2Frustdoc-ui%2Fcheck-doc-alias-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18aa5ee209df502e48180b1b607520cfd370990f/src%2Ftest%2Frustdoc-ui%2Fcheck-doc-alias-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-doc-alias-attr.stderr?ref=18aa5ee209df502e48180b1b607520cfd370990f", "patch": "@@ -17,42 +17,42 @@ LL | #[doc(alias(\"bar\"))]\n    |       ^^^^^^^^^^^^\n \n error: '\\\"' character isn't allowed in `#[doc(alias = \"...\")]`\n-  --> $DIR/check-doc-alias-attr.rs:9:7\n+  --> $DIR/check-doc-alias-attr.rs:9:15\n    |\n LL | #[doc(alias = \"\\\"\")]\n-   |       ^^^^^^^^^^^^\n+   |               ^^^^\n \n error: '\\n' character isn't allowed in `#[doc(alias = \"...\")]`\n-  --> $DIR/check-doc-alias-attr.rs:10:7\n+  --> $DIR/check-doc-alias-attr.rs:10:15\n    |\n LL | #[doc(alias = \"\\n\")]\n-   |       ^^^^^^^^^^^^\n+   |               ^^^^\n \n error: '\\n' character isn't allowed in `#[doc(alias = \"...\")]`\n-  --> $DIR/check-doc-alias-attr.rs:11:7\n+  --> $DIR/check-doc-alias-attr.rs:11:15\n    |\n LL |   #[doc(alias = \"\n-   |  _______^\n+   |  _______________^\n LL | | \")]\n    | |_^\n \n error: '\\t' character isn't allowed in `#[doc(alias = \"...\")]`\n-  --> $DIR/check-doc-alias-attr.rs:13:7\n+  --> $DIR/check-doc-alias-attr.rs:13:15\n    |\n LL | #[doc(alias = \"\\t\")]\n-   |       ^^^^^^^^^^^^\n+   |               ^^^^\n \n error: `#[doc(alias = \"...\")]` cannot start or end with ' '\n-  --> $DIR/check-doc-alias-attr.rs:14:7\n+  --> $DIR/check-doc-alias-attr.rs:14:15\n    |\n LL | #[doc(alias = \" hello\")]\n-   |       ^^^^^^^^^^^^^^^^\n+   |               ^^^^^^^^\n \n error: `#[doc(alias = \"...\")]` cannot start or end with ' '\n-  --> $DIR/check-doc-alias-attr.rs:15:7\n+  --> $DIR/check-doc-alias-attr.rs:15:15\n    |\n LL | #[doc(alias = \"hello \")]\n-   |       ^^^^^^^^^^^^^^^^\n+   |               ^^^^^^^^\n \n error: aborting due to 9 previous errors\n "}, {"sha": "a58e91c5aa74ad110f7a1a07d42625239393b054", "filename": "src/test/rustdoc-ui/doc-alias-crate-level.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18aa5ee209df502e48180b1b607520cfd370990f/src%2Ftest%2Frustdoc-ui%2Fdoc-alias-crate-level.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18aa5ee209df502e48180b1b607520cfd370990f/src%2Ftest%2Frustdoc-ui%2Fdoc-alias-crate-level.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-alias-crate-level.stderr?ref=18aa5ee209df502e48180b1b607520cfd370990f", "patch": "@@ -1,8 +1,8 @@\n error: '\\'' character isn't allowed in `#[doc(alias = \"...\")]`\n-  --> $DIR/doc-alias-crate-level.rs:5:7\n+  --> $DIR/doc-alias-crate-level.rs:5:15\n    |\n LL | #[doc(alias = \"shouldn't work!\")]\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |               ^^^^^^^^^^^^^^^^^\n \n error: `#![doc(alias = \"...\")]` isn't allowed as a crate level attribute\n   --> $DIR/doc-alias-crate-level.rs:3:8"}, {"sha": "a92298d1633800a4c1d0962ff8deef254df2403f", "filename": "src/test/ui/check-doc-alias-attr.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/18aa5ee209df502e48180b1b607520cfd370990f/src%2Ftest%2Fui%2Fcheck-doc-alias-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18aa5ee209df502e48180b1b607520cfd370990f/src%2Ftest%2Fui%2Fcheck-doc-alias-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-doc-alias-attr.stderr?ref=18aa5ee209df502e48180b1b607520cfd370990f", "patch": "@@ -17,42 +17,42 @@ LL | #[doc(alias(\"bar\"))]\n    |       ^^^^^^^^^^^^\n \n error: '\\\"' character isn't allowed in `#[doc(alias = \"...\")]`\n-  --> $DIR/check-doc-alias-attr.rs:10:7\n+  --> $DIR/check-doc-alias-attr.rs:10:15\n    |\n LL | #[doc(alias = \"\\\"\")]\n-   |       ^^^^^^^^^^^^\n+   |               ^^^^\n \n error: '\\n' character isn't allowed in `#[doc(alias = \"...\")]`\n-  --> $DIR/check-doc-alias-attr.rs:11:7\n+  --> $DIR/check-doc-alias-attr.rs:11:15\n    |\n LL | #[doc(alias = \"\\n\")]\n-   |       ^^^^^^^^^^^^\n+   |               ^^^^\n \n error: '\\n' character isn't allowed in `#[doc(alias = \"...\")]`\n-  --> $DIR/check-doc-alias-attr.rs:12:7\n+  --> $DIR/check-doc-alias-attr.rs:12:15\n    |\n LL |   #[doc(alias = \"\n-   |  _______^\n+   |  _______________^\n LL | | \")]\n    | |_^\n \n error: '\\t' character isn't allowed in `#[doc(alias = \"...\")]`\n-  --> $DIR/check-doc-alias-attr.rs:14:7\n+  --> $DIR/check-doc-alias-attr.rs:14:15\n    |\n LL | #[doc(alias = \"\\t\")]\n-   |       ^^^^^^^^^^^^\n+   |               ^^^^\n \n error: `#[doc(alias = \"...\")]` cannot start or end with ' '\n-  --> $DIR/check-doc-alias-attr.rs:15:7\n+  --> $DIR/check-doc-alias-attr.rs:15:15\n    |\n LL | #[doc(alias = \" hello\")]\n-   |       ^^^^^^^^^^^^^^^^\n+   |               ^^^^^^^^\n \n error: `#[doc(alias = \"...\")]` cannot start or end with ' '\n-  --> $DIR/check-doc-alias-attr.rs:16:7\n+  --> $DIR/check-doc-alias-attr.rs:16:15\n    |\n LL | #[doc(alias = \"hello \")]\n-   |       ^^^^^^^^^^^^^^^^\n+   |               ^^^^^^^^\n \n error: aborting due to 9 previous errors\n "}, {"sha": "32b42cf9be7662e978880229705a039299c21303", "filename": "src/test/ui/doc-alias-crate-level.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18aa5ee209df502e48180b1b607520cfd370990f/src%2Ftest%2Fui%2Fdoc-alias-crate-level.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18aa5ee209df502e48180b1b607520cfd370990f/src%2Ftest%2Fui%2Fdoc-alias-crate-level.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdoc-alias-crate-level.stderr?ref=18aa5ee209df502e48180b1b607520cfd370990f", "patch": "@@ -1,8 +1,8 @@\n error: '\\'' character isn't allowed in `#[doc(alias = \"...\")]`\n-  --> $DIR/doc-alias-crate-level.rs:7:8\n+  --> $DIR/doc-alias-crate-level.rs:7:16\n    |\n LL | #![doc(alias = \"shouldn't work!\")]\n-   |        ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}]}