{"sha": "c01e0502e7f993520e516b3a77ab7f459e21456d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMWUwNTAyZTdmOTkzNTIwZTUxNmIzYTc3YWI3ZjQ1OWUyMTQ1NmQ=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-08-31T19:37:05Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-10-01T12:22:57Z"}, "message": "check upvars in closures that are in statics\n\nFixes #27890\nFixes #28099\nFixes #28113", "tree": {"sha": "c0e30381b2f5981a5a07efa9903b3c11ab4b027d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0e30381b2f5981a5a07efa9903b3c11ab4b027d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c01e0502e7f993520e516b3a77ab7f459e21456d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c01e0502e7f993520e516b3a77ab7f459e21456d", "html_url": "https://github.com/rust-lang/rust/commit/c01e0502e7f993520e516b3a77ab7f459e21456d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c01e0502e7f993520e516b3a77ab7f459e21456d/comments", "author": null, "committer": null, "parents": [{"sha": "78edd4f3a0c614c8deab030351ece9baade848cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/78edd4f3a0c614c8deab030351ece9baade848cc", "html_url": "https://github.com/rust-lang/rust/commit/78edd4f3a0c614c8deab030351ece9baade848cc"}], "stats": {"total": 74, "additions": 73, "deletions": 1}, "files": [{"sha": "4069cbb170cac8cde4164b6b0f8e11d5c9a9cd9f", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c01e0502e7f993520e516b3a77ab7f459e21456d/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c01e0502e7f993520e516b3a77ab7f459e21456d/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=c01e0502e7f993520e516b3a77ab7f459e21456d", "patch": "@@ -4124,8 +4124,13 @@ fn check_const_with_ty<'a, 'tcx>(fcx: &FnCtxt<'a, 'tcx>,\n \n     check_expr_with_hint(fcx, e, declty);\n     demand::coerce(fcx, e.span, declty, e);\n-    fcx.select_all_obligations_or_error();\n+\n+    fcx.select_all_obligations_and_apply_defaults();\n+    upvar::closure_analyze_const(&fcx, e);\n+    fcx.select_obligations_where_possible();\n     fcx.check_casts();\n+    fcx.select_all_obligations_or_error();\n+\n     regionck::regionck_expr(fcx, e);\n     writeback::resolve_type_vars_in_expr(fcx, e);\n }"}, {"sha": "10d7c4620e7d3ffbb92e7cd0ebebbae368476919", "filename": "src/librustc_typeck/check/upvar.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c01e0502e7f993520e516b3a77ab7f459e21456d/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c01e0502e7f993520e516b3a77ab7f459e21456d/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs?ref=c01e0502e7f993520e516b3a77ab7f459e21456d", "patch": "@@ -73,6 +73,20 @@ pub fn closure_analyze_fn(fcx: &FnCtxt,\n     assert!(fcx.inh.deferred_call_resolutions.borrow().is_empty());\n }\n \n+pub fn closure_analyze_const(fcx: &FnCtxt,\n+                             body: &hir::Expr)\n+{\n+    let mut seed = SeedBorrowKind::new(fcx);\n+    seed.visit_expr(body);\n+    let closures_with_inferred_kinds = seed.closures_with_inferred_kinds;\n+\n+    let mut adjust = AdjustBorrowKind::new(fcx, &closures_with_inferred_kinds);\n+    adjust.visit_expr(body);\n+\n+    // it's our job to process these.\n+    assert!(fcx.inh.deferred_call_resolutions.borrow().is_empty());\n+}\n+\n ///////////////////////////////////////////////////////////////////////////\n // SEED BORROW KIND\n "}, {"sha": "16b0e8638de3916bb720e9e8ebb5f3a751d42cdd", "filename": "src/test/compile-fail/borrowck-in-static.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c01e0502e7f993520e516b3a77ab7f459e21456d/src%2Ftest%2Fcompile-fail%2Fborrowck-in-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c01e0502e7f993520e516b3a77ab7f459e21456d/src%2Ftest%2Fcompile-fail%2Fborrowck-in-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-in-static.rs?ref=c01e0502e7f993520e516b3a77ab7f459e21456d", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// check that borrowck looks inside consts/statics\n+\n+static FN : &'static (Fn() -> (Box<Fn()->Box<i32>>) + Sync) = &|| {\n+    let x = Box::new(0);\n+    Box::new(|| x) //~ ERROR cannot move out of captured outer variable\n+};\n+\n+fn main() {\n+    let f = (FN)();\n+    f();\n+    f();\n+}"}, {"sha": "c5c4fb070178a1f85d63d3030e25ae8b71084761", "filename": "src/test/compile-fail/issue-28113.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c01e0502e7f993520e516b3a77ab7f459e21456d/src%2Ftest%2Fcompile-fail%2Fissue-28113.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c01e0502e7f993520e516b3a77ab7f459e21456d/src%2Ftest%2Fcompile-fail%2Fissue-28113.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28113.rs?ref=c01e0502e7f993520e516b3a77ab7f459e21456d", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+const X: u8 =\n+    || -> u8 { 5 }() //~ ERROR function calls in constants are limited\n+;\n+\n+fn main() {}"}, {"sha": "a33882a8331858e890934be1b262944105ab4212", "filename": "src/test/run-pass/issue-27890.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c01e0502e7f993520e516b3a77ab7f459e21456d/src%2Ftest%2Frun-pass%2Fissue-27890.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c01e0502e7f993520e516b3a77ab7f459e21456d/src%2Ftest%2Frun-pass%2Fissue-27890.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-27890.rs?ref=c01e0502e7f993520e516b3a77ab7f459e21456d", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+static PLUS_ONE: &'static (Fn(i32) -> i32 + Sync) = (&|x: i32| { x + 1 })\n+    as &'static (Fn(i32) -> i32 + Sync);\n+\n+fn main() {\n+    assert_eq!(PLUS_ONE(2), 3);\n+}"}]}