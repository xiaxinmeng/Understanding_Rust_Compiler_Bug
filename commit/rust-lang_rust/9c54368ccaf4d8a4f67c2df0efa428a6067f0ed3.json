{"sha": "9c54368ccaf4d8a4f67c2df0efa428a6067f0ed3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNTQzNjhjY2FmNGQ4YTRmNjdjMmRmMGVmYTQyOGE2MDY3ZjBlZDM=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-08-29T09:07:20Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-08-29T09:07:20Z"}, "message": "Exclude TERM env var by default", "tree": {"sha": "cab2014f47ba648f5e2f57038ef20e8ce8d7c462", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cab2014f47ba648f5e2f57038ef20e8ce8d7c462"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c54368ccaf4d8a4f67c2df0efa428a6067f0ed3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c54368ccaf4d8a4f67c2df0efa428a6067f0ed3", "html_url": "https://github.com/rust-lang/rust/commit/9c54368ccaf4d8a4f67c2df0efa428a6067f0ed3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c54368ccaf4d8a4f67c2df0efa428a6067f0ed3/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee8afead513f824334e7aab1555fdb7167b68fa9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee8afead513f824334e7aab1555fdb7167b68fa9", "html_url": "https://github.com/rust-lang/rust/commit/ee8afead513f824334e7aab1555fdb7167b68fa9"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "d0b5abbaf181920ea2b15f4f94d38e9df264033c", "filename": "src/shims/env.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c54368ccaf4d8a4f67c2df0efa428a6067f0ed3/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c54368ccaf4d8a4f67c2df0efa428a6067f0ed3/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=9c54368ccaf4d8a4f67c2df0efa428a6067f0ed3", "patch": "@@ -15,8 +15,10 @@ pub struct EnvVars {\n impl EnvVars {\n     pub(crate) fn init<'mir, 'tcx>(\n         ecx: &mut InterpCx<'mir, 'tcx, Evaluator<'tcx>>,\n-        excluded_env_vars: Vec<String>,\n+        mut excluded_env_vars: Vec<String>,\n     ) {\n+        // Exclude TERM var to avoid calls to the file system\n+        excluded_env_vars.push(\"TERM\".to_owned());\n         if ecx.machine.communicate {\n             for (name, value) in std::env::vars() {\n                 if !excluded_env_vars.contains(&name) {"}]}