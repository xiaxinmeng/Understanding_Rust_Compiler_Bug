{"sha": "812fd6dacaf070859e7adf96a0371ba8b01f6953", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxMmZkNmRhY2FmMDcwODU5ZTdhZGY5NmEwMzcxYmE4YjAxZjY5NTM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-07-29T15:22:40Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-07-29T15:22:40Z"}, "message": "Implement some intrinsics", "tree": {"sha": "442708d81aa645e0bb59cd560c65bd852ef55bc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/442708d81aa645e0bb59cd560c65bd852ef55bc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/812fd6dacaf070859e7adf96a0371ba8b01f6953", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/812fd6dacaf070859e7adf96a0371ba8b01f6953", "html_url": "https://github.com/rust-lang/rust/commit/812fd6dacaf070859e7adf96a0371ba8b01f6953", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/812fd6dacaf070859e7adf96a0371ba8b01f6953/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc4f2341150e4c8356a8e81ad9e0a6908d10c5df", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc4f2341150e4c8356a8e81ad9e0a6908d10c5df", "html_url": "https://github.com/rust-lang/rust/commit/dc4f2341150e4c8356a8e81ad9e0a6908d10c5df"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "1f9a5e0755b46a12f365415c0b7821ddd0bf5469", "filename": "example.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/812fd6dacaf070859e7adf96a0371ba8b01f6953/example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812fd6dacaf070859e7adf96a0371ba8b01f6953/example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example.rs?ref=812fd6dacaf070859e7adf96a0371ba8b01f6953", "patch": "@@ -147,3 +147,7 @@ fn eq_char(a: char, b: char) -> bool {\n unsafe fn transmute(c: char) -> u32 {\n     intrinsics::transmute(c)\n }\n+\n+unsafe fn call_uninit() -> u8 {\n+    intrinsics::uninit()\n+}"}, {"sha": "9ecfd5113fffa420efb5c49f7d90aeb7e1d28082", "filename": "mini_core.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/812fd6dacaf070859e7adf96a0371ba8b01f6953/mini_core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812fd6dacaf070859e7adf96a0371ba8b01f6953/mini_core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mini_core.rs?ref=812fd6dacaf070859e7adf96a0371ba8b01f6953", "patch": "@@ -118,5 +118,6 @@ pub mod intrinsics {\n         pub fn size_of<T>() -> usize;\n         pub fn copy<T>(src: *const T, dst: *mut T, count: usize);\n         pub fn transmute<T, U>(e: T) -> U;\n+        pub fn uninit<T>() -> T;\n     }\n }"}, {"sha": "cc22ef06080721e38f8e751040ef7313732531d7", "filename": "src/abi.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/812fd6dacaf070859e7adf96a0371ba8b01f6953/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812fd6dacaf070859e7adf96a0371ba8b01f6953/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=812fd6dacaf070859e7adf96a0371ba8b01f6953", "patch": "@@ -252,6 +252,9 @@ pub fn codegen_call<'a, 'tcx: 'a>(\n             let usize_layout = fx.layout_of(fx.tcx.types.usize);\n             let ret = return_place.unwrap();\n             match intrinsic {\n+                \"abort\" => {\n+                    fx.bcx.ins().trap(TrapCode::User(!0 - 1));\n+                }\n                 \"copy\" | \"copy_nonoverlapping\" => {\n                     /*let elem_ty = substs.type_at(0);\n                     assert_eq!(args.len(), 3);\n@@ -266,6 +269,18 @@ pub fn codegen_call<'a, 'tcx: 'a>(\n                     let size_of = CValue::const_val(fx, usize_layout.ty, size_of as i64);\n                     ret.write_cvalue(fx, size_of);\n                 }\n+                \"type_id\" => {\n+                    assert_eq!(args.len(), 0);\n+                    let type_id = fx.tcx.type_id_hash(substs.type_at(0));\n+                    let type_id = CValue::const_val(fx, usize_layout.ty, type_id as i64);\n+                    ret.write_cvalue(fx, type_id);\n+                }\n+                \"min_align_of\" => {\n+                    assert_eq!(args.len(), 0);\n+                    let min_align = fx.layout_of(substs.type_at(0)).align.abi();\n+                    let min_align = CValue::const_val(fx, usize_layout.ty, min_align as i64);\n+                    ret.write_cvalue(fx, min_align);\n+                }\n                 _ if intrinsic.starts_with(\"unchecked_\") => {\n                     assert_eq!(args.len(), 2);\n                     let lhs = args[0].load_value(fx);\n@@ -304,6 +319,20 @@ pub fn codegen_call<'a, 'tcx: 'a>(\n                     let dst_layout = fx.layout_of(dst_ty);\n                     ret.write_cvalue(fx, CValue::ByRef(addr, dst_layout))\n                 }\n+                \"uninit\" => {\n+                    assert_eq!(args.len(), 0);\n+                    let ty = substs.type_at(0);\n+                    let layout = fx.layout_of(ty);\n+                    let stack_slot = fx.bcx.create_stack_slot(StackSlotData {\n+                        kind: StackSlotKind::ExplicitSlot,\n+                        size: layout.size.bytes() as u32,\n+                        offset: None,\n+                    });\n+\n+                    let uninit_place = CPlace::from_stack_slot(fx, stack_slot, ty);\n+                    let uninit_val = uninit_place.to_cvalue(fx);\n+                    ret.write_cvalue(fx, uninit_val);\n+                }\n                 _ => fx.tcx.sess.fatal(&format!(\"unsupported intrinsic {}\", intrinsic)),\n             }\n             if let Some((_, dest)) = *destination {"}, {"sha": "e65abd0ddd7b6f31da8db8d05137661e88fcbcde", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812fd6dacaf070859e7adf96a0371ba8b01f6953/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812fd6dacaf070859e7adf96a0371ba8b01f6953/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=812fd6dacaf070859e7adf96a0371ba8b01f6953", "patch": "@@ -501,7 +501,7 @@ pub fn trans_int_binop<'a, 'tcx: 'a>(fx: &mut FunctionCx<'a, 'tcx>, bin_op: BinO\n \n fn trans_float_binop<'a, 'tcx: 'a>(fx: &mut FunctionCx<'a, 'tcx>, bin_op: BinOp, lhs: Value, rhs: Value, ty: Ty<'tcx>) -> CValue<'tcx> {\n     let res = binop_match! {\n-        fx, bin_op, false, lhs, rhs, \"bool\";\n+        fx, bin_op, false, lhs, rhs, \"float\";\n         Add (_) fadd;\n         Sub (_) fsub;\n         Mul (_) fmul;"}]}