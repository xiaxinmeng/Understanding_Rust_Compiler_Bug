{"sha": "18e7a1b799517790b8702aae11fecb1743918352", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ZTdhMWI3OTk1MTc3OTBiODcwMmFhZTExZmVjYjE3NDM5MTgzNTI=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-25T18:16:05Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-25T18:16:05Z"}, "message": "Add `Res::ns()` instead of `matches_ns()`", "tree": {"sha": "02a9876ca85b0d9caeccd30dbb93536ac36059b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02a9876ca85b0d9caeccd30dbb93536ac36059b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18e7a1b799517790b8702aae11fecb1743918352", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18e7a1b799517790b8702aae11fecb1743918352", "html_url": "https://github.com/rust-lang/rust/commit/18e7a1b799517790b8702aae11fecb1743918352", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18e7a1b799517790b8702aae11fecb1743918352/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c35007dbbe4846c641b5edad9fddf3f72a5a035a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c35007dbbe4846c641b5edad9fddf3f72a5a035a", "html_url": "https://github.com/rust-lang/rust/commit/c35007dbbe4846c641b5edad9fddf3f72a5a035a"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "d61db171aa225474a97dbf17e971447a497bc3de", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18e7a1b799517790b8702aae11fecb1743918352/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e7a1b799517790b8702aae11fecb1743918352/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=18e7a1b799517790b8702aae11fecb1743918352", "patch": "@@ -1145,7 +1145,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                 if let TyKind::Path(ref qself, ref path) = ty.kind {\n                     if let Some(partial_res) = self.resolver.get_partial_res(ty.id) {\n                         let res = partial_res.base_res();\n-                        if !res.matches_ns(Namespace::TypeNS) {\n+                        if res.ns().map(|ns| ns != Namespace::TypeNS).unwrap_or(false) {\n                             debug!(\n                                 \"lower_generic_arg: Lowering type argument as const argument: {:?}\",\n                                 ty,"}, {"sha": "67f20aa848f13b328636f76da4e7fa07fcbd7954", "filename": "src/librustc_hir/def.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/18e7a1b799517790b8702aae11fecb1743918352/src%2Flibrustc_hir%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e7a1b799517790b8702aae11fecb1743918352/src%2Flibrustc_hir%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fdef.rs?ref=18e7a1b799517790b8702aae11fecb1743918352", "patch": "@@ -451,13 +451,14 @@ impl<Id> Res<Id> {\n         }\n     }\n \n-    pub fn matches_ns(&self, ns: Namespace) -> bool {\n+    /// Returns `None` if this is `Res::Err`\n+    pub fn ns(&self) -> Option<Namespace> {\n         match self {\n-            Res::Def(kind, ..) => kind.ns() == Some(ns),\n-            Res::PrimTy(..) | Res::SelfTy(..) | Res::ToolMod => ns == Namespace::TypeNS,\n-            Res::SelfCtor(..) | Res::Local(..) => ns == Namespace::ValueNS,\n-            Res::NonMacroAttr(..) => ns == Namespace::MacroNS,\n-            Res::Err => true,\n+            Res::Def(kind, ..) => kind.ns(),\n+            Res::PrimTy(..) | Res::SelfTy(..) | Res::ToolMod => Some(Namespace::TypeNS),\n+            Res::SelfCtor(..) | Res::Local(..) => Some(Namespace::ValueNS),\n+            Res::NonMacroAttr(..) => Some(Namespace::MacroNS),\n+            Res::Err => None,\n         }\n     }\n }"}]}