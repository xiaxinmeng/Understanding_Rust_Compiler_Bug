{"sha": "53b5b2fdaa071d96edec4d840e0d9682f6794d1a", "node_id": "C_kwDOAAsO6NoAKDUzYjViMmZkYWEwNzFkOTZlZGVjNGQ4NDBlMGQ5NjgyZjY3OTRkMWE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-03T14:02:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-03T14:02:10Z"}, "message": "Merge #10596\n\n10596: internal: Set server status to warning when proc-macro sources change r=Veykril a=Veykril\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/10027\r\n![image](https://user-images.githubusercontent.com/3757771/138102552-208d3edf-a843-49e6-9f48-1e911f54a4ba.png)\r\n\r\nIt feels wrong using the database in this part of the code, but this was the only way to figure out whether a file belongs to a proc-macro that I could think of.\r\n\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "e17aa86c2dbc758f07e9eddef667e2827ce556c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e17aa86c2dbc758f07e9eddef667e2827ce556c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53b5b2fdaa071d96edec4d840e0d9682f6794d1a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhgpZiCRBK7hj4Ov3rIwAAlRkIAJfBUkbGMuSmBz6ERQNh33U+\nqN8wnrCWnvsvD4mlz99eX75w2a9nO55YuGlcvIQZViz8VQsbVbqyTzrEamZtJTqw\nDZXq1Lo/aEoePYG3grRwk+HIVIT/Y7vQifkchfOVrgNKx/UvAw4XW1f+IlrvzYHZ\nptPXGPDP74srBaZHB8tTBddR9Uwab+Ob0jSmt+LCnK0ltlVHxxlH8XpCXqaYmMub\nMgCZVHpcalOoyWWvqzXhAEpxEFevDqnsePtGXy3rYmVRV19cuO7LsLFVKjIJJ/+V\nVLNWqMstNWCzan4lTypTQPOzzsDp6uB7ksLHv3V6dtCiQfMyPJCfw1/Op2v1H2E=\n=MQ/j\n-----END PGP SIGNATURE-----\n", "payload": "tree e17aa86c2dbc758f07e9eddef667e2827ce556c3\nparent 71f5dae4b62139e40d1f1954bff69575a188dbe6\nparent 1d80302b76ff0b1ea71b000d9b6ccfd4badaaf7b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1635948130 +0000\ncommitter GitHub <noreply@github.com> 1635948130 +0000\n\nMerge #10596\n\n10596: internal: Set server status to warning when proc-macro sources change r=Veykril a=Veykril\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/10027\r\n![image](https://user-images.githubusercontent.com/3757771/138102552-208d3edf-a843-49e6-9f48-1e911f54a4ba.png)\r\n\r\nIt feels wrong using the database in this part of the code, but this was the only way to figure out whether a file belongs to a proc-macro that I could think of.\r\n\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53b5b2fdaa071d96edec4d840e0d9682f6794d1a", "html_url": "https://github.com/rust-lang/rust/commit/53b5b2fdaa071d96edec4d840e0d9682f6794d1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53b5b2fdaa071d96edec4d840e0d9682f6794d1a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71f5dae4b62139e40d1f1954bff69575a188dbe6", "url": "https://api.github.com/repos/rust-lang/rust/commits/71f5dae4b62139e40d1f1954bff69575a188dbe6", "html_url": "https://github.com/rust-lang/rust/commit/71f5dae4b62139e40d1f1954bff69575a188dbe6"}, {"sha": "1d80302b76ff0b1ea71b000d9b6ccfd4badaaf7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d80302b76ff0b1ea71b000d9b6ccfd4badaaf7b", "html_url": "https://github.com/rust-lang/rust/commit/1d80302b76ff0b1ea71b000d9b6ccfd4badaaf7b"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "bef943464a87a0865ffd665e7003f22b29aafd31", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/53b5b2fdaa071d96edec4d840e0d9682f6794d1a/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b5b2fdaa071d96edec4d840e0d9682f6794d1a/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=53b5b2fdaa071d96edec4d840e0d9682f6794d1a", "patch": "@@ -8,7 +8,7 @@ use std::{sync::Arc, time::Instant};\n use crossbeam_channel::{unbounded, Receiver, Sender};\n use flycheck::FlycheckHandle;\n use ide::{Analysis, AnalysisHost, Cancellable, Change, FileId};\n-use ide_db::base_db::CrateId;\n+use ide_db::base_db::{CrateId, FileLoader, SourceDatabase};\n use lsp_types::{SemanticTokens, Url};\n use parking_lot::{Mutex, RwLock};\n use proc_macro_api::ProcMacroServer;\n@@ -58,6 +58,7 @@ pub(crate) struct GlobalState {\n     pub(crate) mem_docs: MemDocs,\n     pub(crate) semantic_tokens_cache: Arc<Mutex<FxHashMap<Url, SemanticTokens>>>,\n     pub(crate) shutdown_requested: bool,\n+    pub(crate) proc_macro_changed: bool,\n     pub(crate) last_reported_status: Option<lsp_ext::ServerStatusParams>,\n     pub(crate) source_root_config: SourceRootConfig,\n     pub(crate) proc_macro_client: Option<ProcMacroServer>,\n@@ -147,6 +148,7 @@ impl GlobalState {\n             mem_docs: MemDocs::default(),\n             semantic_tokens_cache: Arc::new(Default::default()),\n             shutdown_requested: false,\n+            proc_macro_changed: false,\n             last_reported_status: None,\n             source_root_config: SourceRootConfig::default(),\n             proc_macro_client: None,\n@@ -187,6 +189,15 @@ impl GlobalState {\n             }\n \n             for file in changed_files {\n+                if !file.is_created_or_deleted() {\n+                    let crates = self.analysis_host.raw_database().relevant_crates(file.file_id);\n+                    let crate_graph = self.analysis_host.raw_database().crate_graph();\n+\n+                    if crates.iter().any(|&krate| !crate_graph[krate].proc_macro.is_empty()) {\n+                        self.proc_macro_changed = true;\n+                    }\n+                }\n+\n                 if let Some(path) = vfs.file_path(file.file_id).as_path() {\n                     let path = path.to_path_buf();\n                     if reload::should_refresh_for_change(&path, file.change_kind) {"}, {"sha": "4a1060596bef04d1a3ee2d200f6373f154312089", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/53b5b2fdaa071d96edec4d840e0d9682f6794d1a/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b5b2fdaa071d96edec4d840e0d9682f6794d1a/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=53b5b2fdaa071d96edec4d840e0d9682f6794d1a", "patch": "@@ -561,7 +561,7 @@ impl GlobalState {\n                 s.shutdown_requested = true;\n                 Ok(())\n             })?\n-            .on_sync_mut::<lsp_ext::MemoryUsage>(|s, p| handlers::handle_memory_usage(s, p))?\n+            .on_sync_mut::<lsp_ext::MemoryUsage>(handlers::handle_memory_usage)?\n             .on_sync::<lsp_ext::JoinLines>(handlers::handle_join_lines)?\n             .on_sync::<lsp_ext::OnEnter>(handlers::handle_on_enter)?\n             .on_sync::<lsp_types::request::SelectionRangeRequest>(handlers::handle_selection_range)?"}, {"sha": "7ba569717626d0eaa19d323e12b950ef8a94a837", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/53b5b2fdaa071d96edec4d840e0d9682f6794d1a/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b5b2fdaa071d96edec4d840e0d9682f6794d1a/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=53b5b2fdaa071d96edec4d840e0d9682f6794d1a", "patch": "@@ -66,6 +66,11 @@ impl GlobalState {\n             message: None,\n         };\n \n+        if self.proc_macro_changed {\n+            status.health = lsp_ext::Health::Warning;\n+            status.message =\n+                Some(\"Reload required due to source changes of a procedural macro.\".into())\n+        }\n         if let Some(error) = self.fetch_build_data_error() {\n             status.health = lsp_ext::Health::Warning;\n             status.message = Some(error)"}]}