{"sha": "fb632c747d953d615575850477d4662802be320f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNjMyYzc0N2Q5NTNkNjE1NTc1ODUwNDc3ZDQ2NjI4MDJiZTMyMGY=", "commit": {"author": {"name": "Avi Dessauer", "email": "avi.the.coder@gmail.com", "date": "2020-06-03T19:21:47Z"}, "committer": {"name": "Avi Dessauer", "email": "avi.the.coder@gmail.com", "date": "2020-06-04T00:16:38Z"}, "message": "Parse default unsafe & default const", "tree": {"sha": "866067cda9582a719d3a139b1d04ad637be463b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/866067cda9582a719d3a139b1d04ad637be463b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb632c747d953d615575850477d4662802be320f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb632c747d953d615575850477d4662802be320f", "html_url": "https://github.com/rust-lang/rust/commit/fb632c747d953d615575850477d4662802be320f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb632c747d953d615575850477d4662802be320f/comments", "author": {"login": "Avi-D-coder", "id": 29133776, "node_id": "MDQ6VXNlcjI5MTMzNzc2", "avatar_url": "https://avatars.githubusercontent.com/u/29133776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avi-D-coder", "html_url": "https://github.com/Avi-D-coder", "followers_url": "https://api.github.com/users/Avi-D-coder/followers", "following_url": "https://api.github.com/users/Avi-D-coder/following{/other_user}", "gists_url": "https://api.github.com/users/Avi-D-coder/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avi-D-coder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avi-D-coder/subscriptions", "organizations_url": "https://api.github.com/users/Avi-D-coder/orgs", "repos_url": "https://api.github.com/users/Avi-D-coder/repos", "events_url": "https://api.github.com/users/Avi-D-coder/events{/privacy}", "received_events_url": "https://api.github.com/users/Avi-D-coder/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Avi-D-coder", "id": 29133776, "node_id": "MDQ6VXNlcjI5MTMzNzc2", "avatar_url": "https://avatars.githubusercontent.com/u/29133776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avi-D-coder", "html_url": "https://github.com/Avi-D-coder", "followers_url": "https://api.github.com/users/Avi-D-coder/followers", "following_url": "https://api.github.com/users/Avi-D-coder/following{/other_user}", "gists_url": "https://api.github.com/users/Avi-D-coder/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avi-D-coder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avi-D-coder/subscriptions", "organizations_url": "https://api.github.com/users/Avi-D-coder/orgs", "repos_url": "https://api.github.com/users/Avi-D-coder/repos", "events_url": "https://api.github.com/users/Avi-D-coder/events{/privacy}", "received_events_url": "https://api.github.com/users/Avi-D-coder/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65a3cc21edd8acd93b728d094514bafddcb1757a", "url": "https://api.github.com/repos/rust-lang/rust/commits/65a3cc21edd8acd93b728d094514bafddcb1757a", "html_url": "https://github.com/rust-lang/rust/commit/65a3cc21edd8acd93b728d094514bafddcb1757a"}], "stats": {"total": 60, "additions": 45, "deletions": 15}, "files": [{"sha": "41f8bb0b6e0173f6a2fd2b80c9baa246c4838f7a", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fb632c747d953d615575850477d4662802be320f/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb632c747d953d615575850477d4662802be320f/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=fb632c747d953d615575850477d4662802be320f", "patch": "@@ -118,7 +118,15 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n         && p.at_contextual_kw(\"default\")\n         && (match p.nth(1) {\n             T![impl] => true,\n-            T![fn] | T![type] => {\n+            T![unsafe] => {\n+                if T![impl] == p.nth(2) {\n+                    p.bump_remap(T![default]);\n+                    p.bump_remap(T![unsafe]);\n+                    has_mods = true;\n+                }\n+                false\n+            }\n+            T![fn] | T![type] | T![const] => {\n                 if let ItemFlavor::Mod = flavor {\n                     true\n                 } else {\n@@ -187,6 +195,9 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n         // test default_impl\n         // default impl Foo {}\n \n+        // test default_unsafe_impl\n+        // default unsafe impl Foo {}\n+\n         // test_err default_fn_type\n         // trait T {\n         //     default type T = Bar;\n@@ -199,6 +210,19 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n         //     default fn foo() {}\n         // }\n \n+        // test_err default_const\n+        // trait T {\n+        //   default const f: u8 = 0;\n+        // }\n+\n+        // test default_const\n+        // impl T for Foo {\n+        //   default const f: u8 = 0;\n+        // }\n+        T![const] => {\n+            consts::const_def(p, m);\n+        }\n+\n         // test unsafe_default_impl\n         // unsafe default impl Foo {}\n         T![impl] => {"}, {"sha": "53f7ebaf9a724bce2117a965d437556e91125894", "filename": "crates/ra_syntax/test_data/parser/inline/err/0010_wrong_order_fns.rast", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/fb632c747d953d615575850477d4662802be320f/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/fb632c747d953d615575850477d4662802be320f/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rast?ref=fb632c747d953d615575850477d4662802be320f", "patch": "@@ -17,23 +17,29 @@ SOURCE_FILE@0..50\n       L_CURLY@22..23 \"{\"\n       R_CURLY@23..24 \"}\"\n   WHITESPACE@24..25 \"\\n\"\n-  ERROR@25..31\n+  CONST_DEF@25..46\n     UNSAFE_KW@25..31 \"unsafe\"\n-  WHITESPACE@31..32 \" \"\n-  FN_DEF@32..49\n+    WHITESPACE@31..32 \" \"\n     CONST_KW@32..37 \"const\"\n     WHITESPACE@37..38 \" \"\n-    FN_KW@38..40 \"fn\"\n+    ERROR@38..40\n+      FN_KW@38..40 \"fn\"\n     WHITESPACE@40..41 \" \"\n-    NAME@41..44\n-      IDENT@41..44 \"bar\"\n-    PARAM_LIST@44..46\n-      L_PAREN@44..45 \"(\"\n-      R_PAREN@45..46 \")\"\n-    WHITESPACE@46..47 \" \"\n-    BLOCK_EXPR@47..49\n-      L_CURLY@47..48 \"{\"\n-      R_CURLY@48..49 \"}\"\n+    PATH_TYPE@41..46\n+      PATH@41..46\n+        PATH_SEGMENT@41..46\n+          NAME_REF@41..44\n+            IDENT@41..44 \"bar\"\n+          PARAM_LIST@44..46\n+            L_PAREN@44..45 \"(\"\n+            R_PAREN@45..46 \")\"\n+  WHITESPACE@46..47 \" \"\n+  ERROR@47..49\n+    L_CURLY@47..48 \"{\"\n+    R_CURLY@48..49 \"}\"\n   WHITESPACE@49..50 \"\\n\"\n error 6..6: expected existential, fn, trait or impl\n-error 31..31: expected existential, fn, trait or impl\n+error 38..38: expected a name\n+error 40..40: expected COLON\n+error 46..46: expected SEMICOLON\n+error 47..47: expected an item"}]}