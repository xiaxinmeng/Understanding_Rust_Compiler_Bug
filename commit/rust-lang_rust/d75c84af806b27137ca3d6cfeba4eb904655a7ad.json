{"sha": "d75c84af806b27137ca3d6cfeba4eb904655a7ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NWM4NGFmODA2YjI3MTM3Y2EzZDZjZmViYTRlYjkwNDY1NWE3YWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-09-28T07:38:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-28T07:38:07Z"}, "message": "Auto merge of #36604 - japaric:libtest-skip, r=alexcrichton\n\nlibtest: add a --skip flag to the test runner\n\nThis flag takes a FILTER argument and instructs the test runner to skip\nthe tests whose names contain the word FILTER. --skip can be used\nseveral times.\n\n---\n\nMy motivation for submitting this is that while using [smoke] to run `std` unit tests for cross\ntargets I found that a few of the tests always fail due to limitations in QEMU (it can't handle too\nmany threads) and I'd like to skip these problematic tests from the command line to be able to run\nthe rest of the unit tests.\n\n[smoke]: https://github.com/japaric/smoke\n\nI know there is another mechanism to skip tests: `#[ignore]` but this doesn't work in my use case\nbecause I can't (easily) modify the source of the standard libraries to `#[ignore]` some tests. And\neven if I could, the change would involve conditionally ignoring some tests for some targets but\nthat's not a perfect solution because those tests should pass if executed on real hardware so they\nshould not be `#[ignored]` in that scenario.\n\nr? @alexcrichton\ncc @brson", "tree": {"sha": "89256a1cd64ae4e3ec954a3ccc44afd3eb950b56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89256a1cd64ae4e3ec954a3ccc44afd3eb950b56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d75c84af806b27137ca3d6cfeba4eb904655a7ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d75c84af806b27137ca3d6cfeba4eb904655a7ad", "html_url": "https://github.com/rust-lang/rust/commit/d75c84af806b27137ca3d6cfeba4eb904655a7ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d75c84af806b27137ca3d6cfeba4eb904655a7ad/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "755516bb96cc0f74c3098d2a64917f4e0a6f3f03", "url": "https://api.github.com/repos/rust-lang/rust/commits/755516bb96cc0f74c3098d2a64917f4e0a6f3f03", "html_url": "https://github.com/rust-lang/rust/commit/755516bb96cc0f74c3098d2a64917f4e0a6f3f03"}, {"sha": "45916ec6864e166b23148caee4081bbeac2d992e", "url": "https://api.github.com/repos/rust-lang/rust/commits/45916ec6864e166b23148caee4081bbeac2d992e", "html_url": "https://github.com/rust-lang/rust/commit/45916ec6864e166b23148caee4081bbeac2d992e"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "dcfd3f754c7203b2860a09e080f6f40b79e61bc3", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d75c84af806b27137ca3d6cfeba4eb904655a7ad/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d75c84af806b27137ca3d6cfeba4eb904655a7ad/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=d75c84af806b27137ca3d6cfeba4eb904655a7ad", "patch": "@@ -303,6 +303,7 @@ pub struct TestOpts {\n     pub color: ColorConfig,\n     pub quiet: bool,\n     pub test_threads: Option<usize>,\n+    pub skip: Vec<String>,\n }\n \n impl TestOpts {\n@@ -318,6 +319,7 @@ impl TestOpts {\n             color: AutoColor,\n             quiet: false,\n             test_threads: None,\n+            skip: vec![],\n         }\n     }\n }\n@@ -337,6 +339,8 @@ fn optgroups() -> Vec<getopts::OptGroup> {\n                                          task, allow printing directly\"),\n       getopts::optopt(\"\", \"test-threads\", \"Number of threads used for running tests \\\n                                            in parallel\", \"n_threads\"),\n+      getopts::optmulti(\"\", \"skip\", \"Skip tests whose names contain FILTER (this flag can \\\n+                                     be used multiple times)\",\"FILTER\"),\n       getopts::optflag(\"q\", \"quiet\", \"Display one character per test instead of one line\"),\n       getopts::optopt(\"\", \"color\", \"Configure coloring of output:\n             auto   = colorize if stdout is a tty and tests are run on serially (default);\n@@ -446,6 +450,7 @@ pub fn parse_opts(args: &[String]) -> Option<OptRes> {\n         color: color,\n         quiet: quiet,\n         test_threads: test_threads,\n+        skip: matches.opt_strs(\"skip\"),\n     };\n \n     Some(Ok(test_opts))\n@@ -1101,6 +1106,11 @@ pub fn filter_tests(opts: &TestOpts, tests: Vec<TestDescAndFn>) -> Vec<TestDescA\n         }\n     };\n \n+    // Skip tests that match any of the skip filters\n+    filtered = filtered.into_iter()\n+        .filter(|t| !opts.skip.iter().any(|sf| t.desc.name.as_slice().contains(&sf[..])))\n+        .collect();\n+\n     // Maybe pull out the ignored test and unignore them\n     filtered = if !opts.run_ignored {\n         filtered"}, {"sha": "114cfaf7972ea51481a176ebd1800a1bca13185c", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d75c84af806b27137ca3d6cfeba4eb904655a7ad/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d75c84af806b27137ca3d6cfeba4eb904655a7ad/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=d75c84af806b27137ca3d6cfeba4eb904655a7ad", "patch": "@@ -313,6 +313,7 @@ pub fn test_opts(config: &Config) -> test::TestOpts {\n         },\n         color: test::AutoColor,\n         test_threads: None,\n+        skip: vec![],\n     }\n }\n "}]}