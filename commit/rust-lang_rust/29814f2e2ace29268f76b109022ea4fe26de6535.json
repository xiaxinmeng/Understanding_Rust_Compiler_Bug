{"sha": "29814f2e2ace29268f76b109022ea4fe26de6535", "node_id": "C_kwDOAAsO6NoAKDI5ODE0ZjJlMmFjZTI5MjY4Zjc2YjEwOTAyMmVhNGZlMjZkZTY1MzU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-12-03T12:24:04Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-12-03T12:31:57Z"}, "message": "clippy", "tree": {"sha": "e2486fa6b75b9b473c4d0619e2ebe67f2fad180f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2486fa6b75b9b473c4d0619e2ebe67f2fad180f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29814f2e2ace29268f76b109022ea4fe26de6535", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29814f2e2ace29268f76b109022ea4fe26de6535", "html_url": "https://github.com/rust-lang/rust/commit/29814f2e2ace29268f76b109022ea4fe26de6535", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29814f2e2ace29268f76b109022ea4fe26de6535/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b64d8670e4c512c29e6a58c73c0aba65f00bb800", "url": "https://api.github.com/repos/rust-lang/rust/commits/b64d8670e4c512c29e6a58c73c0aba65f00bb800", "html_url": "https://github.com/rust-lang/rust/commit/b64d8670e4c512c29e6a58c73c0aba65f00bb800"}], "stats": {"total": 57, "additions": 15, "deletions": 42}, "files": [{"sha": "2bffff47722704d7b863b4a5aa6ea7ec0024a6c5", "filename": "src/tools/miri/cargo-miri/src/phases.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/29814f2e2ace29268f76b109022ea4fe26de6535/src%2Ftools%2Fmiri%2Fcargo-miri%2Fsrc%2Fphases.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29814f2e2ace29268f76b109022ea4fe26de6535/src%2Ftools%2Fmiri%2Fcargo-miri%2Fsrc%2Fphases.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fcargo-miri%2Fsrc%2Fphases.rs?ref=29814f2e2ace29268f76b109022ea4fe26de6535", "patch": "@@ -486,8 +486,7 @@ pub fn phase_runner(mut binary_args: impl Iterator<Item = String>, phase: Runner\n                 continue;\n             } else if verbose > 0 {\n                 eprintln!(\n-                    \"[cargo-miri runner] Overwriting run-time env var {:?}={:?} with build-time value {:?}\",\n-                    name, old_val, val\n+                    \"[cargo-miri runner] Overwriting run-time env var {name:?}={old_val:?} with build-time value {val:?}\"\n                 );\n             }\n         }"}, {"sha": "fce95b987f729dc26c353bb8f7871905b6b57f3a", "filename": "src/tools/miri/src/bin/miri.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/29814f2e2ace29268f76b109022ea4fe26de6535/src%2Ftools%2Fmiri%2Fsrc%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29814f2e2ace29268f76b109022ea4fe26de6535/src%2Ftools%2Fmiri%2Fsrc%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fbin%2Fmiri.rs?ref=29814f2e2ace29268f76b109022ea4fe26de6535", "patch": "@@ -192,10 +192,7 @@ fn init_late_loggers(tcx: TyCtxt<'_>) {\n             if log::Level::from_str(&var).is_ok() {\n                 env::set_var(\n                     \"RUSTC_LOG\",\n-                    format!(\n-                        \"rustc_middle::mir::interpret={0},rustc_const_eval::interpret={0}\",\n-                        var\n-                    ),\n+                    format!(\"rustc_middle::mir::interpret={var},rustc_const_eval::interpret={var}\"),\n                 );\n             } else {\n                 env::set_var(\"RUSTC_LOG\", &var);"}, {"sha": "ba04991a5889d8bc5f7454f6558753af90e67f0b", "filename": "src/tools/miri/src/concurrency/vector_clock.rs", "status": "modified", "additions": 9, "deletions": 27, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/29814f2e2ace29268f76b109022ea4fe26de6535/src%2Ftools%2Fmiri%2Fsrc%2Fconcurrency%2Fvector_clock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29814f2e2ace29268f76b109022ea4fe26de6535/src%2Ftools%2Fmiri%2Fsrc%2Fconcurrency%2Fvector_clock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fconcurrency%2Fvector_clock.rs?ref=29814f2e2ace29268f76b109022ea4fe26de6535", "patch": "@@ -404,67 +404,49 @@ mod tests {\n         assert_eq!(\n             alt_compare,\n             o.map(Ordering::reverse),\n-            \"Invalid alt comparison\\n l: {:?}\\n r: {:?}\",\n-            l,\n-            r\n+            \"Invalid alt comparison\\n l: {l:?}\\n r: {r:?}\"\n         );\n \n         //Test operators with faster implementations\n         assert_eq!(\n             matches!(compare, Some(Ordering::Less)),\n             l < r,\n-            \"Invalid (<):\\n l: {:?}\\n r: {:?}\",\n-            l,\n-            r\n+            \"Invalid (<):\\n l: {l:?}\\n r: {r:?}\"\n         );\n         assert_eq!(\n             matches!(compare, Some(Ordering::Less) | Some(Ordering::Equal)),\n             l <= r,\n-            \"Invalid (<=):\\n l: {:?}\\n r: {:?}\",\n-            l,\n-            r\n+            \"Invalid (<=):\\n l: {l:?}\\n r: {r:?}\"\n         );\n         assert_eq!(\n             matches!(compare, Some(Ordering::Greater)),\n             l > r,\n-            \"Invalid (>):\\n l: {:?}\\n r: {:?}\",\n-            l,\n-            r\n+            \"Invalid (>):\\n l: {l:?}\\n r: {r:?}\"\n         );\n         assert_eq!(\n             matches!(compare, Some(Ordering::Greater) | Some(Ordering::Equal)),\n             l >= r,\n-            \"Invalid (>=):\\n l: {:?}\\n r: {:?}\",\n-            l,\n-            r\n+            \"Invalid (>=):\\n l: {l:?}\\n r: {r:?}\"\n         );\n         assert_eq!(\n             matches!(alt_compare, Some(Ordering::Less)),\n             r < l,\n-            \"Invalid alt (<):\\n l: {:?}\\n r: {:?}\",\n-            l,\n-            r\n+            \"Invalid alt (<):\\n l: {l:?}\\n r: {r:?}\"\n         );\n         assert_eq!(\n             matches!(alt_compare, Some(Ordering::Less) | Some(Ordering::Equal)),\n             r <= l,\n-            \"Invalid alt (<=):\\n l: {:?}\\n r: {:?}\",\n-            l,\n-            r\n+            \"Invalid alt (<=):\\n l: {l:?}\\n r: {r:?}\"\n         );\n         assert_eq!(\n             matches!(alt_compare, Some(Ordering::Greater)),\n             r > l,\n-            \"Invalid alt (>):\\n l: {:?}\\n r: {:?}\",\n-            l,\n-            r\n+            \"Invalid alt (>):\\n l: {l:?}\\n r: {r:?}\"\n         );\n         assert_eq!(\n             matches!(alt_compare, Some(Ordering::Greater) | Some(Ordering::Equal)),\n             r >= l,\n-            \"Invalid alt (>=):\\n l: {:?}\\n r: {:?}\",\n-            l,\n-            r\n+            \"Invalid alt (>=):\\n l: {l:?}\\n r: {r:?}\"\n         );\n     }\n }"}, {"sha": "7fb2539ca5a678824649211f3b9bb4b3309467ee", "filename": "src/tools/miri/src/helpers.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/29814f2e2ace29268f76b109022ea4fe26de6535/src%2Ftools%2Fmiri%2Fsrc%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29814f2e2ace29268f76b109022ea4fe26de6535/src%2Ftools%2Fmiri%2Fsrc%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fhelpers.rs?ref=29814f2e2ace29268f76b109022ea4fe26de6535", "patch": "@@ -554,9 +554,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n         assert_eq!(\n             self.eval_context_ref().tcx.sess.target.os,\n             target_os,\n-            \"`{}` is only available on the `{}` target OS\",\n-            name,\n-            target_os,\n+            \"`{name}` is only available on the `{target_os}` target OS\",\n         )\n     }\n \n@@ -566,8 +564,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n     fn assert_target_os_is_unix(&self, name: &str) {\n         assert!(\n             target_os_is_unix(self.eval_context_ref().tcx.sess.target.os.as_ref()),\n-            \"`{}` is only available for supported UNIX family targets\",\n-            name,\n+            \"`{name}` is only available for supported UNIX family targets\",\n         );\n     }\n \n@@ -1019,8 +1016,7 @@ where\n \n pub fn isolation_abort_error<'tcx>(name: &str) -> InterpResult<'tcx> {\n     throw_machine_stop!(TerminationInfo::UnsupportedInIsolation(format!(\n-        \"{} not available when isolation is enabled\",\n-        name,\n+        \"{name} not available when isolation is enabled\",\n     )))\n }\n "}, {"sha": "8370e02b588afb7f5d19da5052cde4d5a2994cb3", "filename": "src/tools/miri/src/shims/foreign_items.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/29814f2e2ace29268f76b109022ea4fe26de6535/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29814f2e2ace29268f76b109022ea4fe26de6535/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fforeign_items.rs?ref=29814f2e2ace29268f76b109022ea4fe26de6535", "patch": "@@ -299,8 +299,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n                             return Ok(Some(body));\n                         }\n                         this.handle_unsupported(format!(\n-                            \"can't call (diverging) foreign function: {}\",\n-                            link_name\n+                            \"can't call (diverging) foreign function: {link_name}\"\n                         ))?;\n                         return Ok(None);\n                     }"}]}