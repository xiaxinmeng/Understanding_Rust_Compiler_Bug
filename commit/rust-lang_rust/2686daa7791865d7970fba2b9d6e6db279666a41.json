{"sha": "2686daa7791865d7970fba2b9d6e6db279666a41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ODZkYWE3NzkxODY1ZDc5NzBmYmEyYjlkNmU2ZGIyNzk2NjZhNDE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-01-03T16:09:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-03T16:09:01Z"}, "message": "Rollup merge of #80580 - GuillaumeGomez:suggestion-ignore-codeblock-warn, r=jyn514\n\nAdd suggestion for \"ignore\" doc code block\n\nPart of https://github.com/rust-lang/rust/issues/30032.\n\nThis PR adds a suggestion to help users when they have a \"ignore\" doc code block which is invalid rust code.\n\nr? `@jyn514`", "tree": {"sha": "b4c100285b7fa8e271f16feb3ba6af74ea0cacbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4c100285b7fa8e271f16feb3ba6af74ea0cacbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2686daa7791865d7970fba2b9d6e6db279666a41", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf8ewdCRBK7hj4Ov3rIwAAdHIIABj+yQwld7B6IdbJuVeT+ytP\nI1ho6lUFQQkbtWdeylW5Tb20oo6zJHPF/dqahmgTGV6h6oG3yrJF0hkLPGOtc3jK\nxPt6f+SvjToKqXhVOqHUiW/Ye0xKNQULQH+erDHjQ0BF76gkEPfcsA9xU+2JzEhx\n6EzlFsHz01M1uTTz/B+hryIkaz40DpxkbZdv2fcDoKEohrpY0DVyoNlwxXyiaGOq\nLBQzu1zbfp2XE3heqSpSQfIFuI3a7MrUtDoYA6ubafasZuEniVHt+WC6QR7BIxqN\nhNIYbDyJjYxAlZV4oBYctF3PZbZ8GvxLgxPsnnTZLdRkdTjSM7rhkb2dCV9kEGA=\n=7C86\n-----END PGP SIGNATURE-----\n", "payload": "tree b4c100285b7fa8e271f16feb3ba6af74ea0cacbb\nparent bcd69750794b315d7c673351f86cacdf5232a0b7\nparent 7bc1eb4506170e0750de4757af97f341c427a35a\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1609690141 +0100\ncommitter GitHub <noreply@github.com> 1609690141 +0100\n\nRollup merge of #80580 - GuillaumeGomez:suggestion-ignore-codeblock-warn, r=jyn514\n\nAdd suggestion for \"ignore\" doc code block\n\nPart of https://github.com/rust-lang/rust/issues/30032.\n\nThis PR adds a suggestion to help users when they have a \"ignore\" doc code block which is invalid rust code.\n\nr? `@jyn514`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2686daa7791865d7970fba2b9d6e6db279666a41", "html_url": "https://github.com/rust-lang/rust/commit/2686daa7791865d7970fba2b9d6e6db279666a41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2686daa7791865d7970fba2b9d6e6db279666a41/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcd69750794b315d7c673351f86cacdf5232a0b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcd69750794b315d7c673351f86cacdf5232a0b7", "html_url": "https://github.com/rust-lang/rust/commit/bcd69750794b315d7c673351f86cacdf5232a0b7"}, {"sha": "7bc1eb4506170e0750de4757af97f341c427a35a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bc1eb4506170e0750de4757af97f341c427a35a", "html_url": "https://github.com/rust-lang/rust/commit/7bc1eb4506170e0750de4757af97f341c427a35a"}], "stats": {"total": 51, "additions": 45, "deletions": 6}, "files": [{"sha": "0a8c89f6caffdab268e963947ef9858d22dd6cfb", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2686daa7791865d7970fba2b9d6e6db279666a41/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2686daa7791865d7970fba2b9d6e6db279666a41/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=2686daa7791865d7970fba2b9d6e6db279666a41", "patch": "@@ -1193,6 +1193,7 @@ crate struct RustCodeBlock {\n     crate code: Range<usize>,\n     crate is_fenced: bool,\n     crate syntax: Option<String>,\n+    crate is_ignore: bool,\n }\n \n /// Returns a range of bytes for each code block in the markdown that is tagged as `rust` or\n@@ -1208,7 +1209,7 @@ crate fn rust_code_blocks(md: &str, extra_info: &ExtraInfo<'_, '_>) -> Vec<RustC\n \n     while let Some((event, offset)) = p.next() {\n         if let Event::Start(Tag::CodeBlock(syntax)) = event {\n-            let (syntax, code_start, code_end, range, is_fenced) = match syntax {\n+            let (syntax, code_start, code_end, range, is_fenced, is_ignore) = match syntax {\n                 CodeBlockKind::Fenced(syntax) => {\n                     let syntax = syntax.as_ref();\n                     let lang_string = if syntax.is_empty() {\n@@ -1219,6 +1220,7 @@ crate fn rust_code_blocks(md: &str, extra_info: &ExtraInfo<'_, '_>) -> Vec<RustC\n                     if !lang_string.rust {\n                         continue;\n                     }\n+                    let is_ignore = lang_string.ignore != Ignore::None;\n                     let syntax = if syntax.is_empty() { None } else { Some(syntax.to_owned()) };\n                     let (code_start, mut code_end) = match p.next() {\n                         Some((Event::Text(_), offset)) => (offset.start, offset.end),\n@@ -1229,6 +1231,7 @@ crate fn rust_code_blocks(md: &str, extra_info: &ExtraInfo<'_, '_>) -> Vec<RustC\n                                 range: offset,\n                                 code,\n                                 syntax,\n+                                is_ignore,\n                             });\n                             continue;\n                         }\n@@ -1239,14 +1242,15 @@ crate fn rust_code_blocks(md: &str, extra_info: &ExtraInfo<'_, '_>) -> Vec<RustC\n                                 range: offset,\n                                 code,\n                                 syntax,\n+                                is_ignore,\n                             });\n                             continue;\n                         }\n                     };\n                     while let Some((Event::Text(_), offset)) = p.next() {\n                         code_end = offset.end;\n                     }\n-                    (syntax, code_start, code_end, offset, true)\n+                    (syntax, code_start, code_end, offset, true, is_ignore)\n                 }\n                 CodeBlockKind::Indented => {\n                     // The ending of the offset goes too far sometime so we reduce it by one in\n@@ -1258,9 +1262,10 @@ crate fn rust_code_blocks(md: &str, extra_info: &ExtraInfo<'_, '_>) -> Vec<RustC\n                             offset.end,\n                             Range { start: offset.start, end: offset.end - 1 },\n                             false,\n+                            false,\n                         )\n                     } else {\n-                        (None, offset.start, offset.end, offset, false)\n+                        (None, offset.start, offset.end, offset, false, false)\n                     }\n                 }\n             };\n@@ -1270,6 +1275,7 @@ crate fn rust_code_blocks(md: &str, extra_info: &ExtraInfo<'_, '_>) -> Vec<RustC\n                 range,\n                 code: Range { start: code_start, end: code_end },\n                 syntax,\n+                is_ignore,\n             });\n         }\n     }"}, {"sha": "554392c213e247ac0ad2a59b7dd8518079e759a4", "filename": "src/librustdoc/passes/check_code_block_syntax.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2686daa7791865d7970fba2b9d6e6db279666a41/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2686daa7791865d7970fba2b9d6e6db279666a41/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs?ref=2686daa7791865d7970fba2b9d6e6db279666a41", "patch": "@@ -51,10 +51,10 @@ impl<'a, 'tcx> SyntaxChecker<'a, 'tcx> {\n             let mut diag = if let Some(sp) =\n                 super::source_span_for_markdown_range(self.cx, &dox, &code_block.range, &item.attrs)\n             {\n-                let warning_message = if buffer.has_errors {\n-                    \"could not parse code block as Rust code\"\n+                let (warning_message, suggest_using_text) = if buffer.has_errors {\n+                    (\"could not parse code block as Rust code\", true)\n                 } else {\n-                    \"Rust code block is empty\"\n+                    (\"Rust code block is empty\", false)\n                 };\n \n                 let mut diag = self.cx.sess().struct_span_warn(sp, warning_message);\n@@ -67,6 +67,15 @@ impl<'a, 'tcx> SyntaxChecker<'a, 'tcx> {\n                         String::from(\"```text\"),\n                         Applicability::MachineApplicable,\n                     );\n+                } else if suggest_using_text && code_block.is_ignore {\n+                    let sp = sp.from_inner(InnerSpan::new(0, 3));\n+                    diag.span_suggestion(\n+                        sp,\n+                        \"`ignore` code blocks require valid Rust code for syntax highlighting. \\\n+                         Mark blocks that do not contain Rust code as text\",\n+                        String::from(\"```text,\"),\n+                        Applicability::MachineApplicable,\n+                    );\n                 }\n \n                 diag"}, {"sha": "c22dddd11dffa41374af67c62ac70843b57a8305", "filename": "src/test/rustdoc-ui/ignore-block-help.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2686daa7791865d7970fba2b9d6e6db279666a41/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2686daa7791865d7970fba2b9d6e6db279666a41/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.rs?ref=2686daa7791865d7970fba2b9d6e6db279666a41", "patch": "@@ -0,0 +1,7 @@\n+// check-pass\n+\n+/// ```ignore (to-prevent-tidy-error)\n+/// let heart = '\u2764\ufe0f';\n+/// ```\n+//~^^^ WARN\n+pub struct X;"}, {"sha": "d45cd92d2d10650ba60fb373a47fe9ed34184f34", "filename": "src/test/rustdoc-ui/ignore-block-help.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2686daa7791865d7970fba2b9d6e6db279666a41/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2686daa7791865d7970fba2b9d6e6db279666a41/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.stderr?ref=2686daa7791865d7970fba2b9d6e6db279666a41", "patch": "@@ -0,0 +1,17 @@\n+warning: could not parse code block as Rust code\n+  --> $DIR/ignore-block-help.rs:3:5\n+   |\n+LL |   /// ```ignore (to-prevent-tidy-error)\n+   |  _____^\n+LL | | /// let heart = '\u2764\ufe0f';\n+LL | | /// ```\n+   | |_______^\n+   |\n+   = note: error from rustc: character literal may only contain one codepoint\n+help: `ignore` code blocks require valid Rust code for syntax highlighting. Mark blocks that do not contain Rust code as text\n+   |\n+LL | /// ```text,ignore (to-prevent-tidy-error)\n+   |     ^^^^^^^^\n+\n+warning: 1 warning emitted\n+"}]}