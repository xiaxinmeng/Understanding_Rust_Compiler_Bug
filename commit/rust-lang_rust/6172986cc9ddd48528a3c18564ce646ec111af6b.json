{"sha": "6172986cc9ddd48528a3c18564ce646ec111af6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNzI5ODZjYzlkZGQ0ODUyOGEzYzE4NTY0Y2U2NDZlYzExMWFmNmI=", "commit": {"author": {"name": "Kevin Butler", "email": "haqkrs@gmail.com", "date": "2015-02-19T19:22:31Z"}, "committer": {"name": "Kevin Butler", "email": "haqkrs@gmail.com", "date": "2015-02-19T19:22:31Z"}, "message": "typo: fucntion -> function", "tree": {"sha": "44fc01c41093e749d7380eb822b28c9c5082379f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44fc01c41093e749d7380eb822b28c9c5082379f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6172986cc9ddd48528a3c18564ce646ec111af6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6172986cc9ddd48528a3c18564ce646ec111af6b", "html_url": "https://github.com/rust-lang/rust/commit/6172986cc9ddd48528a3c18564ce646ec111af6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6172986cc9ddd48528a3c18564ce646ec111af6b/comments", "author": {"login": "Ryman", "id": 994978, "node_id": "MDQ6VXNlcjk5NDk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/994978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryman", "html_url": "https://github.com/Ryman", "followers_url": "https://api.github.com/users/Ryman/followers", "following_url": "https://api.github.com/users/Ryman/following{/other_user}", "gists_url": "https://api.github.com/users/Ryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryman/subscriptions", "organizations_url": "https://api.github.com/users/Ryman/orgs", "repos_url": "https://api.github.com/users/Ryman/repos", "events_url": "https://api.github.com/users/Ryman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ryman", "id": 994978, "node_id": "MDQ6VXNlcjk5NDk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/994978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryman", "html_url": "https://github.com/Ryman", "followers_url": "https://api.github.com/users/Ryman/followers", "following_url": "https://api.github.com/users/Ryman/following{/other_user}", "gists_url": "https://api.github.com/users/Ryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryman/subscriptions", "organizations_url": "https://api.github.com/users/Ryman/orgs", "repos_url": "https://api.github.com/users/Ryman/repos", "events_url": "https://api.github.com/users/Ryman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b664bb8436f2cfda7f13a6f302ab486f332816f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b664bb8436f2cfda7f13a6f302ab486f332816f", "html_url": "https://github.com/rust-lang/rust/commit/0b664bb8436f2cfda7f13a6f302ab486f332816f"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "c0579b3983c34721a5b17e683730815178a807ec", "filename": "src/libstd/thread.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6172986cc9ddd48528a3c18564ce646ec111af6b/src%2Flibstd%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6172986cc9ddd48528a3c18564ce646ec111af6b/src%2Flibstd%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread.rs?ref=6172986cc9ddd48528a3c18564ce646ec111af6b", "patch": "@@ -465,16 +465,16 @@ impl Thread {\n         }\n     }\n \n-    /// Deprecated: use module-level free fucntion.\n-    #[deprecated(since = \"1.0.0\", reason = \"use module-level free fucntion\")]\n+    /// Deprecated: use module-level free function.\n+    #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[unstable(feature = \"std_misc\",\n                reason = \"may change with specifics of new Send semantics\")]\n     pub fn spawn<F>(f: F) -> Thread where F: FnOnce(), F: Send + 'static {\n         Builder::new().spawn(f).unwrap().thread().clone()\n     }\n \n-    /// Deprecated: use module-level free fucntion.\n-    #[deprecated(since = \"1.0.0\", reason = \"use module-level free fucntion\")]\n+    /// Deprecated: use module-level free function.\n+    #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[unstable(feature = \"std_misc\",\n                reason = \"may change with specifics of new Send semantics\")]\n     pub fn scoped<'a, T, F>(f: F) -> JoinGuard<'a, T> where\n@@ -483,30 +483,30 @@ impl Thread {\n         Builder::new().scoped(f).unwrap()\n     }\n \n-    /// Deprecated: use module-level free fucntion.\n-    #[deprecated(since = \"1.0.0\", reason = \"use module-level free fucntion\")]\n+    /// Deprecated: use module-level free function.\n+    #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn current() -> Thread {\n         thread_info::current_thread()\n     }\n \n-    /// Deprecated: use module-level free fucntion.\n-    #[deprecated(since = \"1.0.0\", reason = \"use module-level free fucntion\")]\n+    /// Deprecated: use module-level free function.\n+    #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[unstable(feature = \"std_misc\", reason = \"name may change\")]\n     pub fn yield_now() {\n         unsafe { imp::yield_now() }\n     }\n \n-    /// Deprecated: use module-level free fucntion.\n-    #[deprecated(since = \"1.0.0\", reason = \"use module-level free fucntion\")]\n+    /// Deprecated: use module-level free function.\n+    #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn panicking() -> bool {\n         unwind::panicking()\n     }\n \n-    /// Deprecated: use module-level free fucntion.\n-    #[deprecated(since = \"1.0.0\", reason = \"use module-level free fucntion\")]\n+    /// Deprecated: use module-level free function.\n+    #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[unstable(feature = \"std_misc\", reason = \"recently introduced\")]\n     pub fn park() {\n         let thread = current();\n@@ -517,8 +517,8 @@ impl Thread {\n         *guard = false;\n     }\n \n-    /// Deprecated: use module-level free fucntion.\n-    #[deprecated(since = \"1.0.0\", reason = \"use module-level free fucntion\")]\n+    /// Deprecated: use module-level free function.\n+    #[deprecated(since = \"1.0.0\", reason = \"use module-level free function\")]\n     #[unstable(feature = \"std_misc\", reason = \"recently introduced\")]\n     pub fn park_timeout(dur: Duration) {\n         let thread = current();"}]}