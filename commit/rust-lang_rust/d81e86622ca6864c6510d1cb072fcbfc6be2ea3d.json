{"sha": "d81e86622ca6864c6510d1cb072fcbfc6be2ea3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MWU4NjYyMmNhNjg2NGM2NTEwZDFjYjA3MmZjYmZjNmJlMmVhM2Q=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-04-01T19:21:03Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-04-01T19:59:50Z"}, "message": "Feature gate rust-call ABI.", "tree": {"sha": "b8334329cf2b882be1e244c43ccd6c16d8ddd637", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8334329cf2b882be1e244c43ccd6c16d8ddd637"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d81e86622ca6864c6510d1cb072fcbfc6be2ea3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d81e86622ca6864c6510d1cb072fcbfc6be2ea3d", "html_url": "https://github.com/rust-lang/rust/commit/d81e86622ca6864c6510d1cb072fcbfc6be2ea3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d81e86622ca6864c6510d1cb072fcbfc6be2ea3d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d528aa9960cb9b937d8ef6c09905a6a8076d5f3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d528aa9960cb9b937d8ef6c09905a6a8076d5f3a", "html_url": "https://github.com/rust-lang/rust/commit/d528aa9960cb9b937d8ef6c09905a6a8076d5f3a"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "024132e95827161446658ba05331cb6f47159f48", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d81e86622ca6864c6510d1cb072fcbfc6be2ea3d/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d81e86622ca6864c6510d1cb072fcbfc6be2ea3d/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=d81e86622ca6864c6510d1cb072fcbfc6be2ea3d", "patch": "@@ -25,7 +25,7 @@\n use self::Status::*;\n use self::AttributeType::*;\n \n-use abi::RustIntrinsic;\n+use abi::Abi;\n use ast::NodeId;\n use ast;\n use attr;\n@@ -511,7 +511,7 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n                                        across platforms, it is recommended to \\\n                                        use `#[link(name = \\\"foo\\\")]` instead\")\n                 }\n-                if foreign_module.abi == RustIntrinsic {\n+                if foreign_module.abi == Abi::RustIntrinsic {\n                     self.gate_feature(\"intrinsics\",\n                                       i.span,\n                                       \"intrinsics are subject to change\")\n@@ -627,11 +627,17 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n                 span: Span,\n                 _node_id: NodeId) {\n         match fn_kind {\n-            visit::FkItemFn(_, _, _, abi) if abi == RustIntrinsic => {\n+            visit::FkItemFn(_, _, _, abi) if abi == Abi::RustIntrinsic => {\n                 self.gate_feature(\"intrinsics\",\n                                   span,\n                                   \"intrinsics are subject to change\")\n             }\n+            visit::FkItemFn(_, _, _, abi) |\n+            visit::FkMethod(_, &ast::MethodSig { abi, .. }) if abi == Abi::RustCall => {\n+                self.gate_feature(\"unboxed_closures\",\n+                                  span,\n+                                  \"rust-call ABI is subject to change\")\n+            }\n             _ => {}\n         }\n         visit::walk_fn(self, fn_kind, fn_decl, block, span);"}, {"sha": "029a9cad65fcfe3869fa53904eb47ca1dbfad181", "filename": "src/test/compile-fail/feature-gate-rust-call.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d81e86622ca6864c6510d1cb072fcbfc6be2ea3d/src%2Ftest%2Fcompile-fail%2Ffeature-gate-rust-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d81e86622ca6864c6510d1cb072fcbfc6be2ea3d/src%2Ftest%2Fcompile-fail%2Ffeature-gate-rust-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-rust-call.rs?ref=d81e86622ca6864c6510d1cb072fcbfc6be2ea3d", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern \"rust-call\" fn foo() { } //~ ERROR rust-call ABI is subject to change\n+\n+trait Foo {\n+    extern \"rust-call\" fn foo();\n+}\n+\n+impl Foo for i32 {\n+    extern \"rust-call\" fn foo() { } //~ ERROR rust-call ABI is subject to change\n+}\n+\n+fn main() { }"}, {"sha": "5df309321d3108a956131d8494dfc1d1a1ccd1f4", "filename": "src/test/compile-fail/feature-gate-unboxed-closures-manual-impls.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d81e86622ca6864c6510d1cb072fcbfc6be2ea3d/src%2Ftest%2Fcompile-fail%2Ffeature-gate-unboxed-closures-manual-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d81e86622ca6864c6510d1cb072fcbfc6be2ea3d/src%2Ftest%2Fcompile-fail%2Ffeature-gate-unboxed-closures-manual-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-unboxed-closures-manual-impls.rs?ref=d81e86622ca6864c6510d1cb072fcbfc6be2ea3d", "patch": "@@ -17,23 +17,23 @@\n \n struct Foo;\n impl Fn<()> for Foo {\n-    //~^ ERROR angle-bracket notation is not stable when used with the `Fn` family of traits\n     extern \"rust-call\" fn call(self, args: ()) -> () {}\n+    //~^ ERROR rust-call ABI is subject to change\n }\n struct Foo1;\n impl FnOnce() for Foo1 {\n-    //~^ ERROR associated type bindings are not allowed here\n     extern \"rust-call\" fn call_once(self, args: ()) -> () {}\n+    //~^ ERROR rust-call ABI is subject to change\n }\n struct Bar;\n impl FnMut<()> for Bar {\n-    //~^ ERROR angle-bracket notation is not stable when used with the `Fn` family of traits\n     extern \"rust-call\" fn call_mut(&self, args: ()) -> () {}\n+    //~^ ERROR rust-call ABI is subject to change\n }\n struct Baz;\n impl FnOnce<()> for Baz {\n-    //~^ ERROR angle-bracket notation is not stable when used with the `Fn` family of traits\n     extern \"rust-call\" fn call_once(&self, args: ()) -> () {}\n+    //~^ ERROR rust-call ABI is subject to change\n }\n \n fn main() {}"}]}