{"sha": "a147cd070e4b8824aafc7fa9f20d6fdf34eb3bf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNDdjZDA3MGU0Yjg4MjRhYWZjN2ZhOWYyMGQ2ZmRmMzRlYjNiZjk=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-03-20T22:19:21Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-03-22T23:45:27Z"}, "message": "Introduce a local variable `config_emit_normal_obj`.\n\nThis adds a missing `!config.obj_is_bitcode` condition to two places\nthat should have it.\n\nAs a result, when `obj_is_bitcode` and `no_integrated_as` are both true,\nthe compiler will no longer unnecessarily emit asm, convert it to an\nobject file, and then overwrite that object file with bitcode.", "tree": {"sha": "c3de58c25529bca74ddb3113e261ea44dc5e73e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3de58c25529bca74ddb3113e261ea44dc5e73e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a147cd070e4b8824aafc7fa9f20d6fdf34eb3bf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a147cd070e4b8824aafc7fa9f20d6fdf34eb3bf9", "html_url": "https://github.com/rust-lang/rust/commit/a147cd070e4b8824aafc7fa9f20d6fdf34eb3bf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a147cd070e4b8824aafc7fa9f20d6fdf34eb3bf9/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8261b496d5c94bd8d6ad5dcce0cb5cc2e0e3fe5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8261b496d5c94bd8d6ad5dcce0cb5cc2e0e3fe5", "html_url": "https://github.com/rust-lang/rust/commit/f8261b496d5c94bd8d6ad5dcce0cb5cc2e0e3fe5"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "d2d3eb597966c59bc41c346a7284a1cf8d1c11e9", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a147cd070e4b8824aafc7fa9f20d6fdf34eb3bf9/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a147cd070e4b8824aafc7fa9f20d6fdf34eb3bf9/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=a147cd070e4b8824aafc7fa9f20d6fdf34eb3bf9", "patch": "@@ -732,7 +732,9 @@ pub(crate) unsafe fn codegen(\n             })?;\n         }\n \n-        if config.emit_asm || (config.emit_obj && config.no_integrated_as) {\n+        let config_emit_normal_obj = config.emit_obj && !config.obj_is_bitcode;\n+\n+        if config.emit_asm || (config_emit_normal_obj && config.no_integrated_as) {\n             let _timer = cgcx\n                 .prof\n                 .generic_activity_with_arg(\"LLVM_module_codegen_emit_asm\", &module.name[..]);\n@@ -747,7 +749,7 @@ pub(crate) unsafe fn codegen(\n             })?;\n         }\n \n-        if config.emit_obj && !config.obj_is_bitcode && !config.no_integrated_as {\n+        if config_emit_normal_obj && !config.no_integrated_as {\n             let _timer = cgcx\n                 .prof\n                 .generic_activity_with_arg(\"LLVM_module_codegen_emit_obj\", &module.name[..]);\n@@ -761,7 +763,7 @@ pub(crate) unsafe fn codegen(\n                     llvm::FileType::ObjectFile,\n                 )\n             })?;\n-        } else if config.emit_obj && config.no_integrated_as {\n+        } else if config_emit_normal_obj && config.no_integrated_as {\n             let _timer = cgcx\n                 .prof\n                 .generic_activity_with_arg(\"LLVM_module_codegen_asm_to_obj\", &module.name[..]);"}]}