{"sha": "efe697e1331d1a5175750b0f6b464d573a9bd57a", "node_id": "C_kwDOAAsO6NoAKGVmZTY5N2UxMzMxZDFhNTE3NTc1MGIwZjZiNDY0ZDU3M2E5YmQ1N2E", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-09T18:49:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-09T18:49:32Z"}, "message": "Rollup merge of #111242 - wangkirin:support_rpath_independent_config, r=albertlarsan68\n\nsupport set `rpath` option  for each target independently\n\nCurrently  the `rpath` option is a global config and it's effect on all targets.\nBut sometimes when developers edit the rustc code and try to release rust toolchains themselves, they may not want to add `rpath` in all targets  to avoid dynamically linked shared object library privilege escalation attack.\nThis PR supports set `rpath` option  for each target independently .\nCommon developers are not aware of the existence of this configuration  option and do not affect the existing development process. This configuration option takes effect only after developers explicitly sets .\n\nr? ``@albertlarsan68``", "tree": {"sha": "ba9227d17de68de539375b0ff8232d8df39803a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba9227d17de68de539375b0ff8232d8df39803a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efe697e1331d1a5175750b0f6b464d573a9bd57a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkWpW8CRBK7hj4Ov3rIwAANOMIAIR6zX2on4J0rtyuNHLJV0Wq\njfhmwQBfXmzhGK73pmFF5r9kVqXvY2q6dhkwj3aD0fzVejGj2cR3nLqlCWt5V7nF\nTFwpYOtVDtMURZMLFvA4CYnelubrsGKwKfiqmjRVuiXjRJr6ySpjyFu5s241jZWG\nqIrBTyFDyggtaKcqUFH9Jh3rHiQUJkKAJyptTZjxbzsJIEoHUgAEfOorkUHVUB0x\nS2aXihBPC+JedFn6nRERMF58r4KTw9Gj2ZTQo+uotRl9nP8v1OOeEHBR3tqPss6D\nd5cvBRD1UF/hRkwLKuqK48KJiUvjEU9bn6fpti4zgNdrcmnkJBTG4natC0s2UTI=\n=nqtI\n-----END PGP SIGNATURE-----\n", "payload": "tree ba9227d17de68de539375b0ff8232d8df39803a9\nparent 363d158cd88b9e01bf92c98176e472b13ecf6bd8\nparent bb4976ab2daf56b02e3bc94c932927331bd61cb5\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1683658172 +0200\ncommitter GitHub <noreply@github.com> 1683658172 +0200\n\nRollup merge of #111242 - wangkirin:support_rpath_independent_config, r=albertlarsan68\n\nsupport set `rpath` option  for each target independently\n\nCurrently  the `rpath` option is a global config and it's effect on all targets.\nBut sometimes when developers edit the rustc code and try to release rust toolchains themselves, they may not want to add `rpath` in all targets  to avoid dynamically linked shared object library privilege escalation attack.\nThis PR supports set `rpath` option  for each target independently .\nCommon developers are not aware of the existence of this configuration  option and do not affect the existing development process. This configuration option takes effect only after developers explicitly sets .\n\nr? ``@albertlarsan68``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efe697e1331d1a5175750b0f6b464d573a9bd57a", "html_url": "https://github.com/rust-lang/rust/commit/efe697e1331d1a5175750b0f6b464d573a9bd57a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efe697e1331d1a5175750b0f6b464d573a9bd57a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "363d158cd88b9e01bf92c98176e472b13ecf6bd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/363d158cd88b9e01bf92c98176e472b13ecf6bd8", "html_url": "https://github.com/rust-lang/rust/commit/363d158cd88b9e01bf92c98176e472b13ecf6bd8"}, {"sha": "bb4976ab2daf56b02e3bc94c932927331bd61cb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb4976ab2daf56b02e3bc94c932927331bd61cb5", "html_url": "https://github.com/rust-lang/rust/commit/bb4976ab2daf56b02e3bc94c932927331bd61cb5"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "d0eaa9fd7ffac3dd33bdc810e37abba949d829a1", "filename": "config.example.toml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/efe697e1331d1a5175750b0f6b464d573a9bd57a/config.example.toml", "raw_url": "https://github.com/rust-lang/rust/raw/efe697e1331d1a5175750b0f6b464d573a9bd57a/config.example.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.example.toml?ref=efe697e1331d1a5175750b0f6b464d573a9bd57a", "patch": "@@ -750,6 +750,10 @@ changelog-seen = 2\n # This option will override the same option under [build] section.\n #profiler = build.profiler (bool)\n \n+# This option supports enable `rpath` in each target independently, \n+# and will override the same option under [rust] section. It only works on Unix platforms\n+#rpath = rust.rpath (bool)\n+\n # Force static or dynamic linkage of the standard library for this target. If\n # this target is a host for rustc, this will also affect the linkage of the\n # compiler itself. This is useful for building rustc on targets that normally"}, {"sha": "d6924cf2cfb23c3d8ed7716b32e242ac5e5028bd", "filename": "src/bootstrap/CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/efe697e1331d1a5175750b0f6b464d573a9bd57a/src%2Fbootstrap%2FCHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/efe697e1331d1a5175750b0f6b464d573a9bd57a/src%2Fbootstrap%2FCHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCHANGELOG.md?ref=efe697e1331d1a5175750b0f6b464d573a9bd57a", "patch": "@@ -27,6 +27,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n   from the default rust toolchain. [#78513](https://github.com/rust-lang/rust/pull/78513)\n - Add options for enabling overflow checks, one for std (`overflow-checks-std`) and one for everything else (`overflow-checks`). Both default to false.\n - Add llvm option `enable-warnings` to have control on llvm compilation warnings. Default to false.\n+- Add `rpath` option in `target` section to support set rpath option for each target independently. [#111242](https://github.com/rust-lang/rust/pull/111242)\n \n \n ## [Version 2] - 2020-09-25"}, {"sha": "237f65b039f824aa6827c6133de4b54d89451b34", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/efe697e1331d1a5175750b0f6b464d573a9bd57a/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efe697e1331d1a5175750b0f6b464d573a9bd57a/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=efe697e1331d1a5175750b0f6b464d573a9bd57a", "patch": "@@ -1623,7 +1623,7 @@ impl<'a> Builder<'a> {\n         // argument manually via `-C link-args=-Wl,-rpath,...`. Plus isn't it\n         // fun to pass a flag to a tool to pass a flag to pass a flag to a tool\n         // to change a flag in a binary?\n-        if self.config.rust_rpath && util::use_host_linker(target) {\n+        if self.config.rpath_enabled(target) && util::use_host_linker(target) {\n             let rpath = if target.contains(\"apple\") {\n                 // Note that we need to take one extra step on macOS to also pass\n                 // `-Wl,-instal_name,@rpath/...` to get things to work right. To"}, {"sha": "bf3bc3247acafa780936e377f1a1f81d7045e88e", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/efe697e1331d1a5175750b0f6b464d573a9bd57a/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efe697e1331d1a5175750b0f6b464d573a9bd57a/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=efe697e1331d1a5175750b0f6b464d573a9bd57a", "patch": "@@ -467,6 +467,7 @@ pub struct Target {\n     pub ndk: Option<PathBuf>,\n     pub sanitizers: Option<bool>,\n     pub profiler: Option<bool>,\n+    pub rpath: Option<bool>,\n     pub crt_static: Option<bool>,\n     pub musl_root: Option<PathBuf>,\n     pub musl_libdir: Option<PathBuf>,\n@@ -812,6 +813,7 @@ define_config! {\n         android_ndk: Option<String> = \"android-ndk\",\n         sanitizers: Option<bool> = \"sanitizers\",\n         profiler: Option<bool> = \"profiler\",\n+        rpath: Option<bool> = \"rpath\",\n         crt_static: Option<bool> = \"crt-static\",\n         musl_root: Option<String> = \"musl-root\",\n         musl_libdir: Option<String> = \"musl-libdir\",\n@@ -1318,6 +1320,7 @@ impl Config {\n                 target.qemu_rootfs = cfg.qemu_rootfs.map(PathBuf::from);\n                 target.sanitizers = cfg.sanitizers;\n                 target.profiler = cfg.profiler;\n+                target.rpath = cfg.rpath;\n \n                 config.target_config.insert(TargetSelection::from_user(&triple), target);\n             }\n@@ -1649,6 +1652,10 @@ impl Config {\n         self.target_config.values().any(|t| t.profiler == Some(true)) || self.profiler\n     }\n \n+    pub fn rpath_enabled(&self, target: TargetSelection) -> bool {\n+        self.target_config.get(&target).map(|t| t.rpath).flatten().unwrap_or(self.rust_rpath)\n+    }\n+\n     pub fn llvm_enabled(&self) -> bool {\n         self.rust_codegen_backends.contains(&INTERNER.intern_str(\"llvm\"))\n     }"}]}