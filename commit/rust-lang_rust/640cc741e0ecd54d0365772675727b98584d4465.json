{"sha": "640cc741e0ecd54d0365772675727b98584d4465", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0MGNjNzQxZTBlY2Q1NGQwMzY1NzcyNjc1NzI3Yjk4NTg0ZDQ0NjU=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-22T23:35:20Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-22T23:35:20Z"}, "message": "Remove unnecessary `edition` parameter to renderer", "tree": {"sha": "54b900f73211d86532e277b566f50ce64081742e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54b900f73211d86532e277b566f50ce64081742e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/640cc741e0ecd54d0365772675727b98584d4465", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/640cc741e0ecd54d0365772675727b98584d4465", "html_url": "https://github.com/rust-lang/rust/commit/640cc741e0ecd54d0365772675727b98584d4465", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/640cc741e0ecd54d0365772675727b98584d4465/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68db5869e3b64ed13390454484bb977d2e202afa", "url": "https://api.github.com/repos/rust-lang/rust/commits/68db5869e3b64ed13390454484bb977d2e202afa", "html_url": "https://github.com/rust-lang/rust/commit/68db5869e3b64ed13390454484bb977d2e202afa"}], "stats": {"total": 31, "additions": 6, "deletions": 25}, "files": [{"sha": "6c5c53b7d1acbcf678653abe8d786a3579c74ab7", "filename": "src/librustdoc/formats/renderer.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/640cc741e0ecd54d0365772675727b98584d4465/src%2Flibrustdoc%2Fformats%2Frenderer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/640cc741e0ecd54d0365772675727b98584d4465/src%2Flibrustdoc%2Fformats%2Frenderer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Frenderer.rs?ref=640cc741e0ecd54d0365772675727b98584d4465", "patch": "@@ -1,5 +1,5 @@\n use rustc_middle::ty::TyCtxt;\n-use rustc_span::{edition::Edition, Symbol};\n+use rustc_span::Symbol;\n \n use crate::clean;\n use crate::config::RenderOptions;\n@@ -23,7 +23,6 @@ crate trait FormatRenderer<'tcx>: Sized {\n     fn init(\n         krate: clean::Crate,\n         options: RenderOptions,\n-        edition: Edition,\n         cache: Cache,\n         tcx: TyCtxt<'tcx>,\n     ) -> Result<(Self, clean::Crate), Error>;\n@@ -51,15 +50,14 @@ crate fn run_format<'tcx, T: FormatRenderer<'tcx>>(\n     krate: clean::Crate,\n     options: RenderOptions,\n     cache: Cache,\n-    edition: Edition,\n     tcx: TyCtxt<'tcx>,\n ) -> Result<(), Error> {\n     let prof = &tcx.sess.prof;\n \n     let emit_crate = options.should_emit_crate();\n     let (mut format_renderer, krate) = prof\n         .extra_verbose_generic_activity(\"create_renderer\", T::descr())\n-        .run(|| T::init(krate, options, edition, cache, tcx))?;\n+        .run(|| T::init(krate, options, cache, tcx))?;\n \n     if !emit_crate {\n         return Ok(());"}, {"sha": "9e05fa599a7629bdf6011d42cd941e0965a310bc", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/640cc741e0ecd54d0365772675727b98584d4465/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/640cc741e0ecd54d0365772675727b98584d4465/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=640cc741e0ecd54d0365772675727b98584d4465", "patch": "@@ -346,7 +346,6 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n     fn init(\n         mut krate: clean::Crate,\n         options: RenderOptions,\n-        edition: Edition,\n         mut cache: Cache,\n         tcx: TyCtxt<'tcx>,\n     ) -> Result<(Self, clean::Crate), Error> {\n@@ -435,7 +434,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             resource_suffix,\n             static_root_path,\n             fs: DocFS::new(sender),\n-            edition,\n+            edition: tcx.sess.edition(),\n             codes: ErrorCodes::from(unstable_features.is_nightly_build()),\n             playground,\n             all: RefCell::new(AllTypes::new()),"}, {"sha": "0023f6c4c0ba81e1250aef7ab0461f13f0e683fc", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/640cc741e0ecd54d0365772675727b98584d4465/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/640cc741e0ecd54d0365772675727b98584d4465/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=640cc741e0ecd54d0365772675727b98584d4465", "patch": "@@ -14,7 +14,6 @@ use std::rc::Rc;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_middle::ty::TyCtxt;\n use rustc_session::Session;\n-use rustc_span::edition::Edition;\n \n use rustdoc_json_types as types;\n \n@@ -134,7 +133,6 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n     fn init(\n         krate: clean::Crate,\n         options: RenderOptions,\n-        _edition: Edition,\n         cache: Cache,\n         tcx: TyCtxt<'tcx>,\n     ) -> Result<(Self, clean::Crate), Error> {"}, {"sha": "26aaf0db6f6204edf85b8f4d67d74ddb37c57bfa", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/640cc741e0ecd54d0365772675727b98584d4465/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/640cc741e0ecd54d0365772675727b98584d4465/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=640cc741e0ecd54d0365772675727b98584d4465", "patch": "@@ -656,10 +656,9 @@ fn run_renderer<'tcx, T: formats::FormatRenderer<'tcx>>(\n     krate: clean::Crate,\n     renderopts: config::RenderOptions,\n     cache: formats::cache::Cache,\n-    edition: rustc_span::edition::Edition,\n     tcx: TyCtxt<'tcx>,\n ) -> MainResult {\n-    match formats::run_format::<T>(krate, renderopts, cache, edition, tcx) {\n+    match formats::run_format::<T>(krate, renderopts, cache, tcx) {\n         Ok(_) => Ok(()),\n         Err(e) => {\n             let mut msg =\n@@ -692,7 +691,6 @@ fn main_options(options: config::Options) -> MainResult {\n \n     // need to move these items separately because we lose them by the time the closure is called,\n     // but we can't create the Handler ahead of time because it's not Send\n-    let edition = options.edition;\n     let show_coverage = options.show_coverage;\n     let run_check = options.run_check;\n \n@@ -760,22 +758,10 @@ fn main_options(options: config::Options) -> MainResult {\n                 info!(\"going to format\");\n                 match output_format {\n                     config::OutputFormat::Html => sess.time(\"render_html\", || {\n-                        run_renderer::<html::render::Context<'_>>(\n-                            krate,\n-                            render_opts,\n-                            cache,\n-                            edition,\n-                            tcx,\n-                        )\n+                        run_renderer::<html::render::Context<'_>>(krate, render_opts, cache, tcx)\n                     }),\n                     config::OutputFormat::Json => sess.time(\"render_json\", || {\n-                        run_renderer::<json::JsonRenderer<'_>>(\n-                            krate,\n-                            render_opts,\n-                            cache,\n-                            edition,\n-                            tcx,\n-                        )\n+                        run_renderer::<json::JsonRenderer<'_>>(krate, render_opts, cache, tcx)\n                     }),\n                 }\n             })"}]}