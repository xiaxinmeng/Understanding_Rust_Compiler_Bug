{"sha": "424492acc863bb83dc70eee5847b9f3d677f5e14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNDQ5MmFjYzg2M2JiODNkYzcwZWVlNTg0N2I5ZjNkNjc3ZjVlMTQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-27T23:15:33Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-05T06:33:09Z"}, "message": "or-patterns: syntax: adjust pretty printing.", "tree": {"sha": "c55edfb31fc51f976912e1ac19cf39d247710288", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c55edfb31fc51f976912e1ac19cf39d247710288"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/424492acc863bb83dc70eee5847b9f3d677f5e14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/424492acc863bb83dc70eee5847b9f3d677f5e14", "html_url": "https://github.com/rust-lang/rust/commit/424492acc863bb83dc70eee5847b9f3d677f5e14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/424492acc863bb83dc70eee5847b9f3d677f5e14/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad3db726d118184780f0ba3703c0c60126db50a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad3db726d118184780f0ba3703c0c60126db50a7", "html_url": "https://github.com/rust-lang/rust/commit/ad3db726d118184780f0ba3703c0c60126db50a7"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "6755709d794886bf2de4256476a679f0767ea7f7", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/424492acc863bb83dc70eee5847b9f3d677f5e14/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/424492acc863bb83dc70eee5847b9f3d677f5e14/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=424492acc863bb83dc70eee5847b9f3d677f5e14", "patch": "@@ -1714,11 +1714,11 @@ impl<'a> State<'a> {\n         self.ann.post(self, AnnNode::Block(blk))\n     }\n \n-    /// Print a `let pats = scrutinee` expression.\n-    crate fn print_let(&mut self, pats: &[P<ast::Pat>], scrutinee: &ast::Expr) {\n+    /// Print a `let pat = scrutinee` expression.\n+    crate fn print_let(&mut self, pat: &ast::Pat, scrutinee: &ast::Expr) {\n         self.s.word(\"let \");\n \n-        self.print_pats(pats);\n+        self.print_pat(pat);\n         self.s.space();\n \n         self.word_space(\"=\");\n@@ -2044,8 +2044,8 @@ impl<'a> State<'a> {\n                 self.word_space(\":\");\n                 self.print_type(ty);\n             }\n-            ast::ExprKind::Let(ref pats, ref scrutinee) => {\n-                self.print_let(pats, scrutinee);\n+            ast::ExprKind::Let(ref pat, ref scrutinee) => {\n+                self.print_let(pat, scrutinee);\n             }\n             ast::ExprKind::If(ref test, ref blk, ref elseopt) => {\n                 self.print_if(test, blk, elseopt.as_ref().map(|e| &**e));\n@@ -2455,21 +2455,16 @@ impl<'a> State<'a> {\n         self.ann.post(self, AnnNode::Pat(pat))\n     }\n \n-    fn print_pats(&mut self, pats: &[P<ast::Pat>]) {\n-        self.strsep(\"|\", true, Inconsistent, pats, |s, p| s.print_pat(p));\n-    }\n-\n     fn print_arm(&mut self, arm: &ast::Arm) {\n-        // I have no idea why this check is necessary, but here it\n-        // is :(\n+        // I have no idea why this check is necessary, but here it is :(\n         if arm.attrs.is_empty() {\n             self.s.space();\n         }\n         self.cbox(INDENT_UNIT);\n         self.ibox(0);\n-        self.maybe_print_comment(arm.pats[0].span.lo());\n+        self.maybe_print_comment(arm.pat.span.lo());\n         self.print_outer_attributes(&arm.attrs);\n-        self.print_pats(&arm.pats);\n+        self.print_pat(&arm.pat);\n         self.s.space();\n         if let Some(ref e) = arm.guard {\n             self.word_space(\"if\");"}]}