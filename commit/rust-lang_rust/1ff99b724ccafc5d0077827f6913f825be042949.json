{"sha": "1ff99b724ccafc5d0077827f6913f825be042949", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmZjk5YjcyNGNjYWZjNWQwMDc3ODI3ZjY5MTNmODI1YmUwNDI5NDk=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2020-03-05T19:06:40Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-04-10T16:07:56Z"}, "message": "copy test cases to `if let` as well.", "tree": {"sha": "79bf2c6126c96f6c9fe4900c96a6d2c12fc44a05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79bf2c6126c96f6c9fe4900c96a6d2c12fc44a05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ff99b724ccafc5d0077827f6913f825be042949", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ff99b724ccafc5d0077827f6913f825be042949", "html_url": "https://github.com/rust-lang/rust/commit/1ff99b724ccafc5d0077827f6913f825be042949", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ff99b724ccafc5d0077827f6913f825be042949/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "192d5330c40ea8ac4e3f3462c47c7cbe9b293ec9", "url": "https://api.github.com/repos/rust-lang/rust/commits/192d5330c40ea8ac4e3f3462c47c7cbe9b293ec9", "html_url": "https://github.com/rust-lang/rust/commit/192d5330c40ea8ac4e3f3462c47c7cbe9b293ec9"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "7646472f45fac4e78ef29b4faf4425dcba9c030b", "filename": "src/test/ui/binding/issue-53114-borrow-checks.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1ff99b724ccafc5d0077827f6913f825be042949/src%2Ftest%2Fui%2Fbinding%2Fissue-53114-borrow-checks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ff99b724ccafc5d0077827f6913f825be042949/src%2Ftest%2Fui%2Fbinding%2Fissue-53114-borrow-checks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinding%2Fissue-53114-borrow-checks.rs?ref=1ff99b724ccafc5d0077827f6913f825be042949", "patch": "@@ -2,7 +2,7 @@\n // checker, and both had some deviations from our ideal state. This test\n // captures the behavior of how `_` bindings are handled with respect to how we\n // flag expressions that are meant to request unsafe blocks.\n-\n+#![allow(irrefutable_let_patterns)]\n struct M;\n \n fn let_wild_gets_moved_expr() {\n@@ -30,6 +30,20 @@ fn match_moved_expr_to_wild() {\n     //~^ ERROR [E0382]\n }\n \n+fn if_let_moved_expr_to_wild() {\n+    let m = M;\n+    drop(m);\n+    if let _ = m { } // #53114: should eventually be accepted too\n+    //~^ ERROR [E0382]\n+\n+    let mm = (M, M); // variation on above with `_` in substructure\n+    if let (_x, _) = mm { }\n+    if let (_, _y) = mm { }\n+    //~^ ERROR [E0382]\n+    if let (_, _) = mm { }\n+    //~^ ERROR [E0382]\n+}\n+\n fn let_wild_gets_borrowed_expr() {\n     let mut m = M;\n     let r = &mut m;\n@@ -55,4 +69,16 @@ fn match_borrowed_expr_to_wild() {\n     drop((r1, r2));\n }\n \n+fn if_let_borrowed_expr_to_wild() {\n+    let mut m = M;\n+    let r = &mut m;\n+    if let _ = m { } // accepted, and want it to continue to be\n+    drop(r);\n+\n+    let mut mm = (M, M); // variation on above with `_` in substructure\n+    let (r1, r2) = (&mut mm.0, &mut mm.1);\n+    if let (_, _) = mm { }\n+    drop((r1, r2));\n+}\n+\n fn main() { }"}, {"sha": "f535a66cf63ba4f92b864870abc68f4a50257df5", "filename": "src/test/ui/binding/issue-53114-borrow-checks.stderr", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/1ff99b724ccafc5d0077827f6913f825be042949/src%2Ftest%2Fui%2Fbinding%2Fissue-53114-borrow-checks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ff99b724ccafc5d0077827f6913f825be042949/src%2Ftest%2Fui%2Fbinding%2Fissue-53114-borrow-checks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinding%2Fissue-53114-borrow-checks.stderr?ref=1ff99b724ccafc5d0077827f6913f825be042949", "patch": "@@ -29,6 +29,37 @@ LL |     match mm { (_, _) => { } }\n    |\n    = note: move occurs because `mm.1` has type `M`, which does not implement the `Copy` trait\n \n-error: aborting due to 3 previous errors\n+error[E0382]: use of moved value: `m`\n+  --> $DIR/issue-53114-borrow-checks.rs:36:16\n+   |\n+34 |     let m = M;\n+   |         - move occurs because `m` has type `M`, which does not implement the `Copy` trait\n+35 |     drop(m);\n+   |          - value moved here\n+36 |     if let _ = m { } // #53114: should eventually be accepted too\n+   |                ^ value used here after move\n+\n+error[E0382]: use of moved value: `mm`\n+  --> $DIR/issue-53114-borrow-checks.rs:41:22\n+   |\n+40 |     if let (_x, _) = mm { }\n+   |             -- value moved here\n+41 |     if let (_, _y) = mm { }\n+   |                      ^^ value used here after partial move\n+   |\n+   = note: move occurs because `mm.0` has type `M`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `mm`\n+  --> $DIR/issue-53114-borrow-checks.rs:43:21\n+   |\n+41 |     if let (_, _y) = mm { }\n+   |                -- value moved here\n+42 |\n+43 |     if let (_, _) = mm { }\n+   |                     ^^ value used here after partial move\n+   |\n+   = note: move occurs because `mm.1` has type `M`, which does not implement the `Copy` trait\n+\n+error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0382`."}]}