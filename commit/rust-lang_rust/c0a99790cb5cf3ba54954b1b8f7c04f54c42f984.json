{"sha": "c0a99790cb5cf3ba54954b1b8f7c04f54c42f984", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwYTk5NzkwY2I1Y2YzYmE1NDk1NGIxYjhmN2MwNGY1NGM0MmY5ODQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-29T06:14:54Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-29T07:20:05Z"}, "message": "core: Add str::capacity", "tree": {"sha": "bd816f7f43632a3f98fc8eabdb55b00dfb48f588", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd816f7f43632a3f98fc8eabdb55b00dfb48f588"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0a99790cb5cf3ba54954b1b8f7c04f54c42f984", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0a99790cb5cf3ba54954b1b8f7c04f54c42f984", "html_url": "https://github.com/rust-lang/rust/commit/c0a99790cb5cf3ba54954b1b8f7c04f54c42f984", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0a99790cb5cf3ba54954b1b8f7c04f54c42f984/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad21976fbc4776fe09f98cd087fbe4cecf23cd84", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad21976fbc4776fe09f98cd087fbe4cecf23cd84", "html_url": "https://github.com/rust-lang/rust/commit/ad21976fbc4776fe09f98cd087fbe4cecf23cd84"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "20ac62dbac090fda8582189ba2c0377335be298b", "filename": "src/libcore/str.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c0a99790cb5cf3ba54954b1b8f7c04f54c42f984/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0a99790cb5cf3ba54954b1b8f7c04f54c42f984/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=c0a99790cb5cf3ba54954b1b8f7c04f54c42f984", "patch": "@@ -94,6 +94,7 @@ export\n    char_at,\n    reserve,\n    reserve_at_least,\n+   capacity,\n \n    unsafe;\n \n@@ -1530,6 +1531,18 @@ fn reserve_at_least(&s: str, n: uint) unsafe {\n     reserve(s, uint::next_power_of_two(n + 1u) - 1u)\n }\n \n+#[doc = \"\n+Returns the number of single-byte characters the string can hold without\n+reallocating\n+\"]\n+fn capacity(&&s: str) -> uint unsafe {\n+    as_bytes(s) {|buf|\n+        let vcap = vec::capacity(buf);\n+        assert vcap > 0u;\n+        vcap - 1u\n+    }\n+}\n+\n #[doc = \"Unsafe operations\"]\n mod unsafe {\n    export"}]}