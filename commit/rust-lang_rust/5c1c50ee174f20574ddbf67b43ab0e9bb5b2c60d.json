{"sha": "5c1c50ee174f20574ddbf67b43ab0e9bb5b2c60d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjMWM1MGVlMTc0ZjIwNTc0ZGRiZjY3YjQzYWIwZTliYjViMmM2MGQ=", "commit": {"author": {"name": "Ryan Sullivant", "email": "rsulli55@gmail.com", "date": "2020-11-11T06:48:01Z"}, "committer": {"name": "Ryan Sullivant", "email": "rsulli55@gmail.com", "date": "2020-11-11T06:48:01Z"}, "message": "Change variable named `foo` and rerun `update-all-references`", "tree": {"sha": "9adb7569ccf7aa9a2dfcc0044d9d616f7ac7062e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9adb7569ccf7aa9a2dfcc0044d9d616f7ac7062e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c1c50ee174f20574ddbf67b43ab0e9bb5b2c60d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c1c50ee174f20574ddbf67b43ab0e9bb5b2c60d", "html_url": "https://github.com/rust-lang/rust/commit/5c1c50ee174f20574ddbf67b43ab0e9bb5b2c60d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c1c50ee174f20574ddbf67b43ab0e9bb5b2c60d/comments", "author": {"login": "rsulli55", "id": 22406159, "node_id": "MDQ6VXNlcjIyNDA2MTU5", "avatar_url": "https://avatars.githubusercontent.com/u/22406159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsulli55", "html_url": "https://github.com/rsulli55", "followers_url": "https://api.github.com/users/rsulli55/followers", "following_url": "https://api.github.com/users/rsulli55/following{/other_user}", "gists_url": "https://api.github.com/users/rsulli55/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsulli55/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsulli55/subscriptions", "organizations_url": "https://api.github.com/users/rsulli55/orgs", "repos_url": "https://api.github.com/users/rsulli55/repos", "events_url": "https://api.github.com/users/rsulli55/events{/privacy}", "received_events_url": "https://api.github.com/users/rsulli55/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsulli55", "id": 22406159, "node_id": "MDQ6VXNlcjIyNDA2MTU5", "avatar_url": "https://avatars.githubusercontent.com/u/22406159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsulli55", "html_url": "https://github.com/rsulli55", "followers_url": "https://api.github.com/users/rsulli55/followers", "following_url": "https://api.github.com/users/rsulli55/following{/other_user}", "gists_url": "https://api.github.com/users/rsulli55/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsulli55/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsulli55/subscriptions", "organizations_url": "https://api.github.com/users/rsulli55/orgs", "repos_url": "https://api.github.com/users/rsulli55/repos", "events_url": "https://api.github.com/users/rsulli55/events{/privacy}", "received_events_url": "https://api.github.com/users/rsulli55/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56d252c53d1d4f7822b336d086659c26a8f0bb4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/56d252c53d1d4f7822b336d086659c26a8f0bb4d", "html_url": "https://github.com/rust-lang/rust/commit/56d252c53d1d4f7822b336d086659c26a8f0bb4d"}], "stats": {"total": 36, "additions": 14, "deletions": 22}, "files": [{"sha": "f0dc3b3d06bbc7f4f30d4c32e51e0d9dd2a968af", "filename": "tests/ui/search_is_some.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5c1c50ee174f20574ddbf67b43ab0e9bb5b2c60d/tests%2Fui%2Fsearch_is_some.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c1c50ee174f20574ddbf67b43ab0e9bb5b2c60d/tests%2Fui%2Fsearch_is_some.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsearch_is_some.rs?ref=5c1c50ee174f20574ddbf67b43ab0e9bb5b2c60d", "patch": "@@ -28,10 +28,10 @@ fn main() {\n                    ).is_some();\n \n     // Check that we don't lint if the caller is not an `Iterator` or string\n-    let foo = IteratorFalsePositives { foo: 0 };\n-    let _ = foo.find().is_some();\n-    let _ = foo.position().is_some();\n-    let _ = foo.rposition().is_some();\n+    let falsepos = IteratorFalsePositives { foo: 0 };\n+    let _ = falsepos.find().is_some();\n+    let _ = falsepos.position().is_some();\n+    let _ = falsepos.rposition().is_some();\n     // check that we don't lint if `find()` is called with\n     // `Pattern` that is not a string\n     let _ = \"hello world\".find(|c: char| c == 'o' || c == 'l').is_some();"}, {"sha": "c601f568c609bccf4cf3d7b9c60ac5f3823da45a", "filename": "tests/ui/search_is_some.stderr", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5c1c50ee174f20574ddbf67b43ab0e9bb5b2c60d/tests%2Fui%2Fsearch_is_some.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c1c50ee174f20574ddbf67b43ab0e9bb5b2c60d/tests%2Fui%2Fsearch_is_some.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsearch_is_some.stderr?ref=5c1c50ee174f20574ddbf67b43ab0e9bb5b2c60d", "patch": "@@ -1,4 +1,4 @@\n-error: called `is_some()` after searching an `Iterator` with find\n+error: called `is_some()` after searching an `Iterator` with `find`\n   --> $DIR/search_is_some.rs:13:13\n    |\n LL |       let _ = v.iter().find(|&x| {\n@@ -11,7 +11,7 @@ LL | |                    ).is_some();\n    = note: `-D clippy::search-is-some` implied by `-D warnings`\n    = help: this is more succinctly expressed by calling `any()`\n \n-error: called `is_some()` after searching an `Iterator` with position\n+error: called `is_some()` after searching an `Iterator` with `position`\n   --> $DIR/search_is_some.rs:19:13\n    |\n LL |       let _ = v.iter().position(|&x| {\n@@ -23,7 +23,7 @@ LL | |                    ).is_some();\n    |\n    = help: this is more succinctly expressed by calling `any()`\n \n-error: called `is_some()` after searching an `Iterator` with rposition\n+error: called `is_some()` after searching an `Iterator` with `rposition`\n   --> $DIR/search_is_some.rs:25:13\n    |\n LL |       let _ = v.iter().rposition(|&x| {\n@@ -35,13 +35,5 @@ LL | |                    ).is_some();\n    |\n    = help: this is more succinctly expressed by calling `any()`\n \n-error: use of a blacklisted/placeholder name `foo`\n-  --> $DIR/search_is_some.rs:31:9\n-   |\n-LL |     let foo = IteratorFalsePositives { foo: 0 };\n-   |         ^^^\n-   |\n-   = note: `-D clippy::blacklisted-name` implied by `-D warnings`\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n "}, {"sha": "23c1d9a901b97da68cdbd6636f55a73c99ff069e", "filename": "tests/ui/search_is_some_fixable.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5c1c50ee174f20574ddbf67b43ab0e9bb5b2c60d/tests%2Fui%2Fsearch_is_some_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c1c50ee174f20574ddbf67b43ab0e9bb5b2c60d/tests%2Fui%2Fsearch_is_some_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsearch_is_some_fixable.stderr?ref=5c1c50ee174f20574ddbf67b43ab0e9bb5b2c60d", "patch": "@@ -1,36 +1,36 @@\n-error: called `is_some()` after searching an `Iterator` with find\n+error: called `is_some()` after searching an `Iterator` with `find`\n   --> $DIR/search_is_some_fixable.rs:10:22\n    |\n LL |     let _ = v.iter().find(|&x| *x < 0).is_some();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| *x < 0)`\n    |\n    = note: `-D clippy::search-is-some` implied by `-D warnings`\n \n-error: called `is_some()` after searching an `Iterator` with find\n+error: called `is_some()` after searching an `Iterator` with `find`\n   --> $DIR/search_is_some_fixable.rs:11:20\n    |\n LL |     let _ = (0..1).find(|x| **y == *x).is_some(); // one dereference less\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| **y == x)`\n \n-error: called `is_some()` after searching an `Iterator` with find\n+error: called `is_some()` after searching an `Iterator` with `find`\n   --> $DIR/search_is_some_fixable.rs:12:20\n    |\n LL |     let _ = (0..1).find(|x| *x == 0).is_some();\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x == 0)`\n \n-error: called `is_some()` after searching an `Iterator` with find\n+error: called `is_some()` after searching an `Iterator` with `find`\n   --> $DIR/search_is_some_fixable.rs:13:22\n    |\n LL |     let _ = v.iter().find(|x| **x == 0).is_some();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| *x == 0)`\n \n-error: called `is_some()` after searching an `Iterator` with position\n+error: called `is_some()` after searching an `Iterator` with `position`\n   --> $DIR/search_is_some_fixable.rs:16:22\n    |\n LL |     let _ = v.iter().position(|&x| x < 0).is_some();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|&x| x < 0)`\n \n-error: called `is_some()` after searching an `Iterator` with rposition\n+error: called `is_some()` after searching an `Iterator` with `rposition`\n   --> $DIR/search_is_some_fixable.rs:19:22\n    |\n LL |     let _ = v.iter().rposition(|&x| x < 0).is_some();"}]}