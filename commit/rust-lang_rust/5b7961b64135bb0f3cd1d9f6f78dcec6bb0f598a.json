{"sha": "5b7961b64135bb0f3cd1d9f6f78dcec6bb0f598a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNzk2MWI2NDEzNWJiMGYzY2QxZDlmNmY3OGRjZWM2YmIwZjU5OGE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-02T01:34:13Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-02T01:34:13Z"}, "message": "Encode ty_native ebml node for native types so typechecker has something to work with.", "tree": {"sha": "3b3c3bf3784ecbb203cdbfabd62bdb5c06735060", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b3c3bf3784ecbb203cdbfabd62bdb5c06735060"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b7961b64135bb0f3cd1d9f6f78dcec6bb0f598a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b7961b64135bb0f3cd1d9f6f78dcec6bb0f598a", "html_url": "https://github.com/rust-lang/rust/commit/5b7961b64135bb0f3cd1d9f6f78dcec6bb0f598a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b7961b64135bb0f3cd1d9f6f78dcec6bb0f598a/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c077da553d4766af71d7f846c8526d460a6a113e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c077da553d4766af71d7f846c8526d460a6a113e", "html_url": "https://github.com/rust-lang/rust/commit/c077da553d4766af71d7f846c8526d460a6a113e"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "9216786dfd96d986452612045784eb2b50b357f6", "filename": "src/comp/middle/metadata.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b7961b64135bb0f3cd1d9f6f78dcec6bb0f598a/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b7961b64135bb0f3cd1d9f6f78dcec6bb0f598a/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fmetadata.rs?ref=5b7961b64135bb0f3cd1d9f6f78dcec6bb0f598a", "patch": "@@ -457,6 +457,7 @@ fn encode_info_for_native_item(@trans.crate_ctxt cx, &ebml.writer ebml_w,\n         case (ast.native_item_ty(_, ?did)) {\n             encode_def_id(ebml_w, did);\n             encode_kind(ebml_w, 'T' as u8);\n+            encode_type(ebml_w, ty.plain_ty(ty.ty_native));\n         }\n         case (ast.native_item_fn(_, _, _, ?tps, ?did, ?ann)) {\n             encode_def_id(ebml_w, did);"}]}