{"sha": "7e805eae8e93f6d54e13ac7ae4ce0e60447d6580", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlODA1ZWFlOGU5M2Y2ZDU0ZTEzYWM3YWU0Y2UwZTYwNDQ3ZDY1ODA=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-11-01T15:15:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-01T15:15:52Z"}, "message": "Rollup merge of #37316 - ollie27:docs_links, r=GuillaumeGomez\n\nFix a few links in the docs\n\nr? @steveklabnik", "tree": {"sha": "3c630f423e56e39487f3380c90ea0808b56adf22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c630f423e56e39487f3380c90ea0808b56adf22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580", "html_url": "https://github.com/rust-lang/rust/commit/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed96e4fd2e51bccff665a5bbbc92a7c83b7adab3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed96e4fd2e51bccff665a5bbbc92a7c83b7adab3", "html_url": "https://github.com/rust-lang/rust/commit/ed96e4fd2e51bccff665a5bbbc92a7c83b7adab3"}, {"sha": "8faa503a6b1a02cd66d2517187b0b501a02a4905", "url": "https://api.github.com/repos/rust-lang/rust/commits/8faa503a6b1a02cd66d2517187b0b501a02a4905", "html_url": "https://github.com/rust-lang/rust/commit/8faa503a6b1a02cd66d2517187b0b501a02a4905"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "830bbc079ad1e81cc242c5dbf2f7771d16dc8f09", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=7e805eae8e93f6d54e13ac7ae4ce0e60447d6580", "patch": "@@ -145,7 +145,7 @@ pub trait AsMut<T: ?Sized> {\n ///\n /// # Generic Impls\n ///\n-/// - `[From<T>][From] for U` implies `Into<U> for T`\n+/// - [`From<T>`][From]` for U` implies `Into<U> for T`\n /// - [`into()`] is reflexive, which means that `Into<T> for T` is implemented\n ///\n /// [`TryInto`]: trait.TryInto.html\n@@ -178,14 +178,14 @@ pub trait Into<T>: Sized {\n /// ```\n /// # Generic impls\n ///\n-/// - `From<T> for U` implies `[Into<U>] for T`\n+/// - `From<T> for U` implies [`Into<U>`]` for T`\n /// - [`from()`] is reflexive, which means that `From<T> for T` is implemented\n ///\n /// [`TryFrom`]: trait.TryFrom.html\n /// [`Option<T>`]: ../../std/option/enum.Option.html\n /// [`Result<T, E>`]: ../../std/result/enum.Result.html\n /// [`String`]: ../../std/string/struct.String.html\n-/// [Into<U>]: trait.Into.html\n+/// [`Into<U>`]: trait.Into.html\n /// [`from()`]: trait.From.html#tymethod.from\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait From<T>: Sized {"}, {"sha": "f69a60d9e1f7403d5c015b64e189b072841590b2", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=7e805eae8e93f6d54e13ac7ae4ce0e60447d6580", "patch": "@@ -42,12 +42,13 @@ macro_rules! panic {\n /// Unsafe code relies on `assert!` to enforce run-time invariants that, if\n /// violated could lead to unsafety.\n ///\n-/// Other use-cases of `assert!` include\n-/// [testing](https://doc.rust-lang.org/book/testing.html) and enforcing\n-/// run-time invariants in safe code (whose violation cannot result in unsafety).\n+/// Other use-cases of `assert!` include [testing] and enforcing run-time\n+/// invariants in safe code (whose violation cannot result in unsafety).\n ///\n /// This macro has a second version, where a custom panic message can be provided.\n ///\n+/// [testing]: ../book/testing.html\n+///\n /// # Examples\n ///\n /// ```"}, {"sha": "bdb0dd8e7d1a9e0a371164c582b2aaa4af9276fe", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=7e805eae8e93f6d54e13ac7ae4ce0e60447d6580", "patch": "@@ -241,8 +241,8 @@ pub trait Unsize<T: ?Sized> {\n /// compile-time error. Specifically, with structs you'll get [E0204] and with enums you'll get\n /// [E0205].\n ///\n-/// [E0204]: https://doc.rust-lang.org/error-index.html#E0204\n-/// [E0205]: https://doc.rust-lang.org/error-index.html#E0205\n+/// [E0204]: ../../error-index.html#E0204\n+/// [E0205]: ../../error-index.html#E0205\n ///\n /// ## When *should* my type be `Copy`?\n ///"}, {"sha": "e177963fade8497ad02ce5b2791c2596b7520888", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=7e805eae8e93f6d54e13ac7ae4ce0e60447d6580", "patch": "@@ -182,11 +182,11 @@ pub trait Drop {\n     /// After this function is over, the memory of `self` will be deallocated.\n     ///\n     /// This function cannot be called explicitly. This is compiler error\n-    /// [0040]. However, the [`std::mem::drop`] function in the prelude can be\n+    /// [E0040]. However, the [`std::mem::drop`] function in the prelude can be\n     /// used to call the argument's `Drop` implementation.\n     ///\n-    /// [0040]: https://doc.rust-lang.org/error-index.html#E0040\n-    /// [`std::mem::drop`]: https://doc.rust-lang.org/std/mem/fn.drop.html\n+    /// [E0040]: ../../error-index.html#E0040\n+    /// [`std::mem::drop`]: ../../std/mem/fn.drop.html\n     ///\n     /// # Panics\n     ///"}, {"sha": "454fa47cfbc99f4277cfab407759e5d18ad0c132", "filename": "src/libstd/error.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=7e805eae8e93f6d54e13ac7ae4ce0e60447d6580", "patch": "@@ -69,7 +69,9 @@ pub trait Error: Debug + Display {\n     /// It should not contain newlines or sentence-ending punctuation,\n     /// to facilitate embedding in larger user-facing strings.\n     /// For showing formatted error messages with more information see\n-    /// [Display](https://doc.rust-lang.org/std/fmt/trait.Display.html).\n+    /// [`Display`].\n+    ///\n+    /// [`Display`]: ../fmt/trait.Display.html\n     ///\n     /// # Examples\n     ///"}, {"sha": "1b5023380a7833c9adc13422817cb75d2b0098fb", "filename": "src/libstd/io/cursor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/src%2Flibstd%2Fio%2Fcursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/src%2Flibstd%2Fio%2Fcursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fcursor.rs?ref=7e805eae8e93f6d54e13ac7ae4ce0e60447d6580", "patch": "@@ -23,7 +23,7 @@ use io::{self, SeekFrom, Error, ErrorKind};\n ///\n /// The standard library implements some I/O traits on various types which\n /// are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and\n-/// `Cursor<`[`&[u8]`]`>`.\n+/// `Cursor<`[`&[u8]`][bytes]`>`.\n ///\n /// # Examples\n ///\n@@ -35,7 +35,7 @@ use io::{self, SeekFrom, Error, ErrorKind};\n /// [`Read`]: ../../std/io/trait.Read.html\n /// [`Write`]: ../../std/io/trait.Write.html\n /// [`Vec`]: ../../std/vec/struct.Vec.html\n-/// [`&[u8]`]: ../../std/primitive.slice.html\n+/// [bytes]: ../../std/primitive.slice.html\n /// [`File`]: ../fs/struct.File.html\n ///\n /// ```no_run"}, {"sha": "9b7f9980cc0af5873664bd5d43f5d6aa716bbd65", "filename": "src/libstd/path.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e805eae8e93f6d54e13ac7ae4ce0e60447d6580/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=7e805eae8e93f6d54e13ac7ae4ce0e60447d6580", "patch": "@@ -914,6 +914,7 @@ impl<'a> cmp::Ord for Components<'a> {\n /// [`Path`]: struct.Path.html\n /// [`push`]: struct.PathBuf.html#method.push\n /// [`set_extension`]: struct.PathBuf.html#method.set_extension\n+/// [`Deref`]: ../ops/trait.Deref.html\n ///\n /// More details about the overall approach can be found in\n /// the module documentation."}]}