{"sha": "71ef64b673595807ccb4b3f5b7ad6ea55e63645b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxZWY2NGI2NzM1OTU4MDdjY2I0YjNmNWI3YWQ2ZWE1NWU2MzY0NWI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-02T12:00:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-02T12:00:30Z"}, "message": "Merge #8293\n\n8293: internal: document style for helper functions and variables r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "f5e95492a56a4e4d40bd66ce15b4ffe0884460eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5e95492a56a4e4d40bd66ce15b4ffe0884460eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71ef64b673595807ccb4b3f5b7ad6ea55e63645b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgZwdeCRBK7hj4Ov3rIwAAdHIIACcZtfda0/sT82HhNPDpFwtz\nPNIn1/iHnCDzLc+Ygwxlr4ajFAVteGq8zHfYrj2VWysaCkKkm7oyyLqC/+eorak5\nOEgkvvMTRBT7wb8cm8EN+TRJMm2Dv5OjGDktdCtzG+YaResoGhyIHHofKkUwsO+p\nhiEgv+7BG3cFFcoSTUvz7P2ItYgthHMesCZzNsNAhzxTdROqhr2oQQMJz61e114i\nfsSIJim7bqYr/4D00ISztR8uMp6VX1/4cragNGf2jpazifewxjt6BolrHIbp3Bih\n1lj5005GrErYPN0vVVZ6hg+VDmhZXlbO4NwC3iUMQs8i9CC8jrI0sFMo4NO1V+M=\n=GVOJ\n-----END PGP SIGNATURE-----\n", "payload": "tree f5e95492a56a4e4d40bd66ce15b4ffe0884460eb\nparent 00ce7ae5248b41d5944abe6075407236cde1b075\nparent 636c3c49d26f53a363a68a10b70ec5cf675df27c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1617364830 +0000\ncommitter GitHub <noreply@github.com> 1617364830 +0000\n\nMerge #8293\n\n8293: internal: document style for helper functions and variables r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71ef64b673595807ccb4b3f5b7ad6ea55e63645b", "html_url": "https://github.com/rust-lang/rust/commit/71ef64b673595807ccb4b3f5b7ad6ea55e63645b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71ef64b673595807ccb4b3f5b7ad6ea55e63645b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00ce7ae5248b41d5944abe6075407236cde1b075", "url": "https://api.github.com/repos/rust-lang/rust/commits/00ce7ae5248b41d5944abe6075407236cde1b075", "html_url": "https://github.com/rust-lang/rust/commit/00ce7ae5248b41d5944abe6075407236cde1b075"}, {"sha": "636c3c49d26f53a363a68a10b70ec5cf675df27c", "url": "https://api.github.com/repos/rust-lang/rust/commits/636c3c49d26f53a363a68a10b70ec5cf675df27c", "html_url": "https://github.com/rust-lang/rust/commit/636c3c49d26f53a363a68a10b70ec5cf675df27c"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "c594946be736807cf47ae598f1a5585d74f06fa4", "filename": "docs/dev/style.md", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/71ef64b673595807ccb4b3f5b7ad6ea55e63645b/docs%2Fdev%2Fstyle.md", "raw_url": "https://github.com/rust-lang/rust/raw/71ef64b673595807ccb4b3f5b7ad6ea55e63645b/docs%2Fdev%2Fstyle.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fstyle.md?ref=71ef64b673595807ccb4b3f5b7ad6ea55e63645b", "patch": "@@ -806,9 +806,48 @@ if let Some(expected_type) = ctx.expected_type.as_ref() {\n }\n ```\n \n-**Rational:** `match` is almost always more compact.\n+**Rationale:** `match` is almost always more compact.\n The `else` branch can get a more precise pattern: `None` or `Err(_)` instead of `_`.\n \n+## Helper Functions\n+\n+Avoid creating singe-use helper functions:\n+\n+```rust\n+// GOOD\n+let buf = {\n+    let mut buf = get_empty_buf(&mut arena);\n+    buf.add_item(item);\n+    buf\n+};\n+\n+// BAD\n+\n+let buf = prepare_buf(&mut arena, item);\n+\n+...\n+\n+fn prepare_buf(arena: &mut Arena, item: Item) -> ItemBuf {\n+    let mut res = get_empty_buf(&mut arena);\n+    res.add_item(item);\n+    res\n+}\n+```\n+\n+Exception: if you want to make use of `return` or `?`.\n+\n+**Rationale:** single-use functions change frequently, adding or removing parameters adds churn.\n+A block serves just as well to delineate a bit of logic, but has access to all the context.\n+Re-using originally single-purpose function often leads to bad coupling.\n+\n+## Helper Variables\n+\n+Introduce helper variables freely, especially for multiline conditions.\n+\n+**Rationale:** like blocks, single-use variables are a cognitively cheap abstraction, as they have access to all the context.\n+Extra variables help during debugging, they make it easy to print/view important intermediate results.\n+Giving a name to a condition in `if` expression often improves clarity and leads to a nicer formatted code.\n+\n ## Token names\n \n Use `T![foo]` instead of `SyntaxKind::FOO_KW`."}]}