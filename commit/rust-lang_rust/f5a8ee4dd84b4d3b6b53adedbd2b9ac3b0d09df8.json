{"sha": "f5a8ee4dd84b4d3b6b53adedbd2b9ac3b0d09df8", "node_id": "C_kwDOAAsO6NoAKGY1YThlZTRkZDg0YjRkM2I2YjUzYWRlZGJkMmI5YWMzYjBkMDlkZjg", "commit": {"author": {"name": "Takayuki Maeda", "email": "41065217+TaKO8Ki@users.noreply.github.com", "date": "2022-04-22T02:25:42Z"}, "committer": {"name": "Takayuki Maeda", "email": "41065217+TaKO8Ki@users.noreply.github.com", "date": "2022-04-22T02:25:42Z"}, "message": "remove an error for type params", "tree": {"sha": "bfcb3abd8c75da0ca5acc687261e31dea106f081", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfcb3abd8c75da0ca5acc687261e31dea106f081"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5a8ee4dd84b4d3b6b53adedbd2b9ac3b0d09df8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5a8ee4dd84b4d3b6b53adedbd2b9ac3b0d09df8", "html_url": "https://github.com/rust-lang/rust/commit/f5a8ee4dd84b4d3b6b53adedbd2b9ac3b0d09df8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5a8ee4dd84b4d3b6b53adedbd2b9ac3b0d09df8/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd", "html_url": "https://github.com/rust-lang/rust/commit/547cb2722b3d7e5a437194bcd5f18f0c213ebdbd"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "19e68f0b14f4f23934dba64e53f2a41e36a521d7", "filename": "compiler/rustc_typeck/src/coherence/orphan.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f5a8ee4dd84b4d3b6b53adedbd2b9ac3b0d09df8/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5a8ee4dd84b4d3b6b53adedbd2b9ac3b0d09df8/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs?ref=f5a8ee4dd84b4d3b6b53adedbd2b9ac3b0d09df8", "patch": "@@ -211,7 +211,6 @@ fn emit_orphan_check_error<'tcx>(\n         traits::OrphanCheckErr::NonLocalInputType(tys) => {\n             let msg = match self_ty.kind() {\n                 ty::Adt(..) => \"can be implemented for types defined outside of the crate\",\n-                ty::Param(_) => \"can have blanket implementations defined in this trait\",\n                 _ if self_ty.is_primitive() => \"can be implemented for primitive types\",\n                 _ => \"can be implemented for arbitrary types\",\n             };"}]}