{"sha": "77fce75ba1c6d08a1919d270b53fa1a454c5067e", "node_id": "C_kwDOAAsO6NoAKDc3ZmNlNzViYTFjNmQwOGExOTE5ZDI3MGI1M2ZhMWE0NTRjNTA2N2U", "commit": {"author": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2021-10-08T16:32:16Z"}, "committer": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2021-10-08T16:32:16Z"}, "message": "remove unwrap_or! macro", "tree": {"sha": "83fd3ec7657d0422c03ebd3eec85c4274078ee15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83fd3ec7657d0422c03ebd3eec85c4274078ee15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77fce75ba1c6d08a1919d270b53fa1a454c5067e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77fce75ba1c6d08a1919d270b53fa1a454c5067e", "html_url": "https://github.com/rust-lang/rust/commit/77fce75ba1c6d08a1919d270b53fa1a454c5067e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77fce75ba1c6d08a1919d270b53fa1a454c5067e/comments", "author": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44995f7afb18775913618ae50601be31b9f9dead", "url": "https://api.github.com/repos/rust-lang/rust/commits/44995f7afb18775913618ae50601be31b9f9dead", "html_url": "https://github.com/rust-lang/rust/commit/44995f7afb18775913618ae50601be31b9f9dead"}], "stats": {"total": 25, "additions": 8, "deletions": 17}, "files": [{"sha": "e3c610585d978e32c8ef8071aa0ffda993431310", "filename": "compiler/rustc_ast/src/lib.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/77fce75ba1c6d08a1919d270b53fa1a454c5067e/compiler%2Frustc_ast%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77fce75ba1c6d08a1919d270b53fa1a454c5067e/compiler%2Frustc_ast%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Flib.rs?ref=77fce75ba1c6d08a1919d270b53fa1a454c5067e", "patch": "@@ -20,16 +20,6 @@\n #[macro_use]\n extern crate rustc_macros;\n \n-#[macro_export]\n-macro_rules! unwrap_or {\n-    ($opt:expr, $default:expr) => {\n-        match $opt {\n-            Some(x) => x,\n-            None => $default,\n-        }\n-    };\n-}\n-\n pub mod util {\n     pub mod classify;\n     pub mod comments;"}, {"sha": "b6d66eb12d08314e19aa0e65fee5e343a18aa408", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/77fce75ba1c6d08a1919d270b53fa1a454c5067e/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77fce75ba1c6d08a1919d270b53fa1a454c5067e/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=77fce75ba1c6d08a1919d270b53fa1a454c5067e", "patch": "@@ -1,7 +1,6 @@\n use crate::context::{CheckLintNameResult, LintStore};\n use crate::late::unerased_lint_store;\n use rustc_ast as ast;\n-use rustc_ast::unwrap_or;\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n@@ -233,7 +232,10 @@ impl<'s> LintLevelsBuilder<'s> {\n                 Some(lvl) => lvl,\n             };\n \n-            let mut metas = unwrap_or!(attr.meta_item_list(), continue);\n+            let mut metas = match attr.meta_item_list() {\n+                Some(x) => x,\n+                None => continue,\n+            };\n \n             if metas.is_empty() {\n                 // FIXME (#55112): issue unused-attributes lint for `#[level()]`"}, {"sha": "515b2c3fd27909d0d72bdb4c838591a0d0d1593a", "filename": "compiler/rustc_resolve/src/imports.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/77fce75ba1c6d08a1919d270b53fa1a454c5067e/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77fce75ba1c6d08a1919d270b53fa1a454c5067e/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs?ref=77fce75ba1c6d08a1919d270b53fa1a454c5067e", "patch": "@@ -9,7 +9,6 @@ use crate::{BindingKey, ModuleKind, ResolutionError, Resolver, Segment};\n use crate::{CrateLint, Module, ModuleOrUniformRoot, ParentScope, PerNS, ScopeSet, Weak};\n use crate::{NameBinding, NameBindingKind, PathResult, PrivacyError, ToNameBinding};\n \n-use rustc_ast::unwrap_or;\n use rustc_ast::NodeId;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::ptr_key::PtrKey;\n@@ -349,10 +348,10 @@ impl<'a> Resolver<'a> {\n             if !self.is_accessible_from(single_import.vis.get(), parent_scope.module) {\n                 continue;\n             }\n-            let module = unwrap_or!(\n-                single_import.imported_module.get(),\n-                return Err((Undetermined, Weak::No))\n-            );\n+            let module = match single_import.imported_module.get() {\n+                Some(x) => x,\n+                None => return Err((Undetermined, Weak::No)),\n+            };\n             let ident = match single_import.kind {\n                 ImportKind::Single { source, .. } => source,\n                 _ => unreachable!(),"}]}