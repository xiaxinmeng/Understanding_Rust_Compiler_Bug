{"sha": "ef54dace6a58764b551875026e4241470441d712", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNTRkYWNlNmE1ODc2NGI1NTE4NzUwMjZlNDI0MTQ3MDQ0MWQ3MTI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-27T12:21:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-27T12:21:46Z"}, "message": "Merge #10054\n\n10054: minor: Ignore text and bench attributes again r=Veykril a=Veykril\n\ncc https://github.com/rust-analyzer/rust-analyzer/issues/8518#issuecomment-907039593\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "5ad32f38dcdabacb8392f2a068022d34f73638fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ad32f38dcdabacb8392f2a068022d34f73638fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef54dace6a58764b551875026e4241470441d712", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhKNjaCRBK7hj4Ov3rIwAAUUIIABIoxpp3Hi9nEDOiFD+vBTZd\n7bmk+xbNNKyWYOLHtv12sgudcFztbvbwwj5EBwCwPiPXDAGnEFtGGrtRIAdqxOMs\n6rDhHr+ZqpU99SYwVXWsuieJErfiD14f4WMiuRMUWGFyv3jroyHthkTLHJxjC27K\n4H3BUvjbH4HRxz+PRLNK5r+/eZLe0oTVMonknfGkK+NrIb4C5lslrcsq1TeTpepq\nbgu3XeeSxBwUtoIH7m1QOIp4+cKlONP7g4PKp4wLeIwkyquZbIbyNszTcbscQT2j\n87CZQdv8o7DG5GaIdqzID8+PNx3CucFxmMgGaW0JfewuZqbR6/A+gt4RROsHZRU=\n=3M6J\n-----END PGP SIGNATURE-----\n", "payload": "tree 5ad32f38dcdabacb8392f2a068022d34f73638fb\nparent 4ad0a1b8a5a6c1eddbfdb6de81afa2d4984d37e3\nparent 5012fa2dd4b18daf3d7ffcdb64cda9d50185fe7c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1630066906 +0000\ncommitter GitHub <noreply@github.com> 1630066906 +0000\n\nMerge #10054\n\n10054: minor: Ignore text and bench attributes again r=Veykril a=Veykril\n\ncc https://github.com/rust-analyzer/rust-analyzer/issues/8518#issuecomment-907039593\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef54dace6a58764b551875026e4241470441d712", "html_url": "https://github.com/rust-lang/rust/commit/ef54dace6a58764b551875026e4241470441d712", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef54dace6a58764b551875026e4241470441d712/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ad0a1b8a5a6c1eddbfdb6de81afa2d4984d37e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ad0a1b8a5a6c1eddbfdb6de81afa2d4984d37e3", "html_url": "https://github.com/rust-lang/rust/commit/4ad0a1b8a5a6c1eddbfdb6de81afa2d4984d37e3"}, {"sha": "5012fa2dd4b18daf3d7ffcdb64cda9d50185fe7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5012fa2dd4b18daf3d7ffcdb64cda9d50185fe7c", "html_url": "https://github.com/rust-lang/rust/commit/5012fa2dd4b18daf3d7ffcdb64cda9d50185fe7c"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "e77082ebb856f23676872100a5168206248aab9e", "filename": "crates/ide_completion/src/tests/item.rs", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/ef54dace6a58764b551875026e4241470441d712/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef54dace6a58764b551875026e4241470441d712/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem.rs?ref=ef54dace6a58764b551875026e4241470441d712", "patch": "@@ -80,6 +80,72 @@ fn after_target_name_in_impl() {\n     check(r\"impl Trait for Type $0\", expect![[r#\"\"#]]);\n }\n \n+#[test]\n+fn after_struct_name() {\n+    // FIXME: This should emit `kw where` only\n+    check(\n+        r\"struct Struct $0\",\n+        expect![[r##\"\n+            kw pub(crate)\n+            kw pub\n+            kw unsafe\n+            kw fn\n+            kw const\n+            kw type\n+            kw impl\n+            kw extern\n+            kw use\n+            kw trait\n+            kw static\n+            kw mod\n+            kw enum\n+            kw struct\n+            kw union\n+            sn tmod (Test module)\n+            sn tfn (Test function)\n+            sn macro_rules\n+            kw self\n+            kw super\n+            kw crate\n+            md module\n+            ma makro!(\u2026)           #[macro_export] macro_rules! makro\n+        \"##]],\n+    );\n+}\n+\n+#[test]\n+fn after_fn_name() {\n+    // FIXME: This should emit `kw where` only\n+    check(\n+        r\"fn func() $0\",\n+        expect![[r##\"\n+            kw pub(crate)\n+            kw pub\n+            kw unsafe\n+            kw fn\n+            kw const\n+            kw type\n+            kw impl\n+            kw extern\n+            kw use\n+            kw trait\n+            kw static\n+            kw mod\n+            kw enum\n+            kw struct\n+            kw union\n+            sn tmod (Test module)\n+            sn tfn (Test function)\n+            sn macro_rules\n+            kw self\n+            kw super\n+            kw crate\n+            md module\n+            ma makro!(\u2026)           #[macro_export] macro_rules! makro\n+        \"##]],\n+    );\n+}\n+\n #[test]\n fn before_record_field() {\n     check("}]}