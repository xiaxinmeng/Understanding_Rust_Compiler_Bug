{"sha": "83f2d4ab3dbd3b52ea60212a6698c73201b67a34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZjJkNGFiM2RiZDNiNTJlYTYwMjEyYTY2OThjNzMyMDFiNjdhMzQ=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-03-16T01:54:39Z"}, "committer": {"name": "Luqman Aden", "email": "laden@mozilla.com", "date": "2013-03-16T01:57:19Z"}, "message": "Fix type_use for inline asm.", "tree": {"sha": "02147f212bea60df1cf4391714cd1541fc3c6f43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02147f212bea60df1cf4391714cd1541fc3c6f43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83f2d4ab3dbd3b52ea60212a6698c73201b67a34", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83f2d4ab3dbd3b52ea60212a6698c73201b67a34", "html_url": "https://github.com/rust-lang/rust/commit/83f2d4ab3dbd3b52ea60212a6698c73201b67a34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83f2d4ab3dbd3b52ea60212a6698c73201b67a34/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d68b98a5bfebffb28d49e14e6568a69c547c74ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/d68b98a5bfebffb28d49e14e6568a69c547c74ae", "html_url": "https://github.com/rust-lang/rust/commit/d68b98a5bfebffb28d49e14e6568a69c547c74ae"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "9848c65ac4372d07dc18076680db0ced4422a0d5", "filename": "src/librustc/middle/moves.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/83f2d4ab3dbd3b52ea60212a6698c73201b67a34/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f2d4ab3dbd3b52ea60212a6698c73201b67a34/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmoves.rs?ref=83f2d4ab3dbd3b52ea60212a6698c73201b67a34", "patch": "@@ -558,15 +558,7 @@ pub impl VisitContext {\n                 self.use_expr(base, Read, visitor);\n             }\n \n-            expr_inline_asm(_, ref ins, ref outs, _, _, _) => {\n-                for ins.each |&(c, in)| {\n-                    // XXX: Do something?\n-                }\n-                for outs.each |&(c, out)| {\n-                    // XXX: Do something?\n-                }\n-            }\n-\n+            expr_inline_asm(*) |\n             expr_break(*) |\n             expr_again(*) |\n             expr_lit(*) => {}"}, {"sha": "692dc392173b3fdd6b0d478289a42a11378e4daa", "filename": "src/librustc/middle/trans/type_use.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/83f2d4ab3dbd3b52ea60212a6698c73201b67a34/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f2d4ab3dbd3b52ea60212a6698c73201b67a34/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs?ref=83f2d4ab3dbd3b52ea60212a6698c73201b67a34", "patch": "@@ -350,7 +350,12 @@ pub fn mark_for_expr(cx: Context, e: @expr) {\n       }\n \n       expr_inline_asm(_, ref ins, ref outs, _, _, _) => {\n-          // XXX Do something, maybe?\n+        for ins.each |&(_, in)| {\n+          node_type_needs(cx, use_repr, in.id);\n+        }\n+        for outs.each |&(_, out)| {\n+          node_type_needs(cx, use_repr, out.id);\n+        }\n       }\n \n       expr_paren(e) => mark_for_expr(cx, e),"}, {"sha": "6a0f1a2ec46b21dc5a39684eb24c052f42ea03aa", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83f2d4ab3dbd3b52ea60212a6698c73201b67a34/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f2d4ab3dbd3b52ea60212a6698c73201b67a34/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=83f2d4ab3dbd3b52ea60212a6698c73201b67a34", "patch": "@@ -563,10 +563,10 @@ pub fn visit_expr<E>(ex: @expr, e: E, v: vt<E>) {\n         expr_mac(ref mac) => visit_mac((*mac), e, v),\n         expr_paren(x) => (v.visit_expr)(x, e, v),\n         expr_inline_asm(_, ins, outs, _, _, _) => {\n-            for ins.each |&(c, in)| {\n+            for ins.each |&(_, in)| {\n                 (v.visit_expr)(in, e, v);\n             }\n-            for outs.each |&(c, out)| {\n+            for outs.each |&(_, out)| {\n                 (v.visit_expr)(out, e, v);\n             }\n         }"}]}