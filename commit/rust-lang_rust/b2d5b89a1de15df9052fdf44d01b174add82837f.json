{"sha": "b2d5b89a1de15df9052fdf44d01b174add82837f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyZDViODlhMWRlMTVkZjkwNTJmZGY0NGQwMWIxNzRhZGQ4MjgzN2Y=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-06-10T02:41:09Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-09-24T20:59:14Z"}, "message": "Check if it's after the loop earlier", "tree": {"sha": "24916a477419eb04442ff9c4fbb106b8a38bbcce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24916a477419eb04442ff9c4fbb106b8a38bbcce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2d5b89a1de15df9052fdf44d01b174add82837f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2d5b89a1de15df9052fdf44d01b174add82837f", "html_url": "https://github.com/rust-lang/rust/commit/b2d5b89a1de15df9052fdf44d01b174add82837f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2d5b89a1de15df9052fdf44d01b174add82837f/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "116f30dc33d9e3744f257f2f7f5467acfbff178b", "url": "https://api.github.com/repos/rust-lang/rust/commits/116f30dc33d9e3744f257f2f7f5467acfbff178b", "html_url": "https://github.com/rust-lang/rust/commit/116f30dc33d9e3744f257f2f7f5467acfbff178b"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "20e75546d7104e54452f801d1686ad19cc6e2fca", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b2d5b89a1de15df9052fdf44d01b174add82837f/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2d5b89a1de15df9052fdf44d01b174add82837f/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=b2d5b89a1de15df9052fdf44d01b174add82837f", "patch": "@@ -2250,6 +2250,11 @@ impl<'a, 'tcx> Visitor<'tcx> for InitializeVisitor<'a, 'tcx> {\n \n         // If node is the desired variable, see how it's used\n         if var_def_id(self.cx, expr) == Some(self.var_id) {\n+            if self.past_loop {\n+                self.state = VarState::DontWarn;\n+                return;\n+            }\n+\n             if let Some(parent) = get_parent_expr(self.cx, expr) {\n                 match parent.kind {\n                     ExprKind::AssignOp(_, ref lhs, _) if lhs.hir_id == expr.hir_id => {\n@@ -2269,10 +2274,6 @@ impl<'a, 'tcx> Visitor<'tcx> for InitializeVisitor<'a, 'tcx> {\n                 }\n             }\n \n-            if self.past_loop {\n-                self.state = VarState::DontWarn;\n-                return;\n-            }\n             walk_expr(self, expr);\n         } else if !self.past_loop && is_loop(expr) {\n             self.state = VarState::DontWarn;"}]}