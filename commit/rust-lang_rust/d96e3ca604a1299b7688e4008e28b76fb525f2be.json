{"sha": "d96e3ca604a1299b7688e4008e28b76fb525f2be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5NmUzY2E2MDRhMTI5OWI3Njg4ZTQwMDhlMjhiNzZmYjUyNWYyYmU=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-04T00:59:38Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-04T00:59:38Z"}, "message": "Explicitly handle semicolon after the item in statement position", "tree": {"sha": "f41f63ddccbfdffd060e792d35038e6937e30f24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f41f63ddccbfdffd060e792d35038e6937e30f24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d96e3ca604a1299b7688e4008e28b76fb525f2be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d96e3ca604a1299b7688e4008e28b76fb525f2be", "html_url": "https://github.com/rust-lang/rust/commit/d96e3ca604a1299b7688e4008e28b76fb525f2be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d96e3ca604a1299b7688e4008e28b76fb525f2be/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf13534150c40b1421ba4dbd2af95354aa2b6616", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf13534150c40b1421ba4dbd2af95354aa2b6616", "html_url": "https://github.com/rust-lang/rust/commit/cf13534150c40b1421ba4dbd2af95354aa2b6616"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "c80cd78a992b1f2c85896b7dc87d5782caa42eda", "filename": "src/visitor.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d96e3ca604a1299b7688e4008e28b76fb525f2be/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d96e3ca604a1299b7688e4008e28b76fb525f2be/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=d96e3ca604a1299b7688e4008e28b76fb525f2be", "patch": "@@ -90,6 +90,8 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n         match stmt.node {\n             ast::StmtKind::Item(ref item) => {\n                 self.visit_item(item);\n+                // Handle potential `;` after the item.\n+                self.format_missing(stmt.span.hi());\n             }\n             ast::StmtKind::Local(..) | ast::StmtKind::Expr(..) | ast::StmtKind::Semi(..) => {\n                 if contains_skip(get_attrs_from_stmt(stmt)) {"}]}