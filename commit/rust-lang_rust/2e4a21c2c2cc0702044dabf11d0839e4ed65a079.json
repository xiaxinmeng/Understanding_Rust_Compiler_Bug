{"sha": "2e4a21c2c2cc0702044dabf11d0839e4ed65a079", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNGEyMWMyYzJjYzA3MDIwNDRkYWJmMTFkMDgzOWU0ZWQ2NWEwNzk=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-08-26T12:09:38Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-08-29T07:39:09Z"}, "message": "Mention type of `for` exprs that don't implement Iterator.\n\nThis improves the error message by telling the user the exact type of\n`x` if it doesn't implement `Iterator` in `for ... in x {}`.\n\nCloses #16043.", "tree": {"sha": "a92c6333dd6787a919a76dd8d90b87ed4732d650", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a92c6333dd6787a919a76dd8d90b87ed4732d650"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e4a21c2c2cc0702044dabf11d0839e4ed65a079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e4a21c2c2cc0702044dabf11d0839e4ed65a079", "html_url": "https://github.com/rust-lang/rust/commit/2e4a21c2c2cc0702044dabf11d0839e4ed65a079", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e4a21c2c2cc0702044dabf11d0839e4ed65a079/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3549ee202355731003002e813cf071cd89f04cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3549ee202355731003002e813cf071cd89f04cb", "html_url": "https://github.com/rust-lang/rust/commit/e3549ee202355731003002e813cf071cd89f04cb"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "d8044ba96ddff1119765f56d6f3f427c311ae94c", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2e4a21c2c2cc0702044dabf11d0839e4ed65a079/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e4a21c2c2cc0702044dabf11d0839e4ed65a079/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=2e4a21c2c2cc0702044dabf11d0839e4ed65a079", "patch": "@@ -2168,12 +2168,13 @@ fn lookup_method_for_for_loop(fcx: &FnCtxt,\n         }\n     };\n \n+    let expr_type = fcx.expr_ty(&*iterator_expr);\n     let method = method::lookup_in_trait(fcx,\n                                          iterator_expr.span,\n                                          Some(&*iterator_expr),\n                                          token::intern(\"next\"),\n                                          trait_did,\n-                                         fcx.expr_ty(&*iterator_expr),\n+                                         expr_type,\n                                          [],\n                                          DontAutoderefReceiver,\n                                          IgnoreStaticMethods);\n@@ -2184,8 +2185,9 @@ fn lookup_method_for_for_loop(fcx: &FnCtxt,\n         Some(ref method) => method.ty,\n         None => {\n             fcx.tcx().sess.span_err(iterator_expr.span,\n-                                    \"`for` loop expression does not \\\n-                                     implement the `Iterator` trait\");\n+                                    format!(\"`for` loop expression has type `{}` which does \\\n+                                             not implement the `Iterator` trait\",\n+                                            fcx.infcx().ty_to_string(expr_type)).as_slice());\n             ty::mk_err()\n         }\n     };"}, {"sha": "67d07ca4bd1fbc1af752187118f18f9509fa1e95", "filename": "src/test/compile-fail/for-loop-bogosity.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2e4a21c2c2cc0702044dabf11d0839e4ed65a079/src%2Ftest%2Fcompile-fail%2Ffor-loop-bogosity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e4a21c2c2cc0702044dabf11d0839e4ed65a079/src%2Ftest%2Fcompile-fail%2Ffor-loop-bogosity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffor-loop-bogosity.rs?ref=2e4a21c2c2cc0702044dabf11d0839e4ed65a079", "patch": "@@ -24,8 +24,7 @@ pub fn main() {\n         x: 1,\n         y: 2,\n     };\n-    for x in bogus {    //~ ERROR does not implement the `Iterator` trait\n+    for x in bogus { //~ ERROR has type `MyStruct` which does not implement the `Iterator` trait\n         drop(x);\n     }\n }\n-"}]}