{"sha": "f8ae9b0ae64e23aff1408097a5a4a03a72895ae6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YWU5YjBhZTY0ZTIzYWZmMTQwODA5N2E1YTRhMDNhNzI4OTVhZTY=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-06-26T22:14:35Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-06-26T22:14:35Z"}, "message": "Fix whitespace issues (thanks @jedestep!)", "tree": {"sha": "c76449a3cdd306ea1aef77025533a0e4a4207253", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c76449a3cdd306ea1aef77025533a0e4a4207253"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8ae9b0ae64e23aff1408097a5a4a03a72895ae6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8ae9b0ae64e23aff1408097a5a4a03a72895ae6", "html_url": "https://github.com/rust-lang/rust/commit/f8ae9b0ae64e23aff1408097a5a4a03a72895ae6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8ae9b0ae64e23aff1408097a5a4a03a72895ae6/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3df37326cf880425625373f3e11f74afac4dbb67", "url": "https://api.github.com/repos/rust-lang/rust/commits/3df37326cf880425625373f3e11f74afac4dbb67", "html_url": "https://github.com/rust-lang/rust/commit/3df37326cf880425625373f3e11f74afac4dbb67"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "b82984cb2c54d385788bad945392919a490e70b7", "filename": "src/libextra/deque.rs", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f8ae9b0ae64e23aff1408097a5a4a03a72895ae6/src%2Flibextra%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ae9b0ae64e23aff1408097a5a4a03a72895ae6/src%2Flibextra%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdeque.rs?ref=f8ae9b0ae64e23aff1408097a5a4a03a72895ae6", "patch": "@@ -158,7 +158,7 @@ impl<T> Deque<T> {\n     pub fn iter<'a>(&'a self) -> DequeIterator<'a, T> {\n     DequeIterator { idx: self.lo, nelts: self.nelts, used: 0, vec: self.elts }\n     }\n-    \n+\n     /// Front-to-back iterator which returns mutable values.\n     pub fn mut_iter<'a>(&'a mut self) -> DequeMutIterator<'a, T> {\n     DequeMutIterator { idx: self.lo, nelts: self.nelts, used: 0, vec: self.elts }\n@@ -183,7 +183,7 @@ macro_rules! iterator {\n                 if self.used >= self.nelts {\n                     return None;\n                 }\n-                let ret = unsafe { \n+                let ret = unsafe {\n                     match self.vec[self.idx % self.vec.len()] {\n                         Some(ref e) => Some(transmute(e)),\n                         None => None\n@@ -397,8 +397,7 @@ mod tests {\n \n     #[test]\n     fn test_param_taggy() {\n-        test_parameterized::<Taggy>(One(1), Two(1, 2), Three(1, 2, 3),\n-                                    Two(17, 42));\n+        test_parameterized::<Taggy>(One(1), Two(1, 2), Three(1, 2, 3), Two(17, 42));\n     }\n \n     #[test]\n@@ -467,14 +466,12 @@ mod tests {\n         for std::int::range(0,5) |i| {\n             d.add_back(i);\n         }\n-        assert_eq!(d.iter().collect::<~[&int]>(),\n-           ~[&0,&1,&2,&3,&4]);\n-        \n+        assert_eq!(d.iter().collect::<~[&int]>(), ~[&0,&1,&2,&3,&4]);\n+\n         for std::int::range(6,9) |i| {\n             d.add_front(i);\n         }\n-        assert_eq!(d.iter().collect::<~[&int]>(),\n-            ~[&8,&7,&6,&0,&1,&2,&3,&4]);\n+        assert_eq!(d.iter().collect::<~[&int]>(), ~[&8,&7,&6,&0,&1,&2,&3,&4]);\n     }\n \n     #[test]\n@@ -483,13 +480,11 @@ mod tests {\n         for std::int::range(0,5) |i| {\n             d.add_back(i);\n         }\n-        assert_eq!(d.rev_iter().collect::<~[&int]>(),\n-           ~[&4,&3,&2,&1,&0]);\n-        \n+        assert_eq!(d.rev_iter().collect::<~[&int]>(), ~[&4,&3,&2,&1,&0]);\n+\n         for std::int::range(6,9) |i| {\n             d.add_front(i);\n         }\n-        assert_eq!(d.rev_iter().collect::<~[&int]>(),\n-            ~[&4,&3,&2,&1,&0,&6,&7,&8]);\n+        assert_eq!(d.rev_iter().collect::<~[&int]>(), ~[&4,&3,&2,&1,&0,&6,&7,&8]);\n     }\n }"}]}