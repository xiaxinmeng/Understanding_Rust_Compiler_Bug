{"sha": "8638dc7f9ae55d9b3102d152b2e2cca92bb83acf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MzhkYzdmOWFlNTVkOWIzMTAyZDE1MmIyZTJjY2E5MmJiODNhY2Y=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-07-17T21:36:35Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-07-17T21:36:35Z"}, "message": "nit", "tree": {"sha": "474e6bafb9e6dc80a3b89e3561e89198269a2fcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/474e6bafb9e6dc80a3b89e3561e89198269a2fcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8638dc7f9ae55d9b3102d152b2e2cca92bb83acf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8638dc7f9ae55d9b3102d152b2e2cca92bb83acf", "html_url": "https://github.com/rust-lang/rust/commit/8638dc7f9ae55d9b3102d152b2e2cca92bb83acf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8638dc7f9ae55d9b3102d152b2e2cca92bb83acf/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f0564b337ff2124c33e8df027bcdc9dbf4c82f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f0564b337ff2124c33e8df027bcdc9dbf4c82f5", "html_url": "https://github.com/rust-lang/rust/commit/1f0564b337ff2124c33e8df027bcdc9dbf4c82f5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ec02963980bd0689f77251b46b5ddef41dd0c924", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8638dc7f9ae55d9b3102d152b2e2cca92bb83acf/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8638dc7f9ae55d9b3102d152b2e2cca92bb83acf/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=8638dc7f9ae55d9b3102d152b2e2cca92bb83acf", "patch": "@@ -451,7 +451,7 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n                     if !pub_err && directive.is_public && !child_name_bindings.is_public(TypeNS) {\n                         let msg = format!(\"`{}` is private, and cannot be reexported\",\n                                           token::get_name(source));\n-                        let note_msg = format!(\"Consider declaring module {} as `pub mod`\",\n+                        let note_msg = format!(\"Consider declaring module `{}` as a `pub mod`\",\n                                                token::get_name(source));\n                         span_err!(self.resolver.session, directive.span, E0365, \"{}\", &msg);\n                         self.resolver.session.span_note(directive.span, &note_msg);"}]}