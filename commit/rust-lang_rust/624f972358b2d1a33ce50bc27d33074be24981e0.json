{"sha": "624f972358b2d1a33ce50bc27d33074be24981e0", "node_id": "C_kwDOAAsO6NoAKDYyNGY5NzIzNThiMmQxYTMzY2U1MGJjMjdkMzMwNzRiZTI0OTgxZTA", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-09T22:02:28Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-09T22:02:28Z"}, "message": "rustdoc: when removing duplicate names, ignore `#[doc(hidden)]` items", "tree": {"sha": "839e60c0a218d2d92516d3d5ee509618a1bc5489", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/839e60c0a218d2d92516d3d5ee509618a1bc5489"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/624f972358b2d1a33ce50bc27d33074be24981e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/624f972358b2d1a33ce50bc27d33074be24981e0", "html_url": "https://github.com/rust-lang/rust/commit/624f972358b2d1a33ce50bc27d33074be24981e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/624f972358b2d1a33ce50bc27d33074be24981e0/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f8d552d6dfd4bb534c98b79150f21a122ed0b4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f8d552d6dfd4bb534c98b79150f21a122ed0b4c", "html_url": "https://github.com/rust-lang/rust/commit/1f8d552d6dfd4bb534c98b79150f21a122ed0b4c"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "bca3f4db4a85460c0f686fa3baf3b7f24726365d", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/624f972358b2d1a33ce50bc27d33074be24981e0/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/624f972358b2d1a33ce50bc27d33074be24981e0/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=624f972358b2d1a33ce50bc27d33074be24981e0", "patch": "@@ -50,7 +50,7 @@ pub(crate) fn clean_doc_module<'tcx>(doc: &DocModule<'tcx>, cx: &mut DocContext<\n     let mut inserted = FxHashSet::default();\n     items.extend(doc.foreigns.iter().map(|(item, renamed)| {\n         let item = clean_maybe_renamed_foreign_item(cx, item, *renamed);\n-        if let Some(name) = item.name {\n+        if let Some(name) = item.name && !item.attrs.lists(sym::doc).has_word(sym::hidden) {\n             inserted.insert((item.type_(), name));\n         }\n         item\n@@ -59,7 +59,14 @@ pub(crate) fn clean_doc_module<'tcx>(doc: &DocModule<'tcx>, cx: &mut DocContext<\n         if !inserted.insert((ItemType::Module, x.name)) {\n             return None;\n         }\n-        Some(clean_doc_module(x, cx))\n+        let item = clean_doc_module(x, cx);\n+        if item.attrs.lists(sym::doc).has_word(sym::hidden) {\n+            // Hidden modules are stripped at a later stage.\n+            // If a hidden module has the same name as a visible one, we want\n+            // to keep both of them around.\n+            inserted.remove(&(ItemType::Module, x.name));\n+        }\n+        Some(item)\n     }));\n \n     // Split up imports from all other items.\n@@ -74,7 +81,7 @@ pub(crate) fn clean_doc_module<'tcx>(doc: &DocModule<'tcx>, cx: &mut DocContext<\n         }\n         let v = clean_maybe_renamed_item(cx, item, *renamed);\n         for item in &v {\n-            if let Some(name) = item.name {\n+            if let Some(name) = item.name && !item.attrs.lists(sym::doc).has_word(sym::hidden) {\n                 inserted.insert((item.type_(), name));\n             }\n         }"}]}