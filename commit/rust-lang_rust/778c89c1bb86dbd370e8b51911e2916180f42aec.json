{"sha": "778c89c1bb86dbd370e8b51911e2916180f42aec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3OGM4OWMxYmI4NmRiZDM3MGU4YjUxOTExZTI5MTYxODBmNDJhZWM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-07-21T00:12:59Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-07-21T00:12:59Z"}, "message": "Address feedback", "tree": {"sha": "69df9a26f3efb3b085e854be4a8d950b4506823e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69df9a26f3efb3b085e854be4a8d950b4506823e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/778c89c1bb86dbd370e8b51911e2916180f42aec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/778c89c1bb86dbd370e8b51911e2916180f42aec", "html_url": "https://github.com/rust-lang/rust/commit/778c89c1bb86dbd370e8b51911e2916180f42aec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/778c89c1bb86dbd370e8b51911e2916180f42aec/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8497c428e5da665917304ae404b9b3e7b0a94466", "url": "https://api.github.com/repos/rust-lang/rust/commits/8497c428e5da665917304ae404b9b3e7b0a94466", "html_url": "https://github.com/rust-lang/rust/commit/8497c428e5da665917304ae404b9b3e7b0a94466"}], "stats": {"total": 60, "additions": 30, "deletions": 30}, "files": [{"sha": "82bc1314ad547dc14038760e2ec26c4b536e18d7", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=778c89c1bb86dbd370e8b51911e2916180f42aec", "patch": "@@ -415,9 +415,9 @@ pub mod __rand {\n     pub use rand::{thread_rng, ThreadRng, Rng};\n }\n \n-// Include a private number of modules that exist soley to provide the\n-// rustdoc documentation for primitive types. Using `include!` because\n-// rustdoc only looks for these modules at the crate level.\n+// Include a number of private modules that exist solely to provide\n+// the rustdoc documentation for primitive types. Using `include!`\n+// because rustdoc only looks for these modules at the crate level.\n include!(\"primitive_docs.rs\");\n \n // A curious inner-module that's not exported that contains the binding"}, {"sha": "b8a70d756effff82672a76f15d9107c1df095614", "filename": "src/libstd/num/f32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff32.rs?ref=778c89c1bb86dbd370e8b51911e2916180f42aec", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! The 32-bit floating point type\n+//! The 32-bit floating point type.\n //!\n //! *[See also the `f32` primitive type](../primitive.f32.html).*\n "}, {"sha": "4f2f59659ac80627749da17c3b988a5c2b888e91", "filename": "src/libstd/num/f64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff64.rs?ref=778c89c1bb86dbd370e8b51911e2916180f42aec", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! The 32-bit floating point type\n+//! The 64-bit floating point type.\n //!\n //! *[See also the `f64` primitive type](../primitive.f64.html).*\n "}, {"sha": "eb53e0821f2a6f44fdaed228d074e35720262369", "filename": "src/libstd/num/i16.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fi16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fi16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fi16.rs?ref=778c89c1bb86dbd370e8b51911e2916180f42aec", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! The 16-bit signed integer type\n+//! The 16-bit signed integer type.\n //!\n //! *[See also the `i16` primitive type](../primitive.i16.html).*\n "}, {"sha": "3c9eedf38c7cd5030236fef6b18e97c3d9e835ab", "filename": "src/libstd/num/i32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fi32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fi32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fi32.rs?ref=778c89c1bb86dbd370e8b51911e2916180f42aec", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! The 32-bit signed integer type\n+//! The 32-bit signed integer type.\n //!\n //! *[See also the `i32` primitive type](../primitive.i32.html).*\n "}, {"sha": "2df7478a820bf94df5299d1f08572ff00bc0fc4c", "filename": "src/libstd/num/i64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fi64.rs?ref=778c89c1bb86dbd370e8b51911e2916180f42aec", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! The 64-bit signed integer type\n+//! The 64-bit signed integer type.\n //!\n //! *[See also the `i64` primitive type](../primitive.i64.html).*\n "}, {"sha": "4e4bee8a791e45dce28d0dc9a12953dda4532baa", "filename": "src/libstd/num/i8.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fi8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fi8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fi8.rs?ref=778c89c1bb86dbd370e8b51911e2916180f42aec", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! The 8-bit signed integer type\n+//! The 8-bit signed integer type.\n //!\n //! *[See also the `i8` primitive type](../primitive.i8.html).*\n "}, {"sha": "d46b6b80d0d25d91812ebaabf2fda216541decd8", "filename": "src/libstd/num/isize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fisize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fisize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fisize.rs?ref=778c89c1bb86dbd370e8b51911e2916180f42aec", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! The pointer-sized signed integer type\n+//! The pointer-sized signed integer type.\n //!\n //! *[See also the `isize` primitive type](../primitive.isize.html).*\n "}, {"sha": "893618aeffafd2d32419c7930823049415a1406b", "filename": "src/libstd/num/u16.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fu16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fu16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fu16.rs?ref=778c89c1bb86dbd370e8b51911e2916180f42aec", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! The 16-bit unsigned integer type\n+//! The 16-bit unsigned integer type.\n //!\n //! *[See also the `u16` primitive type](../primitive.u16.html).*\n "}, {"sha": "2da25519696579ca0c72251c232ee3f494e2a7a9", "filename": "src/libstd/num/u32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fu32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fu32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fu32.rs?ref=778c89c1bb86dbd370e8b51911e2916180f42aec", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! The 32-bit unsigned integer type\n+//! The 32-bit unsigned integer type.\n //!\n //! *[See also the `u32` primitive type](../primitive.u32.html).*\n "}, {"sha": "26a8b5373940306b5d3f4815ce8ebddbaff2a379", "filename": "src/libstd/num/u64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fu64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fu64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fu64.rs?ref=778c89c1bb86dbd370e8b51911e2916180f42aec", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! The 64-bit unsigned integer type\n+//! The 64-bit unsigned integer type.\n //!\n //! *[See also the `u64` primitive type](../primitive.u64.html).*\n "}, {"sha": "385754b93a04b69668dfa18970c05e7070695e24", "filename": "src/libstd/num/u8.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fu8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fu8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fu8.rs?ref=778c89c1bb86dbd370e8b51911e2916180f42aec", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! The 8-bit unsigned integer type\n+//! The 8-bit unsigned integer type.\n //!\n //! *[See also the `u8` primitive type](../primitive.u8.html).*\n "}, {"sha": "6960ba3b8296bb2defcad4167cb755c5a4da2550", "filename": "src/libstd/num/usize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fusize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fnum%2Fusize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fusize.rs?ref=778c89c1bb86dbd370e8b51911e2916180f42aec", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! The pointer-sized unsigned integer type\n+//! The pointer-sized unsigned integer type.\n //!\n //! *[See also the `usize` primitive type](../primitive.usize.html).*\n "}, {"sha": "066b2b576da490feafea655784d7a8f624635548", "filename": "src/libstd/primitive_docs.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778c89c1bb86dbd370e8b51911e2916180f42aec/src%2Flibstd%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprimitive_docs.rs?ref=778c89c1bb86dbd370e8b51911e2916180f42aec", "patch": "@@ -16,7 +16,7 @@ mod prim_bool { }\n \n #[doc(primitive = \"char\")]\n //\n-/// A Unicode scalar value\n+/// A Unicode scalar value.\n ///\n /// A `char` represents a\n /// *[Unicode scalar\n@@ -72,7 +72,7 @@ mod prim_unit { }\n \n #[doc(primitive = \"pointer\")]\n //\n-/// Raw, unsafe pointers, `*const T`, and `*mut T`\n+/// Raw, unsafe pointers, `*const T`, and `*mut T`.\n ///\n /// Working with raw pointers in Rust is uncommon,\n /// typically limited to a few patterns.\n@@ -231,7 +231,7 @@ mod prim_slice { }\n \n #[doc(primitive = \"str\")]\n //\n-/// Unicode string slices\n+/// Unicode string slices.\n ///\n /// Rust's `str` type is one of the core primitive types of the language. `&str`\n /// is the borrowed string type. This type of string can only be created from\n@@ -324,95 +324,95 @@ mod prim_str { }\n mod prim_tuple { }\n \n #[doc(primitive = \"f32\")]\n-/// The 32-bit floating point type\n+/// The 32-bit floating point type.\n ///\n /// *[See also the `std::f32` module](f32/index.html).*\n ///\n mod prim_f32 { }\n \n #[doc(primitive = \"f64\")]\n //\n-/// The 64-bit floating point type\n+/// The 64-bit floating point type.\n ///\n /// *[See also the `std::f64` module](f64/index.html).*\n ///\n mod prim_f64 { }\n \n #[doc(primitive = \"i8\")]\n //\n-/// The 8-bit signed integer type\n+/// The 8-bit signed integer type.\n ///\n /// *[See also the `std::i8` module](i8/index.html).*\n ///\n mod prim_i8 { }\n \n #[doc(primitive = \"i16\")]\n //\n-/// The 16-bit signed integer type\n+/// The 16-bit signed integer type.\n ///\n /// *[See also the `std::i16` module](i16/index.html).*\n ///\n mod prim_i16 { }\n \n #[doc(primitive = \"i32\")]\n //\n-/// The 32-bit signed integer type\n+/// The 32-bit signed integer type.\n ///\n /// *[See also the `std::i32` module](i32/index.html).*\n ///\n mod prim_i32 { }\n \n #[doc(primitive = \"i64\")]\n //\n-/// The 64-bit signed integer type\n+/// The 64-bit signed integer type.\n ///\n /// *[See also the `std::i64` module](i64/index.html).*\n ///\n mod prim_i64 { }\n \n #[doc(primitive = \"u8\")]\n //\n-/// The 8-bit unsigned integer type\n+/// The 8-bit unsigned integer type.\n ///\n /// *[See also the `std::u8` module](u8/index.html).*\n ///\n mod prim_u8 { }\n \n #[doc(primitive = \"u16\")]\n //\n-/// The 16-bit unsigned integer type\n+/// The 16-bit unsigned integer type.\n ///\n /// *[See also the `std::u16` module](u16/index.html).*\n ///\n mod prim_u16 { }\n \n #[doc(primitive = \"u32\")]\n //\n-/// The 32-bit unsigned integer type\n+/// The 32-bit unsigned integer type.\n ///\n /// *[See also the `std::u32` module](u32/index.html).*\n ///\n mod prim_u32 { }\n \n #[doc(primitive = \"u64\")]\n //\n-/// The 64-bit unsigned integer type\n+/// The 64-bit unsigned integer type.\n ///\n /// *[See also the `std::u64` module](u64/index.html).*\n ///\n mod prim_u64 { }\n \n #[doc(primitive = \"isize\")]\n //\n-/// The pointer-sized signed integer type\n+/// The pointer-sized signed integer type.\n ///\n /// *[See also the `std::isize` module](isize/index.html).*\n ///\n mod prim_isize { }\n \n #[doc(primitive = \"usize\")]\n //\n-/// The pointer-sized signed integer type\n+/// The pointer-sized signed integer type.\n ///\n /// *[See also the `std::usize` module](usize/index.html).*\n ///"}]}