{"sha": "80401da12e47c6b3cce0e9921980ec49b1b03a10", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNDAxZGExMmU0N2M2YjNjY2UwZTk5MjE5ODBlYzQ5YjFiMDNhMTA=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2014-10-05T11:15:59Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2014-10-05T11:15:59Z"}, "message": "String::truncate doc: also fails if not a char boundary", "tree": {"sha": "ba416924431842576e80691a2f6d1b4b7f490166", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba416924431842576e80691a2f6d1b4b7f490166"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80401da12e47c6b3cce0e9921980ec49b1b03a10", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80401da12e47c6b3cce0e9921980ec49b1b03a10", "html_url": "https://github.com/rust-lang/rust/commit/80401da12e47c6b3cce0e9921980ec49b1b03a10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80401da12e47c6b3cce0e9921980ec49b1b03a10/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfbe9eb3b24fdc7ea5c78f96fedec6630476dec7", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfbe9eb3b24fdc7ea5c78f96fedec6630476dec7", "html_url": "https://github.com/rust-lang/rust/commit/dfbe9eb3b24fdc7ea5c78f96fedec6630476dec7"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "43fcdfae4d63568c3c164ba0b4002620e0c7c573", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/80401da12e47c6b3cce0e9921980ec49b1b03a10/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80401da12e47c6b3cce0e9921980ec49b1b03a10/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=80401da12e47c6b3cce0e9921980ec49b1b03a10", "patch": "@@ -613,7 +613,8 @@ impl String {\n     ///\n     /// # Failure\n     ///\n-    /// Fails if `len` > current length.\n+    /// Fails if `new_len` > current length,\n+    /// or if `new_len` is not a character boundary.\n     ///\n     /// # Example\n     ///\n@@ -624,9 +625,9 @@ impl String {\n     /// ```\n     #[inline]\n     #[unstable = \"the failure conventions for strings are under development\"]\n-    pub fn truncate(&mut self, len: uint) {\n-        assert!(self.as_slice().is_char_boundary(len));\n-        self.vec.truncate(len)\n+    pub fn truncate(&mut self, new_len: uint) {\n+        assert!(self.as_slice().is_char_boundary(new_len));\n+        self.vec.truncate(new_len)\n     }\n \n     /// Appends a byte to this string buffer."}]}