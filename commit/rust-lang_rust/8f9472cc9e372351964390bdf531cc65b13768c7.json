{"sha": "8f9472cc9e372351964390bdf531cc65b13768c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmOTQ3MmNjOWUzNzIzNTE5NjQzOTBiZGY1MzFjYzY1YjEzNzY4Yzc=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-10-01T06:32:24Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-10-01T06:32:24Z"}, "message": "Only mention that a stack frame is being popped when starting to do so", "tree": {"sha": "a584e460ac039cf39f88660faf0440aae478a1c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a584e460ac039cf39f88660faf0440aae478a1c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f9472cc9e372351964390bdf531cc65b13768c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f9472cc9e372351964390bdf531cc65b13768c7", "html_url": "https://github.com/rust-lang/rust/commit/8f9472cc9e372351964390bdf531cc65b13768c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f9472cc9e372351964390bdf531cc65b13768c7/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43c181bac4d88dbe7bdd762688dcf18313f01093", "url": "https://api.github.com/repos/rust-lang/rust/commits/43c181bac4d88dbe7bdd762688dcf18313f01093", "html_url": "https://github.com/rust-lang/rust/commit/43c181bac4d88dbe7bdd762688dcf18313f01093"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "93da6e3d38a93c71df5a1491dda6cf2eae02b893", "filename": "compiler/rustc_mir/src/interpret/eval_context.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8f9472cc9e372351964390bdf531cc65b13768c7/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f9472cc9e372351964390bdf531cc65b13768c7/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs?ref=8f9472cc9e372351964390bdf531cc65b13768c7", "patch": "@@ -783,7 +783,10 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     /// The cleanup block ends with a special `Resume` terminator, which will\n     /// cause us to continue unwinding.\n     pub(super) fn pop_stack_frame(&mut self, unwinding: bool) -> InterpResult<'tcx> {\n-        info!(unwinding);\n+        info!(\n+            \"popping stack frame ({})\",\n+            if unwinding { \"during unwinding\" } else { \"returning from function\" }\n+        );\n \n         // Sanity check `unwinding`.\n         assert_eq!(\n@@ -854,10 +857,6 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             }\n         }\n \n-        if !self.stack().is_empty() {\n-            info!(unwinding);\n-        }\n-\n         Ok(())\n     }\n "}]}