{"sha": "d1c1f8e61e5773fdbcb4d548820a543549c4a7b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxYzFmOGU2MWU1NzczZmRiY2I0ZDU0ODgyMGE1NDM1NDljNGE3Yjk=", "commit": {"author": {"name": "Ruben Schmidmeister", "email": "ruben.schmidmeister@icloud.com", "date": "2019-05-09T19:13:32Z"}, "committer": {"name": "Ruben Schmidmeister", "email": "ruben.schmidmeister@icloud.com", "date": "2019-05-09T19:13:32Z"}, "message": "Run rustfmt", "tree": {"sha": "dc226c8c039437409dc14fdea66373f0adc75dde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc226c8c039437409dc14fdea66373f0adc75dde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1c1f8e61e5773fdbcb4d548820a543549c4a7b9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEU0FXzFYkrmfOhhqxKTh7Wnqvhj8FAlzUe98ACgkQKTh7Wnqv\nhj/IFwf+KFYEBkI1EzYTrazNzVBSPE5l2gE7jSLHFddLGvtACudDxTSrr4K0cIzn\n+mB4XibNH5iqD6SpKsjjyYezU2By6O1haXYPGKXgt/AaeckJB8xQgBfJeuCZx+dU\nZJFCVhxI8xWdHu37O8asyEyBLyeIyrglSGp0KI+qtzq6kqVpW8MJOID3Uluiwd6m\n9hUZom3NguRABDouDdLNLA5N0CL9meQHdSW3LQzSsVStvDR+mnemgwwssOxkF+zj\nTMMx12ZvQAHYvdqewEk2BCF+TQgNkKppvfAA7ZbN9WUj2vYDZPJHmh369dUx7xU0\nqkwDDS4b9vP7jwa8EkISusqnwxJFkw==\n=a/9L\n-----END PGP SIGNATURE-----", "payload": "tree dc226c8c039437409dc14fdea66373f0adc75dde\nparent 618d092bf722c15496235b45d1208178b8351c99\nauthor Ruben Schmidmeister <ruben.schmidmeister@icloud.com> 1557429212 +0200\ncommitter Ruben Schmidmeister <ruben.schmidmeister@icloud.com> 1557429212 +0200\n\nRun rustfmt\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1c1f8e61e5773fdbcb4d548820a543549c4a7b9", "html_url": "https://github.com/rust-lang/rust/commit/d1c1f8e61e5773fdbcb4d548820a543549c4a7b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1c1f8e61e5773fdbcb4d548820a543549c4a7b9/comments", "author": {"login": "bash", "id": 4602612, "node_id": "MDQ6VXNlcjQ2MDI2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4602612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bash", "html_url": "https://github.com/bash", "followers_url": "https://api.github.com/users/bash/followers", "following_url": "https://api.github.com/users/bash/following{/other_user}", "gists_url": "https://api.github.com/users/bash/gists{/gist_id}", "starred_url": "https://api.github.com/users/bash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bash/subscriptions", "organizations_url": "https://api.github.com/users/bash/orgs", "repos_url": "https://api.github.com/users/bash/repos", "events_url": "https://api.github.com/users/bash/events{/privacy}", "received_events_url": "https://api.github.com/users/bash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bash", "id": 4602612, "node_id": "MDQ6VXNlcjQ2MDI2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4602612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bash", "html_url": "https://github.com/bash", "followers_url": "https://api.github.com/users/bash/followers", "following_url": "https://api.github.com/users/bash/following{/other_user}", "gists_url": "https://api.github.com/users/bash/gists{/gist_id}", "starred_url": "https://api.github.com/users/bash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bash/subscriptions", "organizations_url": "https://api.github.com/users/bash/orgs", "repos_url": "https://api.github.com/users/bash/repos", "events_url": "https://api.github.com/users/bash/events{/privacy}", "received_events_url": "https://api.github.com/users/bash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "618d092bf722c15496235b45d1208178b8351c99", "url": "https://api.github.com/repos/rust-lang/rust/commits/618d092bf722c15496235b45d1208178b8351c99", "html_url": "https://github.com/rust-lang/rust/commit/618d092bf722c15496235b45d1208178b8351c99"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "498d6e4d85114cb592391894d4f0d2c34429b226", "filename": "src/attr.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d1c1f8e61e5773fdbcb4d548820a543549c4a7b9/src%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1c1f8e61e5773fdbcb4d548820a543549c4a7b9/src%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattr.rs?ref=d1c1f8e61e5773fdbcb4d548820a543549c4a7b9", "patch": "@@ -37,7 +37,10 @@ pub(crate) fn get_span_without_attrs(stmt: &ast::Stmt) -> Span {\n }\n \n /// Returns attributes that are within `outer_span`.\n-pub(crate) fn filter_inline_attrs(attrs: &[ast::Attribute], outer_span: Span) -> Vec<ast::Attribute> {\n+pub(crate) fn filter_inline_attrs(\n+    attrs: &[ast::Attribute],\n+    outer_span: Span,\n+) -> Vec<ast::Attribute> {\n     attrs\n         .iter()\n         .filter(|a| outer_span.lo() <= a.span.lo() && a.span.hi() <= outer_span.hi())"}, {"sha": "eb90a67d0dc1bee51942d63f1b6c825d4db3c0c6", "filename": "src/types.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d1c1f8e61e5773fdbcb4d548820a543549c4a7b9/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1c1f8e61e5773fdbcb4d548820a543549c4a7b9/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=d1c1f8e61e5773fdbcb4d548820a543549c4a7b9", "patch": "@@ -827,7 +827,11 @@ fn join_bounds(\n     Some(result)\n }\n \n-pub(crate) fn can_be_overflowed_type(context: &RewriteContext<'_>, ty: &ast::Ty, len: usize) -> bool {\n+pub(crate) fn can_be_overflowed_type(\n+    context: &RewriteContext<'_>,\n+    ty: &ast::Ty,\n+    len: usize,\n+) -> bool {\n     match ty.node {\n         ast::TyKind::Tup(..) => context.use_block_indent() && len == 1,\n         ast::TyKind::Rptr(_, ref mutty) | ast::TyKind::Ptr(ref mutty) => {"}, {"sha": "9a0a29dc5c347413bb0a6960d7d4ccd2dc57e8b7", "filename": "src/utils.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d1c1f8e61e5773fdbcb4d548820a543549c4a7b9/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1c1f8e61e5773fdbcb4d548820a543549c4a7b9/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=d1c1f8e61e5773fdbcb4d548820a543549c4a7b9", "patch": "@@ -54,7 +54,10 @@ pub(crate) fn is_same_visibility(a: &Visibility, b: &Visibility) -> bool {\n }\n \n // Uses Cow to avoid allocating in the common cases.\n-pub(crate) fn format_visibility(context: &RewriteContext<'_>, vis: &Visibility) -> Cow<'static, str> {\n+pub(crate) fn format_visibility(\n+    context: &RewriteContext<'_>,\n+    vis: &Visibility,\n+) -> Cow<'static, str> {\n     match vis.node {\n         VisibilityKind::Public => Cow::from(\"pub \"),\n         VisibilityKind::Inherited => Cow::from(\"\"),\n@@ -143,7 +146,10 @@ pub(crate) fn ptr_vec_to_ref_vec<T>(vec: &[ptr::P<T>]) -> Vec<&T> {\n }\n \n #[inline]\n-pub(crate) fn filter_attributes(attrs: &[ast::Attribute], style: ast::AttrStyle) -> Vec<ast::Attribute> {\n+pub(crate) fn filter_attributes(\n+    attrs: &[ast::Attribute],\n+    style: ast::AttrStyle,\n+) -> Vec<ast::Attribute> {\n     attrs\n         .iter()\n         .filter(|a| a.style == style)\n@@ -503,7 +509,11 @@ pub(crate) fn remove_trailing_white_spaces(text: &str) -> String {\n ///     ),\n /// }\n /// ```\n-pub(crate) fn trim_left_preserve_layout(orig: &str, indent: Indent, config: &Config) -> Option<String> {\n+pub(crate) fn trim_left_preserve_layout(\n+    orig: &str,\n+    indent: Indent,\n+    config: &Config,\n+) -> Option<String> {\n     let mut lines = LineClasses::new(orig);\n     let first_line = lines.next().map(|(_, s)| s.trim_end().to_owned())?;\n     let mut trimmed_lines = Vec::with_capacity(16);"}]}