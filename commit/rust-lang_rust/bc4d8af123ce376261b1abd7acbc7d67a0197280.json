{"sha": "bc4d8af123ce376261b1abd7acbc7d67a0197280", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNGQ4YWYxMjNjZTM3NjI2MWIxYWJkN2FjYmM3ZDY3YTAxOTcyODA=", "commit": {"author": {"name": "Augie Fackler", "email": "augie@google.com", "date": "2021-09-16T19:04:18Z"}, "committer": {"name": "Augie Fackler", "email": "augie@google.com", "date": "2021-09-16T19:04:18Z"}, "message": "PassWrapper: these two lines shouldn't have been ifdef'd", "tree": {"sha": "2d3de044d9f763695fa5e49f25cdd073b0cd6612", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d3de044d9f763695fa5e49f25cdd073b0cd6612"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc4d8af123ce376261b1abd7acbc7d67a0197280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc4d8af123ce376261b1abd7acbc7d67a0197280", "html_url": "https://github.com/rust-lang/rust/commit/bc4d8af123ce376261b1abd7acbc7d67a0197280", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc4d8af123ce376261b1abd7acbc7d67a0197280/comments", "author": {"login": "durin42", "id": 20269, "node_id": "MDQ6VXNlcjIwMjY5", "avatar_url": "https://avatars.githubusercontent.com/u/20269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durin42", "html_url": "https://github.com/durin42", "followers_url": "https://api.github.com/users/durin42/followers", "following_url": "https://api.github.com/users/durin42/following{/other_user}", "gists_url": "https://api.github.com/users/durin42/gists{/gist_id}", "starred_url": "https://api.github.com/users/durin42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durin42/subscriptions", "organizations_url": "https://api.github.com/users/durin42/orgs", "repos_url": "https://api.github.com/users/durin42/repos", "events_url": "https://api.github.com/users/durin42/events{/privacy}", "received_events_url": "https://api.github.com/users/durin42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durin42", "id": 20269, "node_id": "MDQ6VXNlcjIwMjY5", "avatar_url": "https://avatars.githubusercontent.com/u/20269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durin42", "html_url": "https://github.com/durin42", "followers_url": "https://api.github.com/users/durin42/followers", "following_url": "https://api.github.com/users/durin42/following{/other_user}", "gists_url": "https://api.github.com/users/durin42/gists{/gist_id}", "starred_url": "https://api.github.com/users/durin42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durin42/subscriptions", "organizations_url": "https://api.github.com/users/durin42/orgs", "repos_url": "https://api.github.com/users/durin42/repos", "events_url": "https://api.github.com/users/durin42/events{/privacy}", "received_events_url": "https://api.github.com/users/durin42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a97f89aeb4b4d7e2131f34c067df0f952fb8caad", "url": "https://api.github.com/repos/rust-lang/rust/commits/a97f89aeb4b4d7e2131f34c067df0f952fb8caad", "html_url": "https://github.com/rust-lang/rust/commit/a97f89aeb4b4d7e2131f34c067df0f952fb8caad"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "b7cad1c3ba6d9367cd57bc247dcdc444a8553193", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc4d8af123ce376261b1abd7acbc7d67a0197280/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/bc4d8af123ce376261b1abd7acbc7d67a0197280/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=bc4d8af123ce376261b1abd7acbc7d67a0197280", "patch": "@@ -879,8 +879,8 @@ LLVMRustOptimizeWithNewPassManager(\n           MPM.addPass(ModuleMemorySanitizerPass(Options));\n #else\n           MPM.addPass(MemorySanitizerPass(Options));\n-          MPM.addPass(createModuleToFunctionPassAdaptor(MemorySanitizerPass(Options)));\n #endif\n+          MPM.addPass(createModuleToFunctionPassAdaptor(MemorySanitizerPass(Options)));\n         }\n       );\n #else\n@@ -905,8 +905,8 @@ LLVMRustOptimizeWithNewPassManager(\n           MPM.addPass(ModuleThreadSanitizerPass());\n #else\n           MPM.addPass(ThreadSanitizerPass());\n-          MPM.addPass(createModuleToFunctionPassAdaptor(ThreadSanitizerPass()));\n #endif\n+          MPM.addPass(createModuleToFunctionPassAdaptor(ThreadSanitizerPass()));\n         }\n       );\n #else"}]}