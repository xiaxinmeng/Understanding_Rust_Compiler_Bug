{"sha": "e79ee140ee0809fc23e4d6f148fac228ca669e98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3OWVlMTQwZWUwODA5ZmMyM2U0ZDZmMTQ4ZmFjMjI4Y2E2NjllOTg=", "commit": {"author": {"name": "David Renshaw", "email": "david@sandstorm.io", "date": "2017-03-14T00:32:43Z"}, "committer": {"name": "David Renshaw", "email": "david@sandstorm.io", "date": "2017-03-14T00:32:43Z"}, "message": "write_bytes(): fix handling of types that are larger than u128", "tree": {"sha": "a8e0af9d2af501652382af456e3e966b371b4dea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8e0af9d2af501652382af456e3e966b371b4dea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e79ee140ee0809fc23e4d6f148fac228ca669e98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e79ee140ee0809fc23e4d6f148fac228ca669e98", "html_url": "https://github.com/rust-lang/rust/commit/e79ee140ee0809fc23e4d6f148fac228ca669e98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e79ee140ee0809fc23e4d6f148fac228ca669e98/comments", "author": null, "committer": null, "parents": [{"sha": "aa2f9988a41144bf29d3538239b40bb12571f36c", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa2f9988a41144bf29d3538239b40bb12571f36c", "html_url": "https://github.com/rust-lang/rust/commit/aa2f9988a41144bf29d3538239b40bb12571f36c"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "56d097289bcb55c1bc424d68b0b68e6fa4fe8f22", "filename": "src/terminator/intrinsic.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e79ee140ee0809fc23e4d6f148fac228ca669e98/src%2Fterminator%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e79ee140ee0809fc23e4d6f148fac228ca669e98/src%2Fterminator%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fintrinsic.rs?ref=e79ee140ee0809fc23e4d6f148fac228ca669e98", "patch": "@@ -406,18 +406,11 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 let u8 = self.tcx.types.u8;\n                 let ty = substs.type_at(0);\n                 let size = self.type_size(ty)?.expect(\"write_bytes() type must be sized\");\n-                let val_byte = self.value_to_primval(arg_vals[1], u8)?.to_u128()?;\n-                let mut pattern: u128 = 0;\n-                for ii in 0..size {\n-                    pattern |= val_byte << (8 * ii);\n-                }\n-                let val_full = Value::ByVal(PrimVal::from_u128(pattern));\n                 let mut ptr = arg_vals[0].read_ptr(&self.memory)?;\n-\n                 let count = self.value_to_primval(arg_vals[2], usize)?.to_u64()?;\n-                for _ in 0..count {\n-                    self.write_value_to_ptr(val_full, ptr, ty)?;\n-                    ptr = ptr.offset(size);\n+                for _ in 0..(count * size) {\n+                    self.write_value_to_ptr(arg_vals[1], ptr, u8)?;\n+                    ptr = ptr.offset(1);\n                 }\n             }\n "}]}