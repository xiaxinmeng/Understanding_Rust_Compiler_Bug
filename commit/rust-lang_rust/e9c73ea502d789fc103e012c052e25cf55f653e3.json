{"sha": "e9c73ea502d789fc103e012c052e25cf55f653e3", "node_id": "C_kwDOAAsO6NoAKGU5YzczZWE1MDJkNzg5ZmMxMDNlMDEyYzA1MmUyNWNmNTVmNjUzZTM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-11T17:29:12Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-18T21:35:02Z"}, "message": "Make name more explicit.", "tree": {"sha": "b49f19fd1e83849183b2da7a40cc6c8a0851c151", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b49f19fd1e83849183b2da7a40cc6c8a0851c151"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9c73ea502d789fc103e012c052e25cf55f653e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9c73ea502d789fc103e012c052e25cf55f653e3", "html_url": "https://github.com/rust-lang/rust/commit/e9c73ea502d789fc103e012c052e25cf55f653e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9c73ea502d789fc103e012c052e25cf55f653e3/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f13aa7f46630b92ac6148e006fb553e712f7d27", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f13aa7f46630b92ac6148e006fb553e712f7d27", "html_url": "https://github.com/rust-lang/rust/commit/4f13aa7f46630b92ac6148e006fb553e712f7d27"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "7d16964abfde0ae86b91ef07fe392e9dd207d18e", "filename": "compiler/rustc_codegen_ssa/src/mir/block.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9c73ea502d789fc103e012c052e25cf55f653e3/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9c73ea502d789fc103e012c052e25cf55f653e3/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs?ref=e9c73ea502d789fc103e012c052e25cf55f653e3", "patch": "@@ -566,12 +566,12 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         // another crate (mostly core::num generic/#[inline] fns),\n         // while the current crate doesn't use overflow checks.\n         if !bx.cx().check_overflow() {\n-            let unchecked_overflow = match msg {\n+            let overflow_not_to_check = match msg {\n                 AssertKind::OverflowNeg(..) => true,\n                 AssertKind::Overflow(op, ..) => op.is_checkable(),\n                 _ => false,\n             };\n-            if unchecked_overflow {\n+            if overflow_not_to_check {\n                 const_cond = Some(expected);\n             }\n         }"}]}