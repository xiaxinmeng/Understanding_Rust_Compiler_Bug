{"sha": "9ac6277bad856e0a1373e1fd26ee3e70b10074a8", "node_id": "C_kwDOAAsO6NoAKDlhYzYyNzdiYWQ4NTZlMGExMzczZTFmZDI2ZWUzZTcwYjEwMDc0YTg", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-03-31T18:01:26Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-06-19T21:43:19Z"}, "message": "Add `core::mem::copy` to complement `core::mem::drop`.\n\nThis is useful for combinators. I didn't add `clone` since you can already\nuse `Clone::clone` in its place; copy has no such corresponding function.", "tree": {"sha": "bfa726d8aee574c22abb0ba3d714e7eadf4089d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfa726d8aee574c22abb0ba3d714e7eadf4089d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ac6277bad856e0a1373e1fd26ee3e70b10074a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ac6277bad856e0a1373e1fd26ee3e70b10074a8", "html_url": "https://github.com/rust-lang/rust/commit/9ac6277bad856e0a1373e1fd26ee3e70b10074a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ac6277bad856e0a1373e1fd26ee3e70b10074a8/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37b55c8a0cafdb60b9168da34f904acc70157df8", "url": "https://api.github.com/repos/rust-lang/rust/commits/37b55c8a0cafdb60b9168da34f904acc70157df8", "html_url": "https://github.com/rust-lang/rust/commit/37b55c8a0cafdb60b9168da34f904acc70157df8"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "03e94c8cd6ed12179224c83088981d3f3085caac", "filename": "library/core/src/mem/mod.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9ac6277bad856e0a1373e1fd26ee3e70b10074a8/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ac6277bad856e0a1373e1fd26ee3e70b10074a8/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs?ref=9ac6277bad856e0a1373e1fd26ee3e70b10074a8", "patch": "@@ -964,6 +964,28 @@ pub const fn replace<T>(dest: &mut T, src: T) -> T {\n #[cfg_attr(not(test), rustc_diagnostic_item = \"mem_drop\")]\n pub fn drop<T>(_x: T) {}\n \n+/// Bitwise-copies a value.\n+///\n+/// This function is not magic; it is literally defined as\n+/// ```\n+/// pub fn copy<T: Copy>(x: &T) -> T { *x }\n+/// ```\n+///\n+/// It is useful when you want to pass a function pointer to a combinator, rather than defining a new closure.\n+///\n+/// Example:\n+/// ```\n+/// #![feature(mem_copy_fn)]\n+/// use core::mem::copy;\n+/// let result_from_ffi_function: Result<(), &i32> = Err(&1);\n+/// let result_copied: Result<(), i32> = result_from_ffi_function.map_err(copy);\n+/// ```\n+#[inline]\n+#[unstable(feature = \"mem_copy_fn\", issue = \"98262\")]\n+pub fn copy<T: Copy>(x: &T) -> T {\n+    *x\n+}\n+\n /// Interprets `src` as having type `&U`, and then reads `src` without moving\n /// the contained value.\n ///"}]}