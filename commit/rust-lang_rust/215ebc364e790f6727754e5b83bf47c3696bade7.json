{"sha": "215ebc364e790f6727754e5b83bf47c3696bade7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNWViYzM2NGU3OTBmNjcyNzc1NGU1YjgzYmY0N2MzNjk2YmFkZTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-12T14:16:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-12T14:16:01Z"}, "message": "Auto merge of #83030 - nikic:update-llvm, r=nagisa\n\nUpdate llvm-project submodule\n\nFixes #82833. Fixes #82859. Probably also `fixes` #83025. This also merges in the current upstream 12.x branch.\n\nr? `@nagisa`", "tree": {"sha": "529732b982db3676a1684c05ad8b20f7a0ca26b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/529732b982db3676a1684c05ad8b20f7a0ca26b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/215ebc364e790f6727754e5b83bf47c3696bade7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/215ebc364e790f6727754e5b83bf47c3696bade7", "html_url": "https://github.com/rust-lang/rust/commit/215ebc364e790f6727754e5b83bf47c3696bade7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/215ebc364e790f6727754e5b83bf47c3696bade7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "338647db73028aca0198f5330b15bf4bb769a1ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/338647db73028aca0198f5330b15bf4bb769a1ea", "html_url": "https://github.com/rust-lang/rust/commit/338647db73028aca0198f5330b15bf4bb769a1ea"}, {"sha": "ef269ac4fcf62e9fa39f4d6d28ccae6eeebda4c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef269ac4fcf62e9fa39f4d6d28ccae6eeebda4c4", "html_url": "https://github.com/rust-lang/rust/commit/ef269ac4fcf62e9fa39f4d6d28ccae6eeebda4c4"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "62a1ddde22c267249eda72184520a21ad2052f0b", "filename": "src/llvm-project", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm-project?ref=215ebc364e790f6727754e5b83bf47c3696bade7", "patch": "@@ -1 +1 @@\n-Subproject commit 5f958e150d377e608d2f1f208b86110218d5da3c\n+Subproject commit 62a1ddde22c267249eda72184520a21ad2052f0b"}, {"sha": "b14e5f6fb12fac31083658f89aaa8fb8a284451f", "filename": "src/test/ui/issues/issue-82833-slice-miscompile.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/215ebc364e790f6727754e5b83bf47c3696bade7/src%2Ftest%2Fui%2Fissues%2Fissue-82833-slice-miscompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/215ebc364e790f6727754e5b83bf47c3696bade7/src%2Ftest%2Fui%2Fissues%2Fissue-82833-slice-miscompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-82833-slice-miscompile.rs?ref=215ebc364e790f6727754e5b83bf47c3696bade7", "patch": "@@ -0,0 +1,17 @@\n+// run-pass\n+// compile-flags: -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Copt-level=0 -Cdebuginfo=2\n+// ignore-tidy-linelength\n+\n+// Make sure LLVM does not miscompile this.\n+\n+fn make_string(ch: char) -> String {\n+    let mut bytes = [0u8; 4];\n+    ch.encode_utf8(&mut bytes).into()\n+}\n+\n+fn main() {\n+    let ch = '\ud83d\ude03';\n+    dbg!(ch);\n+    let string = make_string(ch);\n+    dbg!(string);\n+}"}, {"sha": "b64eb49907139b0310cff41d92fb41226f26c82e", "filename": "src/test/ui/issues/issue-82859-slice-miscompile.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/215ebc364e790f6727754e5b83bf47c3696bade7/src%2Ftest%2Fui%2Fissues%2Fissue-82859-slice-miscompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/215ebc364e790f6727754e5b83bf47c3696bade7/src%2Ftest%2Fui%2Fissues%2Fissue-82859-slice-miscompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-82859-slice-miscompile.rs?ref=215ebc364e790f6727754e5b83bf47c3696bade7", "patch": "@@ -0,0 +1,19 @@\n+// run-pass\n+// compile-flags: -Copt-level=0 -Cdebuginfo=2\n+\n+// Make sure LLVM does not miscompile this.\n+\n+fn indirect_get_slice() -> &'static [usize] {\n+    &[]\n+}\n+\n+#[inline(always)]\n+fn get_slice() -> &'static [usize] {\n+    let ret = indirect_get_slice();\n+    ret\n+}\n+\n+fn main() {\n+    let output = get_slice().len();\n+    assert_eq!(output, 0);\n+}"}]}