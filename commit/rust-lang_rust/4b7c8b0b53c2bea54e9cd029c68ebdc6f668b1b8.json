{"sha": "4b7c8b0b53c2bea54e9cd029c68ebdc6f668b1b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiN2M4YjBiNTNjMmJlYTU0ZTljZDAyOWM2OGViZGM2ZjY2OGIxYjg=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-05-08T22:14:21Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-05-08T22:35:44Z"}, "message": "Add `#[track_caller]` to `FakeDefId::expect_real()`\n\nNow, in the case that the function is not inlined, the panic location\nwill be the caller's location, which is more helpful since the panic is\nnot `expect_real()`'s fault.", "tree": {"sha": "385715a68803d95420d07652fc14f3347faa2ff2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/385715a68803d95420d07652fc14f3347faa2ff2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b7c8b0b53c2bea54e9cd029c68ebdc6f668b1b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b7c8b0b53c2bea54e9cd029c68ebdc6f668b1b8", "html_url": "https://github.com/rust-lang/rust/commit/4b7c8b0b53c2bea54e9cd029c68ebdc6f668b1b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b7c8b0b53c2bea54e9cd029c68ebdc6f668b1b8/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba13225ba1e3e94b5656181926cd38750eed1503", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba13225ba1e3e94b5656181926cd38750eed1503", "html_url": "https://github.com/rust-lang/rust/commit/ba13225ba1e3e94b5656181926cd38750eed1503"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "33aa42b137a23bdeaa025502285ca26f3fdebb28", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4b7c8b0b53c2bea54e9cd029c68ebdc6f668b1b8/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b7c8b0b53c2bea54e9cd029c68ebdc6f668b1b8/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=4b7c8b0b53c2bea54e9cd029c68ebdc6f668b1b8", "patch": "@@ -86,6 +86,7 @@ impl FakeDefId {\n     }\n \n     #[inline]\n+    #[track_caller]\n     crate fn expect_real(self) -> rustc_hir::def_id::DefId {\n         self.as_real().unwrap_or_else(|| panic!(\"FakeDefId::expect_real: `{:?}` isn't real\", self))\n     }"}]}