{"sha": "8783d1a47eeaf04635e29b2418795bd36ac49605", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ODNkMWE0N2VlYWYwNDYzNWUyOWIyNDE4Nzk1YmQzNmFjNDk2MDU=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu.dantras@huawei.com", "date": "2021-01-20T17:13:49Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-01-27T22:47:57Z"}, "message": "Add big-endian and ILP32 AArch64 targets", "tree": {"sha": "6e38f2aa2f9296060cd8a68ef7fd5def82349db7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e38f2aa2f9296060cd8a68ef7fd5def82349db7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8783d1a47eeaf04635e29b2418795bd36ac49605", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8783d1a47eeaf04635e29b2418795bd36ac49605", "html_url": "https://github.com/rust-lang/rust/commit/8783d1a47eeaf04635e29b2418795bd36ac49605", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8783d1a47eeaf04635e29b2418795bd36ac49605/comments", "author": null, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a112c4d61da8f3cdff27c68a787d8e1a23cc6d25", "url": "https://api.github.com/repos/rust-lang/rust/commits/a112c4d61da8f3cdff27c68a787d8e1a23cc6d25", "html_url": "https://github.com/rust-lang/rust/commit/a112c4d61da8f3cdff27c68a787d8e1a23cc6d25"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "192c4661c7ce6d90d420ae2b6b0f23582db17a49", "filename": "compiler/rustc_target/src/spec/aarch64_be_unknown_linux_gnu.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8783d1a47eeaf04635e29b2418795bd36ac49605/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_be_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8783d1a47eeaf04635e29b2418795bd36ac49605/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_be_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_be_unknown_linux_gnu.rs?ref=8783d1a47eeaf04635e29b2418795bd36ac49605", "patch": "@@ -0,0 +1,20 @@\n+use crate::abi::Endian;\n+use crate::spec::{Target, TargetOptions};\n+\n+pub fn target() -> Target {\n+    let mut base = super::linux_gnu_base::opts();\n+    base.max_atomic_width = Some(128);\n+\n+    Target {\n+        llvm_target: \"aarch64_be-unknown-linux-gnu\".to_string(),\n+        pointer_width: 64,\n+        data_layout: \"E-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\".to_string(),\n+        arch: \"aarch64\".to_string(),\n+        options: TargetOptions {\n+            unsupported_abis: super::arm_base::unsupported_abis(),\n+            mcount: \"\\u{1}_mcount\".to_string(),\n+            endian: Endian::Big,\n+            ..base\n+        },\n+    }\n+}"}, {"sha": "5b9e9c9519c5480065e1d0d6b7be411b3d8af12b", "filename": "compiler/rustc_target/src/spec/aarch64_be_unknown_linux_gnu_ilp32.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8783d1a47eeaf04635e29b2418795bd36ac49605/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_be_unknown_linux_gnu_ilp32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8783d1a47eeaf04635e29b2418795bd36ac49605/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_be_unknown_linux_gnu_ilp32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_be_unknown_linux_gnu_ilp32.rs?ref=8783d1a47eeaf04635e29b2418795bd36ac49605", "patch": "@@ -0,0 +1,20 @@\n+use crate::abi::Endian;\n+use crate::spec::{Target, TargetOptions};\n+\n+pub fn target() -> Target {\n+    let mut base = super::linux_gnu_base::opts();\n+    base.max_atomic_width = Some(128);\n+\n+    Target {\n+        llvm_target: \"aarch64_be-unknown-linux-gnu_ilp32\".to_string(),\n+        pointer_width: 32,\n+        data_layout: \"E-m:e-p:32:32-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\".to_string(),\n+        arch: \"aarch64\".to_string(),\n+        options: TargetOptions {\n+            unsupported_abis: super::arm_base::unsupported_abis(),\n+            mcount: \"\\u{1}_mcount\".to_string(),\n+            endian: Endian::Big,\n+            ..base\n+        },\n+    }\n+}"}, {"sha": "f2d7576280fd98e2e1121839a10cded3891c1a61", "filename": "compiler/rustc_target/src/spec/aarch64_unknown_linux_gnu_ilp32.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8783d1a47eeaf04635e29b2418795bd36ac49605/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_linux_gnu_ilp32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8783d1a47eeaf04635e29b2418795bd36ac49605/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_linux_gnu_ilp32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_linux_gnu_ilp32.rs?ref=8783d1a47eeaf04635e29b2418795bd36ac49605", "patch": "@@ -0,0 +1,18 @@\n+use crate::spec::{Target, TargetOptions};\n+\n+pub fn target() -> Target {\n+    let mut base = super::linux_gnu_base::opts();\n+    base.max_atomic_width = Some(128);\n+\n+    Target {\n+        llvm_target: \"aarch64-unknown-linux-gnu_ilp32\".to_string(),\n+        pointer_width: 32,\n+        data_layout: \"e-m:e-p:32:32-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\".to_string(),\n+        arch: \"aarch64\".to_string(),\n+        options: TargetOptions {\n+            unsupported_abis: super::arm_base::unsupported_abis(),\n+            mcount: \"\\u{1}_mcount\".to_string(),\n+            ..base\n+        },\n+    }\n+}"}, {"sha": "8d6b2e3307b8b0a9ebcaba999f08e0334dbc4dd8", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8783d1a47eeaf04635e29b2418795bd36ac49605/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8783d1a47eeaf04635e29b2418795bd36ac49605/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=8783d1a47eeaf04635e29b2418795bd36ac49605", "patch": "@@ -745,6 +745,10 @@ supported_targets! {\n     (\"mipsel-sony-psp\", mipsel_sony_psp),\n     (\"mipsel-unknown-none\", mipsel_unknown_none),\n     (\"thumbv4t-none-eabi\", thumbv4t_none_eabi),\n+\n+    (\"aarch64_be-unknown-linux-gnu\", aarch64_be_unknown_linux_gnu),\n+    (\"aarch64-unknown-linux-gnu_ilp32\", aarch64_unknown_linux_gnu_ilp32),\n+    (\"aarch64_be-unknown-linux-gnu_ilp32\", aarch64_be_unknown_linux_gnu_ilp32),\n }\n \n /// Everything `rustc` knows about how to compile for a specific target."}]}