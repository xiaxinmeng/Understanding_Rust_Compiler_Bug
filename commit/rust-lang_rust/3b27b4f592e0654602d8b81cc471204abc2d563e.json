{"sha": "3b27b4f592e0654602d8b81cc471204abc2d563e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiMjdiNGY1OTJlMDY1NDYwMmQ4YjgxY2M0NzEyMDRhYmMyZDU2M2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-16T10:18:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-16T10:18:17Z"}, "message": "Auto merge of #59769 - RalfJung:compiletest-normalization, r=alexcrichton\n\ncompiletest normalization: preserve non-JSON lines such as ICEs\n\nCurrently, every non-JSON line from stderr gets normalized away when compiletest normalizes the output. In particular, ICEs get normalized to the empty output. That does not seem desirable, so this changes normalization to preserve non-JSON lines instead.\n\nAlso see https://github.com/laumann/compiletest-rs/issues/169: because of that bug, Miri currently *looks* green in the toolstate, but some tests ICE. That same bug is likely no longer present in latest compiletest because the error code gets checked separately, but it still seems like a good idea to also make sure that ICEs are considered stderr output:\nThis change found an accidental user-visible `error!` in CTFE validation (fixed), and a non-deterministic panic when there are two `main` symbols (not fixed, no idea where this comes from). Both got missed before because non-JSON output got ignored.", "tree": {"sha": "179b0c538d1342787e492040a8f6e73be9992dee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/179b0c538d1342787e492040a8f6e73be9992dee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b27b4f592e0654602d8b81cc471204abc2d563e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b27b4f592e0654602d8b81cc471204abc2d563e", "html_url": "https://github.com/rust-lang/rust/commit/3b27b4f592e0654602d8b81cc471204abc2d563e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b27b4f592e0654602d8b81cc471204abc2d563e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7cef0bf0810d04da3101fe079a0625d2756744a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7cef0bf0810d04da3101fe079a0625d2756744a", "html_url": "https://github.com/rust-lang/rust/commit/a7cef0bf0810d04da3101fe079a0625d2756744a"}, {"sha": "28c4397b28277cbbfb8f41aa007b9cac0e6b826f", "url": "https://api.github.com/repos/rust-lang/rust/commits/28c4397b28277cbbfb8f41aa007b9cac0e6b826f", "html_url": "https://github.com/rust-lang/rust/commit/28c4397b28277cbbfb8f41aa007b9cac0e6b826f"}], "stats": {"total": 102, "additions": 92, "deletions": 10}, "files": [{"sha": "11e4ffe19da62418f0d2fadce093fb4a05d79b82", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -353,7 +353,7 @@ impl<'rt, 'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>>\n                 match self.ecx.memory.check_align(ptr, align) {\n                     Ok(_) => {},\n                     Err(err) => {\n-                        error!(\"{:?} is not aligned to {:?}\", ptr, align);\n+                        info!(\"{:?} is not aligned to {:?}\", ptr, align);\n                         match err.kind {\n                             InterpError::InvalidNullPointerUsage =>\n                                 return validation_failure!(\"NULL reference\", self.path),"}, {"sha": "7f038ddecc1fab1a676eeebe2d7313059bcc6a02", "filename": "src/test/run-pass/backtrace-debuginfo.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -10,9 +10,11 @@\n // ignore-pretty issue #37195\n // ignore-cloudabi spawning processes is not supported\n // ignore-emscripten spawning processes is not supported\n+// normalize-stderr-test \".*\\n\" -> \"\"\n \n-// note that above `-opt-bisect-limit=0` is used to basically disable\n-// optimizations\n+// Note that above `-opt-bisect-limit=0` is used to basically disable\n+// optimizations. It creates tons of output on stderr, hence we normalize\n+// that away entirely.\n \n use std::env;\n "}, {"sha": "1e7922a9ff15535ef24359ba1b9b69c7d70a5ea0", "filename": "src/test/ui/conditional-compilation/cfg-arg-invalid-1.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-1.stderr?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -0,0 +1,2 @@\n+error: invalid `--cfg` argument: `a(b=c)` (expected `key` or `key=\"value\"`)\n+"}, {"sha": "b92e1fd3d97cff2a1908fe2fb33048b76851b5c5", "filename": "src/test/ui/conditional-compilation/cfg-arg-invalid-2.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-2.stderr?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -0,0 +1,2 @@\n+error: invalid `--cfg` argument: `a{b}` (expected `key` or `key=\"value\"`)\n+"}, {"sha": "5412f7ffd5c9c5386181cefa92c6ee1520944f20", "filename": "src/test/ui/conditional-compilation/cfg-arg-invalid-3.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-3.stderr?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -0,0 +1,2 @@\n+error: invalid `--cfg` argument: `a::b` (argument key must be an identifier)\n+"}, {"sha": "6853a69b9eb226380fc928143065ece5d8b7cee0", "filename": "src/test/ui/conditional-compilation/cfg-arg-invalid-4.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-4.stderr?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -0,0 +1,2 @@\n+error: invalid `--cfg` argument: `a(b)` (expected `key` or `key=\"value\"`)\n+"}, {"sha": "aafc4e8980cb5f8018456b420cd092554994e688", "filename": "src/test/ui/conditional-compilation/cfg-arg-invalid-5.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-5.stderr?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -0,0 +1,2 @@\n+error: invalid `--cfg` argument: `a=10` (argument value must be a string)\n+"}, {"sha": "128e3cd730680cfaacb08a40207d880bf50a4fc2", "filename": "src/test/ui/conditional-compilation/cfg-empty-codemap.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-empty-codemap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-empty-codemap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-empty-codemap.stderr?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -0,0 +1,2 @@\n+error: invalid `--cfg` argument: `\"\"` (expected `key` or `key=\"value\"`)\n+"}, {"sha": "b838aaa102ebb1260b104eab4bc464c431ee0eb5", "filename": "src/test/ui/duplicate/dupe-symbols-7.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,5 +1,9 @@\n //\n // error-pattern: entry symbol `main` defined multiple times\n+\n+// FIXME https://github.com/rust-lang/rust/issues/59774\n+// normalize-stderr-test \"thread.*panicked.*Metadata module not compiled.*\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n #![allow(warnings)]\n \n #[no_mangle]"}, {"sha": "7d033ec3d85fa724af442e3561ff9ae7dbaefff5", "filename": "src/test/ui/duplicate/dupe-symbols-7.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.stderr?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,5 +1,5 @@\n error: entry symbol `main` defined multiple times\n-  --> $DIR/dupe-symbols-7.rs:6:1\n+  --> $DIR/dupe-symbols-7.rs:10:1\n    |\n LL | fn main(){}\n    | ^^^^^^^^^^^"}, {"sha": "0ff27168a7d8634ac737ad8cbe1658f728f4cd51", "filename": "src/test/ui/huge-array-simple.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fhuge-array-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fhuge-array-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhuge-array-simple.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,6 +1,10 @@\n // error-pattern: too big for the current architecture\n \n // normalize-stderr-test \"; \\d+]\" -> \"; N]\"\n+\n+// FIXME https://github.com/rust-lang/rust/issues/59774\n+// normalize-stderr-test \"thread.*panicked.*Metadata module not compiled.*\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n #![allow(exceeding_bitshifts)]\n \n #[cfg(target_pointer_width = \"64\")]"}, {"sha": "f58dcd580676199e17b2780649a72c91553ea793", "filename": "src/test/ui/huge-array.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fhuge-array.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fhuge-array.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhuge-array.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,5 +1,9 @@\n // error-pattern:; 1518600000\n \n+// FIXME https://github.com/rust-lang/rust/issues/59774\n+// normalize-stderr-test \"thread.*panicked.*Metadata module not compiled.*\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n+\n fn generic<T: Copy>(t: T) {\n     let s: [T; 1518600000] = [t; 1518600000];\n }"}, {"sha": "2492afbdc8f8180605090fe34649ea5c2315a3eb", "filename": "src/test/ui/huge-enum.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fhuge-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fhuge-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhuge-enum.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,6 +1,10 @@\n // normalize-stderr-test \"std::option::Option<\\[u32; \\d+\\]>\" -> \"TYPE\"\n // normalize-stderr-test \"\\[u32; \\d+\\]\" -> \"TYPE\"\n \n+// FIXME https://github.com/rust-lang/rust/issues/59774\n+// normalize-stderr-test \"thread.*panicked.*Metadata module not compiled.*\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n+\n #[cfg(target_pointer_width = \"32\")]\n fn main() {\n     let big: Option<[u32; (1<<29)-1]> = None;"}, {"sha": "dc7d75a6f028ea12a592c6543f39351ff6409f30", "filename": "src/test/ui/huge-struct.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fhuge-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fhuge-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhuge-struct.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -2,6 +2,10 @@\n // normalize-stderr-test \"S1M\" -> \"SXX\"\n // error-pattern: too big for the current\n \n+// FIXME https://github.com/rust-lang/rust/issues/59774\n+// normalize-stderr-test \"thread.*panicked.*Metadata module not compiled.*\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n+\n struct S32<T> {\n     v0: T,\n     v1: T,"}, {"sha": "a7ac4802a12d5b78cce7b1596f6b7d0bafa419a5", "filename": "src/test/ui/issues/issue-15919.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fissues%2Fissue-15919.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fissues%2Fissue-15919.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-15919.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,6 +1,10 @@\n // error-pattern: too big for the current architecture\n // normalize-stderr-test \"\\[usize; \\d+\\]\" -> \"[usize; N]\"\n \n+// FIXME https://github.com/rust-lang/rust/issues/59774\n+// normalize-stderr-test \"thread.*panicked.*Metadata module not compiled.*\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n+\n #[cfg(target_pointer_width = \"32\")]\n fn main() {\n     let x = [0usize; 0xffff_ffff];"}, {"sha": "48d8f407aa1e481f1c27d876c65164583167a3ec", "filename": "src/test/ui/issues/issue-17913.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fissues%2Fissue-17913.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fissues%2Fissue-17913.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17913.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,6 +1,10 @@\n // normalize-stderr-test \"\\[&usize; \\d+\\]\" -> \"[&usize; N]\"\n // error-pattern: too big for the current architecture\n \n+// FIXME https://github.com/rust-lang/rust/issues/59774\n+// normalize-stderr-test \"thread.*panicked.*Metadata module not compiled.*\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n+\n #![feature(box_syntax)]\n \n #[cfg(target_pointer_width = \"64\")]"}, {"sha": "8bb81b907c9a41dcdbb1595383774c78c5750af3", "filename": "src/test/ui/issues/issue-56762.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fissues%2Fissue-56762.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fissues%2Fissue-56762.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56762.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,4 +1,8 @@\n // only-x86_64\n+\n+// FIXME https://github.com/rust-lang/rust/issues/59774\n+// normalize-stderr-test \"thread.*panicked.*Metadata module not compiled.*\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n const HUGE_SIZE: usize = !0usize / 8;\n \n "}, {"sha": "fa4221fb3392e2f31b35eb3153562a025e229cb9", "filename": "src/test/ui/linkage2.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Flinkage2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Flinkage2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage2.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,3 +1,7 @@\n+// FIXME https://github.com/rust-lang/rust/issues/59774\n+// normalize-stderr-test \"thread.*panicked.*Metadata module not compiled.*\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n+\n #![feature(linkage)]\n \n extern {"}, {"sha": "c72978388ebfe232b90d1ccb25c1a274a77a2d4a", "filename": "src/test/ui/linkage2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Flinkage2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Flinkage2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage2.stderr?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,5 +1,5 @@\n error: must have type `*const T` or `*mut T`\n-  --> $DIR/linkage2.rs:4:32\n+  --> $DIR/linkage2.rs:8:32\n    |\n LL |     #[linkage = \"extern_weak\"] static foo: i32;\n    |                                ^^^^^^^^^^^^^^^^"}, {"sha": "1462079acf7e73dc79eda280c1e37c4630100787", "filename": "src/test/ui/linkage3.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Flinkage3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Flinkage3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage3.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,3 +1,7 @@\n+// FIXME https://github.com/rust-lang/rust/issues/59774\n+// normalize-stderr-test \"thread.*panicked.*Metadata module not compiled.*\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n+\n #![feature(linkage)]\n \n extern {"}, {"sha": "b74fdc91429e28e755ae3fff36b0b9971c90b958", "filename": "src/test/ui/linkage3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Flinkage3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Flinkage3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage3.stderr?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,5 +1,5 @@\n error: invalid linkage specified\n-  --> $DIR/linkage3.rs:4:24\n+  --> $DIR/linkage3.rs:8:24\n    |\n LL |     #[linkage = \"foo\"] static foo: *const i32;\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "b866c7fa6cc9ed1c28928f8eb2a2f98567b1fd7a", "filename": "src/test/ui/pattern/const-pat-ice.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fpattern%2Fconst-pat-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fpattern%2Fconst-pat-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fconst-pat-ice.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,5 +1,7 @@\n // failure-status: 101\n // rustc-env:RUST_BACKTRACE=0\n+// normalize-stderr-test \"note: rustc 1.* running on .*\" -> \"note: rustc VERSION running on TARGET\"\n+// normalize-stderr-test \"note: compiler flags: .*\" -> \"note: compiler flags: FLAGS\"\n \n // This is a repro test for an ICE in our pattern handling of constants.\n "}, {"sha": "03580dfecfb5946f89ed57ec36abad55af89bdd2", "filename": "src/test/ui/pattern/const-pat-ice.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fpattern%2Fconst-pat-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fpattern%2Fconst-pat-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fconst-pat-ice.stderr?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -0,0 +1,13 @@\n+thread 'rustc' panicked at 'assertion failed: rows.iter().all(|r| r.len() == v.len())', src/librustc_mir/hair/pattern/_match.rs:1069:5\n+note: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n+\n+error: internal compiler error: unexpected panic\n+\n+note: the compiler unexpectedly panicked. this is a bug.\n+\n+note: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n+\n+note: rustc VERSION running on TARGET\n+\n+note: compiler flags: FLAGS\n+"}, {"sha": "c9881ad2c38afc2a846d07580f44938cd610a668", "filename": "src/test/ui/proc-macro/invalid-punct-ident-1.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,5 +1,9 @@\n // aux-build:invalid-punct-ident.rs\n \n+// FIXME https://github.com/rust-lang/rust/issues/59998\n+// normalize-stderr-test \"thread.*panicked.*proc_macro_server.rs.*\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n+\n #[macro_use]\n extern crate invalid_punct_ident;\n "}, {"sha": "40333a3f4c2113c510b9f4e9e95ed6ffb91f4082", "filename": "src/test/ui/proc-macro/invalid-punct-ident-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.stderr?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,5 +1,5 @@\n error: proc macro panicked\n-  --> $DIR/invalid-punct-ident-1.rs:6:1\n+  --> $DIR/invalid-punct-ident-1.rs:10:1\n    |\n LL | invalid_punct!();\n    | ^^^^^^^^^^^^^^^^^"}, {"sha": "15e2286a650498f2fa14f63ae16097a77c21d7b7", "filename": "src/test/ui/proc-macro/invalid-punct-ident-2.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,5 +1,9 @@\n // aux-build:invalid-punct-ident.rs\n \n+// FIXME https://github.com/rust-lang/rust/issues/59998\n+// normalize-stderr-test \"thread.*panicked.*proc_macro_server.rs.*\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n+\n #[macro_use]\n extern crate invalid_punct_ident;\n "}, {"sha": "ec97e265c3fcdc23a97afbc49d1e8e43a039a303", "filename": "src/test/ui/proc-macro/invalid-punct-ident-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.stderr?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,5 +1,5 @@\n error: proc macro panicked\n-  --> $DIR/invalid-punct-ident-2.rs:6:1\n+  --> $DIR/invalid-punct-ident-2.rs:10:1\n    |\n LL | invalid_ident!();\n    | ^^^^^^^^^^^^^^^^^"}, {"sha": "629bbaa9e388889608dbdac51fd1105c37696b47", "filename": "src/test/ui/proc-macro/invalid-punct-ident-3.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,5 +1,9 @@\n // aux-build:invalid-punct-ident.rs\n \n+// FIXME https://github.com/rust-lang/rust/issues/59998\n+// normalize-stderr-test \"thread.*panicked.*proc_macro_server.rs.*\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n+\n #[macro_use]\n extern crate invalid_punct_ident;\n "}, {"sha": "a5e5ded65333abd8f695d0cb5e9708c2662196e3", "filename": "src/test/ui/proc-macro/invalid-punct-ident-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.stderr?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -1,5 +1,5 @@\n error: proc macro panicked\n-  --> $DIR/invalid-punct-ident-3.rs:6:1\n+  --> $DIR/invalid-punct-ident-3.rs:10:1\n    |\n LL | invalid_raw_ident!();\n    | ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "ba919f4c4118a7241f2eaa6cbf128077d0d3534c", "filename": "src/tools/compiletest/src/json.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b27b4f592e0654602d8b81cc471204abc2d563e/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs?ref=3b27b4f592e0654602d8b81cc471204abc2d563e", "patch": "@@ -78,7 +78,8 @@ pub fn extract_rendered(output: &str, proc_res: &ProcRes) -> String {\n                     }\n                 }\n             } else {\n-                None\n+                // preserve non-JSON lines, such as ICEs\n+                Some(format!(\"{}\\n\", line))\n             }\n         })\n         .collect()"}]}