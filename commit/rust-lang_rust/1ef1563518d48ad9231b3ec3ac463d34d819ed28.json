{"sha": "1ef1563518d48ad9231b3ec3ac463d34d819ed28", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZjE1NjM1MThkNDhhZDkyMzFiM2VjM2FjNDYzZDM0ZDgxOWVkMjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-16T13:21:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-16T13:21:56Z"}, "message": "Auto merge of #48945 - clarcharr:iter_exhaust, r=Kimundi\n\nReplace manual iterator exhaust with for_each(drop)\n\nThis originally added a dedicated method, `Iterator::exhaust`, and has since been replaced with `for_each(drop)`, which is more idiomatic.\n\n<del>This is just shorthand for `for _ in &mut self {}` or `while let Some(_) = self.next() {}`. This states the intent a lot more clearly than the identical code: run the iterator to completion.\n\n<del>At least personally, my eyes tend to gloss over `for _ in &mut self {}` without fully paying attention to what it does; having a `Drop` implementation akin to:\n\n<del>`for _ in &mut self {}; unsafe { free(self.ptr); }`</del>\n\n<del>Is not as clear as:\n\n<del>`self.exhaust(); unsafe { free(self.ptr); }`\n\n<del>Additionally, I've seen debate over whether `while let Some(_) = self.next() {}` or `for _ in &mut self {}` is more clear, whereas `self.exhaust()` is clearer than both.", "tree": {"sha": "1fb05811590e2701a4d1875d9326261e655cfeec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fb05811590e2701a4d1875d9326261e655cfeec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ef1563518d48ad9231b3ec3ac463d34d819ed28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ef1563518d48ad9231b3ec3ac463d34d819ed28", "html_url": "https://github.com/rust-lang/rust/commit/1ef1563518d48ad9231b3ec3ac463d34d819ed28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ef1563518d48ad9231b3ec3ac463d34d819ed28/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6a2dd9912e762fb0029c4463002d674686c1159", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6a2dd9912e762fb0029c4463002d674686c1159", "html_url": "https://github.com/rust-lang/rust/commit/d6a2dd9912e762fb0029c4463002d674686c1159"}, {"sha": "5c58eec0bd8cee8fb2a191396d5ad5b5c9b0116a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c58eec0bd8cee8fb2a191396d5ad5b5c9b0116a", "html_url": "https://github.com/rust-lang/rust/commit/5c58eec0bd8cee8fb2a191396d5ad5b5c9b0116a"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "82cbec0517e5513288fbd8bdcac88e86acdf85da", "filename": "src/liballoc/btree/map.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1ef1563518d48ad9231b3ec3ac463d34d819ed28/src%2Fliballoc%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef1563518d48ad9231b3ec3ac463d34d819ed28/src%2Fliballoc%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbtree%2Fmap.rs?ref=1ef1563518d48ad9231b3ec3ac463d34d819ed28", "patch": "@@ -1287,8 +1287,7 @@ impl<K, V> IntoIterator for BTreeMap<K, V> {\n #[stable(feature = \"btree_drop\", since = \"1.7.0\")]\n impl<K, V> Drop for IntoIter<K, V> {\n     fn drop(&mut self) {\n-        for _ in &mut *self {\n-        }\n+        self.for_each(drop);\n         unsafe {\n             let leaf_node = ptr::read(&self.front).into_node();\n             if let Some(first_parent) = leaf_node.deallocate_and_ascend() {"}, {"sha": "9844de9a57d70274c4bf91cc93d79da0e381acf4", "filename": "src/liballoc/linked_list.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ef1563518d48ad9231b3ec3ac463d34d819ed28/src%2Fliballoc%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef1563518d48ad9231b3ec3ac463d34d819ed28/src%2Fliballoc%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flinked_list.rs?ref=1ef1563518d48ad9231b3ec3ac463d34d819ed28", "patch": "@@ -1019,7 +1019,7 @@ impl<'a, T, F> Drop for DrainFilter<'a, T, F>\n     where F: FnMut(&mut T) -> bool,\n {\n     fn drop(&mut self) {\n-        for _ in self { }\n+        self.for_each(drop);\n     }\n }\n "}, {"sha": "8ab25dfe7d8033d835179a2cb0449b4c58a98e57", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1ef1563518d48ad9231b3ec3ac463d34d819ed28/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef1563518d48ad9231b3ec3ac463d34d819ed28/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=1ef1563518d48ad9231b3ec3ac463d34d819ed28", "patch": "@@ -2521,7 +2521,7 @@ impl<'a, T> DoubleEndedIterator for Drain<'a, T> {\n impl<'a, T> Drop for Drain<'a, T> {\n     fn drop(&mut self) {\n         // exhaust self first\n-        while let Some(_) = self.next() {}\n+        self.for_each(drop);\n \n         if self.tail_len > 0 {\n             unsafe {\n@@ -2590,9 +2590,7 @@ impl<'a, I: Iterator> ExactSizeIterator for Splice<'a, I> {}\n #[stable(feature = \"vec_splice\", since = \"1.21.0\")]\n impl<'a, I: Iterator> Drop for Splice<'a, I> {\n     fn drop(&mut self) {\n-        // exhaust drain first\n-        while let Some(_) = self.drain.next() {}\n-\n+        self.drain.by_ref().for_each(drop);\n \n         unsafe {\n             if self.drain.tail_len == 0 {\n@@ -2721,8 +2719,7 @@ impl<'a, T, F> Drop for DrainFilter<'a, T, F>\n     where F: FnMut(&mut T) -> bool,\n {\n     fn drop(&mut self) {\n-        for _ in self.by_ref() { }\n-\n+        self.for_each(drop);\n         unsafe {\n             self.vec.set_len(self.old_len - self.del);\n         }"}, {"sha": "ff82b3a469caf1afae27c39246fc7aaf3b2b4088", "filename": "src/liballoc/vec_deque.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ef1563518d48ad9231b3ec3ac463d34d819ed28/src%2Fliballoc%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef1563518d48ad9231b3ec3ac463d34d819ed28/src%2Fliballoc%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec_deque.rs?ref=1ef1563518d48ad9231b3ec3ac463d34d819ed28", "patch": "@@ -2250,7 +2250,7 @@ unsafe impl<'a, T: Send> Send for Drain<'a, T> {}\n #[stable(feature = \"drain\", since = \"1.6.0\")]\n impl<'a, T: 'a> Drop for Drain<'a, T> {\n     fn drop(&mut self) {\n-        for _ in self.by_ref() {}\n+        self.for_each(drop);\n \n         let source_deque = unsafe { self.deque.as_mut() };\n "}, {"sha": "7b33ee40d8cdb9d8e8ca1f8f987eef86b783f7b3", "filename": "src/librustc_data_structures/array_vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ef1563518d48ad9231b3ec3ac463d34d819ed28/src%2Flibrustc_data_structures%2Farray_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef1563518d48ad9231b3ec3ac463d34d819ed28/src%2Flibrustc_data_structures%2Farray_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Farray_vec.rs?ref=1ef1563518d48ad9231b3ec3ac463d34d819ed28", "patch": "@@ -207,7 +207,7 @@ pub struct Iter<A: Array> {\n \n impl<A: Array> Drop for Iter<A> {\n     fn drop(&mut self) {\n-        for _ in self {}\n+        self.for_each(drop);\n     }\n }\n \n@@ -251,7 +251,7 @@ impl<'a, A: Array> Iterator for Drain<'a, A> {\n impl<'a, A: Array> Drop for Drain<'a, A> {\n     fn drop(&mut self) {\n         // exhaust self first\n-        while let Some(_) = self.next() {}\n+        self.for_each(drop);\n \n         if self.tail_len > 0 {\n             unsafe {"}, {"sha": "115f9628a23cc4e6ca7ec5a307a49fb2cedbf49a", "filename": "src/libstd/collections/hash/table.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ef1563518d48ad9231b3ec3ac463d34d819ed28/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef1563518d48ad9231b3ec3ac463d34d819ed28/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs?ref=1ef1563518d48ad9231b3ec3ac463d34d819ed28", "patch": "@@ -1124,7 +1124,7 @@ impl<'a, K, V> ExactSizeIterator for Drain<'a, K, V> {\n \n impl<'a, K: 'a, V: 'a> Drop for Drain<'a, K, V> {\n     fn drop(&mut self) {\n-        for _ in self {}\n+        self.for_each(drop);\n     }\n }\n "}]}