{"sha": "a406574ee871359d05b649356e5e5d2505f4ca26", "node_id": "C_kwDOAAsO6NoAKGE0MDY1NzRlZTg3MTM1OWQwNWI2NDkzNTZlNWU1ZDI1MDVmNGNhMjY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-12-21T13:04:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-21T13:04:43Z"}, "message": "Merge #11083\n\n11083: fix: Fix inline local assist not working in let stmt initializer r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "88d8f4eefe261756f80fe0bf23eb6e397e279fb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88d8f4eefe261756f80fe0bf23eb6e397e279fb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a406574ee871359d05b649356e5e5d2505f4ca26", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhwdDrCRBK7hj4Ov3rIwAAfSEIABdSS6HKT7nDZ8t1Tx9wFQUL\nyiZXdpkPZyNqXgjG2zHBvkMggim61V5o2l8NkhfxzPa2BVBfxSOIahm/d4JBKW2A\nUYyIgYE+K2JiyV6Fsrh3dIJbnaApT3BajJNxKUvyBvSkNzaMioGoVLUIgloa0Gn/\n1HhEb7L4OtFe3FIXeum5fK1XYPHvAml6qMZRfWajoPTF26rZFdfRoFXp5YVIDkXA\n21h3H1BKCxefzMc1ELy0tbAwo2qaR7mxlbgM1G8m13ORvtcexttHpIEKI9f03XBb\n3w9fezPcp2JShw4WbFRsrmeh4WGT+ay1r3tsOEyMwHLURlc3d2pcE5CY27GrWlQ=\n=4Sqq\n-----END PGP SIGNATURE-----\n", "payload": "tree 88d8f4eefe261756f80fe0bf23eb6e397e279fb0\nparent 22987c73e924547081a70082d9372eb921d1414f\nparent 539b0c258226cae1b2fa14bfc2397de2c69bf4ef\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1640091883 +0000\ncommitter GitHub <noreply@github.com> 1640091883 +0000\n\nMerge #11083\n\n11083: fix: Fix inline local assist not working in let stmt initializer r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a406574ee871359d05b649356e5e5d2505f4ca26", "html_url": "https://github.com/rust-lang/rust/commit/a406574ee871359d05b649356e5e5d2505f4ca26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a406574ee871359d05b649356e5e5d2505f4ca26/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22987c73e924547081a70082d9372eb921d1414f", "url": "https://api.github.com/repos/rust-lang/rust/commits/22987c73e924547081a70082d9372eb921d1414f", "html_url": "https://github.com/rust-lang/rust/commit/22987c73e924547081a70082d9372eb921d1414f"}, {"sha": "539b0c258226cae1b2fa14bfc2397de2c69bf4ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/539b0c258226cae1b2fa14bfc2397de2c69bf4ef", "html_url": "https://github.com/rust-lang/rust/commit/539b0c258226cae1b2fa14bfc2397de2c69bf4ef"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "1fce654df28dbdcc366a33cbc263ea03e3fc007f", "filename": "crates/ide_assists/src/handlers/inline_local_variable.rs", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a406574ee871359d05b649356e5e5d2505f4ca26/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a406574ee871359d05b649356e5e5d2505f4ca26/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs?ref=a406574ee871359d05b649356e5e5d2505f4ca26", "patch": "@@ -36,10 +36,10 @@ pub(crate) fn inline_local_variable(acc: &mut Assists, ctx: &AssistContext) -> O\n     let file_id = ctx.file_id();\n     let range = ctx.selection_trimmed();\n     let InlineData { let_stmt, delete_let, references, target } =\n-        if let Some(let_stmt) = ctx.find_node_at_offset::<ast::LetStmt>() {\n-            inline_let(&ctx.sema, let_stmt, range, file_id)\n-        } else if let Some(path_expr) = ctx.find_node_at_offset::<ast::PathExpr>() {\n+        if let Some(path_expr) = ctx.find_node_at_offset::<ast::PathExpr>() {\n             inline_usage(&ctx.sema, path_expr, range, file_id)\n+        } else if let Some(let_stmt) = ctx.find_node_at_offset::<ast::LetStmt>() {\n+            inline_let(&ctx.sema, let_stmt, range, file_id)\n         } else {\n             None\n         }?;\n@@ -912,6 +912,28 @@ fn f() {\n     let bar = 0;\n     $0foo + bar$0;\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_inline_ref_in_let() {\n+        check_assist(\n+            inline_local_variable,\n+            r#\"\n+fn f() {\n+    let x = {\n+        let y = 0;\n+        y$0\n+    };\n+}\n+\"#,\n+            r#\"\n+fn f() {\n+    let x = {\n+        0\n+    };\n+}\n \"#,\n         );\n     }"}]}