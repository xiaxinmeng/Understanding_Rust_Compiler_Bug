{"sha": "3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMDUxNjJmOThjMWI5YTRkNTdmNmE3YjNkNWMzZmU1NWRlMDFjMjE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-06-27T23:44:39Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-06-28T18:12:43Z"}, "message": "Extend support to `get_generics` for all `NodeItem`s", "tree": {"sha": "4e2e7dec716fb4b89a49aeeb2fefcddc8127d875", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e2e7dec716fb4b89a49aeeb2fefcddc8127d875"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21", "html_url": "https://github.com/rust-lang/rust/commit/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5436a5c55ac6b08bd0bb729b7da55915e6e78fe6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5436a5c55ac6b08bd0bb729b7da55915e6e78fe6", "html_url": "https://github.com/rust-lang/rust/commit/5436a5c55ac6b08bd0bb729b7da55915e6e78fe6"}], "stats": {"total": 181, "additions": 94, "deletions": 87}, "files": [{"sha": "dbf99cf30e56b58416bf35013139b77d27f3011b", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21", "patch": "@@ -671,7 +671,14 @@ impl<'hir> Map<'hir> {\n                 NodeTraitItem(ref trait_item) => Some(&trait_item.generics),\n                 NodeItem(ref item) => {\n                     match item.node {\n-                        ItemFn(_, _, ref generics, _) => Some(generics),\n+                        ItemFn(_, _, ref generics, _) |\n+                        ItemTy(_, ref generics) |\n+                        ItemEnum(_, ref generics) |\n+                        ItemStruct(_, ref generics) |\n+                        ItemUnion(_, ref generics) |\n+                        ItemTrait(_, _, ref generics, ..) |\n+                        ItemTraitAlias(ref generics, _) |\n+                        ItemImpl(_, _, _, ref generics, ..) => Some(generics),\n                         _ => None,\n                     }\n                 }"}, {"sha": "f8375899e3e01cbee946b13024a6d3aca1d99095", "filename": "src/test/ui/associated-const-impl-wrong-lifetime.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fassociated-const-impl-wrong-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fassociated-const-impl-wrong-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-const-impl-wrong-lifetime.stderr?ref=3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21", "patch": "@@ -6,11 +6,11 @@ LL |     const NAME: &'a str = \"unit\";\n    |\n    = note: expected type `&'static str`\n               found type `&'a str`\n-note: the lifetime 'a as defined on the impl at 17:1...\n-  --> $DIR/associated-const-impl-wrong-lifetime.rs:17:1\n+note: the lifetime 'a as defined on the impl at 17:6...\n+  --> $DIR/associated-const-impl-wrong-lifetime.rs:17:6\n    |\n LL | impl<'a> Foo for &'a () {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^\n+   |      ^^\n    = note: ...does not necessarily outlive the static lifetime\n \n error: aborting due to previous error"}, {"sha": "86dad34586d687899ee2e475220a65db41bdf11b", "filename": "src/test/ui/borrowck/regions-bound-missing-bound-in-impl.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fborrowck%2Fregions-bound-missing-bound-in-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fborrowck%2Fregions-bound-missing-bound-in-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fregions-bound-missing-bound-in-impl.stderr?ref=3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21", "patch": "@@ -55,7 +55,7 @@ LL |     fn wrong_bound1<'b,'c,'d:'a+'c>(self, b: Inv<'b>, c: Inv<'c>, d: Inv<'d\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0195]: lifetime parameters or bounds on method `wrong_bound2` do not match the trait declaration\n-  --> $DIR/regions-bound-missing-bound-in-impl.rs:51:5\n+  --> $DIR/regions-bound-missing-bound-in-impl.rs:52:5\n    |\n LL |     fn wrong_bound2<'b,'c,'d:'a+'b>(self, b: Inv<'b>, c: Inv<'c>, d: Inv<'d>);\n    |                    ---------------- lifetimes in impl do not match this method in trait\n@@ -64,7 +64,7 @@ LL |     fn wrong_bound2(self, b: Inv, c: Inv, d: Inv) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetimes do not match method in trait\n \n error[E0276]: impl has stricter requirements than trait\n-  --> $DIR/regions-bound-missing-bound-in-impl.rs:58:5\n+  --> $DIR/regions-bound-missing-bound-in-impl.rs:59:5\n    |\n LL |     fn another_bound<'x: 'a>(self, x: Inv<'x>, y: Inv<'t>);\n    |     ------------------------------------------------------- definition of `another_bound` from trait"}, {"sha": "0e778908058e02609438cbd38b0dbf0b63e83953", "filename": "src/test/ui/error-codes/E0478.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Ferror-codes%2FE0478.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Ferror-codes%2FE0478.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0478.stderr?ref=3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21", "patch": "@@ -4,16 +4,16 @@ error[E0478]: lifetime bound not satisfied\n LL |     child: Box<Wedding<'kiss> + 'SnowWhite>, //~ ERROR E0478\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lifetime parameter instantiated with the lifetime 'SnowWhite as defined on the struct at 13:1\n-  --> $DIR/E0478.rs:13:1\n+note: lifetime parameter instantiated with the lifetime 'SnowWhite as defined on the struct at 13:22\n+  --> $DIR/E0478.rs:13:22\n    |\n LL | struct Prince<'kiss, 'SnowWhite> {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: but lifetime parameter must outlive the lifetime 'kiss as defined on the struct at 13:1\n-  --> $DIR/E0478.rs:13:1\n+   |                      ^^^^^^^^^^\n+note: but lifetime parameter must outlive the lifetime 'kiss as defined on the struct at 13:15\n+  --> $DIR/E0478.rs:13:15\n    |\n LL | struct Prince<'kiss, 'SnowWhite> {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |               ^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "5e2ecbb05aebc98e404888458cd7a23b37c83449", "filename": "src/test/ui/issue-27942.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fissue-27942.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fissue-27942.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-27942.stderr?ref=3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21", "patch": "@@ -11,11 +11,11 @@ note: the anonymous lifetime #1 defined on the method body at 15:5...\n    |\n LL |     fn select(&self) -> BufferViewHandle<R>;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...does not necessarily outlive the lifetime 'a as defined on the trait at 13:1\n-  --> $DIR/issue-27942.rs:13:1\n+note: ...does not necessarily outlive the lifetime 'a as defined on the trait at 13:18\n+  --> $DIR/issue-27942.rs:13:18\n    |\n LL | pub trait Buffer<'a, R: Resources<'a>> {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  ^^\n \n error[E0308]: mismatched types\n   --> $DIR/issue-27942.rs:15:5\n@@ -25,11 +25,11 @@ LL |     fn select(&self) -> BufferViewHandle<R>;\n    |\n    = note: expected type `Resources<'_>`\n               found type `Resources<'a>`\n-note: the lifetime 'a as defined on the trait at 13:1...\n-  --> $DIR/issue-27942.rs:13:1\n+note: the lifetime 'a as defined on the trait at 13:18...\n+  --> $DIR/issue-27942.rs:13:18\n    |\n LL | pub trait Buffer<'a, R: Resources<'a>> {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  ^^\n note: ...does not necessarily outlive the anonymous lifetime #1 defined on the method body at 15:5\n   --> $DIR/issue-27942.rs:15:5\n    |"}, {"sha": "f01b623aced4225404b32e96dda2e3ef699eaa4a", "filename": "src/test/ui/issue-37884.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fissue-37884.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fissue-37884.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-37884.stderr?ref=3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21", "patch": "@@ -21,11 +21,11 @@ LL | |     {\n LL | |         Some(&mut self.0)\n LL | |     }\n    | |_____^\n-note: ...does not necessarily outlive the lifetime 'a as defined on the impl at 13:1\n-  --> $DIR/issue-37884.rs:13:1\n+note: ...does not necessarily outlive the lifetime 'a as defined on the impl at 13:6\n+  --> $DIR/issue-37884.rs:13:6\n    |\n LL | impl<'a, T: 'a> Iterator for RepeatMut<'a, T> {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |      ^^\n \n error: aborting due to previous error\n "}, {"sha": "a89e186540a47c74f1f9abf056528e9be4c8352d", "filename": "src/test/ui/nll/issue-47470.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fnll%2Fissue-47470.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fnll%2Fissue-47470.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-47470.stderr?ref=3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21", "patch": "@@ -6,11 +6,11 @@ LL |         &local //~ ERROR `local` does not live long enough\n LL |     }\n    |     - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the impl at 23:1...\n-  --> $DIR/issue-47470.rs:23:1\n+note: borrowed value must be valid for the lifetime 'a as defined on the impl at 23:6...\n+  --> $DIR/issue-47470.rs:23:6\n    |\n LL | impl<'a> Bar for Foo<'a> {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |      ^^\n \n error: aborting due to previous error\n "}, {"sha": "07972ecced313abf7e46f70b5f49e60bf7c8a408", "filename": "src/test/ui/nll/trait-associated-constant.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fnll%2Ftrait-associated-constant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fnll%2Ftrait-associated-constant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Ftrait-associated-constant.stderr?ref=3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21", "patch": "@@ -6,16 +6,16 @@ LL |     const AC: Option<&'c str> = None;\n    |\n    = note: expected type `std::option::Option<&'b str>`\n               found type `std::option::Option<&'c str>`\n-note: the lifetime 'c as defined on the impl at 30:1...\n-  --> $DIR/trait-associated-constant.rs:30:1\n+note: the lifetime 'c as defined on the impl at 30:18...\n+  --> $DIR/trait-associated-constant.rs:30:18\n    |\n LL | impl<'a: 'b, 'b, 'c> Anything<'a, 'b> for FailStruct1 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...does not necessarily outlive the lifetime 'b as defined on the impl at 30:1\n-  --> $DIR/trait-associated-constant.rs:30:1\n+   |                  ^^\n+note: ...does not necessarily outlive the lifetime 'b as defined on the impl at 30:14\n+  --> $DIR/trait-associated-constant.rs:30:14\n    |\n LL | impl<'a: 'b, 'b, 'c> Anything<'a, 'b> for FailStruct1 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^\n \n error[E0308]: mismatched types\n   --> $DIR/trait-associated-constant.rs:38:5\n@@ -25,16 +25,16 @@ LL |     const AC: Option<&'a str> = None;\n    |\n    = note: expected type `std::option::Option<&'b str>`\n               found type `std::option::Option<&'a str>`\n-note: the lifetime 'a as defined on the impl at 37:1...\n-  --> $DIR/trait-associated-constant.rs:37:1\n+note: the lifetime 'a as defined on the impl at 37:6...\n+  --> $DIR/trait-associated-constant.rs:37:6\n    |\n LL | impl<'a: 'b, 'b> Anything<'a, 'b> for FailStruct2 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...does not necessarily outlive the lifetime 'b as defined on the impl at 37:1\n-  --> $DIR/trait-associated-constant.rs:37:1\n+   |      ^^\n+note: ...does not necessarily outlive the lifetime 'b as defined on the impl at 37:14\n+  --> $DIR/trait-associated-constant.rs:37:14\n    |\n LL | impl<'a: 'b, 'b> Anything<'a, 'b> for FailStruct2 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "443af08e1cc7ccdfe3687fa5e14b271c6e38a7d5", "filename": "src/test/ui/region-borrow-params-issue-29793-small.nll.stderr", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fregion-borrow-params-issue-29793-small.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fregion-borrow-params-issue-29793-small.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregion-borrow-params-issue-29793-small.nll.stderr?ref=3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21", "patch": "@@ -43,11 +43,11 @@ LL |         let f = |t: bool| if t { x } else { y }; // (separate errors for `x\n LL |     };\n    |     - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the function body at 64:5...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:64:5\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 64:10...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:64:10\n    |\n LL |     fn g<'a>(x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |          ^^\n \n error[E0597]: `y` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:65:17\n@@ -58,11 +58,11 @@ LL |         let f = |t: bool| if t { x } else { y }; // (separate errors for `x\n LL |     };\n    |     - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the function body at 64:5...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:64:5\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 64:10...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:64:10\n    |\n LL |     fn g<'a>(x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |          ^^\n \n error[E0597]: `x` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:76:17\n@@ -73,11 +73,11 @@ LL |         let f = |t: bool| if t { x } else { y }; // (separate errors for `x\n LL |     };\n    |     - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the function body at 75:5...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:75:5\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 75:10...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:75:10\n    |\n LL |     fn g<'a>(x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |          ^^\n \n error[E0597]: `y` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:76:17\n@@ -88,11 +88,11 @@ LL |         let f = |t: bool| if t { x } else { y }; // (separate errors for `x\n LL |     };\n    |     - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the function body at 75:5...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:75:5\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 75:10...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:75:10\n    |\n LL |     fn g<'a>(x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |          ^^\n \n error[E0597]: `x` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:100:21\n@@ -103,11 +103,11 @@ LL |             let f = |t: bool| if t { x } else { y }; // (separate errors fo\n LL |         }\n    |         - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the method body at 99:9...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:99:9\n+note: borrowed value must be valid for the lifetime 'a as defined on the method body at 99:14...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:99:14\n    |\n LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^\n \n error[E0597]: `y` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:100:21\n@@ -118,11 +118,11 @@ LL |             let f = |t: bool| if t { x } else { y }; // (separate errors fo\n LL |         }\n    |         - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the method body at 99:9...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:99:9\n+note: borrowed value must be valid for the lifetime 'a as defined on the method body at 99:14...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:99:14\n    |\n LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^\n \n error[E0597]: `x` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:114:21\n@@ -133,11 +133,11 @@ LL |             let f = |t: bool| if t { x } else { y }; // (separate errors fo\n LL |         }\n    |         - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the method body at 113:9...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:113:9\n+note: borrowed value must be valid for the lifetime 'a as defined on the method body at 113:14...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:113:14\n    |\n LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^\n \n error[E0597]: `y` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:114:21\n@@ -148,11 +148,11 @@ LL |             let f = |t: bool| if t { x } else { y }; // (separate errors fo\n LL |         }\n    |         - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the method body at 113:9...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:113:9\n+note: borrowed value must be valid for the lifetime 'a as defined on the method body at 113:14...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:113:14\n    |\n LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^\n \n error[E0597]: `x` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:142:21\n@@ -163,11 +163,11 @@ LL |             let f = |t: bool| if t { x } else { y }; // (separate errors fo\n LL |         }\n    |         - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the method body at 141:9...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:141:9\n+note: borrowed value must be valid for the lifetime 'a as defined on the method body at 141:14...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:141:14\n    |\n LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^\n \n error[E0597]: `y` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:142:21\n@@ -178,11 +178,11 @@ LL |             let f = |t: bool| if t { x } else { y }; // (separate errors fo\n LL |         }\n    |         - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the method body at 141:9...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:141:9\n+note: borrowed value must be valid for the lifetime 'a as defined on the method body at 141:14...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:141:14\n    |\n LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^\n \n error[E0597]: `x` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:157:21\n@@ -193,11 +193,11 @@ LL |             let f = |t: bool| if t { x } else { y }; // (separate errors fo\n LL |         }\n    |         - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the method body at 156:9...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:156:9\n+note: borrowed value must be valid for the lifetime 'a as defined on the method body at 156:14...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:156:14\n    |\n LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^\n \n error[E0597]: `y` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:157:21\n@@ -208,11 +208,11 @@ LL |             let f = |t: bool| if t { x } else { y }; // (separate errors fo\n LL |         }\n    |         - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the method body at 156:9...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:156:9\n+note: borrowed value must be valid for the lifetime 'a as defined on the method body at 156:14...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:156:14\n    |\n LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^\n \n error[E0597]: `x` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:185:21\n@@ -223,11 +223,11 @@ LL |             let f = |t: bool| if t { x } else { y }; // (separate errors fo\n LL |         }\n    |         - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the method body at 184:9...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:184:9\n+note: borrowed value must be valid for the lifetime 'a as defined on the method body at 184:14...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:184:14\n    |\n LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^\n \n error[E0597]: `y` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:185:21\n@@ -238,11 +238,11 @@ LL |             let f = |t: bool| if t { x } else { y }; // (separate errors fo\n LL |         }\n    |         - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the method body at 184:9...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:184:9\n+note: borrowed value must be valid for the lifetime 'a as defined on the method body at 184:14...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:184:14\n    |\n LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^\n \n error[E0597]: `x` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:199:21\n@@ -253,11 +253,11 @@ LL |             let f = |t: bool| if t { x } else { y }; // (separate errors fo\n LL |         }\n    |         - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the method body at 198:9...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:198:9\n+note: borrowed value must be valid for the lifetime 'a as defined on the method body at 198:14...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:198:14\n    |\n LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^\n \n error[E0597]: `y` does not live long enough\n   --> $DIR/region-borrow-params-issue-29793-small.rs:199:21\n@@ -268,11 +268,11 @@ LL |             let f = |t: bool| if t { x } else { y }; // (separate errors fo\n LL |         }\n    |         - borrowed value only lives until here\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the method body at 198:9...\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:198:9\n+note: borrowed value must be valid for the lifetime 'a as defined on the method body at 198:14...\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:198:14\n    |\n LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^\n \n error: aborting due to 20 previous errors\n "}, {"sha": "c38b8a96f9fc27f7379d9b9132a6918f5323e3c3", "filename": "src/test/ui/static-lifetime.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fstatic-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21/src%2Ftest%2Fui%2Fstatic-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic-lifetime.stderr?ref=3005162f98c1b9a4d57f6a7b3d5c3fe55de01c21", "patch": "@@ -4,11 +4,11 @@ error[E0478]: lifetime bound not satisfied\n LL | impl<'a, A: Clone> Arbitrary for ::std::borrow::Cow<'a, A> {} //~ ERROR lifetime bound\n    |                    ^^^^^^^^^\n    |\n-note: lifetime parameter instantiated with the lifetime 'a as defined on the impl at 13:1\n-  --> $DIR/static-lifetime.rs:13:1\n+note: lifetime parameter instantiated with the lifetime 'a as defined on the impl at 13:6\n+  --> $DIR/static-lifetime.rs:13:6\n    |\n LL | impl<'a, A: Clone> Arbitrary for ::std::borrow::Cow<'a, A> {} //~ ERROR lifetime bound\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |      ^^\n    = note: but lifetime parameter must outlive the static lifetime\n \n error: aborting due to previous error"}]}