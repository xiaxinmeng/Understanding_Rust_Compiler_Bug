{"sha": "f643b4b5f5a6b6ba3970c17e1395bbfd025b3e99", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NDNiNGI1ZjVhNmI2YmEzOTcwYzE3ZTEzOTViYmZkMDI1YjNlOTk=", "commit": {"author": {"name": "o0Ignition0o", "email": "jeremy.lempereur@gmail.com", "date": "2020-04-02T07:00:44Z"}, "committer": {"name": "o0Ignition0o", "email": "jeremy.lempereur@gmail.com", "date": "2020-04-02T07:00:44Z"}, "message": "Unique package by name and version.\n\nThis commit is a fixup of a bug I introduced by using a PackageId to refer to a crate when its name conflicts with a dependency.\nIt turns out the package id currently is `name version path` while cargo expects `name:version` as argument.", "tree": {"sha": "333298f69acf3ff5091011462b8e736ce8605cc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/333298f69acf3ff5091011462b8e736ce8605cc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f643b4b5f5a6b6ba3970c17e1395bbfd025b3e99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f643b4b5f5a6b6ba3970c17e1395bbfd025b3e99", "html_url": "https://github.com/rust-lang/rust/commit/f643b4b5f5a6b6ba3970c17e1395bbfd025b3e99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f643b4b5f5a6b6ba3970c17e1395bbfd025b3e99/comments", "author": {"login": "o0Ignition0o", "id": 9465678, "node_id": "MDQ6VXNlcjk0NjU2Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/9465678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/o0Ignition0o", "html_url": "https://github.com/o0Ignition0o", "followers_url": "https://api.github.com/users/o0Ignition0o/followers", "following_url": "https://api.github.com/users/o0Ignition0o/following{/other_user}", "gists_url": "https://api.github.com/users/o0Ignition0o/gists{/gist_id}", "starred_url": "https://api.github.com/users/o0Ignition0o/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/o0Ignition0o/subscriptions", "organizations_url": "https://api.github.com/users/o0Ignition0o/orgs", "repos_url": "https://api.github.com/users/o0Ignition0o/repos", "events_url": "https://api.github.com/users/o0Ignition0o/events{/privacy}", "received_events_url": "https://api.github.com/users/o0Ignition0o/received_events", "type": "User", "site_admin": false}, "committer": {"login": "o0Ignition0o", "id": 9465678, "node_id": "MDQ6VXNlcjk0NjU2Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/9465678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/o0Ignition0o", "html_url": "https://github.com/o0Ignition0o", "followers_url": "https://api.github.com/users/o0Ignition0o/followers", "following_url": "https://api.github.com/users/o0Ignition0o/following{/other_user}", "gists_url": "https://api.github.com/users/o0Ignition0o/gists{/gist_id}", "starred_url": "https://api.github.com/users/o0Ignition0o/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/o0Ignition0o/subscriptions", "organizations_url": "https://api.github.com/users/o0Ignition0o/orgs", "repos_url": "https://api.github.com/users/o0Ignition0o/repos", "events_url": "https://api.github.com/users/o0Ignition0o/events{/privacy}", "received_events_url": "https://api.github.com/users/o0Ignition0o/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f696df379a5dd450b3d89a8c690de5f8d78f6be2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f696df379a5dd450b3d89a8c690de5f8d78f6be2", "html_url": "https://github.com/rust-lang/rust/commit/f696df379a5dd450b3d89a8c690de5f8d78f6be2"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "b50cda06fdcefce3593120c4827e1597d3f4e658", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f643b4b5f5a6b6ba3970c17e1395bbfd025b3e99/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f643b4b5f5a6b6ba3970c17e1395bbfd025b3e99/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=f643b4b5f5a6b6ba3970c17e1395bbfd025b3e99", "patch": "@@ -75,7 +75,7 @@ pub type Target = Idx<TargetData>;\n \n #[derive(Debug, Clone)]\n pub struct PackageData {\n-    pub id: String,\n+    pub version: String,\n     pub name: String,\n     pub manifest: PathBuf,\n     pub targets: Vec<Target>,\n@@ -174,14 +174,15 @@ impl CargoWorkspace {\n         let ws_members = &meta.workspace_members;\n \n         for meta_pkg in meta.packages {\n-            let cargo_metadata::Package { id, edition, name, manifest_path, .. } = meta_pkg;\n+            let cargo_metadata::Package { id, edition, name, manifest_path, version, .. } =\n+                meta_pkg;\n             let is_member = ws_members.contains(&id);\n             let edition = edition\n                 .parse::<Edition>()\n                 .with_context(|| format!(\"Failed to parse edition {}\", edition))?;\n             let pkg = packages.alloc(PackageData {\n                 name,\n-                id: id.to_string(),\n+                version: version.to_string(),\n                 manifest: manifest_path,\n                 targets: Vec::new(),\n                 is_member,\n@@ -256,7 +257,7 @@ impl CargoWorkspace {\n         if self.is_unique(&*package.name) {\n             package.name.clone()\n         } else {\n-            package.id.clone()\n+            format!(\"{}:{}\", package.name, package.version)\n         }\n     }\n "}]}