{"sha": "9dd87051c79d593301864087657a09bf8837e57b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkZDg3MDUxYzc5ZDU5MzMwMTg2NDA4NzY1N2EwOWJmODgzN2U1N2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-05T22:57:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-05T22:57:05Z"}, "message": "Auto merge of #7175 - camsteffen:filter-map-none, r=Manishearth\n\nFix unnecessary_filter_map false positive\n\nchangelog: Fix an [`unnecessary_filter_map`] false positive\n\nFixes #6804", "tree": {"sha": "8e76e617114ef04f8276d4936b9cf24ef9072704", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e76e617114ef04f8276d4936b9cf24ef9072704"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dd87051c79d593301864087657a09bf8837e57b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dd87051c79d593301864087657a09bf8837e57b", "html_url": "https://github.com/rust-lang/rust/commit/9dd87051c79d593301864087657a09bf8837e57b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dd87051c79d593301864087657a09bf8837e57b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93fe3562d0ce22f489e577ea9f6a56f2dab97770", "url": "https://api.github.com/repos/rust-lang/rust/commits/93fe3562d0ce22f489e577ea9f6a56f2dab97770", "html_url": "https://github.com/rust-lang/rust/commit/93fe3562d0ce22f489e577ea9f6a56f2dab97770"}, {"sha": "d66d37303c7074e8e26a0f67bba5a36cd6b12e29", "url": "https://api.github.com/repos/rust-lang/rust/commits/d66d37303c7074e8e26a0f67bba5a36cd6b12e29", "html_url": "https://github.com/rust-lang/rust/commit/d66d37303c7074e8e26a0f67bba5a36cd6b12e29"}], "stats": {"total": 44, "additions": 26, "deletions": 18}, "files": [{"sha": "8b66587bfd1620910db1411507609967275976c9", "filename": "clippy_lints/src/methods/unnecessary_filter_map.rs", "status": "modified", "additions": 22, "deletions": 18, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/9dd87051c79d593301864087657a09bf8837e57b/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd87051c79d593301864087657a09bf8837e57b/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs?ref=9dd87051c79d593301864087657a09bf8837e57b", "patch": "@@ -6,6 +6,7 @@ use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::LangItem::{OptionNone, OptionSome};\n use rustc_lint::LateContext;\n use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::{self, TyS};\n use rustc_span::sym;\n \n use super::UNNECESSARY_FILTER_MAP;\n@@ -28,25 +29,28 @@ pub(super) fn check(cx: &LateContext<'_>, expr: &hir::Expr<'_>, arg: &hir::Expr<\n         found_mapping |= return_visitor.found_mapping;\n         found_filtering |= return_visitor.found_filtering;\n \n-        if !found_filtering {\n-            span_lint(\n-                cx,\n-                UNNECESSARY_FILTER_MAP,\n-                expr.span,\n-                \"this `.filter_map` can be written more simply using `.map`\",\n-            );\n-            return;\n-        }\n-\n-        if !found_mapping && !mutates_arg {\n-            span_lint(\n-                cx,\n-                UNNECESSARY_FILTER_MAP,\n-                expr.span,\n-                \"this `.filter_map` can be written more simply using `.filter`\",\n-            );\n+        let sugg = if !found_filtering {\n+            \"map\"\n+        } else if !found_mapping && !mutates_arg {\n+            let in_ty = cx.typeck_results().node_type(body.params[0].hir_id);\n+            match cx.typeck_results().expr_ty(&body.value).kind() {\n+                ty::Adt(adt, subst)\n+                    if cx.tcx.is_diagnostic_item(sym::option_type, adt.did)\n+                        && TyS::same_type(in_ty, subst.type_at(0)) =>\n+                {\n+                    \"filter\"\n+                },\n+                _ => return,\n+            }\n+        } else {\n             return;\n-        }\n+        };\n+        span_lint(\n+            cx,\n+            UNNECESSARY_FILTER_MAP,\n+            expr.span,\n+            &format!(\"this `.filter_map` can be written more simply using `.{}`\", sugg),\n+        );\n     }\n }\n "}, {"sha": "c58181f518d58e10fdc42e9267a14012c549a858", "filename": "tests/ui/unnecessary_filter_map.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9dd87051c79d593301864087657a09bf8837e57b/tests%2Fui%2Funnecessary_filter_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd87051c79d593301864087657a09bf8837e57b/tests%2Fui%2Funnecessary_filter_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_filter_map.rs?ref=9dd87051c79d593301864087657a09bf8837e57b", "patch": "@@ -15,3 +15,7 @@ fn main() {\n \n     let _ = (0..4).filter_map(i32::checked_abs);\n }\n+\n+fn filter_map_none_changes_item_type() -> impl Iterator<Item = bool> {\n+    \"\".chars().filter_map(|_| None)\n+}"}]}