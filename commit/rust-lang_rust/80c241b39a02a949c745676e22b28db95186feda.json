{"sha": "80c241b39a02a949c745676e22b28db95186feda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwYzI0MWIzOWEwMmE5NDljNzQ1Njc2ZTIyYjI4ZGI5NTE4NmZlZGE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-13T09:44:39Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-13T09:44:39Z"}, "message": "Minor", "tree": {"sha": "12091cc377801f0a33220543eb180795613077fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12091cc377801f0a33220543eb180795613077fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80c241b39a02a949c745676e22b28db95186feda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80c241b39a02a949c745676e22b28db95186feda", "html_url": "https://github.com/rust-lang/rust/commit/80c241b39a02a949c745676e22b28db95186feda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80c241b39a02a949c745676e22b28db95186feda/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0a9128761e8dd42f0dd40610a1d8734a52f3d9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0a9128761e8dd42f0dd40610a1d8734a52f3d9c", "html_url": "https://github.com/rust-lang/rust/commit/f0a9128761e8dd42f0dd40610a1d8734a52f3d9c"}], "stats": {"total": 53, "additions": 25, "deletions": 28}, "files": [{"sha": "b92477f9e7a2d5a375e200f38c26503043a5338a", "filename": "crates/ra_fmt/src/lib.rs", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/80c241b39a02a949c745676e22b28db95186feda/crates%2Fra_fmt%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80c241b39a02a949c745676e22b28db95186feda/crates%2Fra_fmt%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_fmt%2Fsrc%2Flib.rs?ref=80c241b39a02a949c745676e22b28db95186feda", "patch": "@@ -4,9 +4,7 @@ use std::iter::successors;\n \n use syntax::{\n     ast::{self, AstToken},\n-    SmolStr, SyntaxKind,\n-    SyntaxKind::*,\n-    SyntaxNode, SyntaxToken, T,\n+    SmolStr, SyntaxNode, SyntaxToken,\n };\n \n /// If the node is on the beginning of the line, calculate indent.\n@@ -28,26 +26,3 @@ pub fn leading_indent(node: &SyntaxNode) -> Option<SmolStr> {\n fn prev_tokens(token: SyntaxToken) -> impl Iterator<Item = SyntaxToken> {\n     successors(token.prev_token(), |token| token.prev_token())\n }\n-\n-pub fn compute_ws(left: SyntaxKind, right: SyntaxKind) -> &'static str {\n-    match left {\n-        T!['('] | T!['['] => return \"\",\n-        T!['{'] => {\n-            if let USE_TREE = right {\n-                return \"\";\n-            }\n-        }\n-        _ => (),\n-    }\n-    match right {\n-        T![')'] | T![']'] => return \"\",\n-        T!['}'] => {\n-            if let USE_TREE = left {\n-                return \"\";\n-            }\n-        }\n-        T![.] => return \"\",\n-        _ => (),\n-    }\n-    \" \"\n-}"}, {"sha": "f5c310701576c091b8a9d0bd0afda39a2e63416f", "filename": "crates/ra_ide/src/join_lines.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/80c241b39a02a949c745676e22b28db95186feda/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80c241b39a02a949c745676e22b28db95186feda/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs?ref=80c241b39a02a949c745676e22b28db95186feda", "patch": "@@ -1,11 +1,10 @@\n use itertools::Itertools;\n use ra_assists::utils::extract_trivial_expression;\n-use ra_fmt::compute_ws;\n use syntax::{\n     algo::{find_covering_element, non_trivia_sibling},\n     ast::{self, AstNode, AstToken},\n     Direction, NodeOrToken, SourceFile,\n-    SyntaxKind::{self, WHITESPACE},\n+    SyntaxKind::{self, USE_TREE, WHITESPACE},\n     SyntaxNode, SyntaxToken, TextRange, TextSize, T,\n };\n use text_edit::{TextEdit, TextEditBuilder};\n@@ -169,6 +168,29 @@ fn is_trailing_comma(left: SyntaxKind, right: SyntaxKind) -> bool {\n     matches!((left, right), (T![,], T![')']) | (T![,], T![']']))\n }\n \n+fn compute_ws(left: SyntaxKind, right: SyntaxKind) -> &'static str {\n+    match left {\n+        T!['('] | T!['['] => return \"\",\n+        T!['{'] => {\n+            if let USE_TREE = right {\n+                return \"\";\n+            }\n+        }\n+        _ => (),\n+    }\n+    match right {\n+        T![')'] | T![']'] => return \"\",\n+        T!['}'] => {\n+            if let USE_TREE = left {\n+                return \"\";\n+            }\n+        }\n+        T![.] => return \"\",\n+        _ => (),\n+    }\n+    \" \"\n+}\n+\n #[cfg(test)]\n mod tests {\n     use syntax::SourceFile;"}]}