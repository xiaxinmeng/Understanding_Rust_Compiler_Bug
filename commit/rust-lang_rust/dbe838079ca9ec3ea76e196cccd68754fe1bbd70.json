{"sha": "dbe838079ca9ec3ea76e196cccd68754fe1bbd70", "node_id": "C_kwDOAAsO6NoAKGRiZTgzODA3OWNhOWVjM2VhNzZlMTk2Y2NjZDY4NzU0ZmUxYmJkNzA", "commit": {"author": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2022-08-20T16:30:49Z"}, "committer": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2022-08-22T12:24:14Z"}, "message": "rename: `UnknownTool` to `UnknownToolInScopedLint`", "tree": {"sha": "ee09fdb8b729890e5628e58258f4671e419b8396", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee09fdb8b729890e5628e58258f4671e419b8396"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbe838079ca9ec3ea76e196cccd68754fe1bbd70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbe838079ca9ec3ea76e196cccd68754fe1bbd70", "html_url": "https://github.com/rust-lang/rust/commit/dbe838079ca9ec3ea76e196cccd68754fe1bbd70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbe838079ca9ec3ea76e196cccd68754fe1bbd70/comments", "author": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d302d11483a7313742d24e024928a37268ed4bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d302d11483a7313742d24e024928a37268ed4bd", "html_url": "https://github.com/rust-lang/rust/commit/5d302d11483a7313742d24e024928a37268ed4bd"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9ae226857d3eecfe29183e0e08261aca95b22116", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbe838079ca9ec3ea76e196cccd68754fe1bbd70/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/dbe838079ca9ec3ea76e196cccd68754fe1bbd70/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=dbe838079ca9ec3ea76e196cccd68754fe1bbd70", "patch": "@@ -412,5 +412,5 @@ lint_reason_must_be_string_literal = reason must be a string literal\n \n lint_reason_must_come_last = reason in lint attribute must come last\n \n-lint_unknown_tool = unknown tool name `{$tool_name}` found in scoped lint: `{$tool_name}::{$lint_name}`\n+lint_unknown_tool_in_scoped_lint = unknown tool name `{$tool_name}` found in scoped lint: `{$tool_name}::{$lint_name}`\n     .help = add `#![register_tool({$tool_name})]` to the crate root"}, {"sha": "0f8b8e174d8342d657983d41c8eea72933cf92de", "filename": "compiler/rustc_lint/src/errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dbe838079ca9ec3ea76e196cccd68754fe1bbd70/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbe838079ca9ec3ea76e196cccd68754fe1bbd70/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs?ref=dbe838079ca9ec3ea76e196cccd68754fe1bbd70", "patch": "@@ -61,8 +61,8 @@ pub enum MalformedAttributeSub {\n }\n \n #[derive(SessionDiagnostic)]\n-#[error(lint::unknown_tool, code = \"E0710\")]\n-pub struct UnknownTool {\n+#[error(lint::unknown_tool_in_scoped_lint, code = \"E0710\")]\n+pub struct UnknownToolInScopedLint {\n     #[primary_span]\n     pub span: Option<Span>,\n     pub tool_name: Symbol,"}, {"sha": "41d89229009baae637fa32fd7a0bc5ea71fb0686", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dbe838079ca9ec3ea76e196cccd68754fe1bbd70/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbe838079ca9ec3ea76e196cccd68754fe1bbd70/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=dbe838079ca9ec3ea76e196cccd68754fe1bbd70", "patch": "@@ -28,7 +28,7 @@ use tracing::debug;\n \n use crate::errors::{\n     MalformedAttribute, MalformedAttributeSub, OverruledAttribute, OverruledAttributeSub,\n-    UnknownTool,\n+    UnknownToolInScopedLint,\n };\n \n fn lint_levels(tcx: TyCtxt<'_>, (): ()) -> LintLevelMap {\n@@ -510,7 +510,7 @@ impl<'s> LintLevelsBuilder<'s> {\n                     }\n \n                     &CheckLintNameResult::NoTool => {\n-                        sess.emit_err(UnknownTool {\n+                        sess.emit_err(UnknownToolInScopedLint {\n                             span: tool_ident.map(|ident| ident.span),\n                             tool_name: tool_name.unwrap(),\n                             lint_name: pprust::path_to_string(&meta_item.path),"}]}