{"sha": "3fd6bfa8f7a1d193316956b5be8818c47bb874b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZDZiZmE4ZjdhMWQxOTMzMTY5NTZiNWJlODgxOGM0N2JiODc0Yjc=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-01-07T22:04:12Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-01-07T23:41:49Z"}, "message": "Switch to using `Box::new` in the tests in  `alloc::boxed`.", "tree": {"sha": "7414db648fdb3a6d005c9c9be8bcd5bfd12ea75b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7414db648fdb3a6d005c9c9be8bcd5bfd12ea75b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fd6bfa8f7a1d193316956b5be8818c47bb874b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fd6bfa8f7a1d193316956b5be8818c47bb874b7", "html_url": "https://github.com/rust-lang/rust/commit/3fd6bfa8f7a1d193316956b5be8818c47bb874b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fd6bfa8f7a1d193316956b5be8818c47bb874b7/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b57b0e0f3a49a81c23f7af6cbd72a67fdf6b9574", "url": "https://api.github.com/repos/rust-lang/rust/commits/b57b0e0f3a49a81c23f7af6cbd72a67fdf6b9574", "html_url": "https://github.com/rust-lang/rust/commit/b57b0e0f3a49a81c23f7af6cbd72a67fdf6b9574"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "f3ce50ec051aaad0a871587ee70247fc3ef85e92", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3fd6bfa8f7a1d193316956b5be8818c47bb874b7/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fd6bfa8f7a1d193316956b5be8818c47bb874b7/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=3fd6bfa8f7a1d193316956b5be8818c47bb874b7", "patch": "@@ -186,36 +186,36 @@ impl<T: ?Sized> DerefMut for Box<T> {\n mod test {\n     #[test]\n     fn test_owned_clone() {\n-        let a = box 5i;\n+        let a = Box::new(5i);\n         let b: Box<int> = a.clone();\n         assert!(a == b);\n     }\n \n     #[test]\n     fn any_move() {\n-        let a = box 8u as Box<Any>;\n-        let b = box Test as Box<Any>;\n+        let a = Box::new(8u) as Box<Any>;\n+        let b = Box::new(Test) as Box<Any>;\n \n         match a.downcast::<uint>() {\n-            Ok(a) => { assert!(a == box 8u); }\n+            Ok(a) => { assert!(a == Box::new(8u)); }\n             Err(..) => panic!()\n         }\n         match b.downcast::<Test>() {\n-            Ok(a) => { assert!(a == box Test); }\n+            Ok(a) => { assert!(a == Box::new(Test)); }\n             Err(..) => panic!()\n         }\n \n-        let a = box 8u as Box<Any>;\n-        let b = box Test as Box<Any>;\n+        let a = Box::new(8u) as Box<Any>;\n+        let b = Box::new(Test) as Box<Any>;\n \n         assert!(a.downcast::<Box<Test>>().is_err());\n         assert!(b.downcast::<Box<uint>>().is_err());\n     }\n \n     #[test]\n     fn test_show() {\n-        let a = box 8u as Box<Any>;\n-        let b = box Test as Box<Any>;\n+        let a = Box::new(8u) as Box<Any>;\n+        let b = Box::new(Test) as Box<Any>;\n         let a_str = a.to_str();\n         let b_str = b.to_str();\n         assert_eq!(a_str, \"Box<Any>\");\n@@ -232,6 +232,6 @@ mod test {\n     #[test]\n     fn deref() {\n         fn homura<T: Deref<Target=i32>>(_: T) { }\n-        homura(box 765i32);\n+        homura(Box::new(765i32));\n     }\n }"}]}