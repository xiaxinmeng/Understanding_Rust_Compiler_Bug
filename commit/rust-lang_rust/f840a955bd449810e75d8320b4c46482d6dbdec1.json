{"sha": "f840a955bd449810e75d8320b4c46482d6dbdec1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NDBhOTU1YmQ0NDk4MTBlNzVkODMyMGI0YzQ2NDgyZDZkYmRlYzE=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-02-05T03:33:08Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-02-06T05:42:58Z"}, "message": "Remove the `Cow` from `Directory`.\n\nThe previous commit wrapped `Parser` within a `Cow` for the hot macro\nparsing path. As a result, there's no need for the `Cow` within\n`Directory`, because it lies within `Parser`.", "tree": {"sha": "ed8eeda6f3af723c4c335811736d9f06d828e758", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed8eeda6f3af723c4c335811736d9f06d828e758"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f840a955bd449810e75d8320b4c46482d6dbdec1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f840a955bd449810e75d8320b4c46482d6dbdec1", "html_url": "https://github.com/rust-lang/rust/commit/f840a955bd449810e75d8320b4c46482d6dbdec1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f840a955bd449810e75d8320b4c46482d6dbdec1/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bf2cc2229768faa8e86e0e8a9f5bd8ebfc817a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bf2cc2229768faa8e86e0e8a9f5bd8ebfc817a2", "html_url": "https://github.com/rust-lang/rust/commit/6bf2cc2229768faa8e86e0e8a9f5bd8ebfc817a2"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "9e6edee265c989261b17f0049ac7157171e5597c", "filename": "src/librustc_expand/mbe/macro_rules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f840a955bd449810e75d8320b4c46482d6dbdec1/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f840a955bd449810e75d8320b4c46482d6dbdec1/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs?ref=f840a955bd449810e75d8320b4c46482d6dbdec1", "patch": "@@ -260,7 +260,7 @@ fn generic_extension<'cx>(\n                 }\n \n                 let directory = Directory {\n-                    path: Cow::from(cx.current_expansion.module.directory.as_path()),\n+                    path: cx.current_expansion.module.directory.clone(),\n                     ownership: cx.current_expansion.directory_ownership,\n                 };\n                 let mut p = Parser::new(cx.parse_sess(), tts, Some(directory), true, false, None);\n@@ -1218,7 +1218,7 @@ fn base_parser_from_cx<'cx>(\n     tts: TokenStream,\n ) -> Parser<'cx> {\n     let directory = Directory {\n-        path: Cow::from(current_expansion.module.directory.as_path()),\n+        path: current_expansion.module.directory.clone(),\n         ownership: current_expansion.directory_ownership,\n     };\n     Parser::new(sess, tts, Some(directory), true, true, rustc_parse::MACRO_ARGUMENTS)"}, {"sha": "4aad2c0f68a29f9e36336cd021108fa1803b6f4f", "filename": "src/librustc_parse/lib.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f840a955bd449810e75d8320b4c46482d6dbdec1/src%2Flibrustc_parse%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f840a955bd449810e75d8320b4c46482d6dbdec1/src%2Flibrustc_parse%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flib.rs?ref=f840a955bd449810e75d8320b4c46482d6dbdec1", "patch": "@@ -12,8 +12,7 @@ use syntax::ast;\n use syntax::token::{self, Nonterminal};\n use syntax::tokenstream::{self, TokenStream, TokenTree};\n \n-use std::borrow::Cow;\n-use std::path::Path;\n+use std::path::{Path, PathBuf};\n use std::str;\n \n use log::info;\n@@ -29,8 +28,8 @@ pub mod validate_attr;\n pub mod config;\n \n #[derive(Clone)]\n-pub struct Directory<'a> {\n-    pub path: Cow<'a, Path>,\n+pub struct Directory {\n+    pub path: PathBuf,\n     pub ownership: DirectoryOwnership,\n }\n \n@@ -274,7 +273,7 @@ pub fn stream_to_parser<'a>(\n pub fn stream_to_parser_with_base_dir<'a>(\n     sess: &'a ParseSess,\n     stream: TokenStream,\n-    base_dir: Directory<'a>,\n+    base_dir: Directory,\n ) -> Parser<'a> {\n     Parser::new(sess, stream, Some(base_dir), true, false, None)\n }"}, {"sha": "cb95750d984e9288a3cb55002fa36c8994bb6173", "filename": "src/librustc_parse/parser/mod.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f840a955bd449810e75d8320b4c46482d6dbdec1/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f840a955bd449810e75d8320b4c46482d6dbdec1/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmod.rs?ref=f840a955bd449810e75d8320b4c46482d6dbdec1", "patch": "@@ -29,7 +29,6 @@ use syntax::token::{self, DelimToken, Token, TokenKind};\n use syntax::tokenstream::{self, DelimSpan, TokenStream, TokenTree, TreeAndJoint};\n use syntax::util::comments::{doc_comment_style, strip_doc_comment_decoration};\n \n-use std::borrow::Cow;\n use std::path::PathBuf;\n use std::{cmp, mem, slice};\n \n@@ -114,7 +113,7 @@ pub struct Parser<'a> {\n     prev_token_kind: PrevTokenKind,\n     restrictions: Restrictions,\n     /// Used to determine the path to externally loaded source files.\n-    pub(super) directory: Directory<'a>,\n+    pub(super) directory: Directory,\n     /// `true` to parse sub-modules in other files.\n     // Public for rustfmt usage.\n     pub recurse_into_file_modules: bool,\n@@ -376,7 +375,7 @@ impl<'a> Parser<'a> {\n     pub fn new(\n         sess: &'a ParseSess,\n         tokens: TokenStream,\n-        directory: Option<Directory<'a>>,\n+        directory: Option<Directory>,\n         recurse_into_file_modules: bool,\n         desugar_doc_comments: bool,\n         subparser_name: Option<&'static str>,\n@@ -390,7 +389,7 @@ impl<'a> Parser<'a> {\n             restrictions: Restrictions::empty(),\n             recurse_into_file_modules,\n             directory: Directory {\n-                path: Cow::from(PathBuf::new()),\n+                path: PathBuf::new(),\n                 ownership: DirectoryOwnership::Owned { relative: None },\n             },\n             root_module_name: None,\n@@ -418,7 +417,7 @@ impl<'a> Parser<'a> {\n                 &sess.source_map().lookup_char_pos(parser.token.span.lo()).file.unmapped_path\n             {\n                 if let Some(directory_path) = path.parent() {\n-                    parser.directory.path = Cow::from(directory_path.to_path_buf());\n+                    parser.directory.path = directory_path.to_path_buf();\n                 }\n             }\n         }"}, {"sha": "0c8fad03d869053b0def50ac6c40153a48d52bbc", "filename": "src/librustc_parse/parser/module.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f840a955bd449810e75d8320b4c46482d6dbdec1/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f840a955bd449810e75d8320b4c46482d6dbdec1/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmodule.rs?ref=f840a955bd449810e75d8320b4c46482d6dbdec1", "patch": "@@ -285,7 +285,7 @@ impl<'a> Parser<'a> {\n \n     fn push_directory(&mut self, id: Ident, attrs: &[Attribute]) {\n         if let Some(path) = attr::first_attr_value_str_by_name(attrs, sym::path) {\n-            self.directory.path.to_mut().push(&*path.as_str());\n+            self.directory.path.push(&*path.as_str());\n             self.directory.ownership = DirectoryOwnership::Owned { relative: None };\n         } else {\n             // We have to push on the current module name in the case of relative\n@@ -297,10 +297,10 @@ impl<'a> Parser<'a> {\n             if let DirectoryOwnership::Owned { relative } = &mut self.directory.ownership {\n                 if let Some(ident) = relative.take() {\n                     // remove the relative offset\n-                    self.directory.path.to_mut().push(&*ident.as_str());\n+                    self.directory.path.push(&*ident.as_str());\n                 }\n             }\n-            self.directory.path.to_mut().push(&*id.as_str());\n+            self.directory.path.push(&*id.as_str());\n         }\n     }\n }"}]}