{"sha": "c83bceddbb497464f8e4e1990f7518b009cd61ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4M2JjZWRkYmI0OTc0NjRmOGU0ZTE5OTBmNzUxOGIwMDljZDYxY2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-15T05:37:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-15T05:37:13Z"}, "message": "auto merge of #7121 : huonw/rust/rand-call, r=pnkfelix\n\nr? @pnkfelix", "tree": {"sha": "2a42d3da27ac3e20f6d9507aa184ac199a3f055b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a42d3da27ac3e20f6d9507aa184ac199a3f055b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c83bceddbb497464f8e4e1990f7518b009cd61ca", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c83bceddbb497464f8e4e1990f7518b009cd61ca", "html_url": "https://github.com/rust-lang/rust/commit/c83bceddbb497464f8e4e1990f7518b009cd61ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c83bceddbb497464f8e4e1990f7518b009cd61ca/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ba6fa477743bf6b8340b6d83987f1e243a509ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ba6fa477743bf6b8340b6d83987f1e243a509ae", "html_url": "https://github.com/rust-lang/rust/commit/1ba6fa477743bf6b8340b6d83987f1e243a509ae"}, {"sha": "8431e609ea47ff7a396888233baf23159c620dca", "url": "https://api.github.com/repos/rust-lang/rust/commits/8431e609ea47ff7a396888233baf23159c620dca", "html_url": "https://github.com/rust-lang/rust/commit/8431e609ea47ff7a396888233baf23159c620dca"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "b890623b9638e6d73459e6e74188355341ef46f2", "filename": "src/libsyntax/ext/deriving/rand.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c83bceddbb497464f8e4e1990f7518b009cd61ca/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83bceddbb497464f8e4e1990f7518b009cd61ca/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs?ref=c83bceddbb497464f8e4e1990f7518b009cd61ca", "patch": "@@ -79,18 +79,19 @@ fn rand_substructure(cx: @ExtCtxt, span: span, substr: &Substructure) -> @expr {\n             let variant_count = cx.expr_uint(span, variants.len());\n \n             // need to specify the uint-ness of the random number\n-            let u32_ty = cx.ty_ident(span, cx.ident_of(\"uint\"));\n+            let uint_ty = cx.ty_ident(span, cx.ident_of(\"uint\"));\n             let r_ty = cx.ty_ident(span, cx.ident_of(\"R\"));\n-            let rand_name = cx.path_all(span, false, copy rand_ident, None, ~[ u32_ty, r_ty ]);\n+            let rand_name = cx.path_all(span, true, copy rand_ident, None, ~[ uint_ty, r_ty ]);\n             let rand_name = cx.expr_path(rand_name);\n \n+            // ::std::rand::Rand::rand::<uint>(rng)\n             let rv_call = cx.expr_call(span,\n                                        rand_name,\n                                        ~[ rng[0].duplicate(cx) ]);\n \n             // rand() % variants.len()\n             let rand_variant = cx.expr_binary(span, ast::rem,\n-                                                rv_call, variant_count);\n+                                              rv_call, variant_count);\n \n             let mut arms = do variants.mapi |i, id_sum| {\n                 let i_expr = cx.expr_uint(span, i);"}, {"sha": "3d5bacee71c67a7451991957b70c226d9c21cac9", "filename": "src/test/run-pass/deriving-global.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/c83bceddbb497464f8e4e1990f7518b009cd61ca/src%2Ftest%2Frun-pass%2Fderiving-global.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83bceddbb497464f8e4e1990f7518b009cd61ca/src%2Ftest%2Frun-pass%2Fderiving-global.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-global.rs?ref=c83bceddbb497464f8e4e1990f7518b009cd61ca", "patch": "@@ -0,0 +1,41 @@\n+// xfail-test #7103 `extern mod` does not work on windows\n+\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern mod extra; // {En,De}codable\n+mod submod {\n+    // if any of these are implemented without global calls for any\n+    // function calls, then being in a submodule will (correctly)\n+    // cause errors about unrecognised module `std` (or `extra`)\n+    #[deriving(Eq, Ord, TotalEq, TotalOrd,\n+               IterBytes,\n+               Clone, DeepClone,\n+               ToStr, Rand,\n+               Encodable, Decodable)]\n+    enum A { A1(uint), A2(int) }\n+\n+    #[deriving(Eq, Ord, TotalEq, TotalOrd,\n+               IterBytes,\n+               Clone, DeepClone,\n+               ToStr, Rand,\n+               Encodable, Decodable)]\n+    struct B { x: uint, y: int }\n+\n+    #[deriving(Eq, Ord, TotalEq, TotalOrd,\n+               IterBytes,\n+               Clone, DeepClone,\n+               ToStr, Rand,\n+               Encodable, Decodable)]\n+    struct C(uint, int);\n+\n+}\n+\n+fn main() {}"}]}