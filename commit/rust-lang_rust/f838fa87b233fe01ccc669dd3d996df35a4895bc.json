{"sha": "f838fa87b233fe01ccc669dd3d996df35a4895bc", "node_id": "C_kwDOAAsO6NoAKGY4MzhmYTg3YjIzM2ZlMDFjY2M2NjlkZDNkOTk2ZGYzNWE0ODk1YmM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-02T05:52:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-02T05:52:13Z"}, "message": "Rollup merge of #107312 - calebcartwright:style-let-else, r=joshtriplett\n\nAdd Style Guide rules for let-else statements\n\ncc `@rust-lang/style` `@rust-lang/rustfmt`\n\n[rendered](https://github.com/calebcartwright/rust/blob/c694d07c6413ba55caa10b9f8b853df7a7792e7c/src/doc/style-guide/src/statements.md#else-blocks-let-else-statements)", "tree": {"sha": "4d1944fa0d80c17930071258780e28a9ae591477", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d1944fa0d80c17930071258780e28a9ae591477"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f838fa87b233fe01ccc669dd3d996df35a4895bc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj20+NCRBK7hj4Ov3rIwAARnwIABm1Gr9NPzrdpDEPYutL7o5t\nMej088v3ULtRZsJrvldrBOjd06cFA4K+LcYVrcMBpoRu/8oIzhuS2CNDkCjmJfCk\nya+FE/XunbNhVGrYmXlmDVB9mYER8N/YSCp1xedrS2iRRGEhkyKoiIo1cw6agySJ\nlaQuU3B1AxU3TEMMnGsXGW8zmQswJwIgVyFW+N1846GrGyNXHFp36LbI8HkCnvZm\na+jm8aBFIhrLNC837txxX4cALu4NlaILFsICe3pKYfN37F1JwN104qTk2qrP2wV/\nociL+JL+s0Wrva7ZAvvOisWUkOcMU0PSiemrppBS6+zo8iAnvmPK1K/kxtzFoWc=\n=3cX4\n-----END PGP SIGNATURE-----\n", "payload": "tree 4d1944fa0d80c17930071258780e28a9ae591477\nparent 480c4a18d524a2cddd194fcf9a1bfdd6b7610656\nparent 10b9c1d3ca6182595dfa944577afaec62f024bda\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1675317133 +0100\ncommitter GitHub <noreply@github.com> 1675317133 +0100\n\nRollup merge of #107312 - calebcartwright:style-let-else, r=joshtriplett\n\nAdd Style Guide rules for let-else statements\n\ncc `@rust-lang/style` `@rust-lang/rustfmt`\n\n[rendered](https://github.com/calebcartwright/rust/blob/c694d07c6413ba55caa10b9f8b853df7a7792e7c/src/doc/style-guide/src/statements.md#else-blocks-let-else-statements)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f838fa87b233fe01ccc669dd3d996df35a4895bc", "html_url": "https://github.com/rust-lang/rust/commit/f838fa87b233fe01ccc669dd3d996df35a4895bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f838fa87b233fe01ccc669dd3d996df35a4895bc/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "480c4a18d524a2cddd194fcf9a1bfdd6b7610656", "url": "https://api.github.com/repos/rust-lang/rust/commits/480c4a18d524a2cddd194fcf9a1bfdd6b7610656", "html_url": "https://github.com/rust-lang/rust/commit/480c4a18d524a2cddd194fcf9a1bfdd6b7610656"}, {"sha": "10b9c1d3ca6182595dfa944577afaec62f024bda", "url": "https://api.github.com/repos/rust-lang/rust/commits/10b9c1d3ca6182595dfa944577afaec62f024bda", "html_url": "https://github.com/rust-lang/rust/commit/10b9c1d3ca6182595dfa944577afaec62f024bda"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "4ab1c36f976525dfcfb3a44e568d11305b8e6efd", "filename": "src/doc/style-guide/src/statements.md", "status": "modified", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/f838fa87b233fe01ccc669dd3d996df35a4895bc/src%2Fdoc%2Fstyle-guide%2Fsrc%2Fstatements.md", "raw_url": "https://github.com/rust-lang/rust/raw/f838fa87b233fe01ccc669dd3d996df35a4895bc/src%2Fdoc%2Fstyle-guide%2Fsrc%2Fstatements.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle-guide%2Fsrc%2Fstatements.md?ref=f838fa87b233fe01ccc669dd3d996df35a4895bc", "patch": "@@ -99,6 +99,84 @@ let Foo {\n );\n ```\n \n+#### else blocks (let-else statements)\n+\n+If a let statement contains an `else` component, also known as a let-else statement,\n+then the `else` component should be formatted according to the same rules as the `else` block\n+in [control flow expressions (i.e. if-else, and if-let-else expressions)](./expressions.md#control-flow-expressions).\n+Apply the same formatting rules to the components preceding\n+the `else` block (i.e. the `let pattern: Type = initializer_expr ...` portion)\n+as described [above](#let-statements)\n+\n+Similarly to if-else expressions, if the initializer\n+expression is multi-lined, then the `else` keyword and opening brace of the block (i.e. `else {`)\n+should be put on the same line as the end of the initializer\n+expression with a preceding space if all the following are true:\n+\n+* The initializer expression ends with one or more closing\n+  parentheses, square brackets, and/or braces\n+* There is nothing else on that line\n+* That line is not indented beyond the indent of the first line containing the `let` keyword\n+\n+For example:\n+\n+```rust\n+let Some(x) = y.foo(\n+    \"abc\",\n+    fairly_long_identifier,\n+    \"def\",\n+    \"123456\",\n+    \"string\",\n+    \"cheese\",\n+) else {\n+    bar()\n+}\n+```\n+\n+Otherwise, the `else` keyword and opening brace should be placed on the next line after the end of the initializer expression, and should not be indented (the `else` keyword should be aligned with the `let` keyword).\n+\n+For example:\n+\n+```rust\n+let Some(x) = abcdef()\n+    .foo(\n+        \"abc\",\n+        some_really_really_really_long_ident,\n+        \"ident\",\n+        \"123456\",\n+    )\n+    .bar()\n+    .baz()\n+    .qux(\"fffffffffffffffff\")\n+else {\n+    foo_bar()\n+}\n+```\n+\n+##### Single line let-else statements\n+\n+The entire let-else statement may be formatted on a single line if all the following are true:\n+\n+* the entire statement is *short*\n+* the `else` block contains a single-line expression and no statements\n+* the `else` block contains no comments\n+* the let statement components preceding the `else` block can be formatted on a single line\n+\n+```rust\n+let Some(1) = opt else { return };\n+\n+let Some(1) = opt else {\n+    return;\n+};\n+\n+let Some(1) = opt else {\n+    // nope\n+    return\n+};\n+```\n+\n+Formatters may allow users to configure the value of the threshold\n+used to determine whether a let-else statement is *short*.\n \n ### Macros in statement position\n "}]}