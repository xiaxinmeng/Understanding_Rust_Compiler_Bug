{"sha": "b4ee38ede3d6a3418103336cecdb8bd08db8e5ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0ZWUzOGVkZTNkNmEzNDE4MTAzMzM2Y2VjZGI4YmQwOGRiOGU1YWI=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-31T12:30:59Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-25T14:47:35Z"}, "message": "Don't extend `hir::Def` when there's already a dedicated \"function-like\" detector", "tree": {"sha": "1506e1c7197a45ba39032dd200c2fc50feabd500", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1506e1c7197a45ba39032dd200c2fc50feabd500"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab", "html_url": "https://github.com/rust-lang/rust/commit/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73e2b4662d32f517f8cb874e45f48c2a05a81456", "url": "https://api.github.com/repos/rust-lang/rust/commits/73e2b4662d32f517f8cb874e45f48c2a05a81456", "html_url": "https://github.com/rust-lang/rust/commit/73e2b4662d32f517f8cb874e45f48c2a05a81456"}], "stats": {"total": 41, "additions": 18, "deletions": 23}, "files": [{"sha": "5d9d4deb0abc9e95793aa303ce1a621980cc0b1c", "filename": "src/librustc/hir/def.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab/src%2Flibrustc%2Fhir%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab/src%2Flibrustc%2Fhir%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef.rs?ref=b4ee38ede3d6a3418103336cecdb8bd08db8e5ab", "patch": "@@ -74,7 +74,6 @@ pub enum Def {\n     SelfCtor(DefId /* impl */),  // DefId refers to the impl\n     Method(DefId),\n     AssociatedConst(DefId),\n-    Closure(hir::BodyId),\n \n     Local(ast::NodeId),\n     Upvar(ast::NodeId,  // node id of closed over local\n@@ -282,7 +281,6 @@ impl Def {\n                 id\n             }\n \n-            Def::Closure(_) |\n             Def::Local(..) |\n             Def::Upvar(..) |\n             Def::Label(..)  |\n@@ -321,7 +319,6 @@ impl Def {\n             Def::Trait(..) => \"trait\",\n             Def::ForeignTy(..) => \"foreign type\",\n             Def::Method(..) => \"method\",\n-            Def::Closure(_) => \"closure\",\n             Def::Const(..) => \"constant\",\n             Def::AssociatedConst(..) => \"associated constant\",\n             Def::TyParam(..) => \"type parameter\","}, {"sha": "1ab1c7d3fc5c433655b0c807997c5e1cebe26080", "filename": "src/librustc/hir/map/blocks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs?ref=b4ee38ede3d6a3418103336cecdb8bd08db8e5ab", "patch": "@@ -43,7 +43,7 @@ pub struct FnLikeNode<'a> { node: Node<'a> }\n \n /// MaybeFnLike wraps a method that indicates if an object\n /// corresponds to some FnLikeNode.\n-pub trait MaybeFnLike { fn is_fn_like(&self) -> bool; }\n+trait MaybeFnLike { fn is_fn_like(&self) -> bool; }\n \n impl MaybeFnLike for ast::Item {\n     fn is_fn_like(&self) -> bool {"}, {"sha": "f5f9bcd3b5ea5125d32e70cd09a2028e57dd2266", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=b4ee38ede3d6a3418103336cecdb8bd08db8e5ab", "patch": "@@ -340,14 +340,9 @@ impl<'hir> Map<'hir> {\n                 let def_id = self.local_def_id(variant.node.data.id());\n                 Some(Def::Variant(def_id))\n             }\n-            Node::Expr(expr) => {\n-                match expr.node {\n-                    ExprKind::Closure(_, _, body_id, _, _) => Some(Def::Closure(body_id)),\n-                    _ => None,\n-                }\n-            }\n             Node::Field(_) |\n             Node::AnonConst(_) |\n+            Node::Expr(_) |\n             Node::Stmt(_) |\n             Node::Ty(_) |\n             Node::TraitRef(_) |"}, {"sha": "a48bd4eeb09a32eb5b6726280581e087bf992898", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=b4ee38ede3d6a3418103336cecdb8bd08db8e5ab", "patch": "@@ -1044,7 +1044,6 @@ impl_stable_hash_for!(enum hir::def::Def {\n     SelfCtor(impl_def_id),\n     VariantCtor(def_id, ctor_kind),\n     Method(def_id),\n-    Closure(body_id),\n     AssociatedConst(def_id),\n     Local(def_id),\n     Upvar(def_id, index, expr_id),"}, {"sha": "6291d8cc80cb3302ce26cd7505f6457d44f8a36e", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=b4ee38ede3d6a3418103336cecdb8bd08db8e5ab", "patch": "@@ -44,19 +44,24 @@ impl MirPass for ConstProp {\n         if source.promoted.is_some() {\n             return;\n         }\n-        match tcx.describe_def(source.def_id) {\n-            // Only run const prop on functions, methods, closures and associated constants\n-            | Some(Def::Fn(_))\n-            | Some(Def::Method(_))\n-            | Some(Def::AssociatedConst(_))\n-            | Some(Def::Closure(_))\n-            => {}\n+\n+        use rustc::hir::map::blocks::FnLikeNode;\n+        let node_id = tcx.hir.as_local_node_id(source.def_id)\n+                             .expect(\"Non-local call to local provider is_const_fn\");\n+\n+        let is_fn_like = FnLikeNode::from_node(tcx.hir.get(node_id)).is_some();\n+        let is_assoc_const = match tcx.describe_def(source.def_id) {\n+            Some(Def::AssociatedConst(_)) => true,\n+            _ => false,\n+        };\n+\n+        // Only run const prop on functions, methods, closures and associated constants\n+        if !is_fn_like && !is_assoc_const  {\n             // skip anon_const/statics/consts because they'll be evaluated by miri anyway\n-            def => {\n-                trace!(\"ConstProp skipped for {:?} ({:?})\", source.def_id, def);\n-                return\n-            },\n+            trace!(\"ConstProp skipped for {:?}\", source.def_id);\n+            return\n         }\n+\n         trace!(\"ConstProp starting for {:?}\", source.def_id);\n \n         // FIXME(oli-obk, eddyb) Optimize locals (or even local paths) to hold"}, {"sha": "4b43a1a6270f86793b1f89ac1f71a935b4083dcc", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4ee38ede3d6a3418103336cecdb8bd08db8e5ab/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=b4ee38ede3d6a3418103336cecdb8bd08db8e5ab", "patch": "@@ -827,7 +827,6 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                     ref_id: id_from_def_id(def_id),\n                 })\n             }\n-            HirDef::Closure(_) |\n             HirDef::PrimTy(..) |\n             HirDef::SelfTy(..) |\n             HirDef::Label(..) |"}]}