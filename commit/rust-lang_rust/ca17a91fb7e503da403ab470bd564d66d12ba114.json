{"sha": "ca17a91fb7e503da403ab470bd564d66d12ba114", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMTdhOTFmYjdlNTAzZGE0MDNhYjQ3MGJkNTY0ZDY2ZDEyYmExMTQ=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-11-10T20:32:58Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-11-11T08:38:40Z"}, "message": "rustc_target: Move target env \"gnu\" from `linux_base` to `linux_gnu_base`", "tree": {"sha": "2e414cc91b75a4afb0c6a82aea9b3616ecf489be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e414cc91b75a4afb0c6a82aea9b3616ecf489be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca17a91fb7e503da403ab470bd564d66d12ba114", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca17a91fb7e503da403ab470bd564d66d12ba114", "html_url": "https://github.com/rust-lang/rust/commit/ca17a91fb7e503da403ab470bd564d66d12ba114", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca17a91fb7e503da403ab470bd564d66d12ba114/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38030ffb4e735b26260848b744c0910a5641e1db", "url": "https://api.github.com/repos/rust-lang/rust/commits/38030ffb4e735b26260848b744c0910a5641e1db", "html_url": "https://github.com/rust-lang/rust/commit/38030ffb4e735b26260848b744c0910a5641e1db"}], "stats": {"total": 65, "additions": 35, "deletions": 30}, "files": [{"sha": "58c72af4e769cbfa37cd044848147c238cd88762", "filename": "compiler/rustc_target/src/spec/aarch64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::{Target, TargetOptions};\n \n pub fn target() -> Target {\n-    let mut base = super::linux_base::opts();\n+    let mut base = super::linux_gnu_base::opts();\n     base.max_atomic_width = Some(128);\n \n     Target {"}, {"sha": "40688f057f5b057910a77f7f40364509283d0079", "filename": "compiler/rustc_target/src/spec/android_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::{LinkerFlavor, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n-    let mut base = super::linux_base::opts();\n+    let mut base = super::linux_gnu_base::opts();\n     base.os = \"android\".to_string();\n     // Many of the symbols defined in compiler-rt are also defined in libgcc.\n     // Android's linker doesn't like that by default."}, {"sha": "c41cf6e521a1d8875623f14d22d5badda9bbfe60", "filename": "compiler/rustc_target/src/spec/arm_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Farm_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Farm_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farm_unknown_linux_gnueabi.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::{Target, TargetOptions};\n \n pub fn target() -> Target {\n-    let mut base = super::linux_base::opts();\n+    let mut base = super::linux_gnu_base::opts();\n     base.max_atomic_width = Some(64);\n     Target {\n         llvm_target: \"arm-unknown-linux-gnueabi\".to_string(),"}, {"sha": "f2143966c1dcd6b06e9382bc51f9252ee25e60aa", "filename": "compiler/rustc_target/src/spec/arm_unknown_linux_gnueabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Farm_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Farm_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farm_unknown_linux_gnueabihf.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::{Target, TargetOptions};\n \n pub fn target() -> Target {\n-    let mut base = super::linux_base::opts();\n+    let mut base = super::linux_gnu_base::opts();\n     base.max_atomic_width = Some(64);\n     Target {\n         llvm_target: \"arm-unknown-linux-gnueabihf\".to_string(),"}, {"sha": "e1ba72bf83b9c8ad78e6f4333dd8edbeeb61b4d8", "filename": "compiler/rustc_target/src/spec/armv4t_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::{Target, TargetOptions};\n \n pub fn target() -> Target {\n-    let base = super::linux_base::opts();\n+    let base = super::linux_gnu_base::opts();\n     Target {\n         llvm_target: \"armv4t-unknown-linux-gnueabi\".to_string(),\n         pointer_width: 32,"}, {"sha": "3ac8d53564d7d73c70685b2e4a5ce99c3a4452e3", "filename": "compiler/rustc_target/src/spec/armv5te_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::{Target, TargetOptions};\n \n pub fn target() -> Target {\n-    let base = super::linux_base::opts();\n+    let base = super::linux_gnu_base::opts();\n     Target {\n         llvm_target: \"armv5te-unknown-linux-gnueabi\".to_string(),\n         pointer_width: 32,"}, {"sha": "ae6b8286f085fe2a7ba4268b17ee88acd5646e60", "filename": "compiler/rustc_target/src/spec/armv7_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7_unknown_linux_gnueabi.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -4,7 +4,7 @@ use crate::spec::{Target, TargetOptions};\n // hardfloat.\n \n pub fn target() -> Target {\n-    let base = super::linux_base::opts();\n+    let base = super::linux_gnu_base::opts();\n     Target {\n         llvm_target: \"armv7-unknown-linux-gnueabi\".to_string(),\n         pointer_width: 32,"}, {"sha": "48c16b620fd69e6cf9a4780b8b291d2a76ef02c9", "filename": "compiler/rustc_target/src/spec/armv7_unknown_linux_gnueabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -4,7 +4,7 @@ use crate::spec::{Target, TargetOptions};\n // thumb-mode. See the thumbv7neon variant for enabling both.\n \n pub fn target() -> Target {\n-    let base = super::linux_base::opts();\n+    let base = super::linux_gnu_base::opts();\n     Target {\n         llvm_target: \"armv7-unknown-linux-gnueabihf\".to_string(),\n         pointer_width: 32,"}, {"sha": "083c115d084b46acf86feb102c3290370f80270d", "filename": "compiler/rustc_target/src/spec/i686_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fi686_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fi686_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fi686_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::{LinkerFlavor, Target};\n \n pub fn target() -> Target {\n-    let mut base = super::linux_base::opts();\n+    let mut base = super::linux_gnu_base::opts();\n     base.cpu = \"pentium4\".to_string();\n     base.max_atomic_width = Some(64);\n     base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m32\".to_string());"}, {"sha": "0631644ad63555d868180a5a1affe9a62585d320", "filename": "compiler/rustc_target/src/spec/linux_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_base.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -20,7 +20,6 @@ pub fn opts() -> TargetOptions {\n \n     TargetOptions {\n         os: \"linux\".to_string(),\n-        env: \"gnu\".to_string(),\n         dynamic_linking: true,\n         executables: true,\n         os_family: Some(\"unix\".to_string()),"}, {"sha": "3d940ceaf0270b2ea8dec8f887af49aac850a480", "filename": "compiler/rustc_target/src/spec/linux_gnu_base.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_gnu_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_gnu_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_gnu_base.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -0,0 +1,5 @@\n+use crate::spec::TargetOptions;\n+\n+pub fn opts() -> TargetOptions {\n+    TargetOptions { env: \"gnu\".to_string(), ..super::linux_base::opts() }\n+}"}, {"sha": "daa0d9da1725e6cabc2c5b15ae05d5df1a450272", "filename": "compiler/rustc_target/src/spec/mips64_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -14,7 +14,7 @@ pub fn target() -> Target {\n             max_atomic_width: Some(64),\n             mcount: \"_mcount\".to_string(),\n \n-            ..super::linux_base::opts()\n+            ..super::linux_gnu_base::opts()\n         },\n     }\n }"}, {"sha": "d767705b0459b38c8b6c9c1a0c7d6359042deb4c", "filename": "compiler/rustc_target/src/spec/mips64el_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -13,7 +13,7 @@ pub fn target() -> Target {\n             max_atomic_width: Some(64),\n             mcount: \"_mcount\".to_string(),\n \n-            ..super::linux_base::opts()\n+            ..super::linux_gnu_base::opts()\n         },\n     }\n }"}, {"sha": "a7ec1f19c9de7b5810adb1ebb55a8960e5a845de", "filename": "compiler/rustc_target/src/spec/mips_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmips_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -13,7 +13,7 @@ pub fn target() -> Target {\n             max_atomic_width: Some(32),\n             mcount: \"_mcount\".to_string(),\n \n-            ..super::linux_base::opts()\n+            ..super::linux_gnu_base::opts()\n         },\n     }\n }"}, {"sha": "9cb2a13c7d4b5da57b06942d3d4b947379e68f6c", "filename": "compiler/rustc_target/src/spec/mipsel_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsel_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsel_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsel_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -13,7 +13,7 @@ pub fn target() -> Target {\n             max_atomic_width: Some(32),\n             mcount: \"_mcount\".to_string(),\n \n-            ..super::linux_base::opts()\n+            ..super::linux_gnu_base::opts()\n         },\n     }\n }"}, {"sha": "11b3734a10507f6215d67247e852525eca44fd10", "filename": "compiler/rustc_target/src/spec/mipsisa32r6_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa32r6_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa32r6_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa32r6_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -13,7 +13,7 @@ pub fn target() -> Target {\n             max_atomic_width: Some(32),\n             mcount: \"_mcount\".to_string(),\n \n-            ..super::linux_base::opts()\n+            ..super::linux_gnu_base::opts()\n         },\n     }\n }"}, {"sha": "06a5f40d69b3aa19fef116fd23215ce2edf8be75", "filename": "compiler/rustc_target/src/spec/mipsisa32r6el_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa32r6el_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa32r6el_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa32r6el_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -13,7 +13,7 @@ pub fn target() -> Target {\n             max_atomic_width: Some(32),\n             mcount: \"_mcount\".to_string(),\n \n-            ..super::linux_base::opts()\n+            ..super::linux_gnu_base::opts()\n         },\n     }\n }"}, {"sha": "6282c9e1d54b692974571bc7a4459b2bfeb2ff59", "filename": "compiler/rustc_target/src/spec/mipsisa64r6_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa64r6_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa64r6_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa64r6_unknown_linux_gnuabi64.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -14,7 +14,7 @@ pub fn target() -> Target {\n             max_atomic_width: Some(64),\n             mcount: \"_mcount\".to_string(),\n \n-            ..super::linux_base::opts()\n+            ..super::linux_gnu_base::opts()\n         },\n     }\n }"}, {"sha": "589d7acba68045f67f9d8b67b9bf52bbec49e667", "filename": "compiler/rustc_target/src/spec/mipsisa64r6el_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa64r6el_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa64r6el_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmipsisa64r6el_unknown_linux_gnuabi64.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -13,7 +13,7 @@ pub fn target() -> Target {\n             max_atomic_width: Some(64),\n             mcount: \"_mcount\".to_string(),\n \n-            ..super::linux_base::opts()\n+            ..super::linux_gnu_base::opts()\n         },\n     }\n }"}, {"sha": "271ceb2a0360899d57da97a54a5a37db65b7f74c", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -64,6 +64,7 @@ mod hermit_kernel_base;\n mod illumos_base;\n mod l4re_base;\n mod linux_base;\n+mod linux_gnu_base;\n mod linux_kernel_base;\n mod linux_musl_base;\n mod linux_uclibc_base;"}, {"sha": "03322818d33c3d6863baabad6aee20ebfd2af1e6", "filename": "compiler/rustc_target/src/spec/powerpc64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::{LinkerFlavor, RelroLevel, Target, TargetOptions};\n \n pub fn target() -> Target {\n-    let mut base = super::linux_base::opts();\n+    let mut base = super::linux_gnu_base::opts();\n     base.cpu = \"ppc64\".to_string();\n     base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m64\".to_string());\n     base.max_atomic_width = Some(64);"}, {"sha": "07e0bf81bc72f056dec6f9dc73ce480f09f7e6bb", "filename": "compiler/rustc_target/src/spec/powerpc64le_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::{LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Target {\n-    let mut base = super::linux_base::opts();\n+    let mut base = super::linux_gnu_base::opts();\n     base.cpu = \"ppc64le\".to_string();\n     base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m64\".to_string());\n     base.max_atomic_width = Some(64);"}, {"sha": "3a9271247b0426cf2f0446f7bd2bb491b30a3b49", "filename": "compiler/rustc_target/src/spec/powerpc_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::{LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Target {\n-    let mut base = super::linux_base::opts();\n+    let mut base = super::linux_gnu_base::opts();\n     base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m32\".to_string());\n     base.max_atomic_width = Some(32);\n "}, {"sha": "105a0b21aaf01c3a035d0a4cf11100af42a67bd2", "filename": "compiler/rustc_target/src/spec/powerpc_unknown_linux_gnuspe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::{LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Target {\n-    let mut base = super::linux_base::opts();\n+    let mut base = super::linux_gnu_base::opts();\n     base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-mspe\".to_string());\n     base.max_atomic_width = Some(32);\n "}, {"sha": "cf5e0201d08bf6b217f67a1e69fb2d8d48597b39", "filename": "compiler/rustc_target/src/spec/riscv32gc_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv32gc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv32gc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv32gc_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -13,7 +13,7 @@ pub fn target() -> Target {\n             features: \"+m,+a,+f,+d,+c\".to_string(),\n             llvm_abiname: \"ilp32d\".to_string(),\n             max_atomic_width: Some(32),\n-            ..super::linux_base::opts()\n+            ..super::linux_gnu_base::opts()\n         },\n     }\n }"}, {"sha": "84f28413fcbcea0d03729b590706a42799b21454", "filename": "compiler/rustc_target/src/spec/riscv64gc_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv64gc_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -13,7 +13,7 @@ pub fn target() -> Target {\n             features: \"+m,+a,+f,+d,+c\".to_string(),\n             llvm_abiname: \"lp64d\".to_string(),\n             max_atomic_width: Some(64),\n-            ..super::linux_base::opts()\n+            ..super::linux_gnu_base::opts()\n         },\n     }\n }"}, {"sha": "d6e8e6ee220e65b994cac7f144fcaed605c0d761", "filename": "compiler/rustc_target/src/spec/s390x_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::Target;\n \n pub fn target() -> Target {\n-    let mut base = super::linux_base::opts();\n+    let mut base = super::linux_gnu_base::opts();\n     base.endian = \"big\".to_string();\n     // z10 is the oldest CPU supported by LLVM\n     base.cpu = \"z10\".to_string();"}, {"sha": "e9b5520ac3d37e38b2c6d33d3ed32b1f8c8edbb1", "filename": "compiler/rustc_target/src/spec/sparc64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc64_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::Target;\n \n pub fn target() -> Target {\n-    let mut base = super::linux_base::opts();\n+    let mut base = super::linux_gnu_base::opts();\n     base.endian = \"big\".to_string();\n     base.cpu = \"v9\".to_string();\n     base.max_atomic_width = Some(64);"}, {"sha": "aae186b2293c70577bb64fb599aba9124da1b635", "filename": "compiler/rustc_target/src/spec/sparc_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fsparc_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::{LinkerFlavor, Target};\n \n pub fn target() -> Target {\n-    let mut base = super::linux_base::opts();\n+    let mut base = super::linux_gnu_base::opts();\n     base.endian = \"big\".to_string();\n     base.cpu = \"v9\".to_string();\n     base.max_atomic_width = Some(64);"}, {"sha": "352d246874308f03b11c536bc6b553155792fd54", "filename": "compiler/rustc_target/src/spec/thumbv7neon_unknown_linux_gnueabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fthumbv7neon_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fthumbv7neon_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fthumbv7neon_unknown_linux_gnueabihf.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -7,7 +7,7 @@ use crate::spec::{Target, TargetOptions};\n // https://static.docs.arm.com/ddi0406/cd/DDI0406C_d_armv7ar_arm.pdf\n \n pub fn target() -> Target {\n-    let base = super::linux_base::opts();\n+    let base = super::linux_gnu_base::opts();\n     Target {\n         llvm_target: \"armv7-unknown-linux-gnueabihf\".to_string(),\n         pointer_width: 32,"}, {"sha": "f127dd49bc4b7c500c2b6b9f27c3fdcefef7e0a6", "filename": "compiler/rustc_target/src/spec/x86_64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_linux_gnu.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::{LinkerFlavor, Target};\n \n pub fn target() -> Target {\n-    let mut base = super::linux_base::opts();\n+    let mut base = super::linux_gnu_base::opts();\n     base.cpu = \"x86-64\".to_string();\n     base.max_atomic_width = Some(64);\n     base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m64\".to_string());"}, {"sha": "0cae57528483f9023e45b03ba38d448886b733d3", "filename": "compiler/rustc_target/src/spec/x86_64_unknown_linux_gnux32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_linux_gnux32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca17a91fb7e503da403ab470bd564d66d12ba114/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_linux_gnux32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_linux_gnux32.rs?ref=ca17a91fb7e503da403ab470bd564d66d12ba114", "patch": "@@ -1,7 +1,7 @@\n use crate::spec::{LinkerFlavor, Target};\n \n pub fn target() -> Target {\n-    let mut base = super::linux_base::opts();\n+    let mut base = super::linux_gnu_base::opts();\n     base.cpu = \"x86-64\".to_string();\n     base.max_atomic_width = Some(64);\n     base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-mx32\".to_string());"}]}