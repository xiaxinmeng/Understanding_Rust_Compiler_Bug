{"sha": "f4f909b8b5d9cb24d3d6e2c10231da28aa627e54", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0ZjkwOWI4YjVkOWNiMjRkM2Q2ZTJjMTAyMzFkYTI4YWE2MjdlNTQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-27T05:21:28Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-27T07:12:39Z"}, "message": "rustc: Add min_align_of, pref_align_of intrinsic, deprecate align_of", "tree": {"sha": "5ab00bee9de7b2552f3a56b61cdc4c03f4070e15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ab00bee9de7b2552f3a56b61cdc4c03f4070e15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4f909b8b5d9cb24d3d6e2c10231da28aa627e54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4f909b8b5d9cb24d3d6e2c10231da28aa627e54", "html_url": "https://github.com/rust-lang/rust/commit/f4f909b8b5d9cb24d3d6e2c10231da28aa627e54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4f909b8b5d9cb24d3d6e2c10231da28aa627e54/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c46ee34beb7149b8a8b167340acf9fb7a12cd2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c46ee34beb7149b8a8b167340acf9fb7a12cd2e", "html_url": "https://github.com/rust-lang/rust/commit/1c46ee34beb7149b8a8b167340acf9fb7a12cd2e"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "46cef5e2bb6037a91675d8034acaba1612749415", "filename": "src/rustc/middle/trans/native.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f4f909b8b5d9cb24d3d6e2c10231da28aa627e54/src%2Frustc%2Fmiddle%2Ftrans%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4f909b8b5d9cb24d3d6e2c10231da28aa627e54/src%2Frustc%2Fmiddle%2Ftrans%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fnative.rs?ref=f4f909b8b5d9cb24d3d6e2c10231da28aa627e54", "patch": "@@ -764,10 +764,19 @@ fn trans_intrinsic(ccx: @crate_ctxt, decl: ValueRef, item: @ast::native_item,\n         Store(bcx, C_uint(ccx, shape::llsize_of_real(ccx, lltp_ty)),\n               fcx.llretptr);\n       }\n+      // FIXME: Transitional. Please remove me.\n       \"align_of\" {\n         Store(bcx, C_uint(ccx, shape::llalign_of_pref(ccx, lltp_ty)),\n               fcx.llretptr);\n       }\n+      \"min_align_of\" {\n+        Store(bcx, C_uint(ccx, shape::llalign_of_min(ccx, lltp_ty)),\n+              fcx.llretptr);\n+      }\n+      \"pref_align_of\" {\n+        Store(bcx, C_uint(ccx, shape::llalign_of_pref(ccx, lltp_ty)),\n+              fcx.llretptr);\n+      }\n       \"get_tydesc\" {\n         let td = get_tydesc_simple(ccx, tp_ty);\n         Store(bcx, PointerCast(bcx, td, T_ptr(T_nil())), fcx.llretptr);"}, {"sha": "1a647aa5bf145ea245721e7494ba598ba41dda23", "filename": "src/rustc/middle/trans/type_use.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f4f909b8b5d9cb24d3d6e2c10231da28aa627e54/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4f909b8b5d9cb24d3d6e2c10231da28aa627e54/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs?ref=f4f909b8b5d9cb24d3d6e2c10231da28aa627e54", "patch": "@@ -76,7 +76,8 @@ fn type_uses_for(ccx: @crate_ctxt, fn_id: def_id, n_tps: uint)\n       ast_map::node_native_item(i@@{node: native_item_fn(_, _), _}, abi, _) {\n         if abi == native_abi_rust_intrinsic {\n             let flags = alt check i.ident {\n-              \"size_of\" | \"align_of\" | \"init\" |\n+              \"size_of\" | \"align_of\" |\n+              \"pref_align_of\" | \"min_align_of\" | \"init\" |\n               \"reinterpret_cast\" { use_repr }\n               \"get_tydesc\" | \"needs_drop\" { use_tydesc }\n               \"forget\" | \"addr_of\" { 0u }"}, {"sha": "e6f112f835dba1d2838ac8548162263067f313de", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f4f909b8b5d9cb24d3d6e2c10231da28aa627e54/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4f909b8b5d9cb24d3d6e2c10231da28aa627e54/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=f4f909b8b5d9cb24d3d6e2c10231da28aa627e54", "patch": "@@ -2007,7 +2007,8 @@ fn check_intrinsic_type(ccx: @crate_ctxt, it: @ast::native_item) {\n     }\n     let tcx = ccx.tcx;\n     let (n_tps, inputs, output) = alt it.ident {\n-      \"size_of\" | \"align_of\" { (1u, [], ty::mk_uint(ccx.tcx)) }\n+      \"size_of\" | \"align_of\" |\n+      \"pref_align_of\" | \"min_align_of\" { (1u, [], ty::mk_uint(ccx.tcx)) }\n       \"get_tydesc\" { (1u, [], ty::mk_nil_ptr(tcx)) }\n       \"init\" { (1u, [], param(ccx, 0u)) }\n       \"forget\" { (1u, [arg(ast::by_move, param(ccx, 0u))],"}, {"sha": "7841cda4522439c916fd9a148095ed747b887f76", "filename": "src/test/run-pass/intrinsic-alignment.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f4f909b8b5d9cb24d3d6e2c10231da28aa627e54/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4f909b8b5d9cb24d3d6e2c10231da28aa627e54/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs?ref=f4f909b8b5d9cb24d3d6e2c10231da28aa627e54", "patch": "@@ -0,0 +1,19 @@\n+// xfail-win32 need to investigate alignment on windows\n+\n+#[abi = \"rust-intrinsic\"]\n+native mod rusti {\n+    fn pref_align_of<T>() -> uint;\n+    fn min_align_of<T>() -> uint;\n+}\n+\n+#[cfg(target_arch = \"x86\")]\n+fn main() {\n+    assert rusti::pref_align_of::<u64>() == 8u;\n+    assert rusti::min_align_of::<u64>() == 4u;\n+}\n+\n+#[cfg(target_arch = \"x86_64\")]\n+fn main() {\n+    assert rusti::pref_align_of::<u64>() == 8u;\n+    assert rusti::min_align_of::<u64>() == 8u;\n+}"}]}