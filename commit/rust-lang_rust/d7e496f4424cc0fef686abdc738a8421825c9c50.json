{"sha": "d7e496f4424cc0fef686abdc738a8421825c9c50", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ZTQ5NmY0NDI0Y2MwZmVmNjg2YWJkYzczOGE4NDIxODI1YzljNTA=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-08-04T23:28:36Z"}, "committer": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-08-31T18:29:10Z"}, "message": "feature(doc_cfg): add docs for cfg(rustdoc)", "tree": {"sha": "64550c230d91ccc89fe2a13c98dcabc2fbe4ba97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64550c230d91ccc89fe2a13c98dcabc2fbe4ba97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7e496f4424cc0fef686abdc738a8421825c9c50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7e496f4424cc0fef686abdc738a8421825c9c50", "html_url": "https://github.com/rust-lang/rust/commit/d7e496f4424cc0fef686abdc738a8421825c9c50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7e496f4424cc0fef686abdc738a8421825c9c50/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a3bb2795b3c06e56d0c172b59178c72a171f1fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a3bb2795b3c06e56d0c172b59178c72a171f1fc", "html_url": "https://github.com/rust-lang/rust/commit/1a3bb2795b3c06e56d0c172b59178c72a171f1fc"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "876a773b30ab040b650260b78cc64408addd832c", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d7e496f4424cc0fef686abdc738a8421825c9c50/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/d7e496f4424cc0fef686abdc738a8421825c9c50/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=d7e496f4424cc0fef686abdc738a8421825c9c50", "patch": "@@ -106,27 +106,25 @@ The `#[doc(cfg(...))]` attribute has another effect: When Rustdoc renders docume\n item, it will be accompanied by a banner explaining that the item is only available on certain\n platforms.\n \n-As mentioned earlier, getting the items to Rustdoc requires some extra preparation. The standard\n-library adds a `--cfg dox` flag to every Rustdoc command, but the same thing can be accomplished by\n-adding a feature to your Cargo.toml and adding `--feature dox` (or whatever you choose to name the\n-feature) to your `cargo doc` calls.\n+For Rustdoc to document an item, it needs to see it, regardless of what platform it's currently\n+running on. To aid this, Rustdoc sets the flag `#[cfg(rustdoc)]` when running on your crate.\n+Combining this with the target platform of a given item allows it to appear when building your crate\n+normally on that platform, as well as when building documentation anywhere.\n \n-Either way, once you create an environment for the documentation, you can start to augment your\n-`#[cfg]` attributes to allow both the target platform *and* the documentation configuration to leave\n-the item in. For example, `#[cfg(any(windows, feature = \"dox\"))]` will preserve the item either on\n-Windows or during the documentation process. Then, adding a new attribute `#[doc(cfg(windows))]`\n-will tell Rustdoc that the item is supposed to be used on Windows. For example:\n+For example, `#[cfg(any(windows, rustdoc))]` will preserve the item either on Windows or during the\n+documentation process. Then, adding a new attribute `#[doc(cfg(windows))]` will tell Rustdoc that\n+the item is supposed to be used on Windows. For example:\n \n ```rust\n #![feature(doc_cfg)]\n \n /// Token struct that can only be used on Windows.\n-#[cfg(any(windows, feature = \"dox\"))]\n+#[cfg(any(windows, rustdoc))]\n #[doc(cfg(windows))]\n pub struct WindowsToken;\n \n /// Token struct that can only be used on Unix.\n-#[cfg(any(unix, feature = \"dox\"))]\n+#[cfg(any(unix, rustdoc))]\n #[doc(cfg(unix))]\n pub struct UnixToken;\n ```"}, {"sha": "96c66a1515ed5495b2da721e641ce191fe5167f7", "filename": "src/doc/unstable-book/src/language-features/doc-cfg.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d7e496f4424cc0fef686abdc738a8421825c9c50/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-cfg.md", "raw_url": "https://github.com/rust-lang/rust/raw/d7e496f4424cc0fef686abdc738a8421825c9c50/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-cfg.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-cfg.md?ref=d7e496f4424cc0fef686abdc738a8421825c9c50", "patch": "@@ -12,13 +12,17 @@ This attribute has two effects:\n \n 2. The item's doc-tests will only run on the specific platform.\n \n+In addition to allowing the use of the `#[doc(cfg)]` attribute, this feature enables the use of a\n+special conditional compilation flag, `#[cfg(rustdoc)]`, set whenever building documentation on your\n+crate.\n+\n This feature was introduced as part of PR [#43348] to allow the platform-specific parts of the\n standard library be documented.\n \n ```rust\n #![feature(doc_cfg)]\n \n-#[cfg(any(windows, feature = \"documentation\"))]\n+#[cfg(any(windows, rustdoc))]\n #[doc(cfg(windows))]\n /// The application's icon in the notification area (a.k.a. system tray).\n ///\n@@ -39,4 +43,4 @@ pub struct Icon {\n ```\n \n [#43781]: https://github.com/rust-lang/rust/issues/43781\n-[#43348]: https://github.com/rust-lang/rust/issues/43348\n\\ No newline at end of file\n+[#43348]: https://github.com/rust-lang/rust/issues/43348"}]}