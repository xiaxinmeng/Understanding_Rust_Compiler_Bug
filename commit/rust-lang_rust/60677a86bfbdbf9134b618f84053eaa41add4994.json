{"sha": "60677a86bfbdbf9134b618f84053eaa41add4994", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNjc3YTg2YmZiZGJmOTEzNGI2MThmODQwNTNlYWE0MWFkZDQ5OTQ=", "commit": {"author": {"name": "Aaron Power", "email": "Aaronepower@users.noreply.github.com", "date": "2019-01-10T09:08:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-10T09:08:07Z"}, "message": "Update RELEASES.md", "tree": {"sha": "94087e46b6ac59230bda6a64f72fb91de5bacdc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94087e46b6ac59230bda6a64f72fb91de5bacdc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60677a86bfbdbf9134b618f84053eaa41add4994", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcNwt3CRBK7hj4Ov3rIwAAdHIIAC93fMYWEDkwlyvzBi6WpOif\nn+LqFlCn6ZRs2rPYjsBPlSV8oYudEFxunmbEGtDNeT9/3ncYvt8TKEivVk8Xn52h\niw2jFfbhQyjlAx/hLskhmTZMcXGcA+f8JfG3BdGDJn7FY+q3AldWHrH9Soy+yu6p\n9vLU6zATxqukLynHBIQKUpYteC3QCRhcquZkrf6ZDs55+3+agDXNqrVkPGo3P59P\n+E/cRPDun/kV/jrNJ18/KtksFGIAk/J+alyj593sAaqEfMhRV55wWA61E+he6w0S\ngkwhJKAK/ehEQjvQSjXktZR96MzH2Db5WP73X5zXyfBxCsbbuloudmo83Ruhm9k=\n=EKME\n-----END PGP SIGNATURE-----\n", "payload": "tree 94087e46b6ac59230bda6a64f72fb91de5bacdc4\nparent f82ecff4d17ab0f90979294ccf5f5079d9df08eb\nauthor Aaron Power <Aaronepower@users.noreply.github.com> 1547111287 +0100\ncommitter GitHub <noreply@github.com> 1547111287 +0100\n\nUpdate RELEASES.md"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60677a86bfbdbf9134b618f84053eaa41add4994", "html_url": "https://github.com/rust-lang/rust/commit/60677a86bfbdbf9134b618f84053eaa41add4994", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60677a86bfbdbf9134b618f84053eaa41add4994/comments", "author": {"login": "Aaronepower", "id": 108753774, "node_id": "U_kgDOBntzbg", "avatar_url": "https://avatars.githubusercontent.com/u/108753774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaronepower", "html_url": "https://github.com/Aaronepower", "followers_url": "https://api.github.com/users/Aaronepower/followers", "following_url": "https://api.github.com/users/Aaronepower/following{/other_user}", "gists_url": "https://api.github.com/users/Aaronepower/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaronepower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaronepower/subscriptions", "organizations_url": "https://api.github.com/users/Aaronepower/orgs", "repos_url": "https://api.github.com/users/Aaronepower/repos", "events_url": "https://api.github.com/users/Aaronepower/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaronepower/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f82ecff4d17ab0f90979294ccf5f5079d9df08eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/f82ecff4d17ab0f90979294ccf5f5079d9df08eb", "html_url": "https://github.com/rust-lang/rust/commit/f82ecff4d17ab0f90979294ccf5f5079d9df08eb"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "fec9046a0832685848287a0f54e2816751e64754", "filename": "RELEASES.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/60677a86bfbdbf9134b618f84053eaa41add4994/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/60677a86bfbdbf9134b618f84053eaa41add4994/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=60677a86bfbdbf9134b618f84053eaa41add4994", "patch": "@@ -40,11 +40,11 @@ Language\n     Cons(T, Box<Self>) // likewise here\n   }\n   ```\n+- [You can now mark traits with `#[must_use]`.][55663] This provides a warning if\n+  a `impl Trait` or `dyn Trait` is returned and unused in the program.\n \n Compiler\n --------\n-- [You can now mark traits with `#[must_use]`.][55663] Providing a warning if\n-  they unused in a program.\n - [The default allocator has changed from jemalloc to the default allocator on\n   your system.][55238] The compiler itself on Linux & macOS will still use\n   jemalloc, but programs compiled with them will use the system allocator.\n@@ -75,7 +75,7 @@ The following APIs are now `const` functions and can be used in a\n - [`RangeInclusive::start`]\n - [`RangeInclusive::end`]\n - [`NonNull::as_ptr`]\n-- [`[T]::as_ptr`]\n+- [`slice::as_ptr`]\n - [`str::as_ptr`]\n - [`Duration::as_secs`]\n - [`Duration::subsec_millis`]\n@@ -165,6 +165,7 @@ Compatibility Notes\n   been changed from `*const` to `*mut` as the previous implementation\n   was unsound.\n \n+\n [55148]: https://github.com/rust-lang/rust/pull/55148/\n [55238]: https://github.com/rust-lang/rust/pull/55238/\n [55280]: https://github.com/rust-lang/rust/pull/55280/\n@@ -195,7 +196,7 @@ Compatibility Notes\n [`RangeInclusive::end`]: https://doc.rust-lang.org/std/ops/struct.RangeInclusive.html#method.end\n [`RangeInclusive::start`]: https://doc.rust-lang.org/std/ops/struct.RangeInclusive.html#method.start\n [`UnsafeCell::get`]: https://doc.rust-lang.org/std/cell/struct.UnsafeCell.html#method.get\n-[`[T]::as_ptr`]: https://doc.rust-lang.org/std/primitive.slice.html#method.as_ptr\n+[`slice::as_ptr`]: https://doc.rust-lang.org/std/primitive.slice.html#method.as_ptr\n [`char::is_ascii`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_ascii\n [`i16::from_be_bytes`]: https://doc.rust-lang.org/stable/std/primitive.i16.html#method.from_be_bytes\n [`i16::from_le_bytes`]: https://doc.rust-lang.org/stable/std/primitive.i16.html#method.from_le_bytes"}]}