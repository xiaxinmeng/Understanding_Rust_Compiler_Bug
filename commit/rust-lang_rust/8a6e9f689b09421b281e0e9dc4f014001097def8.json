{"sha": "8a6e9f689b09421b281e0e9dc4f014001097def8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNmU5ZjY4OWIwOTQyMWIyODFlMGU5ZGM0ZjAxNDAwMTA5N2RlZjg=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-15T07:26:41Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-15T07:26:41Z"}, "message": "Format source codes", "tree": {"sha": "da7885b17791f25fa39adf0b56060ae761a0c960", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da7885b17791f25fa39adf0b56060ae761a0c960"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a6e9f689b09421b281e0e9dc4f014001097def8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a6e9f689b09421b281e0e9dc4f014001097def8", "html_url": "https://github.com/rust-lang/rust/commit/8a6e9f689b09421b281e0e9dc4f014001097def8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a6e9f689b09421b281e0e9dc4f014001097def8/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5138b16768d2ceefee3deba995cd45fc1f52fdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5138b16768d2ceefee3deba995cd45fc1f52fdb", "html_url": "https://github.com/rust-lang/rust/commit/a5138b16768d2ceefee3deba995cd45fc1f52fdb"}], "stats": {"total": 43, "additions": 23, "deletions": 20}, "files": [{"sha": "7a2d3048ff03ba6278e24f6e272fece44a11bac1", "filename": "src/items.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8a6e9f689b09421b281e0e9dc4f014001097def8/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a6e9f689b09421b281e0e9dc4f014001097def8/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=8a6e9f689b09421b281e0e9dc4f014001097def8", "patch": "@@ -684,13 +684,15 @@ fn format_impl_ref_and_type(\n     item: &ast::Item,\n     offset: Indent,\n ) -> Option<String> {\n-    if let ast::ItemKind::Impl(unsafety,\n-                               polarity,\n-                               _,\n-                               ref generics,\n-                               ref trait_ref,\n-                               ref self_ty,\n-                               _) = item.node\n+    if let ast::ItemKind::Impl(\n+        unsafety,\n+        polarity,\n+        _,\n+        ref generics,\n+        ref trait_ref,\n+        ref self_ty,\n+        _,\n+    ) = item.node\n     {\n         let mut result = String::new();\n "}, {"sha": "edeeb1e3b72318120e7846f5b57d18e80b4d77e7", "filename": "src/types.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8a6e9f689b09421b281e0e9dc4f014001097def8/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a6e9f689b09421b281e0e9dc4f014001097def8/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=8a6e9f689b09421b281e0e9dc4f014001097def8", "patch": "@@ -371,11 +371,11 @@ impl Rewrite for ast::WherePredicate {\n         // TODO: dead spans?\n         let result = match *self {\n             ast::WherePredicate::BoundPredicate(ast::WhereBoundPredicate {\n-                                                    ref bound_lifetimes,\n-                                                    ref bounded_ty,\n-                                                    ref bounds,\n-                                                    ..\n-                                                }) => {\n+                ref bound_lifetimes,\n+                ref bounded_ty,\n+                ref bounds,\n+                ..\n+            }) => {\n                 let type_str = try_opt!(bounded_ty.rewrite(context, shape));\n \n                 let colon = type_bound_colon(context);\n@@ -428,10 +428,10 @@ impl Rewrite for ast::WherePredicate {\n                 }\n             }\n             ast::WherePredicate::RegionPredicate(ast::WhereRegionPredicate {\n-                                                     ref lifetime,\n-                                                     ref bounds,\n-                                                     ..\n-                                                 }) => {\n+                ref lifetime,\n+                ref bounds,\n+                ..\n+            }) => {\n                 try_opt!(rewrite_bounded_lifetime(\n                     lifetime,\n                     bounds.iter(),\n@@ -440,10 +440,10 @@ impl Rewrite for ast::WherePredicate {\n                 ))\n             }\n             ast::WherePredicate::EqPredicate(ast::WhereEqPredicate {\n-                                                 ref lhs_ty,\n-                                                 ref rhs_ty,\n-                                                 ..\n-                                             }) => {\n+                ref lhs_ty,\n+                ref rhs_ty,\n+                ..\n+            }) => {\n                 let lhs_ty_str = try_opt!(lhs_ty.rewrite(context, shape));\n                 // 3 = \" = \".len()\n                 let used_width = 3 + lhs_ty_str.len();"}, {"sha": "c432df301dfd1849f3896e08e63c08e77ddb8055", "filename": "src/utils.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8a6e9f689b09421b281e0e9dc4f014001097def8/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a6e9f689b09421b281e0e9dc4f014001097def8/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=8a6e9f689b09421b281e0e9dc4f014001097def8", "patch": "@@ -99,6 +99,7 @@ pub fn last_line_width(s: &str) -> usize {\n         None => s.len(),\n     }\n }\n+\n #[inline]\n pub fn trimmed_last_line_width(s: &str) -> usize {\n     match s.rfind('\\n') {"}]}