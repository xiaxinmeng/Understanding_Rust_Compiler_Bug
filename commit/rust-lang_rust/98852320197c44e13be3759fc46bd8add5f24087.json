{"sha": "98852320197c44e13be3759fc46bd8add5f24087", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ODUyMzIwMTk3YzQ0ZTEzYmUzNzU5ZmM0NmJkOGFkZDVmMjQwODc=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-10-26T02:08:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-26T02:08:58Z"}, "message": "Rollup merge of #77836 - RalfJung:transmute_copy, r=Mark-Simulacrum\n\ntransmute_copy: explain that alignment is handled correctly\n\nThe doc comment currently is somewhat misleading because if it actually transmuted `&T` to `&U`, a higher-aligned `U` would be problematic.", "tree": {"sha": "2f45997904d465fdc55927836dab43467c62b6e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f45997904d465fdc55927836dab43467c62b6e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98852320197c44e13be3759fc46bd8add5f24087", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfli+7CRBK7hj4Ov3rIwAAdHIIADWmr9tljHSRjbGKZc/Ht0xf\n66aFbwFQE5Ji9YdiIHOt43nJi4Xa+msCAg2h58B3bEXG6s4bxsjGY03SqHP3ihdL\nQyD6CNlI4x48YwE7jAuK98O8Q9CvWbNnMMZ9dOpycHRua0Npf25RB3tTtHadGFTK\nMkOWXZy+lR+0hSyNJYXZ26AbqphIydoMgHzs7ROxXXufAKE5bd1ITVr2ZGMNRAwA\niIwvJ/Ys0CRMTzwLDPLHsrwTmNkVpEmWGpstZlHqBLAPN13r4lDdeD8xB/pHmjB0\nc67p4oschcCVYVvr2m0BH4z9Fq0iZOOv1tV4Tcr1+B/diuMnmJ5Pa7Se+VccW0M=\n=QSfM\n-----END PGP SIGNATURE-----\n", "payload": "tree 2f45997904d465fdc55927836dab43467c62b6e7\nparent e0c08ae4e1294ea07a08851e92b2cc81a8d7690d\nparent 95aac4487d1cb89913539619c201079d0fc2b463\nauthor Dylan DPC <dylan.dpc@gmail.com> 1603678138 +0100\ncommitter GitHub <noreply@github.com> 1603678138 +0100\n\nRollup merge of #77836 - RalfJung:transmute_copy, r=Mark-Simulacrum\n\ntransmute_copy: explain that alignment is handled correctly\n\nThe doc comment currently is somewhat misleading because if it actually transmuted `&T` to `&U`, a higher-aligned `U` would be problematic.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98852320197c44e13be3759fc46bd8add5f24087", "html_url": "https://github.com/rust-lang/rust/commit/98852320197c44e13be3759fc46bd8add5f24087", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98852320197c44e13be3759fc46bd8add5f24087/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0c08ae4e1294ea07a08851e92b2cc81a8d7690d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0c08ae4e1294ea07a08851e92b2cc81a8d7690d", "html_url": "https://github.com/rust-lang/rust/commit/e0c08ae4e1294ea07a08851e92b2cc81a8d7690d"}, {"sha": "95aac4487d1cb89913539619c201079d0fc2b463", "url": "https://api.github.com/repos/rust-lang/rust/commits/95aac4487d1cb89913539619c201079d0fc2b463", "html_url": "https://github.com/rust-lang/rust/commit/95aac4487d1cb89913539619c201079d0fc2b463"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e84014c68a6760a9be112b9c5cbb5917e3b077fd", "filename": "library/core/src/mem/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/98852320197c44e13be3759fc46bd8add5f24087/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98852320197c44e13be3759fc46bd8add5f24087/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs?ref=98852320197c44e13be3759fc46bd8add5f24087", "patch": "@@ -884,10 +884,10 @@ pub fn drop<T>(_x: T) {}\n /// Interprets `src` as having type `&U`, and then reads `src` without moving\n /// the contained value.\n ///\n-/// This function will unsafely assume the pointer `src` is valid for\n-/// [`size_of::<U>`][size_of] bytes by transmuting `&T` to `&U` and then reading\n-/// the `&U`. It will also unsafely create a copy of the contained value instead of\n-/// moving out of `src`.\n+/// This function will unsafely assume the pointer `src` is valid for [`size_of::<U>`][size_of]\n+/// bytes by transmuting `&T` to `&U` and then reading the `&U` (except that this is done in a way\n+/// that is correct even when `&U` makes stricter alignment requirements than `&T`). It will also\n+/// unsafely create a copy of the contained value instead of moving out of `src`.\n ///\n /// It is not a compile-time error if `T` and `U` have different sizes, but it\n /// is highly encouraged to only invoke this function where `T` and `U` have the"}]}