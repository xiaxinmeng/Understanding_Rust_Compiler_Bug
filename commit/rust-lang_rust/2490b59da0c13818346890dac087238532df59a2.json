{"sha": "2490b59da0c13818346890dac087238532df59a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0OTBiNTlkYTBjMTM4MTgzNDY4OTBkYWMwODcyMzg1MzJkZjU5YTI=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2013-12-22T04:10:45Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2013-12-22T04:10:45Z"}, "message": "Remove unneccessary mut from arc", "tree": {"sha": "e7d47a0b1fe9f13e2e47cdfc106d66bd27fa863f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7d47a0b1fe9f13e2e47cdfc106d66bd27fa863f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2490b59da0c13818346890dac087238532df59a2", "comment_count": 13, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2490b59da0c13818346890dac087238532df59a2", "html_url": "https://github.com/rust-lang/rust/commit/2490b59da0c13818346890dac087238532df59a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2490b59da0c13818346890dac087238532df59a2/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a1e486b2acbf86a5768ab6cc05ff0eca8af3e1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a1e486b2acbf86a5768ab6cc05ff0eca8af3e1f", "html_url": "https://github.com/rust-lang/rust/commit/7a1e486b2acbf86a5768ab6cc05ff0eca8af3e1f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "5a2b74e802116f0f0b461d85f1f7939a66df2f17", "filename": "src/libextra/arc.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2490b59da0c13818346890dac087238532df59a2/src%2Flibextra%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2490b59da0c13818346890dac087238532df59a2/src%2Flibextra%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Farc.rs?ref=2490b59da0c13818346890dac087238532df59a2", "patch": "@@ -51,7 +51,7 @@ use std::borrow;\n /// As sync::condvar, a mechanism for unlock-and-descheduling and signaling.\n pub struct Condvar<'a> {\n     priv is_mutex: bool,\n-    priv failed: &'a mut bool,\n+    priv failed: &'a bool,\n     priv cond: &'a sync::Condvar<'a>\n }\n \n@@ -242,7 +242,7 @@ impl<T:Send> MutexArc<T> {\n             let _z = PoisonOnFail::new(&mut (*state).failed);\n             blk(&mut (*state).data,\n                 &Condvar {is_mutex: true,\n-                          failed: &mut (*state).failed,\n+                          failed: &(*state).failed,\n                           cond: cond })\n         })\n     }\n@@ -414,7 +414,7 @@ impl<T:Freeze + Send> RWArc<T> {\n                 let _z = PoisonOnFail::new(&mut (*state).failed);\n                 blk(&mut (*state).data,\n                     &Condvar {is_mutex: false,\n-                              failed: &mut (*state).failed,\n+                              failed: &(*state).failed,\n                               cond: cond})\n             })\n         }\n@@ -567,7 +567,7 @@ impl<'a, T:Freeze + Send> RWWriteMode<'a, T> {\n                     unsafe {\n                         let cvar = Condvar {\n                             is_mutex: false,\n-                            failed: &mut *poison.flag,\n+                            failed: &*poison.flag,\n                             cond: cond\n                         };\n                         blk(data, &cvar)"}]}