{"sha": "b6be83885f26c02888b17cdca78edb8d125e36cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2YmU4Mzg4NWYyNmMwMjg4OGIxN2NkY2E3OGVkYjhkMTI1ZTM2Y2I=", "commit": {"author": {"name": "Rob Arnold", "email": "robarnold@cs.cmu.edu", "date": "2011-08-04T03:33:22Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-05T18:57:06Z"}, "message": "Log tags in memory_region::{free,realloc}\n\nMake this useful and consistent with the destructor.", "tree": {"sha": "38ac6a0e5a7d351d1d76d6a19497330e737c4101", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38ac6a0e5a7d351d1d76d6a19497330e737c4101"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6be83885f26c02888b17cdca78edb8d125e36cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6be83885f26c02888b17cdca78edb8d125e36cb", "html_url": "https://github.com/rust-lang/rust/commit/b6be83885f26c02888b17cdca78edb8d125e36cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6be83885f26c02888b17cdca78edb8d125e36cb/comments", "author": {"login": "robarnold", "id": 326113, "node_id": "MDQ6VXNlcjMyNjExMw==", "avatar_url": "https://avatars.githubusercontent.com/u/326113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robarnold", "html_url": "https://github.com/robarnold", "followers_url": "https://api.github.com/users/robarnold/followers", "following_url": "https://api.github.com/users/robarnold/following{/other_user}", "gists_url": "https://api.github.com/users/robarnold/gists{/gist_id}", "starred_url": "https://api.github.com/users/robarnold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robarnold/subscriptions", "organizations_url": "https://api.github.com/users/robarnold/orgs", "repos_url": "https://api.github.com/users/robarnold/repos", "events_url": "https://api.github.com/users/robarnold/events{/privacy}", "received_events_url": "https://api.github.com/users/robarnold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd7ffd5ac27aa131a858a8a4954c545ece48644b", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd7ffd5ac27aa131a858a8a4954c545ece48644b", "html_url": "https://github.com/rust-lang/rust/commit/fd7ffd5ac27aa131a858a8a4954c545ece48644b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "1d49fb6114eff6743704087cff919d37d0ab3b61", "filename": "src/rt/memory_region.cpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b6be83885f26c02888b17cdca78edb8d125e36cb/src%2Frt%2Fmemory_region.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b6be83885f26c02888b17cdca78edb8d125e36cb/src%2Frt%2Fmemory_region.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmemory_region.cpp?ref=b6be83885f26c02888b17cdca78edb8d125e36cb", "patch": "@@ -42,8 +42,8 @@ void memory_region::free(void *mem) {\n     assert(alloc->magic == MAGIC);\n #ifdef TRACK_ALLOCATIONS\n     if (_allocation_list[alloc->index] != alloc) {\n-        printf(\"free: ptr 0x%\" PRIxPTR \" is not in allocation_list\\n\",\n-               (uintptr_t) mem);\n+        printf(\"free: ptr 0x%\" PRIxPTR \" (%s) is not in allocation_list\\n\",\n+               (uintptr_t) &alloc->data, alloc->tag);\n         _srv->fatal(\"not in allocation_list\", __FILE__, __LINE__, \"\");\n     }\n     else {\n@@ -73,8 +73,8 @@ memory_region::realloc(void *mem, size_t size) {\n     if (_allocation_list[newMem->index] != alloc) {\n         printf(\"at index %d, found %p, expected %p\\n\",\n                alloc->index, _allocation_list[alloc->index], alloc);\n-        printf(\"realloc: ptr 0x%\" PRIxPTR \" is not in allocation_list\\n\",\n-            (uintptr_t) mem);\n+        printf(\"realloc: ptr 0x%\" PRIxPTR \" (%s) is not in allocation_list\\n\",\n+            (uintptr_t) &alloc->data, alloc->tag);\n         _srv->fatal(\"not in allocation_list\", __FILE__, __LINE__, \"\");\n     }\n     else {"}]}