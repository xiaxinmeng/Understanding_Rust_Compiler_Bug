{"sha": "83675895af7c6af80cc8a4f5cec4e565dc829fca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNjc1ODk1YWY3YzZhZjgwY2M4YTRmNWNlYzRlNTY1ZGM4MjlmY2E=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-11T05:58:30Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-11T05:58:30Z"}, "message": "libcore: Fix windows bustage. rs=bustage", "tree": {"sha": "ff40ac65d6ce8605b8636f53a4bf1b5cdd6f5b1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff40ac65d6ce8605b8636f53a4bf1b5cdd6f5b1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83675895af7c6af80cc8a4f5cec4e565dc829fca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83675895af7c6af80cc8a4f5cec4e565dc829fca", "html_url": "https://github.com/rust-lang/rust/commit/83675895af7c6af80cc8a4f5cec4e565dc829fca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83675895af7c6af80cc8a4f5cec4e565dc829fca/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b71381dcc9c7393dec2f45267c538ff126893120", "url": "https://api.github.com/repos/rust-lang/rust/commits/b71381dcc9c7393dec2f45267c538ff126893120", "html_url": "https://github.com/rust-lang/rust/commit/b71381dcc9c7393dec2f45267c538ff126893120"}], "stats": {"total": 38, "additions": 20, "deletions": 18}, "files": [{"sha": "ec31cb5c46b2d4258761a572fa1697f9f7fb4b20", "filename": "src/libcore/os.rs", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/83675895af7c6af80cc8a4f5cec4e565dc829fca/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83675895af7c6af80cc8a4f5cec4e565dc829fca/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=83675895af7c6af80cc8a4f5cec4e565dc829fca", "patch": "@@ -106,27 +106,29 @@ pub mod win32 {\n \n     pub fn fill_utf16_buf_and_decode(f: fn(*mut u16, DWORD) -> DWORD)\n         -> Option<~str> {\n-        let mut n = tmpbuf_sz as DWORD;\n-        let mut res = None;\n-        let mut done = false;\n-        while !done {\n-            let buf = vec::to_mut(vec::from_elem(n as uint, 0u16));\n-            do vec::as_mut_buf(buf) |b, _sz| {\n-                let k : DWORD = f(b, tmpbuf_sz as DWORD);\n-                if k == (0 as DWORD) {\n-                    done = true;\n-                } else if (k == n &&\n-                           libc::GetLastError() ==\n-                           libc::ERROR_INSUFFICIENT_BUFFER as DWORD) {\n-                    n *= (2 as DWORD);\n-                } else {\n-                    let sub = vec::slice(buf, 0u, k as uint);\n-                    res = option::Some(str::from_utf16(sub));\n-                    done = true;\n+        unsafe {\n+            let mut n = tmpbuf_sz as DWORD;\n+            let mut res = None;\n+            let mut done = false;\n+            while !done {\n+                let buf = vec::to_mut(vec::from_elem(n as uint, 0u16));\n+                do vec::as_mut_buf(buf) |b, _sz| {\n+                    let k : DWORD = f(b, tmpbuf_sz as DWORD);\n+                    if k == (0 as DWORD) {\n+                        done = true;\n+                    } else if (k == n &&\n+                               libc::GetLastError() ==\n+                               libc::ERROR_INSUFFICIENT_BUFFER as DWORD) {\n+                        n *= (2 as DWORD);\n+                    } else {\n+                        let sub = vec::slice(buf, 0u, k as uint);\n+                        res = option::Some(str::from_utf16(sub));\n+                        done = true;\n+                    }\n                 }\n             }\n+            return res;\n         }\n-        return res;\n     }\n \n     pub fn as_utf16_p<T>(s: &str, f: fn(*u16) -> T) -> T {"}]}