{"sha": "b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNDRhMmRkYWE1YmJjN2ViMGI1MGMwMThlMGU1NzhjMGIyMzAyODM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-12T11:52:05Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-17T15:33:47Z"}, "message": "make sure subcrate tests have the right cwd", "tree": {"sha": "74cda075f5f655955aac9dc90a9e669d4753627b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74cda075f5f655955aac9dc90a9e669d4753627b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "html_url": "https://github.com/rust-lang/rust/commit/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c99fb102b8db55c09400c46d097d8fbb9dcde580", "url": "https://api.github.com/repos/rust-lang/rust/commits/c99fb102b8db55c09400c46d097d8fbb9dcde580", "html_url": "https://github.com/rust-lang/rust/commit/c99fb102b8db55c09400c46d097d8fbb9dcde580"}], "stats": {"total": 109, "additions": 66, "deletions": 43}, "files": [{"sha": "6654de10abffffa33fff3b49b298c1e288d98b28", "filename": "README.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "patch": "@@ -244,6 +244,10 @@ different Miri binaries, and as such worth documenting:\n * `MIRI_BE_RUSTC` when set to any value tells the Miri driver to actually not\n   interpret the code but compile it like rustc would. This is useful to be sure\n   that the compiled `rlib`s are compatible with Miri.\n+* `MIRI_CWD` when set to any value tells the Miri driver to change to the given\n+  directory after loading all the source files, but before commencing\n+  interpretation. This is useful if the interpreted program wants a different\n+  working directory at run-time than at build-time.\n \n ## Miri `extern` functions\n "}, {"sha": "a4898e1a2cffba26ea7a0b3ce6041a9ca89d1ef1", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "patch": "@@ -43,14 +43,17 @@ struct CrateRunInfo {\n     args: Vec<String>,\n     /// The environment.\n     env: Vec<(OsString, OsString)>,\n+    /// The current working directory.\n+    current_dir: OsString,\n }\n \n impl CrateRunInfo {\n     /// Gather all the information we need.\n     fn collect(args: env::Args) -> Self {\n         let args = args.collect();\n         let env = env::vars_os().collect();\n-        CrateRunInfo { args, env }\n+        let current_dir = env::current_dir().unwrap().into_os_string();\n+        CrateRunInfo { args, env, current_dir }\n     }\n \n     fn store(&self, filename: &Path) {\n@@ -672,6 +675,11 @@ fn phase_cargo_runner(binary: &Path, binary_args: env::Args) {\n     cmd.arg(\"--\");\n     cmd.args(binary_args);\n \n+    // Make sure we use the build-time working directory for interpreting Miri/rustc arguments.\n+    // But then we need to switch to the run-time one, which we instruct Miri do do by setting `MIRI_CWD`.\n+    cmd.current_dir(info.current_dir);\n+    cmd.env(\"MIRI_CWD\", env::current_dir().unwrap());\n+\n     // Run it.\n     if verbose {\n         eprintln!(\"[cargo-miri runner] {:?}\", cmd);"}, {"sha": "4363f9a150a78a9867aafa1f3a8f0404e463e841", "filename": "src/bin/miri.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "patch": "@@ -45,6 +45,11 @@ impl rustc_driver::Callbacks for MiriCompilerCalls {\n             // Add filename to `miri` arguments.\n             config.args.insert(0, compiler.input().filestem().to_string());\n \n+            // Adjust working directory for interpretation.\n+            if let Some(cwd) = env::var_os(\"MIRI_CWD\") {\n+                env::set_current_dir(cwd).unwrap();\n+            }\n+\n             if let Some(return_code) = miri::eval_main(tcx, entry_def_id.to_def_id(), config) {\n                 std::process::exit(\n                     i32::try_from(return_code).expect(\"Return value was too large!\"),"}, {"sha": "4900ce9675d6fdc278c3c12a8bf18e3320400c35", "filename": "test-cargo-miri/Cargo.toml", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2FCargo.toml?ref=b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "patch": "@@ -16,7 +16,3 @@ num_cpus = \"1.10.1\"\n \n [lib]\n test = false # test that this is respected (will show in the output)\n-\n-[[test]]\n-name = \"no-harness\"\n-harness = false"}, {"sha": "78b10d1f2bfbbd576ab3d740979a0bd8e9fab44f", "filename": "test-cargo-miri/run-test.py", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Frun-test.py", "raw_url": "https://github.com/rust-lang/rust/raw/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Frun-test.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Frun-test.py?ref=b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "patch": "@@ -50,7 +50,7 @@ def test(name, cmd, stdout_ref, stderr_ref, stdin=b'', env={}):\n         fail(\"stderr does not match reference\")\n \n def test_cargo_miri_run():\n-    test(\"`cargo miri run` (without isolation)\",\n+    test(\"`cargo miri run` (no isolation)\",\n         cargo_miri(\"run\"),\n         \"stdout.ref1\", \"stderr.ref1\",\n         stdin=b'12\\n21\\n',\n@@ -61,9 +61,9 @@ def test_cargo_miri_run():\n     )\n     test(\"`cargo miri run` (with arguments and target)\",\n         cargo_miri(\"run\") + [\"--bin\", \"cargo-miri-test\", \"--\", \"hello world\", '\"hello world\"'],\n-        \"stdout.ref2\", \"stderr.ref2\"\n+        \"stdout.ref2\", \"stderr.ref2\",\n     )\n-    test(\"`cargo miri run` (subcrate)\",\n+    test(\"`cargo miri run` (subcrate, no ioslation)\",\n         cargo_miri(\"run\") + [\"-p\", \"subcrate\"],\n         \"stdout.ref3\", \"stderr.ref3\",\n         env={'MIRIFLAGS': \"-Zmiri-disable-isolation\"},\n@@ -76,25 +76,30 @@ def test_cargo_miri_test():\n \n     test(\"`cargo miri test`\",\n         cargo_miri(\"test\"),\n-        \"test.stdout.ref1\",rustdoc_ref,\n+        \"test.stdout.ref1\", rustdoc_ref,\n         env={'MIRIFLAGS': \"-Zmiri-seed=feed\"},\n     )\n+    test(\"`cargo miri test` (no isolation)\",\n+        cargo_miri(\"test\"),\n+        \"test.stdout.ref1\", rustdoc_ref,\n+        env={'MIRIFLAGS': \"-Zmiri-disable-isolation\"},\n+    )\n     test(\"`cargo miri test` (with filter)\",\n         cargo_miri(\"test\") + [\"--\", \"--format=pretty\", \"le1\"],\n-        \"test.stdout.ref2\", rustdoc_ref\n-    )\n-    test(\"`cargo miri test` (without isolation)\",\n-        cargo_miri(\"test\") + [\"--\", \"--format=pretty\", \"num_cpus\"],\n-        \"test.stdout.ref3\", rustdoc_ref,\n-        env={'MIRIFLAGS': \"-Zmiri-disable-isolation\"},\n+        \"test.stdout.ref2\", rustdoc_ref,\n     )\n     test(\"`cargo miri test` (test target)\",\n         cargo_miri(\"test\") + [\"--test\", \"test\", \"--\", \"--format=pretty\"],\n-        \"test.stdout.ref4\", \"test.stderr.ref2\"\n+        \"test.stdout.ref3\", \"test.stderr.ref2\",\n     )\n     test(\"`cargo miri test` (bin target)\",\n         cargo_miri(\"test\") + [\"--bin\", \"cargo-miri-test\", \"--\", \"--format=pretty\"],\n-        \"test.stdout.ref5\", \"test.stderr.ref2\"\n+        \"test.stdout.ref4\", \"test.stderr.ref2\",\n+    )\n+    test(\"`cargo miri test` (subcrate)\",\n+        cargo_miri(\"test\") + [\"-p\", \"subcrate\"],\n+        \"test.stdout.ref5\", \"test.stderr.ref2\",\n+        env={'MIRIFLAGS': \"-Zmiri-disable-isolation\"},\n     )\n \n os.chdir(os.path.dirname(os.path.realpath(__file__)))"}, {"sha": "78552e6aedf07315395e1dd69d8a56e6d307f042", "filename": "test-cargo-miri/subcrate/Cargo.toml", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Fsubcrate%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Fsubcrate%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Fsubcrate%2FCargo.toml?ref=b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "patch": "@@ -7,3 +7,8 @@ edition = \"2018\"\n [[bin]]\n name = \"subcrate\"\n path = \"main.rs\"\n+\n+[[test]]\n+name = \"subtest\"\n+path = \"test.rs\"\n+harness = false"}, {"sha": "16c63411ce84e3227b72ef4f7ccca70c9fac06f2", "filename": "test-cargo-miri/subcrate/test.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Fsubcrate%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Fsubcrate%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Fsubcrate%2Ftest.rs?ref=b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "patch": "@@ -0,0 +1,11 @@\n+use std::env;\n+use std::path::PathBuf;\n+\n+fn main() {\n+    println!(\"subcrate testing\");\n+\n+    let env_dir = env::current_dir().unwrap();\n+    let crate_dir = PathBuf::from(env::var_os(\"CARGO_MANIFEST_DIR\").unwrap());\n+    // CWD should be crate root.\n+    assert_eq!(env_dir, crate_dir);\n+}"}, {"sha": "1eb18fe88768a258571ebd9d284a3ee1fac29c1d", "filename": "test-cargo-miri/test.stdout.ref1", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Ftest.stdout.ref1", "raw_url": "https://github.com/rust-lang/rust/raw/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Ftest.stdout.ref1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Ftest.stdout.ref1?ref=b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "patch": "@@ -3,7 +3,6 @@ running 1 test\n .\n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n \n-no-harness test\n \n running 8 tests\n ..i....."}, {"sha": "d426bdf6db63254f06e1183777a466460e3749c1", "filename": "test-cargo-miri/test.stdout.ref2", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Ftest.stdout.ref2", "raw_url": "https://github.com/rust-lang/rust/raw/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Ftest.stdout.ref2", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Ftest.stdout.ref2?ref=b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "patch": "@@ -3,7 +3,6 @@ running 0 tests\n \n test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out\n \n-no-harness test\n \n running 1 test\n test simple1 ... ok"}, {"sha": "32bbcf9bf275b8cefc82b27b4a4fab0c96827aa2", "filename": "test-cargo-miri/test.stdout.ref3", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Ftest.stdout.ref3", "raw_url": "https://github.com/rust-lang/rust/raw/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Ftest.stdout.ref3", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Ftest.stdout.ref3?ref=b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "patch": "@@ -1,12 +1,13 @@\n \n-running 0 tests\n-\n-test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out\n-\n-no-harness test\n-\n-running 1 test\n+running 8 tests\n+test cargo_env ... ok\n+test do_panic ... ok\n+test does_not_work_on_miri ... ignored\n+test entropy_rng ... ok\n+test fail_index_check ... ok\n test num_cpus ... ok\n+test simple1 ... ok\n+test simple2 ... ok\n \n-test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 7 filtered out\n+test result: ok. 7 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out\n "}, {"sha": "4caa30a7f0e50418166470f1e4cd074dc76c1eea", "filename": "test-cargo-miri/test.stdout.ref4", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Ftest.stdout.ref4", "raw_url": "https://github.com/rust-lang/rust/raw/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Ftest.stdout.ref4", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Ftest.stdout.ref4?ref=b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "patch": "@@ -1,13 +1,6 @@\n \n-running 8 tests\n-test cargo_env ... ok\n-test do_panic ... ok\n-test does_not_work_on_miri ... ignored\n-test entropy_rng ... ok\n-test fail_index_check ... ok\n-test num_cpus ... ok\n-test simple1 ... ok\n-test simple2 ... ok\n+running 1 test\n+test test::rng ... ok\n \n-test result: ok. 7 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out\n+test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n "}, {"sha": "67e5c7f8e920cec3e214cc178b9652806d0b64bb", "filename": "test-cargo-miri/test.stdout.ref5", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Ftest.stdout.ref5", "raw_url": "https://github.com/rust-lang/rust/raw/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283/test-cargo-miri%2Ftest.stdout.ref5", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Ftest.stdout.ref5?ref=b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "patch": "@@ -1,6 +1,6 @@\n \n-running 1 test\n-test test::rng ... ok\n+running 0 tests\n \n-test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n+test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n \n+subcrate testing"}, {"sha": "8d1c5c3462660b17c28703cd5c43f5118b1a373b", "filename": "test-cargo-miri/tests/no-harness.rs", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c99fb102b8db55c09400c46d097d8fbb9dcde580/test-cargo-miri%2Ftests%2Fno-harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c99fb102b8db55c09400c46d097d8fbb9dcde580/test-cargo-miri%2Ftests%2Fno-harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Ftests%2Fno-harness.rs?ref=c99fb102b8db55c09400c46d097d8fbb9dcde580", "patch": "@@ -1,3 +0,0 @@\n-fn main() {\n-    println!(\"no-harness test\");\n-}"}]}