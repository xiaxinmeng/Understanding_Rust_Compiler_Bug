{"sha": "b20d4c155d2fe3a8391f86dcf9a8c49e17188703", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMGQ0YzE1NWQyZmUzYTgzOTFmODZkY2Y5YThjNDllMTcxODg3MDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-05T13:14:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-05T13:14:26Z"}, "message": "Auto merge of #6296 - flip1995:rustup, r=flip1995\n\nRustup\n\nr? `@ghost`\n\nchangelog: none", "tree": {"sha": "57a3b9fc1169f9ba0c4644d6e574e4d4414cb104", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57a3b9fc1169f9ba0c4644d6e574e4d4414cb104"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b20d4c155d2fe3a8391f86dcf9a8c49e17188703", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b20d4c155d2fe3a8391f86dcf9a8c49e17188703", "html_url": "https://github.com/rust-lang/rust/commit/b20d4c155d2fe3a8391f86dcf9a8c49e17188703", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b20d4c155d2fe3a8391f86dcf9a8c49e17188703/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d2f1aef02d052b777e70fad48df2139263bb163", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d2f1aef02d052b777e70fad48df2139263bb163", "html_url": "https://github.com/rust-lang/rust/commit/0d2f1aef02d052b777e70fad48df2139263bb163"}, {"sha": "0c1531a5c4269b0d0bc7cff53420f936b42ce1ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c1531a5c4269b0d0bc7cff53420f936b42ce1ab", "html_url": "https://github.com/rust-lang/rust/commit/0c1531a5c4269b0d0bc7cff53420f936b42ce1ab"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "d2dcb3e5c4644f4740119353bab213408e8a7b9d", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b20d4c155d2fe3a8391f86dcf9a8c49e17188703/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20d4c155d2fe3a8391f86dcf9a8c49e17188703/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=b20d4c155d2fe3a8391f86dcf9a8c49e17188703", "patch": "@@ -115,7 +115,7 @@ fn is_argument(map: rustc_middle::hir::map::Map<'_>, id: HirId) -> bool {\n }\n \n impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n-    fn consume(&mut self, cmt: &PlaceWithHirId<'tcx>, mode: ConsumeMode) {\n+    fn consume(&mut self, cmt: &PlaceWithHirId<'tcx>, _: HirId, mode: ConsumeMode) {\n         if cmt.place.projections.is_empty() {\n             if let PlaceBase::Local(lid) = cmt.place.base {\n                 if let ConsumeMode::Move = mode {\n@@ -135,15 +135,15 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n         }\n     }\n \n-    fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, _: ty::BorrowKind) {\n+    fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, _: HirId, _: ty::BorrowKind) {\n         if cmt.place.projections.is_empty() {\n             if let PlaceBase::Local(lid) = cmt.place.base {\n                 self.set.remove(&lid);\n             }\n         }\n     }\n \n-    fn mutate(&mut self, cmt: &PlaceWithHirId<'tcx>) {\n+    fn mutate(&mut self, cmt: &PlaceWithHirId<'tcx>, _: HirId) {\n         if cmt.place.projections.is_empty() {\n             let map = &self.cx.tcx.hir();\n             if is_argument(*map, cmt.hir_id) {"}, {"sha": "32c2562ee95b447af8e10e4b07059d717c831b40", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b20d4c155d2fe3a8391f86dcf9a8c49e17188703/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20d4c155d2fe3a8391f86dcf9a8c49e17188703/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=b20d4c155d2fe3a8391f86dcf9a8c49e17188703", "patch": "@@ -1957,28 +1957,28 @@ struct MutatePairDelegate<'a, 'tcx> {\n }\n \n impl<'tcx> Delegate<'tcx> for MutatePairDelegate<'_, 'tcx> {\n-    fn consume(&mut self, _: &PlaceWithHirId<'tcx>, _: ConsumeMode) {}\n+    fn consume(&mut self, _: &PlaceWithHirId<'tcx>, _: HirId, _: ConsumeMode) {}\n \n-    fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, bk: ty::BorrowKind) {\n+    fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, diag_expr_id: HirId, bk: ty::BorrowKind) {\n         if let ty::BorrowKind::MutBorrow = bk {\n             if let PlaceBase::Local(id) = cmt.place.base {\n                 if Some(id) == self.hir_id_low {\n-                    self.span_low = Some(self.cx.tcx.hir().span(cmt.hir_id))\n+                    self.span_low = Some(self.cx.tcx.hir().span(diag_expr_id))\n                 }\n                 if Some(id) == self.hir_id_high {\n-                    self.span_high = Some(self.cx.tcx.hir().span(cmt.hir_id))\n+                    self.span_high = Some(self.cx.tcx.hir().span(diag_expr_id))\n                 }\n             }\n         }\n     }\n \n-    fn mutate(&mut self, cmt: &PlaceWithHirId<'tcx>) {\n+    fn mutate(&mut self, cmt: &PlaceWithHirId<'tcx>, diag_expr_id: HirId) {\n         if let PlaceBase::Local(id) = cmt.place.base {\n             if Some(id) == self.hir_id_low {\n-                self.span_low = Some(self.cx.tcx.hir().span(cmt.hir_id))\n+                self.span_low = Some(self.cx.tcx.hir().span(diag_expr_id))\n             }\n             if Some(id) == self.hir_id_high {\n-                self.span_high = Some(self.cx.tcx.hir().span(cmt.hir_id))\n+                self.span_high = Some(self.cx.tcx.hir().span(diag_expr_id))\n             }\n         }\n     }"}, {"sha": "1d0e230c6a7775413e1f62fa29417f8c6e3b9e73", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b20d4c155d2fe3a8391f86dcf9a8c49e17188703/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20d4c155d2fe3a8391f86dcf9a8c49e17188703/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=b20d4c155d2fe3a8391f86dcf9a8c49e17188703", "patch": "@@ -325,13 +325,13 @@ impl MovedVariablesCtxt {\n }\n \n impl<'tcx> euv::Delegate<'tcx> for MovedVariablesCtxt {\n-    fn consume(&mut self, cmt: &euv::PlaceWithHirId<'tcx>, mode: euv::ConsumeMode) {\n+    fn consume(&mut self, cmt: &euv::PlaceWithHirId<'tcx>, _: HirId, mode: euv::ConsumeMode) {\n         if let euv::ConsumeMode::Move = mode {\n             self.move_common(cmt);\n         }\n     }\n \n-    fn borrow(&mut self, _: &euv::PlaceWithHirId<'tcx>, _: ty::BorrowKind) {}\n+    fn borrow(&mut self, _: &euv::PlaceWithHirId<'tcx>, _: HirId, _: ty::BorrowKind) {}\n \n-    fn mutate(&mut self, _: &euv::PlaceWithHirId<'tcx>) {}\n+    fn mutate(&mut self, _: &euv::PlaceWithHirId<'tcx>, _: HirId) {}\n }"}, {"sha": "a7d0ea6ccfbb24e234b23956ef92fc9ff7604320", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b20d4c155d2fe3a8391f86dcf9a8c49e17188703/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20d4c155d2fe3a8391f86dcf9a8c49e17188703/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=b20d4c155d2fe3a8391f86dcf9a8c49e17188703", "patch": "@@ -68,15 +68,15 @@ impl<'tcx> MutVarsDelegate {\n }\n \n impl<'tcx> Delegate<'tcx> for MutVarsDelegate {\n-    fn consume(&mut self, _: &PlaceWithHirId<'tcx>, _: ConsumeMode) {}\n+    fn consume(&mut self, _: &PlaceWithHirId<'tcx>, _: HirId, _: ConsumeMode) {}\n \n-    fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, bk: ty::BorrowKind) {\n+    fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, _: HirId, bk: ty::BorrowKind) {\n         if let ty::BorrowKind::MutBorrow = bk {\n             self.update(&cmt)\n         }\n     }\n \n-    fn mutate(&mut self, cmt: &PlaceWithHirId<'tcx>) {\n+    fn mutate(&mut self, cmt: &PlaceWithHirId<'tcx>, _: HirId) {\n         self.update(&cmt)\n     }\n }"}]}