{"sha": "5ddc615a40d1f33ab23899a4fe63856be9f96435", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZGM2MTVhNDBkMWYzM2FiMjM4OTlhNGZlNjM4NTZiZTlmOTY0MzU=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-09T16:10:50Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-12T13:30:26Z"}, "message": "Add missing types to eq_ty", "tree": {"sha": "966189dd5b429ce33d99e20d5c28df1faa220e90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/966189dd5b429ce33d99e20d5c28df1faa220e90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ddc615a40d1f33ab23899a4fe63856be9f96435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ddc615a40d1f33ab23899a4fe63856be9f96435", "html_url": "https://github.com/rust-lang/rust/commit/5ddc615a40d1f33ab23899a4fe63856be9f96435", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ddc615a40d1f33ab23899a4fe63856be9f96435/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee830ba55e12b9f360b41768078db805332dbea4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee830ba55e12b9f360b41768078db805332dbea4", "html_url": "https://github.com/rust-lang/rust/commit/ee830ba55e12b9f360b41768078db805332dbea4"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "1ccb411b775c98dc8c728383cd1dbed3a43cb9c4", "filename": "src/utils/hir.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ddc615a40d1f33ab23899a4fe63856be9f96435/src%2Futils%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ddc615a40d1f33ab23899a4fe63856be9f96435/src%2Futils%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils%2Fhir.rs?ref=5ddc615a40d1f33ab23899a4fe63856be9f96435", "patch": "@@ -218,13 +218,17 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n     fn eq_ty(&self, left: &Ty, right: &Ty) -> bool {\n         match (&left.node, &right.node) {\n             (&TyVec(ref lvec), &TyVec(ref rvec)) => self.eq_ty(lvec, rvec),\n+            (&TyFixedLengthVec(ref lt, ref ll), &TyFixedLengthVec(ref rt, ref rl)) => {\n+                self.eq_ty(lt, rt) && self.eq_expr(ll, rl)\n+            }\n             (&TyPtr(ref lmut), &TyPtr(ref rmut)) => lmut.mutbl == rmut.mutbl && self.eq_ty(&*lmut.ty, &*rmut.ty),\n             (&TyRptr(_, ref lrmut), &TyRptr(_, ref rrmut)) => {\n                 lrmut.mutbl == rrmut.mutbl && self.eq_ty(&*lrmut.ty, &*rrmut.ty)\n             }\n             (&TyPath(ref lq, ref lpath), &TyPath(ref rq, ref rpath)) => {\n                 both(lq, rq, |l, r| self.eq_qself(l, r)) && self.eq_path(lpath, rpath)\n             }\n+            (&TyTup(ref l), &TyTup(ref r)) => over(l, r, |l, r| self.eq_ty(l, r)),\n             (&TyInfer, &TyInfer) => true,\n             _ => false,\n         }"}]}