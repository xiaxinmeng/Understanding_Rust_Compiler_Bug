{"sha": "484936bbfcb09c357569198f9a5a21deed8dd041", "node_id": "C_kwDOAAsO6NoAKDQ4NDkzNmJiZmNiMDljMzU3NTY5MTk4ZjlhNWEyMWRlZWQ4ZGQwNDE", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-02-21T23:30:59Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-02-21T23:30:59Z"}, "message": "Address review comments", "tree": {"sha": "e6be77915f99939f190ebb65367a2b1117cd1364", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6be77915f99939f190ebb65367a2b1117cd1364"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/484936bbfcb09c357569198f9a5a21deed8dd041", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmIUILMACgkQbQF6ltjm\nwvmDJBAApkGitfKMZSC5V0VgG899Con/TgrJzE4WrCP6OUZW7RKT7hykLV/vOshU\nYoi2mmut3MsoV5kCyL/Lwgdp3Nm+VmDqB1uAxQoEUEBorezQnGtyLPgA1IZ4q0ks\n8iERiO1TaNxx0H3L/uIL2AhdKwo3U1EmDPe/+d3MwG3cBWSDRBAc81jkqh+miz3C\n/ePh7Jf3ggOtmLDswca4kGiFyNP7cVaGPrA7VJoeIwre58Z3uJxusvrPAYn48Zix\nvn0MpGI/aID8T8xVh1uQsBd2P8/1Gk6t0f0qzontY9BhtsUNH/FO2M8AuKtS4FSg\nrsyzkQpWvNMghIXUfAvPI0+umWCEHac4u/zhhdtbRxscgF5dcROPn1/oRIo+iCZo\naFYdXhZaTaHrN4Xfh0E0EA2rRqsFVDyj53kRCilc/5bxbVpnfQZm0nAUkcDHs8uu\n6f4bP4JOn1kqgs9dldzgppQgGGuKhLVK3T0x7HFTZYZbk0XgSUHa9ryJKRUGk20a\nisHcddew0/vSUnJvJ2hkCDRiDryBPUmdgFdajN0jc8EUFvbFMlIVcqeGuqXKUXgU\n9C6xAyryuI1f/bslegDKEu9lMhZb7L9s5KEdPDBw8JjGCdBYau+5DK6FTKgaxEmZ\n+DnXvkfgv3xs2mzTJMOOPx/M6fogni8nNPn9SgIMB72EQileTOQ=\n=NGAO\n-----END PGP SIGNATURE-----", "payload": "tree e6be77915f99939f190ebb65367a2b1117cd1364\nparent 79f2180928982ebd8deb0b39bfa1c1c1dd7a0a59\nauthor Deadbeef <ent3rm4n@gmail.com> 1645486259 +1100\ncommitter Deadbeef <ent3rm4n@gmail.com> 1645486259 +1100\n\nAddress review comments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/484936bbfcb09c357569198f9a5a21deed8dd041", "html_url": "https://github.com/rust-lang/rust/commit/484936bbfcb09c357569198f9a5a21deed8dd041", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/484936bbfcb09c357569198f9a5a21deed8dd041/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79f2180928982ebd8deb0b39bfa1c1c1dd7a0a59", "url": "https://api.github.com/repos/rust-lang/rust/commits/79f2180928982ebd8deb0b39bfa1c1c1dd7a0a59", "html_url": "https://github.com/rust-lang/rust/commit/79f2180928982ebd8deb0b39bfa1c1c1dd7a0a59"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "9faf5431a6ebac5cdd094f1246f6506f96e13d2b", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/484936bbfcb09c357569198f9a5a21deed8dd041/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/484936bbfcb09c357569198f9a5a21deed8dd041/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=484936bbfcb09c357569198f9a5a21deed8dd041", "patch": "@@ -282,18 +282,18 @@ crate fn print_where_clause<'a, 'tcx: 'a>(\n                 match pred {\n                     clean::WherePredicate::BoundPredicate { ty, bounds, bound_params } => {\n                         let bounds = bounds;\n-                        let for_prefix = match bound_params.len() {\n-                            0 => String::new(),\n-                            _ if f.alternate() => {\n-                                format!(\n-                                    \"for&lt;{:#}&gt; \",\n-                                    comma_sep(bound_params.iter().map(|lt| lt.print()), true)\n-                                )\n-                            }\n-                            _ => format!(\n+                        let for_prefix = if bound_params.is_empty() {\n+                            String::new()\n+                        } else if f.alternate() {\n+                            format!(\n+                                \"for&lt;{:#}&gt; \",\n+                                comma_sep(bound_params.iter().map(|lt| lt.print()), true)\n+                            )\n+                        } else {\n+                            format!(\n                                 \"for&lt;{}&gt; \",\n                                 comma_sep(bound_params.iter().map(|lt| lt.print()), true)\n-                            ),\n+                            )\n                         };\n \n                         if f.alternate() {"}]}