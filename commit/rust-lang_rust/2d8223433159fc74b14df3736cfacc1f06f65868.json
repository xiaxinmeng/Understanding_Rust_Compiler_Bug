{"sha": "2d8223433159fc74b14df3736cfacc1f06f65868", "node_id": "C_kwDOAAsO6NoAKDJkODIyMzQzMzE1OWZjNzRiMTRkZjM3MzZjZmFjYzFmMDZmNjU4Njg", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-06-23T20:16:50Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-06-23T20:16:50Z"}, "message": "Remove dead code.", "tree": {"sha": "06d63ed9546cae1266ed93309f7fcb0baac1033b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06d63ed9546cae1266ed93309f7fcb0baac1033b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d8223433159fc74b14df3736cfacc1f06f65868", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d8223433159fc74b14df3736cfacc1f06f65868", "html_url": "https://github.com/rust-lang/rust/commit/2d8223433159fc74b14df3736cfacc1f06f65868", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d8223433159fc74b14df3736cfacc1f06f65868/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02a42ff83d17ccb76ddf6dbaf1a0a56d91edd69c", "url": "https://api.github.com/repos/rust-lang/rust/commits/02a42ff83d17ccb76ddf6dbaf1a0a56d91edd69c", "html_url": "https://github.com/rust-lang/rust/commit/02a42ff83d17ccb76ddf6dbaf1a0a56d91edd69c"}], "stats": {"total": 23, "additions": 1, "deletions": 22}, "files": [{"sha": "62f6a43d1f2581e328d2676ebf5d32df1883b257", "filename": "compiler/rustc_mir_build/src/thir/cx/mod.rs", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2d8223433159fc74b14df3736cfacc1f06f65868/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d8223433159fc74b14df3736cfacc1f06f65868/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fmod.rs?ref=2d8223433159fc74b14df3736cfacc1f06f65868", "patch": "@@ -5,18 +5,15 @@\n use crate::thir::pattern::pat_from_hir;\n use crate::thir::util::UserAnnotatedTyHelpers;\n \n-use rustc_ast as ast;\n use rustc_data_structures::steal::Steal;\n use rustc_errors::ErrorGuaranteed;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_hir::HirId;\n use rustc_hir::Node;\n use rustc_middle::middle::region;\n-use rustc_middle::mir::interpret::{LitToConstError, LitToConstInput};\n-use rustc_middle::mir::ConstantKind;\n use rustc_middle::thir::*;\n-use rustc_middle::ty::{self, RvalueScopes, Ty, TyCtxt};\n+use rustc_middle::ty::{self, RvalueScopes, TyCtxt};\n use rustc_span::Span;\n \n pub(crate) fn thir_body<'tcx>(\n@@ -80,24 +77,6 @@ impl<'tcx> Cx<'tcx> {\n         }\n     }\n \n-    #[instrument(skip(self), level = \"debug\")]\n-    pub(crate) fn const_eval_literal(\n-        &mut self,\n-        lit: &'tcx ast::LitKind,\n-        ty: Ty<'tcx>,\n-        sp: Span,\n-        neg: bool,\n-    ) -> ConstantKind<'tcx> {\n-        match self.tcx.at(sp).lit_to_mir_constant(LitToConstInput { lit, ty, neg }) {\n-            Ok(c) => c,\n-            Err(LitToConstError::Reported) => {\n-                // create a dummy value and continue compiling\n-                ConstantKind::Ty(self.tcx.const_error(ty))\n-            }\n-            Err(LitToConstError::TypeError) => bug!(\"const_eval_literal: had type error\"),\n-        }\n-    }\n-\n     #[tracing::instrument(level = \"debug\", skip(self))]\n     pub(crate) fn pattern_from_hir(&mut self, p: &hir::Pat<'_>) -> Pat<'tcx> {\n         let p = match self.tcx.hir().get(p.hir_id) {"}]}