{"sha": "2290dbb8cc9c72e1b6b64b7325430f031e2cd87b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyOTBkYmI4Y2M5YzcyZTFiNmI2NGI3MzI1NDMwZjAzMWUyY2Q4N2I=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-05T22:31:45Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-07T02:51:19Z"}, "message": "rustc: Avoid 16-byte filenames in rlibs\n\nIn addition to avoiding 16-byte filenames with bytecode files, this commit also\navoids 16-byte filenames with object files pulled in from native libraries.", "tree": {"sha": "9d26468fe10806fd6e28a124da0db6a95c8146dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d26468fe10806fd6e28a124da0db6a95c8146dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2290dbb8cc9c72e1b6b64b7325430f031e2cd87b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2290dbb8cc9c72e1b6b64b7325430f031e2cd87b", "html_url": "https://github.com/rust-lang/rust/commit/2290dbb8cc9c72e1b6b64b7325430f031e2cd87b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2290dbb8cc9c72e1b6b64b7325430f031e2cd87b/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a43af3f84ef97d4d0e5b55c5336a4256bd1ebb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a43af3f84ef97d4d0e5b55c5336a4256bd1ebb7", "html_url": "https://github.com/rust-lang/rust/commit/6a43af3f84ef97d4d0e5b55c5336a4256bd1ebb7"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "4d921fb97dc503f0fe205f43e55ad2d48a5fe777", "filename": "src/librustc/back/archive.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2290dbb8cc9c72e1b6b64b7325430f031e2cd87b/src%2Flibrustc%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2290dbb8cc9c72e1b6b64b7325430f031e2cd87b/src%2Flibrustc%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Farchive.rs?ref=2290dbb8cc9c72e1b6b64b7325430f031e2cd87b", "patch": "@@ -166,6 +166,15 @@ impl<'a> Archive<'a> {\n             if filename.contains(\".SYMDEF\") { continue }\n \n             let filename = format!(\"r-{}-{}\", name, filename);\n+            // LLDB (as mentioned in back::link) crashes on filenames of exactly\n+            // 16 bytes in length. If we're including an object file with\n+            // exactly 16-bytes of characters, give it some prefix so that it's\n+            // not 16 bytes.\n+            let filename = if filename.len() == 16 {\n+                format!(\"lldb-fix-{}\", filename)\n+            } else {\n+                filename\n+            };\n             let new_filename = file.with_filename(filename);\n             try!(fs::rename(file, &new_filename));\n             inputs.push(new_filename);"}, {"sha": "14369c7bbcd23ef4e825f4a129d51098b6bdc7c5", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2290dbb8cc9c72e1b6b64b7325430f031e2cd87b/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2290dbb8cc9c72e1b6b64b7325430f031e2cd87b/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=2290dbb8cc9c72e1b6b64b7325430f031e2cd87b", "patch": "@@ -958,10 +958,11 @@ fn link_rlib<'a>(sess: &'a Session,\n \n             // For LTO purposes, the bytecode of this library is also inserted\n             // into the archive.\n-            // Note that we make sure that the bytecode filename in the archive is always at least\n-            // 16 bytes long by adding a 16 byte extension to it. This is to work around a bug in\n-            // LLDB that would cause it to crash if the name of a file in an archive was exactly\n-            // 16 bytes.\n+            //\n+            // Note that we make sure that the bytecode filename in the archive\n+            // is never exactly 16 bytes long by adding a 16 byte extension to\n+            // it. This is to work around a bug in LLDB that would cause it to\n+            // crash if the name of a file in an archive was exactly 16 bytes.\n             let bc = obj_filename.with_extension(\"bc\");\n             let bc_deflated = obj_filename.with_extension(\"bytecode.deflate\");\n             match fs::File::open(&bc).read_to_end().and_then(|data| {"}]}