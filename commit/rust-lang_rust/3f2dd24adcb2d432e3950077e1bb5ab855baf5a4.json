{"sha": "3f2dd24adcb2d432e3950077e1bb5ab855baf5a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMmRkMjRhZGNiMmQ0MzJlMzk1MDA3N2UxYmI1YWI4NTViYWY1YTQ=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2019-05-22T15:29:36Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2019-05-22T15:29:36Z"}, "message": "these errors can happen after all", "tree": {"sha": "da0b00de21b075d71ab5c26ef8c1c5c6db8413b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da0b00de21b075d71ab5c26ef8c1c5c6db8413b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f2dd24adcb2d432e3950077e1bb5ab855baf5a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f2dd24adcb2d432e3950077e1bb5ab855baf5a4", "html_url": "https://github.com/rust-lang/rust/commit/3f2dd24adcb2d432e3950077e1bb5ab855baf5a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f2dd24adcb2d432e3950077e1bb5ab855baf5a4/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50a0defd5a93523067ef239936cc2e0755220904", "url": "https://api.github.com/repos/rust-lang/rust/commits/50a0defd5a93523067ef239936cc2e0755220904", "html_url": "https://github.com/rust-lang/rust/commit/50a0defd5a93523067ef239936cc2e0755220904"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "e6b49e61937d6aae3e96670b44fd4e72213f2b02", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3f2dd24adcb2d432e3950077e1bb5ab855baf5a4/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f2dd24adcb2d432e3950077e1bb5ab855baf5a4/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=3f2dd24adcb2d432e3950077e1bb5ab855baf5a4", "patch": "@@ -170,9 +170,11 @@ pub fn transcribe(\n                     }\n \n                     LockstepIterSize::Contradiction(ref msg) => {\n-                        // This should never happen because the macro parser should generate\n-                        // properly-sized matches for all meta-vars.\n-                        cx.span_bug(seq.span(), &msg[..]);\n+                        // FIXME: this really ought to be caught at macro definition time... It\n+                        // happens when two meta-variables are used in the same repetition in a\n+                        // sequence, but they come from different sequence matchers and repeat\n+                        // different amounts.\n+                        cx.span_fatal(seq.span(), &msg[..]);\n                     }\n \n                     LockstepIterSize::Constraint(len, _) => {\n@@ -187,9 +189,10 @@ pub fn transcribe(\n                         // Is the repetition empty?\n                         if len == 0 {\n                             if seq.op == quoted::KleeneOp::OneOrMore {\n-                                // This should be impossible because the macro parser would not\n-                                // match the given macro arm.\n-                                cx.span_bug(sp.entire(), \"this must repeat at least once\");\n+                                // FIXME: this really ought to be caught at macro definition\n+                                // time... It happens when the Kleene operator in the matcher and\n+                                // the body for the same meta-variable do not match.\n+                                cx.span_fatal(sp.entire(), \"this must repeat at least once\");\n                             }\n                         } else {\n                             // 0 is the initial counter (we have done 0 repretitions so far). `len`\n@@ -327,8 +330,7 @@ impl LockstepIterSize {\n                 LockstepIterSize::Constraint(r_len, _) if l_len == r_len => self,\n                 LockstepIterSize::Constraint(r_len, r_id) => {\n                     let msg = format!(\n-                        \"inconsistent lockstep iteration: \\\n-                         '{}' has {} items, but '{}' has {}\",\n+                        \"meta-variable `{}` repeats {} times, but `{}` repeats {} times\",\n                         l_id, l_len, r_id, r_len\n                     );\n                     LockstepIterSize::Contradiction(msg)"}]}