{"sha": "be80a79a1ea247a71e5ffa408356b9b72cddb644", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlODBhNzlhMWVhMjQ3YTcxZTVmZmE0MDgzNTZiOWI3MmNkZGI2NDQ=", "commit": {"author": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2018-09-20T07:04:08Z"}, "committer": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2018-11-01T22:15:19Z"}, "message": "Add CoerceSized trait and lang item\n\nThis trait is more-or-less the reverse of CoerceUnsized, and will be\nused for object-safety checks. Receiver types like `Rc` will have to\nimplement `CoerceSized` so that methods that use `Rc<Self>` as the\nreceiver will be considered object-safe.", "tree": {"sha": "54ccfa95c9f9bba137969d387c839b0b4f9e176d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54ccfa95c9f9bba137969d387c839b0b4f9e176d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be80a79a1ea247a71e5ffa408356b9b72cddb644", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be80a79a1ea247a71e5ffa408356b9b72cddb644", "html_url": "https://github.com/rust-lang/rust/commit/be80a79a1ea247a71e5ffa408356b9b72cddb644", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be80a79a1ea247a71e5ffa408356b9b72cddb644/comments", "author": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a920036f4fe6403396ea05e7c70d0d87c769ff0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a920036f4fe6403396ea05e7c70d0d87c769ff0a", "html_url": "https://github.com/rust-lang/rust/commit/a920036f4fe6403396ea05e7c70d0d87c769ff0a"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "bf9775e2ae813ae005c8a2159e34b833c789efd8", "filename": "src/libcore/ops/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/be80a79a1ea247a71e5ffa408356b9b72cddb644/src%2Flibcore%2Fops%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be80a79a1ea247a71e5ffa408356b9b72cddb644/src%2Flibcore%2Fops%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Fmod.rs?ref=be80a79a1ea247a71e5ffa408356b9b72cddb644", "patch": "@@ -201,3 +201,6 @@ pub use self::generator::{Generator, GeneratorState};\n \n #[unstable(feature = \"coerce_unsized\", issue = \"27732\")]\n pub use self::unsize::CoerceUnsized;\n+\n+#[unstable(feature = \"coerce_sized\", issue = \"0\")]\n+pub use self::unsize::CoerceSized;"}, {"sha": "4faace26b02f9ce38b39b04c18b7146ca203db74", "filename": "src/libcore/ops/unsize.rs", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/be80a79a1ea247a71e5ffa408356b9b72cddb644/src%2Flibcore%2Fops%2Funsize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be80a79a1ea247a71e5ffa408356b9b72cddb644/src%2Flibcore%2Fops%2Funsize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Funsize.rs?ref=be80a79a1ea247a71e5ffa408356b9b72cddb644", "patch": "@@ -43,7 +43,7 @@ use marker::Unsize;\n /// [nomicon-coerce]: ../../nomicon/coercions.html\n #[unstable(feature = \"coerce_unsized\", issue = \"27732\")]\n #[lang = \"coerce_unsized\"]\n-pub trait CoerceUnsized<T> {\n+pub trait CoerceUnsized<T: ?Sized> {\n     // Empty.\n }\n \n@@ -77,3 +77,34 @@ impl<T: ?Sized+Unsize<U>, U: ?Sized> CoerceUnsized<*const U> for *mut T {}\n // *const T -> *const U\n #[unstable(feature = \"coerce_unsized\", issue = \"27732\")]\n impl<T: ?Sized+Unsize<U>, U: ?Sized> CoerceUnsized<*const U> for *const T {}\n+\n+\n+/// Pointers to unsized types that can be coerced to a pointer to a sized type,\n+/// as long as pointee is actually a value of that sized type. This is used for\n+/// object safety, to check that a method's receiver type can be coerced from the version\n+///  where `Self = dyn Trait` to the version where `Self = T`, the erased, sized type\n+/// of the underlying object.\n+///\n+/// CoerceSized is implemented for:\n+/// - &[T] is CoerceSized<&[T; N]> for any N\n+/// - &Trait is CoerceSized<&T> for any T: Trait\n+/// - and similarly for &mut T, *const T, *mut T, Box<T>, Rc<T>, Arc<T>\n+#[unstable(feature = \"coerce_sized\", issue = \"0\")]\n+#[cfg_attr(not(stage0), lang = \"coerce_sized\")]\n+pub trait CoerceSized<T> where T: CoerceUnsized<Self> {\n+    // Empty.\n+}\n+\n+// &U -> &T\n+#[unstable(feature = \"coerce_sized\", issue = \"0\")]\n+impl<'a, T: ?Sized+Unsize<U>, U: ?Sized> CoerceSized<&'a T> for &'a U {}\n+// &mut U -> &mut T\n+#[unstable(feature = \"coerce_sized\", issue = \"0\")]\n+impl<'a, T: ?Sized+Unsize<U>, U: ?Sized> CoerceSized<&'a mut T> for &'a mut U {}\n+// *const U -> *const T\n+#[unstable(feature = \"coerce_sized\", issue = \"0\")]\n+impl<T: ?Sized+Unsize<U>, U: ?Sized> CoerceSized<*const T> for *const U {}\n+// *mut U -> *mut T\n+#[unstable(feature = \"coerce_sized\", issue = \"0\")]\n+impl<T: ?Sized+Unsize<U>, U: ?Sized> CoerceSized<*mut T> for *mut U {}\n+"}, {"sha": "67864f67bfc3ae9ee91cd43ed5f452bd03579b34", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be80a79a1ea247a71e5ffa408356b9b72cddb644/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be80a79a1ea247a71e5ffa408356b9b72cddb644/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=be80a79a1ea247a71e5ffa408356b9b72cddb644", "patch": "@@ -271,6 +271,7 @@ language_item_table! {\n     DropTraitLangItem,           \"drop\",               drop_trait,              Target::Trait;\n \n     CoerceUnsizedTraitLangItem,  \"coerce_unsized\",     coerce_unsized_trait,    Target::Trait;\n+    CoerceSizedTraitLangItem,    \"coerce_sized\",       coerce_sized_trait,      Target::Trait;\n \n     AddTraitLangItem,            \"add\",                add_trait,               Target::Trait;\n     SubTraitLangItem,            \"sub\",                sub_trait,               Target::Trait;"}]}