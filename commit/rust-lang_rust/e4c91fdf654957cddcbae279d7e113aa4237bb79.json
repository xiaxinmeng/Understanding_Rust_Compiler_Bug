{"sha": "e4c91fdf654957cddcbae279d7e113aa4237bb79", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0YzkxZmRmNjU0OTU3Y2RkY2JhZTI3OWQ3ZTExM2FhNDIzN2JiNzk=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-13T12:45:34Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-13T13:14:09Z"}, "message": "Properly fill single-variant zero-arg tag values.\n\nCloses #1034. Closes #1035.", "tree": {"sha": "9efc17b3cb8a49e1e08fbf57c558bd4a603bf630", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9efc17b3cb8a49e1e08fbf57c558bd4a603bf630"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4c91fdf654957cddcbae279d7e113aa4237bb79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4c91fdf654957cddcbae279d7e113aa4237bb79", "html_url": "https://github.com/rust-lang/rust/commit/e4c91fdf654957cddcbae279d7e113aa4237bb79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4c91fdf654957cddcbae279d7e113aa4237bb79/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e67c4b2531690bd796b9529af4e90b72faea9d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e67c4b2531690bd796b9529af4e90b72faea9d2", "html_url": "https://github.com/rust-lang/rust/commit/6e67c4b2531690bd796b9529af4e90b72faea9d2"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "944dfa91a96d9b2ba07ec42433f5e33f916e8189", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e4c91fdf654957cddcbae279d7e113aa4237bb79/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4c91fdf654957cddcbae279d7e113aa4237bb79/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=e4c91fdf654957cddcbae279d7e113aa4237bb79", "patch": "@@ -251,13 +251,13 @@ fn type_of_tag(cx: @crate_ctxt, sp: span, did: ast::def_id, t: ty::t)\n     let degen = std::vec::len(ty::tag_variants(cx.tcx, did)) == 1u;\n     if check type_has_static_size(cx, t) {\n         let size = static_size_of_tag(cx, sp, t);\n-        if !degen { ret T_tag(cx.tn, size); }\n-        // LLVM does not like 0-size arrays, apparently\n-        if size == 0u { size = 1u; }\n-        ret T_array(T_i8(), size);\n+        if !degen { T_tag(cx.tn, size) }\n+        else if size == 0u { T_struct([T_int()]) }\n+        else { T_array(T_i8(), size) }\n     }\n     else {\n-        if degen { ret T_i8(); } else { ret T_opaque_tag(cx.tn); }\n+        if degen { T_struct([T_int()]) }\n+        else { T_opaque_tag(cx.tn) }\n     }\n }\n \n@@ -3115,12 +3115,13 @@ fn trans_var(cx: @block_ctxt, sp: span, def: ast::def, id: ast::node_id)\n             let lltagty = type_of_tag(ccx, sp, tid, tag_ty);\n             let bcx = alloc_result.bcx;\n             let lltagptr = PointerCast(bcx, lltagblob, T_ptr(lltagty));\n-            if std::vec::len(ty::tag_variants(ccx.tcx, tid)) != 1u {\n+            let lldiscrimptr = GEP(bcx, lltagptr, [C_int(0), C_int(0)]);\n+            let d = if std::vec::len(ty::tag_variants(ccx.tcx, tid)) != 1u {\n                 let lldiscrim_gv = lookup_discriminant(bcx.fcx.lcx, vid);\n                 let lldiscrim = Load(bcx, lldiscrim_gv);\n-                let lldiscrimptr = GEP(bcx, lltagptr, [C_int(0), C_int(0)]);\n-                Store(bcx, lldiscrim, lldiscrimptr);\n-            }\n+                lldiscrim\n+            } else { C_int(0) };\n+            Store(bcx, d, lldiscrimptr);\n             ret lval_no_env(bcx, lltagptr, temporary);\n           }\n         }"}, {"sha": "d9563dd74c4c82c02d4dd9b29ff3c15112ce369f", "filename": "src/test/run-pass/empty-tag.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e4c91fdf654957cddcbae279d7e113aa4237bb79/src%2Ftest%2Frun-pass%2Fempty-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4c91fdf654957cddcbae279d7e113aa4237bb79/src%2Ftest%2Frun-pass%2Fempty-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fempty-tag.rs?ref=e4c91fdf654957cddcbae279d7e113aa4237bb79", "patch": "@@ -0,0 +1,10 @@\n+tag chan { chan_t; }\n+\n+fn wrapper3(i: chan) {\n+    assert i == chan_t;\n+}\n+\n+fn main() {\n+    let wrapped = bind wrapper3(chan_t);\n+    wrapped();\n+}"}]}