{"sha": "9c33f2c561c77567738ee949d0c39122daec063b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMzNmMmM1NjFjNzc1Njc3MzhlZTk0OWQwYzM5MTIyZGFlYzA2M2I=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-03T02:25:49Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-03T02:25:49Z"}, "message": "rt: Remove lock_and_signal::timed_wait", "tree": {"sha": "5df233be5a6991b68b99b3e7a8322b68ed1fbf03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5df233be5a6991b68b99b3e7a8322b68ed1fbf03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c33f2c561c77567738ee949d0c39122daec063b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c33f2c561c77567738ee949d0c39122daec063b", "html_url": "https://github.com/rust-lang/rust/commit/9c33f2c561c77567738ee949d0c39122daec063b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c33f2c561c77567738ee949d0c39122daec063b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd774fc5fab0791c3463ab192de9e0900904b460", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd774fc5fab0791c3463ab192de9e0900904b460", "html_url": "https://github.com/rust-lang/rust/commit/cd774fc5fab0791c3463ab192de9e0900904b460"}], "stats": {"total": 38, "additions": 2, "deletions": 36}, "files": [{"sha": "a18bc0ea027665a4245e87e5a6f5aa2a677ab252", "filename": "src/rt/sync/lock_and_signal.cpp", "status": "modified", "additions": 2, "deletions": 35, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/9c33f2c561c77567738ee949d0c39122daec063b/src%2Frt%2Fsync%2Flock_and_signal.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/9c33f2c561c77567738ee949d0c39122daec063b/src%2Frt%2Fsync%2Flock_and_signal.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fsync%2Flock_and_signal.cpp?ref=9c33f2c561c77567738ee949d0c39122daec063b", "patch": "@@ -68,50 +68,17 @@ void lock_and_signal::unlock() {\n  * Wait indefinitely until condition is signaled.\n  */\n void lock_and_signal::wait() {\n-    timed_wait(0);\n-}\n-\n-bool lock_and_signal::timed_wait(size_t timeout_in_ms) {\n     assert(lock_held_by_current_thread());\n     _holding_thread = INVALID_THREAD;\n-    bool rv = true;\n #if defined(__WIN32__)\n     LeaveCriticalSection(&_cs);\n-    DWORD timeout = timeout_in_ms == 0 ? INFINITE : timeout_in_ms;\n-    rv = WaitForSingleObject(_event, timeout) != WAIT_TIMEOUT;\n+    WaitForSingleObject(_event, INFINITE);\n     EnterCriticalSection(&_cs);\n     _holding_thread = GetCurrentThreadId();\n #else\n-    if (timeout_in_ms == 0) {\n-        CHECKED(pthread_cond_wait(&_cond, &_mutex));\n-    } else {\n-        timeval time_val;\n-        gettimeofday(&time_val, NULL);\n-        timespec time_spec;\n-        time_spec.tv_sec = time_val.tv_sec + 0;\n-        time_spec.tv_nsec = time_val.tv_usec * 1000 + timeout_in_ms * 1000000;\n-        if(time_spec.tv_nsec >= 1000000000) {\n-            time_spec.tv_sec++;\n-            time_spec.tv_nsec -= 1000000000;\n-        }\n-        int cond_wait_status\n-            = pthread_cond_timedwait(&_cond, &_mutex, &time_spec);\n-        switch(cond_wait_status) {\n-        case 0:\n-            // successfully grabbed the lock.\n-            break;\n-        case ETIMEDOUT:\n-            // Oops, we timed out.\n-            rv = false;\n-            break;\n-        default:\n-            // Error\n-            CHECKED(cond_wait_status);\n-        }\n-    }\n+    CHECKED(pthread_cond_wait(&_cond, &_mutex));\n     _holding_thread = pthread_self();\n #endif\n-    return rv;\n }\n \n /**"}, {"sha": "654731269f1d4388ce68e9be6a58b73572459480", "filename": "src/rt/sync/lock_and_signal.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9c33f2c561c77567738ee949d0c39122daec063b/src%2Frt%2Fsync%2Flock_and_signal.h", "raw_url": "https://github.com/rust-lang/rust/raw/9c33f2c561c77567738ee949d0c39122daec063b/src%2Frt%2Fsync%2Flock_and_signal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fsync%2Flock_and_signal.h?ref=9c33f2c561c77567738ee949d0c39122daec063b", "patch": "@@ -21,7 +21,6 @@ class lock_and_signal {\n     void lock();\n     void unlock();\n     void wait();\n-    bool timed_wait(size_t timeout_in_ns);\n     void signal();\n     void signal_all();\n "}]}