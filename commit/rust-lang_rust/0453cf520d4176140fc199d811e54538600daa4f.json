{"sha": "0453cf520d4176140fc199d811e54538600daa4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NTNjZjUyMGQ0MTc2MTQwZmMxOTlkODExZTU0NTM4NjAwZGFhNGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-03T18:02:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-03T18:02:57Z"}, "message": "Auto merge of #42369 - RalfJung:drop-glue, r=eddyb\n\narray drop glue: avoid using out-of-bounds index lvalues\n\nAvoid using out-of-bounds index lvalues. Miri doesn't like them, and they seem fishy in general.\nInstead, use a pointer cast to compute the address of the beginning, and Offset to compute the end.\n\nCc @arielb1 @nagisa", "tree": {"sha": "8a2829bb1d73726a04ed1d8614ae2a82b3fb91a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a2829bb1d73726a04ed1d8614ae2a82b3fb91a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0453cf520d4176140fc199d811e54538600daa4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0453cf520d4176140fc199d811e54538600daa4f", "html_url": "https://github.com/rust-lang/rust/commit/0453cf520d4176140fc199d811e54538600daa4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0453cf520d4176140fc199d811e54538600daa4f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8dc246dc73cddbad1dee4a8696f8ccc06f12a79", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8dc246dc73cddbad1dee4a8696f8ccc06f12a79", "html_url": "https://github.com/rust-lang/rust/commit/a8dc246dc73cddbad1dee4a8696f8ccc06f12a79"}, {"sha": "763ef816580a31d77c38c0587ab42d00decdae81", "url": "https://api.github.com/repos/rust-lang/rust/commits/763ef816580a31d77c38c0587ab42d00decdae81", "html_url": "https://github.com/rust-lang/rust/commit/763ef816580a31d77c38c0587ab42d00decdae81"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "da7e218439cf0bfe21bef73e70fe8e81faee7f81", "filename": "src/librustc_mir/util/elaborate_drops.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0453cf520d4176140fc199d811e54538600daa4f/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0453cf520d4176140fc199d811e54538600daa4f/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs?ref=0453cf520d4176140fc199d811e54538600daa4f", "patch": "@@ -673,7 +673,7 @@ impl<'l, 'b, 'tcx, D> DropCtxt<'l, 'b, 'tcx, D>\n         debug!(\"drop_loop_pair({:?}, {:?})\", ety, ptr_based);\n         let tcx = self.tcx();\n         let iter_ty = if ptr_based {\n-            tcx.mk_ptr(ty::TypeAndMut { ty: ety, mutbl: hir::Mutability::MutMutable })\n+            tcx.mk_mut_ptr(ety)\n         } else {\n             tcx.types.usize\n         };\n@@ -708,15 +708,20 @@ impl<'l, 'b, 'tcx, D> DropCtxt<'l, 'b, 'tcx, D>\n         let mut drop_block_stmts = vec![];\n         drop_block_stmts.push(self.assign(&length, Rvalue::Len(self.lvalue.clone())));\n         if ptr_based {\n-            // cur = &LV[0];\n-            // end = &LV[len];\n-            drop_block_stmts.push(self.assign(&cur, Rvalue::Ref(\n-                tcx.types.re_erased, BorrowKind::Mut,\n-                self.lvalue.clone().index(zero.clone())\n+            let tmp_ty = tcx.mk_mut_ptr(self.lvalue_ty(self.lvalue));\n+            let tmp = Lvalue::Local(self.new_temp(tmp_ty));\n+            // tmp = &LV;\n+            // cur = tmp as *mut T;\n+            // end = Offset(cur, len);\n+            drop_block_stmts.push(self.assign(&tmp, Rvalue::Ref(\n+                tcx.types.re_erased, BorrowKind::Mut, self.lvalue.clone()\n             )));\n-            drop_block_stmts.push(self.assign(&length_or_end, Rvalue::Ref(\n-                tcx.types.re_erased, BorrowKind::Mut,\n-                self.lvalue.clone().index(Operand::Consume(length.clone()))\n+            drop_block_stmts.push(self.assign(&cur, Rvalue::Cast(\n+                CastKind::Misc, Operand::Consume(tmp.clone()), iter_ty\n+            )));\n+            drop_block_stmts.push(self.assign(&length_or_end,\n+                Rvalue::BinaryOp(BinOp::Offset,\n+                     Operand::Consume(cur.clone()), Operand::Consume(length.clone())\n             )));\n         } else {\n             // index = 0 (length already pushed)"}]}