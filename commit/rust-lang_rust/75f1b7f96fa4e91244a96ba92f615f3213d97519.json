{"sha": "75f1b7f96fa4e91244a96ba92f615f3213d97519", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ZjFiN2Y5NmZhNGU5MTI0NGE5NmJhOTJmNjE1ZjMyMTNkOTc1MTk=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-06-01T01:50:20Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-06-02T00:38:24Z"}, "message": "Add new function hashmap.insert_or_update_with()\n\nfn insert_or_update_with<'a>(&'a mut self,\n                             k: K,\n                             f: &fn(&K, &mut V)) -> &'a V", "tree": {"sha": "72693fb1f25d3d5c8465365e2a7646d4b6c03cd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72693fb1f25d3d5c8465365e2a7646d4b6c03cd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75f1b7f96fa4e91244a96ba92f615f3213d97519", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75f1b7f96fa4e91244a96ba92f615f3213d97519", "html_url": "https://github.com/rust-lang/rust/commit/75f1b7f96fa4e91244a96ba92f615f3213d97519", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75f1b7f96fa4e91244a96ba92f615f3213d97519/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bc950c43c820b0a0cfeede7dcf2d719625dbd90", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bc950c43c820b0a0cfeede7dcf2d719625dbd90", "html_url": "https://github.com/rust-lang/rust/commit/7bc950c43c820b0a0cfeede7dcf2d719625dbd90"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "fb4cab721262a66792265f30fa8ec2a2eca1454b", "filename": "src/libstd/hashmap.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/75f1b7f96fa4e91244a96ba92f615f3213d97519/src%2Flibstd%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75f1b7f96fa4e91244a96ba92f615f3213d97519/src%2Flibstd%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fhashmap.rs?ref=75f1b7f96fa4e91244a96ba92f615f3213d97519", "patch": "@@ -467,6 +467,14 @@ impl<K: Hash + Eq, V> HashMap<K, V> {\n         self.mangle(k, (), |k,_a| f(k), |_k,_v,_a| ())\n     }\n \n+    /// Insert a key-value pair into the map if the key is not already present.\n+    /// Otherwise, modify the existing value for the key.\n+    /// Returns the new or modified value for the key.\n+    pub fn insert_or_update_with<'a>(&'a mut self, k: K, v: V,\n+                                     f: &fn(&K, &mut V)) -> &'a mut V {\n+        self.mangle(k, v, |_k,a| a, |k,v,_a| f(k,v))\n+    }\n+\n     /// Calls a function on each element of a hash map, destroying the hash\n     /// map in the process.\n     pub fn consume(&mut self, f: &fn(K, V)) {\n@@ -758,6 +766,13 @@ mod test_map {\n         assert_eq!(*m.find_or_insert_with(1, |_| 3), 2);\n     }\n \n+    #[test]\n+    fn test_insert_or_update_with() {\n+        let mut m = HashMap::new::<int, int>();\n+        assert_eq!(*m.insert_or_update_with(1, 2, |_,x| *x+=1), 2);\n+        assert_eq!(*m.insert_or_update_with(1, 2, |_,x| *x+=1), 3);\n+    }\n+\n     #[test]\n     fn test_consume() {\n         let mut m = HashMap::new();"}]}