{"sha": "64645865423990935a74abecc576a91f5b89f2cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NjQ1ODY1NDIzOTkwOTM1YTc0YWJlY2M1NzZhOTFmNWI4OWYyY2Q=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-08-30T00:15:45Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:36Z"}, "message": "add explanation to specialization marker", "tree": {"sha": "3659a1e37721276c42ea9ecbd9c60dd127a39ebe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3659a1e37721276c42ea9ecbd9c60dd127a39ebe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64645865423990935a74abecc576a91f5b89f2cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64645865423990935a74abecc576a91f5b89f2cd", "html_url": "https://github.com/rust-lang/rust/commit/64645865423990935a74abecc576a91f5b89f2cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64645865423990935a74abecc576a91f5b89f2cd/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acdd441cc3cc03e7ed2e6e4b26db56b4cb5db7f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/acdd441cc3cc03e7ed2e6e4b26db56b4cb5db7f3", "html_url": "https://github.com/rust-lang/rust/commit/acdd441cc3cc03e7ed2e6e4b26db56b4cb5db7f3"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "2e3f6ec60e5f1c79a3e149b297c1d017dd5439e5", "filename": "library/alloc/src/vec.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64645865423990935a74abecc576a91f5b89f2cd/library%2Falloc%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64645865423990935a74abecc576a91f5b89f2cd/library%2Falloc%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec.rs?ref=64645865423990935a74abecc576a91f5b89f2cd", "patch": "@@ -2227,6 +2227,12 @@ fn write_in_place_with_drop<T>(\n #[rustc_unsafe_specialization_marker]\n trait SourceIterMarker: SourceIter<Source: AsIntoIter> {}\n \n+// The std-internal SourceIter/InPlaceIterable traits are only implemented by chains of\n+// Adapter<Adapter<Adapter<IntoIter>>> (all owned by core/std). Additional bounds\n+// on the adapter implementations (beyond `impl<I: Trait> Trait for Adapter<I>`) only depend on other\n+// traits already marked as specialization traits (Copy, TrustedRandomAccess, FusedIterator).\n+// I.e. the marker does not depend on lifetimes of user-supplied types. Modulo the Copy hole, which\n+// several other specializations already depend on.\n impl<T> SourceIterMarker for T where T: SourceIter<Source: AsIntoIter> + InPlaceIterable {}\n \n impl<T, I> SpecFrom<T, I> for Vec<T>"}]}