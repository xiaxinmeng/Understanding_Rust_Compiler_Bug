{"sha": "f34d19a242e65b5aa2822cd8e46bc693afc3f901", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNGQxOWEyNDJlNjViNWFhMjgyMmNkOGU0NmJjNjkzYWZjM2Y5MDE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-04T00:24:05Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-04T00:32:29Z"}, "message": "Make pp more conservative about inserting trailing comments mid-list.", "tree": {"sha": "78afbaff11d04bb284b6e91a0a9397c4e141befa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78afbaff11d04bb284b6e91a0a9397c4e141befa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f34d19a242e65b5aa2822cd8e46bc693afc3f901", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f34d19a242e65b5aa2822cd8e46bc693afc3f901", "html_url": "https://github.com/rust-lang/rust/commit/f34d19a242e65b5aa2822cd8e46bc693afc3f901", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f34d19a242e65b5aa2822cd8e46bc693afc3f901/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69325f815d1316dec36f61afc13dbbaf78cd855e", "url": "https://api.github.com/repos/rust-lang/rust/commits/69325f815d1316dec36f61afc13dbbaf78cd855e", "html_url": "https://github.com/rust-lang/rust/commit/69325f815d1316dec36f61afc13dbbaf78cd855e"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "87e40bdbcd68cbbba20c1a4b548be6befe27bbb4", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f34d19a242e65b5aa2822cd8e46bc693afc3f901/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f34d19a242e65b5aa2822cd8e46bc693afc3f901/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=f34d19a242e65b5aa2822cd8e46bc693afc3f901", "patch": "@@ -204,7 +204,8 @@ fn commasep_cmnt[IN](&ps s, breaks b, vec[IN] elts, fn(&ps, &IN) op,\n         i += 1u;\n         if (i < len) {\n             word(s.s, \",\");\n-            maybe_print_trailing_comment(s, get_span(elt));\n+            maybe_print_trailing_comment(s, get_span(elt),\n+                                         some(get_span(elts.(i)).hi));\n             space(s.s);\n         }\n     }\n@@ -404,7 +405,7 @@ fn print_item(&ps s, &@ast::item item) {\n                     pclose(s);\n                 }\n                 word(s.s, \";\");\n-                maybe_print_trailing_comment(s, v.span);\n+                maybe_print_trailing_comment(s, v.span, none[uint]);\n             }\n             bclose(s, item.span);\n         }\n@@ -469,13 +470,12 @@ fn print_stmt(&ps s, &ast::stmt st) {\n         }\n     }\n     if (front::parser::stmt_ends_with_semi(st)) {word(s.s, \";\");}\n-    maybe_print_trailing_comment(s, st.span);\n+    maybe_print_trailing_comment(s, st.span, none[uint]);\n }\n \n fn print_block(&ps s, ast::block blk) {\n     maybe_print_comment(s, blk.span.lo);\n     bopen(s);\n-    auto first = true;\n     for (@ast::stmt st in blk.node.stmts) {\n         print_stmt(s, *st)\n \n@@ -484,7 +484,8 @@ fn print_block(&ps s, ast::block blk) {\n         case (some(?expr)) {\n             space(s.s);\n             print_expr(s, expr);\n-            maybe_print_trailing_comment(s, expr.span);\n+            maybe_print_trailing_comment(s, expr.span,\n+                                         some(blk.span.hi));\n         }\n         case (_) {}\n     }\n@@ -1264,7 +1265,8 @@ fn maybe_print_comment(&ps s, uint pos) {\n     }\n }\n \n-fn maybe_print_trailing_comment(&ps s, common::span span) {\n+fn maybe_print_trailing_comment(&ps s, common::span span,\n+                                option::t[uint] next_pos) {\n     auto cm;\n     alt (s.cm) {\n         case (some(?ccm)) {\n@@ -1278,9 +1280,14 @@ fn maybe_print_trailing_comment(&ps s, common::span span) {\n \n             auto span_line = codemap::lookup_pos(cm, span.hi);\n             auto comment_line = codemap::lookup_pos(cm, cmnt.pos);\n+            auto next = cmnt.pos + 1u;\n+            alt (next_pos) {\n+                case (none) { }\n+                case (some(?p)) { next = p; }\n+            }\n             if (span.hi < cmnt.pos &&\n+                cmnt.pos < next &&\n                 span_line.line == comment_line.line) {\n-                word(s.s, \" \");\n                 print_comment(s, cmnt);\n                 s.cur_cmnt += 1u;\n             }\n@@ -1327,6 +1334,7 @@ fn print_comment(&ps s, lexer::cmnt cmnt) {\n         }\n \n         case (lexer::trailing) {\n+            word(s.s, \" \");\n             if (vec::len(cmnt.lines) == 1u) {\n                 word(s.s, cmnt.lines.(0));\n                 hardbreak(s.s);"}]}