{"sha": "8bd14a34834919f2e8f329ef1eaf0b15ad4d9680", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiZDE0YTM0ODM0OTE5ZjJlOGYzMjllZjFlYWYwYjE1YWQ0ZDk2ODA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-11T12:48:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-11T12:48:14Z"}, "message": "Merge pull request #3910 from lnicola/fn-named-param-hint\n\nHide parameter hints for single-argument functions with the same name", "tree": {"sha": "5a9172ad8864a286bce7b9995f75bad321c8e7be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a9172ad8864a286bce7b9995f75bad321c8e7be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bd14a34834919f2e8f329ef1eaf0b15ad4d9680", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJekbyOCRBK7hj4Ov3rIwAAdHIIAHlrYYLZHlNAQOqRkvksHWvM\nP95d/jUZSIrNWrjQkiwjHj1HyOVcRR0XaSMTKk8iRcl9csfCRrg3iYsW7dZaUons\noynGV4ng0vOvqwabyH4Rypjo3FFTTiBxozKksmZWzrQjupJFmc52UZsvSmz/JNbb\nUx8+y5cySFRc+dYm6m0HHrYOar3zJjbv4QHplWLgolZaFSJUSEGGVk2HwMeWp51S\nqTk/Sld48VqhJ3iA6pTg71xhV9GQY7XiknRJuUZtXjKumzF+c1HCaNM+x9SPxyYW\nVnM/XIXdnS6mVG/xQDQonbCBof0Zk0kU09JvGdy9gvgt/YpMImaRZS/NcQh+0Zk=\n=byfp\n-----END PGP SIGNATURE-----\n", "payload": "tree 5a9172ad8864a286bce7b9995f75bad321c8e7be\nparent 82c98f425cafb8185c2ed8a4fa723dacbaee84b4\nparent 81aab500c677420e4911371e13876faaf211219c\nauthor Aleksey Kladov <aleksey.kladov@gmail.com> 1586609294 +0200\ncommitter GitHub <noreply@github.com> 1586609294 +0200\n\nMerge pull request #3910 from lnicola/fn-named-param-hint\n\nHide parameter hints for single-argument functions with the same name"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bd14a34834919f2e8f329ef1eaf0b15ad4d9680", "html_url": "https://github.com/rust-lang/rust/commit/8bd14a34834919f2e8f329ef1eaf0b15ad4d9680", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bd14a34834919f2e8f329ef1eaf0b15ad4d9680/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82c98f425cafb8185c2ed8a4fa723dacbaee84b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/82c98f425cafb8185c2ed8a4fa723dacbaee84b4", "html_url": "https://github.com/rust-lang/rust/commit/82c98f425cafb8185c2ed8a4fa723dacbaee84b4"}, {"sha": "81aab500c677420e4911371e13876faaf211219c", "url": "https://api.github.com/repos/rust-lang/rust/commits/81aab500c677420e4911371e13876faaf211219c", "html_url": "https://github.com/rust-lang/rust/commit/81aab500c677420e4911371e13876faaf211219c"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "45b9f78023f2cc0b1a56471bb38bfba2e9cd6f18", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8bd14a34834919f2e8f329ef1eaf0b15ad4d9680/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bd14a34834919f2e8f329ef1eaf0b15ad4d9680/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=8bd14a34834919f2e8f329ef1eaf0b15ad4d9680", "patch": "@@ -235,7 +235,10 @@ fn should_show_param_hint(\n     param_name: &str,\n     argument: &ast::Expr,\n ) -> bool {\n-    if param_name.is_empty() || is_argument_similar_to_param(argument, param_name) {\n+    if param_name.is_empty()\n+        || is_argument_similar_to_param(argument, param_name)\n+        || Some(param_name) == fn_signature.name.as_ref().map(String::as_str)\n+    {\n         return false;\n     }\n \n@@ -247,10 +250,7 @@ fn should_show_param_hint(\n \n     // avoid displaying hints for common functions like map, filter, etc.\n     // or other obvious words used in std\n-    if parameters_len == 1 && is_obvious_param(param_name) {\n-        return false;\n-    }\n-    true\n+    parameters_len != 1 || !is_obvious_param(param_name)\n }\n \n fn is_argument_similar_to_param(argument: &ast::Expr, param_name: &str) -> bool {\n@@ -1086,13 +1086,17 @@ impl Test {\n     }\n \n     fn no_hints_expected(&self, _: i32, test_var: i32) {}\n+\n+    fn frob(&self, frob: bool) {}\n }\n \n struct Param {}\n \n fn different_order(param: &Param) {}\n fn different_order_mut(param: &mut Param) {}\n \n+fn twiddle(twiddle: bool) {}\n+\n fn main() {\n     let container: TestVarContainer = TestVarContainer { test_var: 42 };\n     let test: Test = Test {};\n@@ -1105,6 +1109,9 @@ fn main() {\n     let test_var: i32 = 55;\n     test_processed.no_hints_expected(22, test_var);\n     test_processed.no_hints_expected(33, container.test_var);\n+    test_processed.frob(false);\n+\n+    twiddle(true);\n \n     let param_begin: Param = Param {};\n     different_order(&param_begin);"}]}