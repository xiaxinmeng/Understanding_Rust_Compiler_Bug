{"sha": "5b2fd86d2523299c4a5ec58ad33c3474f52f85a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViMmZkODZkMjUyMzI5OWM0YTVlYzU4YWQzM2MzNDc0ZjUyZjg1YTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-22T07:10:05Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-22T07:11:06Z"}, "message": "more type safety", "tree": {"sha": "a160da639b703d328cb0e1b7f755f64c22864656", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a160da639b703d328cb0e1b7f755f64c22864656"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b2fd86d2523299c4a5ec58ad33c3474f52f85a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b2fd86d2523299c4a5ec58ad33c3474f52f85a2", "html_url": "https://github.com/rust-lang/rust/commit/5b2fd86d2523299c4a5ec58ad33c3474f52f85a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b2fd86d2523299c4a5ec58ad33c3474f52f85a2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97f41d7343a4801f296cd6a7a45ece9249c15886", "url": "https://api.github.com/repos/rust-lang/rust/commits/97f41d7343a4801f296cd6a7a45ece9249c15886", "html_url": "https://github.com/rust-lang/rust/commit/97f41d7343a4801f296cd6a7a45ece9249c15886"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "13ee82879bcda450eef3bbe9c06b344ae9f3fab0", "filename": "crates/ra_assists/src/ast_editor.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5b2fd86d2523299c4a5ec58ad33c3474f52f85a2/crates%2Fra_assists%2Fsrc%2Fast_editor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b2fd86d2523299c4a5ec58ad33c3474f52f85a2/crates%2Fra_assists%2Fsrc%2Fast_editor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fast_editor.rs?ref=5b2fd86d2523299c4a5ec58ad33c3474f52f85a2", "patch": "@@ -137,9 +137,32 @@ pub struct AstBuilder<N: AstNode> {\n }\n \n impl AstBuilder<ast::NamedField> {\n-    pub fn from_text(text: &str) -> TreeArc<ast::NamedField> {\n+    fn from_text(text: &str) -> TreeArc<ast::NamedField> {\n         ast_node_from_file_text(&format!(\"fn f() {{ S {{ {}, }} }}\", text))\n     }\n+\n+    pub fn from_pieces(name: &ast::NameRef, expr: Option<&ast::Expr>) -> TreeArc<ast::NamedField> {\n+        match expr {\n+            Some(expr) => Self::from_text(&format!(\"{}: {}\", name.syntax(), expr.syntax())),\n+            None => Self::from_text(&name.syntax().to_string()),\n+        }\n+    }\n+}\n+\n+impl AstBuilder<ast::Expr> {\n+    fn from_text(text: &str) -> TreeArc<ast::Expr> {\n+        ast_node_from_file_text(&format!(\"fn f() {{ {}; }}\", text))\n+    }\n+\n+    pub fn unit() -> TreeArc<ast::Expr> {\n+        Self::from_text(\"()\")\n+    }\n+}\n+\n+impl AstBuilder<ast::NameRef> {\n+    pub fn new(text: &str) -> TreeArc<ast::NameRef> {\n+        ast_node_from_file_text(&format!(\"fn f() {{ {}; }}\", text))\n+    }\n }\n \n fn ast_node_from_file_text<N: AstNode>(text: &str) -> TreeArc<N> {"}, {"sha": "54b70e17dd54c38c3fd5059470680ceba2a385f8", "filename": "crates/ra_assists/src/fill_struct_fields.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5b2fd86d2523299c4a5ec58ad33c3474f52f85a2/crates%2Fra_assists%2Fsrc%2Ffill_struct_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b2fd86d2523299c4a5ec58ad33c3474f52f85a2/crates%2Fra_assists%2Fsrc%2Ffill_struct_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Ffill_struct_fields.rs?ref=5b2fd86d2523299c4a5ec58ad33c3474f52f85a2", "patch": "@@ -37,8 +37,10 @@ pub(crate) fn fill_struct_fields(mut ctx: AssistCtx<impl HirDatabase>) -> Option\n         };\n \n         for field in fields {\n-            let field =\n-                AstBuilder::<ast::NamedField>::from_text(&format!(\"{}: ()\", field.name(db)));\n+            let field = AstBuilder::<ast::NamedField>::from_pieces(\n+                &AstBuilder::<ast::NameRef>::new(&field.name(db).to_string()),\n+                Some(&AstBuilder::<ast::Expr>::unit()),\n+            );\n             ast_editor.append_field(&field);\n         }\n "}, {"sha": "60b4d5c6390f112aaee3af5b4fc18f54f1cd039e", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b2fd86d2523299c4a5ec58ad33c3474f52f85a2/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b2fd86d2523299c4a5ec58ad33c3474f52f85a2/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=5b2fd86d2523299c4a5ec58ad33c3474f52f85a2", "patch": "@@ -37,7 +37,7 @@ pub struct AssistAction {\n     pub target: Option<TextRange>,\n }\n \n-/// Return all the assists applicable at the given position.\n+/// Return all the assists eapplicable at the given position.\n ///\n /// Assists are returned in the \"unresolved\" state, that is only labels are\n /// returned, without actual edits."}]}