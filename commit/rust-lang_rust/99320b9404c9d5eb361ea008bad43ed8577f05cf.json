{"sha": "99320b9404c9d5eb361ea008bad43ed8577f05cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5MzIwYjk0MDRjOWQ1ZWIzNjFlYTAwOGJhZDQzZWQ4NTc3ZjA1Y2Y=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-10-27T17:14:21Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-10-27T17:14:21Z"}, "message": "Fix typos in arena comments", "tree": {"sha": "e1937e2c89b362a63d0ba067bd0304dc61981386", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1937e2c89b362a63d0ba067bd0304dc61981386"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99320b9404c9d5eb361ea008bad43ed8577f05cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99320b9404c9d5eb361ea008bad43ed8577f05cf", "html_url": "https://github.com/rust-lang/rust/commit/99320b9404c9d5eb361ea008bad43ed8577f05cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99320b9404c9d5eb361ea008bad43ed8577f05cf/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da64d07191d6703c64e33c5b6335441a0456b77c", "url": "https://api.github.com/repos/rust-lang/rust/commits/da64d07191d6703c64e33c5b6335441a0456b77c", "html_url": "https://github.com/rust-lang/rust/commit/da64d07191d6703c64e33c5b6335441a0456b77c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "a8522547666994683d664eeeb8ae1aa9c4093140", "filename": "compiler/rustc_arena/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/99320b9404c9d5eb361ea008bad43ed8577f05cf/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99320b9404c9d5eb361ea008bad43ed8577f05cf/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2Fsrc%2Flib.rs?ref=99320b9404c9d5eb361ea008bad43ed8577f05cf", "patch": "@@ -533,7 +533,7 @@ impl DropArena {\n         ptr::write(mem, object);\n         let result = &mut *mem;\n         // Record the destructor after doing the allocation as that may panic\n-        // and would cause `object`'s destuctor to run twice if it was recorded before\n+        // and would cause `object`'s destructor to run twice if it was recorded before\n         self.destructors\n             .borrow_mut()\n             .push(DropType { drop_fn: drop_for_type::<T>, obj: result as *mut T as *mut u8 });\n@@ -560,7 +560,7 @@ impl DropArena {\n         mem::forget(vec.drain(..));\n \n         // Record the destructors after doing the allocation as that may panic\n-        // and would cause `object`'s destuctor to run twice if it was recorded before\n+        // and would cause `object`'s destructor to run twice if it was recorded before\n         for i in 0..len {\n             destructors.push(DropType {\n                 drop_fn: drop_for_type::<T>,"}]}