{"sha": "e1bf56de25a78b3883822f82aeba0010c4a2fad7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYmY1NmRlMjVhNzhiMzg4MzgyMmY4MmFlYmEwMDEwYzRhMmZhZDc=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-06-17T18:31:26Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-06-17T18:31:26Z"}, "message": "remove superfluous space", "tree": {"sha": "da15fdfb3489d5bf3bd8624000b7f159f7632203", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da15fdfb3489d5bf3bd8624000b7f159f7632203"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1bf56de25a78b3883822f82aeba0010c4a2fad7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1bf56de25a78b3883822f82aeba0010c4a2fad7", "html_url": "https://github.com/rust-lang/rust/commit/e1bf56de25a78b3883822f82aeba0010c4a2fad7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1bf56de25a78b3883822f82aeba0010c4a2fad7/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61e004d68e916694c12fb9051826ed1779ac98d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/61e004d68e916694c12fb9051826ed1779ac98d6", "html_url": "https://github.com/rust-lang/rust/commit/61e004d68e916694c12fb9051826ed1779ac98d6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "93cea6d2f019fcf02f80b921c7cae75c579fcdae", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1bf56de25a78b3883822f82aeba0010c4a2fad7/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1bf56de25a78b3883822f82aeba0010c4a2fad7/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=e1bf56de25a78b3883822f82aeba0010c4a2fad7", "patch": "@@ -896,7 +896,7 @@ impl BorrowckCtxt<'_, 'tcx> {\n                 // to implement two traits for \"one operator\" is not very intuitive for\n                 // many programmers.\n                 if err.cmt.note == mc::NoteIndex {\n-                    let node =  self.tcx.hir().get_by_hir_id(err.cmt.hir_id);\n+                    let node = self.tcx.hir().get_by_hir_id(err.cmt.hir_id);\n \n                     // This pattern probably always matches.\n                     if let Node::Expr("}]}