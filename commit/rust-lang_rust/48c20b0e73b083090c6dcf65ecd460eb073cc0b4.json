{"sha": "48c20b0e73b083090c6dcf65ecd460eb073cc0b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YzIwYjBlNzNiMDgzMDkwYzZkY2Y2NWVjZDQ2MGViMDczY2MwYjQ=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-30T00:35:53Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-30T21:26:35Z"}, "message": "Improve tests", "tree": {"sha": "3fb6e691e3837ce8f3d3e0af58a9a677d4447459", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fb6e691e3837ce8f3d3e0af58a9a677d4447459"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48c20b0e73b083090c6dcf65ecd460eb073cc0b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48c20b0e73b083090c6dcf65ecd460eb073cc0b4", "html_url": "https://github.com/rust-lang/rust/commit/48c20b0e73b083090c6dcf65ecd460eb073cc0b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48c20b0e73b083090c6dcf65ecd460eb073cc0b4/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38bef4365219dba7b82a3de19a2b84b1d322abf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/38bef4365219dba7b82a3de19a2b84b1d322abf1", "html_url": "https://github.com/rust-lang/rust/commit/38bef4365219dba7b82a3de19a2b84b1d322abf1"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "f487ef62aa435d22887b120fc595ceca5fb80436", "filename": "src/test/compile-fail/struct-field-privacy.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/48c20b0e73b083090c6dcf65ecd460eb073cc0b4/src%2Ftest%2Fcompile-fail%2Fstruct-field-privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48c20b0e73b083090c6dcf65ecd460eb073cc0b4/src%2Ftest%2Fcompile-fail%2Fstruct-field-privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-field-privacy.rs?ref=48c20b0e73b083090c6dcf65ecd460eb073cc0b4", "patch": "@@ -25,9 +25,10 @@ mod inner {\n         pub a: isize,\n         b: isize,\n     }\n+    pub struct Z(pub isize, isize);\n }\n \n-fn test(a: A, b: inner::A, c: inner::B, d: xc::A, e: xc::B) {\n+fn test(a: A, b: inner::A, c: inner::B, d: xc::A, e: xc::B, z: inner::Z) {\n     a.a;\n     b.a; //~ ERROR: field `a` of struct `inner::A` is private\n     b.b;\n@@ -39,6 +40,9 @@ fn test(a: A, b: inner::A, c: inner::B, d: xc::A, e: xc::B) {\n \n     e.a;\n     e.b; //~ ERROR: field `b` of struct `xc::B` is private\n+\n+    z.0;\n+    z.1; //~ ERROR: field `1` of struct `inner::Z` is private\n }\n \n fn main() {}"}, {"sha": "e50f1bea0d3babdcc1252884173d778fbb8f9a72", "filename": "src/test/run-pass/autoderef-privacy.rs", "status": "renamed", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/48c20b0e73b083090c6dcf65ecd460eb073cc0b4/src%2Ftest%2Frun-pass%2Fautoderef-privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48c20b0e73b083090c6dcf65ecd460eb073cc0b4/src%2Ftest%2Frun-pass%2Fautoderef-privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fautoderef-privacy.rs?ref=48c20b0e73b083090c6dcf65ecd460eb073cc0b4", "patch": "@@ -10,40 +10,51 @@\n \n // Check we do not select a private method or field when computing autoderefs\n \n-#![feature(rustc_attrs)]\n #![allow(unused)]\n \n+#[derive(Default)]\n pub struct Bar2 { i: i32 }\n+#[derive(Default)]\n pub struct Baz2(i32);\n \n impl Bar2 {\n-    fn f(&self) {}\n+    fn f(&self) -> bool { true }\n }\n \n mod foo {\n-    pub struct Bar { i: i32 }\n-    pub struct Baz(i32);\n+    #[derive(Default)]\n+    pub struct Bar { i: ::Bar2 }\n+    #[derive(Default)]\n+    pub struct Baz(::Baz2);\n \n     impl Bar {\n-        fn f(&self) {}\n+        fn f(&self) -> bool { false }\n     }\n \n     impl ::std::ops::Deref for Bar {\n         type Target = ::Bar2;\n-        fn deref(&self) -> &::Bar2 { unimplemented!() }\n+        fn deref(&self) -> &::Bar2 { &self.i }\n     }\n \n     impl ::std::ops::Deref for Baz {\n         type Target = ::Baz2;\n-        fn deref(&self) -> &::Baz2 { unimplemented!() }\n+        fn deref(&self) -> &::Baz2 { &self.0 }\n     }\n-}\n \n-fn f(bar: foo::Bar, baz: foo::Baz) {\n-    let _ = bar.i;\n-    let _ = baz.0;\n-    let _ = bar.f();\n+    pub fn f(bar: &Bar, baz: &Baz) {\n+        // Since the private fields and methods are visible here, there should be no autoderefs.\n+        let _: &::Bar2 = &bar.i;\n+        let _: &::Baz2 = &baz.0;\n+        assert!(!bar.f());\n+    }\n }\n \n-#[rustc_error]\n-fn main() {} //~ ERROR compilation successful\n+fn main() {\n+    let bar = foo::Bar::default();\n+    let baz = foo::Baz::default();\n+    foo::f(&bar, &baz);\n+\n+    let _: i32 = bar.i;\n+    let _: i32 = baz.0;\n+    assert!(bar.f());\n+}", "previous_filename": "src/test/compile-fail/autoderef-privacy.rs"}]}