{"sha": "c1ed862bc4dc9b83985980dd367fc0e23e7b412a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZWQ4NjJiYzRkYzliODM5ODU5ODBkZDM2N2ZjMGUyM2U3YjQxMmE=", "commit": {"author": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2017-08-19T23:33:24Z"}, "committer": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2017-08-20T22:31:36Z"}, "message": "borrowck: name the correct type in error message\n\nCloses #36407.", "tree": {"sha": "3dedba11b5c318e4bd48a8a1f09bfc3082318433", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dedba11b5c318e4bd48a8a1f09bfc3082318433"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1ed862bc4dc9b83985980dd367fc0e23e7b412a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE/uKQcsWiEQj1Z6uEHB6YzI4Xu4kFAlmaDckACgkQHB6YzI4X\nu4mOQQ/9EC3QZuo8tDwwYYAir1O7mccKutehBI4vxbsW7FjVR0GpJFDFo7dNuHXR\nLnLhMxtXIEUUp5lRXuy7CLnbMDO7qqvk9WHv5Qud6amlHGtXoVEikKTvZAhiRpN1\nr8aGjBjeZtGFBYx6W9YUca7QSexy8uKjeXbQ2z0D+a/StAq1+9wxlf2loYuIIdFc\nxyr/dmzEtUuqYEXANXgCUL9i/H3jRmslUSkJKt1iMotcJ3Dq4vo05tnxXLeC3Cou\nTbbNXqG92ujgOK4Q1TII9RaocI3Os6MF9IiGTFM3yTnftkzaPmA0xJ9EKZEJDSy+\nRteKRIWKFpma8AAfLlfCaT8qngAXG/lGZVGTezAzkBHoVVThmndfV3cPDRWAh1Ox\nlvG0DBg7NnzubPnAoqtRezkVzC13he10KJdhaDgqf3Oiqtnstt+oaw2Ye/n4+wjE\ntgvilr3UKRcApszq2JrDeAWXuVkb6zPxOL+Fply+e/YPIoy/0tvujcQGM3LAQEMS\nKRpq9CA14Iu67eAmaiymyHPGqX4OVOQuPCGU9OOqAJg6NZRo8e+UdQgEzits8qPZ\nwjaLWXvgX+b3L70z2AmEduJFBRWinoS0cKLkluQ9ygwnkQtjRr5+xbpRg8pum//E\nex8vkvfnmCYfFvlnOC93Cykv+zZVrG99p20HnJX+4OFG2cejKNw=\n=BKQE\n-----END PGP SIGNATURE-----", "payload": "tree 3dedba11b5c318e4bd48a8a1f09bfc3082318433\nparent 3d9f57a2924f244c5ef9503432733143ba702928\nauthor Tamir Duberstein <tamird@gmail.com> 1503185604 -0700\ncommitter Tamir Duberstein <tamird@gmail.com> 1503268296 -0400\n\nborrowck: name the correct type in error message\n\nCloses #36407.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1ed862bc4dc9b83985980dd367fc0e23e7b412a", "html_url": "https://github.com/rust-lang/rust/commit/c1ed862bc4dc9b83985980dd367fc0e23e7b412a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1ed862bc4dc9b83985980dd367fc0e23e7b412a/comments", "author": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d9f57a2924f244c5ef9503432733143ba702928", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d9f57a2924f244c5ef9503432733143ba702928", "html_url": "https://github.com/rust-lang/rust/commit/3d9f57a2924f244c5ef9503432733143ba702928"}], "stats": {"total": 37, "additions": 18, "deletions": 19}, "files": [{"sha": "57b92eb8f8891aa0b39e126935b71d92fda1de93", "filename": "src/librustc_borrowck/borrowck/gather_loans/move_error.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c1ed862bc4dc9b83985980dd367fc0e23e7b412a/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1ed862bc4dc9b83985980dd367fc0e23e7b412a/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs?ref=c1ed862bc4dc9b83985980dd367fc0e23e7b412a", "patch": "@@ -153,20 +153,19 @@ fn report_cannot_move_out_of<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n         }\n \n         Categorization::Interior(ref b, mc::InteriorElement(ik)) => {\n-            match (&b.ty.sty, ik) {\n-                (&ty::TySlice(..), _) |\n-                (_, Kind::Index) => {\n-                    let mut err = struct_span_err!(bccx, move_from.span, E0508,\n-                                                   \"cannot move out of type `{}`, \\\n-                                                    a non-copy array\",\n-                                                   b.ty);\n-                    err.span_label(move_from.span, \"cannot move out of here\");\n-                    err\n-                }\n-                (_, Kind::Pattern) => {\n+            let type_name = match (&b.ty.sty, ik) {\n+                (&ty::TyArray(_, _), Kind::Index) => \"array\",\n+                (&ty::TySlice(_), _) => \"slice\",\n+                _ => {\n                     span_bug!(move_from.span, \"this path should not cause illegal move\");\n-                }\n-            }\n+                },\n+            };\n+            let mut err = struct_span_err!(bccx, move_from.span, E0508,\n+                                           \"cannot move out of type `{}`, \\\n+                                            a non-copy {}\",\n+                                           b.ty, type_name);\n+            err.span_label(move_from.span, \"cannot move out of here\");\n+            err\n         }\n \n         Categorization::Downcast(ref b, _) |"}, {"sha": "30cdd07b399986de54b3e7137d31833ea310717d", "filename": "src/test/compile-fail/issue-12567.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c1ed862bc4dc9b83985980dd367fc0e23e7b412a/src%2Ftest%2Fcompile-fail%2Fissue-12567.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1ed862bc4dc9b83985980dd367fc0e23e7b412a/src%2Ftest%2Fcompile-fail%2Fissue-12567.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12567.rs?ref=c1ed862bc4dc9b83985980dd367fc0e23e7b412a", "patch": "@@ -15,12 +15,12 @@ fn match_vecs<'a, T>(l1: &'a [T], l2: &'a [T]) {\n         (&[], &[]) => println!(\"both empty\"),\n         (&[], &[hd, ..]) | (&[hd, ..], &[])\n             => println!(\"one empty\"),\n-        //~^^ ERROR: cannot move out of type `[T]`, a non-copy array\n-        //~^^^ ERROR: cannot move out of type `[T]`, a non-copy array\n+        //~^^ ERROR: cannot move out of type `[T]`, a non-copy slice\n+        //~^^^ ERROR: cannot move out of type `[T]`, a non-copy slice\n         (&[hd1, ..], &[hd2, ..])\n             => println!(\"both nonempty\"),\n-        //~^^ ERROR: cannot move out of type `[T]`, a non-copy array\n-        //~^^^ ERROR: cannot move out of type `[T]`, a non-copy array\n+        //~^^ ERROR: cannot move out of type `[T]`, a non-copy slice\n+        //~^^^ ERROR: cannot move out of type `[T]`, a non-copy slice\n     }\n }\n "}, {"sha": "796b13538b22ad9da1e3691b5b596afe20858984", "filename": "src/test/compile-fail/move-out-of-array-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1ed862bc4dc9b83985980dd367fc0e23e7b412a/src%2Ftest%2Fcompile-fail%2Fmove-out-of-array-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1ed862bc4dc9b83985980dd367fc0e23e7b412a/src%2Ftest%2Fcompile-fail%2Fmove-out-of-array-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmove-out-of-array-1.rs?ref=c1ed862bc4dc9b83985980dd367fc0e23e7b412a", "patch": "@@ -24,5 +24,5 @@ fn main() {\n }\n \n fn foo(a: [D; 4], i: usize) -> D {\n-    a[i] //~ ERROR cannot move out of type `[D; 4]`\n+    a[i] //~ ERROR cannot move out of type `[D; 4]`, a non-copy array\n }"}, {"sha": "9ca9e0984e47668d2ed62315a6ad28062666b7e0", "filename": "src/test/compile-fail/move-out-of-slice-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1ed862bc4dc9b83985980dd367fc0e23e7b412a/src%2Ftest%2Fcompile-fail%2Fmove-out-of-slice-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1ed862bc4dc9b83985980dd367fc0e23e7b412a/src%2Ftest%2Fcompile-fail%2Fmove-out-of-slice-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmove-out-of-slice-1.rs?ref=c1ed862bc4dc9b83985980dd367fc0e23e7b412a", "patch": "@@ -15,7 +15,7 @@ struct A;\n fn main() {\n     let a: Box<[A]> = Box::new([A]);\n     match a {\n-        box [a] => {}, //~ ERROR cannot move out of type `[A]`\n+        box [a] => {}, //~ ERROR cannot move out of type `[A]`, a non-copy slice\n         _ => {}\n     }\n }"}]}