{"sha": "bf86fd522114d8064360682bacd23327a84dbfa4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmODZmZDUyMjExNGQ4MDY0MzYwNjgyYmFjZDIzMzI3YTg0ZGJmYTQ=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-01-22T15:31:18Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-01-23T00:20:37Z"}, "message": "Fix <unknown> queries\n\nThis happened because `alloc_query_strings` was never called.", "tree": {"sha": "bf666bc69321025585549cd1f88be2e122d55616", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf666bc69321025585549cd1f88be2e122d55616"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf86fd522114d8064360682bacd23327a84dbfa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf86fd522114d8064360682bacd23327a84dbfa4", "html_url": "https://github.com/rust-lang/rust/commit/bf86fd522114d8064360682bacd23327a84dbfa4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf86fd522114d8064360682bacd23327a84dbfa4/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0679a4cd93db7dfd33b45cd5bd6be52a0f5e894a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0679a4cd93db7dfd33b45cd5bd6be52a0f5e894a", "html_url": "https://github.com/rust-lang/rust/commit/0679a4cd93db7dfd33b45cd5bd6be52a0f5e894a"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "19d2de58ffb05708f4cbb3fa43d0d3780ad63ef5", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bf86fd522114d8064360682bacd23327a84dbfa4/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf86fd522114d8064360682bacd23327a84dbfa4/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=bf86fd522114d8064360682bacd23327a84dbfa4", "patch": "@@ -568,7 +568,7 @@ fn main_options(options: config::Options) -> MainResult {\n                 info!(\"going to format\");\n                 let (error_format, edition, debugging_options) = diag_opts;\n                 let diag = core::new_handler(error_format, None, &debugging_options);\n-                match output_format {\n+                let main_result = match output_format {\n                     None | Some(config::OutputFormat::Html) => sess.time(\"render_html\", || {\n                         run_renderer::<html::render::Context<'_>>(\n                             krate,\n@@ -589,7 +589,10 @@ fn main_options(options: config::Options) -> MainResult {\n                             tcx,\n                         )\n                     }),\n-                }\n+                };\n+                // NOTE: this is normally called in codegen, but rustdoc never goes to codegen.\n+                tcx.alloc_self_profile_query_strings();\n+                main_result\n             })\n         })\n     })"}]}