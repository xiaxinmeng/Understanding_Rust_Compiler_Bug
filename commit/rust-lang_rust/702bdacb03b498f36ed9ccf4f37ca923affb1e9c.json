{"sha": "702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMmJkYWNiMDNiNDk4ZjM2ZWQ5Y2NmNGYzN2NhOTIzYWZmYjFlOWM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T17:44:31Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T18:01:41Z"}, "message": "move node at offset to aglo already", "tree": {"sha": "36be9bf0d15ef94cde0821ebe441e5540520b59c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36be9bf0d15ef94cde0821ebe441e5540520b59c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "html_url": "https://github.com/rust-lang/rust/commit/702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b82084a5f28506134c668a67d2759ef22be6a80", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b82084a5f28506134c668a67d2759ef22be6a80", "html_url": "https://github.com/rust-lang/rust/commit/1b82084a5f28506134c668a67d2759ef22be6a80"}], "stats": {"total": 41, "additions": 19, "deletions": 22}, "files": [{"sha": "27b760780ca8f91dc6431c6dba829a46118d9476", "filename": "crates/ra_analysis/src/call_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_analysis%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_analysis%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcall_info.rs?ref=702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "patch": "@@ -5,8 +5,8 @@ use ra_syntax::{\n     AstNode, SyntaxNode, TextUnit, TextRange,\n     SyntaxKind::FN_DEF,\n     ast::{self, ArgListOwner, DocCommentsOwner},\n+    algo::find_node_at_offset,\n };\n-use ra_editor::find_node_at_offset;\n \n use crate::{FilePosition, CallInfo, db::RootDatabase};\n "}, {"sha": "01786bb69e91d695ae855f7bd2ba158bd7b3dc7b", "filename": "crates/ra_analysis/src/completion/completion_context.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "patch": "@@ -1,9 +1,8 @@\n-use ra_editor::find_node_at_offset;\n use ra_text_edit::AtomTextEdit;\n use ra_syntax::{\n     AstNode, SyntaxNode, SourceFile, TextUnit, TextRange,\n     ast,\n-    algo::{find_leaf_at_offset, find_covering_node},\n+    algo::{find_leaf_at_offset, find_covering_node, find_node_at_offset},\n     SyntaxKind::*,\n };\n use hir::source_binder;"}, {"sha": "fcd8d315e24ad53013ec6249d2b60cbd06f050be", "filename": "crates/ra_analysis/src/goto_defenition.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_analysis%2Fsrc%2Fgoto_defenition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_analysis%2Fsrc%2Fgoto_defenition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fgoto_defenition.rs?ref=702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "patch": "@@ -1,7 +1,8 @@\n use ra_db::{FileId, Cancelable, SyntaxDatabase};\n-use ra_syntax::{TextRange, AstNode, ast, SyntaxKind::{NAME, MODULE}};\n-\n-use ra_editor::find_node_at_offset;\n+use ra_syntax::{\n+    TextRange, AstNode, ast, SyntaxKind::{NAME, MODULE},\n+    algo::find_node_at_offset,\n+};\n \n use crate::{FilePosition, NavigationTarget, db::RootDatabase};\n "}, {"sha": "475524ee1827549a44c6e490604e1bf607232d80", "filename": "crates/ra_analysis/src/hover.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_analysis%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_analysis%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhover.rs?ref=702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "patch": "@@ -1,9 +1,8 @@\n use ra_db::{Cancelable, SyntaxDatabase};\n-use ra_editor::find_node_at_offset;\n use ra_syntax::{\n     AstNode, SyntaxNode, TreePtr,\n     ast::{self, NameOwner},\n-    algo::{find_covering_node, find_leaf_at_offset, visit::{visitor, Visitor}},\n+    algo::{find_covering_node, find_node_at_offset, find_leaf_at_offset, visit::{visitor, Visitor}},\n };\n \n use crate::{db::RootDatabase, RangeInfo, FilePosition, FileRange, NavigationTarget};"}, {"sha": "2b9963b3c23d1a2f7314c9dd4f04511d9d22758e", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "patch": "@@ -6,10 +6,11 @@ use hir::{\n     self, Problem, source_binder,\n };\n use ra_db::{FilesDatabase, SourceRoot, SourceRootId, SyntaxDatabase};\n-use ra_editor::{self, find_node_at_offset, assists, LocalEdit, Severity};\n+use ra_editor::{self, assists, LocalEdit, Severity};\n use ra_syntax::{\n     TextRange, AstNode, SourceFile,\n     ast::{self, NameOwner},\n+    algo::find_node_at_offset,\n     SyntaxKind::*,\n };\n "}, {"sha": "83eabfc859fa85ddcad8c0c15b3d5a9da4281734", "filename": "crates/ra_editor/src/assists.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_editor%2Fsrc%2Fassists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_editor%2Fsrc%2Fassists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fassists.rs?ref=702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "patch": "@@ -14,13 +14,11 @@ mod replace_if_let_with_match;\n use ra_text_edit::{TextEdit, TextEditBuilder};\n use ra_syntax::{\n     Direction, SyntaxNode, TextUnit, TextRange, SourceFile, AstNode,\n-    algo::{find_leaf_at_offset, find_covering_node, LeafAtOffset},\n+    algo::{find_leaf_at_offset, find_node_at_offset, find_covering_node, LeafAtOffset},\n     ast::{self, AstToken},\n };\n use itertools::Itertools;\n \n-use crate::find_node_at_offset;\n-\n pub use self::{\n     flip_comma::flip_comma,\n     add_derive::add_derive,"}, {"sha": "5a6af19b7cf96c7fd5e791832f0b32ef656a5726", "filename": "crates/ra_editor/src/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_editor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_editor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Flib.rs?ref=702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "patch": "@@ -120,10 +120,6 @@ pub fn syntax_tree(file: &SourceFile) -> String {\n     ::ra_syntax::utils::dump_tree(file.syntax())\n }\n \n-pub fn find_node_at_offset<N: AstNode>(syntax: &SyntaxNode, offset: TextUnit) -> Option<&N> {\n-    find_leaf_at_offset(syntax, offset).find_map(|leaf| leaf.ancestors().find_map(N::cast))\n-}\n-\n #[cfg(test)]\n mod tests {\n     use ra_syntax::AstNode;"}, {"sha": "576caf6bec8c5f8d6fa62127bab3a72509d6b62a", "filename": "crates/ra_editor/src/typing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Ftyping.rs?ref=702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "patch": "@@ -2,7 +2,7 @@ use std::mem;\n \n use itertools::Itertools;\n use ra_syntax::{\n-    algo::{find_covering_node, find_leaf_at_offset, LeafAtOffset},\n+    algo::{find_node_at_offset, find_covering_node, find_leaf_at_offset, LeafAtOffset},\n     ast,\n     text_utils::intersect,\n     AstNode, Direction, SourceFile, SyntaxKind,\n@@ -11,7 +11,7 @@ use ra_syntax::{\n };\n use ra_text_edit::text_utils::contains_offset_nonstrict;\n \n-use crate::{find_node_at_offset, LocalEdit, TextEditBuilder};\n+use crate::{LocalEdit, TextEditBuilder};\n \n pub fn join_lines(file: &SourceFile, range: TextRange) -> LocalEdit {\n     let range = if range.is_empty() {"}, {"sha": "ebf6edc1bae899da00510472042556da85c484cf", "filename": "crates/ra_hir/src/code_model_impl/function/scope.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Ffunction%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Ffunction%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Ffunction%2Fscope.rs?ref=702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "patch": "@@ -308,8 +308,7 @@ pub struct ReferenceDescriptor {\n \n #[cfg(test)]\n mod tests {\n-    use ra_editor::find_node_at_offset;\n-    use ra_syntax::SourceFile;\n+    use ra_syntax::{SourceFile, algo::find_node_at_offset};\n     use test_utils::{extract_offset, assert_eq_text};\n \n     use crate::expr;"}, {"sha": "4b0400cd08c75e6c2d290b6ad8e0f413903b7851", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "patch": "@@ -6,10 +6,10 @@\n /// So, this modules should not be used during hir construction, it exists\n /// purely for \"IDE needs\".\n use ra_db::{FileId, FilePosition, Cancelable};\n-use ra_editor::find_node_at_offset;\n use ra_syntax::{\n     SmolStr, TextRange, SyntaxNode,\n     ast::{self, AstNode, NameOwner},\n+    algo::find_node_at_offset,\n };\n \n use crate::{"}, {"sha": "2826ec7f23186bdb067c08f0f426744f1409d6f5", "filename": "crates/ra_syntax/src/algo.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702bdacb03b498f36ed9ccf4f37ca923affb1e9c/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo.rs?ref=702bdacb03b498f36ed9ccf4f37ca923affb1e9c", "patch": "@@ -2,7 +2,7 @@ pub mod visit;\n \n use rowan::TransparentNewType;\n \n-use crate::{SyntaxNode, TextRange, TextUnit};\n+use crate::{SyntaxNode, TextRange, TextUnit, AstNode};\n \n pub use rowan::LeafAtOffset;\n \n@@ -16,6 +16,10 @@ pub fn find_leaf_at_offset(node: &SyntaxNode, offset: TextUnit) -> LeafAtOffset<\n     }\n }\n \n+pub fn find_node_at_offset<N: AstNode>(syntax: &SyntaxNode, offset: TextUnit) -> Option<&N> {\n+    find_leaf_at_offset(syntax, offset).find_map(|leaf| leaf.ancestors().find_map(N::cast))\n+}\n+\n pub fn find_covering_node(root: &SyntaxNode, range: TextRange) -> &SyntaxNode {\n     SyntaxNode::from_repr(root.0.covering_node(range))\n }"}]}