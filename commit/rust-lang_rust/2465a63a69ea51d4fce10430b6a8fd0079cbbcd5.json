{"sha": "2465a63a69ea51d4fce10430b6a8fd0079cbbcd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NjVhNjNhNjllYTUxZDRmY2UxMDQzMGI2YThmZDAwNzljYmJjZDU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-03T10:36:53Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-06T03:39:55Z"}, "message": "rt: Move transition from rust_task to rust_task_thread", "tree": {"sha": "70e01ec8c8c3cad74a0e9221cd5cfa229c4c1a14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70e01ec8c8c3cad74a0e9221cd5cfa229c4c1a14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2465a63a69ea51d4fce10430b6a8fd0079cbbcd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2465a63a69ea51d4fce10430b6a8fd0079cbbcd5", "html_url": "https://github.com/rust-lang/rust/commit/2465a63a69ea51d4fce10430b6a8fd0079cbbcd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2465a63a69ea51d4fce10430b6a8fd0079cbbcd5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "237652299ec5fa3529ac7bd1bfddc52b7526bb82", "url": "https://api.github.com/repos/rust-lang/rust/commits/237652299ec5fa3529ac7bd1bfddc52b7526bb82", "html_url": "https://github.com/rust-lang/rust/commit/237652299ec5fa3529ac7bd1bfddc52b7526bb82"}], "stats": {"total": 64, "additions": 42, "deletions": 22}, "files": [{"sha": "0e9e7b2eb859fc2ba30f72f59f06ab291c857380", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 10, "deletions": 20, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2465a63a69ea51d4fce10430b6a8fd0079cbbcd5/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/2465a63a69ea51d4fce10430b6a8fd0079cbbcd5/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=2465a63a69ea51d4fce10430b6a8fd0079cbbcd5", "patch": "@@ -401,26 +401,16 @@ rust_task::free(void *p)\n void\n rust_task::transition(rust_task_list *src, rust_task_list *dst,\n                       rust_cond *cond, const char* cond_name) {\n-    bool unlock = false;\n-    if(!thread->lock.lock_held_by_current_thread()) {\n-        unlock = true;\n-        thread->lock.lock();\n-    }\n-    DLOG(thread, task,\n-         \"task %s \" PTR \" state change '%s' -> '%s' while in '%s'\",\n-         name, (uintptr_t)this, src->name, dst->name, state->name);\n-    I(thread, state == src);\n-    src->remove(this);\n-    dst->append(this);\n-    {\n-        scoped_lock with(state_lock);\n-        state = dst;\n-        this->cond = cond;\n-        this->cond_name = cond_name;\n-    }\n-    thread->lock.signal();\n-    if(unlock)\n-        thread->lock.unlock();\n+    thread->transition(this, src, dst, cond, cond_name);\n+}\n+\n+void\n+rust_task::set_state(rust_task_list *state,\n+                     rust_cond *cond, const char* cond_name) {\n+    scoped_lock with(state_lock);\n+    this->state = state;\n+    this->cond = cond;\n+    this->cond_name = cond_name;\n }\n \n void"}, {"sha": "4f1ae792ae2e1daafec529b1c86f929c7d66572e", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2465a63a69ea51d4fce10430b6a8fd0079cbbcd5/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/2465a63a69ea51d4fce10430b6a8fd0079cbbcd5/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=2465a63a69ea51d4fce10430b6a8fd0079cbbcd5", "patch": "@@ -137,6 +137,9 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n \n     void return_c_stack();\n \n+    void transition(rust_task_list *src, rust_task_list *dst,\n+                    rust_cond *cond, const char* cond_name);\n+\n     friend void task_start_wrapper(spawn_args *a);\n     friend void cleanup_task(cleanup_args *a);\n     friend void reset_stack_limit_on_c_stack(reset_args *a);\n@@ -163,8 +166,8 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n     void *realloc(void *data, size_t sz);\n     void free(void *p);\n \n-    void transition(rust_task_list *src, rust_task_list *dst,\n-                    rust_cond *cond, const char* cond_name);\n+    void set_state(rust_task_list *state,\n+                   rust_cond *cond, const char* cond_name);\n \n     void block(rust_cond *on, const char* name);\n     void wakeup(rust_cond *from);"}, {"sha": "57164a97c0f7a7c8802dbb784ea4aea82c1f579c", "filename": "src/rt/rust_task_thread.cpp", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2465a63a69ea51d4fce10430b6a8fd0079cbbcd5/src%2Frt%2Frust_task_thread.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/2465a63a69ea51d4fce10430b6a8fd0079cbbcd5/src%2Frt%2Frust_task_thread.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_thread.cpp?ref=2465a63a69ea51d4fce10430b6a8fd0079cbbcd5", "patch": "@@ -319,6 +319,29 @@ rust_task_thread::create_task(rust_task *spawner, const char *name,\n     return task->id;\n }\n \n+void \n+rust_task_thread::transition(rust_task *task,\n+                             rust_task_list *src, rust_task_list *dst,\n+                             rust_cond *cond, const char* cond_name) {\n+    bool unlock = false;\n+    if(!lock.lock_held_by_current_thread()) {\n+        unlock = true;\n+        lock.lock();\n+    }\n+    DLOG(this, task,\n+         \"task %s \" PTR \" state change '%s' -> '%s' while in '%s'\",\n+         name, (uintptr_t)this, src->name, dst->name,\n+         task->get_state()->name);\n+    I(this, task->get_state() == src);\n+    src->remove(task);\n+    dst->append(task);\n+    task->set_state(dst, cond, cond_name);\n+\n+    lock.signal();\n+    if(unlock)\n+        lock.unlock();\n+}\n+\n void rust_task_thread::run() {\n     this->start_main_loop();\n     sched->release_task_thread();"}, {"sha": "7b05c185be125c6ee908af43775a8e3c1e0786e2", "filename": "src/rt/rust_task_thread.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2465a63a69ea51d4fce10430b6a8fd0079cbbcd5/src%2Frt%2Frust_task_thread.h", "raw_url": "https://github.com/rust-lang/rust/raw/2465a63a69ea51d4fce10430b6a8fd0079cbbcd5/src%2Frt%2Frust_task_thread.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_thread.h?ref=2465a63a69ea51d4fce10430b6a8fd0079cbbcd5", "patch": "@@ -123,6 +123,10 @@ struct rust_task_thread : public kernel_owned<rust_task_thread>,\n     rust_task_id create_task(rust_task *spawner, const char *name,\n                              size_t init_stack_sz);\n \n+    void transition(rust_task *task,\n+                    rust_task_list *src, rust_task_list *dst,\n+                    rust_cond *cond, const char* cond_name);\n+\n     virtual void run();\n \n     void init_tls();"}]}