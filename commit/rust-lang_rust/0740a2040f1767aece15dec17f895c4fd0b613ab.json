{"sha": "0740a2040f1767aece15dec17f895c4fd0b613ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NDBhMjA0MGYxNzY3YWVjZTE1ZGVjMTdmODk1YzRmZDBiNjEzYWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-06T13:39:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-06T13:39:22Z"}, "message": "Auto merge of #1037 - JOE1994:master, r=RalfJung\n\nerror code E0080 is no longer printed with MIRI error message\n\nThanks to help from @bjorn3, @RalfJung, and @oli-obk on issue #1035 , I fixed the miri code so that error code **E0080** is no longer printed out for MIRI evaluation errors. I tested my code in my Linux machine as below.\n![image](https://user-images.githubusercontent.com/10286488/68264744-e71e6c80-0017-11ea-9028-f83e19164ea2.png)\n\nRemaining concern is whether the variable name `new_tcx` which I used is misleading or not.\n\nFixes https://github.com/rust-lang/miri/issues/1035", "tree": {"sha": "248f08ab8370ce361e5b3fdee502af505fb4fb3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/248f08ab8370ce361e5b3fdee502af505fb4fb3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0740a2040f1767aece15dec17f895c4fd0b613ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0740a2040f1767aece15dec17f895c4fd0b613ab", "html_url": "https://github.com/rust-lang/rust/commit/0740a2040f1767aece15dec17f895c4fd0b613ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0740a2040f1767aece15dec17f895c4fd0b613ab/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ddc37df7a27d442e72db07f02108a71f6ab3f6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ddc37df7a27d442e72db07f02108a71f6ab3f6e", "html_url": "https://github.com/rust-lang/rust/commit/4ddc37df7a27d442e72db07f02108a71f6ab3f6e"}, {"sha": "e5675ab0fc03d6f2960b0ec1a8b18bdc1d42b283", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5675ab0fc03d6f2960b0ec1a8b18bdc1d42b283", "html_url": "https://github.com/rust-lang/rust/commit/e5675ab0fc03d6f2960b0ec1a8b18bdc1d42b283"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "b09fb5918c874755720e66e0f5fdf327d1cba622", "filename": "src/eval.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0740a2040f1767aece15dec17f895c4fd0b613ab/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0740a2040f1767aece15dec17f895c4fd0b613ab/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=0740a2040f1767aece15dec17f895c4fd0b613ab", "patch": "@@ -9,7 +9,7 @@ use rustc::ty::{self, TyCtxt};\n use syntax::source_map::DUMMY_SP;\n \n use crate::{\n-    struct_error, EnvVars, Evaluator, FnVal, HelpersEvalContextExt, InterpCx, InterpError,\n+    EnvVars, Evaluator, FnVal, HelpersEvalContextExt, InterpCx, InterpError,\n     InterpResult, MemoryExtra, MiriMemoryKind, Pointer, Scalar, StackPopCleanup, Tag,\n     TlsEvalContextExt,\n };\n@@ -221,7 +221,7 @@ pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) {\n                 };\n \n                 let msg = format!(\"Miri evaluation error: {}\", msg);\n-                let mut err = struct_error(ecx.tcx.tcx.at(span), msg.as_str());\n+                let mut err = ecx.tcx.sess.struct_span_err(span, msg.as_str());\n                 let frames = ecx.generate_stacktrace(None);\n                 err.span_label(span, msg);\n                 // We iterate with indices because we need to look at the next frame (the caller)."}]}