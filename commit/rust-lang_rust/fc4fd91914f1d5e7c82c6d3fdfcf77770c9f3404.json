{"sha": "fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjNGZkOTE5MTRmMWQ1ZTdjODJjNmQzZmRmY2Y3Nzc3MGM5ZjM0MDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-13T05:27:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-13T05:27:29Z"}, "message": "Auto merge of #5900 - ThibsG:ParensUselessConversion4750, r=phansch\n\nFix: keep parenthesis for suggestion in `useless_conversion` lint\n\nNote: this lint was previously named `identity_conversion`.\n\nfixes: #4750\n\nchangelog: fix parenthesis for `useless_conversion` lint suggestion", "tree": {"sha": "59cab044cff32e952fe3486d52bfa5b24ff6352c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59cab044cff32e952fe3486d52bfa5b24ff6352c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404", "html_url": "https://github.com/rust-lang/rust/commit/fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc1e09bdc1b1fdfe35293efd9fa6884b06581b6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc1e09bdc1b1fdfe35293efd9fa6884b06581b6c", "html_url": "https://github.com/rust-lang/rust/commit/dc1e09bdc1b1fdfe35293efd9fa6884b06581b6c"}, {"sha": "5634c8da02862653be557c6ab1242a6c9ce86ce8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5634c8da02862653be557c6ab1242a6c9ce86ce8", "html_url": "https://github.com/rust-lang/rust/commit/5634c8da02862653be557c6ab1242a6c9ce86ce8"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "4ab2b5e796deb75f7361fc466c9d69306e7c7db4", "filename": "clippy_lints/src/useless_conversion.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404/clippy_lints%2Fsrc%2Fuseless_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404/clippy_lints%2Fsrc%2Fuseless_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuseless_conversion.rs?ref=fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404", "patch": "@@ -1,3 +1,4 @@\n+use crate::utils::sugg::Sugg;\n use crate::utils::{\n     get_parent_expr, is_type_diagnostic_item, match_def_path, match_trait_method, paths, snippet,\n     snippet_with_macro_callsite, span_lint_and_help, span_lint_and_sugg,\n@@ -158,7 +159,7 @@ impl<'tcx> LateLintPass<'tcx> for UselessConversion {\n                             if TyS::same_type(a, b);\n \n                             then {\n-                                let sugg = snippet(cx, args[0].span.source_callsite(), \"<expr>\").into_owned();\n+                                let sugg = Sugg::hir_with_macro_callsite(cx, &args[0], \"<expr>\").maybe_par();\n                                 let sugg_msg =\n                                     format!(\"consider removing `{}()`\", snippet(cx, path.span, \"From::from\"));\n                                 span_lint_and_sugg(\n@@ -167,7 +168,7 @@ impl<'tcx> LateLintPass<'tcx> for UselessConversion {\n                                     e.span,\n                                     \"useless conversion to the same type\",\n                                     &sugg_msg,\n-                                    sugg,\n+                                    sugg.to_string(),\n                                     Applicability::MachineApplicable, // snippet\n                                 );\n                             }"}, {"sha": "8a9b0cd3cf019466d3786f7be3eb08ceda2f0509", "filename": "tests/ui/useless_conversion.fixed", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404/tests%2Fui%2Fuseless_conversion.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404/tests%2Fui%2Fuseless_conversion.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_conversion.fixed?ref=fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404", "patch": "@@ -64,4 +64,9 @@ fn main() {\n     let _ = \"\".lines();\n     let _ = vec![1, 2, 3].into_iter();\n     let _: String = format!(\"Hello {}\", \"world\");\n+\n+    // keep parenthesis around `a + b` for suggestion (see #4750)\n+    let a: i32 = 1;\n+    let b: i32 = 1;\n+    let _ = (a + b) * 3;\n }"}, {"sha": "4faa1572973bc0ff5df24d3c2fe392e49d219c0d", "filename": "tests/ui/useless_conversion.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404/tests%2Fui%2Fuseless_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404/tests%2Fui%2Fuseless_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_conversion.rs?ref=fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404", "patch": "@@ -64,4 +64,9 @@ fn main() {\n     let _ = \"\".lines().into_iter();\n     let _ = vec![1, 2, 3].into_iter().into_iter();\n     let _: String = format!(\"Hello {}\", \"world\").into();\n+\n+    // keep parenthesis around `a + b` for suggestion (see #4750)\n+    let a: i32 = 1;\n+    let b: i32 = 1;\n+    let _ = i32::from(a + b) * 3;\n }"}, {"sha": "f1e880d2696c40c430e23e11f2a60aec52e5dc7f", "filename": "tests/ui/useless_conversion.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404/tests%2Fui%2Fuseless_conversion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404/tests%2Fui%2Fuseless_conversion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_conversion.stderr?ref=fc4fd91914f1d5e7c82c6d3fdfcf77770c9f3404", "patch": "@@ -64,5 +64,11 @@ error: useless conversion to the same type\n LL |     let _: String = format!(\"Hello {}\", \"world\").into();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `format!(\"Hello {}\", \"world\")`\n \n-error: aborting due to 10 previous errors\n+error: useless conversion to the same type\n+  --> $DIR/useless_conversion.rs:71:13\n+   |\n+LL |     let _ = i32::from(a + b) * 3;\n+   |             ^^^^^^^^^^^^^^^^ help: consider removing `i32::from()`: `(a + b)`\n+\n+error: aborting due to 11 previous errors\n "}]}