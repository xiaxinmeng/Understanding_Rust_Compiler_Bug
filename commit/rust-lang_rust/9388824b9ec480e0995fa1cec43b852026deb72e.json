{"sha": "9388824b9ec480e0995fa1cec43b852026deb72e", "node_id": "C_kwDOAAsO6NoAKDkzODg4MjRiOWVjNDgwZTA5OTVmYTFjZWM0M2I4NTIwMjZkZWI3MmU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-06-22T19:47:01Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-06-22T19:47:01Z"}, "message": "Contaminate ErrorGuaranteed.", "tree": {"sha": "bf48e4515812a2170cc893115addc5a8897121ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf48e4515812a2170cc893115addc5a8897121ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9388824b9ec480e0995fa1cec43b852026deb72e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9388824b9ec480e0995fa1cec43b852026deb72e", "html_url": "https://github.com/rust-lang/rust/commit/9388824b9ec480e0995fa1cec43b852026deb72e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9388824b9ec480e0995fa1cec43b852026deb72e/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95b83f9cac0a91aa3a215656accc8721de18db94", "url": "https://api.github.com/repos/rust-lang/rust/commits/95b83f9cac0a91aa3a215656accc8721de18db94", "html_url": "https://github.com/rust-lang/rust/commit/95b83f9cac0a91aa3a215656accc8721de18db94"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f3a043a08a30201b253b33f34ba6f8f00acaf39c", "filename": "compiler/rustc_typeck/src/coherence/orphan.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9388824b9ec480e0995fa1cec43b852026deb72e/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9388824b9ec480e0995fa1cec43b852026deb72e/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs?ref=9388824b9ec480e0995fa1cec43b852026deb72e", "patch": "@@ -24,8 +24,8 @@ pub(crate) fn orphan_check_impl(\n     impl_def_id: LocalDefId,\n ) -> Result<(), ErrorGuaranteed> {\n     let trait_ref = tcx.impl_trait_ref(impl_def_id).unwrap();\n-    if trait_ref.references_error() {\n-        return Ok(());\n+    if let Some(err) = trait_ref.error_reported() {\n+        return Err(err);\n     }\n \n     let ret = do_orphan_check_impl(tcx, trait_ref, impl_def_id);"}]}