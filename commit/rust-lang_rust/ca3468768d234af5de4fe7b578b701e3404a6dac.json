{"sha": "ca3468768d234af5de4fe7b578b701e3404a6dac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMzQ2ODc2OGQyMzRhZjVkZTRmZTdiNTc4YjcwMWUzNDA0YTZkYWM=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-10-30T18:41:22Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-10-30T18:41:22Z"}, "message": "ci: move toolstates.json to /tmp/toolstate/ and docker mount it\n\nBefore this commit toolstates.json was stored in /tmp and it wasn't\nmounted outside the build container. That caused uploading the file in\nthe upload-artifacts task to fail, as the file was missing on the host.\n\nMounting /tmp/toolstates.json alone is not the best approach: if the\nfile is missing when the container is started the Docker engine will\ncreate a *directory* named /tmp/toolstates.json.\n\nThe Docker issue could be solved by pre-creating an empty file named\n/tmp/toolstates.json, but doing that could cause problems if bootstrap\nfails to generate the file and the toolstate scripts receive an empty\nJSON.\n\nThe approach I took in this commit is to instead mount a /tmp/toolstate\ndirectory inside Docker, and create the toolstates.json file in it. That\nalso required a small bootstrap change to ensure the directory is\ncreated if it's missing.", "tree": {"sha": "57f6d40ad128a058681ec7f696abb3b942ab740a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57f6d40ad128a058681ec7f696abb3b942ab740a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca3468768d234af5de4fe7b578b701e3404a6dac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl252VYACgkQPgar6Auq\n8Zyy4BAAj+kaCn1LaxlPY5Oi18zuUALMitHzDjkBu+LUH26l/O85GH1zckbNfHrS\nim+4DDKjk9WsgloJMURCD1RLxnUmwBV+kfSmn8+1lHfbIyLpt04d4DgLI9SzEUIC\nr8ZUgQcyb/KmWgjpXD/lhOB3HcAqXkrKTf02cPydKSEOXiQtUQmLIm4mqIGbMsDP\net9C2t/5Vt49EUvQaZl5Nm08RgLj4xiznxChfHOBgbkmwhmIIlv7XjmcUJHdhfTE\nJAuOUSNPZUjC1Uoxx69LGtTe36px4U68RFbjecZ5Z593LDznuqxTG6dw8RQAUY3F\nwY274JK9jQYuxLZgP6GuZad+pJFJD2RXmr6EKyQVhdalbKC10dPrxWv4XdPegh68\nsgFsTVleHrxGUzwrZ7yghW0//L0npXF/HgkQOsVTXhra9m/63612gt396Lu8D6f7\nQtXhAZ4T/Ey/SV5vx1/PxzuorYBPLFdyVk0re9WLJvvbPlC2BqTduLDSBiTfdE7X\nfRNL562IHw3o1fDjmaqfkdrQE1peHUZGAgC1kFLmFdTZBnwbGcFmN0vF2ioKbAHk\nuHLzzu07cocEQFOgSI5VGsQAaYfM0JTQWUwgeLjmR+ExAbu4MsgOqC9i3/s9IxX/\nL08/fwgRo7txmeHduhb6J6IbjeI4jtXs5IEbq4wXzgBO52XzAGs=\n=1TfG\n-----END PGP SIGNATURE-----", "payload": "tree 57f6d40ad128a058681ec7f696abb3b942ab740a\nparent bdfcde439bcea75d74fe3b181d13332384daf130\nauthor Pietro Albini <pietro@pietroalbini.org> 1572460882 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1572460882 +0100\n\nci: move toolstates.json to /tmp/toolstate/ and docker mount it\n\nBefore this commit toolstates.json was stored in /tmp and it wasn't\nmounted outside the build container. That caused uploading the file in\nthe upload-artifacts task to fail, as the file was missing on the host.\n\nMounting /tmp/toolstates.json alone is not the best approach: if the\nfile is missing when the container is started the Docker engine will\ncreate a *directory* named /tmp/toolstates.json.\n\nThe Docker issue could be solved by pre-creating an empty file named\n/tmp/toolstates.json, but doing that could cause problems if bootstrap\nfails to generate the file and the toolstate scripts receive an empty\nJSON.\n\nThe approach I took in this commit is to instead mount a /tmp/toolstate\ndirectory inside Docker, and create the toolstates.json file in it. That\nalso required a small bootstrap change to ensure the directory is\ncreated if it's missing.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca3468768d234af5de4fe7b578b701e3404a6dac", "html_url": "https://github.com/rust-lang/rust/commit/ca3468768d234af5de4fe7b578b701e3404a6dac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca3468768d234af5de4fe7b578b701e3404a6dac/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdfcde439bcea75d74fe3b181d13332384daf130", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdfcde439bcea75d74fe3b181d13332384daf130", "html_url": "https://github.com/rust-lang/rust/commit/bdfcde439bcea75d74fe3b181d13332384daf130"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "39d7ea922bceda50770772869345adc83364b440", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca3468768d234af5de4fe7b578b701e3404a6dac/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca3468768d234af5de4fe7b578b701e3404a6dac/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=ca3468768d234af5de4fe7b578b701e3404a6dac", "patch": "@@ -1080,6 +1080,10 @@ impl Build {\n     /// done. The file is updated immediately after this function completes.\n     pub fn save_toolstate(&self, tool: &str, state: ToolState) {\n         if let Some(ref path) = self.config.save_toolstates {\n+            if let Some(parent) = path.parent() {\n+                // Ensure the parent directory always exists\n+                t!(std::fs::create_dir_all(parent));\n+            }\n             let mut file = t!(fs::OpenOptions::new()\n                 .create(true)\n                 .read(true)"}, {"sha": "271c32585449ec295495a2882fb480de246af258", "filename": "src/ci/azure-pipelines/auto.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca3468768d234af5de4fe7b578b701e3404a6dac/src%2Fci%2Fazure-pipelines%2Fauto.yml", "raw_url": "https://github.com/rust-lang/rust/raw/ca3468768d234af5de4fe7b578b701e3404a6dac/src%2Fci%2Fazure-pipelines%2Fauto.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fauto.yml?ref=ca3468768d234af5de4fe7b578b701e3404a6dac", "patch": "@@ -263,8 +263,8 @@ jobs:\n       # MSVC tools tests\n       x86_64-msvc-tools:\n         MSYS_BITS: 64\n-        SCRIPT: src/ci/docker/x86_64-gnu-tools/checktools.sh x.py /tmp/toolstates.json windows\n-        RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstates.json\n+        SCRIPT: src/ci/docker/x86_64-gnu-tools/checktools.sh x.py /tmp/toolstate/toolstates.json windows\n+        RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstate/toolstates.json\n         DEPLOY_TOOLSTATES_JSON: toolstates-windows.json\n \n       # 32/64-bit MinGW builds."}, {"sha": "cdafcbadc9ec768bc9c044cfc2369c7ac51f3a82", "filename": "src/ci/docker/run.sh", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca3468768d234af5de4fe7b578b701e3404a6dac/src%2Fci%2Fdocker%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ca3468768d234af5de4fe7b578b701e3404a6dac/src%2Fci%2Fdocker%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Frun.sh?ref=ca3468768d234af5de4fe7b578b701e3404a6dac", "patch": "@@ -106,6 +106,7 @@ fi\n mkdir -p $HOME/.cargo\n mkdir -p $objdir/tmp\n mkdir -p $objdir/cores\n+mkdir -p /tmp/toolstate\n \n args=\n if [ \"$SCCACHE_BUCKET\" != \"\" ]; then\n@@ -156,6 +157,7 @@ else\n   args=\"$args --volume $objdir:/checkout/obj\"\n   args=\"$args --volume $HOME/.cargo:/cargo\"\n   args=\"$args --volume $HOME/rustsrc:$HOME/rustsrc\"\n+  args=\"$args --volume /tmp/toolstate:/tmp/toolstate\"\n   args=\"$args --env LOCAL_USER_ID=`id -u`\"\n fi\n "}, {"sha": "7687a6ca23e180fb386ac2446fd169d239c21a45", "filename": "src/ci/docker/x86_64-gnu-tools/Dockerfile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca3468768d234af5de4fe7b578b701e3404a6dac/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ca3468768d234af5de4fe7b578b701e3404a6dac/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2FDockerfile?ref=ca3468768d234af5de4fe7b578b701e3404a6dac", "patch": "@@ -26,5 +26,5 @@ ENV CHECK_LINKS 1\n \n ENV RUST_CONFIGURE_ARGS \\\n   --build=x86_64-unknown-linux-gnu \\\n-  --save-toolstates=/tmp/toolstates.json\n-ENV SCRIPT /tmp/checktools.sh ../x.py /tmp/toolstates.json linux\n+  --save-toolstates=/tmp/toolstate/toolstates.json\n+ENV SCRIPT /tmp/checktools.sh ../x.py /tmp/toolstate/toolstates.json linux"}, {"sha": "ebb8c0bda53ee2ae3654a1d9e28388b2eeafcb07", "filename": "src/ci/docker/x86_64-gnu-tools/checktools.sh", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca3468768d234af5de4fe7b578b701e3404a6dac/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ca3468768d234af5de4fe7b578b701e3404a6dac/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh?ref=ca3468768d234af5de4fe7b578b701e3404a6dac", "patch": "@@ -3,7 +3,7 @@\n set -eu\n \n X_PY=\"$1\"\n-TOOLSTATE_FILE=\"$(realpath $2)\"\n+TOOLSTATE_FILE=\"$(realpath -m $2)\"\n OS=\"$3\"\n COMMIT=\"$(git rev-parse HEAD)\"\n CHANGED_FILES=\"$(git diff --name-status HEAD HEAD^)\"\n@@ -13,6 +13,7 @@ SIX_WEEK_CYCLE=\"$(( ($(date +%s) / 86400 - 20) % 42 ))\"\n #   The Wednesday after this has value 0.\n #   We track this value to prevent regressing tools in the last week of the 6-week cycle.\n \n+mkdir -p \"$(dirname $TOOLSTATE_FILE)\"\n touch \"$TOOLSTATE_FILE\"\n \n # Try to test all the tools and store the build/test success in the TOOLSTATE_FILE"}, {"sha": "312ec9d805012c7433fc54b7643bf2cb9926a6d2", "filename": "src/ci/scripts/upload-artifacts.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca3468768d234af5de4fe7b578b701e3404a6dac/src%2Fci%2Fscripts%2Fupload-artifacts.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ca3468768d234af5de4fe7b578b701e3404a6dac/src%2Fci%2Fscripts%2Fupload-artifacts.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fupload-artifacts.sh?ref=ca3468768d234af5de4fe7b578b701e3404a6dac", "patch": "@@ -25,7 +25,7 @@ cp cpu-usage.csv \"${upload_dir}/cpu-${CI_JOB_NAME}.csv\"\n \n # Toolstate data.\n if [[ -n \"${DEPLOY_TOOLSTATES_JSON+x}\" ]]; then\n-    cp /tmp/toolstates.json \"${upload_dir}/${DEPLOY_TOOLSTATES_JSON}\"\n+    cp /tmp/toolstate/toolstates.json \"${upload_dir}/${DEPLOY_TOOLSTATES_JSON}\"\n fi\n \n echo \"Files that will be uploaded:\""}]}