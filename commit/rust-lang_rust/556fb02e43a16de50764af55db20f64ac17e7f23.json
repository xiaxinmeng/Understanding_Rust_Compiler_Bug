{"sha": "556fb02e43a16de50764af55db20f64ac17e7f23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NmZiMDJlNDNhMTZkZTUwNzY0YWY1NWRiMjBmNjRhYzE3ZTdmMjM=", "commit": {"author": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2017-12-23T22:51:06Z"}, "committer": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2017-12-23T22:51:06Z"}, "message": "Move Bits constraints to RawFloat::RawBits", "tree": {"sha": "dd2b99548a64898c8aa839dfc1dd6f6151ca07c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd2b99548a64898c8aa839dfc1dd6f6151ca07c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/556fb02e43a16de50764af55db20f64ac17e7f23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/556fb02e43a16de50764af55db20f64ac17e7f23", "html_url": "https://github.com/rust-lang/rust/commit/556fb02e43a16de50764af55db20f64ac17e7f23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/556fb02e43a16de50764af55db20f64ac17e7f23/comments", "author": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2cdeb58f680b87b5bdb6a17cba857ac51307c8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2cdeb58f680b87b5bdb6a17cba857ac51307c8f", "html_url": "https://github.com/rust-lang/rust/commit/a2cdeb58f680b87b5bdb6a17cba857ac51307c8f"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "77180233a2389e50dee760fcda12c66be961813e", "filename": "src/libcore/num/dec2flt/rawfp.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/556fb02e43a16de50764af55db20f64ac17e7f23/src%2Flibcore%2Fnum%2Fdec2flt%2Frawfp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/556fb02e43a16de50764af55db20f64ac17e7f23/src%2Flibcore%2Fnum%2Fdec2flt%2Frawfp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdec2flt%2Frawfp.rs?ref=556fb02e43a16de50764af55db20f64ac17e7f23", "patch": "@@ -28,8 +28,8 @@\n //! take the universally-correct slow path (Algorithm M) for very small and very large numbers.\n //! That algorithm needs only next_float() which does handle subnormals and zeros.\n use cmp::Ordering::{Less, Equal, Greater};\n-use convert::TryInto;\n-use ops::{Mul, Div, Neg};\n+use convert::{TryFrom, TryInto};\n+use ops::{Add, Mul, Div, Neg};\n use fmt::{Debug, LowerExp};\n use num::diy_float::Fp;\n use num::FpCategory::{Infinite, Zero, Subnormal, Normal, Nan};\n@@ -55,13 +55,24 @@ impl Unpacked {\n ///\n /// Should **never ever** be implemented for other types or be used outside the dec2flt module.\n /// Inherits from `Float` because there is some overlap, but all the reused methods are trivial.\n-pub trait RawFloat : Float + Copy + Debug + LowerExp\n-                    + Mul<Output=Self> + Div<Output=Self> + Neg<Output=Self>\n+pub trait RawFloat\n+    : Float\n+    + Copy\n+    + Debug\n+    + LowerExp\n+    + Mul<Output=Self>\n+    + Div<Output=Self>\n+    + Neg<Output=Self>\n+where\n+    Self: Float<Bits = <Self as RawFloat>::RawBits>\n {\n     const INFINITY: Self;\n     const NAN: Self;\n     const ZERO: Self;\n \n+    /// Same as `Float::Bits` with extra traits.\n+    type RawBits: Add<Output = Self::RawBits> + From<u8> + TryFrom<u64>;\n+\n     /// Returns the mantissa, exponent and sign as integers.\n     fn integer_decode(self) -> (u64, i16, i8);\n \n@@ -142,6 +153,8 @@ macro_rules! other_constants {\n }\n \n impl RawFloat for f32 {\n+    type RawBits = u32;\n+\n     const SIG_BITS: u8 = 24;\n     const EXP_BITS: u8 = 8;\n     const CEIL_LOG5_OF_MAX_SIG: i16 = 11;\n@@ -183,6 +196,8 @@ impl RawFloat for f32 {\n \n \n impl RawFloat for f64 {\n+    type RawBits = u64;\n+\n     const SIG_BITS: u8 = 53;\n     const EXP_BITS: u8 = 11;\n     const CEIL_LOG5_OF_MAX_SIG: i16 = 23;"}, {"sha": "ebf8a9597feafa33cc2535d2f3cc57d8786ddbce", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/556fb02e43a16de50764af55db20f64ac17e7f23/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/556fb02e43a16de50764af55db20f64ac17e7f23/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=556fb02e43a16de50764af55db20f64ac17e7f23", "patch": "@@ -2874,7 +2874,7 @@ pub enum FpCategory {\n pub trait Float: Sized {\n     /// Type used by `to_bits` and `from_bits`.\n     #[stable(feature = \"core_float_bits\", since = \"1.24.0\")]\n-    type Bits: ops::Add<Output = Self::Bits> + From<u8> + TryFrom<u64>;\n+    type Bits;\n \n     /// Returns `true` if this value is NaN and false otherwise.\n     #[stable(feature = \"core\", since = \"1.6.0\")]"}]}