{"sha": "1e8ec2db1d3d695958a8040fbb3491a4378ef7ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlOGVjMmRiMWQzZDY5NTk1OGE4MDQwZmJiMzQ5MWE0Mzc4ZWY3YWU=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-07-07T03:10:19Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-07-10T01:53:26Z"}, "message": "Add an explanatory comment to `scoped_thread`.", "tree": {"sha": "4c31bdfc360c6b0b913b9d97d82852f9baad6d88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c31bdfc360c6b0b913b9d97d82852f9baad6d88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e8ec2db1d3d695958a8040fbb3491a4378ef7ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e8ec2db1d3d695958a8040fbb3491a4378ef7ae", "html_url": "https://github.com/rust-lang/rust/commit/1e8ec2db1d3d695958a8040fbb3491a4378ef7ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e8ec2db1d3d695958a8040fbb3491a4378ef7ae/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a7d2970e5947e7a2940a32e6975817a389b0708", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a7d2970e5947e7a2940a32e6975817a389b0708", "html_url": "https://github.com/rust-lang/rust/commit/0a7d2970e5947e7a2940a32e6975817a389b0708"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "438b72b0b617606001bf0aba5707628e623e2fb6", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e8ec2db1d3d695958a8040fbb3491a4378ef7ae/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e8ec2db1d3d695958a8040fbb3491a4378ef7ae/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=1e8ec2db1d3d695958a8040fbb3491a4378ef7ae", "patch": "@@ -102,6 +102,8 @@ impl Write for Sink {\n     }\n }\n \n+/// Like a `thread::Builder::spawn` followed by a `join()`, but avoids the need\n+/// for `'static` bounds.\n #[cfg(not(parallel_compiler))]\n pub fn scoped_thread<F: FnOnce() -> R + Send, R: Send>(cfg: thread::Builder, f: F) -> R {\n     struct Ptr(*mut ());"}]}