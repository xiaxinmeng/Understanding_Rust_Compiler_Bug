{"sha": "dfdb017a9bb6284f58ff8447cd2a49c778552f62", "node_id": "C_kwDOAAsO6NoAKGRmZGIwMTdhOWJiNjI4NGY1OGZmODQ0N2NkMmE0OWM3Nzg1NTJmNjI", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2022-06-30T04:31:41Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2022-07-06T14:53:28Z"}, "message": "experiment: trying to encode the end-to-end test as a ui test via rust_test_helpers. This instance is almost certainly insufficient because we need to force optimization flags for both the C and Rust sides of the code. but lets find out for sure.", "tree": {"sha": "8d6418504b0a33b92b8a37e33a8d251559c1aeb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d6418504b0a33b92b8a37e33a8d251559c1aeb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfdb017a9bb6284f58ff8447cd2a49c778552f62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfdb017a9bb6284f58ff8447cd2a49c778552f62", "html_url": "https://github.com/rust-lang/rust/commit/dfdb017a9bb6284f58ff8447cd2a49c778552f62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfdb017a9bb6284f58ff8447cd2a49c778552f62/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ae5a55ba55a434995d2e2e87f8ef15237ff8124", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ae5a55ba55a434995d2e2e87f8ef15237ff8124", "html_url": "https://github.com/rust-lang/rust/commit/8ae5a55ba55a434995d2e2e87f8ef15237ff8124"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "977ea487a9804b229f83a93402020ca65487b124", "filename": "src/test/auxiliary/rust_test_helpers.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dfdb017a9bb6284f58ff8447cd2a49c778552f62/src%2Ftest%2Fauxiliary%2Frust_test_helpers.c", "raw_url": "https://github.com/rust-lang/rust/raw/dfdb017a9bb6284f58ff8447cd2a49c778552f62/src%2Ftest%2Fauxiliary%2Frust_test_helpers.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Frust_test_helpers.c?ref=dfdb017a9bb6284f58ff8447cd2a49c778552f62", "patch": "@@ -1,6 +1,7 @@\n // Helper functions used only in tests\n \n #include <stdint.h>\n+#include <stdlib.h>\n #include <assert.h>\n #include <stdarg.h>\n \n@@ -415,3 +416,14 @@ rust_dbg_unpack_option_u64u64(struct U8TaggedEnumOptionU64U64 o, uint64_t *a, ui\n         return 0;\n     }\n }\n+\n+uint16_t issue_97463_leak_uninit_data(uint32_t a, uint32_t b, uint32_t c) {\n+    struct bloc { uint16_t a; uint16_t b; uint16_t c; };\n+    struct bloc *data = malloc(sizeof(struct bloc));\n+\n+    data->a = a & 0xFFFF;\n+    data->b = b & 0xFFFF;\n+    data->c = c & 0xFFFF;\n+\n+    return data->b; /* leak data */\n+}"}, {"sha": "d04375acb30a2cefb3ae1a015b773bd2a4cc7306", "filename": "src/test/ui/abi/issues/issue-97463-broken-abi-leaked-uninit-data.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/dfdb017a9bb6284f58ff8447cd2a49c778552f62/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-97463-broken-abi-leaked-uninit-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfdb017a9bb6284f58ff8447cd2a49c778552f62/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-97463-broken-abi-leaked-uninit-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-97463-broken-abi-leaked-uninit-data.rs?ref=dfdb017a9bb6284f58ff8447cd2a49c778552f62", "patch": "@@ -0,0 +1,38 @@\n+// run-pass\n+#![allow(dead_code)]\n+#![allow(improper_ctypes)]\n+\n+#[link(name = \"rust_test_helpers\", kind = \"static\")]\n+extern \"C\" {\n+    pub fn issue_97463_leak_uninit_data(a: u32, b: u32, c: u32) -> u16;\n+}\n+\n+fn main() {\n+    const C1: usize = 0x327b23c6;\n+    const C2: usize = C1 & 0xFFFF;\n+\n+    let r1: usize = 0x0;\n+    let r2: usize = C1;\n+    let r3: usize = 0x0;\n+    let value: u16 = unsafe { issue_97463_leak_uninit_data(r1 as u32, r2 as u32, r3 as u32) };\n+\n+    // NOTE: as an example of the sensitivity of this test to optimization choices,\n+    // uncommenting this block of code makes the bug go away on pnkfeix's machine.\n+    // (But observing via `dbg!` doesn't hide the bug. At least sometimes.)\n+    /*\n+    println!(\"{}\", value);\n+    println!(\"{}\", value as usize);\n+    println!(\"{}\", usize::from(value));\n+    println!(\"{}\", (value as usize) & 0xFFFF);\n+     */\n+\n+    let d1 = value;\n+    let d2 = value as usize;\n+    let d3 = usize::from(value);\n+    let d4 = (value as usize) & 0xFFFF;\n+\n+    let d = (&d1, &d2, &d3, &d4);\n+    let d_ = (d1, d2, d3, d4);\n+\n+    assert_eq!(((&(C2 as u16), &C2, &C2, &C2), (C2 as u16, C2, C2, C2)), (d, d_));\n+}"}]}