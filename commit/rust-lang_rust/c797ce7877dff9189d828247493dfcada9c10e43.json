{"sha": "c797ce7877dff9189d828247493dfcada9c10e43", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3OTdjZTc4NzdkZmY5MTg5ZDgyODI0NzQ5M2RmY2FkYTljMTBlNDM=", "commit": {"author": {"name": "Bijan Tabatabai", "email": "bijan311@yahoo.com", "date": "2020-01-31T16:16:55Z"}, "committer": {"name": "Bijan Tabatabai", "email": "bijan311@yahoo.com", "date": "2020-02-19T16:29:12Z"}, "message": "Add LinkedList::remove()\n\nLinkedList::remove() removes the element at the specified index and returns it.\n\nSigned-off-by: Bijan Tabatabai <bijan311@yahoo.com>", "tree": {"sha": "fe90eda7655b16305c548f06f8191c1e519b71e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe90eda7655b16305c548f06f8191c1e519b71e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c797ce7877dff9189d828247493dfcada9c10e43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c797ce7877dff9189d828247493dfcada9c10e43", "html_url": "https://github.com/rust-lang/rust/commit/c797ce7877dff9189d828247493dfcada9c10e43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c797ce7877dff9189d828247493dfcada9c10e43/comments", "author": {"login": "BijanT", "id": 5490254, "node_id": "MDQ6VXNlcjU0OTAyNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5490254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BijanT", "html_url": "https://github.com/BijanT", "followers_url": "https://api.github.com/users/BijanT/followers", "following_url": "https://api.github.com/users/BijanT/following{/other_user}", "gists_url": "https://api.github.com/users/BijanT/gists{/gist_id}", "starred_url": "https://api.github.com/users/BijanT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BijanT/subscriptions", "organizations_url": "https://api.github.com/users/BijanT/orgs", "repos_url": "https://api.github.com/users/BijanT/repos", "events_url": "https://api.github.com/users/BijanT/events{/privacy}", "received_events_url": "https://api.github.com/users/BijanT/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BijanT", "id": 5490254, "node_id": "MDQ6VXNlcjU0OTAyNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5490254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BijanT", "html_url": "https://github.com/BijanT", "followers_url": "https://api.github.com/users/BijanT/followers", "following_url": "https://api.github.com/users/BijanT/following{/other_user}", "gists_url": "https://api.github.com/users/BijanT/gists{/gist_id}", "starred_url": "https://api.github.com/users/BijanT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BijanT/subscriptions", "organizations_url": "https://api.github.com/users/BijanT/orgs", "repos_url": "https://api.github.com/users/BijanT/repos", "events_url": "https://api.github.com/users/BijanT/events{/privacy}", "received_events_url": "https://api.github.com/users/BijanT/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecde10fc283530db0db42e2c3e2e3132e809b139", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecde10fc283530db0db42e2c3e2e3132e809b139", "html_url": "https://github.com/rust-lang/rust/commit/ecde10fc283530db0db42e2c3e2e3132e809b139"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "f8f987efeb891b434f4e72629d86ebfd0430628a", "filename": "src/liballoc/collections/linked_list.rs", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/c797ce7877dff9189d828247493dfcada9c10e43/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c797ce7877dff9189d828247493dfcada9c10e43/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Flinked_list.rs?ref=c797ce7877dff9189d828247493dfcada9c10e43", "patch": "@@ -878,6 +878,52 @@ impl<T> LinkedList<T> {\n         unsafe { self.split_off_after_node(split_node, at) }\n     }\n \n+    /// Removes the element at the given index and returns it.\n+    ///\n+    /// This operation should compute in O(n) time.\n+    ///\n+    /// # Panics\n+    /// Panics if at >= len\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(linked_list_remove)]\n+    /// use std::collections::LinkedList;\n+    ///\n+    /// let mut d = LinkedList::new();\n+    ///\n+    /// d.push_front(1);\n+    /// d.push_front(2);\n+    /// d.push_front(3);\n+    ///\n+    /// assert_eq!(d.remove(1), 2);\n+    /// assert_eq!(d.remove(0), 3);\n+    /// assert_eq!(d.remove(0), 1);\n+    /// ```\n+    #[unstable(feature = \"linked_list_remove\", issue = \"69210\")]\n+    pub fn remove(&mut self, at: usize) -> T {\n+        let len = self.len();\n+        assert!(at < len, \"Cannot remove at an index outside of the list bounds\");\n+\n+        // Below, we iterate towards the node at the given index, either from\n+        // the start or the end, depending on which would be faster.\n+        let offset_from_end = len - at - 1;\n+        if at <= offset_from_end {\n+            let mut cursor = self.cursor_front_mut();\n+            for _ in 0..at {\n+                cursor.move_next();\n+            }\n+            cursor.remove_current().unwrap()\n+        } else {\n+            let mut cursor = self.cursor_back_mut();\n+            for _ in 0..offset_from_end {\n+                cursor.move_prev();\n+            }\n+            cursor.remove_current().unwrap()\n+        }\n+    }\n+\n     /// Creates an iterator which uses a closure to determine if an element should be removed.\n     ///\n     /// If the closure returns true, then the element is removed and yielded."}]}