{"sha": "ab9a0b77248c81a32a8153d52c7eade0f2b37e7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiOWEwYjc3MjQ4YzgxYTMyYTgxNTNkNTJjN2VhZGUwZjJiMzdlN2Y=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-25T12:59:02Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-25T12:59:02Z"}, "message": "Change name of metadata file to rust.metadata.bin to match cg_llvm", "tree": {"sha": "0d17b9a5e8b492976a2528704b4cc3882c316720", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d17b9a5e8b492976a2528704b4cc3882c316720"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab9a0b77248c81a32a8153d52c7eade0f2b37e7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab9a0b77248c81a32a8153d52c7eade0f2b37e7f", "html_url": "https://github.com/rust-lang/rust/commit/ab9a0b77248c81a32a8153d52c7eade0f2b37e7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab9a0b77248c81a32a8153d52c7eade0f2b37e7f/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06d3693e61d9ddc30a43ee1ed11aca3b09d42a9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/06d3693e61d9ddc30a43ee1ed11aca3b09d42a9c", "html_url": "https://github.com/rust-lang/rust/commit/06d3693e61d9ddc30a43ee1ed11aca3b09d42a9c"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "b14ed0e67863d87a33cde9cced03901b5174e8c2", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ab9a0b77248c81a32a8153d52c7eade0f2b37e7f/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab9a0b77248c81a32a8153d52c7eade0f2b37e7f/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=ab9a0b77248c81a32a8153d52c7eade0f2b37e7f", "patch": "@@ -33,7 +33,6 @@ use crate::rustc::session::{config::OutputFilenames, CompileIncomplete};\n use crate::rustc::ty::query::Providers;\n use crate::rustc_codegen_utils::codegen_backend::CodegenBackend;\n use crate::rustc_codegen_utils::link::out_filename;\n-use crate::rustc_data_structures::svh::Svh;\n use crate::syntax::symbol::Symbol;\n \n use cranelift::codegen::settings;\n@@ -94,7 +93,7 @@ mod prelude {\n     pub use crate::common::*;\n     pub use crate::Caches;\n \n-    pub fn should_codegen(sess: &Session) -> bool {\n+    pub fn should_codegen(_sess: &Session) -> bool {\n         true\n         //::std::env::var(\"SHOULD_CODEGEN\").is_ok()\n         //    || sess.crate_types.get().contains(&CrateType::Executable)\n@@ -124,7 +123,6 @@ struct OngoingCodegen {\n     product: cranelift_faerie::FaerieProduct,\n     metadata: Vec<u8>,\n     crate_name: Symbol,\n-    crate_hash: Svh,\n }\n \n impl CodegenBackend for CraneliftCodegenBackend {\n@@ -255,7 +253,6 @@ impl CodegenBackend for CraneliftCodegenBackend {\n                 product: faerie_module.finish(),\n                 metadata: metadata.raw_data,\n                 crate_name: tcx.crate_name(LOCAL_CRATE),\n-                crate_hash: tcx.crate_hash(LOCAL_CRATE),\n             });\n         }\n     }\n@@ -274,8 +271,6 @@ impl CodegenBackend for CraneliftCodegenBackend {\n         let artifact = ongoing_codegen.product.artifact;\n         let metadata = ongoing_codegen.metadata;\n \n-        let metadata_name =\n-            \".rustc.clif_metadata\".to_string() + &ongoing_codegen.crate_hash.to_string();\n         /*\n         artifact\n             .declare_with(\n@@ -320,7 +315,7 @@ impl CodegenBackend for CraneliftCodegenBackend {\n                         builder\n                             .append(\n                                 &ar::Header::new(\n-                                    metadata_name.as_bytes().to_vec(),\n+                                    metadata::METADATA_FILE.to_vec(),\n                                     metadata.len() as u64,\n                                 ),\n                                 ::std::io::Cursor::new(metadata.clone()),"}, {"sha": "1e68e9f1363a9a9c594f1cb50873b7235c7ad7c1", "filename": "src/metadata.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ab9a0b77248c81a32a8153d52c7eade0f2b37e7f/src%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab9a0b77248c81a32a8153d52c7eade0f2b37e7f/src%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmetadata.rs?ref=ab9a0b77248c81a32a8153d52c7eade0f2b37e7f", "patch": "@@ -3,6 +3,8 @@ use crate::rustc_data_structures::owning_ref::{self, OwningRef};\n use std::fs::File;\n use std::path::Path;\n \n+pub const METADATA_FILE: &'static [u8] = b\"rust.metadata.bin\" as &[u8];\n+\n pub struct CraneliftMetadataLoader;\n \n impl MetadataLoader for CraneliftMetadataLoader {\n@@ -17,8 +19,7 @@ impl MetadataLoader for CraneliftMetadataLoader {\n             let mut entry = entry_result.map_err(|e| format!(\"{:?}\", e))?;\n             if entry\n                 .header()\n-                .identifier()\n-                .starts_with(b\".rustc.clif_metadata\")\n+                .identifier() == METADATA_FILE\n             {\n                 let mut buf = Vec::new();\n                 ::std::io::copy(&mut entry, &mut buf).map_err(|e| format!(\"{:?}\", e))?;"}]}