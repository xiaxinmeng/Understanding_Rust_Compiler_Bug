{"sha": "16f75f773d27653993b98d50ca5b76bfc351be36", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2Zjc1Zjc3M2QyNzY1Mzk5M2I5OGQ1MGNhNWI3NmJmYzM1MWJlMzY=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-09-03T10:35:41Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-09-03T10:35:41Z"}, "message": "create a region-map for types in generics\n\nFixes #28181\nThis may fix #28151", "tree": {"sha": "2df085bc1c5d51ecb1ccb6865a858cc2d5e406d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2df085bc1c5d51ecb1ccb6865a858cc2d5e406d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16f75f773d27653993b98d50ca5b76bfc351be36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16f75f773d27653993b98d50ca5b76bfc351be36", "html_url": "https://github.com/rust-lang/rust/commit/16f75f773d27653993b98d50ca5b76bfc351be36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16f75f773d27653993b98d50ca5b76bfc351be36/comments", "author": null, "committer": null, "parents": [{"sha": "1661947014fc2ecbbb7a30b1604499500dcf767e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1661947014fc2ecbbb7a30b1604499500dcf767e", "html_url": "https://github.com/rust-lang/rust/commit/1661947014fc2ecbbb7a30b1604499500dcf767e"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "f18c0b1615eccad74387f6d89f12f4bd9fb51f1a", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/16f75f773d27653993b98d50ca5b76bfc351be36/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16f75f773d27653993b98d50ca5b76bfc351be36/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=16f75f773d27653993b98d50ca5b76bfc351be36", "patch": "@@ -317,7 +317,10 @@ impl RegionMaps {\n         self.intern_code_extent(e, DUMMY_CODE_EXTENT)\n     }\n     pub fn lookup_code_extent(&self, e: CodeExtentData) -> CodeExtent {\n-        self.code_extent_interner.borrow()[&e]\n+        match self.code_extent_interner.borrow().get(&e) {\n+            Some(&d) => d,\n+            None => panic!(\"unknown code extent {:?}\", e)\n+        }\n     }\n     pub fn node_extent(&self, n: ast::NodeId) -> CodeExtent {\n         self.lookup_code_extent(CodeExtentData::Misc(n))\n@@ -1069,7 +1072,7 @@ fn resolve_item(visitor: &mut RegionResolutionVisitor, item: &hir::Item) {\n }\n \n fn resolve_fn(visitor: &mut RegionResolutionVisitor,\n-              _: FnKind,\n+              kind: FnKind,\n               decl: &hir::FnDecl,\n               body: &hir::Block,\n               sp: Span,\n@@ -1102,6 +1105,7 @@ fn resolve_fn(visitor: &mut RegionResolutionVisitor,\n     };\n \n     visit::walk_fn_decl(visitor, decl);\n+    visit::walk_fn_kind(visitor, kind);\n \n     // The body of the every fn is a root scope.\n     visitor.cx = Context {"}, {"sha": "f20e5345f20668145159109abba3f6b29b93f9e3", "filename": "src/librustc_front/visit.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/16f75f773d27653993b98d50ca5b76bfc351be36/src%2Flibrustc_front%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16f75f773d27653993b98d50ca5b76bfc351be36/src%2Flibrustc_front%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Fvisit.rs?ref=16f75f773d27653993b98d50ca5b76bfc351be36", "patch": "@@ -580,13 +580,8 @@ pub fn walk_fn_decl<'v, V: Visitor<'v>>(visitor: &mut V, function_declaration: &\n     walk_fn_ret_ty(visitor, &function_declaration.output)\n }\n \n-pub fn walk_fn<'v, V: Visitor<'v>>(visitor: &mut V,\n-                                   function_kind: FnKind<'v>,\n-                                   function_declaration: &'v FnDecl,\n-                                   function_body: &'v Block,\n-                                   _span: Span) {\n-    walk_fn_decl(visitor, function_declaration);\n-\n+pub fn walk_fn_kind<'v, V: Visitor<'v>>(visitor: &mut V,\n+                                        function_kind: FnKind<'v>) {\n     match function_kind {\n         FnKind::ItemFn(_, generics, _, _, _, _) => {\n             visitor.visit_generics(generics);\n@@ -597,7 +592,15 @@ pub fn walk_fn<'v, V: Visitor<'v>>(visitor: &mut V,\n         }\n         FnKind::Closure(..) => {}\n     }\n+}\n \n+pub fn walk_fn<'v, V: Visitor<'v>>(visitor: &mut V,\n+                                   function_kind: FnKind<'v>,\n+                                   function_declaration: &'v FnDecl,\n+                                   function_body: &'v Block,\n+                                   _span: Span) {\n+    walk_fn_decl(visitor, function_declaration);\n+    walk_fn_kind(visitor, function_kind);\n     visitor.visit_block(function_body)\n }\n "}, {"sha": "f64b92cdbb7630011fc36e558a6309a8932bfa8b", "filename": "src/test/run-pass/issue-28181.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/16f75f773d27653993b98d50ca5b76bfc351be36/src%2Ftest%2Frun-pass%2Fissue-28181.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16f75f773d27653993b98d50ca5b76bfc351be36/src%2Ftest%2Frun-pass%2Fissue-28181.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-28181.rs?ref=16f75f773d27653993b98d50ca5b76bfc351be36", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn bar<F>(f: F) -> usize where F: Fn([usize; 1]) -> usize { f([2]) }\n+\n+fn main() {\n+    bar(|u| { u[0] });\n+}"}]}