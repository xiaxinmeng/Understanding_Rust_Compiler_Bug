{"sha": "958df1276e3d97b189dcd9de974564011c70ef62", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OGRmMTI3NmUzZDk3YjE4OWRjZDlkZTk3NDU2NDAxMWM3MGVmNjI=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-03-25T09:02:54Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-03-25T09:02:54Z"}, "message": "Merge #1019\n\n1019: structure moved to ra_ide_api r=matklad a=pasa\n\nstructure subtask for #1009 \n\nCo-authored-by: Sergey Parilin <sergey.parilin@fxdd.com>", "tree": {"sha": "a13de9e2de33ec86524d360acaa0793540363c2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a13de9e2de33ec86524d360acaa0793540363c2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/958df1276e3d97b189dcd9de974564011c70ef62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/958df1276e3d97b189dcd9de974564011c70ef62", "html_url": "https://github.com/rust-lang/rust/commit/958df1276e3d97b189dcd9de974564011c70ef62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/958df1276e3d97b189dcd9de974564011c70ef62/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "afe96b75eae99fe2dcd7fb7c99e15507290b3d5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/afe96b75eae99fe2dcd7fb7c99e15507290b3d5f", "html_url": "https://github.com/rust-lang/rust/commit/afe96b75eae99fe2dcd7fb7c99e15507290b3d5f"}, {"sha": "36cb58f76d702d87f445ee7eefe26a0bc1ee3811", "url": "https://api.github.com/repos/rust-lang/rust/commits/36cb58f76d702d87f445ee7eefe26a0bc1ee3811", "html_url": "https://github.com/rust-lang/rust/commit/36cb58f76d702d87f445ee7eefe26a0bc1ee3811"}], "stats": {"total": 86, "additions": 7, "deletions": 79}, "files": [{"sha": "653eaa6c28e83fc2d40374d9042923b861128f65", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/958df1276e3d97b189dcd9de974564011c70ef62/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/958df1276e3d97b189dcd9de974564011c70ef62/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=958df1276e3d97b189dcd9de974564011c70ef62", "patch": "@@ -929,7 +929,6 @@ dependencies = [\n  \"ra_db 0.1.0\",\n  \"ra_hir 0.1.0\",\n  \"ra_ide_api 0.1.0\",\n- \"ra_ide_api_light 0.1.0\",\n  \"ra_syntax 0.1.0\",\n  \"tools 0.1.0\",\n ]\n@@ -993,7 +992,6 @@ dependencies = [\n  \"ra_db 0.1.0\",\n  \"ra_fmt 0.1.0\",\n  \"ra_hir 0.1.0\",\n- \"ra_ide_api_light 0.1.0\",\n  \"ra_syntax 0.1.0\",\n  \"ra_text_edit 0.1.0\",\n  \"rayon 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1004,22 +1002,6 @@ dependencies = [\n  \"unicase 2.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"ra_ide_api_light\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"insta 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"join_to_string 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"proptest 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"ra_fmt 0.1.0\",\n- \"ra_syntax 0.1.0\",\n- \"ra_text_edit 0.1.0\",\n- \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"superslice 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"test_utils 0.1.0\",\n-]\n-\n [[package]]\n name = \"ra_lsp_server\"\n version = \"0.1.0\""}, {"sha": "467628236aacdc557a8c6eb9028664054d26391d", "filename": "crates/ra_cli/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/958df1276e3d97b189dcd9de974564011c70ef62/crates%2Fra_cli%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/958df1276e3d97b189dcd9de974564011c70ef62/crates%2Fra_cli%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2FCargo.toml?ref=958df1276e3d97b189dcd9de974564011c70ef62", "patch": "@@ -14,7 +14,6 @@ indicatif = \"0.11.0\"\n \n ra_syntax = { path = \"../ra_syntax\" }\n ra_ide_api = { path = \"../ra_ide_api\" }\n-ra_ide_api_light = { path = \"../ra_ide_api_light\" }\n tools = { path = \"../tools\" }\n ra_batch = { path = \"../ra_batch\" }\n ra_hir = { path = \"../ra_hir\" }"}, {"sha": "11f5541ebfc7b6d1e4d0323f152efa0438e13800", "filename": "crates/ra_cli/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/958df1276e3d97b189dcd9de974564011c70ef62/crates%2Fra_cli%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958df1276e3d97b189dcd9de974564011c70ef62/crates%2Fra_cli%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fmain.rs?ref=958df1276e3d97b189dcd9de974564011c70ef62", "patch": "@@ -5,7 +5,7 @@ use std::{fs, io::Read, path::Path, time::Instant};\n use clap::{App, Arg, SubCommand};\n use join_to_string::join;\n use ra_ide_api::{Analysis, FileRange};\n-use ra_ide_api_light::file_structure;\n+use ra_ide_api::file_structure;\n use ra_syntax::{SourceFile, TextRange, TreeArc, AstNode};\n use tools::collect_tests;\n use flexi_logger::Logger;"}, {"sha": "45bab4e28b73bb58e6802f6eb3862897b9934eae", "filename": "crates/ra_ide_api/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/958df1276e3d97b189dcd9de974564011c70ef62/crates%2Fra_ide_api%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/958df1276e3d97b189dcd9de974564011c70ef62/crates%2Fra_ide_api%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2FCargo.toml?ref=958df1276e3d97b189dcd9de974564011c70ef62", "patch": "@@ -20,7 +20,6 @@ jemallocator = { version = \"0.1.9\", optional = true }\n jemalloc-ctl = { version = \"0.2.0\", optional = true }\n \n ra_syntax = { path = \"../ra_syntax\" }\n-ra_ide_api_light = { path = \"../ra_ide_api_light\" }\n ra_text_edit = { path = \"../ra_text_edit\" }\n ra_db = { path = \"../ra_db\" }\n ra_fmt = { path = \"../ra_fmt\" }"}, {"sha": "9063f78a9fb350b29a116409667cf5cc3137ea80", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/958df1276e3d97b189dcd9de974564011c70ef62/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958df1276e3d97b189dcd9de974564011c70ef62/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=958df1276e3d97b189dcd9de974564011c70ef62", "patch": "@@ -6,9 +6,6 @@\n //! database, and the `ra_hir` crate, where majority of the analysis happens.\n //! However, IDE specific bits of the analysis (most notably completion) happen\n //! in this crate.\n-//!\n-//! The sibling `ra_ide_api_light` handles those bits of IDE functionality\n-//! which are restricted to a single file and need only syntax.\n \n // For proving that RootDatabase is RefUnwindSafe.\n #![recursion_limit = \"128\"]\n@@ -33,10 +30,11 @@ mod impls;\n mod assists;\n mod diagnostics;\n mod syntax_tree;\n-mod line_index;\n mod folding_ranges;\n+mod line_index;\n mod line_index_utils;\n mod join_lines;\n+mod structure;\n mod typing;\n mod matching_brace;\n \n@@ -72,9 +70,10 @@ pub use crate::{\n     line_index_utils::translate_offset_with_edit,\n     folding_ranges::{Fold, FoldKind},\n     syntax_highlighting::HighlightedRange,\n+    structure::{StructureNode, file_structure},\n     diagnostics::Severity,\n };\n-pub use ra_ide_api_light::StructureNode;\n+\n pub use ra_db::{\n     Canceled, CrateGraph, CrateId, FileId, FilePosition, FileRange, SourceRootId,\n     Edition\n@@ -388,7 +387,7 @@ impl Analysis {\n     /// file outline.\n     pub fn file_structure(&self, file_id: FileId) -> Vec<StructureNode> {\n         let file = self.db.parse(file_id);\n-        ra_ide_api_light::file_structure(&file)\n+        structure::file_structure(&file)\n     }\n \n     /// Returns the set of folding ranges."}, {"sha": "2efa8e22cb39047946ffe6719f05bde8ce8f7b81", "filename": "crates/ra_ide_api/src/snapshots/tests__file_structure.snap", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/958df1276e3d97b189dcd9de974564011c70ef62/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap", "raw_url": "https://github.com/rust-lang/rust/raw/958df1276e3d97b189dcd9de974564011c70ef62/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap?ref=958df1276e3d97b189dcd9de974564011c70ef62", "patch": "@@ -1,7 +1,7 @@\n ---\n created: \"2019-02-05T22:03:50.763530100Z\"\n creator: insta@0.6.1\n-source: crates/ra_ide_api_light/src/structure.rs\n+source: crates/ra_ide_api/src/structure.rs\n expression: structure\n ---\n [", "previous_filename": "crates/ra_ide_api_light/src/snapshots/tests__file_structure.snap"}, {"sha": "ec2c9bbc6557b36a2b0d5e1f04ea6e28e8e1ad86", "filename": "crates/ra_ide_api/src/structure.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/958df1276e3d97b189dcd9de974564011c70ef62/crates%2Fra_ide_api%2Fsrc%2Fstructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958df1276e3d97b189dcd9de974564011c70ef62/crates%2Fra_ide_api%2Fsrc%2Fstructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fstructure.rs?ref=958df1276e3d97b189dcd9de974564011c70ef62", "previous_filename": "crates/ra_ide_api_light/src/structure.rs"}, {"sha": "4e69f5325b58c1b60e52a2e3d58289871f178724", "filename": "crates/ra_ide_api_light/Cargo.toml", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/afe96b75eae99fe2dcd7fb7c99e15507290b3d5f/crates%2Fra_ide_api_light%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/afe96b75eae99fe2dcd7fb7c99e15507290b3d5f/crates%2Fra_ide_api_light%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2FCargo.toml?ref=afe96b75eae99fe2dcd7fb7c99e15507290b3d5f", "patch": "@@ -1,26 +0,0 @@\n-[package]\n-edition = \"2018\"\n-name = \"ra_ide_api_light\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n-publish = false\n-\n-[dependencies]\n-itertools = \"0.8.0\"\n-superslice = \"1.0.0\"\n-join_to_string = \"0.1.1\"\n-rustc-hash = \"1.0\"\n-\n-ra_syntax = { path = \"../ra_syntax\" }\n-ra_text_edit = { path = \"../ra_text_edit\" }\n-ra_fmt = { path = \"../ra_fmt\" }\n-\n-[dev-dependencies]\n-test_utils = { path = \"../test_utils\" }\n-insta = \"0.7.0\"\n-\n-[dev-dependencies.proptest]\n-version = \"0.9.0\"\n-# Disable `fork` feature to allow compiling on webassembly\n-default-features = false\n-features = [\"std\", \"bit-set\", \"break-dead-code\"]"}, {"sha": "df7f144b627c5121bb3cd7a41b881e4bca7f8268", "filename": "crates/ra_ide_api_light/src/lib.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/afe96b75eae99fe2dcd7fb7c99e15507290b3d5f/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afe96b75eae99fe2dcd7fb7c99e15507290b3d5f/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs?ref=afe96b75eae99fe2dcd7fb7c99e15507290b3d5f", "patch": "@@ -1,12 +0,0 @@\n-//! This crate provides those IDE features which use only a single file.\n-//!\n-//! This usually means functions which take syntax tree as an input and produce\n-//! an edit or some auxiliary info.\n-\n-mod structure;\n-\n-use ra_syntax::TextRange;\n-\n-pub use crate::{\n-    structure::{file_structure, StructureNode},\n-};"}, {"sha": "890b18fcd7d73c6e002a1b66d07915d9ebdb6072", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/958df1276e3d97b189dcd9de974564011c70ef62/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/958df1276e3d97b189dcd9de974564011c70ef62/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=958df1276e3d97b189dcd9de974564011c70ef62", "patch": "@@ -130,19 +130,6 @@ APIs in this crate are IDE centric: they take text offsets as input and produce\n offsets and strings as output. This works on top of rich code model powered by\n `hir`.\n \n-### `crates/ra_ide_api_light`\n-\n-All IDE features which can be implemented if you only have access to a single\n-file. `ra_ide_api_light` could be used to enhance editing of Rust code without\n-the need to fiddle with build-systems, file synchronization and such.\n-\n-In a sense, `ra_ide_api_light` is just a bunch of pure functions which take a\n-syntax tree as input.\n-\n-The tests for `ra_ide_api_light` are `#[cfg(test)] mod tests` unit-tests spread\n-throughout its modules.\n-\n-\n ### `crates/ra_lsp_server`\n \n An LSP implementation which wraps `ra_ide_api` into a langauge server protocol."}]}