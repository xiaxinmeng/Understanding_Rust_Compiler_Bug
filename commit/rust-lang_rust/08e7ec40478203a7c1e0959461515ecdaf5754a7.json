{"sha": "08e7ec40478203a7c1e0959461515ecdaf5754a7", "node_id": "C_kwDOAAsO6NoAKDA4ZTdlYzQwNDc4MjAzYTdjMWUwOTU5NDYxNTE1ZWNkYWY1NzU0YTc", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2022-07-27T16:18:20Z"}, "committer": {"name": "Andy Caldwell", "email": "andrew.caldwell@metaswitch.com", "date": "2022-07-27T16:47:20Z"}, "message": "Read and use deprecated configuration (as well as emitting a warning)\n\nCo-authored-by: Andy Caldwell <andycaldwell@microsoft.com>", "tree": {"sha": "f494e269abeba0e91cd1f0b34730d9bbf3dcf552", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f494e269abeba0e91cd1f0b34730d9bbf3dcf552"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08e7ec40478203a7c1e0959461515ecdaf5754a7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEELWwNBns7iQWuaaaA1CBFQawdIo0FAmLhbDsACgkQ1CBFQawd\nIo14jQ//ahKxVHsBN3P6GUY9yLZROw4NpxkwbDfBU/1HEhhgI+/N2mnfLhTG3XDj\nTm4KkU/QDUbprCYtm0KX5Mwbx9mP88IhEIS7fI4Lr3Vk4qivgrUGnsznqzvABQ/a\neu/40ODw8Y5K+dQrV8wDjdN8xs6hB+H+NDtpe6rqwIqQWIBBUDajjpgp+Vs08tDN\nuMPNdIlcnhRE7W1MfQGeqZ+Z9qQDViviH1XuoGr00TylqnWmPuzVbN9T2ywCWAik\n8dxnTSNwUDhtY52CPJIpEYih39fWPB8kqWBLYHWqHsBJZam8ctqDBVTImNEvp6Xf\noYQYbXFbQLcG3H4doIcKXNHS2KeYQPBHBN2bB4pCf6gcPPKtOWTz/wmEecmnw2YR\ncsqvpS2kuCbYYeVTqC7Az2rSA05thh5x17nuA99m1MxtSej7aoKcELMavQJwdkmN\n3AJJrkXJe9u591V5/kk5AdvyeNdnAzGQ2MSs/JhdC+MpiaZGQTkMq1i1HPdF6wWF\n3pffEAcgNwVmzd6CNFoTB7gp73tJCH3GxC3u+ylmX4fWo5i89fgn5UHFP4uDu72p\n/Y9nSq8OyTVAzdHCfn3QOoroG1i59Uut0k22zgEh3St+uBx8PVp1ju6wgMPsVSoI\nFbHvBtnTLlM2lzXnNW+z0Mf2Xex1YAcmheSRgP3Oteb3BFYePIU=\n=YVka\n-----END PGP SIGNATURE-----", "payload": "tree f494e269abeba0e91cd1f0b34730d9bbf3dcf552\nparent d81468142972a4916ec69851ed386b3bd94a9f88\nauthor Philipp Krones <hello@philkrones.com> 1658938700 +0100\ncommitter Andy Caldwell <andrew.caldwell@metaswitch.com> 1658940440 +0100\n\nRead and use deprecated configuration (as well as emitting a warning)\n\nCo-authored-by: Andy Caldwell <andycaldwell@microsoft.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08e7ec40478203a7c1e0959461515ecdaf5754a7", "html_url": "https://github.com/rust-lang/rust/commit/08e7ec40478203a7c1e0959461515ecdaf5754a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08e7ec40478203a7c1e0959461515ecdaf5754a7/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bossmc", "id": 1073983, "node_id": "MDQ6VXNlcjEwNzM5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1073983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bossmc", "html_url": "https://github.com/bossmc", "followers_url": "https://api.github.com/users/bossmc/followers", "following_url": "https://api.github.com/users/bossmc/following{/other_user}", "gists_url": "https://api.github.com/users/bossmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/bossmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bossmc/subscriptions", "organizations_url": "https://api.github.com/users/bossmc/orgs", "repos_url": "https://api.github.com/users/bossmc/repos", "events_url": "https://api.github.com/users/bossmc/events{/privacy}", "received_events_url": "https://api.github.com/users/bossmc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d81468142972a4916ec69851ed386b3bd94a9f88", "url": "https://api.github.com/repos/rust-lang/rust/commits/d81468142972a4916ec69851ed386b3bd94a9f88", "html_url": "https://github.com/rust-lang/rust/commit/d81468142972a4916ec69851ed386b3bd94a9f88"}], "stats": {"total": 56, "additions": 46, "deletions": 10}, "files": [{"sha": "5bec503402c3cafdd030a92f7ccc2e50f380d5af", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/08e7ec40478203a7c1e0959461515ecdaf5754a7/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08e7ec40478203a7c1e0959461515ecdaf5754a7/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=08e7ec40478203a7c1e0959461515ecdaf5754a7", "patch": "@@ -487,7 +487,7 @@ pub fn read_conf(sess: &Session) -> Conf {\n         },\n     };\n \n-    let TryConf { conf, errors } = utils::conf::read(&file_name);\n+    let TryConf { conf, errors, warnings } = utils::conf::read(&file_name);\n     // all conf errors are non-fatal, we just use the default conf in case of error\n     for error in errors {\n         sess.err(&format!(\n@@ -497,6 +497,15 @@ pub fn read_conf(sess: &Session) -> Conf {\n         ));\n     }\n \n+    for warning in warnings {\n+        sess.struct_warn(&format!(\n+            \"error reading Clippy's configuration file `{}`: {}\",\n+            file_name.display(),\n+            format_error(warning)\n+        ))\n+        .emit();\n+    }\n+\n     conf\n }\n "}, {"sha": "60f4b388761dd00e8066b375ec0218e9751a024e", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/08e7ec40478203a7c1e0959461515ecdaf5754a7/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08e7ec40478203a7c1e0959461515ecdaf5754a7/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=08e7ec40478203a7c1e0959461515ecdaf5754a7", "patch": "@@ -68,13 +68,15 @@ pub enum DisallowedType {\n pub struct TryConf {\n     pub conf: Conf,\n     pub errors: Vec<Box<dyn Error>>,\n+    pub warnings: Vec<Box<dyn Error>>,\n }\n \n impl TryConf {\n     fn from_error(error: impl Error + 'static) -> Self {\n         Self {\n             conf: Conf::default(),\n             errors: vec![Box::new(error)],\n+            warnings: vec![],\n         }\n     }\n }\n@@ -97,7 +99,7 @@ fn conf_error(s: String) -> Box<dyn Error> {\n macro_rules! define_Conf {\n     ($(\n         $(#[doc = $doc:literal])+\n-        $(#[conf_deprecated($dep:literal)])?\n+        $(#[conf_deprecated($dep:literal, $new_conf:ident)])?\n         ($name:ident: $ty:ty = $default:expr),\n     )*) => {\n         /// Clippy lint configuration\n@@ -137,17 +139,23 @@ macro_rules! define_Conf {\n \n             fn visit_map<V>(self, mut map: V) -> Result<Self::Value, V::Error> where V: MapAccess<'de> {\n                 let mut errors = Vec::new();\n+                let mut warnings = Vec::new();\n                 $(let mut $name = None;)*\n                 // could get `Field` here directly, but get `str` first for diagnostics\n                 while let Some(name) = map.next_key::<&str>()? {\n                     match Field::deserialize(name.into_deserializer())? {\n                         $(Field::$name => {\n-                            $(errors.push(conf_error(format!(\"deprecated field `{}`. {}\", name, $dep)));)?\n+                            $(warnings.push(conf_error(format!(\"deprecated field `{}`. {}\", name, $dep)));)?\n                             match map.next_value() {\n                                 Err(e) => errors.push(conf_error(e.to_string())),\n                                 Ok(value) => match $name {\n                                     Some(_) => errors.push(conf_error(format!(\"duplicate field `{}`\", name))),\n-                                    None => $name = Some(value),\n+                                    None => {\n+                                        $name = Some(value);\n+                                        // $new_conf is the same as one of the defined `$name`s, so\n+                                        // this variable is defined in line 2 of this function.\n+                                        $($new_conf = Some(value);)?\n+                                    },\n                                 }\n                             }\n                         })*\n@@ -156,7 +164,7 @@ macro_rules! define_Conf {\n                     }\n                 }\n                 let conf = Conf { $($name: $name.unwrap_or_else(defaults::$name),)* };\n-                Ok(TryConf { conf, errors })\n+                Ok(TryConf { conf, errors, warnings })\n             }\n         }\n \n@@ -216,8 +224,8 @@ define_Conf! {\n     /// DEPRECATED LINT: CYCLOMATIC_COMPLEXITY.\n     ///\n     /// Use the Cognitive Complexity lint instead.\n-    #[conf_deprecated(\"Please use `cognitive-complexity-threshold` instead\")]\n-    (cyclomatic_complexity_threshold: Option<u64> = None),\n+    #[conf_deprecated(\"Please use `cognitive-complexity-threshold` instead\", cognitive_complexity_threshold)]\n+    (cyclomatic_complexity_threshold: u64 = 25),\n     /// Lint: DOC_MARKDOWN.\n     ///\n     /// The list of words this lint should not consider as identifiers needing ticks. The value"}, {"sha": "138160d7ac8bf7468298b19968796e846cb835e6", "filename": "tests/ui-toml/conf_deprecated_key/clippy.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08e7ec40478203a7c1e0959461515ecdaf5754a7/tests%2Fui-toml%2Fconf_deprecated_key%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/08e7ec40478203a7c1e0959461515ecdaf5754a7/tests%2Fui-toml%2Fconf_deprecated_key%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fconf_deprecated_key%2Fclippy.toml?ref=08e7ec40478203a7c1e0959461515ecdaf5754a7", "patch": "@@ -1,5 +1,5 @@\n # that one is an error\n-cyclomatic-complexity-threshold = 42\n+cyclomatic-complexity-threshold = 2\n \n # that one is white-listed\n [third-party]"}, {"sha": "b4e677ea124b7d673b14c90e1ea08607ae311dbd", "filename": "tests/ui-toml/conf_deprecated_key/conf_deprecated_key.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/08e7ec40478203a7c1e0959461515ecdaf5754a7/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08e7ec40478203a7c1e0959461515ecdaf5754a7/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.rs?ref=08e7ec40478203a7c1e0959461515ecdaf5754a7", "patch": "@@ -1 +1,11 @@\n fn main() {}\n+\n+#[warn(clippy::cognitive_complexity)]\n+fn cognitive_complexity() {\n+    let x = vec![1, 2, 3];\n+    for i in x {\n+        if i == 1 {\n+            println!(\"{}\", i);\n+        }\n+    }\n+}"}, {"sha": "3b4c72044da8238ef3a1ff22ceb1707e8e68e82d", "filename": "tests/ui-toml/conf_deprecated_key/conf_deprecated_key.stderr", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/08e7ec40478203a7c1e0959461515ecdaf5754a7/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/08e7ec40478203a7c1e0959461515ecdaf5754a7/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.stderr?ref=08e7ec40478203a7c1e0959461515ecdaf5754a7", "patch": "@@ -1,4 +1,13 @@\n-error: error reading Clippy's configuration file `$DIR/clippy.toml`: deprecated field `cyclomatic-complexity-threshold`. Please use `cognitive-complexity-threshold` instead\n+warning: error reading Clippy's configuration file `$DIR/clippy.toml`: deprecated field `cyclomatic-complexity-threshold`. Please use `cognitive-complexity-threshold` instead\n \n-error: aborting due to previous error\n+error: the function has a cognitive complexity of (3/2)\n+  --> $DIR/conf_deprecated_key.rs:4:4\n+   |\n+LL | fn cognitive_complexity() {\n+   |    ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::cognitive-complexity` implied by `-D warnings`\n+   = help: you could split it up into multiple smaller functions\n+\n+error: aborting due to previous error; 1 warning emitted\n "}]}