{"sha": "3d60bf45f42fe3ab6f6a64a983ed256d86ffdbbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkNjBiZjQ1ZjQyZmUzYWI2ZjZhNjRhOTgzZWQyNTZkODZmZmRiYmU=", "commit": {"author": {"name": "Geoffry Song", "email": "goffrie@gmail.com", "date": "2017-04-09T23:42:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-04-09T23:42:01Z"}, "message": "Minor fix to mutex example\n\nPresumably `N` was supposed to be used in both places.", "tree": {"sha": "92bf70b769f1cc32cc8e797a769eba989f679690", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92bf70b769f1cc32cc8e797a769eba989f679690"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d60bf45f42fe3ab6f6a64a983ed256d86ffdbbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d60bf45f42fe3ab6f6a64a983ed256d86ffdbbe", "html_url": "https://github.com/rust-lang/rust/commit/3d60bf45f42fe3ab6f6a64a983ed256d86ffdbbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d60bf45f42fe3ab6f6a64a983ed256d86ffdbbe/comments", "author": {"login": "goffrie", "id": 1240398, "node_id": "MDQ6VXNlcjEyNDAzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1240398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goffrie", "html_url": "https://github.com/goffrie", "followers_url": "https://api.github.com/users/goffrie/followers", "following_url": "https://api.github.com/users/goffrie/following{/other_user}", "gists_url": "https://api.github.com/users/goffrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/goffrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goffrie/subscriptions", "organizations_url": "https://api.github.com/users/goffrie/orgs", "repos_url": "https://api.github.com/users/goffrie/repos", "events_url": "https://api.github.com/users/goffrie/events{/privacy}", "received_events_url": "https://api.github.com/users/goffrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad36c2f5528d617db66c244d8bcbfc4b36da0ca0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad36c2f5528d617db66c244d8bcbfc4b36da0ca0", "html_url": "https://github.com/rust-lang/rust/commit/ad36c2f5528d617db66c244d8bcbfc4b36da0ca0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a27f621e6b2ae7390a2c0811518729133d3f18bb", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d60bf45f42fe3ab6f6a64a983ed256d86ffdbbe/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d60bf45f42fe3ab6f6a64a983ed256d86ffdbbe/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=3d60bf45f42fe3ab6f6a64a983ed256d86ffdbbe", "patch": "@@ -61,7 +61,7 @@ use sys_common::poison::{self, TryLockError, TryLockResult, LockResult};\n /// let data = Arc::new(Mutex::new(0));\n ///\n /// let (tx, rx) = channel();\n-/// for _ in 0..10 {\n+/// for _ in 0..N {\n ///     let (data, tx) = (data.clone(), tx.clone());\n ///     thread::spawn(move || {\n ///         // The shared state can only be accessed once the lock is held."}]}