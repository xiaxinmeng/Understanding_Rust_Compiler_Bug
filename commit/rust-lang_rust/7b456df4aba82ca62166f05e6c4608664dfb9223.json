{"sha": "7b456df4aba82ca62166f05e6c4608664dfb9223", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiNDU2ZGY0YWJhODJjYTYyMTY2ZjA1ZTZjNDYwODY2NGRmYjkyMjM=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-07-19T20:11:57Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-07-20T03:08:39Z"}, "message": "Avoid cloning Place in is_stable", "tree": {"sha": "e8a94ba6bd73ad495de701fc2a31ac84f77ce52d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8a94ba6bd73ad495de701fc2a31ac84f77ce52d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b456df4aba82ca62166f05e6c4608664dfb9223", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b456df4aba82ca62166f05e6c4608664dfb9223", "html_url": "https://github.com/rust-lang/rust/commit/7b456df4aba82ca62166f05e6c4608664dfb9223", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b456df4aba82ca62166f05e6c4608664dfb9223/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17a465cb85c6bde2eca91aa0d5b13d6d993d7f76", "url": "https://api.github.com/repos/rust-lang/rust/commits/17a465cb85c6bde2eca91aa0d5b13d6d993d7f76", "html_url": "https://github.com/rust-lang/rust/commit/17a465cb85c6bde2eca91aa0d5b13d6d993d7f76"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "887f93c64787884ccae038a4e4cafe719f65c9d6", "filename": "src/librustc_mir/transform/add_retag.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7b456df4aba82ca62166f05e6c4608664dfb9223/src%2Flibrustc_mir%2Ftransform%2Fadd_retag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b456df4aba82ca62166f05e6c4608664dfb9223/src%2Flibrustc_mir%2Ftransform%2Fadd_retag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fadd_retag.rs?ref=7b456df4aba82ca62166f05e6c4608664dfb9223", "patch": "@@ -15,7 +15,7 @@ pub struct AddRetag;\n /// (Concurrent accesses by other threads are no problem as these are anyway non-atomic\n /// copies.  Data races are UB.)\n fn is_stable(\n-    place: &Place<'_>,\n+    place: PlaceRef<'_, '_>,\n ) -> bool {\n     if let Some(proj) = &place.projection {\n         match proj.elem {\n@@ -32,9 +32,9 @@ fn is_stable(\n             ProjectionElem::ConstantIndex { .. } |\n             ProjectionElem::Subslice { .. } |\n             ProjectionElem::Downcast { .. } =>\n-                is_stable(&Place {\n-                    base: place.base.clone(),\n-                    projection: proj.base.clone(),\n+                is_stable(PlaceRef {\n+                    base: place.base,\n+                    projection: &proj.base,\n                 }),\n         }\n     } else {\n@@ -79,7 +79,8 @@ impl MirPass for AddRetag {\n         let needs_retag = |place: &Place<'tcx>| {\n             // FIXME: Instead of giving up for unstable places, we should introduce\n             // a temporary and retag on that.\n-            is_stable(place) && may_have_reference(place.ty(&*local_decls, tcx).ty, tcx)\n+            is_stable(place.as_place_ref())\n+                && may_have_reference(place.ty(&*local_decls, tcx).ty, tcx)\n         };\n \n         // PART 1"}]}