{"sha": "792436826892d61ca16797fe3d26b1f202f6702a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5MjQzNjgyNjg5MmQ2MWNhMTY3OTdmZTNkMjZiMWYyMDJmNjcwMmE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-01T05:34:41Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-01T19:14:36Z"}, "message": "Allow istrs as patterns. Issue #855", "tree": {"sha": "d95244927d1c1bc25abe1d01070541302aefbccf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d95244927d1c1bc25abe1d01070541302aefbccf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/792436826892d61ca16797fe3d26b1f202f6702a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/792436826892d61ca16797fe3d26b1f202f6702a", "html_url": "https://github.com/rust-lang/rust/commit/792436826892d61ca16797fe3d26b1f202f6702a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/792436826892d61ca16797fe3d26b1f202f6702a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c25d810415b01b7c2ed250952b8fe3b039f29bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c25d810415b01b7c2ed250952b8fe3b039f29bf", "html_url": "https://github.com/rust-lang/rust/commit/4c25d810415b01b7c2ed250952b8fe3b039f29bf"}], "stats": {"total": 56, "additions": 46, "deletions": 10}, "files": [{"sha": "6dddf42caeb3790fae6f14714b85808951c51b5c", "filename": "src/comp/middle/trans_alt.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/792436826892d61ca16797fe3d26b1f202f6702a/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/792436826892d61ca16797fe3d26b1f202f6702a/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs?ref=792436826892d61ca16797fe3d26b1f202f6702a", "patch": "@@ -296,9 +296,9 @@ fn compile_submatch(bcx: @block_ctxt, m: &match, vals: [ValueRef],\n         let data = m[0].data;\n         alt data.guard {\n           some(e) {\n-            let guard_cx = new_scope_block_ctxt(bcx, ~\"guard\");\n-            let next_cx = new_sub_block_ctxt(bcx, ~\"next\");\n-            let else_cx = new_sub_block_ctxt(bcx, ~\"else\");\n+            let guard_cx = new_scope_block_ctxt(bcx, ~\"submatch_guard\");\n+            let next_cx = new_sub_block_ctxt(bcx, ~\"submatch_next\");\n+            let else_cx = new_sub_block_ctxt(bcx, ~\"submatch_else\");\n             Br(bcx, guard_cx.llbb);\n             // Temporarily set bindings. They'll be rewritten to PHI nodes for\n             // the actual arm block.\n@@ -431,13 +431,17 @@ fn compile_submatch(bcx: @block_ctxt, m: &match, vals: [ValueRef],\n             llvm::LLVMAddCase(sw, r.val, opt_cx.llbb);\n           }\n           compare. {\n+            let compare_cx = new_scope_block_ctxt(bcx, ~\"compare_scope\");\n+            Br(bcx, compare_cx.llbb);\n+            bcx = compare_cx;\n             let r = trans_opt(bcx, opt);\n             bcx = r.bcx;\n             let t = ty::node_id_to_type(ccx.tcx, pat_id);\n             let eq =\n                 trans::trans_compare(bcx, ast::eq, test_val, t, r.val, t);\n-            bcx = new_sub_block_ctxt(bcx, ~\"next\");\n-            CondBr(eq.bcx, eq.val, opt_cx.llbb, bcx.llbb);\n+            let cleanup_cx = trans::trans_block_cleanups(bcx, compare_cx);\n+            bcx = new_sub_block_ctxt(bcx, ~\"compare_next\");\n+            CondBr(cleanup_cx, eq.val, opt_cx.llbb, bcx.llbb);\n           }\n           _ { }\n         }"}, {"sha": "9c61f569e211ebe6981e9f61fdd0514d80caa6de", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/792436826892d61ca16797fe3d26b1f202f6702a/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/792436826892d61ca16797fe3d26b1f202f6702a/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=792436826892d61ca16797fe3d26b1f202f6702a", "patch": "@@ -1497,6 +1497,22 @@ fn parse_pat(p: &parser) -> @ast::pat {\n             pat = ast::pat_tup(fields);\n         }\n       }\n+      token::TILDE. {\n+        p.bump();\n+        alt p.peek() {\n+          token::LIT_STR(s) {\n+            let sp = p.get_span();\n+            p.bump();\n+            let lit =\n+                @{node: ast::lit_str(p.get_str(s),\n+                                     ast::sk_unique),\n+                  span: sp};\n+            hi = lit.span.hi;\n+            pat = ast::pat_lit(lit);\n+          }\n+          _ { p.fatal(~\"expected string literal\"); }\n+        }\n+      }\n       tok {\n         if !is_ident(tok) || is_word(p, ~\"true\") || is_word(p, ~\"false\") {\n             let lit = parse_lit(p);"}, {"sha": "57e68552e805c46b60b209887c3170d1cc4ac233", "filename": "src/test/run-pass/alt-str.rs", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/792436826892d61ca16797fe3d26b1f202f6702a/src%2Ftest%2Frun-pass%2Falt-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/792436826892d61ca16797fe3d26b1f202f6702a/src%2Ftest%2Frun-pass%2Falt-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-str.rs?ref=792436826892d61ca16797fe3d26b1f202f6702a", "patch": "@@ -1,15 +1,31 @@\n // Issue #53\n \n fn main() {\n-    alt \"test\" { \"not-test\" { fail; } \"test\" { } _ { fail; } }\n+    alt ~\"test\" {\n+      ~\"not-test\" { fail; }\n+      ~\"test\" { }\n+      _ { fail; }\n+    }\n \n-    tag t { tag1(str); tag2; }\n+    tag t { tag1(istr); tag2; }\n \n \n-    alt tag1(\"test\") {\n+    alt tag1(~\"test\") {\n       tag2. { fail; }\n-      tag1(\"not-test\") { fail; }\n-      tag1(\"test\") { }\n+      tag1(~\"not-test\") { fail; }\n+      tag1(~\"test\") { }\n       _ { fail; }\n     }\n+\n+    let x = alt ~\"a\" {\n+      ~\"a\" { 1 }\n+      ~\"b\" { 2 }\n+    };\n+    assert x == 1;\n+\n+    alt ~\"a\" {\n+      ~\"a\" { }\n+      ~\"b\" { }\n+    }\n+\n }"}]}