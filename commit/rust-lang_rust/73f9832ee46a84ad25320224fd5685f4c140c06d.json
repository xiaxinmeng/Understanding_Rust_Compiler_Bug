{"sha": "73f9832ee46a84ad25320224fd5685f4c140c06d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZjk4MzJlZTQ2YTg0YWQyNTMyMDIyNGZkNTY4NWY0YzE0MGMwNmQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-29T01:40:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-29T01:40:54Z"}, "message": "Rollup merge of #59476 - nnethercote:TokenStreamBuilder-SmallVec, r=petrochenkov\n\nUse `SmallVec` in `TokenStreamBuilder`.\n\nThis reduces by 12% the number of allocations done for a \"clean incremental\" of `webrender_api`, which reduces the instruction count by about 0.5%.\n\nr? @petrochenkov", "tree": {"sha": "09604bf26a04d6e6939399839c187fcd594add9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09604bf26a04d6e6939399839c187fcd594add9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73f9832ee46a84ad25320224fd5685f4c140c06d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcnXemCRBK7hj4Ov3rIwAAdHIIAIKwpUVSh2ILubG1f23c0ugu\nPHw+oVvp2+KoD3iyc4DExesBjut35UoJNGyNT4ZfG4wP5a3xBJ5N9WDlKpDdnwZD\nLoez+rTzbxApR+0kuJPSr59U0gs+RO4h39BoSbVG/nqiEBslvz6lJQgBD2dfLPrn\nUiePpS4x8ZRP7NJJskhyGMHsbTrM15bwMg06DFYwAs8j4qtfydBy8e5cM4A5UWAb\nT7zCh6J99F9wcfxA+t34QHoc2BS+ovG8cN1MKMnk6SA0i/XtpLkzSD1n9TERWtM3\nPcXuDER5T2K1GCWRVmqj1flJXPQP9LeOvEMPrWGorTFrRxHQEZsbvRqS3iOdjeU=\n=PJSm\n-----END PGP SIGNATURE-----\n", "payload": "tree 09604bf26a04d6e6939399839c187fcd594add9a\nparent c2d6c08ebba2690ce2dc0305dd82a75b2b97289a\nparent 17a8aff20abdef46ae90801c85cc232e81443e1b\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1553823654 +0100\ncommitter GitHub <noreply@github.com> 1553823654 +0100\n\nRollup merge of #59476 - nnethercote:TokenStreamBuilder-SmallVec, r=petrochenkov\n\nUse `SmallVec` in `TokenStreamBuilder`.\n\nThis reduces by 12% the number of allocations done for a \"clean incremental\" of `webrender_api`, which reduces the instruction count by about 0.5%.\n\nr? @petrochenkov\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73f9832ee46a84ad25320224fd5685f4c140c06d", "html_url": "https://github.com/rust-lang/rust/commit/73f9832ee46a84ad25320224fd5685f4c140c06d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73f9832ee46a84ad25320224fd5685f4c140c06d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2d6c08ebba2690ce2dc0305dd82a75b2b97289a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2d6c08ebba2690ce2dc0305dd82a75b2b97289a", "html_url": "https://github.com/rust-lang/rust/commit/c2d6c08ebba2690ce2dc0305dd82a75b2b97289a"}, {"sha": "17a8aff20abdef46ae90801c85cc232e81443e1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/17a8aff20abdef46ae90801c85cc232e81443e1b", "html_url": "https://github.com/rust-lang/rust/commit/17a8aff20abdef46ae90801c85cc232e81443e1b"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "e99a86e807f7f6294e79356f1e777e65d6f7d728", "filename": "src/libsyntax/parse/attr.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/73f9832ee46a84ad25320224fd5685f4c140c06d/src%2Flibsyntax%2Fparse%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73f9832ee46a84ad25320224fd5685f4c140c06d/src%2Flibsyntax%2Fparse%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fattr.rs?ref=73f9832ee46a84ad25320224fd5685f4c140c06d", "patch": "@@ -6,6 +6,7 @@ use crate::parse::parser::{Parser, TokenType, PathStyle};\n use crate::tokenstream::{TokenStream, TokenTree};\n \n use log::debug;\n+use smallvec::smallvec;\n \n #[derive(Debug)]\n enum InnerAttributeParsePolicy<'a> {\n@@ -171,7 +172,7 @@ impl<'a> Parser<'a> {\n                 } else {\n                     self.parse_unsuffixed_lit()?.tokens()\n                 };\n-                TokenStream::from_streams(vec![eq.into(), tokens])\n+                TokenStream::from_streams(smallvec![eq.into(), tokens])\n             } else {\n                 TokenStream::empty()\n             };"}, {"sha": "2d47b982ebdd9b7140d1760d0206cc6cd3a1278b", "filename": "src/libsyntax/tokenstream.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/73f9832ee46a84ad25320224fd5685f4c140c06d/src%2Flibsyntax%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73f9832ee46a84ad25320224fd5685f4c140c06d/src%2Flibsyntax%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftokenstream.rs?ref=73f9832ee46a84ad25320224fd5685f4c140c06d", "patch": "@@ -24,6 +24,7 @@ use syntax_pos::{BytePos, Mark, Span, DUMMY_SP};\n use rustc_data_structures::static_assert;\n use rustc_data_structures::sync::Lrc;\n use serialize::{Decoder, Decodable, Encoder, Encodable};\n+use smallvec::{SmallVec, smallvec};\n \n use std::borrow::Cow;\n use std::{fmt, iter, mem};\n@@ -224,7 +225,7 @@ impl From<Token> for TokenStream {\n \n impl<T: Into<TokenStream>> iter::FromIterator<T> for TokenStream {\n     fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> Self {\n-        TokenStream::from_streams(iter.into_iter().map(Into::into).collect::<Vec<_>>())\n+        TokenStream::from_streams(iter.into_iter().map(Into::into).collect::<SmallVec<_>>())\n     }\n }\n \n@@ -256,7 +257,7 @@ impl TokenStream {\n         }\n     }\n \n-    pub(crate) fn from_streams(mut streams: Vec<TokenStream>) -> TokenStream {\n+    pub(crate) fn from_streams(mut streams: SmallVec<[TokenStream; 2]>) -> TokenStream {\n         match streams.len() {\n             0 => TokenStream::empty(),\n             1 => streams.pop().unwrap(),\n@@ -393,12 +394,13 @@ impl TokenStream {\n     }\n }\n \n+// 99.5%+ of the time we have 1 or 2 elements in this vector.\n #[derive(Clone)]\n-pub struct TokenStreamBuilder(Vec<TokenStream>);\n+pub struct TokenStreamBuilder(SmallVec<[TokenStream; 2]>);\n \n impl TokenStreamBuilder {\n     pub fn new() -> TokenStreamBuilder {\n-        TokenStreamBuilder(Vec::new())\n+        TokenStreamBuilder(SmallVec::new())\n     }\n \n     pub fn push<T: Into<TokenStream>>(&mut self, stream: T) {\n@@ -485,7 +487,7 @@ impl Cursor {\n         }\n         let index = self.index;\n         let stream = mem::replace(&mut self.stream, TokenStream(None));\n-        *self = TokenStream::from_streams(vec![stream, new_stream]).into_trees();\n+        *self = TokenStream::from_streams(smallvec![stream, new_stream]).into_trees();\n         self.index = index;\n     }\n \n@@ -572,7 +574,7 @@ mod tests {\n             let test_res = string_to_ts(\"foo::bar::baz\");\n             let test_fst = string_to_ts(\"foo::bar\");\n             let test_snd = string_to_ts(\"::baz\");\n-            let eq_res = TokenStream::from_streams(vec![test_fst, test_snd]);\n+            let eq_res = TokenStream::from_streams(smallvec![test_fst, test_snd]);\n             assert_eq!(test_res.trees().count(), 5);\n             assert_eq!(eq_res.trees().count(), 5);\n             assert_eq!(test_res.eq_unspanned(&eq_res), true);"}]}