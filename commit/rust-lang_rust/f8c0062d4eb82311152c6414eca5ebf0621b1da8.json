{"sha": "f8c0062d4eb82311152c6414eca5ebf0621b1da8", "node_id": "C_kwDOAAsO6NoAKGY4YzAwNjJkNGViODIzMTExNTJjNjQxNGVjYTVlYmYwNjIxYjFkYTg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-12T16:16:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-12T16:16:20Z"}, "message": "Auto merge of #12229 - Veykril:configfix, r=Veykril\n\nfix: Fix vscode config descriptions not recognizing all valid values", "tree": {"sha": "93cec4a1ea4635a1f86fcc80613bd14b1291e3a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93cec4a1ea4635a1f86fcc80613bd14b1291e3a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8c0062d4eb82311152c6414eca5ebf0621b1da8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8c0062d4eb82311152c6414eca5ebf0621b1da8", "html_url": "https://github.com/rust-lang/rust/commit/f8c0062d4eb82311152c6414eca5ebf0621b1da8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8c0062d4eb82311152c6414eca5ebf0621b1da8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14910134172bdf55b97a741dc64ada1558302492", "url": "https://api.github.com/repos/rust-lang/rust/commits/14910134172bdf55b97a741dc64ada1558302492", "html_url": "https://github.com/rust-lang/rust/commit/14910134172bdf55b97a741dc64ada1558302492"}, {"sha": "d57beac7e6266a9b901c62a84a557aab04484698", "url": "https://api.github.com/repos/rust-lang/rust/commits/d57beac7e6266a9b901c62a84a557aab04484698", "html_url": "https://github.com/rust-lang/rust/commit/d57beac7e6266a9b901c62a84a557aab04484698"}], "stats": {"total": 198, "additions": 126, "deletions": 72}, "files": [{"sha": "abc1541b5366f9a1fffc68e8b4f81bc6aa22bb78", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 58, "deletions": 22, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/f8c0062d4eb82311152c6414eca5ebf0621b1da8/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8c0062d4eb82311152c6414eca5ebf0621b1da8/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=f8c0062d4eb82311152c6414eca5ebf0621b1da8", "patch": "@@ -1683,21 +1683,39 @@ fn field_props(field: &str, ty: &str, doc: &[&str], default: &str) -> serde_json\n             \"maximum\": 255\n         },\n         \"LifetimeElisionDef\" => set! {\n-            \"type\": [\"string\", \"boolean\"],\n-            \"enum\": [\"always\", \"never\", \"skip_trivial\"],\n-            \"enumDescriptions\": [\n-                \"Always show lifetime elision hints.\",\n-                \"Never show lifetime elision hints.\",\n-                \"Only show lifetime elision hints if a return type is involved.\"\n+            \"anyOf\": [\n+                {\n+                    \"type\": \"string\",\n+                    \"enum\": [\n+                        \"always\",\n+                        \"never\",\n+                        \"skip_trivial\"\n+                    ],\n+                    \"enumDescriptions\": [\n+                        \"Always show lifetime elision hints.\",\n+                        \"Never show lifetime elision hints.\",\n+                        \"Only show lifetime elision hints if a return type is involved.\"\n+                    ]\n+                },\n+                { \"type\": \"boolean\" }\n             ],\n         },\n         \"ReborrowHintsDef\" => set! {\n-            \"type\": [\"string\", \"boolean\"],\n-            \"enum\": [\"always\", \"never\", \"mutable\"],\n-            \"enumDescriptions\": [\n-                \"Always show reborrow hints.\",\n-                \"Never show reborrow hints.\",\n-                \"Only show mutable reborrow hints.\"\n+            \"anyOf\": [\n+                {\n+                    \"type\": \"string\",\n+                    \"enum\": [\n+                        \"always\",\n+                        \"never\",\n+                        \"mutable\"\n+                    ],\n+                    \"enumDescriptions\": [\n+                        \"Always show reborrow hints.\",\n+                        \"Never show reborrow hints.\",\n+                        \"Only show mutable reborrow hints.\"\n+                    ]\n+                },\n+                { \"type\": \"boolean\" }\n             ],\n         },\n         \"CargoFeatures\" => set! {\n@@ -1709,19 +1727,37 @@ fn field_props(field: &str, ty: &str, doc: &[&str], default: &str) -> serde_json\n             ],\n         },\n         \"Option<CargoFeatures>\" => set! {\n-            \"type\": [\"string\", \"array\", \"null\"],\n-            \"items\": { \"type\": \"string\" },\n-            \"enum\": [\"all\"],\n-            \"enumDescriptions\": [\n-                \"Pass `--all-features` to cargo\",\n+            \"anyOf\": [\n+                {\n+                    \"type\": \"string\",\n+                    \"enum\": [\n+                        \"all\"\n+                    ],\n+                    \"enumDescriptions\": [\n+                        \"Pass `--all-features` to cargo\",\n+                    ]\n+                },\n+                {\n+                    \"type\": \"array\",\n+                    \"items\": { \"type\": \"string\" }\n+                },\n+                { \"type\": \"null\" }\n             ],\n         },\n         \"Option<CallableCompletionDef>\" => set! {\n-            \"type\": [\"string\", \"null\"],\n-            \"enum\": [\"fill_arguments\", \"add_parentheses\"],\n-            \"enumDescriptions\": [\n-                \"Add call parentheses and pre-fill arguments\",\n-                \"Add call parentheses\",\n+            \"anyOf\": [\n+                {\n+                    \"type\": \"string\",\n+                    \"enum\": [\n+                        \"fill_arguments\",\n+                        \"add_parentheses\"\n+                    ],\n+                    \"enumDescriptions\": [\n+                        \"Add call parentheses and pre-fill arguments\",\n+                        \"Add call parentheses\"\n+                    ]\n+                },\n+                { \"type\": \"null\" }\n             ],\n         },\n         \"SignatureDetail\" => set! {"}, {"sha": "7fa04fbb9a710221f288c85b56d31d0a7e432f5a", "filename": "editors/code/package.json", "status": "modified", "additions": 68, "deletions": 50, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/f8c0062d4eb82311152c6414eca5ebf0621b1da8/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/f8c0062d4eb82311152c6414eca5ebf0621b1da8/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=f8c0062d4eb82311152c6414eca5ebf0621b1da8", "patch": "@@ -491,19 +491,25 @@\n                 \"rust-analyzer.checkOnSave.features\": {\n                     \"markdownDescription\": \"List of features to activate. Defaults to\\n`#rust-analyzer.cargo.features#`.\\n\\nSet to `\\\"all\\\"` to pass `--all-features` to cargo.\",\n                     \"default\": null,\n-                    \"type\": [\n-                        \"string\",\n-                        \"array\",\n-                        \"null\"\n-                    ],\n-                    \"items\": {\n-                        \"type\": \"string\"\n-                    },\n-                    \"enum\": [\n-                        \"all\"\n-                    ],\n-                    \"enumDescriptions\": [\n-                        \"Pass `--all-features` to cargo\"\n+                    \"anyOf\": [\n+                        {\n+                            \"type\": \"string\",\n+                            \"enum\": [\n+                                \"all\"\n+                            ],\n+                            \"enumDescriptions\": [\n+                                \"Pass `--all-features` to cargo\"\n+                            ]\n+                        },\n+                        {\n+                            \"type\": \"array\",\n+                            \"items\": {\n+                                \"type\": \"string\"\n+                            }\n+                        },\n+                        {\n+                            \"type\": \"null\"\n+                        }\n                     ]\n                 },\n                 \"rust-analyzer.checkOnSave.noDefaultFeatures\": {\n@@ -546,17 +552,21 @@\n                 \"rust-analyzer.completion.callable.snippets\": {\n                     \"markdownDescription\": \"Whether to add parenthesis and argument snippets when completing function.\",\n                     \"default\": \"fill_arguments\",\n-                    \"type\": [\n-                        \"string\",\n-                        \"null\"\n-                    ],\n-                    \"enum\": [\n-                        \"fill_arguments\",\n-                        \"add_parentheses\"\n-                    ],\n-                    \"enumDescriptions\": [\n-                        \"Add call parentheses and pre-fill arguments\",\n-                        \"Add call parentheses\"\n+                    \"anyOf\": [\n+                        {\n+                            \"type\": \"string\",\n+                            \"enum\": [\n+                                \"fill_arguments\",\n+                                \"add_parentheses\"\n+                            ],\n+                            \"enumDescriptions\": [\n+                                \"Add call parentheses and pre-fill arguments\",\n+                                \"Add call parentheses\"\n+                            ]\n+                        },\n+                        {\n+                            \"type\": \"null\"\n+                        }\n                     ]\n                 },\n                 \"rust-analyzer.completion.postfix.enable\": {\n@@ -787,19 +797,23 @@\n                 \"rust-analyzer.inlayHints.lifetimeElisionHints.enable\": {\n                     \"markdownDescription\": \"Whether to show inlay type hints for elided lifetimes in function signatures.\",\n                     \"default\": \"never\",\n-                    \"type\": [\n-                        \"string\",\n-                        \"boolean\"\n-                    ],\n-                    \"enum\": [\n-                        \"always\",\n-                        \"never\",\n-                        \"skip_trivial\"\n-                    ],\n-                    \"enumDescriptions\": [\n-                        \"Always show lifetime elision hints.\",\n-                        \"Never show lifetime elision hints.\",\n-                        \"Only show lifetime elision hints if a return type is involved.\"\n+                    \"anyOf\": [\n+                        {\n+                            \"type\": \"string\",\n+                            \"enum\": [\n+                                \"always\",\n+                                \"never\",\n+                                \"skip_trivial\"\n+                            ],\n+                            \"enumDescriptions\": [\n+                                \"Always show lifetime elision hints.\",\n+                                \"Never show lifetime elision hints.\",\n+                                \"Only show lifetime elision hints if a return type is involved.\"\n+                            ]\n+                        },\n+                        {\n+                            \"type\": \"boolean\"\n+                        }\n                     ]\n                 },\n                 \"rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames\": {\n@@ -824,19 +838,23 @@\n                 \"rust-analyzer.inlayHints.reborrowHints.enable\": {\n                     \"markdownDescription\": \"Whether to show inlay type hints for compiler inserted reborrows.\",\n                     \"default\": \"never\",\n-                    \"type\": [\n-                        \"string\",\n-                        \"boolean\"\n-                    ],\n-                    \"enum\": [\n-                        \"always\",\n-                        \"never\",\n-                        \"mutable\"\n-                    ],\n-                    \"enumDescriptions\": [\n-                        \"Always show reborrow hints.\",\n-                        \"Never show reborrow hints.\",\n-                        \"Only show mutable reborrow hints.\"\n+                    \"anyOf\": [\n+                        {\n+                            \"type\": \"string\",\n+                            \"enum\": [\n+                                \"always\",\n+                                \"never\",\n+                                \"mutable\"\n+                            ],\n+                            \"enumDescriptions\": [\n+                                \"Always show reborrow hints.\",\n+                                \"Never show reborrow hints.\",\n+                                \"Only show mutable reborrow hints.\"\n+                            ]\n+                        },\n+                        {\n+                            \"type\": \"boolean\"\n+                        }\n                     ]\n                 },\n                 \"rust-analyzer.inlayHints.renderColons\": {"}]}