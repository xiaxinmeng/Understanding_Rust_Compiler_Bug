{"sha": "2dc815c2428129dd0d01427500980a555bd9971e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkYzgxNWMyNDI4MTI5ZGQwZDAxNDI3NTAwOTgwYTU1NWJkOTk3MWU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-15T08:55:35Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-15T10:49:38Z"}, "message": "Rollup merge of #47417 - petrochenkov:noasm, r=estebank\n\nMove \"no asm\" check into AST validation", "tree": {"sha": "b5b3ea3c0aee250c9996c3862ebd3c9b06eaf7d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5b3ea3c0aee250c9996c3862ebd3c9b06eaf7d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2dc815c2428129dd0d01427500980a555bd9971e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlpch0IACgkQ/vbIBR0O\nATymVQ//Zyk+d2O8XHBNK4XhWhukeCEWWzGw+VbTIRuUO/7VqSwAV2k8qCU/vKVB\nCFqtYSCcFoJ0sp12c11CbmQm8GLJYqWY1ZeKrS5VBw+0WA9tnrS9PRxGuvexSezb\n7fg8RwVkKgCiBSVmqe45XvyaYHyKbdH0WyL1581TNaqdLmjq/fFm9TWxZT22sBWt\n4iRozf7USy9rcs2DclDiPhxsMoQn8HkOYRlX6gjDnI4ZSD5wFZvpvyXevXuvbKhM\nmjQmrid4RvTRCwSmwOI7HUCHHwXm3GBklXKq5Q03+iG5BQyyuEYirC5e7hFTLqnT\nfJPlIFUu3lbaMTLe9n+VMDxuZyD8e6HrXp4BczmvFPTyRq8rB4toVgQ7KVulEtXP\nhEgYjM8p4piPI4wrNq3B7tDJTj5Gw9oEsGhmMxhUzZnva21+QOBUqH8JhTAEcW2w\nWCe/mxnZhc279b42VWBtGpIb1/Nf58Nhd6yo1G27xp4eupq1LWa5/IrZbeexOMU0\nTmu4TpjOjcMjEJzKqNLdVqshI1Zwwt+OlS6ms10DFzYbcQSNVHzHJhTiKWS9MMLX\ny918atROcbEZKY2M9/YZeL+BJ9Aaj8mOA4breHLttz+BokLtjranIq8fA8VnsVz9\nvXuLfw0nKLaGF/WmP8H65+3wPxfq1uxOnM7zS0T7kPDNGlN2WbM=\n=HQ0f\n-----END PGP SIGNATURE-----", "payload": "tree b5b3ea3c0aee250c9996c3862ebd3c9b06eaf7d7\nparent 63f4285247488fd1678467db8307a06ffa3da72a\nparent 318cf22bd1955ba870a0a3189cb5dfdbce31b53e\nauthor kennytm <kennytm@gmail.com> 1516006535 +0800\ncommitter kennytm <kennytm@gmail.com> 1516013378 +0800\n\nRollup merge of #47417 - petrochenkov:noasm, r=estebank\n\nMove \"no asm\" check into AST validation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2dc815c2428129dd0d01427500980a555bd9971e", "html_url": "https://github.com/rust-lang/rust/commit/2dc815c2428129dd0d01427500980a555bd9971e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2dc815c2428129dd0d01427500980a555bd9971e/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63f4285247488fd1678467db8307a06ffa3da72a", "url": "https://api.github.com/repos/rust-lang/rust/commits/63f4285247488fd1678467db8307a06ffa3da72a", "html_url": "https://github.com/rust-lang/rust/commit/63f4285247488fd1678467db8307a06ffa3da72a"}, {"sha": "318cf22bd1955ba870a0a3189cb5dfdbce31b53e", "url": "https://api.github.com/repos/rust-lang/rust/commits/318cf22bd1955ba870a0a3189cb5dfdbce31b53e", "html_url": "https://github.com/rust-lang/rust/commit/318cf22bd1955ba870a0a3189cb5dfdbce31b53e"}], "stats": {"total": 57, "additions": 4, "deletions": 53}, "files": [{"sha": "33234ffb66388086be1872a5ee9a342a66236905", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2dc815c2428129dd0d01427500980a555bd9971e/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dc815c2428129dd0d01427500980a555bd9971e/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=2dc815c2428129dd0d01427500980a555bd9971e", "patch": "@@ -37,7 +37,7 @@ use rustc_typeck as typeck;\n use rustc_privacy;\n use rustc_plugin::registry::Registry;\n use rustc_plugin as plugin;\n-use rustc_passes::{self, ast_validation, no_asm, loops, consts, static_recursion, hir_stats};\n+use rustc_passes::{self, ast_validation, loops, consts, static_recursion, hir_stats};\n use rustc_const_eval::{self, check_match};\n use super::Compilation;\n use ::DefaultTransCrate;\n@@ -852,10 +852,6 @@ pub fn phase_2_configure_and_expand<F>(sess: &Session,\n         println!(\"{}\", json::as_json(&krate));\n     }\n \n-    time(time_passes,\n-         \"checking for inline asm in case the target doesn't support it\",\n-         || no_asm::check_crate(sess, &krate));\n-\n     time(time_passes,\n          \"AST validation\",\n          || ast_validation::check_crate(sess, &krate));"}, {"sha": "3f49128d2e82386f8f16f4474468f1a9da912e1b", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2dc815c2428129dd0d01427500980a555bd9971e/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dc815c2428129dd0d01427500980a555bd9971e/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=2dc815c2428129dd0d01427500980a555bd9971e", "patch": "@@ -149,6 +149,9 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n             ExprKind::Continue(Some(ident)) => {\n                 self.check_label(ident.node, ident.span);\n             }\n+            ExprKind::InlineAsm(..) if !self.session.target.target.options.allow_asm => {\n+                span_err!(self.session, expr.span, E0472, \"asm! is unsupported on this target\");\n+            }\n             _ => {}\n         }\n "}, {"sha": "73c71ec0b2f005a79d02a126c1316e145115de68", "filename": "src/librustc_passes/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2dc815c2428129dd0d01427500980a555bd9971e/src%2Flibrustc_passes%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dc815c2428129dd0d01427500980a555bd9971e/src%2Flibrustc_passes%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib.rs?ref=2dc815c2428129dd0d01427500980a555bd9971e", "patch": "@@ -42,7 +42,6 @@ pub mod consts;\n pub mod hir_stats;\n pub mod loops;\n mod mir_stats;\n-pub mod no_asm;\n pub mod static_recursion;\n \n #[cfg(not(stage0))] // remove after the next snapshot"}, {"sha": "4dbf57a99bcbe1395e060ecd59eb48bd863b8078", "filename": "src/librustc_passes/no_asm.rs", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/63f4285247488fd1678467db8307a06ffa3da72a/src%2Flibrustc_passes%2Fno_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63f4285247488fd1678467db8307a06ffa3da72a/src%2Flibrustc_passes%2Fno_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fno_asm.rs?ref=63f4285247488fd1678467db8307a06ffa3da72a", "patch": "@@ -1,47 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-/// Run over the whole crate and check for ExprInlineAsm.\n-/// Inline asm isn't allowed on virtual ISA based targets, so we reject it\n-/// here.\n-\n-use rustc::session::Session;\n-\n-use syntax::ast;\n-use syntax::visit::Visitor;\n-use syntax::visit;\n-\n-pub fn check_crate(sess: &Session, krate: &ast::Crate) {\n-    if sess.target.target.options.allow_asm {\n-        return;\n-    }\n-\n-    visit::walk_crate(&mut CheckNoAsm { sess: sess }, krate);\n-}\n-\n-#[derive(Copy, Clone)]\n-struct CheckNoAsm<'a> {\n-    sess: &'a Session,\n-}\n-\n-impl<'a> Visitor<'a> for CheckNoAsm<'a> {\n-    fn visit_expr(&mut self, e: &'a ast::Expr) {\n-        match e.node {\n-            ast::ExprKind::InlineAsm(_) => {\n-                span_err!(self.sess,\n-                          e.span,\n-                          E0472,\n-                          \"asm! is unsupported on this target\")\n-            }\n-            _ => {}\n-        }\n-        visit::walk_expr(self, e)\n-    }\n-}"}]}