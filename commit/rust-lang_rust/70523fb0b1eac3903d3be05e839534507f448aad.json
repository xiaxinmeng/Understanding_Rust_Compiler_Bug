{"sha": "70523fb0b1eac3903d3be05e839534507f448aad", "node_id": "C_kwDOAAsO6NoAKDcwNTIzZmIwYjFlYWMzOTAzZDNiZTA1ZTgzOTUzNDUwN2Y0NDhhYWQ", "commit": {"author": {"name": "John Millikin", "email": "john@john-millikin.com", "date": "2023-05-04T10:37:33Z"}, "committer": {"name": "John Millikin", "email": "john@john-millikin.com", "date": "2023-05-04T10:37:33Z"}, "message": "Add `is_positive` method for signed non-zero integers.", "tree": {"sha": "104f07ceb4478ab69ad09df2bf0ead8ac9e0cad3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/104f07ceb4478ab69ad09df2bf0ead8ac9e0cad3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70523fb0b1eac3903d3be05e839534507f448aad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70523fb0b1eac3903d3be05e839534507f448aad", "html_url": "https://github.com/rust-lang/rust/commit/70523fb0b1eac3903d3be05e839534507f448aad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70523fb0b1eac3903d3be05e839534507f448aad/comments", "author": {"login": "jmillikin", "id": 646128, "node_id": "MDQ6VXNlcjY0NjEyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/646128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmillikin", "html_url": "https://github.com/jmillikin", "followers_url": "https://api.github.com/users/jmillikin/followers", "following_url": "https://api.github.com/users/jmillikin/following{/other_user}", "gists_url": "https://api.github.com/users/jmillikin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmillikin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmillikin/subscriptions", "organizations_url": "https://api.github.com/users/jmillikin/orgs", "repos_url": "https://api.github.com/users/jmillikin/repos", "events_url": "https://api.github.com/users/jmillikin/events{/privacy}", "received_events_url": "https://api.github.com/users/jmillikin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jmillikin", "id": 646128, "node_id": "MDQ6VXNlcjY0NjEyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/646128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmillikin", "html_url": "https://github.com/jmillikin", "followers_url": "https://api.github.com/users/jmillikin/followers", "following_url": "https://api.github.com/users/jmillikin/following{/other_user}", "gists_url": "https://api.github.com/users/jmillikin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmillikin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmillikin/subscriptions", "organizations_url": "https://api.github.com/users/jmillikin/orgs", "repos_url": "https://api.github.com/users/jmillikin/repos", "events_url": "https://api.github.com/users/jmillikin/events{/privacy}", "received_events_url": "https://api.github.com/users/jmillikin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f8c0557e0b73c73a8a7163a15f4a5a3feca7d5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f8c0557e0b73c73a8a7163a15f4a5a3feca7d5c", "html_url": "https://github.com/rust-lang/rust/commit/6f8c0557e0b73c73a8a7163a15f4a5a3feca7d5c"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "74a325b89d442a1f3b614216e38541edeaa188ea", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/70523fb0b1eac3903d3be05e839534507f448aad/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70523fb0b1eac3903d3be05e839534507f448aad/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=70523fb0b1eac3903d3be05e839534507f448aad", "patch": "@@ -713,6 +713,32 @@ macro_rules! nonzero_signed_operations {\n                     unsafe { $Uty::new_unchecked(self.get().unsigned_abs()) }\n                 }\n \n+                /// Returns `true` if `self` is positive and `false` if the\n+                /// number is negative.\n+                ///\n+                /// # Example\n+                ///\n+                /// ```\n+                /// #![feature(nonzero_negation_ops)]\n+                ///\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n+                /// # fn main() { test().unwrap(); }\n+                /// # fn test() -> Option<()> {\n+                #[doc = concat!(\"let pos_five = \", stringify!($Ty), \"::new(5)?;\")]\n+                #[doc = concat!(\"let neg_five = \", stringify!($Ty), \"::new(-5)?;\")]\n+                ///\n+                /// assert!(pos_five.is_positive());\n+                /// assert!(!neg_five.is_positive());\n+                /// # Some(())\n+                /// # }\n+                /// ```\n+                #[must_use]\n+                #[inline]\n+                #[unstable(feature = \"nonzero_negation_ops\", issue = \"102443\")]\n+                pub const fn is_positive(self) -> bool {\n+                    self.get().is_positive()\n+                }\n+\n                 /// Returns `true` if `self` is negative and `false` if the\n                 /// number is positive.\n                 ///"}]}