{"sha": "720ec68435224a453ffeccb080c0d219df2e55c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMGVjNjg0MzUyMjRhNDUzZmZlY2NiMDgwYzBkMjE5ZGYyZTU1YzQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-14T08:22:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-14T08:22:50Z"}, "message": "Rollup merge of #71870 - ltratt:more_specific_type_name_doc, r=kennytm\n\nBe slightly more precise about any::type_name()'s guarantees.\n\nThe first commit in this PR rephrases the current documentation for `any::type_name()` to be a little more specific about the guarantees (or lack thereof) that this function makes. The second commit explicitly documents that lifetimes are currently not included in the output (since this bit me particularly hard recently).", "tree": {"sha": "172250d9ad130dc6bc8a2eba515066a5d3fbb4e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/172250d9ad130dc6bc8a2eba515066a5d3fbb4e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/720ec68435224a453ffeccb080c0d219df2e55c4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJevP/aCRBK7hj4Ov3rIwAAdHIIAAc8oFmjLE9hfLRz9JzV/MpB\nun9YruLDmmo/oJsiUOZ/ToLLgYpPmP0xJK3FLT4vzayMry6TMqTllMzilmMAUJbu\nqsKL8Hv2qoInODmQMbh6ugbZBpyWOXMnYmm79lizrYYJDGTTn3CiQbhyhb57eQJ3\nh+zf7foLwkRi1up5ei3Z6lOYZ3NJJh5LiFAgxpogn+mEYZ54OF5aTDWVA7AXQzi6\nhdD6w0BP+HnC0LQmcw0Na/D4RJ6SurSZ3ka4jUha8UD7eYi43j60LS049OQvHL6/\ngnux/QvlcQ/pJIz05yem4Z8LNjPqwXuZrp0A36bqaL/mfk0IHatB/5bZkPDnuBg=\n=ZIcF\n-----END PGP SIGNATURE-----\n", "payload": "tree 172250d9ad130dc6bc8a2eba515066a5d3fbb4e6\nparent 7893d9a8d6065b7899f92c45f543528a0c099a7d\nparent 003ed802c4a289d959d4212ad80f33df7f3e2bc3\nauthor Ralf Jung <post@ralfj.de> 1589444570 +0200\ncommitter GitHub <noreply@github.com> 1589444570 +0200\n\nRollup merge of #71870 - ltratt:more_specific_type_name_doc, r=kennytm\n\nBe slightly more precise about any::type_name()'s guarantees.\n\nThe first commit in this PR rephrases the current documentation for `any::type_name()` to be a little more specific about the guarantees (or lack thereof) that this function makes. The second commit explicitly documents that lifetimes are currently not included in the output (since this bit me particularly hard recently).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/720ec68435224a453ffeccb080c0d219df2e55c4", "html_url": "https://github.com/rust-lang/rust/commit/720ec68435224a453ffeccb080c0d219df2e55c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/720ec68435224a453ffeccb080c0d219df2e55c4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7893d9a8d6065b7899f92c45f543528a0c099a7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7893d9a8d6065b7899f92c45f543528a0c099a7d", "html_url": "https://github.com/rust-lang/rust/commit/7893d9a8d6065b7899f92c45f543528a0c099a7d"}, {"sha": "003ed802c4a289d959d4212ad80f33df7f3e2bc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/003ed802c4a289d959d4212ad80f33df7f3e2bc3", "html_url": "https://github.com/rust-lang/rust/commit/003ed802c4a289d959d4212ad80f33df7f3e2bc3"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "79b6304958d51332af85ff9987ba5c8740feb385", "filename": "src/libcore/any.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/720ec68435224a453ffeccb080c0d219df2e55c4/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/720ec68435224a453ffeccb080c0d219df2e55c4/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=720ec68435224a453ffeccb080c0d219df2e55c4", "patch": "@@ -446,14 +446,16 @@ impl TypeId {\n /// # Note\n ///\n /// This is intended for diagnostic use. The exact contents and format of the\n-/// string are not specified, other than being a best-effort description of the\n-/// type. For example, `type_name::<Option<String>>()` could return the\n-/// `\"Option<String>\"` or `\"std::option::Option<std::string::String>\"`, but not\n-/// `\"foobar\"`. In addition, the output may change between versions of the\n-/// compiler.\n+/// string returned are not specified, other than being a best-effort\n+/// description of the type. For example, amongst the strings\n+/// that `type_name::<Option<String>>()` might return are `\"Option<String>\"` and\n+/// `\"std::option::Option<std::string::String>\"`.\n ///\n-/// The type name should not be considered a unique identifier of a type;\n-/// multiple types may share the same type name.\n+/// The returned string must not be considered to be a unique identifier of a\n+/// type as multiple types may map to the same type name. Similarly, there is no\n+/// guarantee that all parts of a type will appear in the returned string: for\n+/// example, lifetime specifiers are currently not included. In addition, the\n+/// output may change between versions of the compiler.\n ///\n /// The current implementation uses the same infrastructure as compiler\n /// diagnostics and debuginfo, but this is not guaranteed."}]}