{"sha": "f4d4a40a7c9f967d972e5fab65d026c4e5d175ee", "node_id": "C_kwDOAAsO6NoAKGY0ZDRhNDBhN2M5Zjk2N2Q5NzJlNWZhYjY1ZDAyNmM0ZTVkMTc1ZWU", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-08-27T04:14:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-27T04:14:20Z"}, "message": "Rollup merge of #100953 - joshtriplett:write-docs, r=Mark-Simulacrum\n\nUpdate documentation for `write!` and `writeln!`\n\nhttps://github.com/rust-lang/rust/pull/37472 added this documentation, but it\nneeds updating:\n\n- Remove some documentation duplicated between `writeln!` and `write!`\n- Update `write!` docs: can now import traits as `_` to avoid conflicts\n- Expand example to show how to implement qualified trait names", "tree": {"sha": "1b01a78d4ddf821573583fcec5642ac92a3beb7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b01a78d4ddf821573583fcec5642ac92a3beb7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4d4a40a7c9f967d972e5fab65d026c4e5d175ee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjCZocCRBK7hj4Ov3rIwAA/tUIADKnb0NiN0/dznYK3u5V8yXN\ngB7BZUGZVdaJotcPC/02O4rw1aEBgOVJOCDLmLIte/f2sf4CmbKWlwWLijLPCjbL\nul+7uCpe4Rp18uM8lgtx/yJEKdd3+idn9QlQGkLI3OCz/uQydsPSs3zkFBjG6083\nGmls+y8D7ac0Bk3WdUqVrmk2W0ry9xFbMNwPbDBlaTOGv5/guJ8I4k9LIjy+zyst\nGC1asgNC3/LVVUmzVvcLP8pflSQyQDpflhSRcbgAjuQoDHLyMyRpZrI0yjphFylU\nkDcNZWrpUoJKpFkvXq+AlzCJms7gRzpohbcVOK7LEsizNsgw2yLo+6PaORvVPXE=\n=Yigf\n-----END PGP SIGNATURE-----\n", "payload": "tree 1b01a78d4ddf821573583fcec5642ac92a3beb7c\nparent e31bedc9cf52490f4228c84e652ef5387184f75a\nparent ae937cc347b1f1290a9a8208d1896ed366247109\nauthor Yuki Okushi <jtitor@2k36.org> 1661573660 +0900\ncommitter GitHub <noreply@github.com> 1661573660 +0900\n\nRollup merge of #100953 - joshtriplett:write-docs, r=Mark-Simulacrum\n\nUpdate documentation for `write!` and `writeln!`\n\nhttps://github.com/rust-lang/rust/pull/37472 added this documentation, but it\nneeds updating:\n\n- Remove some documentation duplicated between `writeln!` and `write!`\n- Update `write!` docs: can now import traits as `_` to avoid conflicts\n- Expand example to show how to implement qualified trait names\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4d4a40a7c9f967d972e5fab65d026c4e5d175ee", "html_url": "https://github.com/rust-lang/rust/commit/f4d4a40a7c9f967d972e5fab65d026c4e5d175ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4d4a40a7c9f967d972e5fab65d026c4e5d175ee/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e31bedc9cf52490f4228c84e652ef5387184f75a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e31bedc9cf52490f4228c84e652ef5387184f75a", "html_url": "https://github.com/rust-lang/rust/commit/e31bedc9cf52490f4228c84e652ef5387184f75a"}, {"sha": "ae937cc347b1f1290a9a8208d1896ed366247109", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae937cc347b1f1290a9a8208d1896ed366247109", "html_url": "https://github.com/rust-lang/rust/commit/ae937cc347b1f1290a9a8208d1896ed366247109"}], "stats": {"total": 43, "additions": 21, "deletions": 22}, "files": [{"sha": "0bd9c8e9acfcb7424908c1ee8a041e2ff108a256", "filename": "library/core/src/macros/mod.rs", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/f4d4a40a7c9f967d972e5fab65d026c4e5d175ee/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4d4a40a7c9f967d972e5fab65d026c4e5d175ee/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs?ref=f4d4a40a7c9f967d972e5fab65d026c4e5d175ee", "patch": "@@ -457,11 +457,12 @@ macro_rules! r#try {\n ///\n /// A module can import both `std::fmt::Write` and `std::io::Write` and call `write!` on objects\n /// implementing either, as objects do not typically implement both. However, the module must\n-/// import the traits qualified so their names do not conflict:\n+/// avoid conflict between the trait names, such as by importing them as `_` or otherwise renaming\n+/// them:\n ///\n /// ```\n-/// use std::fmt::Write as FmtWrite;\n-/// use std::io::Write as IoWrite;\n+/// use std::fmt::Write as _;\n+/// use std::io::Write as _;\n ///\n /// fn main() -> Result<(), Box<dyn std::error::Error>> {\n ///     let mut s = String::new();\n@@ -474,6 +475,23 @@ macro_rules! r#try {\n /// }\n /// ```\n ///\n+/// If you also need the trait names themselves, such as to implement one or both on your types,\n+/// import the containing module and then name them with a prefix:\n+///\n+/// ```\n+/// # #![allow(unused_imports)]\n+/// use std::fmt::{self, Write as _};\n+/// use std::io::{self, Write as _};\n+///\n+/// struct Example;\n+///\n+/// impl fmt::Write for Example {\n+///     fn write_str(&mut self, _s: &str) -> core::fmt::Result {\n+///          unimplemented!();\n+///     }\n+/// }\n+/// ```\n+///\n /// Note: This macro can be used in `no_std` setups as well.\n /// In a `no_std` setup you are responsible for the implementation details of the components.\n ///\n@@ -526,25 +544,6 @@ macro_rules! write {\n ///     Ok(())\n /// }\n /// ```\n-///\n-/// A module can import both `std::fmt::Write` and `std::io::Write` and call `write!` on objects\n-/// implementing either, as objects do not typically implement both. However, the module must\n-/// import the traits qualified so their names do not conflict:\n-///\n-/// ```\n-/// use std::fmt::Write as FmtWrite;\n-/// use std::io::Write as IoWrite;\n-///\n-/// fn main() -> Result<(), Box<dyn std::error::Error>> {\n-///     let mut s = String::new();\n-///     let mut v = Vec::new();\n-///\n-///     writeln!(&mut s, \"{} {}\", \"abc\", 123)?; // uses fmt::Write::write_fmt\n-///     writeln!(&mut v, \"s = {:?}\", s)?; // uses io::Write::write_fmt\n-///     assert_eq!(v, b\"s = \\\"abc 123\\\\n\\\"\\n\");\n-///     Ok(())\n-/// }\n-/// ```\n #[macro_export]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"writeln_macro\")]"}]}