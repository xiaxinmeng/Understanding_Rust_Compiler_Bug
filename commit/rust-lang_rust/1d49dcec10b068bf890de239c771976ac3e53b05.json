{"sha": "1d49dcec10b068bf890de239c771976ac3e53b05", "node_id": "C_kwDOAAsO6NoAKDFkNDlkY2VjMTBiMDY4YmY4OTBkZTIzOWM3NzE5NzZhYzNlNTNiMDU", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-09-06T22:43:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-06T22:43:54Z"}, "message": "Rollup merge of #101484 - oli-obk:no_zst, r=eddyb\n\nRemove dead broken code from const zst handling in backends\n\ncc `@RalfJung`\n\nfound by `@eddyb` in https://github.com/rust-lang/rust/pull/98957#discussion_r963744605", "tree": {"sha": "2f64cd9dbf494802d83db7a292141439384a2c56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f64cd9dbf494802d83db7a292141439384a2c56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d49dcec10b068bf890de239c771976ac3e53b05", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjF80qCRBK7hj4Ov3rIwAA8MMIAHOwnB/EggDwJ9cu896ZlBZf\nel8Vq/92UUspXY6boZ8DAeIe3xnkOIMKpW91AIJ3fU75gnQdLXyh6Q/uS7Z2KIGE\n8WtcOnjTJ5iHjFsBCAN+EhOWOU0PgS61YDpwA+9F9W9Tsjzg+U0p8WFAyB6XorQf\nyTdT1wnci+MA9Pdk2kEWsBzpHfC55XPT9hXOWbAGa1Aaq1JHf4b5aR89AXAeoaS0\nqwcwcTcKx+pWSKDXh7u8WvcjHEfuSl8two5oTNMy6IQ7b+QonMb85JliOA/Gr5vp\noeAxwYKaGhy1aLPgtR848j8tW8WniDrxzumQT0SsvZk2d100rhtP+2vOU7WmBgY=\n=fnyz\n-----END PGP SIGNATURE-----\n", "payload": "tree 2f64cd9dbf494802d83db7a292141439384a2c56\nparent 923dae5c9fffbc31e73fe66ead5b9be45ac5208b\nparent 9c4fb018cac37099a6e0981aa6248ee039aab42a\nauthor Yuki Okushi <jtitor@2k36.org> 1662504234 +0900\ncommitter GitHub <noreply@github.com> 1662504234 +0900\n\nRollup merge of #101484 - oli-obk:no_zst, r=eddyb\n\nRemove dead broken code from const zst handling in backends\n\ncc `@RalfJung`\n\nfound by `@eddyb` in https://github.com/rust-lang/rust/pull/98957#discussion_r963744605\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d49dcec10b068bf890de239c771976ac3e53b05", "html_url": "https://github.com/rust-lang/rust/commit/1d49dcec10b068bf890de239c771976ac3e53b05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d49dcec10b068bf890de239c771976ac3e53b05/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "923dae5c9fffbc31e73fe66ead5b9be45ac5208b", "url": "https://api.github.com/repos/rust-lang/rust/commits/923dae5c9fffbc31e73fe66ead5b9be45ac5208b", "html_url": "https://github.com/rust-lang/rust/commit/923dae5c9fffbc31e73fe66ead5b9be45ac5208b"}, {"sha": "9c4fb018cac37099a6e0981aa6248ee039aab42a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c4fb018cac37099a6e0981aa6248ee039aab42a", "html_url": "https://github.com/rust-lang/rust/commit/9c4fb018cac37099a6e0981aa6248ee039aab42a"}], "stats": {"total": 18, "additions": 1, "deletions": 17}, "files": [{"sha": "aa1c271c31cb46d7695995756b2d09e69311bab4", "filename": "compiler/rustc_codegen_gcc/src/common.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1d49dcec10b068bf890de239c771976ac3e53b05/compiler%2Frustc_codegen_gcc%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d49dcec10b068bf890de239c771976ac3e53b05/compiler%2Frustc_codegen_gcc%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fcommon.rs?ref=1d49dcec10b068bf890de239c771976ac3e53b05", "patch": "@@ -158,10 +158,6 @@ impl<'gcc, 'tcx> ConstMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n         None\n     }\n \n-    fn zst_to_backend(&self, _ty: Type<'gcc>) -> RValue<'gcc> {\n-        self.const_undef(self.type_ix(0))\n-    }\n-\n     fn scalar_to_backend(&self, cv: Scalar, layout: abi::Scalar, ty: Type<'gcc>) -> RValue<'gcc> {\n         let bitsize = if layout.is_bool() { 1 } else { layout.size(self).bits() };\n         match cv {"}, {"sha": "488ea72c3b77991a7146f71ea24aac66cc981653", "filename": "compiler/rustc_codegen_llvm/src/common.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1d49dcec10b068bf890de239c771976ac3e53b05/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d49dcec10b068bf890de239c771976ac3e53b05/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcommon.rs?ref=1d49dcec10b068bf890de239c771976ac3e53b05", "patch": "@@ -226,10 +226,6 @@ impl<'ll, 'tcx> ConstMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         })\n     }\n \n-    fn zst_to_backend(&self, _llty: &'ll Type) -> &'ll Value {\n-        self.const_undef(self.type_ix(0))\n-    }\n-\n     fn scalar_to_backend(&self, cv: Scalar, layout: abi::Scalar, llty: &'ll Type) -> &'ll Value {\n         let bitsize = if layout.is_bool() { 1 } else { layout.size(self).bits() };\n         match cv {"}, {"sha": "37b1e036247bfcd8c4c2863c87bcd6385406816d", "filename": "compiler/rustc_codegen_ssa/src/mir/operand.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1d49dcec10b068bf890de239c771976ac3e53b05/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d49dcec10b068bf890de239c771976ac3e53b05/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs?ref=1d49dcec10b068bf890de239c771976ac3e53b05", "patch": "@@ -72,10 +72,6 @@ impl<'a, 'tcx, V: CodegenObject> OperandRef<'tcx, V> {\n     ) -> Self {\n         let layout = bx.layout_of(ty);\n \n-        if layout.is_zst() {\n-            return OperandRef::new_zst(bx, layout);\n-        }\n-\n         let val = match val {\n             ConstValue::Scalar(x) => {\n                 let Abi::Scalar(scalar) = layout.abi else {\n@@ -84,10 +80,7 @@ impl<'a, 'tcx, V: CodegenObject> OperandRef<'tcx, V> {\n                 let llval = bx.scalar_to_backend(x, scalar, bx.immediate_backend_type(layout));\n                 OperandValue::Immediate(llval)\n             }\n-            ConstValue::ZeroSized => {\n-                let llval = bx.zst_to_backend(bx.immediate_backend_type(layout));\n-                OperandValue::Immediate(llval)\n-            }\n+            ConstValue::ZeroSized => return OperandRef::new_zst(bx, layout),\n             ConstValue::Slice { data, start, end } => {\n                 let Abi::ScalarPair(a_scalar, _) = layout.abi else {\n                     bug!(\"from_const: invalid ScalarPair layout: {:#?}\", layout);"}, {"sha": "fdc7a30e841ed1b7e4d64ff077a3fd6e1b26baf4", "filename": "compiler/rustc_codegen_ssa/src/traits/consts.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1d49dcec10b068bf890de239c771976ac3e53b05/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d49dcec10b068bf890de239c771976ac3e53b05/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fconsts.rs?ref=1d49dcec10b068bf890de239c771976ac3e53b05", "patch": "@@ -29,7 +29,6 @@ pub trait ConstMethods<'tcx>: BackendTypes {\n     fn const_data_from_alloc(&self, alloc: ConstAllocation<'tcx>) -> Self::Value;\n \n     fn scalar_to_backend(&self, cv: Scalar, layout: abi::Scalar, llty: Self::Type) -> Self::Value;\n-    fn zst_to_backend(&self, llty: Self::Type) -> Self::Value;\n     fn from_const_alloc(\n         &self,\n         layout: TyAndLayout<'tcx>,"}]}