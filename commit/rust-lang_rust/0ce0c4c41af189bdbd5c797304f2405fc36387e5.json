{"sha": "0ce0c4c41af189bdbd5c797304f2405fc36387e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjZTBjNGM0MWFmMTg5YmRiZDVjNzk3MzA0ZjI0MDVmYzM2Mzg3ZTU=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-03-22T20:24:29Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-22T21:23:43Z"}, "message": "Support for shorter error messages that are aware of objects' cnames.", "tree": {"sha": "74acc109a7b0570a03a66bce56a2fbb99205c647", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74acc109a7b0570a03a66bce56a2fbb99205c647"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ce0c4c41af189bdbd5c797304f2405fc36387e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ce0c4c41af189bdbd5c797304f2405fc36387e5", "html_url": "https://github.com/rust-lang/rust/commit/0ce0c4c41af189bdbd5c797304f2405fc36387e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ce0c4c41af189bdbd5c797304f2405fc36387e5/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcf04e253f0cc963f0e529a0ceef2268cb7916e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcf04e253f0cc963f0e529a0ceef2268cb7916e1", "html_url": "https://github.com/rust-lang/rust/commit/bcf04e253f0cc963f0e529a0ceef2268cb7916e1"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "c6394c34149a9125a5f83ef9839e34b9dd0aa1a1", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/0ce0c4c41af189bdbd5c797304f2405fc36387e5/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ce0c4c41af189bdbd5c797304f2405fc36387e5/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=0ce0c4c41af189bdbd5c797304f2405fc36387e5", "patch": "@@ -115,10 +115,17 @@ fn ty_to_str(&@t typ) -> str {\n                  option.t[ast.ident] ident,\n                  vec[arg] inputs, @t output) -> str {\n             auto f = fn_input_to_str;\n-            auto s = \"fn\";\n-            if (proto == ast.proto_iter) {\n-                s = \"iter\";\n+\n+            auto s;\n+            alt (proto) {\n+                case (ast.proto_iter) {\n+                    s = \"iter\";\n+                }\n+                case (ast.proto_fn) {\n+                    s = \"fn\";\n+                }\n             }\n+\n             alt (ident) {\n                 case (some[ast.ident](?i)) {\n                     s += \" \";\n@@ -206,9 +213,16 @@ fn ty_to_str(&@t typ) -> str {\n         }\n \n         case (ty_obj(?meths)) {\n-            auto f = method_to_str;\n-            auto m = _vec.map[method,str](f, meths);\n-            s += \"obj {\\n\\t\" + _str.connect(m, \"\\n\\t\") + \"\\n}\";\n+            alt (typ.cname) {\n+                case (some[str](?cs)) {\n+                    s += cs;\n+                }\n+                case (_) {\n+                    auto f = method_to_str;\n+                    auto m = _vec.map[method,str](f, meths);\n+                    s += \"obj {\\n\\t\" + _str.connect(m, \"\\n\\t\") + \"\\n}\";\n+                }\n+            }\n         }\n \n         case (ty_var(?v)) {"}, {"sha": "dbeeb8f903e500670b713a3d00ef22d6b10c3b82", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0ce0c4c41af189bdbd5c797304f2405fc36387e5/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ce0c4c41af189bdbd5c797304f2405fc36387e5/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=0ce0c4c41af189bdbd5c797304f2405fc36387e5", "patch": "@@ -538,19 +538,22 @@ fn collect_item_types(session.session sess, @ast.crate crate)\n \n     fn ty_of_obj(@ty_item_table id_to_ty_item,\n                  @ty_table item_to_ty,\n+                 &ast.ident id,\n                  &ast._obj obj_info) -> @ty.t {\n         auto f = bind ty_of_method(id_to_ty_item, item_to_ty, _);\n         auto methods =\n             _vec.map[@ast.method,method](f, obj_info.methods);\n \n-        auto t_obj = plain_ty(ty.ty_obj(ty.sort_methods(methods)));\n+        auto t_obj = @rec(struct=ty.ty_obj(ty.sort_methods(methods)),\n+                          cname=some[str](id));\n         ret t_obj;\n     }\n \n     fn ty_of_obj_ctor(@ty_item_table id_to_ty_item,\n                       @ty_table item_to_ty,\n+                      &ast.ident id,\n                       &ast._obj obj_info) -> @ty.t {\n-        auto t_obj = ty_of_obj(id_to_ty_item, item_to_ty, obj_info);\n+        auto t_obj = ty_of_obj(id_to_ty_item, item_to_ty, id, obj_info);\n         let vec[arg] t_inputs = vec();\n         for (ast.obj_field f in obj_info.fields) {\n             auto g = bind getter(id_to_ty_item, item_to_ty, _);\n@@ -584,6 +587,7 @@ fn collect_item_types(session.session sess, @ast.crate crate)\n                 // TODO: handle ty-params\n                 auto t_ctor = ty_of_obj_ctor(id_to_ty_item,\n                                              item_to_ty,\n+                                             ident,\n                                              obj_info);\n                 item_to_ty.insert(def_id, t_ctor);\n                 ret t_ctor;"}]}