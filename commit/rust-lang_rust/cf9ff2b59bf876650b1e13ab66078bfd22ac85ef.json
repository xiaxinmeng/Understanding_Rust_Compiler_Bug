{"sha": "cf9ff2b59bf876650b1e13ab66078bfd22ac85ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmOWZmMmI1OWJmODc2NjUwYjFlMTNhYjY2MDc4YmZkMjJhYzg1ZWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2016-10-19T15:21:27Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2016-11-14T07:23:20Z"}, "message": "Fix where clauses parsing\n\nDon't allow lifetimes without any bounds at all", "tree": {"sha": "cc220789e5ba1885805fad28409cab5f511a25c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc220789e5ba1885805fad28409cab5f511a25c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf9ff2b59bf876650b1e13ab66078bfd22ac85ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf9ff2b59bf876650b1e13ab66078bfd22ac85ef", "html_url": "https://github.com/rust-lang/rust/commit/cf9ff2b59bf876650b1e13ab66078bfd22ac85ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf9ff2b59bf876650b1e13ab66078bfd22ac85ef/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a41505f4f4a93bf94f4f7439d41afd826ab20b94", "url": "https://api.github.com/repos/rust-lang/rust/commits/a41505f4f4a93bf94f4f7439d41afd826ab20b94", "html_url": "https://github.com/rust-lang/rust/commit/a41505f4f4a93bf94f4f7439d41afd826ab20b94"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "0694bbab66f188eba0da93d8f925bd7f6f11f323", "filename": "src/librustc_borrowck/borrowck/mir/dataflow/graphviz.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf9ff2b59bf876650b1e13ab66078bfd22ac85ef/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf9ff2b59bf876650b1e13ab66078bfd22ac85ef/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow%2Fgraphviz.rs?ref=cf9ff2b59bf876650b1e13ab66078bfd22ac85ef", "patch": "@@ -88,7 +88,7 @@ pub trait MirWithFlowState<'tcx> {\n }\n \n impl<'a, 'tcx: 'a, BD> MirWithFlowState<'tcx> for MirBorrowckCtxtPreDataflow<'a, 'tcx, BD>\n-    where 'a, 'tcx: 'a, BD: BitDenotation<Ctxt=MoveDataParamEnv<'tcx>>\n+    where 'tcx: 'a, BD: BitDenotation<Ctxt=MoveDataParamEnv<'tcx>>\n {\n     type BD = BD;\n     fn node_id(&self) -> NodeId { self.node_id }"}, {"sha": "e1de32de790c943f55d239386f4b3928b57070cb", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf9ff2b59bf876650b1e13ab66078bfd22ac85ef/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf9ff2b59bf876650b1e13ab66078bfd22ac85ef/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=cf9ff2b59bf876650b1e13ab66078bfd22ac85ef", "patch": "@@ -4440,7 +4440,7 @@ impl<'a> Parser<'a> {\n                     let bounded_lifetime =\n                         self.parse_lifetime()?;\n \n-                    self.eat(&token::Colon);\n+                    self.expect(&token::Colon)?;\n \n                     let bounds =\n                         self.parse_lifetimes(token::BinOp(token::Plus))?;"}, {"sha": "78d9745408735fb8d660fc4f6c91f3501b839de4", "filename": "src/test/parse-fail/where-clauses-no-bounds-or-predicates.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cf9ff2b59bf876650b1e13ab66078bfd22ac85ef/src%2Ftest%2Fparse-fail%2Fwhere-clauses-no-bounds-or-predicates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf9ff2b59bf876650b1e13ab66078bfd22ac85ef/src%2Ftest%2Fparse-fail%2Fwhere-clauses-no-bounds-or-predicates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fwhere-clauses-no-bounds-or-predicates.rs?ref=cf9ff2b59bf876650b1e13ab66078bfd22ac85ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z parse-only\n+// compile-flags: -Z parse-only -Z continue-parse-after-error\n \n fn equal1<T>(_: &T, _: &T) -> bool where {\n //~^ ERROR a `where` clause must have at least one predicate in it\n@@ -20,5 +20,8 @@ fn equal2<T>(_: &T, _: &T) -> bool where T: {\n     true\n }\n \n+fn foo<'a>() where 'a {}\n+//~^ ERROR expected `:`, found `{`\n+\n fn main() {\n }"}]}