{"sha": "bbcff95ac51f5533866d307a85eedb062a1a05da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiY2ZmOTVhYzUxZjU1MzM4NjZkMzA3YTg1ZWVkYjA2MmExYTA1ZGE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-16T02:20:12Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-16T02:20:12Z"}, "message": "remove unused imports", "tree": {"sha": "347c5022634791066acc15e058710fd8e2bd9773", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/347c5022634791066acc15e058710fd8e2bd9773"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbcff95ac51f5533866d307a85eedb062a1a05da", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbcff95ac51f5533866d307a85eedb062a1a05da", "html_url": "https://github.com/rust-lang/rust/commit/bbcff95ac51f5533866d307a85eedb062a1a05da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbcff95ac51f5533866d307a85eedb062a1a05da/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30973ccb9041a5035cdb24b382a0d5634ccc9e2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/30973ccb9041a5035cdb24b382a0d5634ccc9e2e", "html_url": "https://github.com/rust-lang/rust/commit/30973ccb9041a5035cdb24b382a0d5634ccc9e2e"}], "stats": {"total": 35, "additions": 2, "deletions": 33}, "files": [{"sha": "5bf4dd517a5b2be655d12b7842cd1f64d40c1b03", "filename": "src/libextra/base64.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Fbase64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Fbase64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fbase64.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -229,8 +229,6 @@ impl<'self> FromBase64 for &'self str {\n \n #[cfg(test)]\n mod tests {\n-    use core::str;\n-\n     #[test]\n     fn test_to_base64() {\n         assert_eq!(\"\".to_base64(), ~\"\");"}, {"sha": "fed73256c002c18164e7eff2d24d373edffaf28b", "filename": "src/libextra/rope.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Frope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Frope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Frope.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -1271,7 +1271,6 @@ mod tests {\n \n     use rope::*;\n \n-    use core::str;\n     use core::uint;\n     use core::vec;\n "}, {"sha": "38cb14711547f85d9fa45809d7236afe9ef0dd25", "filename": "src/libextra/sha1.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsha1.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -24,7 +24,6 @@\n \n use core::prelude::*;\n \n-use core::str;\n use core::uint;\n use core::vec;\n \n@@ -279,8 +278,6 @@ pub fn sha1() -> @Sha1 {\n mod tests {\n     use sha1;\n \n-    use core::vec;\n-\n     #[test]\n     fn test() {\n         struct Test {"}, {"sha": "d63e1c4516ffbd7f4e693431300ea889ba62a27a", "filename": "src/libextra/smallintmap.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Fsmallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Fsmallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsmallintmap.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -294,11 +294,6 @@ mod tests {\n \n     use super::SmallIntMap;\n \n-    use core::local_data;\n-    use core::rand;\n-    use core::uint;\n-    use core::vec;\n-\n     #[test]\n     fn test_find_mut() {\n         let mut m = SmallIntMap::new();"}, {"sha": "b88fd374da25414d1fa04a83340f2c930aeb23a1", "filename": "src/libextra/sort.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsort.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -751,7 +751,6 @@ fn shift_vec<T:Copy>(dest: &mut [T],\n mod test_qsort3 {\n     use sort::*;\n \n-    use core::vec;\n \n     fn check_sort(v1: &mut [int], v2: &mut [int]) {\n         let len = v1.len();\n@@ -861,8 +860,6 @@ mod tests {\n \n     use sort::*;\n \n-    use core::vec;\n-\n     fn check_sort(v1: &[int], v2: &[int]) {\n         let len = v1.len();\n         pub fn le(a: &int, b: &int) -> bool { *a <= *b }"}, {"sha": "3a1de5de01d60558041742ea575c2467d7029104", "filename": "src/libextra/stats.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fstats.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -12,7 +12,6 @@\n \n use core::prelude::*;\n \n-use core::vec;\n use core::f64;\n use core::cmp;\n use core::num;"}, {"sha": "93759bea35f7e4b9fce60642337dfa62f706ee58", "filename": "src/libextra/std.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fstd.rc?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -37,6 +37,7 @@ not required in or otherwise suitable for the core library.\n \n extern mod core(name = \"std\", vers = \"0.7-pre\");\n \n+#[cfg(stage0)]\n use core::{str, unstable};\n use core::str::{StrSlice, OwnedStr};\n "}, {"sha": "39dcee5eff315a04cb412451078f8174e18ac3d6", "filename": "src/libextra/tempfile.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Ftempfile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Ftempfile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftempfile.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -36,7 +36,6 @@ mod tests {\n     use tempfile::mkdtemp;\n \n     use core::os;\n-    use core::str;\n \n     #[test]\n     fn test_mkdtemp() {"}, {"sha": "66649c62fcaf34759bffe0d079130827c49d1980", "filename": "src/libextra/terminfo/parser/compiled.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Fterminfo%2Fparser%2Fcompiled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Fterminfo%2Fparser%2Fcompiled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fterminfo%2Fparser%2Fcompiled.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -313,7 +313,6 @@ pub fn parse(file: @Reader, longnames: bool) -> Result<~TermInfo, ~str> {\n #[cfg(test)]\n mod test {\n     use super::*;\n-    use p = core::path::Path;\n \n     #[test]\n     fn test_veclens() {"}, {"sha": "e37ce7c71ef79c97b47fb6a523ddef4916e559ef", "filename": "src/libextra/treemap.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibextra%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftreemap.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -710,7 +710,6 @@ mod test_treemap {\n \n     use core::rand::RngUtil;\n     use core::rand;\n-    use core::str;\n     use core::vec;\n \n     #[test]"}, {"sha": "33f578d335b0e540d34b2171b715e53fc9afab5e", "filename": "src/librustc/back/rpath.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibrustc%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibrustc%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Frpath.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -199,9 +199,6 @@ pub fn minimize_rpaths(rpaths: &[Path]) -> ~[Path] {\n mod test {\n     use core::prelude::*;\n \n-    use core::os;\n-    use core::str;\n-\n     // FIXME(#2119): the outer attribute should be #[cfg(unix, test)], then\n     // these redundant #[cfg(test)] blocks can be removed\n     #[cfg(test)]"}, {"sha": "925b1f506d75d31e675fd692615052ed426baac7", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -15,7 +15,6 @@ use cstore = metadata::cstore;\n use driver::session::Session;\n use e = metadata::encoder;\n use metadata::decoder;\n-use metadata::encoder;\n use metadata::tydecode;\n use metadata::tydecode::{DefIdSource, NominalType, TypeWithId, TypeParameter};\n use metadata::tyencode;"}, {"sha": "09db79037b386bced9b5f6c202306bcad13609d3", "filename": "src/librustc/middle/trans/adt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -47,7 +47,6 @@\n use core::container::Map;\n use core::libc::c_ulonglong;\n use core::option::{Option, Some, None};\n-use core::str;\n use core::vec;\n \n use lib::llvm::{ValueRef, TypeRef, True, IntEQ, IntNE};"}, {"sha": "ffc54bbed3551fc9f0bee4974f3017ba043fe125", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -71,7 +71,6 @@ use core::libc::c_uint;\n use core::str;\n use core::uint;\n use core::vec;\n-use core::local_data;\n use extra::time;\n use syntax::ast::ident;\n use syntax::ast_map::{path, path_elt_to_str, path_name};\n@@ -3120,4 +3119,3 @@ pub fn trans_crate(sess: session::Session,\n \n     return (llcx, llmod, link_meta);\n }\n-"}, {"sha": "dbaa5e8532cb3b91a9bbe5896a1e5cf0a96e238f", "filename": "src/librustdoc/desc_to_brief_pass.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -24,7 +24,6 @@ use fold::Fold;\n use fold;\n use pass::Pass;\n \n-use core::str;\n use core::util;\n \n pub fn mk_pass() -> Pass {"}, {"sha": "075b64a674cbbaffbdef0a8ef9151616952a87fd", "filename": "src/librustdoc/markdown_pass.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibrustdoc%2Fmarkdown_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibrustdoc%2Fmarkdown_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown_pass.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -22,7 +22,6 @@ use markdown_writer::WriterFactory;\n use pass::Pass;\n use sort_pass;\n \n-use core::iterator::IteratorUtil;\n use core::cell::Cell;\n use core::str;\n use core::vec;"}, {"sha": "6db582a60e98baac7f9da61db15717b563918cd9", "filename": "src/librustdoc/text_pass.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibrustdoc%2Ftext_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibrustdoc%2Ftext_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftext_pass.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -149,8 +149,6 @@ mod test {\n     use sectionalize_pass;\n     use text_pass::mk_pass;\n \n-    use core::str;\n-\n     fn mk_doc(source: ~str) -> doc::Doc {\n         do astsrv::from_str(copy source) |srv| {\n             let doc = extract::from_srv(srv.clone(), ~\"\");"}, {"sha": "9c4e8f083584c542adcaa501d18dbb3f1bfc7f6e", "filename": "src/libstd/path.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -947,7 +947,6 @@ pub mod windows {\n mod tests {\n     use option::{None, Some};\n     use path::{PosixPath, WindowsPath, windows};\n-    use str;\n \n     #[test]\n     fn test_double_slash_collapsing() {"}, {"sha": "44e480dc7df2d1e3877f643216566b3169b695d2", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -39,8 +39,6 @@ pub mod rt {\n     use parse;\n     use print::pprust;\n \n-    use core::str;\n-\n     pub use ast::*;\n     pub use parse::token::*;\n     pub use parse::new_parser_from_tts;"}, {"sha": "c1bf979cd319bda56ee393db234d1abd87dd645c", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcff95ac51f5533866d307a85eedb062a1a05da/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=bbcff95ac51f5533866d307a85eedb062a1a05da", "patch": "@@ -969,7 +969,7 @@ mod test {\n     // change every identifier to \"zz\"\n     pub fn to_zz() -> @fn(ast::ident)->ast::ident {\n         let zz_id = token::str_to_ident(\"zz\");\n-        |id| {zz_id}\n+        |_id| {zz_id}\n     }\n \n     // maybe add to expand.rs..."}]}