{"sha": "dc393b2eccedb985cdba5d451b2df41ef422cd78", "node_id": "C_kwDOAAsO6NoAKGRjMzkzYjJlY2NlZGI5ODVjZGJhNWQ0NTFiMmRmNDFlZjQyMmNkNzg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-20T22:37:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-20T22:37:33Z"}, "message": "Rollup merge of #93061 - estebank:macr-suggestion, r=cjgillot\n\nOnly suggest adding `!` to expressions that can be macro invocation", "tree": {"sha": "f36da9702e1fe1f8cb2dd3133a5b073a5e7dadb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f36da9702e1fe1f8cb2dd3133a5b073a5e7dadb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc393b2eccedb985cdba5d451b2df41ef422cd78", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6eQtCRBK7hj4Ov3rIwAALq8IACmHxdSqaxh/S1l9Hh41Xu3f\nLSE6vgnwGJ5Q6x49TcojgoEFAK1t9Jbxkg/tgidtU8LlUbmHgYtfeV3VqiAR8V1N\nFgj80SwsLi1uhP8BnWhjZPHxJ15OT+187sK7NL/55DNVzPkROoI/ctrYeOspB5s6\nGzDi61f4ijZWZQwoeGKumDhiX7bNxyK+brAkaFxVaYRF67/zitWXQvVrhWqnfb/b\nRcFbkaB7rHSs3+Nao93IzuB0UAjay3waMKeTnjJ+4TE1Ap1aeCVdYwzsJHeH3Egf\nd8LYXpRwCHdrkDgG3pPmwKEgolMnCk1HakQOUgHjADttiu2CWSOBGAiggX32t1g=\n=EjMX\n-----END PGP SIGNATURE-----\n", "payload": "tree f36da9702e1fe1f8cb2dd3133a5b073a5e7dadb8\nparent aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501\nparent 017747fa5afb1e5396582498303c8437792966d7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642718253 +0100\ncommitter GitHub <noreply@github.com> 1642718253 +0100\n\nRollup merge of #93061 - estebank:macr-suggestion, r=cjgillot\n\nOnly suggest adding `!` to expressions that can be macro invocation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc393b2eccedb985cdba5d451b2df41ef422cd78", "html_url": "https://github.com/rust-lang/rust/commit/dc393b2eccedb985cdba5d451b2df41ef422cd78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc393b2eccedb985cdba5d451b2df41ef422cd78/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501", "html_url": "https://github.com/rust-lang/rust/commit/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501"}, {"sha": "017747fa5afb1e5396582498303c8437792966d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/017747fa5afb1e5396582498303c8437792966d7", "html_url": "https://github.com/rust-lang/rust/commit/017747fa5afb1e5396582498303c8437792966d7"}], "stats": {"total": 106, "additions": 82, "deletions": 24}, "files": [{"sha": "2c678e71ae179de0defee914d8f3e454bd9f319a", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dc393b2eccedb985cdba5d451b2df41ef422cd78/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc393b2eccedb985cdba5d451b2df41ef422cd78/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=dc393b2eccedb985cdba5d451b2df41ef422cd78", "patch": "@@ -2517,6 +2517,10 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                 self.visit_expr(elem);\n                 self.resolve_anon_const(ct, IsRepeatExpr::Yes);\n             }\n+            ExprKind::Index(ref elem, ref idx) => {\n+                self.resolve_expr(elem, Some(expr));\n+                self.visit_expr(idx);\n+            }\n             _ => {\n                 visit::walk_expr(self, expr);\n             }"}, {"sha": "7b4fe6f0e07b380d71788be7c3db469284bb9219", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/dc393b2eccedb985cdba5d451b2df41ef422cd78/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc393b2eccedb985cdba5d451b2df41ef422cd78/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=dc393b2eccedb985cdba5d451b2df41ef422cd78", "patch": "@@ -970,7 +970,13 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n         };\n \n         match (res, source) {\n-            (Res::Def(DefKind::Macro(MacroKind::Bang), _), _) => {\n+            (\n+                Res::Def(DefKind::Macro(MacroKind::Bang), _),\n+                PathSource::Expr(Some(Expr {\n+                    kind: ExprKind::Index(..) | ExprKind::Call(..), ..\n+                }))\n+                | PathSource::Struct,\n+            ) => {\n                 err.span_label(span, fallback_label);\n                 err.span_suggestion_verbose(\n                     span.shrink_to_hi(),\n@@ -982,6 +988,9 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                     err.note(\"if you want the `try` keyword, you need Rust 2018 or later\");\n                 }\n             }\n+            (Res::Def(DefKind::Macro(MacroKind::Bang), _), _) => {\n+                err.span_label(span, fallback_label);\n+            }\n             (Res::Def(DefKind::TyAlias, def_id), PathSource::Trait(_)) => {\n                 err.span_label(span, \"type aliases cannot be used as traits\");\n                 if self.r.session.is_nightly_build() {"}, {"sha": "17d05dd09636cf290fba900c4010137c6598fc2f", "filename": "src/test/ui/hygiene/rustc-macro-transparency.stderr", "status": "modified", "additions": 8, "deletions": 20, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/dc393b2eccedb985cdba5d451b2df41ef422cd78/src%2Ftest%2Fui%2Fhygiene%2Frustc-macro-transparency.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc393b2eccedb985cdba5d451b2df41ef422cd78/src%2Ftest%2Fui%2Fhygiene%2Frustc-macro-transparency.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Frustc-macro-transparency.stderr?ref=dc393b2eccedb985cdba5d451b2df41ef422cd78", "patch": "@@ -11,16 +11,10 @@ LL |     struct SemiTransparent;\n    |     ----------------------- similarly named unit struct `SemiTransparent` defined here\n ...\n LL |     semitransparent;\n-   |     ^^^^^^^^^^^^^^^ not a value\n-   |\n-help: use `!` to invoke the macro\n-   |\n-LL |     semitransparent!;\n-   |                    +\n-help: a unit struct with a similar name exists\n-   |\n-LL |     SemiTransparent;\n-   |     ~~~~~~~~~~~~~~~\n+   |     ^^^^^^^^^^^^^^^\n+   |     |\n+   |     not a value\n+   |     help: a unit struct with a similar name exists: `SemiTransparent`\n \n error[E0423]: expected value, found macro `opaque`\n   --> $DIR/rustc-macro-transparency.rs:30:5\n@@ -29,16 +23,10 @@ LL |     struct Opaque;\n    |     -------------- similarly named unit struct `Opaque` defined here\n ...\n LL |     opaque;\n-   |     ^^^^^^ not a value\n-   |\n-help: use `!` to invoke the macro\n-   |\n-LL |     opaque!;\n-   |           +\n-help: a unit struct with a similar name exists\n-   |\n-LL |     Opaque;\n-   |     ~~~~~~\n+   |     ^^^^^^\n+   |     |\n+   |     not a value\n+   |     help: a unit struct with a similar name exists (notice the capitalization): `Opaque`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "54e01608498f820e583e718920d9f700d927e13e", "filename": "src/test/ui/resolve/resolve-hint-macro.fixed", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/dc393b2eccedb985cdba5d451b2df41ef422cd78/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/dc393b2eccedb985cdba5d451b2df41ef422cd78/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.fixed?ref=dc393b2eccedb985cdba5d451b2df41ef422cd78", "patch": "@@ -0,0 +1,11 @@\n+// run-rustfix\n+fn main() {\n+    assert_eq!(1, 1);\n+    //~^ ERROR expected function, found macro `assert_eq`\n+    assert_eq! { 1, 1 };\n+    //~^ ERROR expected struct, variant or union type, found macro `assert_eq`\n+    //~| ERROR expected identifier, found `1`\n+    //~| ERROR expected identifier, found `1`\n+    assert![true];\n+    //~^ ERROR expected value, found macro `assert`\n+}"}, {"sha": "f16e8c0755384fa50fe26e143364ab10fc23a4a2", "filename": "src/test/ui/resolve/resolve-hint-macro.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dc393b2eccedb985cdba5d451b2df41ef422cd78/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc393b2eccedb985cdba5d451b2df41ef422cd78/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.rs?ref=dc393b2eccedb985cdba5d451b2df41ef422cd78", "patch": "@@ -1,4 +1,11 @@\n+// run-rustfix\n fn main() {\n     assert_eq(1, 1);\n     //~^ ERROR expected function, found macro `assert_eq`\n+    assert_eq { 1, 1 };\n+    //~^ ERROR expected struct, variant or union type, found macro `assert_eq`\n+    //~| ERROR expected identifier, found `1`\n+    //~| ERROR expected identifier, found `1`\n+    assert[true];\n+    //~^ ERROR expected value, found macro `assert`\n }"}, {"sha": "bc69ddd8ffea2a917760947de49b2fea67f3f441", "filename": "src/test/ui/resolve/resolve-hint-macro.stderr", "status": "modified", "additions": 42, "deletions": 3, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/dc393b2eccedb985cdba5d451b2df41ef422cd78/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc393b2eccedb985cdba5d451b2df41ef422cd78/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr?ref=dc393b2eccedb985cdba5d451b2df41ef422cd78", "patch": "@@ -1,5 +1,21 @@\n+error: expected identifier, found `1`\n+  --> $DIR/resolve-hint-macro.rs:5:17\n+   |\n+LL |     assert_eq { 1, 1 };\n+   |     ---------   ^ expected identifier\n+   |     |\n+   |     while parsing this struct\n+\n+error: expected identifier, found `1`\n+  --> $DIR/resolve-hint-macro.rs:5:20\n+   |\n+LL |     assert_eq { 1, 1 };\n+   |     ---------      ^ expected identifier\n+   |     |\n+   |     while parsing this struct\n+\n error[E0423]: expected function, found macro `assert_eq`\n-  --> $DIR/resolve-hint-macro.rs:2:5\n+  --> $DIR/resolve-hint-macro.rs:3:5\n    |\n LL |     assert_eq(1, 1);\n    |     ^^^^^^^^^ not a function\n@@ -9,6 +25,29 @@ help: use `!` to invoke the macro\n LL |     assert_eq!(1, 1);\n    |              +\n \n-error: aborting due to previous error\n+error[E0574]: expected struct, variant or union type, found macro `assert_eq`\n+  --> $DIR/resolve-hint-macro.rs:5:5\n+   |\n+LL |     assert_eq { 1, 1 };\n+   |     ^^^^^^^^^ not a struct, variant or union type\n+   |\n+help: use `!` to invoke the macro\n+   |\n+LL |     assert_eq! { 1, 1 };\n+   |              +\n+\n+error[E0423]: expected value, found macro `assert`\n+  --> $DIR/resolve-hint-macro.rs:9:5\n+   |\n+LL |     assert[true];\n+   |     ^^^^^^ not a value\n+   |\n+help: use `!` to invoke the macro\n+   |\n+LL |     assert![true];\n+   |           +\n+\n+error: aborting due to 5 previous errors\n \n-For more information about this error, try `rustc --explain E0423`.\n+Some errors have detailed explanations: E0423, E0574.\n+For more information about an error, try `rustc --explain E0423`."}]}