{"sha": "abb9b60f0965fe1cdc412369219d100022f39273", "node_id": "C_kwDOAAsO6NoAKGFiYjliNjBmMDk2NWZlMWNkYzQxMjM2OTIxOWQxMDAwMjJmMzkyNzM", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-06-18T17:55:24Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-06-19T12:56:31Z"}, "message": "Fix \"Remove src_files and remove_file\"", "tree": {"sha": "dea3d60206ffe0b20b5d8226675a5f585242cf47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dea3d60206ffe0b20b5d8226675a5f585242cf47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abb9b60f0965fe1cdc412369219d100022f39273", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abb9b60f0965fe1cdc412369219d100022f39273", "html_url": "https://github.com/rust-lang/rust/commit/abb9b60f0965fe1cdc412369219d100022f39273", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abb9b60f0965fe1cdc412369219d100022f39273/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc0c753c2d876b981cbd646b7eb9336844fa08ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc0c753c2d876b981cbd646b7eb9336844fa08ae", "html_url": "https://github.com/rust-lang/rust/commit/fc0c753c2d876b981cbd646b7eb9336844fa08ae"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "e9b074e183796404b8f44c4f51f5dc242eb0e809", "filename": "src/archive.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abb9b60f0965fe1cdc412369219d100022f39273/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abb9b60f0965fe1cdc412369219d100022f39273/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=abb9b60f0965fe1cdc412369219d100022f39273", "patch": "@@ -92,7 +92,7 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n         Ok(())\n     }\n \n-    fn build(mut self) {\n+    fn build(mut self) -> bool {\n         enum BuilderKind {\n             Bsd(ar::Builder<File>),\n             Gnu(ar::GnuBuilder<File>),\n@@ -191,6 +191,8 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n             )\n         };\n \n+        let any_members = !entries.is_empty();\n+\n         // Add all files\n         for (entry_name, data) in entries.into_iter() {\n             let header = ar::Header::new(entry_name, data.len() as u64);\n@@ -216,6 +218,8 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n                 self.sess.fatal(&format!(\"Ranlib exited with code {:?}\", status.code()));\n             }\n         }\n+\n+        any_members\n     }\n \n     fn inject_dll_import_lib("}]}