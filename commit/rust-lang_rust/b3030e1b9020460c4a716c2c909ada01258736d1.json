{"sha": "b3030e1b9020460c4a716c2c909ada01258736d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMDMwZTFiOTAyMDQ2MGM0YTcxNmMyYzkwOWFkYTAxMjU4NzM2ZDE=", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2020-04-15T19:31:40Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2020-04-15T19:31:40Z"}, "message": "rename field", "tree": {"sha": "10d43a8c7038e0ee59caa4929454c4869b853c02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10d43a8c7038e0ee59caa4929454c4869b853c02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3030e1b9020460c4a716c2c909ada01258736d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3030e1b9020460c4a716c2c909ada01258736d1", "html_url": "https://github.com/rust-lang/rust/commit/b3030e1b9020460c4a716c2c909ada01258736d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3030e1b9020460c4a716c2c909ada01258736d1/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "625011081b9c0e53878ba0c36c225998f564f55d", "url": "https://api.github.com/repos/rust-lang/rust/commits/625011081b9c0e53878ba0c36c225998f564f55d", "html_url": "https://github.com/rust-lang/rust/commit/625011081b9c0e53878ba0c36c225998f564f55d"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "d82b0a3cf6b8cd199e79688a59c058a0bb097e6e", "filename": "src/main.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b3030e1b9020460c4a716c2c909ada01258736d1/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3030e1b9020460c4a716c2c909ada01258736d1/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=b3030e1b9020460c4a716c2c909ada01258736d1", "patch": "@@ -58,7 +58,7 @@ pub fn main() {\n \n struct ClippyCmd {\n     unstable_options: bool,\n-    cmd: &'static str,\n+    cargo_subcommand: &'static str,\n     args: Vec<String>,\n     clippy_args: String\n }\n@@ -69,14 +69,14 @@ impl ClippyCmd\n     where\n         I: Iterator<Item = String>,\n     {\n-        let mut cmd = \"check\";\n+        let mut cargo_subcommand = \"check\";\n         let mut unstable_options = false;\n         let mut args = vec![];\n \n         for arg in old_args.by_ref() {\n             match arg.as_str() {\n                 \"--fix\" => {\n-                    cmd = \"fix\";\n+                    cargo_subcommand = \"fix\";\n                     continue;\n                 }\n                 \"--\" => break,\n@@ -88,7 +88,7 @@ impl ClippyCmd\n             args.push(arg);\n         }\n \n-        if cmd == \"fix\" && !unstable_options {\n+        if cargo_subcommand == \"fix\" && !unstable_options {\n             panic!(\"Usage of `--fix` requires `-Z unstable-options`\");\n         }\n \n@@ -105,7 +105,7 @@ impl ClippyCmd\n \n         ClippyCmd {\n             unstable_options,\n-            cmd,\n+            cargo_subcommand,\n             args,\n             clippy_args,\n         }\n@@ -153,7 +153,7 @@ impl ClippyCmd\n         cmd.env(self.path_env(), self.path())\n             .envs(ClippyCmd::target_dir())\n             .env(\"CLIPPY_ARGS\", self.clippy_args)\n-            .arg(self.cmd)\n+            .arg(self.cargo_subcommand)\n             .args(&self.args);\n \n         cmd\n@@ -197,7 +197,7 @@ mod tests {\n     fn fix_unstable() {\n         let args = \"cargo clippy --fix -Zunstable-options\".split_whitespace().map(ToString::to_string);\n         let cmd = ClippyCmd::new(args);\n-        assert_eq!(\"fix\", cmd.cmd);\n+        assert_eq!(\"fix\", cmd.cargo_subcommand);\n         assert_eq!(\"RUSTC_WORKSPACE_WRAPPER\", cmd.path_env());\n         assert!(cmd.args.iter().find(|arg| arg.ends_with(\"unstable-options\")).is_some());\n     }\n@@ -206,15 +206,15 @@ mod tests {\n     fn check() {\n         let args = \"cargo clippy\".split_whitespace().map(ToString::to_string);\n         let cmd = ClippyCmd::new(args);\n-        assert_eq!(\"check\", cmd.cmd);\n+        assert_eq!(\"check\", cmd.cargo_subcommand);\n         assert_eq!(\"RUSTC_WRAPPER\", cmd.path_env());\n     }\n \n     #[test]\n     fn check_unstable() {\n         let args = \"cargo clippy -Zunstable-options\".split_whitespace().map(ToString::to_string);\n         let cmd = ClippyCmd::new(args);\n-        assert_eq!(\"check\", cmd.cmd);\n+        assert_eq!(\"check\", cmd.cargo_subcommand);\n         assert_eq!(\"RUSTC_WORKSPACE_WRAPPER\", cmd.path_env());\n     }\n }"}]}