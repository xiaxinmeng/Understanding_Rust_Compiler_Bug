{"sha": "4897820a16b162ff19f8d8eaf6515732caaf0a35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4OTc4MjBhMTZiMTYyZmYxOWY4ZDhlYWY2NTE1NzMyY2FhZjBhMzU=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-07-30T22:43:23Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-07-30T23:00:14Z"}, "message": "Remove unused arguments", "tree": {"sha": "0d1861cd6dd59ae90a1ee6acb4b36374b8c35b0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d1861cd6dd59ae90a1ee6acb4b36374b8c35b0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4897820a16b162ff19f8d8eaf6515732caaf0a35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4897820a16b162ff19f8d8eaf6515732caaf0a35", "html_url": "https://github.com/rust-lang/rust/commit/4897820a16b162ff19f8d8eaf6515732caaf0a35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4897820a16b162ff19f8d8eaf6515732caaf0a35/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54628c8ea844956f3f4f416b82067c634eb09f7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/54628c8ea844956f3f4f416b82067c634eb09f7b", "html_url": "https://github.com/rust-lang/rust/commit/54628c8ea844956f3f4f416b82067c634eb09f7b"}], "stats": {"total": 25, "additions": 7, "deletions": 18}, "files": [{"sha": "546553ac2455de6dd5ad1e038b6c2a3fa8fb59e2", "filename": "src/librustc_typeck/check/compare_method.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4897820a16b162ff19f8d8eaf6515732caaf0a35/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4897820a16b162ff19f8d8eaf6515732caaf0a35/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs?ref=4897820a16b162ff19f8d8eaf6515732caaf0a35", "patch": "@@ -68,9 +68,7 @@ pub fn compare_impl_method<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n     if let Err(ErrorReported) = compare_synthetic_generics(tcx,\n                                                            impl_m,\n-                                                           impl_m_span,\n-                                                           trait_m,\n-                                                           trait_item_span) {\n+                                                           trait_m) {\n         return;\n     }\n \n@@ -729,14 +727,11 @@ fn compare_number_of_method_arguments<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n fn compare_synthetic_generics<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                                         impl_m: &ty::AssociatedItem,\n-                                        _impl_m_span: Span, // FIXME necessary?\n-                                        trait_m: &ty::AssociatedItem,\n-                                        _trait_item_span: Option<Span>) // FIXME necessary?\n+                                        trait_m: &ty::AssociatedItem)\n                                         -> Result<(), ErrorReported> {\n     // FIXME(chrisvittal) Clean up this function, list of FIXME items:\n     //     1. Better messages for the span labels\n     //     2. Explanation as to what is going on\n-    //     3. Correct the function signature for what we actually use\n     // If we get here, we already have the same number of generics, so the zip will\n     // be okay.\n     let mut error_found = false;"}, {"sha": "ba65d0606b37267ee00a4f837b1b420628b707e6", "filename": "src/librustc_typeck/coherence/builtin.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4897820a16b162ff19f8d8eaf6515732caaf0a35/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4897820a16b162ff19f8d8eaf6515732caaf0a35/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs?ref=4897820a16b162ff19f8d8eaf6515732caaf0a35", "patch": "@@ -41,21 +41,19 @@ struct Checker<'a, 'tcx: 'a> {\n \n impl<'a, 'tcx> Checker<'a, 'tcx> {\n     fn check<F>(&self, trait_def_id: Option<DefId>, mut f: F) -> &Self\n-        where F: FnMut(TyCtxt<'a, 'tcx, 'tcx>, DefId, DefId)\n+        where F: FnMut(TyCtxt<'a, 'tcx, 'tcx>, DefId)\n     {\n         if Some(self.trait_def_id) == trait_def_id {\n             for &impl_id in self.tcx.hir.trait_impls(self.trait_def_id) {\n                 let impl_def_id = self.tcx.hir.local_def_id(impl_id);\n-                f(self.tcx, self.trait_def_id, impl_def_id);\n+                f(self.tcx, impl_def_id);\n             }\n         }\n         self\n     }\n }\n \n-fn visit_implementation_of_drop<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                                          _drop_did: DefId,\n-                                          impl_did: DefId) {\n+fn visit_implementation_of_drop<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, impl_did: DefId) {\n     match tcx.type_of(impl_did).sty {\n         ty::TyAdt(..) => {}\n         _ => {\n@@ -87,9 +85,7 @@ fn visit_implementation_of_drop<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     }\n }\n \n-fn visit_implementation_of_copy<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                                          _copy_did: DefId,\n-                                          impl_did: DefId) {\n+fn visit_implementation_of_copy<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, impl_did: DefId) {\n     debug!(\"visit_implementation_of_copy: impl_did={:?}\", impl_did);\n \n     let impl_node_id = if let Some(n) = tcx.hir.as_local_node_id(impl_did) {\n@@ -157,9 +153,7 @@ fn visit_implementation_of_copy<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     }\n }\n \n-fn visit_implementation_of_coerce_unsized<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                                                    _: DefId,\n-                                                    impl_did: DefId) {\n+fn visit_implementation_of_coerce_unsized<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, impl_did: DefId) {\n     debug!(\"visit_implementation_of_coerce_unsized: impl_did={:?}\",\n            impl_did);\n "}]}