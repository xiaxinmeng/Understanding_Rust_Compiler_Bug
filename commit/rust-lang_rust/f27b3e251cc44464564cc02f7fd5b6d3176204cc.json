{"sha": "f27b3e251cc44464564cc02f7fd5b6d3176204cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyN2IzZTI1MWNjNDQ0NjQ1NjRjYzAyZjdmZDViNmQzMTc2MjA0Y2M=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-11T23:29:50Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-11T23:29:50Z"}, "message": "PR #22012 followup: clean up vtable::check_object_cast by reusing `fresh_ty`\n\n(hat tip to nikomatsakis who was the one who pointed out this\nsimplification to the logic.)", "tree": {"sha": "202e835c56daad8018a181927fd953e066e1458d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/202e835c56daad8018a181927fd953e066e1458d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f27b3e251cc44464564cc02f7fd5b6d3176204cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f27b3e251cc44464564cc02f7fd5b6d3176204cc", "html_url": "https://github.com/rust-lang/rust/commit/f27b3e251cc44464564cc02f7fd5b6d3176204cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f27b3e251cc44464564cc02f7fd5b6d3176204cc/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1500df8934431dd7842827209528211ae53ded12", "url": "https://api.github.com/repos/rust-lang/rust/commits/1500df8934431dd7842827209528211ae53ded12", "html_url": "https://github.com/rust-lang/rust/commit/1500df8934431dd7842827209528211ae53ded12"}], "stats": {"total": 13, "additions": 2, "deletions": 11}, "files": [{"sha": "2e7eff68bd509cbda58695fac27b13b0da799dfe", "filename": "src/librustc_typeck/check/vtable.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f27b3e251cc44464564cc02f7fd5b6d3176204cc/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27b3e251cc44464564cc02f7fd5b6d3176204cc/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs?ref=f27b3e251cc44464564cc02f7fd5b6d3176204cc", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use check::{FnCtxt, structurally_resolved_type};\n+use check::{FnCtxt};\n use check::demand;\n use middle::traits::{self, ObjectSafetyViolation, MethodViolationCode};\n use middle::traits::{Obligation, ObligationCause};\n@@ -66,20 +66,11 @@ pub fn check_object_cast<'a, 'tcx>(fcx: &FnCtxt<'a, 'tcx>,\n     demand::suptype(fcx, source_expr.span, source_expected_ty, source_ty);\n \n     debug!(\"check_object_cast postunify source_ty={}\", source_ty.repr(tcx));\n-    let source_ty = structurally_resolved_type(fcx, source_expr.span, source_ty);\n-    debug!(\"check_object_cast resolveto source_ty={}\", source_ty.repr(tcx));\n \n     let object_trait = object_trait(&object_trait_ty);\n \n-    let referent_ty = match source_ty.sty {\n-        ty::ty_uniq(ty) => ty,\n-        ty::ty_rptr(_, ty::mt { ty, mutbl: _ }) => ty,\n-        _ => fcx.tcx().sess.span_bug(source_expr.span,\n-                                     \"expected appropriate reference type\"),\n-    };\n-\n     // Ensure that if Ptr<T> is cast to Ptr<Trait>, then T : Trait.\n-    push_cast_obligation(fcx, cast_expr, object_trait, referent_ty);\n+    push_cast_obligation(fcx, cast_expr, object_trait, fresh_ty);\n     check_object_safety(tcx, object_trait, source_expr.span);\n \n     fn object_trait<'a, 'tcx>(t: &'a Ty<'tcx>) -> &'a ty::TyTrait<'tcx> {"}]}