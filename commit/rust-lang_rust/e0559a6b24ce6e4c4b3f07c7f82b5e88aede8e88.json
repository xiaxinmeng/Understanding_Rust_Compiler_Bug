{"sha": "e0559a6b24ce6e4c4b3f07c7f82b5e88aede8e88", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNTU5YTZiMjRjZTZlNGM0YjNmMDdjN2Y4MmI1ZTg4YWVkZThlODg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-08T17:56:49Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-08T17:56:49Z"}, "message": "typos", "tree": {"sha": "48976eb19e3cf25e46b4bbfb557ccafc910fc981", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48976eb19e3cf25e46b4bbfb557ccafc910fc981"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0559a6b24ce6e4c4b3f07c7f82b5e88aede8e88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0559a6b24ce6e4c4b3f07c7f82b5e88aede8e88", "html_url": "https://github.com/rust-lang/rust/commit/e0559a6b24ce6e4c4b3f07c7f82b5e88aede8e88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0559a6b24ce6e4c4b3f07c7f82b5e88aede8e88/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e1596d8c9f8e2eb586d3aa8dcdafa8375ecf8ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e1596d8c9f8e2eb586d3aa8dcdafa8375ecf8ec", "html_url": "https://github.com/rust-lang/rust/commit/3e1596d8c9f8e2eb586d3aa8dcdafa8375ecf8ec"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e358b98911a1e24ff35101eeca68eb2366a51269", "filename": "src/eval_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0559a6b24ce6e4c4b3f07c7f82b5e88aede8e88/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0559a6b24ce6e4c4b3f07c7f82b5e88aede8e88/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=e0559a6b24ce6e4c4b3f07c7f82b5e88aede8e88", "patch": "@@ -455,7 +455,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 if self.intrinsic_overflowing(bin_op, left, right, dest, dest_ty)? {\n                     // There was an overflow in an unchecked binop.  Right now, we consider this an error and bail out.\n                     // The rationale is that the reason rustc emits unchecked binops in release mode (vs. the checked binops\n-                    // it emits in debug mode) is performance, but it doesn't cust us any performance in miri.\n+                    // it emits in debug mode) is performance, but it doesn't cost us any performance in miri.\n                     // If, however, the compiler ever starts transforming unchecked intrinsics into unchecked binops,\n                     // we have to go back to just ignoring the overflow here.\n                     return Err(EvalError::OverflowingMath);"}, {"sha": "f106f9d088c00d73741237857998e567aaa08f03", "filename": "src/memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0559a6b24ce6e4c4b3f07c7f82b5e88aede8e88/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0559a6b24ce6e4c4b3f07c7f82b5e88aede8e88/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=e0559a6b24ce6e4c4b3f07c7f82b5e88aede8e88", "patch": "@@ -166,7 +166,7 @@ pub struct Memory<'a, 'tcx> {\n     /// We mark memory as \"packed\" or \"unaligned\" for a single statement, and clear the marking\n     /// afterwards. In the case where no packed structs are present, it's just a single emptyness\n     /// check of a set instead of heavily influencing all memory access code as other solutions\n-    /// would.  This is simpler than the alternative of passing a \"packed\" parameter to every\n+    /// would. This is simpler than the alternative of passing a \"packed\" parameter to every\n     /// load/store method.\n     ///\n     /// One disadvantage of this solution is the fact that you can cast a pointer to a packed"}]}