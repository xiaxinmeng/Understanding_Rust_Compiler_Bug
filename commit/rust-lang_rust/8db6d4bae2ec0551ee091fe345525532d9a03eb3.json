{"sha": "8db6d4bae2ec0551ee091fe345525532d9a03eb3", "node_id": "C_kwDOAAsO6NoAKDhkYjZkNGJhZTJlYzA1NTFlZTA5MWZlMzQ1NTI1NTMyZDlhMDNlYjM", "commit": {"author": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2022-06-08T07:23:11Z"}, "committer": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2022-06-08T07:23:11Z"}, "message": "optimize `superset` method of `IntervalSet`", "tree": {"sha": "dd72e2bb2d8ed15fbfaa7f41ff00e82b25f015d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd72e2bb2d8ed15fbfaa7f41ff00e82b25f015d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8db6d4bae2ec0551ee091fe345525532d9a03eb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8db6d4bae2ec0551ee091fe345525532d9a03eb3", "html_url": "https://github.com/rust-lang/rust/commit/8db6d4bae2ec0551ee091fe345525532d9a03eb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8db6d4bae2ec0551ee091fe345525532d9a03eb3/comments", "author": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50b00252aeb77b10db04d65dc9e12ce758def4b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/50b00252aeb77b10db04d65dc9e12ce758def4b5", "html_url": "https://github.com/rust-lang/rust/commit/50b00252aeb77b10db04d65dc9e12ce758def4b5"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "e2617c5b781af41130c753542686759ae2366332", "filename": "compiler/rustc_index/src/interval.rs", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8db6d4bae2ec0551ee091fe345525532d9a03eb3/compiler%2Frustc_index%2Fsrc%2Finterval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8db6d4bae2ec0551ee091fe345525532d9a03eb3/compiler%2Frustc_index%2Fsrc%2Finterval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Finterval.rs?ref=8db6d4bae2ec0551ee091fe345525532d9a03eb3", "patch": "@@ -1,7 +1,7 @@\n use std::iter::Step;\n use std::marker::PhantomData;\n-use std::ops::Bound;\n use std::ops::RangeBounds;\n+use std::ops::{Bound, Range};\n \n use crate::vec::Idx;\n use crate::vec::IndexVec;\n@@ -145,9 +145,26 @@ impl<I: Idx> IntervalSet<I> {\n     where\n         I: Step,\n     {\n-        // FIXME: Performance here is probably not great. We will be doing a lot\n-        // of pointless tree traversals.\n-        other.iter().all(|elem| self.contains(elem))\n+        let mut sup_iter = self.iter_intervals();\n+        let mut current = None;\n+        let contains = |sup: Range<I>, sub: Range<I>, current: &mut Option<Range<I>>| {\n+            if sup.end < sub.start {\n+                // if `sup.end == sub.start`, the next sup doesn't contain `sub.start`\n+                None // continue to the next sup\n+            } else if sup.end >= sub.end && sup.start <= sub.start {\n+                *current = Some(sup); // save the current sup\n+                Some(true)\n+            } else {\n+                Some(false)\n+            }\n+        };\n+        other.iter_intervals().all(|sub| {\n+            current\n+                .take()\n+                .and_then(|sup| contains(sup, sub.clone(), &mut current))\n+                .or_else(|| sup_iter.find_map(|sup| contains(sup, sub.clone(), &mut current)))\n+                .unwrap_or(false)\n+        })\n     }\n \n     pub fn is_empty(&self) -> bool {"}]}