{"sha": "d35fff89944f583f4f96b384e3f5d075503e0d36", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNWZmZjg5OTQ0ZjU4M2Y0Zjk2YjM4NGUzZjVkMDc1NTAzZTBkMzY=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-12-14T15:55:02Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-12-16T09:23:28Z"}, "message": "debuginfo: Added some documentation of source location management.", "tree": {"sha": "347f1ace6365ef2d6ab10eabe23406d64e682047", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/347f1ace6365ef2d6ab10eabe23406d64e682047"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d35fff89944f583f4f96b384e3f5d075503e0d36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d35fff89944f583f4f96b384e3f5d075503e0d36", "html_url": "https://github.com/rust-lang/rust/commit/d35fff89944f583f4f96b384e3f5d075503e0d36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d35fff89944f583f4f96b384e3f5d075503e0d36/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89b47d5557b52e0da7b95e70ed61f76db152664b", "url": "https://api.github.com/repos/rust-lang/rust/commits/89b47d5557b52e0da7b95e70ed61f76db152664b", "html_url": "https://github.com/rust-lang/rust/commit/89b47d5557b52e0da7b95e70ed61f76db152664b"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "2a1aada6d24be4304229b0ce1900dc58a609eeb0", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/d35fff89944f583f4f96b384e3f5d075503e0d36/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d35fff89944f583f4f96b384e3f5d075503e0d36/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=d35fff89944f583f4f96b384e3f5d075503e0d36", "patch": "@@ -85,6 +85,43 @@ continuation, storing all state needed to continue traversal at the type members\n been registered with the cache. (This implementation approach might be a tad over-engineered and\n may change in the future)\n \n+\n+## Source Locations and Line Information\n+In addition to data type descriptions the debugging information must also allow to map machine code\n+locations back to source code locations in order to be useful. This functionality is also handled in\n+this module. The following functions allow to control source mappings:\n+\n++ set_source_location()\n++ clear_source_location()\n++ start_emitting_source_locations()\n+\n+`set_source_location()` allows to set the current source location. All IR instructions created after\n+a call to this function will be linked to the given source location, until another location is\n+specified with `set_source_location()` or the source location is cleared with\n+`clear_source_location()`. In the later case, subsequent IR instruction will not be linked to any\n+source location. As you can see, this is a stateful API (mimicking the one in LLVM), so be careful\n+with source locations set by previous calls. It's probably best to not rely on any specific state\n+being present at a given point in code.\n+\n+One topic that deserves some extra attention is *function prologues*. At the beginning of a\n+function's machine code there are typically a few instructions for loading argument values into\n+allocas and checking if there's enough stack space for the function to execute. This *prologue* is\n+not visible in the source code and LLVM puts a special PROLOGUE END marker into the line table at\n+the first non-prologue instruction of the function. In order to find out where the prologue ends,\n+LLVM looks for the first instruction in the function body that is linked to a source location. So,\n+when generating prologue instructions we have to make sure that we don't emit source location\n+information until the 'real' function body begins. For this reason, source location emission is\n+disabled by default for any new function being translated and is only activated after a call to the\n+third function from the list above, `start_emitting_source_locations()`. This function should be\n+called right before regularly starting to translate the top-level block of the given function.\n+\n+There is one exception to the above rule: `llvm.dbg.declare` instruction must be linked to the\n+source location of the variable being declared. For function parameters these `llvm.dbg.declare`\n+instructions typically occur in the middle of the prologue, however, they are ignored by LLVM's\n+prologue detection. The `create_argument_metadata()` and related functions take care of linking the\n+`llvm.dbg.declare` instructions to the correct source locations even while source location emission\n+is still disabled, so there is no need to do anything special with source location handling here.\n+\n */\n \n "}]}