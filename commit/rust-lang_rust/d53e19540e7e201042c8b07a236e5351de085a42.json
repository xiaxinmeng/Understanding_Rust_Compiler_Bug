{"sha": "d53e19540e7e201042c8b07a236e5351de085a42", "node_id": "C_kwDOAAsO6NoAKGQ1M2UxOTU0MGU3ZTIwMTA0MmM4YjA3YTIzNmU1MzUxZGUwODVhNDI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-06T12:57:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-06T12:57:32Z"}, "message": "Auto merge of #94668 - fee1-dead:rollup-8e92bht, r=fee1-dead\n\nRollup of 3 pull requests\n\nSuccessful merges:\n\n - #92509 (doc: `Iterator::partition` use partial type hints)\n - #94621 (rustbuild: support RelWithDebInfo for lld)\n - #94649 (Unix path::absolute: Fix leading \".\" component)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "b89494c840d78cf077479294aa42366e6f1cd068", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b89494c840d78cf077479294aa42366e6f1cd068"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d53e19540e7e201042c8b07a236e5351de085a42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d53e19540e7e201042c8b07a236e5351de085a42", "html_url": "https://github.com/rust-lang/rust/commit/d53e19540e7e201042c8b07a236e5351de085a42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d53e19540e7e201042c8b07a236e5351de085a42/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad0d1d71d3bc6f85f53d8ab2bf47daa7c8bc2c51", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad0d1d71d3bc6f85f53d8ab2bf47daa7c8bc2c51", "html_url": "https://github.com/rust-lang/rust/commit/ad0d1d71d3bc6f85f53d8ab2bf47daa7c8bc2c51"}, {"sha": "8ea3f236dc45cd4bee67504ae4b1cf64ee5de7ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ea3f236dc45cd4bee67504ae4b1cf64ee5de7ad", "html_url": "https://github.com/rust-lang/rust/commit/8ea3f236dc45cd4bee67504ae4b1cf64ee5de7ad"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "f5c0a3b5cd849b0b3c71bf2652bb3aec3be9733d", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d53e19540e7e201042c8b07a236e5351de085a42/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d53e19540e7e201042c8b07a236e5351de085a42/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=d53e19540e7e201042c8b07a236e5351de085a42", "patch": "@@ -1877,9 +1877,9 @@ pub trait Iterator {\n     /// ```\n     /// let a = [1, 2, 3];\n     ///\n-    /// let (even, odd): (Vec<i32>, Vec<i32>) = a\n-    ///     .iter()\n-    ///     .partition(|&n| n % 2 == 0);\n+    /// let (even, odd): (Vec<_>, Vec<_>) = a\n+    ///     .into_iter()\n+    ///     .partition(|n| n % 2 == 0);\n     ///\n     /// assert_eq!(even, vec![2]);\n     /// assert_eq!(odd, vec![1, 3]);"}, {"sha": "6e863787b7f39bf1515c4217037acd43febff119", "filename": "library/std/src/path/tests.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d53e19540e7e201042c8b07a236e5351de085a42/library%2Fstd%2Fsrc%2Fpath%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d53e19540e7e201042c8b07a236e5351de085a42/library%2Fstd%2Fsrc%2Fpath%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath%2Ftests.rs?ref=d53e19540e7e201042c8b07a236e5351de085a42", "patch": "@@ -1710,15 +1710,23 @@ fn test_unix_absolute() {\n     let relative = \"a/b\";\n     let mut expected = crate::env::current_dir().unwrap();\n     expected.push(relative);\n-    assert_eq!(absolute(relative).unwrap(), expected);\n+    assert_eq!(absolute(relative).unwrap().as_os_str(), expected.as_os_str());\n \n     // Test how components are collected.\n-    assert_eq!(absolute(\"/a/b/c\").unwrap(), Path::new(\"/a/b/c\"));\n-    assert_eq!(absolute(\"/a//b/c\").unwrap(), Path::new(\"/a/b/c\"));\n-    assert_eq!(absolute(\"//a/b/c\").unwrap(), Path::new(\"//a/b/c\"));\n-    assert_eq!(absolute(\"///a/b/c\").unwrap(), Path::new(\"/a/b/c\"));\n-    assert_eq!(absolute(\"/a/b/c/\").unwrap(), Path::new(\"/a/b/c/\"));\n-    assert_eq!(absolute(\"/a/./b/../c/.././..\").unwrap(), Path::new(\"/a/b/../c/../..\"));\n+    assert_eq!(absolute(\"/a/b/c\").unwrap().as_os_str(), Path::new(\"/a/b/c\").as_os_str());\n+    assert_eq!(absolute(\"/a//b/c\").unwrap().as_os_str(), Path::new(\"/a/b/c\").as_os_str());\n+    assert_eq!(absolute(\"//a/b/c\").unwrap().as_os_str(), Path::new(\"//a/b/c\").as_os_str());\n+    assert_eq!(absolute(\"///a/b/c\").unwrap().as_os_str(), Path::new(\"/a/b/c\").as_os_str());\n+    assert_eq!(absolute(\"/a/b/c/\").unwrap().as_os_str(), Path::new(\"/a/b/c/\").as_os_str());\n+    assert_eq!(\n+        absolute(\"/a/./b/../c/.././..\").unwrap().as_os_str(),\n+        Path::new(\"/a/b/../c/../..\").as_os_str()\n+    );\n+\n+    // Test leading `.` and `..` components\n+    let curdir = crate::env::current_dir().unwrap();\n+    assert_eq!(absolute(\"./a\").unwrap().as_os_str(), curdir.join(\"a\").as_os_str());\n+    assert_eq!(absolute(\"../a\").unwrap().as_os_str(), curdir.join(\"../a\").as_os_str()); // return /pwd/../a\n }\n \n #[test]"}, {"sha": "a98a69e2db8e12b49564f2f69bf399836b5e5cbe", "filename": "library/std/src/sys/unix/path.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d53e19540e7e201042c8b07a236e5351de085a42/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d53e19540e7e201042c8b07a236e5351de085a42/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fpath.rs?ref=d53e19540e7e201042c8b07a236e5351de085a42", "patch": "@@ -28,7 +28,8 @@ pub(crate) fn absolute(path: &Path) -> io::Result<PathBuf> {\n     // See 4.13 Pathname Resolution, IEEE Std 1003.1-2017\n     // https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_13\n \n-    let mut components = path.components();\n+    // Get the components, skipping the redundant leading \".\" component if it exists.\n+    let mut components = path.strip_prefix(\".\").unwrap_or(path).components();\n     let path_os = path.as_os_str().bytes();\n \n     let mut normalized = if path.is_absolute() {"}, {"sha": "f00c5ce5aa6f03fff9885a022260c1d4df076014", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d53e19540e7e201042c8b07a236e5351de085a42/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d53e19540e7e201042c8b07a236e5351de085a42/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=d53e19540e7e201042c8b07a236e5351de085a42", "patch": "@@ -650,8 +650,16 @@ impl Step for Lld {\n         // there's probably a lot of reasons you can't do that other than this.\n         let llvm_config_shim = env::current_exe().unwrap().with_file_name(\"llvm-config-wrapper\");\n \n+        // Re-use the same flags as llvm to control the level of debug information\n+        // generated for lld.\n+        let profile = match (builder.config.llvm_optimize, builder.config.llvm_release_debuginfo) {\n+            (false, _) => \"Debug\",\n+            (true, false) => \"Release\",\n+            (true, true) => \"RelWithDebInfo\",\n+        };\n+\n         cfg.out_dir(&out_dir)\n-            .profile(\"Release\")\n+            .profile(profile)\n             .env(\"LLVM_CONFIG_REAL\", &llvm_config)\n             .define(\"LLVM_CONFIG_PATH\", llvm_config_shim)\n             .define(\"LLVM_INCLUDE_TESTS\", \"OFF\");"}]}