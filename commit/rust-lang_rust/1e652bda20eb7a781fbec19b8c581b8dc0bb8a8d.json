{"sha": "1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlNjUyYmRhMjBlYjdhNzgxZmJlYzE5YjhjNTgxYjhkYzBiYjhhOGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-29T00:41:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-29T00:41:15Z"}, "message": "Auto merge of #49458 - cramertj:stable-underscore-lt, r=nikomatsakis\n\nStabilize underscore lifetimes\n\nr? @nikomatsakis", "tree": {"sha": "ff2c9f715ad48f126216a2ed1c9339aa97174567", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff2c9f715ad48f126216a2ed1c9339aa97174567"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "html_url": "https://github.com/rust-lang/rust/commit/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d52c44ea8df9f9045e6059cb2d37df743be50bb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d52c44ea8df9f9045e6059cb2d37df743be50bb1", "html_url": "https://github.com/rust-lang/rust/commit/d52c44ea8df9f9045e6059cb2d37df743be50bb1"}, {"sha": "e6e6bd27d563b9a53687433feb3d4d4672dafd66", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e6bd27d563b9a53687433feb3d4d4672dafd66", "html_url": "https://github.com/rust-lang/rust/commit/e6e6bd27d563b9a53687433feb3d4d4672dafd66"}], "stats": {"total": 109, "additions": 27, "deletions": 82}, "files": [{"sha": "dcad8132c2b2478a0b3eac0d0475010b8d647e67", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -68,7 +68,7 @@\n #![feature(slice_patterns)]\n #![feature(specialization)]\n #![feature(unboxed_closures)]\n-#![feature(underscore_lifetimes)]\n+#![cfg_attr(stage0, feature(underscore_lifetimes))]\n #![cfg_attr(stage0, feature(universal_impl_trait))]\n #![feature(trace_macros)]\n #![feature(trusted_len)]"}, {"sha": "622fb423b51e4450b0b15ea1b36df5c4bde58d13", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -30,7 +30,7 @@\n #![cfg_attr(stage0, feature(i128_type, i128))]\n #![feature(specialization)]\n #![feature(optin_builtin_traits)]\n-#![feature(underscore_lifetimes)]\n+#![cfg_attr(stage0, feature(underscore_lifetimes))]\n #![feature(macro_vis_matcher)]\n #![feature(allow_internal_unstable)]\n #![cfg_attr(stage0, feature(universal_impl_trait))]"}, {"sha": "7af3a397666e8cd5fa6959f3297dc4bdbfbdd80f", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -37,7 +37,7 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![feature(placement_in_syntax)]\n #![feature(collection_placement)]\n #![feature(nonzero)]\n-#![feature(underscore_lifetimes)]\n+#![cfg_attr(stage0, feature(underscore_lifetimes))]\n #![cfg_attr(stage0, feature(never_type))]\n #![feature(inclusive_range_fields)]\n "}, {"sha": "90f368edeeca664434153c1b5c6f23900fc67b1f", "filename": "src/librustc_traits/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Flibrustc_traits%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Flibrustc_traits%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flib.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -15,7 +15,7 @@\n \n #![feature(crate_visibility_modifier)]\n #![cfg_attr(stage0, feature(match_default_bindings))]\n-#![feature(underscore_lifetimes)]\n+#![cfg_attr(stage0, feature(underscore_lifetimes))]\n \n #[macro_use]\n extern crate log;"}, {"sha": "526608d07aae782ff73f8982df36b1b7761b5e09", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -385,6 +385,9 @@ declare_features! (\n     // allow `'_` placeholder lifetimes\n     (active, underscore_lifetimes, \"1.22.0\", Some(44524), None),\n \n+    // Default match binding modes (RFC 2005)\n+    (active, match_default_bindings, \"1.22.0\", Some(42640), None),\n+\n     // Trait object syntax with `dyn` prefix\n     (active, dyn_trait, \"1.22.0\", Some(44662), Some(Edition::Edition2018)),\n \n@@ -562,6 +565,8 @@ declare_features! (\n     (accepted, i128_type, \"1.26.0\", Some(35118), None),\n     // Default match binding modes (RFC 2005)\n     (accepted, match_default_bindings, \"1.26.0\", Some(42640), None),\n+    // allow `'_` placeholder lifetimes\n+    (accepted, underscore_lifetimes, \"1.26.0\", Some(44524), None),\n );\n \n // If you change this, please modify src/doc/unstable-book as well. You must\n@@ -1792,14 +1797,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n \n         visit::walk_generic_param(self, param)\n     }\n-\n-    fn visit_lifetime(&mut self, lt: &'a ast::Lifetime) {\n-        if lt.ident.name == keywords::UnderscoreLifetime.name() {\n-            gate_feature_post!(&self, underscore_lifetimes, lt.span,\n-                               \"underscore lifetimes are unstable\");\n-        }\n-        visit::walk_lifetime(self, lt)\n-    }\n }\n \n pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],"}, {"sha": "124e55ea23a003d5c9cc4099c09a3bf31641afa9", "filename": "src/test/compile-fail/closure-expected-type/expect-fn-supply-fn-multiple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-fn-supply-fn-multiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-fn-supply-fn-multiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-fn-supply-fn-multiple.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -10,7 +10,6 @@\n \n // must-compile-successfully\n \n-#![feature(underscore_lifetimes)]\n #![allow(warnings)]\n \n type Different<'a, 'b> = &'a mut (&'a (), &'b ());"}, {"sha": "63284c98020fce7b7e35c181a16dd96fb1484ab4", "filename": "src/test/compile-fail/closure-expected-type/expect-fn-supply-fn.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-fn-supply-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-fn-supply-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-fn-supply-fn.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(underscore_lifetimes)]\n-\n fn with_closure_expecting_fn_with_free_region<F>(_: F)\n     where F: for<'a> FnOnce(fn(&'a u32), &i32)\n {"}, {"sha": "eb00ab5f67afe95c4efe33db1497e7b038f1aa1d", "filename": "src/test/compile-fail/underscore-lifetime-binders.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fcompile-fail%2Funderscore-lifetime-binders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fcompile-fail%2Funderscore-lifetime-binders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funderscore-lifetime-binders.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(underscore_lifetimes)]\n-\n struct Foo<'a>(&'a u8);\n struct Baz<'a>(&'_ &'a u8); //~ ERROR missing lifetime specifier\n "}, {"sha": "b36c8eb324e103543373bea1c8e463c378de435d", "filename": "src/test/compile-fail/underscore-lifetime-elison-mismatch.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fcompile-fail%2Funderscore-lifetime-elison-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fcompile-fail%2Funderscore-lifetime-elison-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funderscore-lifetime-elison-mismatch.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(underscore_lifetimes)]\n-\n fn foo(x: &mut Vec<&'_ u8>, y: &'_ u8) { x.push(y); } //~ ERROR lifetime mismatch\n \n fn main() {}"}, {"sha": "d126d795d909a65061f57e473416b2ba55bb4032", "filename": "src/test/run-pass/impl-trait/lifetimes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Frun-pass%2Fimpl-trait%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Frun-pass%2Fimpl-trait%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait%2Flifetimes.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(underscore_lifetimes)]\n #![allow(warnings)]\n \n use std::fmt::Debug;"}, {"sha": "4dd1a565c9f14b330439bafdd68cfb1e843cdb34", "filename": "src/test/run-pass/underscore-lifetimes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Frun-pass%2Funderscore-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Frun-pass%2Funderscore-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funderscore-lifetimes.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(underscore_lifetimes)]\n-\n struct Foo<'a>(&'a u8);\n \n fn foo(x: &u8) -> Foo<'_> {"}, {"sha": "ee6a978d169a3399b4ba9ace978192743b103c38", "filename": "src/test/ui/error-codes/E0637.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Ferror-codes%2FE0637.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Ferror-codes%2FE0637.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0637.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -7,7 +7,6 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(underscore_lifetimes)]\n \n struct Foo<'a: '_>(&'a u8); //~ ERROR invalid lifetime bound name: `'_`\n fn foo<'a: '_>(_: &'a u8) {} //~ ERROR invalid lifetime bound name: `'_`"}, {"sha": "245729376df369179699e049eead18fcf80bd9be", "filename": "src/test/ui/error-codes/E0637.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Ferror-codes%2FE0637.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Ferror-codes%2FE0637.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0637.stderr?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -1,17 +1,17 @@\n error[E0637]: invalid lifetime bound name: `'_`\n-  --> $DIR/E0637.rs:12:16\n+  --> $DIR/E0637.rs:11:16\n    |\n LL | struct Foo<'a: '_>(&'a u8); //~ ERROR invalid lifetime bound name: `'_`\n    |                ^^ `'_` is a reserved lifetime name\n \n error[E0637]: invalid lifetime bound name: `'_`\n-  --> $DIR/E0637.rs:13:12\n+  --> $DIR/E0637.rs:12:12\n    |\n LL | fn foo<'a: '_>(_: &'a u8) {} //~ ERROR invalid lifetime bound name: `'_`\n    |            ^^ `'_` is a reserved lifetime name\n \n error[E0637]: invalid lifetime bound name: `'_`\n-  --> $DIR/E0637.rs:16:10\n+  --> $DIR/E0637.rs:15:10\n    |\n LL | impl<'a: '_> Bar<'a> { //~ ERROR invalid lifetime bound name: `'_`\n    |          ^^ `'_` is a reserved lifetime name"}, {"sha": "3eb2ac1b00851b3aac677570bf39664a5ec9de93", "filename": "src/test/ui/feature-gate-in_band_lifetimes-impl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Ffeature-gate-in_band_lifetimes-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Ffeature-gate-in_band_lifetimes-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-in_band_lifetimes-impl.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![allow(warnings)]\n-#![feature(underscore_lifetimes)]\n \n trait MyTrait<'a> { }\n "}, {"sha": "95bf81f41f808a2a410c1bca6f82977dc878009a", "filename": "src/test/ui/feature-gate-in_band_lifetimes-impl.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Ffeature-gate-in_band_lifetimes-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Ffeature-gate-in_band_lifetimes-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-in_band_lifetimes-impl.stderr?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -1,11 +1,11 @@\n error[E0106]: missing lifetime specifier\n-  --> $DIR/feature-gate-in_band_lifetimes-impl.rs:16:26\n+  --> $DIR/feature-gate-in_band_lifetimes-impl.rs:15:26\n    |\n LL | impl<'a> MyTrait<'a> for &u32 { }\n    |                          ^ expected lifetime parameter\n \n error[E0106]: missing lifetime specifier\n-  --> $DIR/feature-gate-in_band_lifetimes-impl.rs:19:18\n+  --> $DIR/feature-gate-in_band_lifetimes-impl.rs:18:18\n    |\n LL | impl<'a> MyTrait<'_> for &'a f32 { }\n    |                  ^^ expected lifetime parameter"}, {"sha": "9da50c5c8771985bbe9cd9ef3f005722a2e403b7", "filename": "src/test/ui/feature-gate-underscore-lifetimes.rs", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d52c44ea8df9f9045e6059cb2d37df743be50bb1/src%2Ftest%2Fui%2Ffeature-gate-underscore-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d52c44ea8df9f9045e6059cb2d37df743be50bb1/src%2Ftest%2Fui%2Ffeature-gate-underscore-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-underscore-lifetimes.rs?ref=d52c44ea8df9f9045e6059cb2d37df743be50bb1", "patch": "@@ -1,20 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-struct Foo<'a>(&'a u8);\n-\n-fn foo(x: &u8) -> Foo<'_> { //~ ERROR underscore lifetimes are unstable\n-    Foo(x)\n-}\n-\n-fn main() {\n-    let x = 5;\n-    let _ = foo(&x);\n-}"}, {"sha": "c1cddcd763eb7047cf2d437ad963216f267bc164", "filename": "src/test/ui/feature-gate-underscore-lifetimes.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d52c44ea8df9f9045e6059cb2d37df743be50bb1/src%2Ftest%2Fui%2Ffeature-gate-underscore-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d52c44ea8df9f9045e6059cb2d37df743be50bb1/src%2Ftest%2Fui%2Ffeature-gate-underscore-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-underscore-lifetimes.stderr?ref=d52c44ea8df9f9045e6059cb2d37df743be50bb1", "patch": "@@ -1,11 +0,0 @@\n-error[E0658]: underscore lifetimes are unstable (see issue #44524)\n-  --> $DIR/feature-gate-underscore-lifetimes.rs:13:23\n-   |\n-LL | fn foo(x: &u8) -> Foo<'_> { //~ ERROR underscore lifetimes are unstable\n-   |                       ^^\n-   |\n-   = help: add #![feature(underscore_lifetimes)] to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "ab35331b279b0cdf60a5d384f11eb341d699e90c", "filename": "src/test/ui/in-band-lifetimes/impl/assoc-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fassoc-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fassoc-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fassoc-type.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -14,7 +14,6 @@\n #![allow(warnings)]\n \n #![feature(in_band_lifetimes)]\n-#![feature(underscore_lifetimes)]\n \n trait MyTrait {\n     type Output;"}, {"sha": "59b2cfd2226db121c670cd8515ca45db3547e337", "filename": "src/test/ui/in-band-lifetimes/impl/assoc-type.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fassoc-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fassoc-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fassoc-type.stderr?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -1,11 +1,11 @@\n error[E0106]: missing lifetime specifier\n-  --> $DIR/assoc-type.rs:24:19\n+  --> $DIR/assoc-type.rs:23:19\n    |\n LL |     type Output = &i32;\n    |                   ^ expected lifetime parameter\n \n error[E0106]: missing lifetime specifier\n-  --> $DIR/assoc-type.rs:29:20\n+  --> $DIR/assoc-type.rs:28:20\n    |\n LL |     type Output = &'_ i32;\n    |                    ^^ expected lifetime parameter"}, {"sha": "a504bae2e600719177044fe9db7b1465abf388dd", "filename": "src/test/ui/in-band-lifetimes/impl/dyn-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fdyn-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fdyn-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fdyn-trait.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -15,7 +15,6 @@\n \n #![feature(dyn_trait)]\n #![feature(in_band_lifetimes)]\n-#![feature(underscore_lifetimes)]\n \n use std::fmt::Debug;\n "}, {"sha": "9d6a318c075134b59682f7018355d0b5fb88a341", "filename": "src/test/ui/in-band-lifetimes/impl/dyn-trait.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fdyn-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fdyn-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fdyn-trait.stderr?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -1,11 +1,11 @@\n error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n-  --> $DIR/dyn-trait.rs:34:16\n+  --> $DIR/dyn-trait.rs:33:16\n    |\n LL |     static_val(x); //~ ERROR cannot infer\n    |                ^\n    |\n-note: first, the lifetime cannot outlive the lifetime 'a as defined on the function body at 33:1...\n-  --> $DIR/dyn-trait.rs:33:1\n+note: first, the lifetime cannot outlive the lifetime 'a as defined on the function body at 32:1...\n+  --> $DIR/dyn-trait.rs:32:1\n    |\n LL | fn with_dyn_debug_static<'a>(x: Box<dyn Debug + 'a>) {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "8a758b124ba5381ff61d478077999fa31963e666", "filename": "src/test/ui/in-band-lifetimes/impl/path-elided.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fpath-elided.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fpath-elided.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fpath-elided.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -10,7 +10,6 @@\n #![allow(warnings)]\n \n #![feature(in_band_lifetimes)]\n-#![feature(underscore_lifetimes)]\n \n trait MyTrait { }\n "}, {"sha": "6c1d72411bf57a31125d67f592a027e5a7332761", "filename": "src/test/ui/in-band-lifetimes/impl/path-elided.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fpath-elided.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fpath-elided.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fpath-elided.stderr?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -1,5 +1,5 @@\n error[E0106]: missing lifetime specifier\n-  --> $DIR/path-elided.rs:19:18\n+  --> $DIR/path-elided.rs:18:18\n    |\n LL | impl MyTrait for Foo {\n    |                  ^^^ expected lifetime parameter"}, {"sha": "756991d97a5352a04ee2e686f729bc3fab1d038b", "filename": "src/test/ui/in-band-lifetimes/impl/path-underscore.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fpath-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fpath-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fpath-underscore.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -15,7 +15,6 @@\n #![allow(warnings)]\n \n #![feature(in_band_lifetimes)]\n-#![feature(underscore_lifetimes)]\n \n trait MyTrait { }\n "}, {"sha": "99708afff351c1cc5b0ac855de61d482a8946b73", "filename": "src/test/ui/in-band-lifetimes/impl/ref-underscore.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fref-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fref-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Fref-underscore.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -15,7 +15,6 @@\n #![allow(warnings)]\n \n #![feature(in_band_lifetimes)]\n-#![feature(underscore_lifetimes)]\n \n trait MyTrait { }\n "}, {"sha": "e0709ab6dd07d7427e2b8b0f60234e692f0556cd", "filename": "src/test/ui/in-band-lifetimes/impl/trait-elided.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Ftrait-elided.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Ftrait-elided.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Ftrait-elided.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -10,7 +10,6 @@\n #![allow(warnings)]\n \n #![feature(in_band_lifetimes)]\n-#![feature(underscore_lifetimes)]\n \n trait MyTrait<'a> { }\n "}, {"sha": "fe3ded8e04c3309fe2db7b5932d53887eb7ee416", "filename": "src/test/ui/in-band-lifetimes/impl/trait-elided.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Ftrait-elided.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Ftrait-elided.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Ftrait-elided.stderr?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -1,5 +1,5 @@\n error[E0106]: missing lifetime specifier\n-  --> $DIR/trait-elided.rs:17:6\n+  --> $DIR/trait-elided.rs:16:6\n    |\n LL | impl MyTrait for u32 {\n    |      ^^^^^^^ expected lifetime parameter"}, {"sha": "971fd1fe759bbf5cae9b4c66d8248508ada5ba0e", "filename": "src/test/ui/in-band-lifetimes/impl/trait-underscore.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Ftrait-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Ftrait-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fimpl%2Ftrait-underscore.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -16,7 +16,6 @@\n #![allow(warnings)]\n \n #![feature(in_band_lifetimes)]\n-#![feature(underscore_lifetimes)]\n \n trait MyTrait<'a> { }\n "}, {"sha": "e573ad8fc1f09f62e15963c2e492d1aeaac4f3d6", "filename": "src/test/ui/underscore-lifetime/dyn-trait-underscore-in-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore-in-struct.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -14,7 +14,6 @@\n // cc #48468\n \n #![feature(dyn_trait)]\n-#![feature(underscore_lifetimes)]\n \n use std::fmt::Debug;\n "}, {"sha": "6d777841f0319c410bdc8df2ec1a9996517d983c", "filename": "src/test/ui/underscore-lifetime/dyn-trait-underscore-in-struct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore-in-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore-in-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore-in-struct.stderr?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -1,11 +1,11 @@\n error[E0106]: missing lifetime specifier\n-  --> $DIR/dyn-trait-underscore-in-struct.rs:22:24\n+  --> $DIR/dyn-trait-underscore-in-struct.rs:21:24\n    |\n LL |     x: Box<dyn Debug + '_>, //~ ERROR missing lifetime specifier\n    |                        ^^ expected lifetime parameter\n \n error[E0228]: the lifetime bound for this object type cannot be deduced from context; please supply an explicit bound\n-  --> $DIR/dyn-trait-underscore-in-struct.rs:22:12\n+  --> $DIR/dyn-trait-underscore-in-struct.rs:21:12\n    |\n LL |     x: Box<dyn Debug + '_>, //~ ERROR missing lifetime specifier\n    |            ^^^^^^^^^^^^^^"}, {"sha": "9640d3465978f90a2ba9ff8d63bf08f48b632054", "filename": "src/test/ui/underscore-lifetime/dyn-trait-underscore.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.rs?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -14,7 +14,6 @@\n // cc #48468\n \n #![feature(dyn_trait)]\n-#![feature(underscore_lifetimes)]\n \n fn a<T>(items: &[T]) -> Box<dyn Iterator<Item=&T>> {\n     //                      ^^^^^^^^^^^^^^^^^^^^^ bound *here* defaults to `'static`"}, {"sha": "f1e59aed54a36622c48a58a84913ce58ad64723a", "filename": "src/test/ui/underscore-lifetime/dyn-trait-underscore.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.stderr?ref=1e652bda20eb7a781fbec19b8c581b8dc0bb8a8d", "patch": "@@ -1,19 +1,19 @@\n error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n-  --> $DIR/dyn-trait-underscore.rs:21:20\n+  --> $DIR/dyn-trait-underscore.rs:20:20\n    |\n LL |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n    |                    ^^^^\n    |\n-note: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the function body at 19:1...\n-  --> $DIR/dyn-trait-underscore.rs:19:1\n+note: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the function body at 18:1...\n+  --> $DIR/dyn-trait-underscore.rs:18:1\n    |\n LL | / fn a<T>(items: &[T]) -> Box<dyn Iterator<Item=&T>> {\n LL | |     //                      ^^^^^^^^^^^^^^^^^^^^^ bound *here* defaults to `'static`\n LL | |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n LL | | }\n    | |_^\n note: ...so that reference does not outlive borrowed content\n-  --> $DIR/dyn-trait-underscore.rs:21:14\n+  --> $DIR/dyn-trait-underscore.rs:20:14\n    |\n LL |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n    |              ^^^^^"}]}