{"sha": "c1a859b25a95999ba276075bbd8e284ea675b41a", "node_id": "C_kwDOAAsO6NoAKGMxYTg1OWIyNWE5NTk5OWJhMjc2MDc1YmJkOGUyODRlYTY3NWI0MWE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-10T20:13:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-10T20:13:42Z"}, "message": "Auto merge of #104164 - cjgillot:u64-cache, r=compiler-errors\n\nUse 64 bits for incremental cache in-file positions\n\nWe currently use a 32-bit integer to encode byte positions into the incremental cache.\nThis is not enough when the query chache file is >4GB.\n\nAs the overflow check was a `debug_assert`, it was removed in released compilers, making compilation succeed silently.\nAt the next compilation, cache decoding would try to read unrelated data because of garbled file position, triggering an ICE.\n\nFixes https://github.com/rust-lang/rust/issues/79786\n(I'm closing that bug since it the original report and the subsequent questions are probably different instances. A new bug should be opened for new instances of that ICE.)", "tree": {"sha": "588ad651ec53435469d21b2e488556581f79e38e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/588ad651ec53435469d21b2e488556581f79e38e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1a859b25a95999ba276075bbd8e284ea675b41a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a859b25a95999ba276075bbd8e284ea675b41a", "html_url": "https://github.com/rust-lang/rust/commit/c1a859b25a95999ba276075bbd8e284ea675b41a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1a859b25a95999ba276075bbd8e284ea675b41a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3c0a023611fcaf5ae3ec242d7d60e356041d25f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3c0a023611fcaf5ae3ec242d7d60e356041d25f", "html_url": "https://github.com/rust-lang/rust/commit/a3c0a023611fcaf5ae3ec242d7d60e356041d25f"}, {"sha": "c49e2501bfeb18c1bfc0c6deb1aeb3e59def33a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c49e2501bfeb18c1bfc0c6deb1aeb3e59def33a5", "html_url": "https://github.com/rust-lang/rust/commit/c49e2501bfeb18c1bfc0c6deb1aeb3e59def33a5"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "eaed9aeb85020c9be8e4261c12c5b693e77e7ae6", "filename": "compiler/rustc_query_impl/src/on_disk_cache.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c1a859b25a95999ba276075bbd8e284ea675b41a/compiler%2Frustc_query_impl%2Fsrc%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a859b25a95999ba276075bbd8e284ea675b41a/compiler%2Frustc_query_impl%2Fsrc%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fon_disk_cache.rs?ref=c1a859b25a95999ba276075bbd8e284ea675b41a", "patch": "@@ -119,12 +119,11 @@ pub type EncodedDepNodeIndex = Vec<(SerializedDepNodeIndex, AbsoluteBytePos)>;\n struct SourceFileIndex(u32);\n \n #[derive(Copy, Clone, Debug, Hash, Eq, PartialEq, Encodable, Decodable)]\n-pub struct AbsoluteBytePos(u32);\n+pub struct AbsoluteBytePos(u64);\n \n impl AbsoluteBytePos {\n     fn new(pos: usize) -> AbsoluteBytePos {\n-        debug_assert!(pos <= u32::MAX as usize);\n-        AbsoluteBytePos(pos as u32)\n+        AbsoluteBytePos(pos.try_into().expect(\"Incremental cache file size overflowed u64.\"))\n     }\n \n     fn to_usize(self) -> usize {"}]}