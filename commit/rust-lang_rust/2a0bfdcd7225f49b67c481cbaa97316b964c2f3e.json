{"sha": "2a0bfdcd7225f49b67c481cbaa97316b964c2f3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMGJmZGNkNzIyNWY0OWI2N2M0ODFjYmFhOTczMTZiOTY0YzJmM2U=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-02-12T13:11:18Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-02-12T13:11:18Z"}, "message": "rustfmt", "tree": {"sha": "e9f82d99880939ac350ffc95a291220bf0090455", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9f82d99880939ac350ffc95a291220bf0090455"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a0bfdcd7225f49b67c481cbaa97316b964c2f3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a0bfdcd7225f49b67c481cbaa97316b964c2f3e", "html_url": "https://github.com/rust-lang/rust/commit/2a0bfdcd7225f49b67c481cbaa97316b964c2f3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a0bfdcd7225f49b67c481cbaa97316b964c2f3e/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36b8554cf1553a3d1e5a86f876efdc0b847c40e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/36b8554cf1553a3d1e5a86f876efdc0b847c40e5", "html_url": "https://github.com/rust-lang/rust/commit/36b8554cf1553a3d1e5a86f876efdc0b847c40e5"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "e9176372ebce97a217d123e9fe89867111e7e559", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2a0bfdcd7225f49b67c481cbaa97316b964c2f3e/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a0bfdcd7225f49b67c481cbaa97316b964c2f3e/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=2a0bfdcd7225f49b67c481cbaa97316b964c2f3e", "patch": "@@ -136,22 +136,23 @@ fn check_fn(cx: &LateContext, decl: &FnDecl, fn_id: NodeId) {\n     if let FunctionRetTy::Return(ref ty) = decl.output {\n         if let Some((out, MutMutable, _)) = get_rptr_lm(ty) {\n             let mut immutables = vec![];\n-            for (_, ref mutbl, ref argspan) in decl.inputs\n-                          .iter()\n-                          .filter_map(|ty| get_rptr_lm(ty))\n-                          .filter(|&(lt, _, _)| lt.name == out.name) {\n-                if *mutbl == MutMutable { return; }\n+            for (_, ref mutbl, ref argspan) in\n+                decl.inputs\n+                    .iter()\n+                    .filter_map(|ty| get_rptr_lm(ty))\n+                    .filter(|&(lt, _, _)| lt.name == out.name) {\n+                if *mutbl == MutMutable {\n+                    return;\n+                }\n                 immutables.push(*argspan);\n             }\n-            if immutables.is_empty() { return; }\n-            span_lint_and_then(cx,\n-                               MUT_FROM_REF,\n-                               ty.span,\n-                               \"mutable borrow from immutable input(s)\",\n-                               |db| {\n-                                    let ms = MultiSpan::from_spans(immutables);\n-                                    db.span_note(ms, \"immutable borrow here\");\n-                               });\n+            if immutables.is_empty() {\n+                return;\n+            }\n+            span_lint_and_then(cx, MUT_FROM_REF, ty.span, \"mutable borrow from immutable input(s)\", |db| {\n+                let ms = MultiSpan::from_spans(immutables);\n+                db.span_note(ms, \"immutable borrow here\");\n+            });\n         }\n     }\n }"}]}