{"sha": "4bbedd7dd21f3bb01ec144035918fb29942b9b7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYmVkZDdkZDIxZjNiYjAxZWMxNDQwMzU5MThmYjI5OTQyYjliN2Q=", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-08-18T18:16:04Z"}, "committer": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-08-18T18:16:04Z"}, "message": "fully implement lld-flavor", "tree": {"sha": "9d4b1f85be2a7f14cb8662576b9f97e3feee40f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d4b1f85be2a7f14cb8662576b9f97e3feee40f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bbedd7dd21f3bb01ec144035918fb29942b9b7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bbedd7dd21f3bb01ec144035918fb29942b9b7d", "html_url": "https://github.com/rust-lang/rust/commit/4bbedd7dd21f3bb01ec144035918fb29942b9b7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bbedd7dd21f3bb01ec144035918fb29942b9b7d/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cafeb6f05b95a888267fd525597ec8a3fb737b40", "url": "https://api.github.com/repos/rust-lang/rust/commits/cafeb6f05b95a888267fd525597ec8a3fb737b40", "html_url": "https://github.com/rust-lang/rust/commit/cafeb6f05b95a888267fd525597ec8a3fb737b40"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "a6c0fdccd332756ac2e173a2c1dbf797aa918ac2", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/4bbedd7dd21f3bb01ec144035918fb29942b9b7d/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bbedd7dd21f3bb01ec144035918fb29942b9b7d/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=4bbedd7dd21f3bb01ec144035918fb29942b9b7d", "patch": "@@ -94,6 +94,29 @@ pub enum LldFlavor {\n     Link,\n }\n \n+impl LldFlavor {\n+    fn from_str(s: &str) -> Option<Self> {\n+        Some(match s {\n+            \"darwin\" => LldFlavor::Ld64,\n+            \"gnu\" => LldFlavor::Ld,\n+            \"link\" => LldFlavor::Link,\n+            \"wasm\" => LldFlavor::Wasm,\n+            _ => return None,\n+        })\n+    }\n+}\n+\n+impl ToJson for LldFlavor {\n+    fn to_json(&self) -> Json {\n+        match *self {\n+            LldFlavor::Ld64 => \"darwin\",\n+            LldFlavor::Ld => \"gnu\",\n+            LldFlavor::Link => \"link\",\n+            LldFlavor::Wasm => \"wasm\",\n+        }.to_json()\n+    }\n+}\n+\n impl ToJson for LinkerFlavor {\n     fn to_json(&self) -> Json {\n         self.desc().to_json()\n@@ -860,6 +883,20 @@ impl Target {\n                         .map(|s| s.to_string() );\n                 }\n             } );\n+            ($key_name:ident, LldFlavor) => ( {\n+                let name = (stringify!($key_name)).replace(\"_\", \"-\");\n+                obj.find(&name[..]).and_then(|o| o.as_string().and_then(|s| {\n+                    if let Some(flavor) = LldFlavor::from_str(&s) {\n+                        base.options.$key_name = flavor;\n+                    } else {\n+                        return Some(Err(format!(\n+                            \"'{}' is not a valid value for lld-flavor. \\\n+                             Use 'darwin', 'gnu', 'link' or 'wasm.\",\n+                            s)))\n+                    }\n+                    Some(Ok(()))\n+                })).unwrap_or(Ok(()))\n+            } );\n             ($key_name:ident, LinkerFlavor) => ( {\n                 let name = (stringify!($key_name)).replace(\"_\", \"-\");\n                 obj.find(&name[..]).and_then(|o| o.as_string().map(|s| {\n@@ -915,6 +952,7 @@ impl Target {\n \n         key!(is_builtin, bool);\n         key!(linker, optional);\n+        try!(key!(lld_flavor, LldFlavor));\n         key!(pre_link_args, link_args);\n         key!(pre_link_args_crt, link_args);\n         key!(pre_link_objects_exe, list);\n@@ -1124,6 +1162,7 @@ impl ToJson for Target {\n \n         target_option_val!(is_builtin);\n         target_option_val!(linker);\n+        target_option_val!(lld_flavor);\n         target_option_val!(link_args - pre_link_args);\n         target_option_val!(link_args - pre_link_args_crt);\n         target_option_val!(pre_link_objects_exe);"}]}