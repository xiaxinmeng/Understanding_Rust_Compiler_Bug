{"sha": "727335878d316f6301780d182ea14ec4fb32531d", "node_id": "C_kwDOAAsO6NoAKDcyNzMzNTg3OGQzMTZmNjMwMTc4MGQxODJlYTE0ZWM0ZmIzMjUzMWQ", "commit": {"author": {"name": "Alex Saveau", "email": "saveau.alexandre@gmail.com", "date": "2022-10-15T03:51:54Z"}, "committer": {"name": "Alex Saveau", "email": "saveau.alexandre@gmail.com", "date": "2022-10-16T19:14:27Z"}, "message": "Support DirEntry metadata calls in miri\n\nSigned-off-by: Alex Saveau <saveau.alexandre@gmail.com>", "tree": {"sha": "79e1e6820db76858766dc29037749aa4aedeba08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79e1e6820db76858766dc29037749aa4aedeba08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/727335878d316f6301780d182ea14ec4fb32531d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQTBcJf70cgSZQv+KO8/jVsW6xadSAUCY0xYEwAKCRA/jVsW6xad\nSE47AQCkVWsj96dbY7TQ0KsUQ9ZJme3gALuvN54PyBzdmJCQRQEArr630sfbiHs3\n2WdIt7VxPJd7+sVyRGf1q0LY69RhgwA=\n=VVbD\n-----END PGP SIGNATURE-----", "payload": "tree 79e1e6820db76858766dc29037749aa4aedeba08\nparent 8147e6e427a1b3c4aedcd9fd85bd457888f80972\nauthor Alex Saveau <saveau.alexandre@gmail.com> 1665805914 -0700\ncommitter Alex Saveau <saveau.alexandre@gmail.com> 1665947667 -0700\n\nSupport DirEntry metadata calls in miri\n\nSigned-off-by: Alex Saveau <saveau.alexandre@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/727335878d316f6301780d182ea14ec4fb32531d", "html_url": "https://github.com/rust-lang/rust/commit/727335878d316f6301780d182ea14ec4fb32531d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/727335878d316f6301780d182ea14ec4fb32531d/comments", "author": {"login": "SUPERCILEX", "id": 9490724, "node_id": "MDQ6VXNlcjk0OTA3MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9490724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SUPERCILEX", "html_url": "https://github.com/SUPERCILEX", "followers_url": "https://api.github.com/users/SUPERCILEX/followers", "following_url": "https://api.github.com/users/SUPERCILEX/following{/other_user}", "gists_url": "https://api.github.com/users/SUPERCILEX/gists{/gist_id}", "starred_url": "https://api.github.com/users/SUPERCILEX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SUPERCILEX/subscriptions", "organizations_url": "https://api.github.com/users/SUPERCILEX/orgs", "repos_url": "https://api.github.com/users/SUPERCILEX/repos", "events_url": "https://api.github.com/users/SUPERCILEX/events{/privacy}", "received_events_url": "https://api.github.com/users/SUPERCILEX/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SUPERCILEX", "id": 9490724, "node_id": "MDQ6VXNlcjk0OTA3MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9490724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SUPERCILEX", "html_url": "https://github.com/SUPERCILEX", "followers_url": "https://api.github.com/users/SUPERCILEX/followers", "following_url": "https://api.github.com/users/SUPERCILEX/following{/other_user}", "gists_url": "https://api.github.com/users/SUPERCILEX/gists{/gist_id}", "starred_url": "https://api.github.com/users/SUPERCILEX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SUPERCILEX/subscriptions", "organizations_url": "https://api.github.com/users/SUPERCILEX/orgs", "repos_url": "https://api.github.com/users/SUPERCILEX/repos", "events_url": "https://api.github.com/users/SUPERCILEX/events{/privacy}", "received_events_url": "https://api.github.com/users/SUPERCILEX/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8147e6e427a1b3c4aedcd9fd85bd457888f80972", "url": "https://api.github.com/repos/rust-lang/rust/commits/8147e6e427a1b3c4aedcd9fd85bd457888f80972", "html_url": "https://github.com/rust-lang/rust/commit/8147e6e427a1b3c4aedcd9fd85bd457888f80972"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "780f46f8c11eb379e6791e5ffd6e709aef7d9d9c", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/727335878d316f6301780d182ea14ec4fb32531d/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/727335878d316f6301780d182ea14ec4fb32531d/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=727335878d316f6301780d182ea14ec4fb32531d", "patch": "@@ -674,7 +674,10 @@ impl DirEntry {\n         self.file_name_os_str().to_os_string()\n     }\n \n-    #[cfg(any(target_os = \"linux\", target_os = \"emscripten\", target_os = \"android\"))]\n+    #[cfg(all(\n+        any(target_os = \"linux\", target_os = \"emscripten\", target_os = \"android\"),\n+        not(miri)\n+    ))]\n     pub fn metadata(&self) -> io::Result<FileAttr> {\n         let fd = cvt(unsafe { dirfd(self.dir.dirp.0) })?;\n         let name = self.name_cstr().as_ptr();\n@@ -695,7 +698,10 @@ impl DirEntry {\n         Ok(FileAttr::from_stat64(stat))\n     }\n \n-    #[cfg(not(any(target_os = \"linux\", target_os = \"emscripten\", target_os = \"android\")))]\n+    #[cfg(any(\n+        not(any(target_os = \"linux\", target_os = \"emscripten\", target_os = \"android\")),\n+        miri\n+    ))]\n     pub fn metadata(&self) -> io::Result<FileAttr> {\n         lstat(&self.path())\n     }"}, {"sha": "e2a1d14f7404f31c038e6c96847ef5919ed66db5", "filename": "src/tools/miri/tests/pass-dep/shims/fs.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/727335878d316f6301780d182ea14ec4fb32531d/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/727335878d316f6301780d182ea14ec4fb32531d/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Ffs.rs?ref=727335878d316f6301780d182ea14ec4fb32531d", "patch": "@@ -404,6 +404,14 @@ fn test_directory() {\n     let mut file_names = dir_iter.map(|e| e.unwrap().file_name()).collect::<Vec<_>>();\n     file_names.sort_unstable();\n     assert_eq!(file_names, vec![\"test_file_1\", \"test_file_2\"]);\n+    // Test that read_dir metadata calls succeed\n+    assert_eq!(\n+        &[true, true],\n+        &*read_dir(&dir_path)\n+            .unwrap()\n+            .map(|e| e.unwrap().metadata().unwrap().is_file())\n+            .collect::<Vec<_>>()\n+    );\n     // Deleting the directory should fail, since it is not empty.\n     assert_eq!(ErrorKind::DirectoryNotEmpty, remove_dir(&dir_path).unwrap_err().kind());\n     // Clean up the files in the directory"}]}