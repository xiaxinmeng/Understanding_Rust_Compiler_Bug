{"sha": "e61148f98a21231d5bb3dea0140e3ff2f4d946e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MTE0OGY5OGEyMTIzMWQ1YmIzZGVhMDE0MGUzZmYyZjRkOTQ2ZTI=", "commit": {"author": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-09-17T09:32:20Z"}, "committer": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-10-10T13:19:12Z"}, "message": "Cast boolean into int directly in function set_passcred", "tree": {"sha": "a2499fc3861fd6869a78f3015daf6ce505dcbdcc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2499fc3861fd6869a78f3015daf6ce505dcbdcc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e61148f98a21231d5bb3dea0140e3ff2f4d946e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e61148f98a21231d5bb3dea0140e3ff2f4d946e2", "html_url": "https://github.com/rust-lang/rust/commit/e61148f98a21231d5bb3dea0140e3ff2f4d946e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e61148f98a21231d5bb3dea0140e3ff2f4d946e2/comments", "author": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0b133cdc60cf843c5806d90ced710589ba95528", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0b133cdc60cf843c5806d90ced710589ba95528", "html_url": "https://github.com/rust-lang/rust/commit/d0b133cdc60cf843c5806d90ced710589ba95528"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "2bd6b84d671740cc9d6b11a42a79213dd6c5c3b5", "filename": "library/std/src/sys/unix/net.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e61148f98a21231d5bb3dea0140e3ff2f4d946e2/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e61148f98a21231d5bb3dea0140e3ff2f4d946e2/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs?ref=e61148f98a21231d5bb3dea0140e3ff2f4d946e2", "patch": "@@ -324,8 +324,7 @@ impl Socket {\n     }\n \n     pub fn set_passcred(&self, passcred: bool) -> io::Result<()> {\n-        let boolean: libc::c_int = if passcred { 1 } else { 0 };\n-        setsockopt(self, libc::SOL_SOCKET, libc::SO_PASSCRED, boolean)\n+        setsockopt(self, libc::SOL_SOCKET, libc::SO_PASSCRED, passcred as libc::c_int)\n     }\n \n     pub fn passcred(&self) -> io::Result<bool> {"}]}