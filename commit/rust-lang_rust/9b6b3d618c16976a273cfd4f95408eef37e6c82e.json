{"sha": "9b6b3d618c16976a273cfd4f95408eef37e6c82e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliNmIzZDYxOGMxNjk3NmEyNzNjZmQ0Zjk1NDA4ZWVmMzdlNmM4MmU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-04-11T21:24:31Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-04-11T21:45:23Z"}, "message": "review comments", "tree": {"sha": "b4335257f23c2a677e46431b74ea1613a7d5d611", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4335257f23c2a677e46431b74ea1613a7d5d611"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b6b3d618c16976a273cfd4f95408eef37e6c82e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b6b3d618c16976a273cfd4f95408eef37e6c82e", "html_url": "https://github.com/rust-lang/rust/commit/9b6b3d618c16976a273cfd4f95408eef37e6c82e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b6b3d618c16976a273cfd4f95408eef37e6c82e/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac037c1359afa273bd5573b5be1b21d074c22219", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac037c1359afa273bd5573b5be1b21d074c22219", "html_url": "https://github.com/rust-lang/rust/commit/ac037c1359afa273bd5573b5be1b21d074c22219"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "7992867692e3937125da82c1d8e1cc472c8ce456", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9b6b3d618c16976a273cfd4f95408eef37e6c82e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6b3d618c16976a273cfd4f95408eef37e6c82e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=9b6b3d618c16976a273cfd4f95408eef37e6c82e", "patch": "@@ -796,10 +796,6 @@ impl<'a> Parser<'a> {\n                 .chain(inedible.iter().map(|x| TokenType::Token(x.clone())))\n                 .chain(self.expected_tokens.iter().cloned())\n                 .collect::<Vec<_>>();\n-            let expects_semi = expected.iter().any(|t| match t {\n-                TokenType::Token(token::Semi) => true,\n-                _ => false,\n-            });\n             expected.sort_by_cached_key(|x| x.to_string());\n             expected.dedup();\n             let expect = tokens_to_string(&expected[..]);\n@@ -839,17 +835,6 @@ impl<'a> Parser<'a> {\n                     Applicability::MaybeIncorrect,\n                 );\n             }\n-            let is_semi_suggestable = expects_semi && (\n-                self.token.is_keyword(keywords::Break) ||\n-                self.token.is_keyword(keywords::Continue) ||\n-                self.token.is_keyword(keywords::For) ||\n-                self.token.is_keyword(keywords::If) ||\n-                self.token.is_keyword(keywords::Let) ||\n-                self.token.is_keyword(keywords::Loop) ||\n-                self.token.is_keyword(keywords::Match) ||\n-                self.token.is_keyword(keywords::Return) ||\n-                self.token.is_keyword(keywords::While)\n-            );\n             let sp = if self.token == token::Token::Eof {\n                 // This is EOF, don't want to point at the following char, but rather the last token\n                 self.prev_span\n@@ -866,14 +851,28 @@ impl<'a> Parser<'a> {\n                 }\n             }\n \n+            let is_semi_suggestable = expected.iter().any(|t| match t {\n+                TokenType::Token(token::Semi) => true, // we expect a `;` here\n+                _ => false,\n+            }) && ( // a `;` would be expected before the current keyword\n+                self.token.is_keyword(keywords::Break) ||\n+                self.token.is_keyword(keywords::Continue) ||\n+                self.token.is_keyword(keywords::For) ||\n+                self.token.is_keyword(keywords::If) ||\n+                self.token.is_keyword(keywords::Let) ||\n+                self.token.is_keyword(keywords::Loop) ||\n+                self.token.is_keyword(keywords::Match) ||\n+                self.token.is_keyword(keywords::Return) ||\n+                self.token.is_keyword(keywords::While)\n+            );\n             let cm = self.sess.source_map();\n             match (cm.lookup_line(self.span.lo()), cm.lookup_line(sp.lo())) {\n                 (Ok(ref a), Ok(ref b)) if a.line != b.line && is_semi_suggestable => {\n                     // The spans are in different lines, expected `;` and found `let` or `return`.\n                     // High likelihood that it is only a missing `;`.\n                     err.span_suggestion_short(\n                         label_sp,\n-                        \"missing semicolon here\",\n+                        \"a semicolon may be missing here\",\n                         \";\".to_string(),\n                         Applicability::MaybeIncorrect,\n                     );"}, {"sha": "99339e4dd5025c8d9845e738633374b59f9b48d2", "filename": "src/test/ui/parser/recover-missing-semi.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b6b3d618c16976a273cfd4f95408eef37e6c82e/src%2Ftest%2Fui%2Fparser%2Frecover-missing-semi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6b3d618c16976a273cfd4f95408eef37e6c82e/src%2Ftest%2Fui%2Fparser%2Frecover-missing-semi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-missing-semi.stderr?ref=9b6b3d618c16976a273cfd4f95408eef37e6c82e", "patch": "@@ -2,7 +2,7 @@ error: expected one of `.`, `;`, `?`, or an operator, found `let`\n   --> $DIR/recover-missing-semi.rs:4:5\n    |\n LL |     let _: usize = ()\n-   |                      - help: missing semicolon here\n+   |                      - help: a semicolon may be missing here\n LL |\n LL |     let _ = 3;\n    |     ^^^\n@@ -11,7 +11,7 @@ error: expected one of `.`, `;`, `?`, or an operator, found `return`\n   --> $DIR/recover-missing-semi.rs:11:5\n    |\n LL |     let _: usize = ()\n-   |                      - help: missing semicolon here\n+   |                      - help: a semicolon may be missing here\n LL |\n LL |     return 3;\n    |     ^^^^^^"}]}