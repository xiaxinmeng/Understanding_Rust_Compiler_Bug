{"sha": "848f301782f1dc2e40241e503711fd6e11aefebe", "node_id": "C_kwDOAAsO6NoAKDg0OGYzMDE3ODJmMWRjMmU0MDI0MWU1MDM3MTFmZDZlMTFhZWZlYmU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-30T21:17:21Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-30T21:17:21Z"}, "message": "avoid assertion failures in try_to_scalar_int", "tree": {"sha": "07e4ca8a84a8868b67e4376917a8bee6103482e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07e4ca8a84a8868b67e4376917a8bee6103482e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/848f301782f1dc2e40241e503711fd6e11aefebe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/848f301782f1dc2e40241e503711fd6e11aefebe", "html_url": "https://github.com/rust-lang/rust/commit/848f301782f1dc2e40241e503711fd6e11aefebe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/848f301782f1dc2e40241e503711fd6e11aefebe/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "038f9e6bef9c8fcf122d93a8a33ac546f5606eb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/038f9e6bef9c8fcf122d93a8a33ac546f5606eb3", "html_url": "https://github.com/rust-lang/rust/commit/038f9e6bef9c8fcf122d93a8a33ac546f5606eb3"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "a1c111ae372a80d495bf49b4c0d9995c8a143418", "filename": "compiler/rustc_middle/src/mir/interpret/value.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/848f301782f1dc2e40241e503711fd6e11aefebe/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/848f301782f1dc2e40241e503711fd6e11aefebe/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs?ref=848f301782f1dc2e40241e503711fd6e11aefebe", "patch": "@@ -79,7 +79,7 @@ impl<'tcx> ConstValue<'tcx> {\n     }\n \n     pub fn try_to_scalar_int(&self) -> Option<ScalarInt> {\n-        Some(self.try_to_scalar()?.assert_int())\n+        self.try_to_scalar()?.try_to_int().ok()\n     }\n \n     pub fn try_to_bits(&self, size: Size) -> Option<u128> {\n@@ -368,6 +368,7 @@ impl<'tcx, Prov: Provenance> Scalar<Prov> {\n     }\n \n     #[inline(always)]\n+    #[cfg_attr(debug_assertions, track_caller)] // only in debug builds due to perf (see #98980)\n     pub fn assert_int(self) -> ScalarInt {\n         self.try_to_int().unwrap()\n     }\n@@ -389,6 +390,7 @@ impl<'tcx, Prov: Provenance> Scalar<Prov> {\n     }\n \n     #[inline(always)]\n+    #[cfg_attr(debug_assertions, track_caller)] // only in debug builds due to perf (see #98980)\n     pub fn assert_bits(self, target_size: Size) -> u128 {\n         self.to_bits(target_size).unwrap()\n     }"}]}