{"sha": "d0d0ccdca2a32e850b8611f3738e00e11d13123e", "node_id": "C_kwDOAAsO6NoAKGQwZDBjY2RjYTJhMzJlODUwYjg2MTFmMzczOGUwMGUxMWQxMzEyM2U", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-22T00:01:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-22T00:01:15Z"}, "message": "Rollup merge of #106012 - JakobDegen:retag-raw, r=RalfJung\n\nClarify that raw retags are not permitted in Mir\n\nNot sure when this changed, but documentation and the validator needed to be updated. This also removes raw retags from custom mir.\n\ncc rust-lang/miri#2735\n\nr? `@RalfJung`", "tree": {"sha": "a34e1632e45e079dba7b47203103bd0b30b86431", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a34e1632e45e079dba7b47203103bd0b30b86431"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0d0ccdca2a32e850b8611f3738e00e11d13123e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjo55LCRBK7hj4Ov3rIwAAPhcIAGrau6oMv8LQzIJCMjYLjn3G\nrHxJP71G75TmCaldt0xYt3Vqa+irTQ2wNd5WzVASXeMpElKZNP+K1eQa45KcIBui\nCnVRHuM80WYpAAQX7xrf5d6KId0hQix5OJhmR8x1ejHGxtDFBXnnQfUdvjRhET6k\nbrCRWS3OD962+Aek2E58CHTfENFFocM6gsyiV0XKUpc//0pAK2g2wY2lKn7hOYbc\n8eKw8GhW3QpO2D0Sxu45QWxh5vigZ15BXKHFzhj+Ocl1idlCQaGkmfDdb6bLzNs5\ns18SjMdvaycoxpC6cD5E7c5HmzOzcbgCX0svPZNxWKqQo81gpEqZWciRGBJqTJk=\n=bVMq\n-----END PGP SIGNATURE-----\n", "payload": "tree a34e1632e45e079dba7b47203103bd0b30b86431\nparent f340e689077d98a84ca6b147f91d79ad02b73da8\nparent 7c4c62047504aff1e17d4b2686116fb4de04797c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671667275 +0100\ncommitter GitHub <noreply@github.com> 1671667275 +0100\n\nRollup merge of #106012 - JakobDegen:retag-raw, r=RalfJung\n\nClarify that raw retags are not permitted in Mir\n\nNot sure when this changed, but documentation and the validator needed to be updated. This also removes raw retags from custom mir.\n\ncc rust-lang/miri#2735\n\nr? `@RalfJung`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0d0ccdca2a32e850b8611f3738e00e11d13123e", "html_url": "https://github.com/rust-lang/rust/commit/d0d0ccdca2a32e850b8611f3738e00e11d13123e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0d0ccdca2a32e850b8611f3738e00e11d13123e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f340e689077d98a84ca6b147f91d79ad02b73da8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f340e689077d98a84ca6b147f91d79ad02b73da8", "html_url": "https://github.com/rust-lang/rust/commit/f340e689077d98a84ca6b147f91d79ad02b73da8"}, {"sha": "7c4c62047504aff1e17d4b2686116fb4de04797c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c4c62047504aff1e17d4b2686116fb4de04797c", "html_url": "https://github.com/rust-lang/rust/commit/7c4c62047504aff1e17d4b2686116fb4de04797c"}], "stats": {"total": 35, "additions": 16, "deletions": 19}, "files": [{"sha": "94e1b95a0eb3c9501a33f4d3bafecd82c632bd9f", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d0d0ccdca2a32e850b8611f3738e00e11d13123e/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0d0ccdca2a32e850b8611f3738e00e11d13123e/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=d0d0ccdca2a32e850b8611f3738e00e11d13123e", "patch": "@@ -9,8 +9,8 @@ use rustc_middle::mir::visit::{PlaceContext, Visitor};\n use rustc_middle::mir::{\n     traversal, AggregateKind, BasicBlock, BinOp, Body, BorrowKind, CastKind, CopyNonOverlapping,\n     Local, Location, MirPass, MirPhase, NonDivergingIntrinsic, Operand, Place, PlaceElem, PlaceRef,\n-    ProjectionElem, RuntimePhase, Rvalue, SourceScope, Statement, StatementKind, Terminator,\n-    TerminatorKind, UnOp, START_BLOCK,\n+    ProjectionElem, RetagKind, RuntimePhase, Rvalue, SourceScope, Statement, StatementKind,\n+    Terminator, TerminatorKind, UnOp, START_BLOCK,\n };\n use rustc_middle::ty::{self, InstanceDef, ParamEnv, Ty, TyCtxt, TypeVisitable};\n use rustc_mir_dataflow::impls::MaybeStorageLive;\n@@ -667,10 +667,13 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n                     self.fail(location, \"`Deinit`is not allowed until deaggregation\");\n                 }\n             }\n-            StatementKind::Retag(_, _) => {\n+            StatementKind::Retag(kind, _) => {\n                 // FIXME(JakobDegen) The validator should check that `self.mir_phase <\n                 // DropsLowered`. However, this causes ICEs with generation of drop shims, which\n                 // seem to fail to set their `MirPhase` correctly.\n+                if *kind == RetagKind::Raw || *kind == RetagKind::TwoPhase {\n+                    self.fail(location, format!(\"explicit `{:?}` is forbidden\", kind));\n+                }\n             }\n             StatementKind::StorageLive(..)\n             | StatementKind::StorageDead(..)"}, {"sha": "bb03359b138f31b0693c1e7a3144d4ee070878f8", "filename": "compiler/rustc_middle/src/mir/syntax.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d0d0ccdca2a32e850b8611f3738e00e11d13123e/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0d0ccdca2a32e850b8611f3738e00e11d13123e/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs?ref=d0d0ccdca2a32e850b8611f3738e00e11d13123e", "patch": "@@ -320,8 +320,10 @@ pub enum StatementKind<'tcx> {\n     /// <https://internals.rust-lang.org/t/stacked-borrows-an-aliasing-model-for-rust/8153/> for\n     /// more details.\n     ///\n-    /// For code that is not specific to stacked borrows, you should consider retags to read\n-    /// and modify the place in an opaque way.\n+    /// For code that is not specific to stacked borrows, you should consider retags to read and\n+    /// modify the place in an opaque way.\n+    ///\n+    /// Only `RetagKind::Default` and `RetagKind::FnEntry` are permitted.\n     Retag(RetagKind, Box<Place<'tcx>>),\n \n     /// Encodes a user's type ascription. These need to be preserved"}, {"sha": "dca4906c07de54bd2042edccd8ab65a5702e44fb", "filename": "compiler/rustc_mir_build/src/build/custom/parse/instruction.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d0d0ccdca2a32e850b8611f3738e00e11d13123e/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fcustom%2Fparse%2Finstruction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0d0ccdca2a32e850b8611f3738e00e11d13123e/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fcustom%2Fparse%2Finstruction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fcustom%2Fparse%2Finstruction.rs?ref=d0d0ccdca2a32e850b8611f3738e00e11d13123e", "patch": "@@ -15,9 +15,6 @@ impl<'tcx, 'body> ParseCtxt<'tcx, 'body> {\n             @call(\"mir_retag\", args) => {\n                 Ok(StatementKind::Retag(RetagKind::Default, Box::new(self.parse_place(args[0])?)))\n             },\n-            @call(\"mir_retag_raw\", args) => {\n-                Ok(StatementKind::Retag(RetagKind::Raw, Box::new(self.parse_place(args[0])?)))\n-            },\n             @call(\"mir_set_discriminant\", args) => {\n                 let place = self.parse_place(args[0])?;\n                 let var = self.parse_integer_literal(args[1])? as u32;"}, {"sha": "9e7099ddfd1e1d98756d5b7624e0da4e20eca346", "filename": "library/core/src/intrinsics/mir.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d0d0ccdca2a32e850b8611f3738e00e11d13123e/library%2Fcore%2Fsrc%2Fintrinsics%2Fmir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0d0ccdca2a32e850b8611f3738e00e11d13123e/library%2Fcore%2Fsrc%2Fintrinsics%2Fmir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics%2Fmir.rs?ref=d0d0ccdca2a32e850b8611f3738e00e11d13123e", "patch": "@@ -259,7 +259,6 @@ define!(\"mir_drop\", fn Drop<T>(place: T, goto: BasicBlock));\n define!(\"mir_drop_and_replace\", fn DropAndReplace<T>(place: T, value: T, goto: BasicBlock));\n define!(\"mir_call\", fn Call<T>(place: T, goto: BasicBlock, call: T));\n define!(\"mir_retag\", fn Retag<T>(place: T));\n-define!(\"mir_retag_raw\", fn RetagRaw<T>(place: T));\n define!(\"mir_move\", fn Move<T>(place: T) -> T);\n define!(\"mir_static\", fn Static<T>(s: T) -> &'static T);\n define!(\"mir_static_mut\", fn StaticMut<T>(s: T) -> *mut T);"}, {"sha": "f5ee112623541519731735298cd5b3ef5aab3c02", "filename": "src/test/mir-opt/building/custom/references.immut_ref.built.after.mir", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d0d0ccdca2a32e850b8611f3738e00e11d13123e/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.immut_ref.built.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d0d0ccdca2a32e850b8611f3738e00e11d13123e/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.immut_ref.built.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.immut_ref.built.after.mir?ref=d0d0ccdca2a32e850b8611f3738e00e11d13123e", "patch": "@@ -6,9 +6,8 @@ fn immut_ref(_1: &i32) -> &i32 {\n \n     bb0: {\n         _2 = &raw const (*_1);           // scope 0 at $DIR/references.rs:+5:13: +5:29\n-        Retag([raw] _2);                 // scope 0 at $DIR/references.rs:+6:13: +6:24\n-        _0 = &(*_2);                     // scope 0 at $DIR/references.rs:+7:13: +7:23\n-        Retag(_0);                       // scope 0 at $DIR/references.rs:+8:13: +8:23\n-        return;                          // scope 0 at $DIR/references.rs:+9:13: +9:21\n+        _0 = &(*_2);                     // scope 0 at $DIR/references.rs:+6:13: +6:23\n+        Retag(_0);                       // scope 0 at $DIR/references.rs:+7:13: +7:23\n+        return;                          // scope 0 at $DIR/references.rs:+8:13: +8:21\n     }\n }"}, {"sha": "8e2ffc33b1a0afabb9e26ad87691060905864c31", "filename": "src/test/mir-opt/building/custom/references.mut_ref.built.after.mir", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d0d0ccdca2a32e850b8611f3738e00e11d13123e/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.mut_ref.built.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d0d0ccdca2a32e850b8611f3738e00e11d13123e/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.mut_ref.built.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.mut_ref.built.after.mir?ref=d0d0ccdca2a32e850b8611f3738e00e11d13123e", "patch": "@@ -6,9 +6,8 @@ fn mut_ref(_1: &mut i32) -> &mut i32 {\n \n     bb0: {\n         _2 = &raw mut (*_1);             // scope 0 at $DIR/references.rs:+5:13: +5:33\n-        Retag([raw] _2);                 // scope 0 at $DIR/references.rs:+6:13: +6:24\n-        _0 = &mut (*_2);                 // scope 0 at $DIR/references.rs:+7:13: +7:26\n-        Retag(_0);                       // scope 0 at $DIR/references.rs:+8:13: +8:23\n-        return;                          // scope 0 at $DIR/references.rs:+9:13: +9:21\n+        _0 = &mut (*_2);                 // scope 0 at $DIR/references.rs:+6:13: +6:26\n+        Retag(_0);                       // scope 0 at $DIR/references.rs:+7:13: +7:23\n+        return;                          // scope 0 at $DIR/references.rs:+8:13: +8:21\n     }\n }"}, {"sha": "a1c896de04cf0185e7b0a7a1fcaf32da06a8e82c", "filename": "src/test/mir-opt/building/custom/references.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0d0ccdca2a32e850b8611f3738e00e11d13123e/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0d0ccdca2a32e850b8611f3738e00e11d13123e/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.rs?ref=d0d0ccdca2a32e850b8611f3738e00e11d13123e", "patch": "@@ -12,7 +12,6 @@ pub fn mut_ref(x: &mut i32) -> &mut i32 {\n \n         {\n             t = addr_of_mut!(*x);\n-            RetagRaw(t);\n             RET = &mut *t;\n             Retag(RET);\n             Return()\n@@ -28,7 +27,6 @@ pub fn immut_ref(x: &i32) -> &i32 {\n \n         {\n             t = addr_of!(*x);\n-            RetagRaw(t);\n             RET = & *t;\n             Retag(RET);\n             Return()"}]}