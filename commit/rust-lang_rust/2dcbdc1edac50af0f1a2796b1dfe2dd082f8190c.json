{"sha": "2dcbdc1edac50af0f1a2796b1dfe2dd082f8190c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkY2JkYzFlZGFjNTBhZjBmMWEyNzk2YjFkZmUyZGQwODJmODE5MGM=", "commit": {"author": {"name": "ville-h", "email": "ville3.14159@gmail.com", "date": "2015-01-04T09:43:14Z"}, "committer": {"name": "ville-h", "email": "ville3.14159@gmail.com", "date": "2015-01-04T09:43:14Z"}, "message": "rename std::sync::RWLockReadGuard to RwLockReadGuard", "tree": {"sha": "0b326eb390fbd6d0f8a6559bb84d0670078dd8bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b326eb390fbd6d0f8a6559bb84d0670078dd8bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2dcbdc1edac50af0f1a2796b1dfe2dd082f8190c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2dcbdc1edac50af0f1a2796b1dfe2dd082f8190c", "html_url": "https://github.com/rust-lang/rust/commit/2dcbdc1edac50af0f1a2796b1dfe2dd082f8190c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2dcbdc1edac50af0f1a2796b1dfe2dd082f8190c/comments", "author": {"login": "ville-h", "id": 8824715, "node_id": "MDQ6VXNlcjg4MjQ3MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8824715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ville-h", "html_url": "https://github.com/ville-h", "followers_url": "https://api.github.com/users/ville-h/followers", "following_url": "https://api.github.com/users/ville-h/following{/other_user}", "gists_url": "https://api.github.com/users/ville-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/ville-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ville-h/subscriptions", "organizations_url": "https://api.github.com/users/ville-h/orgs", "repos_url": "https://api.github.com/users/ville-h/repos", "events_url": "https://api.github.com/users/ville-h/events{/privacy}", "received_events_url": "https://api.github.com/users/ville-h/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ville-h", "id": 8824715, "node_id": "MDQ6VXNlcjg4MjQ3MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8824715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ville-h", "html_url": "https://github.com/ville-h", "followers_url": "https://api.github.com/users/ville-h/followers", "following_url": "https://api.github.com/users/ville-h/following{/other_user}", "gists_url": "https://api.github.com/users/ville-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/ville-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ville-h/subscriptions", "organizations_url": "https://api.github.com/users/ville-h/orgs", "repos_url": "https://api.github.com/users/ville-h/repos", "events_url": "https://api.github.com/users/ville-h/events{/privacy}", "received_events_url": "https://api.github.com/users/ville-h/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3dcf9b6bf7b3de4b7b4f51725f2ab814cbdfd38", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3dcf9b6bf7b3de4b7b4f51725f2ab814cbdfd38", "html_url": "https://github.com/rust-lang/rust/commit/c3dcf9b6bf7b3de4b7b4f51725f2ab814cbdfd38"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "37b9f5dc68dd38b63b36ad93024d8326b853264a", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2dcbdc1edac50af0f1a2796b1dfe2dd082f8190c/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dcbdc1edac50af0f1a2796b1dfe2dd082f8190c/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=2dcbdc1edac50af0f1a2796b1dfe2dd082f8190c", "patch": "@@ -110,7 +110,7 @@ pub const RW_LOCK_INIT: StaticRwLock = StaticRwLock {\n /// dropped.\n #[must_use]\n #[stable]\n-pub struct RWLockReadGuard<'a, T: 'a> {\n+pub struct RwLockReadGuard<'a, T: 'a> {\n     __lock: &'a StaticRwLock,\n     __data: &'a UnsafeCell<T>,\n     __marker: marker::NoSend,\n@@ -301,11 +301,11 @@ impl StaticRwLock {\n     }\n }\n \n-impl<'rwlock, T> RWLockReadGuard<'rwlock, T> {\n+impl<'rwlock, T> RwLockReadGuard<'rwlock, T> {\n     fn new(lock: &'rwlock StaticRwLock, data: &'rwlock UnsafeCell<T>)\n-           -> LockResult<RWLockReadGuard<'rwlock, T>> {\n+           -> LockResult<RwLockReadGuard<'rwlock, T>> {\n         poison::map_result(lock.poison.borrow(), |_| {\n-            RWLockReadGuard {\n+            RwLockReadGuard {\n                 __lock: lock,\n                 __data: data,\n                 __marker: marker::NoSend,\n@@ -327,7 +327,7 @@ impl<'rwlock, T> RWLockWriteGuard<'rwlock, T> {\n     }\n }\n \n-impl<'rwlock, T> Deref for RWLockReadGuard<'rwlock, T> {\n+impl<'rwlock, T> Deref for RwLockReadGuard<'rwlock, T> {\n     type Target = T;\n \n     fn deref(&self) -> &T { unsafe { &*self.__data.get() } }\n@@ -344,7 +344,7 @@ impl<'rwlock, T> DerefMut for RWLockWriteGuard<'rwlock, T> {\n }\n \n #[unsafe_destructor]\n-impl<'a, T> Drop for RWLockReadGuard<'a, T> {\n+impl<'a, T> Drop for RwLockReadGuard<'a, T> {\n     fn drop(&mut self) {\n         unsafe { self.__lock.lock.read_unlock(); }\n     }"}]}