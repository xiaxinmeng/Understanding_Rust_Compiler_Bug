{"sha": "ca1439d4a7d7f8128a73589e1e19a72b3e28d327", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMTQzOWQ0YTdkN2Y4MTI4YTczNTg5ZTFlMTlhNzJiM2UyOGQzMjc=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-01-22T07:14:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-22T07:14:52Z"}, "message": "Merge pull request #2392 from theotherphil/bugfix\n\nFix unnecessary_fold bug", "tree": {"sha": "84fb5d3ec41749ce0f90ca3ed5a53161251ad54b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84fb5d3ec41749ce0f90ca3ed5a53161251ad54b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca1439d4a7d7f8128a73589e1e19a72b3e28d327", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaZY9sCRBK7hj4Ov3rIwAAdHIIACxnRYQrVMmRn3G84hYtJfTP\nt588omYtI7b25pPqY+028zdLb7hUQDQ96Nu9nIZaPw7+wUe33/BI42jHrBiWb5Vp\nYJTnleZK1pNhQCfLrpxxvX1n+yE8ecs4DfdyyIIXzT/MTUvNjkMvQFfX32XGj9MK\n2u21SDr6fAXVvokxe3fzCus2Dt3X+j+xJDhflVLfM9BNdCiOXXpuVcQ2gSggN+X6\n2IBq163yaaTl2A/Iul+L2638eWF1c75kvXbuQOvfDzUjpdBOXmerGujijVPd3qOJ\n5oPVKC2ErXcHHTqbrT+ssY8Ex8kRFDJsk1yMjc8oenVtb6ZuLk/xWSSZMCXjCmM=\n=XOsK\n-----END PGP SIGNATURE-----\n", "payload": "tree 84fb5d3ec41749ce0f90ca3ed5a53161251ad54b\nparent 96cba36b46ae1ab24da8de0d75e35328f23f7ebb\nparent 29f8cea5fd999629b3ca5e46e4150836c4233f05\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1516605292 +0100\ncommitter GitHub <noreply@github.com> 1516605292 +0100\n\nMerge pull request #2392 from theotherphil/bugfix\n\nFix unnecessary_fold bug"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca1439d4a7d7f8128a73589e1e19a72b3e28d327", "html_url": "https://github.com/rust-lang/rust/commit/ca1439d4a7d7f8128a73589e1e19a72b3e28d327", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca1439d4a7d7f8128a73589e1e19a72b3e28d327/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96cba36b46ae1ab24da8de0d75e35328f23f7ebb", "url": "https://api.github.com/repos/rust-lang/rust/commits/96cba36b46ae1ab24da8de0d75e35328f23f7ebb", "html_url": "https://github.com/rust-lang/rust/commit/96cba36b46ae1ab24da8de0d75e35328f23f7ebb"}, {"sha": "29f8cea5fd999629b3ca5e46e4150836c4233f05", "url": "https://api.github.com/repos/rust-lang/rust/commits/29f8cea5fd999629b3ca5e46e4150836c4233f05", "html_url": "https://github.com/rust-lang/rust/commit/29f8cea5fd999629b3ca5e46e4150836c4233f05"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "550b9f16e5a14239ac38ae579779f50a02c4a64c", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ca1439d4a7d7f8128a73589e1e19a72b3e28d327/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca1439d4a7d7f8128a73589e1e19a72b3e28d327/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=ca1439d4a7d7f8128a73589e1e19a72b3e28d327", "patch": "@@ -12,8 +12,8 @@ use syntax::ast;\n use syntax::codemap::{Span, BytePos};\n use utils::{get_arg_name, get_trait_def_id, implements_trait, in_external_macro, in_macro, is_copy, is_self, is_self_ty,\n             iter_input_pats, last_path_segment, match_def_path, match_path, match_qpath, match_trait_method,\n-            match_type, method_chain_args, return_ty, remove_blocks, same_tys, single_segment_path, snippet, span_lint,\n-            span_lint_and_sugg, span_lint_and_then, span_note_and_lint, walk_ptrs_ty, walk_ptrs_ty_depth};\n+            match_type, method_chain_args, match_var, return_ty, remove_blocks, same_tys, single_segment_path, snippet,\n+            span_lint, span_lint_and_sugg, span_lint_and_then, span_note_and_lint, walk_ptrs_ty, walk_ptrs_ty_depth};\n use utils::paths;\n use utils::sugg;\n use utils::const_to_u64;\n@@ -1162,8 +1162,8 @@ fn lint_unnecessary_fold(cx: &LateContext, expr: &hir::Expr, fold_args: &[hir::E\n             if let Some(first_arg_ident) = get_arg_name(&closure_body.arguments[0].pat);\n             if let Some(second_arg_ident) = get_arg_name(&closure_body.arguments[1].pat);\n \n-            if let hir::ExprPath(hir::QPath::Resolved(None, ref path)) = left_expr.node;\n-            if path.segments.len() == 1 && &path.segments[0].name == &first_arg_ident;\n+            if match_var(&*left_expr, first_arg_ident);\n+            if replacement_has_args || match_var(&*right_expr, second_arg_ident);\n \n             then {\n                 // Span containing `.fold(...)`"}, {"sha": "4afab4c8be6b3f225576a952ba2914f988552068", "filename": "tests/ui/methods.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca1439d4a7d7f8128a73589e1e19a72b3e28d327/tests%2Fui%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca1439d4a7d7f8128a73589e1e19a72b3e28d327/tests%2Fui%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.rs?ref=ca1439d4a7d7f8128a73589e1e19a72b3e28d327", "patch": "@@ -419,6 +419,9 @@ fn unnecessary_fold_should_ignore() {\n     let _ = (0..3).fold(true, |acc, x| x > 2 && acc);\n     let _ = (0..3).fold(0, |acc, x| x + acc);\n     let _ = (0..3).fold(1, |acc, x| x * acc);\n+\n+    let _ = [(0..2), (0..3)].iter().fold(0, |a, b| a + b.len());\n+    let _ = [(0..2), (0..3)].iter().fold(1, |a, b| a * b.len());\n }\n \n #[allow(similar_names)]"}, {"sha": "ef52d85c31f6056dfd2db25dd523a446594e3faf", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca1439d4a7d7f8128a73589e1e19a72b3e28d327/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca1439d4a7d7f8128a73589e1e19a72b3e28d327/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=ca1439d4a7d7f8128a73589e1e19a72b3e28d327", "patch": "@@ -526,9 +526,9 @@ error: this `.fold` can be written more succinctly using another method\n     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.any(|x| x > 2)`\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-   --> $DIR/methods.rs:427:13\n+   --> $DIR/methods.rs:430:13\n     |\n-427 |     let _ = opt.unwrap();\n+430 |     let _ = opt.unwrap();\n     |             ^^^^^^^^^^^^\n     |\n     = note: `-D option-unwrap-used` implied by `-D warnings`"}]}