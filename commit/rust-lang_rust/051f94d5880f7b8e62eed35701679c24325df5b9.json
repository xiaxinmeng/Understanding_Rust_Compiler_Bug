{"sha": "051f94d5880f7b8e62eed35701679c24325df5b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1MWY5NGQ1ODgwZjdiOGU2MmVlZDM1NzAxNjc5YzI0MzI1ZGY1Yjk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-06T23:39:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-06T23:39:35Z"}, "message": "Rollup merge of #63310 - gorup:partial-moves, r=cramertj\n\nTests around moving parts of structs and tuples across await points\n\nr? cramertj\n\nPer the [dropbox paper](https://paper.dropbox.com/doc/async.await-Call-for-Tests--AiR3vlp1s_Kw0yzWZ1sWMnaIAQ-nMyZGrra7dz9KcFRMLKJy) about more tests, it appears there are some tests wanted around local variables (under the section [\"Dynamic semantics\"](https://paper.dropbox.com/doc/async.await-Call-for-Tests--AiR3vlp1s_Kw0yzWZ1sWMnaIAg-nMyZGrra7dz9KcFRMLKJy#:uid=122335511260129643493892&h2=Dynamic-semantics)). Here is one commit, and I can probably get code up for other scenarios listed there, although I may not have the full background to know what is being targeted by the tests. Please assist me if I'm off course, thanks!\n\n---\n- Executed all 4 new tests\n- Executed `tidy` command", "tree": {"sha": "919ded4f7f4696fc5ea5441e954ff604e1015512", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/919ded4f7f4696fc5ea5441e954ff604e1015512"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/051f94d5880f7b8e62eed35701679c24325df5b9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdSg+3CRBK7hj4Ov3rIwAAdHIIAAgFYXKYML7sDGhxbFjhqOYJ\nAAlXPQEQVI1ki7Zu4PUN/acVihB+vhBgo2fjeqZQw2iGRPnLFIgMXjWyeEyikU3B\nnBU07Vgfsbfkvc9bRKZJnpQvaYCUOyaHwtkhr6ptJ9e81/67Z3EC3y6iWTji18O9\nL9BAt6G+HWYyFl5cF/luVlEnuPXh9rgg7a1kUM9s3K3XIJ8F7KMr4qqIo8H2UMXw\nydzmKTdCch41pWIwTSnDyPxBitnwu/vG7j85LapSAzHgGgqOe4ZNhN3DiWx8Jzdj\nH5aWOvd++c2gauAQP4LvWbeXyb2H+QaEuw9i/QuBYqdhJZgAv96ByeR7C+QYad8=\n=KneT\n-----END PGP SIGNATURE-----\n", "payload": "tree 919ded4f7f4696fc5ea5441e954ff604e1015512\nparent f635ce590d284da81e2c1a913ab60c566624811c\nparent ef0f49054f15964aac63e48621567dad17bec97b\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565134775 +0200\ncommitter GitHub <noreply@github.com> 1565134775 +0200\n\nRollup merge of #63310 - gorup:partial-moves, r=cramertj\n\nTests around moving parts of structs and tuples across await points\n\nr? cramertj\n\nPer the [dropbox paper](https://paper.dropbox.com/doc/async.await-Call-for-Tests--AiR3vlp1s_Kw0yzWZ1sWMnaIAQ-nMyZGrra7dz9KcFRMLKJy) about more tests, it appears there are some tests wanted around local variables (under the section [\"Dynamic semantics\"](https://paper.dropbox.com/doc/async.await-Call-for-Tests--AiR3vlp1s_Kw0yzWZ1sWMnaIAg-nMyZGrra7dz9KcFRMLKJy#:uid=122335511260129643493892&h2=Dynamic-semantics)). Here is one commit, and I can probably get code up for other scenarios listed there, although I may not have the full background to know what is being targeted by the tests. Please assist me if I'm off course, thanks!\n\n---\n- Executed all 4 new tests\n- Executed `tidy` command\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/051f94d5880f7b8e62eed35701679c24325df5b9", "html_url": "https://github.com/rust-lang/rust/commit/051f94d5880f7b8e62eed35701679c24325df5b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/051f94d5880f7b8e62eed35701679c24325df5b9/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f635ce590d284da81e2c1a913ab60c566624811c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f635ce590d284da81e2c1a913ab60c566624811c", "html_url": "https://github.com/rust-lang/rust/commit/f635ce590d284da81e2c1a913ab60c566624811c"}, {"sha": "ef0f49054f15964aac63e48621567dad17bec97b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef0f49054f15964aac63e48621567dad17bec97b", "html_url": "https://github.com/rust-lang/rust/commit/ef0f49054f15964aac63e48621567dad17bec97b"}], "stats": {"total": 95, "additions": 95, "deletions": 0}, "files": [{"sha": "9bd7a515cbdbfac5778c4598648132ab8f90ebe9", "filename": "src/test/ui/async-await/move-part-await-return-rest-struct.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/051f94d5880f7b8e62eed35701679c24325df5b9/src%2Ftest%2Fui%2Fasync-await%2Fmove-part-await-return-rest-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/051f94d5880f7b8e62eed35701679c24325df5b9/src%2Ftest%2Fui%2Fasync-await%2Fmove-part-await-return-rest-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fmove-part-await-return-rest-struct.rs?ref=051f94d5880f7b8e62eed35701679c24325df5b9", "patch": "@@ -0,0 +1,20 @@\n+// build-pass\n+// edition:2018\n+// compile-flags: --crate-type lib\n+\n+#![feature(async_await)]\n+\n+struct Small {\n+    x: Vec<usize>,\n+    y: Vec<usize>,\n+}\n+\n+// You are allowed to move out part of a struct to an async fn, you still\n+// have access to remaining parts after awaiting\n+async fn move_part_await_return_rest_struct() -> Vec<usize> {\n+    let s = Small { x: vec![31], y: vec![19, 1441] };\n+    needs_vec(s.x).await;\n+    s.y\n+}\n+\n+async fn needs_vec(_vec: Vec<usize>) {}"}, {"sha": "69eee855e759412661ff9b494683d85931ad0ad1", "filename": "src/test/ui/async-await/move-part-await-return-rest-tuple.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/051f94d5880f7b8e62eed35701679c24325df5b9/src%2Ftest%2Fui%2Fasync-await%2Fmove-part-await-return-rest-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/051f94d5880f7b8e62eed35701679c24325df5b9/src%2Ftest%2Fui%2Fasync-await%2Fmove-part-await-return-rest-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fmove-part-await-return-rest-tuple.rs?ref=051f94d5880f7b8e62eed35701679c24325df5b9", "patch": "@@ -0,0 +1,14 @@\n+// build-pass\n+// edition:2018\n+// compile-flags: --crate-type lib\n+\n+#![feature(async_await)]\n+\n+async fn move_part_await_return_rest_tuple() -> Vec<usize> {\n+    let x = (vec![3], vec![4, 4]);\n+    drop(x.1);\n+    echo(x.0[0]).await;\n+    x.0\n+}\n+\n+async fn echo(x: usize) -> usize { x }"}, {"sha": "58e094708979c1dcbce1a19edf002605db6721a0", "filename": "src/test/ui/async-await/no-move-across-await-struct.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/051f94d5880f7b8e62eed35701679c24325df5b9/src%2Ftest%2Fui%2Fasync-await%2Fno-move-across-await-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/051f94d5880f7b8e62eed35701679c24325df5b9/src%2Ftest%2Fui%2Fasync-await%2Fno-move-across-await-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-move-across-await-struct.rs?ref=051f94d5880f7b8e62eed35701679c24325df5b9", "patch": "@@ -0,0 +1,19 @@\n+// compile-fail\n+// edition:2018\n+// compile-flags: --crate-type lib\n+\n+#![feature(async_await)]\n+\n+async fn no_move_across_await_struct() -> Vec<usize> {\n+    let s = Small { x: vec![31], y: vec![19, 1441] };\n+    needs_vec(s.x).await;\n+    s.x\n+    //~^ ERROR use of moved value: `s.x`\n+}\n+\n+struct Small {\n+    x: Vec<usize>,\n+    y: Vec<usize>,\n+}\n+\n+async fn needs_vec(_vec: Vec<usize>) {}"}, {"sha": "121c7791bd98eca4ba7f3f454a976fbe5a4d2fb5", "filename": "src/test/ui/async-await/no-move-across-await-struct.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/051f94d5880f7b8e62eed35701679c24325df5b9/src%2Ftest%2Fui%2Fasync-await%2Fno-move-across-await-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/051f94d5880f7b8e62eed35701679c24325df5b9/src%2Ftest%2Fui%2Fasync-await%2Fno-move-across-await-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-move-across-await-struct.stderr?ref=051f94d5880f7b8e62eed35701679c24325df5b9", "patch": "@@ -0,0 +1,13 @@\n+error[E0382]: use of moved value: `s.x`\n+  --> $DIR/no-move-across-await-struct.rs:10:5\n+   |\n+LL |     needs_vec(s.x).await;\n+   |               --- value moved here\n+LL |     s.x\n+   |     ^^^ value used here after move\n+   |\n+   = note: move occurs because `s.x` has type `std::vec::Vec<usize>`, which does not implement the `Copy` trait\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "5d3ed3da1e31613addcacce3d931be3291f103bb", "filename": "src/test/ui/async-await/no-move-across-await-tuple.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/051f94d5880f7b8e62eed35701679c24325df5b9/src%2Ftest%2Fui%2Fasync-await%2Fno-move-across-await-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/051f94d5880f7b8e62eed35701679c24325df5b9/src%2Ftest%2Fui%2Fasync-await%2Fno-move-across-await-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-move-across-await-tuple.rs?ref=051f94d5880f7b8e62eed35701679c24325df5b9", "patch": "@@ -0,0 +1,15 @@\n+// compile-fail\n+// edition:2018\n+// compile-flags: --crate-type lib\n+\n+#![feature(async_await)]\n+\n+async fn no_move_across_await_tuple() -> Vec<usize> {\n+    let x = (vec![3], vec![4, 4]);\n+    drop(x.1);\n+    nothing().await;\n+    x.1\n+    //~^ ERROR use of moved value: `x.1`\n+}\n+\n+async fn nothing() {}"}, {"sha": "5da037ea5c0b6465b69b2b97f6af32fd53ab9a2e", "filename": "src/test/ui/async-await/no-move-across-await-tuple.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/051f94d5880f7b8e62eed35701679c24325df5b9/src%2Ftest%2Fui%2Fasync-await%2Fno-move-across-await-tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/051f94d5880f7b8e62eed35701679c24325df5b9/src%2Ftest%2Fui%2Fasync-await%2Fno-move-across-await-tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-move-across-await-tuple.stderr?ref=051f94d5880f7b8e62eed35701679c24325df5b9", "patch": "@@ -0,0 +1,14 @@\n+error[E0382]: use of moved value: `x.1`\n+  --> $DIR/no-move-across-await-tuple.rs:11:5\n+   |\n+LL |     drop(x.1);\n+   |          --- value moved here\n+LL |     nothing().await;\n+LL |     x.1\n+   |     ^^^ value used here after move\n+   |\n+   = note: move occurs because `x.1` has type `std::vec::Vec<usize>`, which does not implement the `Copy` trait\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}]}