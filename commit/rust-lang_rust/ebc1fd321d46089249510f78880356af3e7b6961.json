{"sha": "ebc1fd321d46089249510f78880356af3e7b6961", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViYzFmZDMyMWQ0NjA4OTI0OTUxMGY3ODg4MDM1NmFmM2U3YjY5NjE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-08-29T00:30:27Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-09-05T14:37:11Z"}, "message": "rustc: Move crate_disambiguator to queries", "tree": {"sha": "cefe137eea5604874bdddc6128af4dea1e934d0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cefe137eea5604874bdddc6128af4dea1e934d0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebc1fd321d46089249510f78880356af3e7b6961", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebc1fd321d46089249510f78880356af3e7b6961", "html_url": "https://github.com/rust-lang/rust/commit/ebc1fd321d46089249510f78880356af3e7b6961", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebc1fd321d46089249510f78880356af3e7b6961/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d4445f78447887034d9f867d6389bf6dc306a09", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d4445f78447887034d9f867d6389bf6dc306a09", "html_url": "https://github.com/rust-lang/rust/commit/2d4445f78447887034d9f867d6389bf6dc306a09"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "e397ecbed799d3c84ab70b82b1b2ef942361de83", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ebc1fd321d46089249510f78880356af3e7b6961/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc1fd321d46089249510f78880356af3e7b6961/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=ebc1fd321d46089249510f78880356af3e7b6961", "patch": "@@ -539,6 +539,7 @@ define_dep_nodes!( <'tcx>\n     [] NativeLibraries(CrateNum),\n     [] PluginRegistrarFn(CrateNum),\n     [] DeriveRegistrarFn(CrateNum),\n+    [] CrateDisambiguator(CrateNum),\n );\n \n trait DepNodeParams<'a, 'gcx: 'tcx + 'a, 'tcx: 'a> : fmt::Debug {"}, {"sha": "1f05edb86dc5d5ba85eaf35031db0c181b8e98de", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ebc1fd321d46089249510f78880356af3e7b6961/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc1fd321d46089249510f78880356af3e7b6961/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=ebc1fd321d46089249510f78880356af3e7b6961", "patch": "@@ -254,7 +254,6 @@ pub trait CrateStore {\n     /// The name of the crate as it is stored in the crate's metadata.\n     fn original_crate_name(&self, cnum: CrateNum) -> Symbol;\n     fn crate_hash(&self, cnum: CrateNum) -> Svh;\n-    fn crate_disambiguator(&self, cnum: CrateNum) -> Symbol;\n \n     // resolve\n     fn def_key(&self, def: DefId) -> DefKey;\n@@ -355,8 +354,6 @@ impl CrateStore for DummyCrateStore {\n         bug!(\"original_crate_name\")\n     }\n     fn crate_hash(&self, cnum: CrateNum) -> Svh { bug!(\"crate_hash\") }\n-    fn crate_disambiguator(&self, cnum: CrateNum)\n-                           -> Symbol { bug!(\"crate_disambiguator\") }\n \n     // resolve\n     fn def_key(&self, def: DefId) -> DefKey { bug!(\"def_key\") }"}, {"sha": "d5274f47e4af02f16cef4f205f7215881b3b0140", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ebc1fd321d46089249510f78880356af3e7b6961/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc1fd321d46089249510f78880356af3e7b6961/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=ebc1fd321d46089249510f78880356af3e7b6961", "patch": "@@ -925,14 +925,6 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         }\n     }\n \n-    pub fn crate_disambiguator(self, cnum: CrateNum) -> Symbol {\n-        if cnum == LOCAL_CRATE {\n-            self.sess.local_crate_disambiguator()\n-        } else {\n-            self.sess.cstore.crate_disambiguator(cnum)\n-        }\n-    }\n-\n     pub fn alloc_generics(self, generics: ty::Generics) -> &'gcx ty::Generics {\n         self.global_arenas.generics.alloc(generics)\n     }"}, {"sha": "edfe806e613364f0dd2cfcb5c23f9e8ad753db42", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ebc1fd321d46089249510f78880356af3e7b6961/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc1fd321d46089249510f78880356af3e7b6961/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=ebc1fd321d46089249510f78880356af3e7b6961", "patch": "@@ -611,6 +611,12 @@ impl<'tcx> QueryDescription for queries::derive_registrar_fn<'tcx> {\n     }\n }\n \n+impl<'tcx> QueryDescription for queries::crate_disambiguator<'tcx> {\n+    fn describe(_tcx: TyCtxt, _: CrateNum) -> String {\n+        format!(\"looking up the disambiguator a crate\")\n+    }\n+}\n+\n // If enabled, send a message to the profile-queries thread\n macro_rules! profq_msg {\n     ($tcx:expr, $msg:expr) => {\n@@ -1191,6 +1197,7 @@ define_maps! { <'tcx>\n     [] fn native_libraries: NativeLibraries(CrateNum) -> Rc<Vec<NativeLibrary>>,\n     [] fn plugin_registrar_fn: PluginRegistrarFn(CrateNum) -> Option<DefId>,\n     [] fn derive_registrar_fn: DeriveRegistrarFn(CrateNum) -> Option<DefId>,\n+    [] fn crate_disambiguator: CrateDisambiguator(CrateNum) -> Symbol,\n }\n \n fn type_param_predicates<'tcx>((item_id, param_id): (DefId, DefId)) -> DepConstructor<'tcx> {"}, {"sha": "cce07ffefe597762c083eb0a8c461345fcb5cb74", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ebc1fd321d46089249510f78880356af3e7b6961/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc1fd321d46089249510f78880356af3e7b6961/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=ebc1fd321d46089249510f78880356af3e7b6961", "patch": "@@ -2510,6 +2510,12 @@ fn param_env<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     traits::normalize_param_env_or_error(tcx, def_id, unnormalized_env, cause)\n }\n \n+fn crate_disambiguator<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+                                 crate_num: CrateNum) -> Symbol {\n+    assert_eq!(crate_num, LOCAL_CRATE);\n+    tcx.sess.local_crate_disambiguator()\n+}\n+\n pub fn provide(providers: &mut ty::maps::Providers) {\n     util::provide(providers);\n     context::provide(providers);\n@@ -2521,6 +2527,7 @@ pub fn provide(providers: &mut ty::maps::Providers) {\n         def_span,\n         param_env,\n         trait_of_item,\n+        crate_disambiguator,\n         trait_impls_of: trait_def::trait_impls_of_provider,\n         ..*providers\n     };"}, {"sha": "3917318f67cac75684d60f0755e0f605c67515f0", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ebc1fd321d46089249510f78880356af3e7b6961/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc1fd321d46089249510f78880356af3e7b6961/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=ebc1fd321d46089249510f78880356af3e7b6961", "patch": "@@ -175,6 +175,9 @@ provide! { <'tcx> tcx, def_id, cdata,\n             DefId { krate: def_id.krate, index }\n         })\n     }\n+    crate_disambiguator => { cdata.disambiguator() }\n+    crate_hash => { cdata.hash() }\n+    original_crate_name => { cdata.name() }\n }\n \n pub fn provide_local<'tcx>(providers: &mut Providers<'tcx>) {\n@@ -288,11 +291,6 @@ impl CrateStore for cstore::CStore {\n         self.get_crate_hash(cnum)\n     }\n \n-    fn crate_disambiguator(&self, cnum: CrateNum) -> Symbol\n-    {\n-        self.get_crate_data(cnum).disambiguator()\n-    }\n-\n     /// Returns the `DefKey` for a given `DefId`. This indicates the\n     /// parent `DefId` as well as some idea of what kind of data the\n     /// `DefId` refers to."}]}