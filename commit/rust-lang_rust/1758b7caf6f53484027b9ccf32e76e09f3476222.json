{"sha": "1758b7caf6f53484027b9ccf32e76e09f3476222", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NThiN2NhZjZmNTM0ODQwMjdiOWNjZjMyZTc2ZTA5ZjM0NzYyMjI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-08T21:33:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-08T21:33:42Z"}, "message": "Rollup merge of #70828 - ollie27:rustdoc_external_macro_src, r=eddyb\n\nrustdoc: Don't try to load source files from external crates\n\nLocal items defined in external macros shouldn't generate rendered source files and should link to the external crate's docs instead.\n\nPart of #70757\n\nr? @GuillaumeGomez\ncc @eddyb", "tree": {"sha": "59313cfe1d1a9679214214454ef33ce7f4da36e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59313cfe1d1a9679214214454ef33ce7f4da36e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1758b7caf6f53484027b9ccf32e76e09f3476222", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJejkM2CRBK7hj4Ov3rIwAAdHIIAD/3kLNjxPXy6HsFfehMhdsy\n1vOo9sSDT8kgIO8w562ZlToSopDaLY6xGl7ANGU4RKXVpmFwvvaAKn5lP9qP2AsC\n1a7zIDy4xKmZse9Xq79G+djOq9cm5ROiXM3c0E+rUs8W+YfAC92oDvj+0ByhJ1dZ\n1SI9slBL2QYNvk0WyH8ubre4FJZodpLALAOGScvmN1xzlTl3km4CIj5YbWZf/C+Y\nZU4iwNz/wVEISC8QO8HTw5XLUQmhukJ1woDDoFixmqlLkI90a1J8gy5i1+l66Nzy\ngZwqfk+M7k8KQfR3laj/a2GdP8wma5v9cStWDi2xi/Tv+ZvgVkLLvzsVw2uFtQ8=\n=iVfo\n-----END PGP SIGNATURE-----\n", "payload": "tree 59313cfe1d1a9679214214454ef33ce7f4da36e0\nparent 3cae0e479e0b9138be9c53af178bb6eb12dfe9f1\nparent 6f96dc221c53a80f20883d285d55099fbeba15f4\nauthor Dylan DPC <dylan.dpc@gmail.com> 1586381622 +0200\ncommitter GitHub <noreply@github.com> 1586381622 +0200\n\nRollup merge of #70828 - ollie27:rustdoc_external_macro_src, r=eddyb\n\nrustdoc: Don't try to load source files from external crates\n\nLocal items defined in external macros shouldn't generate rendered source files and should link to the external crate's docs instead.\n\nPart of #70757\n\nr? @GuillaumeGomez\ncc @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1758b7caf6f53484027b9ccf32e76e09f3476222", "html_url": "https://github.com/rust-lang/rust/commit/1758b7caf6f53484027b9ccf32e76e09f3476222", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1758b7caf6f53484027b9ccf32e76e09f3476222/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cae0e479e0b9138be9c53af178bb6eb12dfe9f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cae0e479e0b9138be9c53af178bb6eb12dfe9f1", "html_url": "https://github.com/rust-lang/rust/commit/3cae0e479e0b9138be9c53af178bb6eb12dfe9f1"}, {"sha": "6f96dc221c53a80f20883d285d55099fbeba15f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f96dc221c53a80f20883d285d55099fbeba15f4", "html_url": "https://github.com/rust-lang/rust/commit/6f96dc221c53a80f20883d285d55099fbeba15f4"}], "stats": {"total": 54, "additions": 47, "deletions": 7}, "files": [{"sha": "03413f67f88fb2f685f697b47394d44f19888f21", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=1758b7caf6f53484027b9ccf32e76e09f3476222", "patch": "@@ -1936,6 +1936,7 @@ impl Clean<Span> for rustc_span::Span {\n         let hi = sm.lookup_char_pos(self.hi());\n         Span {\n             filename,\n+            cnum: lo.file.cnum,\n             loline: lo.line,\n             locol: lo.col.to_usize(),\n             hiline: hi.line,"}, {"sha": "0a682857b18259fee5ff7398681b35c1c4100fff", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=1758b7caf6f53484027b9ccf32e76e09f3476222", "patch": "@@ -14,7 +14,7 @@ use rustc_ast::util::comments::strip_doc_comment_decoration;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n-use rustc_hir::def_id::{CrateNum, DefId};\n+use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_hir::lang_items;\n use rustc_hir::Mutability;\n use rustc_index::vec::IndexVec;\n@@ -1357,6 +1357,7 @@ pub enum VariantKind {\n #[derive(Clone, Debug)]\n pub struct Span {\n     pub filename: FileName,\n+    pub cnum: CrateNum,\n     pub loline: usize,\n     pub locol: usize,\n     pub hiline: usize,\n@@ -1368,6 +1369,7 @@ impl Span {\n     pub fn empty() -> Span {\n         Span {\n             filename: FileName::Anon(0),\n+            cnum: LOCAL_CRATE,\n             loline: 0,\n             locol: 0,\n             hiline: 0,"}, {"sha": "da020b85ed499cc1be7c48dad8a82968c6b15b77", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=1758b7caf6f53484027b9ccf32e76e09f3476222", "patch": "@@ -47,7 +47,7 @@ use rustc_data_structures::flock;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_feature::UnstableFeatures;\n use rustc_hir as hir;\n-use rustc_hir::def_id::DefId;\n+use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::Mutability;\n use rustc_middle::middle::privacy::AccessLevels;\n use rustc_middle::middle::stability;\n@@ -1623,14 +1623,14 @@ impl Context {\n             _ => return None,\n         };\n \n-        let (krate, path) = if item.def_id.is_local() {\n+        let (krate, path) = if item.source.cnum == LOCAL_CRATE {\n             if let Some(path) = self.shared.local_sources.get(file) {\n                 (&self.shared.layout.krate, path)\n             } else {\n                 return None;\n             }\n         } else {\n-            let (krate, src_root) = match *self.cache.extern_locations.get(&item.def_id.krate)? {\n+            let (krate, src_root) = match *self.cache.extern_locations.get(&item.source.cnum)? {\n                 (ref name, ref src, Local) => (name, src),\n                 (ref name, ref src, Remote(ref s)) => {\n                     root = s.to_string();"}, {"sha": "c5f44baced2e47c3e8f6f9e7f1fc6d98d6a3be05", "filename": "src/librustdoc/html/sources.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fsources.rs?ref=1758b7caf6f53484027b9ccf32e76e09f3476222", "patch": "@@ -5,6 +5,7 @@ use crate::html::format::Buffer;\n use crate::html::highlight;\n use crate::html::layout;\n use crate::html::render::{Error, SharedContext, BASIC_KEYWORDS};\n+use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_span::source_map::FileName;\n use std::ffi::OsStr;\n use std::fs;\n@@ -37,8 +38,8 @@ impl<'a> DocFolder for SourceCollector<'a> {\n         if self.scx.include_sources\n             // skip all synthetic \"files\"\n             && item.source.filename.is_real()\n-            // skip non-local items\n-            && item.def_id.is_local()\n+            // skip non-local files\n+            && item.source.cnum == LOCAL_CRATE\n         {\n             // If it turns out that we couldn't read this file, then we probably\n             // can't read any of the files (generating html output from json or"}, {"sha": "ce20ca5c91e6b79ba5a9dfa6d3d2e209cd295b2c", "filename": "src/test/rustdoc/auxiliary/external-macro-src.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Ftest%2Frustdoc%2Fauxiliary%2Fexternal-macro-src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Ftest%2Frustdoc%2Fauxiliary%2Fexternal-macro-src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fexternal-macro-src.rs?ref=1758b7caf6f53484027b9ccf32e76e09f3476222", "patch": "@@ -0,0 +1,15 @@\n+// compile-flags:--remap-path-prefix={{src-base}}=/does-not-exist\n+\n+#![doc(html_root_url = \"https://example.com/\")]\n+\n+#[macro_export]\n+macro_rules! make_foo {\n+    () => {\n+        pub struct Foo;\n+        impl Foo {\n+            pub fn new() -> Foo {\n+                Foo\n+            }\n+        }\n+    }\n+}"}, {"sha": "4394415e5c76804d490d892f6c7b9c93885d0441", "filename": "src/test/rustdoc/external-macro-src.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Ftest%2Frustdoc%2Fexternal-macro-src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Ftest%2Frustdoc%2Fexternal-macro-src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fexternal-macro-src.rs?ref=1758b7caf6f53484027b9ccf32e76e09f3476222", "patch": "@@ -0,0 +1,15 @@\n+// aux-build:external-macro-src.rs\n+// ignore-tidy-linelength\n+\n+#![crate_name = \"foo\"]\n+\n+#[macro_use]\n+extern crate external_macro_src;\n+\n+// @has foo/index.html '//a[@href=\"../src/foo/external-macro-src.rs.html#4-15\"]' '[src]'\n+\n+// @has foo/struct.Foo.html\n+// @has - '//a[@href=\"https://example.com/src/external_macro_src/external-macro-src.rs.html#8\"]' '[src]'\n+// @has - '//a[@href=\"https://example.com/src/external_macro_src/external-macro-src.rs.html#9-13\"]' '[src]'\n+// @has - '//a[@href=\"https://example.com/src/external_macro_src/external-macro-src.rs.html#10-12\"]' '[src]'\n+make_foo!();"}, {"sha": "c8e9a63ea9f771e2a648ac8afe2c93ffa406e5ce", "filename": "src/test/rustdoc/issue-26606.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Ftest%2Frustdoc%2Fissue-26606.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Ftest%2Frustdoc%2Fissue-26606.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-26606.rs?ref=1758b7caf6f53484027b9ccf32e76e09f3476222", "patch": "@@ -7,5 +7,5 @@\n extern crate issue_26606_macro;\n \n // @has issue_26606/constant.FOO.html\n-// @has - '//a/@href' '../src/issue_26606/auxiliary/issue-26606-macro.rs.html#3'\n+// @has - '//a/@href' '../src/issue_26606_macro/issue-26606-macro.rs.html#3'\n make_item!(FOO);"}, {"sha": "022d81a4dbfca295d9cde463cfc59000dbaf398c", "filename": "src/test/rustdoc/thread-local-src.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Ftest%2Frustdoc%2Fthread-local-src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1758b7caf6f53484027b9ccf32e76e09f3476222/src%2Ftest%2Frustdoc%2Fthread-local-src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fthread-local-src.rs?ref=1758b7caf6f53484027b9ccf32e76e09f3476222", "patch": "@@ -0,0 +1,6 @@\n+#![crate_name = \"foo\"]\n+\n+// @has foo/index.html '//a[@href=\"../src/foo/thread-local-src.rs.html#1-6\"]' '[src]'\n+\n+// @has foo/constant.FOO.html '//a/@href' 'https://doc.rust-lang.org/nightly/src/std/'\n+thread_local!(pub static FOO: bool = false);"}]}