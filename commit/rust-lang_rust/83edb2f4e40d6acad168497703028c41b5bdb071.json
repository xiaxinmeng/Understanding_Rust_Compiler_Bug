{"sha": "83edb2f4e40d6acad168497703028c41b5bdb071", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZWRiMmY0ZTQwZDZhY2FkMTY4NDk3NzAzMDI4YzQxYjViZGIwNzE=", "commit": {"author": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-01T16:57:03Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-04T10:11:31Z"}, "message": "s/Scalar::Raw/Scalar::Int", "tree": {"sha": "ec122dc24f56706320c1d3732940c3ab4a31f76c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec122dc24f56706320c1d3732940c3ab4a31f76c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83edb2f4e40d6acad168497703028c41b5bdb071", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83edb2f4e40d6acad168497703028c41b5bdb071", "html_url": "https://github.com/rust-lang/rust/commit/83edb2f4e40d6acad168497703028c41b5bdb071", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83edb2f4e40d6acad168497703028c41b5bdb071/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fdbde5f46873f63a8d9652562995a7258a834a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fdbde5f46873f63a8d9652562995a7258a834a4", "html_url": "https://github.com/rust-lang/rust/commit/6fdbde5f46873f63a8d9652562995a7258a834a4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c8bbc9ce2b0287e9355350d53c8eea42fbcfd8cc", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83edb2f4e40d6acad168497703028c41b5bdb071/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83edb2f4e40d6acad168497703028c41b5bdb071/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=83edb2f4e40d6acad168497703028c41b5bdb071", "patch": "@@ -503,7 +503,7 @@ impl<'a, 'tcx> ConstEvalLateContext<'a, 'tcx> {\n pub fn miri_to_const(result: &ty::Const<'_>) -> Option<Constant> {\n     use rustc_middle::mir::interpret::{ConstValue};\n     match result.val {\n-        ty::ConstKind::Value(ConstValue::Scalar(Scalar::Raw(int))) => {\n+        ty::ConstKind::Value(ConstValue::Scalar(Scalar::Int(int))) => {\n             match result.ty.kind() {\n                 ty::Bool => Some(Constant::Bool(int == ScalarInt::TRUE)),\n                 ty::Uint(_) | ty::Int(_) => Some(Constant::Int(int.assert_bits(int.size()))),"}]}