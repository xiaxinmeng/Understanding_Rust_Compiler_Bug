{"sha": "f506656876d445eb64c00721ca39007d08480e65", "node_id": "C_kwDOAAsO6NoAKGY1MDY2NTY4NzZkNDQ1ZWI2NGMwMDcyMWNhMzkwMDdkMDg0ODBlNjU", "commit": {"author": {"name": "Thom Chiovoloni", "email": "thom@shift.click", "date": "2022-08-19T23:02:48Z"}, "committer": {"name": "Thom Chiovoloni", "email": "thom@shift.click", "date": "2022-08-19T23:02:48Z"}, "message": "Align android `sigaddset` impl with the reference impl from Bionic", "tree": {"sha": "5704c9d4bd1c2ed014ee9433eef7efe411816629", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5704c9d4bd1c2ed014ee9433eef7efe411816629"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f506656876d445eb64c00721ca39007d08480e65", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQQszICQ1r0Zqrp7OLPXcz0dendfCgUCYwAWmAAKCRDXcz0dendf\nCgK9AP498zgWx/9ksn4L9K7scMzU6NCJ90+574Y3qxTa1jOlVQD/cVC1ZrYDdgey\nbNxAXhwuy6omhAY5/Et0/awfzw9h6Ag=\n=XNWH\n-----END PGP SIGNATURE-----", "payload": "tree 5704c9d4bd1c2ed014ee9433eef7efe411816629\nparent 8064a495086c2e63c0ef77e8e82fe3b9b5dc535f\nauthor Thom Chiovoloni <thom@shift.click> 1660950168 -0700\ncommitter Thom Chiovoloni <thom@shift.click> 1660950168 -0700\n\nAlign android `sigaddset` impl with the reference impl from Bionic\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f506656876d445eb64c00721ca39007d08480e65", "html_url": "https://github.com/rust-lang/rust/commit/f506656876d445eb64c00721ca39007d08480e65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f506656876d445eb64c00721ca39007d08480e65/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8064a495086c2e63c0ef77e8e82fe3b9b5dc535f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8064a495086c2e63c0ef77e8e82fe3b9b5dc535f", "html_url": "https://github.com/rust-lang/rust/commit/8064a495086c2e63c0ef77e8e82fe3b9b5dc535f"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "6ef02e2df775b680e76ae6c80068c193e824d245", "filename": "library/std/src/sys/unix/process/process_common.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f506656876d445eb64c00721ca39007d08480e65/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f506656876d445eb64c00721ca39007d08480e65/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs?ref=f506656876d445eb64c00721ca39007d08480e65", "patch": "@@ -45,11 +45,31 @@ cfg_if::cfg_if! {\n         }\n         #[allow(dead_code)]\n         pub unsafe fn sigaddset(set: *mut libc::sigset_t, signum: libc::c_int) -> libc::c_int {\n-            use crate::{slice, mem};\n+            use crate::{\n+                mem::{align_of, size_of},\n+                slice,\n+            };\n+            use libc::{c_ulong, sigset_t};\n+\n+            // The implementations from bionic (android libc) type pun `sigset_t` as an\n+            // array of `c_ulong`. This works, but lets add a smoke check to make sure\n+            // that doesn't change.\n+            const _: () = assert!(\n+                align_of::<c_ulong>() == align_of::<sigset_t>()\n+                    && (size_of::<sigset_t>() % size_of::<c_ulong>()) == 0\n+            );\n \n-            let raw = slice::from_raw_parts_mut(set as *mut u8, mem::size_of::<libc::sigset_t>());\n             let bit = (signum - 1) as usize;\n-            raw[bit / 8] |= 1 << (bit % 8);\n+            if set.is_null() || bit < 0 || bit >= (8 * size_of::<sigset_t>()) {\n+                crate::sys::unix::os::set_errno(libc::EINVAL);\n+                return -1;\n+            }\n+            let raw = slice::from_raw_parts_mut(\n+                set as *mut c_ulong,\n+                size_of::<sigset_t>() / size_of::<c_ulong>(),\n+            );\n+            const LONG_BIT: usize = size_of::<c_ulong>() * 8;\n+            raw[bit / LONG_BIT] |= 1 << (bit % LONG_BIT);\n             return 0;\n         }\n     } else {"}]}