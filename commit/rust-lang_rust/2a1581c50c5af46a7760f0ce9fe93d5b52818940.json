{"sha": "2a1581c50c5af46a7760f0ce9fe93d5b52818940", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMTU4MWM1MGM1YWY0NmE3NzYwZjBjZTlmZTkzZDViNTI4MTg5NDA=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-12T09:41:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-12T09:41:05Z"}, "message": "Rollup merge of #71737 - RalfJung:miri-test-threads, r=shepmaster\n\nMiri: run liballoc tests with threads\n\nMiri now supports threads, so we can run these tests. :)", "tree": {"sha": "f0e74277bd214aa447f622f34db058d4bbf6dfb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0e74277bd214aa447f622f34db058d4bbf6dfb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a1581c50c5af46a7760f0ce9fe93d5b52818940", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeum8zCRBK7hj4Ov3rIwAAdHIIAF916IKtk0oW90NbV+7YLBfr\nZmJen1pG/N3pTxFr9/vS2CCwqS+3Dkfs6eNXB2AH8eSi5Rlr3DMPmJ6zgEFS3t70\n4kzoQbCSMPWWJlBbN4wLn0KTP++5naZ+APbFuTl8mrWth0Z+ebgSQj+00giAv5Uy\nWywjqSFeYKIGWLzcZav0FxYhPR9qkLuWvO4Tew99MZ0nz8reFoM1+wEInqU56/4b\nPbokoR35mOTBFrQzQQ/o7SpTRi5wU07nEuOfPAar4PQEWAd8jKYPXVfp/ND1kAcH\nm0y8Xzw0LVZfOLDZ289GKVnrXYmhXwnq4Grc+fxIt6rl/ZCm2t3kL1X197VrJo8=\n=KqFl\n-----END PGP SIGNATURE-----\n", "payload": "tree f0e74277bd214aa447f622f34db058d4bbf6dfb1\nparent 09c817eeb29e764cfc12d0a8d94841e3ffe34023\nparent 7bea58eeac3a5a5280810623f06eadb3a8b891a3\nauthor Dylan DPC <dylan.dpc@gmail.com> 1589276465 +0200\ncommitter GitHub <noreply@github.com> 1589276465 +0200\n\nRollup merge of #71737 - RalfJung:miri-test-threads, r=shepmaster\n\nMiri: run liballoc tests with threads\n\nMiri now supports threads, so we can run these tests. :)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a1581c50c5af46a7760f0ce9fe93d5b52818940", "html_url": "https://github.com/rust-lang/rust/commit/2a1581c50c5af46a7760f0ce9fe93d5b52818940", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a1581c50c5af46a7760f0ce9fe93d5b52818940/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09c817eeb29e764cfc12d0a8d94841e3ffe34023", "url": "https://api.github.com/repos/rust-lang/rust/commits/09c817eeb29e764cfc12d0a8d94841e3ffe34023", "html_url": "https://github.com/rust-lang/rust/commit/09c817eeb29e764cfc12d0a8d94841e3ffe34023"}, {"sha": "7bea58eeac3a5a5280810623f06eadb3a8b891a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bea58eeac3a5a5280810623f06eadb3a8b891a3", "html_url": "https://github.com/rust-lang/rust/commit/7bea58eeac3a5a5280810623f06eadb3a8b891a3"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "1c003983df9892a1c13aef1d7796a9ad36594559", "filename": "src/liballoc/alloc/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a1581c50c5af46a7760f0ce9fe93d5b52818940/src%2Fliballoc%2Falloc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a1581c50c5af46a7760f0ce9fe93d5b52818940/src%2Fliballoc%2Falloc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Falloc%2Ftests.rs?ref=2a1581c50c5af46a7760f0ce9fe93d5b52818940", "patch": "@@ -23,7 +23,7 @@ fn allocate_zeroed() {\n }\n \n #[bench]\n-#[cfg_attr(miri, ignore)] // Miri does not support benchmarks\n+#[cfg_attr(miri, ignore)] // isolated Miri does not support benchmarks\n fn alloc_owned_small(b: &mut Bencher) {\n     b.iter(|| {\n         let _: Box<_> = box 10;"}, {"sha": "b8c93a28bba815a1bfa38fea9a49e581a335c13f", "filename": "src/liballoc/collections/linked_list/tests.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2a1581c50c5af46a7760f0ce9fe93d5b52818940/src%2Fliballoc%2Fcollections%2Flinked_list%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a1581c50c5af46a7760f0ce9fe93d5b52818940/src%2Fliballoc%2Fcollections%2Flinked_list%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Flinked_list%2Ftests.rs?ref=2a1581c50c5af46a7760f0ce9fe93d5b52818940", "patch": "@@ -182,7 +182,6 @@ fn test_insert_prev() {\n \n #[test]\n #[cfg_attr(target_os = \"emscripten\", ignore)]\n-#[cfg_attr(miri, ignore)] // Miri does not support threads\n fn test_send() {\n     let n = list_from(&[1, 2, 3]);\n     thread::spawn(move || {"}, {"sha": "fc2ec7908e82368e5c667a847a1abc2ab8a6765b", "filename": "src/liballoc/collections/vec_deque/tests.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2a1581c50c5af46a7760f0ce9fe93d5b52818940/src%2Fliballoc%2Fcollections%2Fvec_deque%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a1581c50c5af46a7760f0ce9fe93d5b52818940/src%2Fliballoc%2Fcollections%2Fvec_deque%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque%2Ftests.rs?ref=2a1581c50c5af46a7760f0ce9fe93d5b52818940", "patch": "@@ -3,7 +3,7 @@ use super::*;\n use test;\n \n #[bench]\n-#[cfg_attr(miri, ignore)] // Miri does not support benchmarks\n+#[cfg_attr(miri, ignore)] // isolated Miri does not support benchmarks\n fn bench_push_back_100(b: &mut test::Bencher) {\n     let mut deq = VecDeque::with_capacity(101);\n     b.iter(|| {\n@@ -16,7 +16,7 @@ fn bench_push_back_100(b: &mut test::Bencher) {\n }\n \n #[bench]\n-#[cfg_attr(miri, ignore)] // Miri does not support benchmarks\n+#[cfg_attr(miri, ignore)] // isolated Miri does not support benchmarks\n fn bench_push_front_100(b: &mut test::Bencher) {\n     let mut deq = VecDeque::with_capacity(101);\n     b.iter(|| {\n@@ -29,7 +29,7 @@ fn bench_push_front_100(b: &mut test::Bencher) {\n }\n \n #[bench]\n-#[cfg_attr(miri, ignore)] // Miri does not support benchmarks\n+#[cfg_attr(miri, ignore)] // isolated Miri does not support benchmarks\n fn bench_pop_back_100(b: &mut test::Bencher) {\n     let mut deq = VecDeque::<i32>::with_capacity(101);\n \n@@ -43,7 +43,7 @@ fn bench_pop_back_100(b: &mut test::Bencher) {\n }\n \n #[bench]\n-#[cfg_attr(miri, ignore)] // Miri does not support benchmarks\n+#[cfg_attr(miri, ignore)] // isolated Miri does not support benchmarks\n fn bench_pop_front_100(b: &mut test::Bencher) {\n     let mut deq = VecDeque::<i32>::with_capacity(101);\n "}, {"sha": "a2bb651e2b77804397d0e88fea8955cacee86d5b", "filename": "src/liballoc/sync/tests.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2a1581c50c5af46a7760f0ce9fe93d5b52818940/src%2Fliballoc%2Fsync%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a1581c50c5af46a7760f0ce9fe93d5b52818940/src%2Fliballoc%2Fsync%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync%2Ftests.rs?ref=2a1581c50c5af46a7760f0ce9fe93d5b52818940", "patch": "@@ -32,7 +32,6 @@ impl Drop for Canary {\n \n #[test]\n #[cfg_attr(target_os = \"emscripten\", ignore)]\n-#[cfg_attr(miri, ignore)] // Miri does not support threads\n fn manually_share_arc() {\n     let v = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n     let arc_v = Arc::new(v);\n@@ -337,12 +336,13 @@ fn test_ptr_eq() {\n \n #[test]\n #[cfg_attr(target_os = \"emscripten\", ignore)]\n-#[cfg_attr(miri, ignore)] // Miri does not support threads\n fn test_weak_count_locked() {\n     let mut a = Arc::new(atomic::AtomicBool::new(false));\n     let a2 = a.clone();\n     let t = thread::spawn(move || {\n-        for _i in 0..1000000 {\n+        // Miri is too slow\n+        let count = if cfg!(miri) { 1000 } else { 1000000 };\n+        for _i in 0..count {\n             Arc::get_mut(&mut a);\n         }\n         a.store(true, SeqCst);\n@@ -351,6 +351,8 @@ fn test_weak_count_locked() {\n     while !a2.load(SeqCst) {\n         let n = Arc::weak_count(&a2);\n         assert!(n < 2, \"bad weak count: {}\", n);\n+        #[cfg(miri)] // Miri's scheduler does not guarantee liveness, and thus needs this hint.\n+        atomic::spin_loop_hint();\n     }\n     t.join().unwrap();\n }"}]}