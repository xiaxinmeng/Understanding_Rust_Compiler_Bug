{"sha": "a80559f472d9baa4d22359a400d5c0f5852e548d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MDU1OWY0NzJkOWJhYTRkMjIzNTlhNDAwZDVjMGY1ODUyZTU0OGQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-16T18:18:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-16T18:18:50Z"}, "message": "Rollup merge of #74221 - oli-obk:const_prop_ice, r=wesleywiser\n\nDon't panic if the lhs of a div by zero is not statically known\n\nFixes #73993 for real this time\n\nr? @wesleywiser", "tree": {"sha": "d3b72b3230a8287e11fb602018d9b4e1d3defbd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3b72b3230a8287e11fb602018d9b4e1d3defbd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a80559f472d9baa4d22359a400d5c0f5852e548d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfEJoKCRBK7hj4Ov3rIwAAdHIIACXIO2ryAg49m84LKFltld9S\nwEo/JrK70nSPxv8cuOQyo7HaZCRSTxRizSXxnEORbA5vNdsI7iALuWwGqY8H0yz4\n+00mFxdq8YLnEP22YUuR5AfdshG8IxLaRMfEIpouA5DiCyj5p50XfR+QqjmaPc33\nBZUVUTA7Ea8S/2xgixQoYn+Ui/Jm53qRGK4R9z6A3MqogfuMpI/7rZkHZMCNXuUu\niGqKMqBaCgrlldBWR5Ef1PJXTphjiAuxinoXF5RspfRa5kKege+7J5hRi+fmKwQp\nkPko3/dfQQ/3X/O9DhH3jO5+1j+RFy1v1UgZW3tt0lxPSacjpqF2DPPWD3estq8=\n=nMEP\n-----END PGP SIGNATURE-----\n", "payload": "tree d3b72b3230a8287e11fb602018d9b4e1d3defbd7\nparent 5d5455bf3da2722749cf3361b42eac16e27d42cc\nparent 703f6803db4b2014486a1c7230bc965fd75a672e\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594923530 -0700\ncommitter GitHub <noreply@github.com> 1594923530 -0700\n\nRollup merge of #74221 - oli-obk:const_prop_ice, r=wesleywiser\n\nDon't panic if the lhs of a div by zero is not statically known\n\nFixes #73993 for real this time\n\nr? @wesleywiser\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a80559f472d9baa4d22359a400d5c0f5852e548d", "html_url": "https://github.com/rust-lang/rust/commit/a80559f472d9baa4d22359a400d5c0f5852e548d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a80559f472d9baa4d22359a400d5c0f5852e548d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d5455bf3da2722749cf3361b42eac16e27d42cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d5455bf3da2722749cf3361b42eac16e27d42cc", "html_url": "https://github.com/rust-lang/rust/commit/5d5455bf3da2722749cf3361b42eac16e27d42cc"}, {"sha": "703f6803db4b2014486a1c7230bc965fd75a672e", "url": "https://api.github.com/repos/rust-lang/rust/commits/703f6803db4b2014486a1c7230bc965fd75a672e", "html_url": "https://github.com/rust-lang/rust/commit/703f6803db4b2014486a1c7230bc965fd75a672e"}], "stats": {"total": 51, "additions": 42, "deletions": 9}, "files": [{"sha": "237a5a64f8bf851cc600a24ff2f782d48c3dd6b8", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a80559f472d9baa4d22359a400d5c0f5852e548d/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a80559f472d9baa4d22359a400d5c0f5852e548d/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=a80559f472d9baa4d22359a400d5c0f5852e548d", "patch": "@@ -484,7 +484,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n         lint: &'static lint::Lint,\n         source_info: SourceInfo,\n         message: &'static str,\n-        panic: AssertKind<ConstInt>,\n+        panic: AssertKind<impl std::fmt::Debug>,\n     ) -> Option<()> {\n         let lint_root = self.lint_root(source_info)?;\n         self.tcx.struct_span_lint_hir(lint, lint_root, source_info.span, |lint| {\n@@ -1004,11 +1004,27 @@ impl<'mir, 'tcx> MutVisitor<'tcx> for ConstPropagator<'mir, 'tcx> {\n                     let expected = ScalarMaybeUninit::from(Scalar::from_bool(*expected));\n                     let value_const = self.ecx.read_scalar(value).unwrap();\n                     if expected != value_const {\n+                        enum DbgVal<T> {\n+                            Val(T),\n+                            Underscore,\n+                        }\n+                        impl<T: std::fmt::Debug> std::fmt::Debug for DbgVal<T> {\n+                            fn fmt(&self, fmt: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+                                match self {\n+                                    Self::Val(val) => val.fmt(fmt),\n+                                    Self::Underscore => fmt.write_str(\"_\"),\n+                                }\n+                            }\n+                        }\n                         let mut eval_to_int = |op| {\n-                            let op = self\n-                                .eval_operand(op, source_info)\n-                                .expect(\"if we got here, it must be const\");\n-                            self.ecx.read_immediate(op).unwrap().to_const_int()\n+                            // This can be `None` if the lhs wasn't const propagated and we just\n+                            // triggered the assert on the value of the rhs.\n+                            match self.eval_operand(op, source_info) {\n+                                Some(op) => {\n+                                    DbgVal::Val(self.ecx.read_immediate(op).unwrap().to_const_int())\n+                                }\n+                                None => DbgVal::Underscore,\n+                            }\n                         };\n                         let msg = match msg {\n                             AssertKind::DivisionByZero(op) => {"}, {"sha": "d19cf00eb9ce4e71ac35985fd6c14a9d99fdd47f", "filename": "src/test/ui/const_prop/ice-assert-fail-div-by-zero.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a80559f472d9baa4d22359a400d5c0f5852e548d/src%2Ftest%2Fui%2Fconst_prop%2Fice-assert-fail-div-by-zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a80559f472d9baa4d22359a400d5c0f5852e548d/src%2Ftest%2Fui%2Fconst_prop%2Fice-assert-fail-div-by-zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst_prop%2Fice-assert-fail-div-by-zero.rs?ref=a80559f472d9baa4d22359a400d5c0f5852e548d", "patch": "@@ -1,9 +1,12 @@\n // check-pass\n \n+// compile-flags: --crate-type lib\n+\n+#![warn(unconditional_panic)]\n+\n pub struct Fixed64(i64);\n \n-pub fn div(f: Fixed64) {\n-    f.0 / 0;\n+// HACK: this test passes only because this is a const fn that is written to metadata\n+pub const fn div(f: Fixed64) {\n+    f.0 / 0; //~ WARN will panic at runtime\n }\n-\n-fn main() {}"}, {"sha": "e2a3e4db8abd109edcc5e791a9c2bd2f0a456d84", "filename": "src/test/ui/const_prop/ice-assert-fail-div-by-zero.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a80559f472d9baa4d22359a400d5c0f5852e548d/src%2Ftest%2Fui%2Fconst_prop%2Fice-assert-fail-div-by-zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a80559f472d9baa4d22359a400d5c0f5852e548d/src%2Ftest%2Fui%2Fconst_prop%2Fice-assert-fail-div-by-zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst_prop%2Fice-assert-fail-div-by-zero.stderr?ref=a80559f472d9baa4d22359a400d5c0f5852e548d", "patch": "@@ -0,0 +1,14 @@\n+warning: this operation will panic at runtime\n+  --> $DIR/ice-assert-fail-div-by-zero.rs:11:5\n+   |\n+LL |     f.0 / 0;\n+   |     ^^^^^^^ attempt to divide _ by zero\n+   |\n+note: the lint level is defined here\n+  --> $DIR/ice-assert-fail-div-by-zero.rs:5:9\n+   |\n+LL | #![warn(unconditional_panic)]\n+   |         ^^^^^^^^^^^^^^^^^^^\n+\n+warning: 1 warning emitted\n+"}]}