{"sha": "190a6c41cf2afdb11e81545846f2639ee96998e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MGE2YzQxY2YyYWZkYjExZTgxNTQ1ODQ2ZjI2MzllZTk2OTk4ZTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-24T20:59:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-24T20:59:15Z"}, "message": "Auto merge of #50096 - alexcrichton:less-simd-warnings, r=michaelwoerister\n\nTweak some warnings around #[target_feature]\n\nThis commit fixes up some issues discovered when getting the `stdsimd` crate's CI compiling again.", "tree": {"sha": "d93609e13545a6e8fe91850ed9f10ff7601faa30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d93609e13545a6e8fe91850ed9f10ff7601faa30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/190a6c41cf2afdb11e81545846f2639ee96998e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/190a6c41cf2afdb11e81545846f2639ee96998e8", "html_url": "https://github.com/rust-lang/rust/commit/190a6c41cf2afdb11e81545846f2639ee96998e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/190a6c41cf2afdb11e81545846f2639ee96998e8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5203d1073a774e01ae0c57ebb561648a8fd9910", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5203d1073a774e01ae0c57ebb561648a8fd9910", "html_url": "https://github.com/rust-lang/rust/commit/f5203d1073a774e01ae0c57ebb561648a8fd9910"}, {"sha": "81a643731d987aa320c936110326ab9dfe812bd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/81a643731d987aa320c936110326ab9dfe812bd0", "html_url": "https://github.com/rust-lang/rust/commit/81a643731d987aa320c936110326ab9dfe812bd0"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "a1eb043995abaa2939c135e3868b18f80e19960b", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/190a6c41cf2afdb11e81545846f2639ee96998e8/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/190a6c41cf2afdb11e81545846f2639ee96998e8/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=190a6c41cf2afdb11e81545846f2639ee96998e8", "patch": "@@ -1682,6 +1682,7 @@ fn is_foreign_item<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n fn from_target_feature(\n     tcx: TyCtxt,\n+    id: DefId,\n     attr: &ast::Attribute,\n     whitelist: &FxHashMap<String, Option<String>>,\n     target_features: &mut Vec<Symbol>,\n@@ -1752,7 +1753,7 @@ fn from_target_feature(\n                 Some(name) => bug!(\"unknown target feature gate {}\", name),\n                 None => true,\n             };\n-            if !allowed {\n+            if !allowed && id.is_local() {\n                 feature_gate::emit_feature_err(\n                     &tcx.sess.parse_sess,\n                     feature_gate.as_ref().unwrap(),\n@@ -1877,7 +1878,7 @@ fn trans_fn_attrs<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, id: DefId) -> TransFnAt\n                            `unsafe` function\";\n                 tcx.sess.span_err(attr.span, msg);\n             }\n-            from_target_feature(tcx, attr, &whitelist, &mut trans_fn_attrs.target_features);\n+            from_target_feature(tcx, id, attr, &whitelist, &mut trans_fn_attrs.target_features);\n         } else if attr.check_name(\"linkage\") {\n             if let Some(val) = attr.value_str() {\n                 trans_fn_attrs.linkage = Some(linkage_by_name(tcx, id, &val.as_str()));"}, {"sha": "39ddb13d347889dbe647fa28cde7e685687f734c", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/190a6c41cf2afdb11e81545846f2639ee96998e8/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/190a6c41cf2afdb11e81545846f2639ee96998e8/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=190a6c41cf2afdb11e81545846f2639ee96998e8", "patch": "@@ -936,7 +936,7 @@ pub const BUILTIN_ATTRIBUTES: &'static [(&'static str, AttributeType, AttributeG\n                                  \"the `#[naked]` attribute \\\n                                   is an experimental feature\",\n                                  cfg_fn!(naked_functions))),\n-    (\"target_feature\", Normal, Ungated),\n+    (\"target_feature\", Whitelisted, Ungated),\n     (\"export_name\", Whitelisted, Ungated),\n     (\"inline\", Whitelisted, Ungated),\n     (\"link\", Whitelisted, Ungated),"}, {"sha": "8b7d0332fe97578fd63d293ac08c91355aad6e80", "filename": "src/test/run-pass/auxiliary/using-target-feature-unstable.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/190a6c41cf2afdb11e81545846f2639ee96998e8/src%2Ftest%2Frun-pass%2Fauxiliary%2Fusing-target-feature-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/190a6c41cf2afdb11e81545846f2639ee96998e8/src%2Ftest%2Frun-pass%2Fauxiliary%2Fusing-target-feature-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauxiliary%2Fusing-target-feature-unstable.rs?ref=190a6c41cf2afdb11e81545846f2639ee96998e8", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(mmx_target_feature)]\n+\n+#[inline]\n+#[target_feature(enable = \"mmx\")]\n+pub unsafe fn foo() {}"}, {"sha": "614c8d4e1d477f0478bde703967be8a6f695d110", "filename": "src/test/run-pass/using-target-feature-unstable.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/190a6c41cf2afdb11e81545846f2639ee96998e8/src%2Ftest%2Frun-pass%2Fusing-target-feature-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/190a6c41cf2afdb11e81545846f2639ee96998e8/src%2Ftest%2Frun-pass%2Fusing-target-feature-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fusing-target-feature-unstable.rs?ref=190a6c41cf2afdb11e81545846f2639ee96998e8", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// only-x86_64\n+// aux-build:using-target-feature-unstable.rs\n+\n+extern crate using_target_feature_unstable;\n+\n+fn main() {\n+    unsafe {\n+        using_target_feature_unstable::foo();\n+    }\n+}"}]}