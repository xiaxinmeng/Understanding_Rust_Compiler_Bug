{"sha": "e77258322c71091afe23ecb64461243174e7fd49", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3NzI1ODMyMmM3MTA5MWFmZTIzZWNiNjQ0NjEyNDMxNzRlN2ZkNDk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-30T10:48:34Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-02T15:04:31Z"}, "message": "some error classes should be impossible", "tree": {"sha": "68c7c65f31ddb92d36eea0d9012e896fbfce4e3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68c7c65f31ddb92d36eea0d9012e896fbfce4e3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e77258322c71091afe23ecb64461243174e7fd49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e77258322c71091afe23ecb64461243174e7fd49", "html_url": "https://github.com/rust-lang/rust/commit/e77258322c71091afe23ecb64461243174e7fd49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e77258322c71091afe23ecb64461243174e7fd49/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1cde6d80b9bef9808832b5b7ea322925c04fe5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1cde6d80b9bef9808832b5b7ea322925c04fe5b", "html_url": "https://github.com/rust-lang/rust/commit/f1cde6d80b9bef9808832b5b7ea322925c04fe5b"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "17c0d52b00b9bf0a02ab0b04cf206ff2309eee5a", "filename": "src/eval.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e77258322c71091afe23ecb64461243174e7fd49/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77258322c71091afe23ecb64461243174e7fd49/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=e77258322c71091afe23ecb64461243174e7fd49", "patch": "@@ -217,6 +217,8 @@ pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) ->\n                 }\n                 err_unsup!(NoMirFor(..)) =>\n                     format!(\"{}. Did you set `MIRI_SYSROOT` to a Miri-enabled sysroot? You can prepare one with `cargo miri setup`.\", e),\n+                InterpError::Panic(_) | InterpError::InvalidProgram(_) =>\n+                    bug!(\"This error should be impossible in Miri: {}\", e),\n                 _ => e.to_string()\n             };\n             e.print_backtrace();"}]}