{"sha": "6959d03a3aab11515acb5ca2f0e3e5940b451dee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NTlkMDNhM2FhYjExNTE1YWNiNWNhMmYwZTNlNTk0MGI0NTFkZWU=", "commit": {"author": {"name": "Ayaz Hafiz", "email": "ayaz.hafiz.1@gmail.com", "date": "2020-06-01T00:12:09Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-08-18T02:55:26Z"}, "message": "Show configs from different versions on github pages\n\nSee https://gushiermainecoon.htmlpasta.com/ for a demo of this change.\n\nPart of #4178", "tree": {"sha": "15e24030f17d952a249990f782db77b6379eb13a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15e24030f17d952a249990f782db77b6379eb13a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6959d03a3aab11515acb5ca2f0e3e5940b451dee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6959d03a3aab11515acb5ca2f0e3e5940b451dee", "html_url": "https://github.com/rust-lang/rust/commit/6959d03a3aab11515acb5ca2f0e3e5940b451dee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6959d03a3aab11515acb5ca2f0e3e5940b451dee/comments", "author": {"login": "ayazhafiz", "id": 20735482, "node_id": "MDQ6VXNlcjIwNzM1NDgy", "avatar_url": "https://avatars.githubusercontent.com/u/20735482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayazhafiz", "html_url": "https://github.com/ayazhafiz", "followers_url": "https://api.github.com/users/ayazhafiz/followers", "following_url": "https://api.github.com/users/ayazhafiz/following{/other_user}", "gists_url": "https://api.github.com/users/ayazhafiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayazhafiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayazhafiz/subscriptions", "organizations_url": "https://api.github.com/users/ayazhafiz/orgs", "repos_url": "https://api.github.com/users/ayazhafiz/repos", "events_url": "https://api.github.com/users/ayazhafiz/events{/privacy}", "received_events_url": "https://api.github.com/users/ayazhafiz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "667a2da7af0ed32361f1ea195f7a42911a54f1a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/667a2da7af0ed32361f1ea195f7a42911a54f1a8", "html_url": "https://github.com/rust-lang/rust/commit/667a2da7af0ed32361f1ea195f7a42911a54f1a8"}], "stats": {"total": 102, "additions": 65, "deletions": 37}, "files": [{"sha": "49435e6ab368375fe527adf56e0142c79a43ecf4", "filename": "docs/index.html", "status": "modified", "additions": 65, "deletions": 37, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/6959d03a3aab11515acb5ca2f0e3e5940b451dee/docs%2Findex.html", "raw_url": "https://github.com/rust-lang/rust/raw/6959d03a3aab11515acb5ca2f0e3e5940b451dee/docs%2Findex.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Findex.html?ref=6959d03a3aab11515acb5ca2f0e3e5940b451dee", "patch": "@@ -5,6 +5,7 @@\n       <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/3.0.1/github-markdown.css\" />\n       <script src=\"https://cdn.jsdelivr.net/npm/marked/marked.min.js\"></script>\n       <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.js\"></script>\n+      <script src=\"https://unpkg.com/vue-async-computed@3.8.1\"></script>\n       <script src=\"https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js\"></script>\n       <style>\n         @media (max-width: 767px) {\n@@ -59,60 +60,87 @@\n                   <label for=\"stable\">stable: </label>\n                   <input type=\"checkbox\" id=\"stable\" v-model=\"shouldStable\">\n               </div>\n+              <div>\n+                  <label for=\"version\">version: </label>\n+                  <select name=\"version\" id=\"version\" v-model=\"version\">\n+                    <option v-for=\"option in versionOptions\" v-bind:value=\"option\">\n+                      {{ option }}\n+                    </option>\n+                  </select>\n+              </div>\n             </div>\n             <div v-html=\"aboutHtml\"></div>\n             <div v-html=\"configurationAboutHtml\"></div>\n             <div v-html=\"outputHtml\"></div>\n           </article>\n         </div>\n         <script>\n-            const ConfigurationMdUrl = 'https://raw.githubusercontent.com/rust-lang/rustfmt/master/Configurations.md';\n+            const MajorVersionBounds = {min: 1, max: 2};\n+            const RusfmtTagsUrl = 'https://api.github.com/repos/rust-lang/rustfmt/tags';\n             const UrlHash = window.location.hash.replace(/^#/, '');\n             new Vue({\n               el: '#app',\n-              data() {\n-                const configurationDescriptions = [];\n-                configurationDescriptions.links = {};\n-                return {\n-                  aboutHtml: '',\n-                  configurationAboutHtml: '',\n-                  searchCondition: UrlHash,\n-                  configurationDescriptions,\n-                  shouldStable: false\n-                }\n+              data: {\n+                aboutHtml: '',\n+                configurationAboutHtml: '',\n+                configurationDescriptions: [],\n+                searchCondition: UrlHash,\n+                shouldStable: false,\n+                version: 'master',\n+                oldVersion: undefined,\n+                versionOptions: ['master']\n               },\n-              computed: {\n-                outputHtml() {\n-                  const ast = this.configurationDescriptions\n-                                  .filter(({ head, text, stable }) => {\n+              asyncComputed: {\n+                async outputHtml() {\n+                  if (this.version !== this.oldVersion) {\n+                    const ConfigurationMdUrl =\n+                      `https://raw.githubusercontent.com/rust-lang/rustfmt/${this.version}/Configurations.md`;\n+                    const res = await axios.get(ConfigurationMdUrl);\n+                    const {\n+                      about,\n+                      configurationAbout,\n+                      configurationDescriptions\n+                    } = parseMarkdownAst(res.data);\n+                    this.aboutHtml = marked.parser(about);\n+                    this.configurationAboutHtml = marked.parser(configurationAbout);\n+                    this.configurationDescriptions = configurationDescriptions;\n+                    this.oldVersion = this.version;\n+                  }\n \n-                                    if (\n-                                      text.includes(this.searchCondition) === false &&\n-                                      head.includes(this.searchCondition) === false\n-                                    ) {\n-                                      return false;\n-                                    }\n-                                    return (this.shouldStable)\n-                                      ? stable === true\n-                                      : true;\n-                                  })\n-                                  .reduce((stack, { value }) => {\n-                                    return stack.concat(value);\n-                                  }, []);\n+                  const ast = this.configurationDescriptions\n+                      .filter(({ head, text, stable }) => {\n+                        if (text.includes(this.searchCondition) === false &&\n+                          head.includes(this.searchCondition) === false) {\n+                          return false;\n+                        }\n+                        return (this.shouldStable)\n+                          ? stable === true\n+                          : true;\n+                      })\n+                      .reduce((stack, { value }) => {\n+                        return stack.concat(value);\n+                      }, []);\n                   ast.links = {};\n                   return marked.parser(ast);\n                 }\n               },\n               created: async function() {\n-                const res = await axios.get(ConfigurationMdUrl);\n-                const {\n-                  about,\n-                  configurationAbout,\n-                  configurationDescriptions\n-                } = parseMarkdownAst(res.data);\n-                this.aboutHtml = marked.parser(about);\n-                this.configurationAboutHtml = marked.parser(configurationAbout);\n-                this.configurationDescriptions = configurationDescriptions;\n+                const {data: tags} = await axios.get(RusfmtTagsUrl);\n+                const reMajorVersion = /v(\\d+)/;\n+                const tagOptions = tags\n+                  .map(tag => tag.name)\n+                  .filter(tag => {\n+                    const versionMatches = tag.match(reMajorVersion);\n+                    if (!versionMatches || !versionMatches[1]) {\n+                      return false;\n+                    }\n+                    const majorVersion = +versionMatches[1];\n+                    // There are some superfluous version tags (e.g. a v8.1 tag), so we do some\n+                    // sanity checking of the tags here.\n+                    return majorVersion >= MajorVersionBounds.min &&\n+                      majorVersion <= MajorVersionBounds.max;\n+                  });\n+                this.versionOptions = this.versionOptions.concat(tagOptions);\n               },\n               mounted() {\n                 if (UrlHash === '') return;"}]}