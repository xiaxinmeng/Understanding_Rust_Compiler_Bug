{"sha": "9635b3083726c3070a52825b3f101ffe362110f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MzViMzA4MzcyNmMzMDcwYTUyODI1YjNmMTAxZmZlMzYyMTEwZjI=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-05-23T16:39:10Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-05-24T00:57:07Z"}, "message": "cleanup warnings from librustc", "tree": {"sha": "2aa56c282b1d3a72f61f199e51b251250605b852", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2aa56c282b1d3a72f61f199e51b251250605b852"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9635b3083726c3070a52825b3f101ffe362110f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9635b3083726c3070a52825b3f101ffe362110f2", "html_url": "https://github.com/rust-lang/rust/commit/9635b3083726c3070a52825b3f101ffe362110f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9635b3083726c3070a52825b3f101ffe362110f2/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4df35f2bcb9a399b2d4a1aa3c1def7682f9cb62", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4df35f2bcb9a399b2d4a1aa3c1def7682f9cb62", "html_url": "https://github.com/rust-lang/rust/commit/a4df35f2bcb9a399b2d4a1aa3c1def7682f9cb62"}], "stats": {"total": 33, "additions": 15, "deletions": 18}, "files": [{"sha": "24be917aedc9f101cb617add441859aa5dd133d6", "filename": "src/librustc/back/rpath.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9635b3083726c3070a52825b3f101ffe362110f2/src%2Flibrustc%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9635b3083726c3070a52825b3f101ffe362110f2/src%2Flibrustc%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Frpath.rs?ref=9635b3083726c3070a52825b3f101ffe362110f2", "patch": "@@ -211,8 +211,8 @@ mod test {\n \n     #[test]\n     fn test_rpaths_to_flags() {\n-        let flags = rpaths_to_flags(~[Path(\"path1\"),\n-                                      Path(\"path2\")]);\n+        let flags = rpaths_to_flags([Path(\"path1\"),\n+                                     Path(\"path2\")]);\n         assert_eq!(flags, ~[~\"-Wl,-rpath,path1\", ~\"-Wl,-rpath,path2\"]);\n     }\n \n@@ -243,10 +243,10 @@ mod test {\n \n     #[test]\n     fn test_minimize2() {\n-        let res = minimize_rpaths(~[Path(\"1a\"), Path(\"2\"), Path(\"2\"),\n-                                    Path(\"1a\"), Path(\"4a\"),Path(\"1a\"),\n-                                    Path(\"2\"), Path(\"3\"), Path(\"4a\"),\n-                                    Path(\"3\")]);\n+        let res = minimize_rpaths([Path(\"1a\"), Path(\"2\"), Path(\"2\"),\n+                                   Path(\"1a\"), Path(\"4a\"),Path(\"1a\"),\n+                                   Path(\"2\"), Path(\"3\"), Path(\"4a\"),\n+                                   Path(\"3\")]);\n         assert_eq!(res, ~[Path(\"1a\"), Path(\"2\"), Path(\"4a\"), Path(\"3\")]);\n     }\n "}, {"sha": "a7cc90f473d4bd2b5955d4b45f72e72ad125ba43", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9635b3083726c3070a52825b3f101ffe362110f2/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9635b3083726c3070a52825b3f101ffe362110f2/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=9635b3083726c3070a52825b3f101ffe362110f2", "patch": "@@ -30,7 +30,7 @@ use core::io;\n use core::os;\n use core::str;\n use core::vec;\n-use extra::getopts::groups::{optopt, optmulti, optflag, optflagopt, getopts};\n+use extra::getopts::groups::{optopt, optmulti, optflag, optflagopt};\n use extra::getopts::{opt_present};\n use extra::getopts;\n use syntax::ast;\n@@ -942,15 +942,15 @@ mod test {\n             @~\"rustc\", matches, diagnostic::emit);\n         let sess = build_session(sessopts, diagnostic::emit);\n         let cfg = build_configuration(sess, @~\"whatever\", &str_input(~\"\"));\n-        assert!((attr::contains_name(cfg, ~\"test\")));\n+        assert!((attr::contains_name(cfg, \"test\")));\n     }\n \n     // When the user supplies --test and --cfg test, don't implicitly add\n     // another --cfg test\n     #[test]\n     fn test_switch_implies_cfg_test_unless_cfg_test() {\n         let matches =\n-            &match getopts(~[~\"--test\", ~\"--cfg=test\"], optgroups()) {\n+            &match getopts([~\"--test\", ~\"--cfg=test\"], optgroups()) {\n               Ok(copy m) => m,\n               Err(copy f) => {\n                 fail!(\"test_switch_implies_cfg_test_unless_cfg_test: %s\", getopts::fail_str(f));\n@@ -960,7 +960,7 @@ mod test {\n             @~\"rustc\", matches, diagnostic::emit);\n         let sess = build_session(sessopts, diagnostic::emit);\n         let cfg = build_configuration(sess, @~\"whatever\", &str_input(~\"\"));\n-        let test_items = attr::find_meta_items_by_name(cfg, ~\"test\");\n+        let test_items = attr::find_meta_items_by_name(cfg, \"test\");\n         assert_eq!(test_items.len(), 1u);\n     }\n }"}, {"sha": "d156457ca8865dcf249a8a5a2436390f717bf861", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9635b3083726c3070a52825b3f101ffe362110f2/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9635b3083726c3070a52825b3f101ffe362110f2/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=9635b3083726c3070a52825b3f101ffe362110f2", "patch": "@@ -10,7 +10,6 @@\n \n use core::prelude::*;\n \n-use driver::session::Session;\n use driver::session;\n use middle::ty;\n use middle::pat_util;"}, {"sha": "cda0dfd12a35efecd3fe5be42b882430d8929019", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9635b3083726c3070a52825b3f101ffe362110f2/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9635b3083726c3070a52825b3f101ffe362110f2/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=9635b3083726c3070a52825b3f101ffe362110f2", "patch": "@@ -535,7 +535,7 @@ pub impl NameBindings {\n                        parent_link: ParentLink,\n                        def_id: Option<def_id>,\n                        kind: ModuleKind,\n-                       sp: span) {\n+                       _sp: span) {\n         match self.type_def {\n             None => {\n                 let module = @mut Module(parent_link, def_id, kind);\n@@ -2586,8 +2586,8 @@ pub impl Resolver {\n                                         (ImportSearch, ImplModuleKind) => {\n                                             self.session.span_err(\n                                                 span,\n-                                                ~\"cannot import from a trait \\\n-                                                  or type implementation\");\n+                                                \"cannot import from a trait \\\n+                                                 or type implementation\");\n                                             return Failed;\n                                         }\n                                         (_, _) => search_module = module_def,"}, {"sha": "381c257f6511cdd16150799432baabddd8710fcb", "filename": "src/librustc/middle/trans/meth.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9635b3083726c3070a52825b3f101ffe362110f2/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9635b3083726c3070a52825b3f101ffe362110f2/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs?ref=9635b3083726c3070a52825b3f101ffe362110f2", "patch": "@@ -873,7 +873,7 @@ pub fn trans_trait_cast(bcx: block,\n                         val: @ast::expr,\n                         id: ast::node_id,\n                         dest: expr::Dest,\n-                        store: ty::TraitStore)\n+                        _store: ty::TraitStore)\n                      -> block {\n     let mut bcx = bcx;\n     let _icx = bcx.insn_ctxt(\"impl::trans_cast\");"}, {"sha": "4d9d9f53e4c16147cc45139d3ef8e75a925f7fa3", "filename": "src/librustc/middle/trans/reflect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9635b3083726c3070a52825b3f101ffe362110f2/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9635b3083726c3070a52825b3f101ffe362110f2/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs?ref=9635b3083726c3070a52825b3f101ffe362110f2", "patch": "@@ -145,7 +145,7 @@ pub impl Reflector {\n     }\n \n     fn leaf(&mut self, name: ~str) {\n-        self.visit(name, ~[]);\n+        self.visit(name, []);\n     }\n \n     // Entrypoint"}, {"sha": "6534a7ba9b0885977052590b527a409936f6a60a", "filename": "src/librustc/util/enum_set.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9635b3083726c3070a52825b3f101ffe362110f2/src%2Flibrustc%2Futil%2Fenum_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9635b3083726c3070a52825b3f101ffe362110f2/src%2Flibrustc%2Futil%2Fenum_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fenum_set.rs?ref=9635b3083726c3070a52825b3f101ffe362110f2", "patch": "@@ -10,8 +10,6 @@\n \n use core::prelude::*;\n \n-use core;\n-\n #[deriving(Eq, IterBytes)]\n pub struct EnumSet<E> {\n     // We must maintain the invariant that no bits are set"}]}