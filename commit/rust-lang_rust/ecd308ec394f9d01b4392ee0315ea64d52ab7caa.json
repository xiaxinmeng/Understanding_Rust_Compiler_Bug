{"sha": "ecd308ec394f9d01b4392ee0315ea64d52ab7caa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjZDMwOGVjMzk0ZjlkMDFiNDM5MmVlMDMxNWVhNjRkNTJhYjdjYWE=", "commit": {"author": {"name": "hosseind75", "email": "dindar95@bk.ru", "date": "2020-09-19T13:21:24Z"}, "committer": {"name": "hosseind88", "email": "hosseind88@mail.ru", "date": "2020-10-09T17:27:44Z"}, "message": "ICEs should print the top of the query stack", "tree": {"sha": "9f5fa2c84485c39169a0f881ce1ab46feee7edf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f5fa2c84485c39169a0f881ce1ab46feee7edf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecd308ec394f9d01b4392ee0315ea64d52ab7caa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecd308ec394f9d01b4392ee0315ea64d52ab7caa", "html_url": "https://github.com/rust-lang/rust/commit/ecd308ec394f9d01b4392ee0315ea64d52ab7caa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecd308ec394f9d01b4392ee0315ea64d52ab7caa/comments", "author": {"login": "hosseind75", "id": 69863841, "node_id": "MDQ6VXNlcjY5ODYzODQx", "avatar_url": "https://avatars.githubusercontent.com/u/69863841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hosseind75", "html_url": "https://github.com/hosseind75", "followers_url": "https://api.github.com/users/hosseind75/followers", "following_url": "https://api.github.com/users/hosseind75/following{/other_user}", "gists_url": "https://api.github.com/users/hosseind75/gists{/gist_id}", "starred_url": "https://api.github.com/users/hosseind75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hosseind75/subscriptions", "organizations_url": "https://api.github.com/users/hosseind75/orgs", "repos_url": "https://api.github.com/users/hosseind75/repos", "events_url": "https://api.github.com/users/hosseind75/events{/privacy}", "received_events_url": "https://api.github.com/users/hosseind75/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hosseind88", "id": 72156162, "node_id": "MDQ6VXNlcjcyMTU2MTYy", "avatar_url": "https://avatars.githubusercontent.com/u/72156162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hosseind88", "html_url": "https://github.com/hosseind88", "followers_url": "https://api.github.com/users/hosseind88/followers", "following_url": "https://api.github.com/users/hosseind88/following{/other_user}", "gists_url": "https://api.github.com/users/hosseind88/gists{/gist_id}", "starred_url": "https://api.github.com/users/hosseind88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hosseind88/subscriptions", "organizations_url": "https://api.github.com/users/hosseind88/orgs", "repos_url": "https://api.github.com/users/hosseind88/repos", "events_url": "https://api.github.com/users/hosseind88/events{/privacy}", "received_events_url": "https://api.github.com/users/hosseind88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adb7fc6283711c881186ca85bb9ac3bb8add099b", "url": "https://api.github.com/repos/rust-lang/rust/commits/adb7fc6283711c881186ca85bb9ac3bb8add099b", "html_url": "https://github.com/rust-lang/rust/commit/adb7fc6283711c881186ca85bb9ac3bb8add099b"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "c88dffc88f422a74af75400aae8c91d3b51646c9", "filename": "src/driver.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ecd308ec394f9d01b4392ee0315ea64d52ab7caa/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecd308ec394f9d01b4392ee0315ea64d52ab7caa/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=ecd308ec394f9d01b4392ee0315ea64d52ab7caa", "patch": "@@ -274,12 +274,7 @@ fn report_clippy_ice(info: &panic::PanicInfo<'_>, bug_report_url: &str) {\n         handler.note_without_error(&note);\n     }\n \n-    // If backtraces are enabled, also print the query stack\n-    let backtrace = env::var_os(\"RUST_BACKTRACE\").map_or(false, |x| &x != \"0\");\n-\n-    if backtrace {\n-        TyCtxt::try_print_query_stack(&handler);\n-    }\n+    TyCtxt::try_print_query_stack(&handler, Some(2));\n }\n \n fn toolchain_path(home: Option<String>, toolchain: Option<String>) -> Option<PathBuf> {"}]}