{"sha": "9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllZDlkNmQwZDA5YTY5MGU4MTg0MWYxZmMyZTAyZjE2YmM5ZWUyYzU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-11-02T21:07:56Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-11-02T21:07:56Z"}, "message": "resolve: Filter away macro prelude in modules with `#[no_implicit_prelude]` on 2018 edition", "tree": {"sha": "03dc78f8f3959e3f14ec06f11eb7301bc7087751", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03dc78f8f3959e3f14ec06f11eb7301bc7087751"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5", "html_url": "https://github.com/rust-lang/rust/commit/9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e53a5ffd6b1c28903b4ad9a4c433fd554802cd9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e53a5ffd6b1c28903b4ad9a4c433fd554802cd9c", "html_url": "https://github.com/rust-lang/rust/commit/e53a5ffd6b1c28903b4ad9a4c433fd554802cd9c"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "d5513080daf5fbeb9f271f37f7b234dcbf38d49b", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5", "patch": "@@ -963,6 +963,10 @@ impl Session {\n         self.opts.debugging_opts.teach && self.diagnostic().must_teach(code)\n     }\n \n+    pub fn rust_2015(&self) -> bool {\n+        self.opts.edition == Edition::Edition2015\n+    }\n+\n     /// Are we allowed to use features from the Rust 2018 edition?\n     pub fn rust_2018(&self) -> bool {\n         self.opts.edition >= Edition::Edition2018"}, {"sha": "83c32a579ccb4f81db8236559207e392302a0449", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5", "patch": "@@ -660,10 +660,13 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                     binding.map(|binding| (binding, Flags::MODULE, Flags::empty()))\n                 }\n                 WhereToResolve::MacroUsePrelude => {\n-                    match self.macro_use_prelude.get(&ident.name).cloned() {\n-                        Some(binding) => Ok((binding, Flags::PRELUDE, Flags::empty())),\n-                        None => Err(Determinacy::Determined),\n+                    let mut result = Err(Determinacy::Determined);\n+                    if use_prelude || self.session.rust_2015() {\n+                        if let Some(binding) = self.macro_use_prelude.get(&ident.name).cloned() {\n+                            result = Ok((binding, Flags::PRELUDE, Flags::empty()));\n+                        }\n                     }\n+                    result\n                 }\n                 WhereToResolve::BuiltinMacros => {\n                     match self.builtin_macros.get(&ident.name).cloned() {\n@@ -682,7 +685,8 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                     }\n                 }\n                 WhereToResolve::LegacyPluginHelpers => {\n-                    if self.session.plugin_attributes.borrow().iter()\n+                    if (use_prelude || self.session.rust_2015()) &&\n+                       self.session.plugin_attributes.borrow().iter()\n                                                      .any(|(name, _)| ident.name == &**name) {\n                         let binding = (Def::NonMacroAttr(NonMacroAttrKind::LegacyPluginHelper),\n                                        ty::Visibility::Public, ident.span, Mark::root())"}, {"sha": "3ad7435fecf29790d20ea7d1b500432b6b48f817", "filename": "src/test/ui/hygiene/no_implicit_prelude-2018.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude-2018.rs?ref=9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5", "patch": "@@ -0,0 +1,11 @@\n+// edition:2018\n+\n+#[no_implicit_prelude]\n+mod bar {\n+    fn f() {\n+        ::std::print!(\"\"); // OK\n+        print!(); //~ ERROR cannot find macro `print!` in this scope\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "370fc9784ad4da3357ec5bf7722d94ef2d4b8d86", "filename": "src/test/ui/hygiene/no_implicit_prelude-2018.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude-2018.stderr?ref=9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5", "patch": "@@ -0,0 +1,10 @@\n+error: cannot find macro `print!` in this scope\n+  --> $DIR/no_implicit_prelude-2018.rs:7:9\n+   |\n+LL |         print!(); //~ ERROR cannot find macro `print!` in this scope\n+   |         ^^^^^\n+   |\n+   = help: have you added the `#[macro_use]` on the module/import?\n+\n+error: aborting due to previous error\n+"}, {"sha": "5b6041945abea76a2f9d57e39d0b591a66ab9798", "filename": "src/test/ui/hygiene/no_implicit_prelude.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.rs?ref=9ed9d6d0d09a690e81841f1fc2e02f16bc9ee2c5", "patch": "@@ -21,7 +21,10 @@ mod bar {\n         Vec::new(); //~ ERROR failed to resolve\n         ().clone() //~ ERROR no method named `clone` found\n     }\n-    fn f() { ::foo::m!(); }\n+    fn f() {\n+        ::foo::m!();\n+        println!(); // OK on 2015 edition (at least for now)\n+    }\n }\n \n fn main() {}"}]}