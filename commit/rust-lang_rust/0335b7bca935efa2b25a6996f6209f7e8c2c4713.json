{"sha": "0335b7bca935efa2b25a6996f6209f7e8c2c4713", "node_id": "C_kwDOAAsO6NoAKDAzMzViN2JjYTkzNWVmYTJiMjVhNjk5NmY2MjA5ZjdlOGMyYzQ3MTM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-03T13:44:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-03T13:44:18Z"}, "message": "Rollup merge of #92402 - pr2502:while-let-typo, r=oli-obk\n\nSuggest while let x = y when encountering while x = y\n\nExtends #75931 to also detect where the `let` might be missing from `while let` expressions.", "tree": {"sha": "45e05c0631c0ebf95be54a6c6a56a11521eb0419", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45e05c0631c0ebf95be54a6c6a56a11521eb0419"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0335b7bca935efa2b25a6996f6209f7e8c2c4713", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh0v2zCRBK7hj4Ov3rIwAAdhAIAICgO9pw/1ZX/Iw0kUgW71RX\naip6jVX9sIFEXuZYJXJbZW6M874TgdA2+vgVZcB512V4NdNdpwL0nZyTRGDKybf1\nMdZXQTVLn0Rwf2/43P/PiTSSWBAmbJnSyVLfSfVm8vAjKAasmKnqbTc1Zr+uFt5T\nuDXdrZX1BjEEIyShJkBMZtegDO+6V5SYPZtE2d1s5rkMIlQPnwptnGNr3cSyNPNZ\nSPEUTp8gLipsg5hSEbCh6Q0ERjUkRhyRgnVbAzJifIi0A1y9QSvVGOF9pW5Bk5SX\nNkX5w3x/K1NNe4/3HMJsS6KkLwd4d35hcw+z4U5dpenQZKy/HT9uWNikot9/6Bw=\n=4262\n-----END PGP SIGNATURE-----\n", "payload": "tree 45e05c0631c0ebf95be54a6c6a56a11521eb0419\nparent fd09f342f34b27d2439576d1ab681d42b2b8fac8\nparent 874cd08e230f38e9640f995c0286c540a3a9a60d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1641217458 +0100\ncommitter GitHub <noreply@github.com> 1641217458 +0100\n\nRollup merge of #92402 - pr2502:while-let-typo, r=oli-obk\n\nSuggest while let x = y when encountering while x = y\n\nExtends #75931 to also detect where the `let` might be missing from `while let` expressions.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0335b7bca935efa2b25a6996f6209f7e8c2c4713", "html_url": "https://github.com/rust-lang/rust/commit/0335b7bca935efa2b25a6996f6209f7e8c2c4713", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0335b7bca935efa2b25a6996f6209f7e8c2c4713/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd09f342f34b27d2439576d1ab681d42b2b8fac8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd09f342f34b27d2439576d1ab681d42b2b8fac8", "html_url": "https://github.com/rust-lang/rust/commit/fd09f342f34b27d2439576d1ab681d42b2b8fac8"}, {"sha": "874cd08e230f38e9640f995c0286c540a3a9a60d", "url": "https://api.github.com/repos/rust-lang/rust/commits/874cd08e230f38e9640f995c0286c540a3a9a60d", "html_url": "https://github.com/rust-lang/rust/commit/874cd08e230f38e9640f995c0286c540a3a9a60d"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "573050231383838bf1777915d2160216d190ae6c", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0335b7bca935efa2b25a6996f6209f7e8c2c4713/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0335b7bca935efa2b25a6996f6209f7e8c2c4713/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=0335b7bca935efa2b25a6996f6209f7e8c2c4713", "patch": "@@ -2379,7 +2379,9 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n             ExprKind::While(ref cond, ref block, label) => {\n                 self.with_resolved_label(label, expr.id, |this| {\n                     this.with_rib(ValueNS, NormalRibKind, |this| {\n+                        let old = this.diagnostic_metadata.in_if_condition.replace(cond);\n                         this.visit_expr(cond);\n+                        this.diagnostic_metadata.in_if_condition = old;\n                         this.visit_block(block);\n                     })\n                 });"}, {"sha": "dbbcdee3c19f67ca6f6881909fcfde7fc84ac524", "filename": "src/test/ui/suggestions/while-let-typo.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0335b7bca935efa2b25a6996f6209f7e8c2c4713/src%2Ftest%2Fui%2Fsuggestions%2Fwhile-let-typo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0335b7bca935efa2b25a6996f6209f7e8c2c4713/src%2Ftest%2Fui%2Fsuggestions%2Fwhile-let-typo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fwhile-let-typo.rs?ref=0335b7bca935efa2b25a6996f6209f7e8c2c4713", "patch": "@@ -0,0 +1,9 @@\n+fn main() {\n+    let foo = Some(0);\n+    let bar = None;\n+    while Some(x) = foo {} //~ ERROR cannot find value `x` in this scope\n+    while Some(foo) = bar {}\n+    while 3 = foo {} //~ ERROR mismatched types\n+    while Some(3) = foo {} //~ ERROR invalid left-hand side of assignment\n+    while x = 5 {} //~ ERROR cannot find value `x` in this scope\n+}"}, {"sha": "7cc2ed3149b14602973497887c294cce688bf8e2", "filename": "src/test/ui/suggestions/while-let-typo.stderr", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/0335b7bca935efa2b25a6996f6209f7e8c2c4713/src%2Ftest%2Fui%2Fsuggestions%2Fwhile-let-typo.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0335b7bca935efa2b25a6996f6209f7e8c2c4713/src%2Ftest%2Fui%2Fsuggestions%2Fwhile-let-typo.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fwhile-let-typo.stderr?ref=0335b7bca935efa2b25a6996f6209f7e8c2c4713", "patch": "@@ -0,0 +1,45 @@\n+error[E0425]: cannot find value `x` in this scope\n+  --> $DIR/while-let-typo.rs:4:16\n+   |\n+LL |     while Some(x) = foo {}\n+   |                ^ not found in this scope\n+   |\n+help: you might have meant to use pattern matching\n+   |\n+LL |     while let Some(x) = foo {}\n+   |           +++\n+\n+error[E0425]: cannot find value `x` in this scope\n+  --> $DIR/while-let-typo.rs:8:11\n+   |\n+LL |     while x = 5 {}\n+   |           ^ not found in this scope\n+   |\n+help: you might have meant to use pattern matching\n+   |\n+LL |     while let x = 5 {}\n+   |           +++\n+\n+error[E0308]: mismatched types\n+  --> $DIR/while-let-typo.rs:6:11\n+   |\n+LL |     while 3 = foo {}\n+   |           ^^^^^^^ expected `bool`, found `()`\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/while-let-typo.rs:7:19\n+   |\n+LL |     while Some(3) = foo {}\n+   |                -  ^\n+   |                |\n+   |                cannot assign to this expression\n+   |\n+help: you might have meant to use pattern destructuring\n+   |\n+LL |     while let Some(3) = foo {}\n+   |           +++\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0070, E0308, E0425.\n+For more information about an error, try `rustc --explain E0070`."}]}