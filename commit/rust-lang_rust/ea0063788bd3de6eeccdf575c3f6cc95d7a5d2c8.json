{"sha": "ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMDA2Mzc4OGJkM2RlNmVlY2NkZjU3NWMzZjZjYzk1ZDdhNWQyYzg=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-04-13T03:24:07Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-04-13T03:24:07Z"}, "message": "Add a run-fail test for result::get, get rid of a FIXME. Also some random other tests, mostly xfailed.", "tree": {"sha": "51da4f21a10ea93aec67e1ed15a371af67e8d5ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51da4f21a10ea93aec67e1ed15a371af67e8d5ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8", "html_url": "https://github.com/rust-lang/rust/commit/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79e572ebbb4ed7760e17a012b743eba85b902497", "url": "https://api.github.com/repos/rust-lang/rust/commits/79e572ebbb4ed7760e17a012b743eba85b902497", "html_url": "https://github.com/rust-lang/rust/commit/79e572ebbb4ed7760e17a012b743eba85b902497"}], "stats": {"total": 114, "additions": 113, "deletions": 1}, "files": [{"sha": "8bba725d21ad135ff0f2aaee30d06ffc862d8949", "filename": "src/libcore/result.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8", "patch": "@@ -21,7 +21,6 @@ pure fn get<T: copy, U>(res: result<T, U>) -> T {\n     alt res {\n       ok(t) { t }\n       err(the_err) {\n-        // FIXME: have a run-fail test for this\n         unchecked{ fail #fmt(\"get called on error result: %?\", the_err); }\n       }\n     }"}, {"sha": "549e37acdad83aaf9546203e1c3e792222b51a03", "filename": "src/test/compile-fail/issue-1451.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Ftest%2Fcompile-fail%2Fissue-1451.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Ftest%2Fcompile-fail%2Fissue-1451.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1451.rs?ref=ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8", "patch": "@@ -0,0 +1,23 @@\n+// xfail-test\n+type T = { mut f: fn@() };\n+type S = { f: fn@() };\n+\n+fn fooS(t: S) {\n+}\n+\n+fn fooT(t: T) {\n+}\n+\n+fn bar() {\n+}\n+\n+fn main() {\n+    let x: fn@() = bar;\n+    fooS({f: x});\n+    fooS({f: bar});\n+\n+    let x: fn@() = bar;\n+    fooT({mut f: x});\n+    fooT({mut f: bar});\n+}\n+"}, {"sha": "6937dbdce0728304ccbfef3c18900dcab6749845", "filename": "src/test/compile-fail/issue-1871.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Ftest%2Fcompile-fail%2Fissue-1871.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Ftest%2Fcompile-fail%2Fissue-1871.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1871.rs?ref=ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8", "patch": "@@ -0,0 +1,11 @@\n+// xfail-test\n+fn main() {\n+  let f = 42;\n+\n+  let _g = if f < 5 {\n+      f.honk();\n+  }\n+  else {\n+    12\n+  };\n+}"}, {"sha": "3b8e693e9699da51889fdb0477126e6975eac80d", "filename": "src/test/run-fail/result-get-fail.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Ftest%2Frun-fail%2Fresult-get-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Ftest%2Frun-fail%2Fresult-get-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fresult-get-fail.rs?ref=ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8", "patch": "@@ -0,0 +1,4 @@\n+// error-pattern:get called on error result: \"kitty\"\n+fn main() {\n+  log(error, result::get(result::err(\"kitty\")));\n+}\n\\ No newline at end of file"}, {"sha": "984b57bfed62ec8ee128648fee936b8b887fc10b", "filename": "src/test/run-pass/issue-1466.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Ftest%2Frun-pass%2Fissue-1466.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Ftest%2Frun-pass%2Fissue-1466.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-1466.rs?ref=ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    let _x = @{a: @10, b: ~true};\n+}"}, {"sha": "35926fa9ee37c259d985be9119f0da1a19139063", "filename": "src/test/run-pass/issue-1516.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Ftest%2Frun-pass%2Fissue-1516.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Ftest%2Frun-pass%2Fissue-1516.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-1516.rs?ref=ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8", "patch": "@@ -0,0 +1,3 @@\n+// xfail-test\n+fn main() {  let early_error: fn@(str) -> !  = {|msg| fail }; }\n+"}, {"sha": "8035ad5f038d035d2041e3816a013593ca241c6f", "filename": "src/test/run-pass/issue-1866.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Ftest%2Frun-pass%2Fissue-1866.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Ftest%2Frun-pass%2Fissue-1866.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-1866.rs?ref=ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8", "patch": "@@ -0,0 +1,16 @@\n+// xfail-test\n+mod a {\n+    type rust_task = uint;\n+    native mod rustrt {\n+        fn rust_task_is_unwinding(rt: *rust_task) -> bool;\n+    }\n+}\n+\n+mod b {\n+    type rust_task = bool;\n+    native mod rustrt {\n+        fn rust_task_is_unwinding(rt: *rust_task) -> bool;\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "0cd4e0fdfc596ccead03244ae8f87c69d02ea925", "filename": "src/test/run-pass/issue-1926.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Ftest%2Frun-pass%2Fissue-1926.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8/src%2Ftest%2Frun-pass%2Fissue-1926.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-1926.rs?ref=ea0063788bd3de6eeccdf575c3f6cc95d7a5d2c8", "patch": "@@ -0,0 +1,53 @@\n+// xfail-test\n+// fails pretty printing for some reason\n+use rustc;\n+import rustc::driver::diagnostic;\n+import rustc::syntax;\n+import rustc::syntax::ast;\n+import rustc::syntax::codemap;\n+import rustc::syntax::print::pprust;\n+import rustc::syntax::parse::parser;\n+\n+fn new_parse_sess() -> parser::parse_sess {\n+    let cm = codemap::new_codemap();\n+    let handler = diagnostic::mk_handler(option::none);\n+    let sess = @{\n+        cm: cm,\n+        mut next_id: 1,\n+        span_diagnostic: diagnostic::mk_span_handler(handler, cm),\n+        mut chpos: 0u,\n+        mut byte_pos: 0u\n+    };\n+    ret sess;\n+}\n+\n+iface fake_ext_ctxt {\n+    fn session() -> fake_session;\n+    fn cfg() -> ast::crate_cfg;\n+    fn parse_sess() -> parser::parse_sess;\n+}\n+\n+type fake_options = {cfg: ast::crate_cfg};\n+\n+type fake_session = {opts: @fake_options,\n+                     parse_sess: parser::parse_sess};\n+\n+impl of fake_ext_ctxt for fake_session {\n+    fn session() -> fake_session {self}\n+    fn cfg() -> ast::crate_cfg { self.opts.cfg }\n+    fn parse_sess() -> parser::parse_sess { self.parse_sess }\n+}\n+\n+fn mk_ctxt() -> fake_ext_ctxt {\n+    let opts : fake_options = {cfg: []};\n+    {opts: @opts, parse_sess: new_parse_sess()} as fake_ext_ctxt\n+}\n+\n+\n+fn main() {\n+    let ext_cx = mk_ctxt();\n+    let s = #ast(expr){__s};\n+    let e = #ast(expr){__e};\n+    let f = #ast(expr){$(s).foo {|__e| $(e)}};\n+    log(error, pprust::expr_to_str(f));\n+}"}]}